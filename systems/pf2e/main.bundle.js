(()=>{var deferred,__webpack_modules__={44958:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__)},3314:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__)},90615:()=>{},25157:()=>{},36211:()=>{},89597:()=>{},65362:()=>{},77539:()=>{},72475:()=>{},57542:()=>{},48012:()=>{},9959:()=>{},99471:()=>{},78703:()=>{},17907:()=>{},10818:()=>{},26209:()=>{},3111:()=>{},51992:()=>{},87287:()=>{},42242:()=>{},24444:()=>{},54327:()=>{},89739:()=>{},87195:()=>{},8161:()=>{},35458:()=>{},89148:()=>{},67641:()=>{},89440:()=>{},33681:()=>{},93509:()=>{},97784:()=>{},69887:()=>{},45093:()=>{},71296:()=>{},43662:()=>{},14278:()=>{},44859:()=>{},16681:()=>{},73536:()=>{},8939:()=>{},81249:()=>{},30052:()=>{},77581:()=>{},92244:()=>{},62909:()=>{},66827:()=>{},24866:()=>{},52086:()=>{},1874:()=>{},93861:()=>{},76844:()=>{},57511:()=>{},62573:()=>{},1538:()=>{},78350:()=>{},23013:()=>{},55145:()=>{},13346:()=>{},12574:()=>{},6517:()=>{},8005:()=>{},82208:()=>{},83663:()=>{},32543:()=>{},46749:()=>{},66287:()=>{},60720:()=>{},32094:()=>{},96416:()=>{},42863:()=>{},1112:()=>{},60567:()=>{},91805:()=>{},91259:()=>{},76285:()=>{},25842:()=>{},49702:()=>{},66801:()=>{},65102:()=>{},49826:()=>{},87813:()=>{},63480:()=>{},67176:()=>{},40216:()=>{},77308:()=>{},83815:()=>{},15488:()=>{},37770:()=>{},62888:()=>{},41264:()=>{},99073:()=>{},3957:()=>{},37607:()=>{},42617:()=>{},78521:()=>{},50339:()=>{},1615:()=>{},99387:()=>{},45211:()=>{},55020:()=>{},6920:()=>{},74641:()=>{},68709:()=>{},29873:()=>{},22019:()=>{},9816:()=>{},24302:()=>{},13651:()=>{},63190:()=>{},76071:()=>{},95625:()=>{},79175:()=>{},83784:()=>{},71591:()=>{},60015:()=>{},82730:()=>{},45758:()=>{},7794:()=>{},28168:()=>{},49669:()=>{},33437:()=>{},65616:()=>{},94344:()=>{},75370:()=>{},50094:()=>{},93337:()=>{},55022:()=>{},78038:()=>{},57648:()=>{},18867:()=>{},68047:()=>{},22085:()=>{},50848:()=>{},2392:()=>{},78247:()=>{},64926:()=>{},31073:()=>{},45190:()=>{},84205:()=>{},32797:()=>{},7984:()=>{},76444:()=>{},52095:()=>{},65462:()=>{},29679:()=>{},92760:()=>{},75164:()=>{},81399:()=>{},25685:()=>{},10719:()=>{},67777:()=>{},34165:()=>{},34826:()=>{},1351:()=>{},51970:()=>{},81525:()=>{},41402:()=>{},77101:()=>{},89208:()=>{},21119:()=>{},13172:()=>{},76542:()=>{},25598:()=>{},82079:()=>{},10304:()=>{},45449:()=>{},10771:()=>{},43646:()=>{},7619:()=>{},49087:()=>{},6765:()=>{},65373:()=>{},37782:()=>{},73655:()=>{},6866:()=>{},21448:()=>{},38692:()=>{},7478:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TemplatePreloader=void 0,__webpack_require__(90615),__webpack_require__(25157),__webpack_require__(36211),__webpack_require__(89597),__webpack_require__(65362),__webpack_require__(77539),__webpack_require__(72475),__webpack_require__(57542),__webpack_require__(48012),__webpack_require__(9959),__webpack_require__(99471),__webpack_require__(78703),__webpack_require__(17907),__webpack_require__(10818),__webpack_require__(26209),__webpack_require__(3111),__webpack_require__(51992),__webpack_require__(87287),__webpack_require__(42242),__webpack_require__(24444),__webpack_require__(54327),__webpack_require__(89739),__webpack_require__(87195),__webpack_require__(8161),__webpack_require__(35458),__webpack_require__(89148),__webpack_require__(67641),__webpack_require__(89440),__webpack_require__(33681),__webpack_require__(93509),__webpack_require__(97784),__webpack_require__(69887),__webpack_require__(45093),__webpack_require__(71296),__webpack_require__(43662),__webpack_require__(14278),__webpack_require__(44859),__webpack_require__(16681),__webpack_require__(73536),__webpack_require__(8939),__webpack_require__(81249),__webpack_require__(30052),__webpack_require__(77581),__webpack_require__(92244),__webpack_require__(62909),__webpack_require__(66827),__webpack_require__(24866),__webpack_require__(52086),__webpack_require__(1874),__webpack_require__(93861),__webpack_require__(76844),__webpack_require__(57511),__webpack_require__(62573),__webpack_require__(1538),__webpack_require__(78350),__webpack_require__(23013),__webpack_require__(55145),__webpack_require__(13346),__webpack_require__(12574),__webpack_require__(6517),__webpack_require__(8005),__webpack_require__(82208),__webpack_require__(83663),__webpack_require__(32543),__webpack_require__(46749),__webpack_require__(66287),__webpack_require__(60720),__webpack_require__(32094),__webpack_require__(96416),__webpack_require__(42863),__webpack_require__(1112),__webpack_require__(60567),__webpack_require__(91805),__webpack_require__(91259),__webpack_require__(76285),__webpack_require__(25842),__webpack_require__(49702),__webpack_require__(66801),__webpack_require__(65102),__webpack_require__(49826),__webpack_require__(87813),__webpack_require__(63480),__webpack_require__(67176),__webpack_require__(40216),__webpack_require__(77308),__webpack_require__(83815),__webpack_require__(15488),__webpack_require__(37770),__webpack_require__(62888),__webpack_require__(41264),__webpack_require__(99073),__webpack_require__(3957),__webpack_require__(37607),__webpack_require__(42617),__webpack_require__(78521),__webpack_require__(50339),__webpack_require__(1615),__webpack_require__(99387),__webpack_require__(45211),__webpack_require__(55020),__webpack_require__(6920),__webpack_require__(74641),__webpack_require__(68709),__webpack_require__(29873),__webpack_require__(22019),__webpack_require__(9816),__webpack_require__(24302),__webpack_require__(13651),__webpack_require__(63190),__webpack_require__(76071),__webpack_require__(95625),__webpack_require__(79175),__webpack_require__(83784),__webpack_require__(71591),__webpack_require__(60015),__webpack_require__(82730),__webpack_require__(45758),__webpack_require__(7794),__webpack_require__(28168),__webpack_require__(49669),__webpack_require__(33437),__webpack_require__(65616),__webpack_require__(94344),__webpack_require__(75370),__webpack_require__(50094),__webpack_require__(93337),__webpack_require__(55022),__webpack_require__(78038),__webpack_require__(57648),__webpack_require__(18867),__webpack_require__(68047),__webpack_require__(22085),__webpack_require__(50848),__webpack_require__(2392),__webpack_require__(78247),__webpack_require__(64926),__webpack_require__(31073),__webpack_require__(45190),__webpack_require__(84205),__webpack_require__(32797),__webpack_require__(7984),__webpack_require__(76444),__webpack_require__(52095),__webpack_require__(65462),__webpack_require__(29679),__webpack_require__(92760),__webpack_require__(75164),__webpack_require__(81399),__webpack_require__(25685),__webpack_require__(10719),__webpack_require__(67777),__webpack_require__(34165),__webpack_require__(34826),__webpack_require__(1351),__webpack_require__(51970),__webpack_require__(81525),__webpack_require__(41402),__webpack_require__(77101),__webpack_require__(89208),__webpack_require__(21119),__webpack_require__(13172),__webpack_require__(76542),__webpack_require__(25598),__webpack_require__(82079),__webpack_require__(10304),__webpack_require__(45449),__webpack_require__(10771),__webpack_require__(43646),__webpack_require__(7619),__webpack_require__(49087),__webpack_require__(6765),__webpack_require__(65373),__webpack_require__(37782),__webpack_require__(73655),__webpack_require__(6866),__webpack_require__(21448),__webpack_require__(38692);exports.TemplatePreloader=class{static async preloadHandlebarsTemplates(){return loadTemplates(["systems/pf2e/templates/actors/add-coins.html","systems/pf2e/templates/actors/add-combat-proficiency-dialog.html","systems/pf2e/templates/actors/animal-companion-sheet.html","systems/pf2e/templates/actors/character/icons/d20.html","systems/pf2e/templates/actors/character/icons/plus.html","systems/pf2e/templates/actors/character/limited.html","systems/pf2e/templates/actors/character/partials/abilities.html","systems/pf2e/templates/actors/character/partials/background.html","systems/pf2e/templates/actors/character/partials/header.html","systems/pf2e/templates/actors/character/partials/modifiers-tooltip.html","systems/pf2e/templates/actors/character/partials/proficiencylevels-dropdown.html","systems/pf2e/templates/actors/character/partials/traits.html","systems/pf2e/templates/actors/character/sheet.html","systems/pf2e/templates/actors/character/sidebar/armor-class.html","systems/pf2e/templates/actors/character/sidebar/class-dc.html","systems/pf2e/templates/actors/character/sidebar/health.html","systems/pf2e/templates/actors/character/sidebar/initiative.html","systems/pf2e/templates/actors/character/sidebar/perception.html","systems/pf2e/templates/actors/character/sidebar/resistances.html","systems/pf2e/templates/actors/character/sidebar/saves.html","systems/pf2e/templates/actors/character/sidebar/stamina.html","systems/pf2e/templates/actors/character/tabs/actions.html","systems/pf2e/templates/actors/character/tabs/biography.html","systems/pf2e/templates/actors/character/tabs/crafting.html","systems/pf2e/templates/actors/character/tabs/effects.html","systems/pf2e/templates/actors/character/tabs/feats.html","systems/pf2e/templates/actors/character/tabs/general.html","systems/pf2e/templates/actors/character/tabs/inventory.html","systems/pf2e/templates/actors/character/tabs/pfs.html","systems/pf2e/templates/actors/character/tabs/proficiencies.html","systems/pf2e/templates/actors/character/tabs/spellcasting.html","systems/pf2e/templates/actors/crafting-entry-alchemical.html","systems/pf2e/templates/actors/crafting-entry-list.html","systems/pf2e/templates/actors/crafting-select-spell-dialog.html","systems/pf2e/templates/actors/delete-condition-dialog.html","systems/pf2e/templates/actors/delete-item-dialog.html","systems/pf2e/templates/actors/delete-spellcasting-dialog.html","systems/pf2e/templates/actors/distribute-coins.html","systems/pf2e/templates/actors/familiar-sheet.html","systems/pf2e/templates/actors/hazard-sheet-no-edit.html","systems/pf2e/templates/actors/hazard-sheet.html","systems/pf2e/templates/actors/identify-item-chat-skill-checks.html","systems/pf2e/templates/actors/identify-item.html","systems/pf2e/templates/actors/limited/npc-sheet.html","systems/pf2e/templates/actors/loot/inventory.html","systems/pf2e/templates/actors/loot/loot-npcs-popup.html","systems/pf2e/templates/actors/loot/sheet.html","systems/pf2e/templates/actors/loot/sidebar.html","systems/pf2e/templates/actors/npc-sheet-no-edit.html","systems/pf2e/templates/actors/npc-sheet.html","systems/pf2e/templates/actors/npc/data-entry-sheet.html","systems/pf2e/templates/actors/npc/forms/npc-skills-editor.html","systems/pf2e/templates/actors/npc/loot-sheet.html","systems/pf2e/templates/actors/npc/partials/action.html","systems/pf2e/templates/actors/npc/partials/attack.html","systems/pf2e/templates/actors/npc/partials/header.html","systems/pf2e/templates/actors/npc/partials/item.html","systems/pf2e/templates/actors/npc/partials/sidebar.html","systems/pf2e/templates/actors/npc/sheet.html","systems/pf2e/templates/actors/npc/tabs/inventory.html","systems/pf2e/templates/actors/npc/tabs/main.html","systems/pf2e/templates/actors/npc/tabs/notes.html","systems/pf2e/templates/actors/npc/tabs/spells.html","systems/pf2e/templates/actors/partials/item-line.html","systems/pf2e/templates/actors/recall-knowledge.html","systems/pf2e/templates/actors/remove-coins.html","systems/pf2e/templates/actors/sell-all-treasure-dialog.html","systems/pf2e/templates/actors/spellcasting-dialog.html","systems/pf2e/templates/actors/spellcasting-spell-list.html","systems/pf2e/templates/actors/trait-selector.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-armorclass.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-health.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-resistances.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-saves.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-actions.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-description.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-details.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-inventory.html","systems/pf2e/templates/actors/vehicle/vehicle-header.html","systems/pf2e/templates/actors/vehicle/vehicle-sheet.html","systems/pf2e/templates/chat/action-card.html","systems/pf2e/templates/chat/action/content.html","systems/pf2e/templates/chat/action/flavor.html","systems/pf2e/templates/chat/armor-card.html","systems/pf2e/templates/chat/backpack-card.html","systems/pf2e/templates/chat/check-modifiers-dialog.html","systems/pf2e/templates/chat/condition-card.html","systems/pf2e/templates/chat/consumable-card.html","systems/pf2e/templates/chat/crafting-result.html","systems/pf2e/templates/chat/damage/buttons.html","systems/pf2e/templates/chat/damage/damage-card-content.html","systems/pf2e/templates/chat/damage/damage-card-flavor.html","systems/pf2e/templates/chat/damage/result-message.html","systems/pf2e/templates/chat/effect-card.html","systems/pf2e/templates/chat/equipment-card.html","systems/pf2e/templates/chat/feat-card.html","systems/pf2e/templates/chat/melee-card.html","systems/pf2e/templates/chat/roll-dialog.html","systems/pf2e/templates/chat/short-rest.html","systems/pf2e/templates/chat/spell-card.html","systems/pf2e/templates/chat/strike-card.html","systems/pf2e/templates/chat/treasure-card.html","systems/pf2e/templates/chat/weapon-card.html","systems/pf2e/templates/gm/travel/travel-speed-sheet.html","systems/pf2e/templates/items/action-details.html","systems/pf2e/templates/items/action-sidebar.html","systems/pf2e/templates/items/activation-panel.html","systems/pf2e/templates/items/ancestry-details.html","systems/pf2e/templates/items/ancestry-sidebar.html","systems/pf2e/templates/items/armor-details.html","systems/pf2e/templates/items/armor-sidebar.html","systems/pf2e/templates/items/background-details.html","systems/pf2e/templates/items/background-sidebar.html","systems/pf2e/templates/items/backpack-details.html","systems/pf2e/templates/items/backpack-sidebar.html","systems/pf2e/templates/items/book-details.html","systems/pf2e/templates/items/book-sidebar.html","systems/pf2e/templates/items/class-details.html","systems/pf2e/templates/items/condition-details.html","systems/pf2e/templates/items/condition-sidebar.html","systems/pf2e/templates/items/consumable-details.html","systems/pf2e/templates/items/consumable-sidebar.html","systems/pf2e/templates/items/deity-details.html","systems/pf2e/templates/items/deity-sidebar.html","systems/pf2e/templates/items/effect-sidebar.html","systems/pf2e/templates/items/equipment-details.html","systems/pf2e/templates/items/equipment-sidebar.html","systems/pf2e/templates/items/feat-details.html","systems/pf2e/templates/items/feat-sidebar.html","systems/pf2e/templates/items/formula-sidebar.html","systems/pf2e/templates/items/item-sheet.html","systems/pf2e/templates/items/kit-details.html","systems/pf2e/templates/items/kit-sidebar.html","systems/pf2e/templates/items/lore-details.html","systems/pf2e/templates/items/lore-sidebar.html","systems/pf2e/templates/items/melee-details.html","systems/pf2e/templates/items/mystify-panel.html","systems/pf2e/templates/items/rules-panel.html","systems/pf2e/templates/items/spell-details.html","systems/pf2e/templates/items/spell-sidebar.html","systems/pf2e/templates/items/treasure-sidebar.html","systems/pf2e/templates/items/weapon-details.html","systems/pf2e/templates/items/weapon-sidebar.html","systems/pf2e/templates/packs/action-browser.html","systems/pf2e/templates/packs/bestiary-browser.html","systems/pf2e/templates/packs/browser-settings.html","systems/pf2e/templates/packs/compendium-browser.html","systems/pf2e/templates/packs/convert-images.html","systems/pf2e/templates/packs/feat-browser.html","systems/pf2e/templates/packs/hazard-browser.html","systems/pf2e/templates/packs/inventory-browser.html","systems/pf2e/templates/packs/license-viewer.html","systems/pf2e/templates/packs/spell-browser.html","systems/pf2e/templates/popups/loot/move-loot-popup.html","systems/pf2e/templates/popups/scroll-wand-popup.html","systems/pf2e/templates/scene/token-config.html","systems/pf2e/templates/system/actions/craft-target-item.html","systems/pf2e/templates/system/effects-panel.html","systems/pf2e/templates/system/migration-summary.html","systems/pf2e/templates/system/rules-elements/choice-set-prompt.html","systems/pf2e/templates/system/rules-elements/effect-target-prompt.html","systems/pf2e/templates/system/scene-darkness-adjuster.html","systems/pf2e/templates/system/settings/homebrew.html","systems/pf2e/templates/system/settings/menu.html","systems/pf2e/templates/system/settings/variant-rules-settings.html","systems/pf2e/templates/system/settings/world-clock/confirm-reset.html","systems/pf2e/templates/system/settings/world-clock/index.html","systems/pf2e/templates/system/trait-selector/basic.html","systems/pf2e/templates/system/trait-selector/resistances.html","systems/pf2e/templates/system/trait-selector/senses.html","systems/pf2e/templates/system/trait-selector/speed-types.html","systems/pf2e/templates/system/trait-selector/weaknesses.html","systems/pf2e/templates/system/ui/combat-tracker-config.html","systems/pf2e/templates/system/ui/compendium-directory.html","systems/pf2e/templates/system/upw-viewer.html","systems/pf2e/templates/system/world-clock.html","systems/pf2e/templates/user/player-config.html"])}}},2680:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActiveEffectPF2e=void 0;class ActiveEffectPF2e extends ActiveEffect{constructor(data,context){data.disabled=!0,data.transfer=!1,super(data,context)}}exports.ActiveEffectPF2e=ActiveEffectPF2e},65532:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorPF2e=void 0;const modifiers_1=__webpack_require__(27324),helpers_1=__webpack_require__(23247),dice_1=__webpack_require__(18235),_item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),localize_1=__webpack_require__(41332),item_transfer_1=__webpack_require__(46485),rule_element_1=__webpack_require__(18667),helpers_2=__webpack_require__(44252),data_1=__webpack_require__(73204),helpers_3=__webpack_require__(74909),migration_1=__webpack_require__(63051),size_1=__webpack_require__(43270),spellcasting_1=__webpack_require__(95438);class ActorPF2e extends Actor{constructor(data,context={}){var _a,_b,_c,_d;if(!(null===(_a=context.pf2e)||void 0===_a?void 0:_a.ready)){const ready={pf2e:{ready:!0}};return new CONFIG.PF2E.Actor.documentClasses[data.type](data,Object.assign(Object.assign({},ready),context))}super(data,context),null!==(_b=this.physicalItems)&&void 0!==_b||(this.physicalItems=new Collection),null!==(_c=this.spellcasting)&&void 0!==_c||(this.spellcasting=new spellcasting_1.ActorSpellcasting(this)),null!==(_d=this.rules)&&void 0!==_d||(this.rules=[]),this.initialized=!0}get sourceId(){var _a,_b;return null!==(_b=null===(_a=this.data.flags.core)||void 0===_a?void 0:_a.sourceId)&&void 0!==_b?_b:null}get schemaVersion(){var _a;return Number(null===(_a=this.data.data.schema)||void 0===_a?void 0:_a.version)||null}get traits(){return new Set(this.data.data.traits.traits.value)}get level(){return this.data.data.details.level.value}get size(){return this.data.data.traits.size.value}get canSee(){return!0}get modeOfBeing(){const traits=this.traits;return traits.has("undead")?"undead":traits.has("construct")?"construct":"living"}get visionLevel(){return data_1.VisionLevels.NORMAL}get rollOptions(){return this.data.flags.pf2e.rollOptions}get temporaryEffects(){const conditionTokenIcons=this.itemTypes.condition.filter((condition=>condition.fromSystem)).map((condition=>{return data=condition.data,`${CONFIG.PF2E.statusEffects.effectsIconFolder}${data.data.hud.statusName}.webp`;var data})),conditionTokenEffects=Array.from(new Set(conditionTokenIcons)).map((icon=>new rule_element_1.TokenEffect(icon))),effectTokenEffects=this.itemTypes.effect.filter((effect=>{var _a;return null===(_a=effect.data.data.tokenIcon)||void 0===_a?void 0:_a.show})).map((effect=>new rule_element_1.TokenEffect(effect.img)));return super.temporaryEffects.concat(this.data.data.tokenEffects).concat(conditionTokenEffects).concat(effectTokenEffects)}get heldShield(){return null}getSelfRollOptions(prefix="self"){const conditions=this.itemTypes.condition.flatMap((condition=>{var _a;return condition.fromSystem&&condition.isActive?null!==(_a=condition.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(condition.name):[]})).map((slug=>`${prefix}:condition:${slug}`));conditions.includes(`${prefix}:condition:flat-footed`)&&conditions.push(`${prefix}:flatFooted`);const traits=Array.from(this.traits);return new Set([...traits.map((trait=>`${prefix}:${trait}`)),...traits.map((trait=>`${prefix}:trait:${trait}`)),...conditions])}getContextualClone(rollOptions){const overrideData={flags:{pf2e:{rollOptions:{all:rollOptions.reduce(((options,option)=>Object.assign(Object.assign({},options),{[option]:!0})),{})}}}};return this.clone(overrideData)}static async createDocuments(data=[],context={}){var _a,_b,_c,_d,_e,_f,_g,_h;for(const datum of data){const merged=mergeObject(datum,{permission:null!==(_a=datum.permission)&&void 0!==_a?_a:{default:CONST.ENTITY_PERMISSIONS.NONE},token:{flags:{pf2e:{linkToActorSize:!["hazard","loot"].includes(datum.type)}}}}),dimensionMap={familiar:.5,vehicle:2};switch(null!==(_b=(_g=merged.token).height)&&void 0!==_b||(_g.height=null!==(_c=dimensionMap[datum.type])&&void 0!==_c?_c:1),null!==(_d=(_h=merged.token).width)&&void 0!==_d||(_h.width=merged.token.height),merged.type){case"character":case"familiar":merged.permission.default=CONST.ENTITY_PERMISSIONS.LIMITED,merged.token.actorLink=!0,merged.token.disposition=CONST.TOKEN_DISPOSITIONS.FRIENDLY,merged.token.vision=!0;break;case"loot":merged.token.actorLink=!0,merged.permission.default=CONST.ENTITY_PERMISSIONS.LIMITED,merged.token.disposition=CONST.TOKEN_DISPOSITIONS.NEUTRAL;break;case"npc":(null===(_f=null===(_e=merged.flags)||void 0===_e?void 0:_e.core)||void 0===_f?void 0:_f.sourceId)||(merged.token.disposition=CONST.TOKEN_DISPOSITIONS.HOSTILE);break;default:merged.token.disposition=CONST.TOKEN_DISPOSITIONS.NEUTRAL}}return super.createDocuments(data,context)}prepareData(){super.prepareData();const tokens=canvas.ready?this.getActiveTokens():[];if(this.initialized)for(const token of this.getActiveTokens())token.document.prepareData({fromActor:!0});tokens.some((token=>token.isControlled))&&game.pf2e.effectPanel.refresh()}prepareBaseData(){var _a;super.prepareBaseData(),this.data.data.tokenEffects=[],this.data.data.autoChanges={},this.preparePrototypeToken();const notTraits=this.data.data.traits;(null==notTraits?void 0:notTraits.size)&&(notTraits.size=new size_1.ActorSizePF2e(notTraits.size)),this.data.flags.pf2e=mergeObject({rollOptions:{all:{}}},null!==(_a=this.data.flags.pf2e)&&void 0!==_a?_a:{})}prepareEmbeddedEntities(){var _a,_b;super.prepareEmbeddedEntities();const physicalItems=this.items.filter((item=>item instanceof _item_1.PhysicalItemPF2e));this.physicalItems=new Collection(physicalItems.map((item=>[item.id,item])));const spellcastingEntries=this.items.filter((item=>item instanceof _item_1.SpellcastingEntryPF2e));this.spellcasting=new spellcasting_1.ActorSpellcasting(this,spellcastingEntries);for(const item of this.items)null===(_a=item.prepareSiblingData)||void 0===_a||_a.call(item),null===(_b=item.prepareActorData)||void 0===_b||_b.call(item);this.rules=this.items.contents.flatMap((item=>item.prepareRuleElements())).filter((rule=>!rule.ignored)).sort(((elementA,elementB)=>elementA.priority-elementB.priority))}createEmbeddedDocuments(embeddedName,data,context={}){if(data.some((datum=>"type"in datum&&"martial"===datum.type)))throw(0,_util_1.ErrorPF2e)("Martial items are pending removal from the system and may no longer be created.");return super.createEmbeddedDocuments(embeddedName,data,context)}preparePrototypeToken(){var _a;const tokenImgIsDefault=this.data.token.img===this.data.constructor.DEFAULT_ICON,tokenImgIsActorImg=this.data.token.img===this.img;tokenImgIsDefault&&!tokenImgIsActorImg&&this.data.token.update({img:this.img}),(null===(_a=canvas.sight)||void 0===_a?void 0:_a.rulesBasedVision)&&(this.data.token.brightSight=0,this.data.token.dimSight=0,this.data.token.sightAngle=360)}getStrikeDescription(weapon){const flavor={description:"PF2E.Strike.Default.Description",criticalSuccess:"PF2E.Strike.Default.CriticalSuccess",success:"PF2E.Strike.Default.Success"},traits=weapon.traits;return traits.has("unarmed")?(flavor.description="PF2E.Strike.Unarmed.Description",flavor.success="PF2E.Strike.Unarmed.Success"):[...traits].some((trait=>trait.startsWith("thrown-")||"combination"===trait))?(flavor.description="PF2E.Strike.Combined.Description",flavor.success="PF2E.Strike.Combined.Success"):weapon.isMelee?(flavor.description="PF2E.Strike.Melee.Description",flavor.success="PF2E.Strike.Melee.Success"):(flavor.description="PF2E.Strike.Ranged.Description",flavor.success="PF2E.Strike.Ranged.Success"),flavor}getAllTokens(){var _a;const tokens=[];for(const scene of game.scenes)for(const token of scene.tokens)token.isLinked&&(null===(_a=token.actor)||void 0===_a?void 0:_a.id)===this.id&&tokens.push(token);return tokens}rollSave(event,saveName){var _a,_b;const save=this.data.data.saves[saveName],flavor=`${game.i18n.localize(CONFIG.PF2E.saves[saveName])} Save Check`;dice_1.DicePF2e.d20Roll({event,parts:["@mod","@itemBonus"],data:{mod:save.value-(null!==(_a=save.item)&&void 0!==_a?_a:0),itemBonus:null!==(_b=save.item)&&void 0!==_b?_b:0},title:flavor,speaker:ChatMessage.getSpeaker({actor:this})})}rollAttribute(event,attributeName){if(!(0,_util_1.objectHasKey)(this.data.data.attributes,attributeName))throw(0,_util_1.ErrorPF2e)(`Unrecognized attribute "${attributeName}"`);const attribute=this.data.data.attributes[attributeName],parts=["@mod","@itemBonus"],configAttributes=CONFIG.PF2E.attributes;if((0,_util_1.objectHasKey)(configAttributes,attributeName)){const flavor=`${game.i18n.localize(configAttributes[attributeName])} Check`;dice_1.DicePF2e.d20Roll({event,parts,data:{mod:attribute.value},title:flavor,speaker:ChatMessage.getSpeaker({actor:this})})}}static async applyDamage(roll,multiplier,attribute="attributes.hp",modifier=0,{shieldID}={}){var _a;const tokens=canvas.tokens.controlled.filter((token=>token.actor));if(0===tokens.length)return ui.notifications.error(game.i18n.localize("PF2E.UI.errorTargetToken")),!1;const value=Math.floor(parseFloat(roll.find(".dice-total").text())*multiplier)+modifier,messageSender=roll.find(".message-sender").text(),flavorText=roll.find(".flavor-text").text();for(const token of tokens){const actor=token.actor,shield="attributes.shield"===attribute?shieldID?null!==(_a=actor.itemTypes.armor.find((armor=>armor.isShield&&armor.id===shieldID)))&&void 0!==_a?_a:null:actor.heldShield:null;if("attributes.shield"===attribute&&(null==shield?void 0:shield.isBroken)){const warnings=localize_1.LocalizePF2e.translations.PF2E.Actions.RaiseAShield;ui.notifications.warn(game.i18n.format(warnings.ShieldIsBroken,{actor:token.name,shield:shield.name}))}const shieldFlavor="attributes.shield"===attribute&&!1===(null==shield?void 0:shield.isBroken)?game.i18n.format("PF2E.UI.applyDamage.shieldActive",{shield:shield.name}):game.i18n.localize("PF2E.UI.applyDamage.shieldInActive"),shieldDamage="attributes.shield"===attribute&&!1===(null==shield?void 0:shield.isBroken)&&value>0?`(${Math.max(0,value-shield.hardness)})`:"",appliedResult=value>0?game.i18n.localize("PF2E.UI.applyDamage.damaged")+value+shieldDamage:game.i18n.localize("PF2E.UI.applyDamage.healed")+-1*value,modifiedByGM=0!==modifier?`Modified by GM: ${modifier<0?"-":"+"}${modifier}`:"",by=game.i18n.localize("PF2E.UI.applyDamage.by"),hitpoints=game.i18n.localize("PF2E.HitPointsHeader").toLowerCase(),message=await renderTemplate("systems/pf2e/templates/chat/damage/result-message.html",{flavorText,by,messageSender,modifiedByGM,actor:token.name,shieldFlavor,appliedResult,hitpoints});actor.modifyTokenAttribute(attribute,-1*value,!0,!0,shield).then((()=>{var _a;const data={user:game.user.id,speaker:{alias:token.name},content:message,type:CONST.CHAT_MESSAGE_TYPES.EMOTE};game.settings.get("pf2e","metagame.secretDamage")&&!(null===(_a=null==token?void 0:token.actor)||void 0===_a?void 0:_a.hasPlayerOwner)&&(data.whisper=ChatMessage.getWhisperRecipients("GM")),ChatMessage.create(data)}))}return!0}static async rollSave(ev,item){var _a,_b,_c;if(canvas.tokens.controlled.length>0){const save=$(ev.currentTarget).attr("data-save"),dc=Number($(ev.currentTarget).attr("data-dc")),itemTraits=null!==(_b=null===(_a=item.data.data.traits)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:[];for(const t of canvas.tokens.controlled){const actor=t.actor;if(!actor)return;if(null===(_c=actor.data.data.saves[save])||void 0===_c?void 0:_c.roll){const options=[...actor.getRollOptions(["all","saving-throw",save]),...actor.getSelfRollOptions(),...item.actor.getSelfRollOptions("origin")];item instanceof _item_1.SpellPF2e&&(options.push("magical","spell"),Object.keys(item.data.data.damage.value).length>0&&options.push("damaging-effect")),itemTraits&&(options.push(...itemTraits),options.push(...itemTraits.map((trait=>`trait:${trait}`)))),actor.data.data.saves[save].roll({event:ev,dc:Number.isNaN(dc)?void 0:{value:Number(dc)},options:Array.from(new Set(options))})}else actor.rollSave(ev,save)}}else ui.notifications.error(game.i18n.localize("PF2E.UI.errorTargetToken"))}async _setShowUnpreparedSpells(entryId,spellLevel){var _a,_b,_c,_d;if(!entryId||!spellLevel)return;const spellcastingEntry=this.items.get(entryId);if(spellcastingEntry instanceof _item_1.SpellcastingEntryPF2e&&"prepared"===(null===(_b=null===(_a=spellcastingEntry.data.data)||void 0===_a?void 0:_a.prepared)||void 0===_b?void 0:_b.value)&&!1===(null===(_d=null===(_c=spellcastingEntry.data.data)||void 0===_c?void 0:_c.showUnpreparedSpells)||void 0===_d?void 0:_d.value)){!0===CONFIG.debug.hooks&&console.log(`PF2e DEBUG | Updating spellcasting entry ${entryId} set showUnpreparedSpells to true.`);const displayLevels={};displayLevels[spellLevel]=!0,await spellcastingEntry.update({"data.showUnpreparedSpells.value":!0,"data.displayLevels":displayLevels})}}isLootableBy(user){return this.canUserModify(user,"update")}async modifyTokenAttribute(attribute,value,isDelta=!1,isBar=!0,selectedShield=null){var _a,_b;if(!Number.isInteger(value))return Promise.reject();if(["attributes.shield","attributes.hp"].includes(attribute)){const updateActorData={},shield=null!=selectedShield?selectedShield:this.heldShield;let updatedShieldHp=-1;if("attributes.shield"===attribute)if(!1===(null==shield?void 0:shield.isBroken)){let shieldHitPoints=shield.hitPoints.value;isDelta&&value<0?(value=Math.min(shield.hardness+value,0))<0&&(attribute="attributes.hp",shieldHitPoints=Math.clamped(shield.hitPoints.value+value,0,shield.hitPoints.max)):shieldHitPoints=Math.clamped(value,0,shield.hitPoints.max),shield.data.data.hp.value=shieldHitPoints,updateActorData["data.attributes.shield.value"]=shieldHitPoints,updatedShieldHp=shieldHitPoints}else if("shield"in this.data.data.attributes&&this.data.data.attributes.shield.max){const shieldData=this.data.data.attributes.shield,currentHitPoints=Number(shieldData.value),maxHitPoints=Number(shieldData.max);let shieldHitPoints=currentHitPoints;isDelta&&value<0?(value=Math.min(Number(shieldData.hardness)+value,0))<0&&(attribute="attributes.hp",shieldHitPoints=Math.clamped(currentHitPoints+value,0,maxHitPoints)):shieldHitPoints=Math.clamped(value,0,maxHitPoints),updateActorData["data.attributes.shield.value"]=shieldHitPoints}else isDelta&&(attribute="attributes.hp");if("attributes.hp"===attribute&&"hp"in this.data.data.attributes){const{hp}=this.data.data.attributes,sp="sp"in this.data.data.attributes?this.data.data.attributes.sp:{value:0};if(isDelta){if(value<0){const{update,delta}=this.calculateHealthDelta({hp,sp,delta:value});value=delta;for(const[k,v]of Object.entries(update))updateActorData[k]=v}value=Math.clamped(Number(hp.value)+value,0,hp.max)}if(value=Math.clamped(value,0,hp.max),updateActorData["data.attributes.hp.value"]=value,0===value){const deadAtZero=game.settings.get("pf2e","automation.actorsDeadAtZero");"npc"===this.type&&["npcsOnly","both"].includes(deadAtZero)&&(null===(_b=null===(_a=game.combats.active)||void 0===_a?void 0:_a.combatants.find((c=>c.actor===this&&!c.data.defeated)))||void 0===_b||_b.toggleDefeated())}}return shield&&updatedShieldHp>=0&&(updateActorData.items=[{_id:shield.id,data:{hp:{value:updatedShieldHp}}}]),this.update(updateActorData)}return super.modifyTokenAttribute(attribute,value,isDelta,isBar)}async transferItemToActor(targetActor,item,quantity,containerId){var _a,_b;if(!(item instanceof _item_1.PhysicalItemPF2e))return Promise.reject(new Error("Only physical items (with quantities) can be transfered between actors"));const container=targetActor.physicalItems.get(null!=containerId?containerId:"");if(container&&!(container instanceof _item_1.ContainerPF2e))throw(0,_util_1.ErrorPF2e)("containerId refers to a non-container");if(((source,target)=>{const bothAreOwned=source.isOwner&&target.isOwner,sourceIsOwnedOrLoot=source.isLootableBy(game.user),targetIsOwnedOrLoot=target.isLootableBy(game.user);return!bothAreOwned&&sourceIsOwnedOrLoot&&targetIsOwnedOrLoot})(this,targetActor)){const source={tokenId:null===(_a=this.token)||void 0===_a?void 0:_a.id,actorId:this.id,itemId:item.id},target={tokenId:null===(_b=targetActor.token)||void 0===_b?void 0:_b.id,actorId:targetActor.id};return await new item_transfer_1.ItemTransfer(source,target,quantity,null==container?void 0:container.id).request(),null}if(!this.canUserModify(game.user,"update"))return ui.notifications.error(game.i18n.localize("PF2E.ErrorMessage.CantMoveItemSource")),null;if(!targetActor.canUserModify(game.user,"update"))return ui.notifications.error(game.i18n.localize("PF2E.ErrorMessage.CantMoveItemDestination")),null;quantity=Math.min(quantity,item.quantity);const newQuantity=item.quantity-quantity;newQuantity<1?await item.delete():await item.update({"data.quantity.value":newQuantity});const newItemData=item.toObject();if(newItemData.data.quantity.value=quantity,newItemData.data.equipped.value=!1,(0,helpers_2.hasInvestedProperty)(newItemData)){const traits=item.traits;newItemData.data.invested.value=!traits.has("invested")&&null}return targetActor.addToInventory(newItemData,container)}async addToInventory(itemData,container){const stackItem=this.findStackableItem(this,itemData);if(stackItem&&"backpack"!==stackItem.data.type){const stackQuantity=stackItem.quantity+itemData.data.quantity.value;return await stackItem.update({"data.quantity.value":stackQuantity}),stackItem}const result=await _item_1.ItemPF2e.create(itemData,{parent:this});if(!result)return null;const movedItem=this.physicalItems.get(result.id);return movedItem?(await this.stowOrUnstow(movedItem,container),movedItem):null}findStackableItem(actor,itemData){const testItem=new _item_1.ItemPF2e(itemData),stackCandidates=actor.physicalItems.filter((stackCandidate=>!stackCandidate.isInContainer&&testItem instanceof _item_1.PhysicalItemPF2e&&stackCandidate.isStackableWith(testItem)));if(0===stackCandidates.length)return null;if(stackCandidates.length>1){const notEquipped=stackCandidates.filter((item=>!item.isEquipped));return notEquipped.length>0?notEquipped[0]:stackCandidates[0]}return stackCandidates[0]}async stowOrUnstow(item,container){container&&!(0,helpers_1.isCycle)(item.id,container.id,[item.data])?await item.update({"data.containerId.value":container.id,"data.equipped.value":!1}):await item.update({"data.containerId.value":null})}calculateHealthDelta(args){const update={},{hp,sp}=args;let{delta}=args;return hp.temp+delta>=0?(update["data.attributes.hp.temp"]=hp.temp+delta,delta=0):(update["data.attributes.hp.temp"]=0,delta=hp.temp+delta),game.settings.get("pf2e","staminaVariant")>0&&delta<0&&(sp.value+delta>=0?(update["data.attributes.sp.value"]=sp.value+delta,delta=0):(update["data.attributes.sp.value"]=0,delta=sp.value+delta)),{update,delta}}static getActionGraphics(actionType,actionCount){let actionImg=0;"action"===actionType?actionImg=null!=actionCount?actionCount:1:"reaction"===actionType?actionImg="reaction":"free"===actionType?actionImg="free":"passive"===actionType&&(actionImg="passive");const graphics={1:{imageUrl:"systems/pf2e/icons/actions/OneAction.webp",actionGlyph:"A"},2:{imageUrl:"systems/pf2e/icons/actions/TwoActions.webp",actionGlyph:"D"},3:{imageUrl:"systems/pf2e/icons/actions/ThreeActions.webp",actionGlyph:"T"},free:{imageUrl:"systems/pf2e/icons/actions/FreeAction.webp",actionGlyph:"F"},reaction:{imageUrl:"systems/pf2e/icons/actions/Reaction.webp",actionGlyph:"R"},passive:{imageUrl:"systems/pf2e/icons/actions/Passive.webp",actionGlyph:""}};return(0,_util_1.objectHasKey)(graphics,actionImg)?{imageUrl:graphics[actionImg].imageUrl,actionGlyph:graphics[actionImg].actionGlyph}:{imageUrl:"systems/pf2e/icons/actions/Empty.webp",actionGlyph:""}}async addDamageDice(param){var _a,_b,_c,_d;if(!(0,helpers_3.isCreatureData)(this.data))throw Error("Custom damage dice only work for characters, NPCs, and familiars");const damageDice=duplicate(null!==(_a=this.data.data.damageDice)&&void 0!==_a?_a:{});if(!(null!==(_b=damageDice[param.selector])&&void 0!==_b?_b:[]).find((d=>d.name===param.name))){param.selector=null!==(_c=null==param?void 0:param.selector)&&void 0!==_c?_c:"damage",param.custom=!0;const dice=new modifiers_1.DamageDicePF2e(param);damageDice[param.selector]=(null!==(_d=damageDice[param.selector])&&void 0!==_d?_d:[]).concat([dice]),await this.update({"data.damageDice":damageDice})}}async removeDamageDice(selector,dice){var _a;if(!(0,helpers_3.isCreatureData)(this.data))throw Error("Custom damage dice only work for characters, NPCs, and familiars");const damageDice=duplicate(null!==(_a=this.data.data.damageDice)&&void 0!==_a?_a:{});if("number"==typeof dice&&damageDice[selector]&&damageDice[selector].length>dice)damageDice[selector].splice(dice,1),await this.update({"data.damageDice":damageDice});else{if("string"!=typeof dice||!damageDice[selector])throw Error("Dice can only be removed by name (string) or index (number)");damageDice[selector]=damageDice[selector].filter((d=>d.name!==dice)),await this.update({"data.damageDice":damageDice})}}getRollOptions(domains){var _a;const rollOptions=this.data.flags.pf2e.rollOptions,results=new Set;for(const domain of domains)for(const[key,value]of Object.entries(null!==(_a=rollOptions[domain])&&void 0!==_a?_a:{}))value&&results.add(key);return[...results]}getCondition(slug,{all}={all:!1}){var _a;const conditions=this.itemTypes.condition.filter((condition=>condition.slug===slug)).sort(((conditionA,conditionB)=>{var _a,_b,_c,_d;const[valueA,valueB]=[null!==(_a=conditionA.value)&&void 0!==_a?_a:0,null!==(_b=conditionB.value)&&void 0!==_b?_b:0],[durationA,durationB]=[null!==(_c=conditionA.duration)&&void 0!==_c?_c:0,null!==(_d=conditionB.duration)&&void 0!==_d?_d:0];return valueA>valueB?1:valueB<valueB?-1:durationA>durationB?1:durationA<durationB?-1:0}));return all?conditions:null!==(_a=conditions[0])&&void 0!==_a?_a:null}hasCondition(slug){return this.itemTypes.condition.some((condition=>condition.slug===slug))}async decreaseCondition(conditionSlug,{forceRemove}={forceRemove:!1}){const condition="string"==typeof conditionSlug?this.getCondition(conditionSlug):conditionSlug;if(!condition)return;const value="number"==typeof condition.value?Math.max(condition.value-1,0):null;null===value||forceRemove?await game.pf2e.ConditionManager.removeConditionFromActor(condition.id,this):await game.pf2e.ConditionManager.updateConditionValue(condition.id,this,value)}async increaseCondition(conditionSlug,{min,max=Number.MAX_SAFE_INTEGER}={}){const existing="string"==typeof conditionSlug?this.getCondition(conditionSlug):conditionSlug;if(existing){const conditionValue=null===existing.value?null:min&&max?Math.min(Math.max(min,existing.value),max):max?Math.min(existing.value+1,max):existing.value+1;if(null===conditionValue||conditionValue>(null!=max?max:0))return;await game.pf2e.ConditionManager.updateConditionValue(existing.id,this,conditionValue)}else if("string"==typeof conditionSlug){const conditionSource=game.pf2e.ConditionManager.getCondition(conditionSlug).toObject(),conditionValue="number"==typeof(null==conditionSource?void 0:conditionSource.data.value.value)&&min&&max?Math.min(Math.max(min,conditionSource.data.value.value),max):null;conditionSource.data.value.value=conditionValue,await game.pf2e.ConditionManager.addConditionToActor(conditionSource,this)}}async toggleCondition(conditionSlug){this.hasCondition(conditionSlug)?await this.decreaseCondition(conditionSlug,{forceRemove:!0}):await this.increaseCondition(conditionSlug)}async importFromJSON(json){var _a;const importData=JSON.parse(json),systemModel=deepClone(game.system.model.Actor[importData.type]),data=mergeObject({data:systemModel},importData);return this.data.update(game.actors.prepareForImport(data),{recursive:!1}),await migration_1.MigrationRunner.ensureSchemaVersion(this,migration_1.Migrations.constructFromVersion(null!==(_a=this.schemaVersion)&&void 0!==_a?_a:void 0),{preCreate:!1}),this.update(this.toObject(),{diff:!1,recursive:!1})}async _preCreate(data,options,user){await super._preCreate(data,options,user),options.parent||await migration_1.MigrationRunner.ensureSchemaVersion(this,migration_1.Migrations.constructFromVersion())}_onDelete(options,userId){for(const effect of this.itemTypes.effect)game.pf2e.effectTracker.unregister(effect);super._onDelete(options,userId)}_onCreateEmbeddedDocuments(embeddedName,documents,result,options,userId){!1!==options.render&&super._onCreateEmbeddedDocuments(embeddedName,documents,result,options,userId)}_onDeleteEmbeddedDocuments(embeddedName,documents,result,options,userId){!1!==options.render&&super._onDeleteEmbeddedDocuments(embeddedName,documents,result,options,userId)}}exports.ActorPF2e=ActorPF2e},50070:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(31949),exports)},31949:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CharacterData=void 0;const data_1=__webpack_require__(73204);class CharacterData extends data_1.BaseCreatureData{}exports.CharacterData=CharacterData,CharacterData.DEFAULT_ICON="systems/pf2e/icons/default-icons/mystery-man.svg"},886:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CharacterPF2e=void 0;const base_1=__webpack_require__(24227),runes_1=__webpack_require__(35847),modifiers_1=__webpack_require__(27324),weapon_1=__webpack_require__(11678),rolls_1=__webpack_require__(87525),values_1=__webpack_require__(35089),data_1=__webpack_require__(50070),_util_1=__webpack_require__(6945),_item_1=__webpack_require__(10843),__1=__webpack_require__(85530),localize_1=__webpack_require__(41332),automatic_bonus_1=__webpack_require__(17),data_2=__webpack_require__(39530),data_3=__webpack_require__(52769),data_4=__webpack_require__(55749),data_5=__webpack_require__(69777),predication_1=__webpack_require__(538),manager_1=__webpack_require__(88297),formula_1=__webpack_require__(5957),from_uuids_1=__webpack_require__(16539),crafting_entry_1=__webpack_require__(45210),size_1=__webpack_require__(43270);class CharacterPF2e extends __1.CreaturePF2e{static get schema(){return data_1.CharacterData}get hitPoints(){return Object.assign(Object.assign({},super.hitPoints),{recoveryMultiplier:this.data.data.attributes.hp.recoveryMultiplier})}get ancestry(){var _a;return null!==(_a=this.itemTypes.ancestry[0])&&void 0!==_a?_a:null}get background(){var _a;return null!==(_a=this.itemTypes.background[0])&&void 0!==_a?_a:null}get class(){var _a;return null!==(_a=this.itemTypes.class[0])&&void 0!==_a?_a:null}get heritage(){var _a;return null!==(_a=this.itemTypes.feat.find((feat=>"heritage"===feat.featType.value)))&&void 0!==_a?_a:null}get keyAbility(){return this.data.data.details.keyability.value||"str"}get heroPoints(){return deepClone(this.data.data.resources.heroPoints)}getSelfRollOptions(prefix="self"){var _a,_b;const options=super.getSelfRollOptions(prefix),[ancestry,pcClass]=[this.ancestry,this.class];return ancestry&&options.add(`${prefix}:ancestry:${null!==(_a=ancestry.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(ancestry.name)}`),pcClass&&options.add(`${prefix}:class:${null!==(_b=pcClass.slug)&&void 0!==_b?_b:(0,_util_1.sluggify)(pcClass.name)}`),options}async getCraftingFormulas(){const{formulas}=this.data.data.crafting,formulaMap=new Map(formulas.map((data=>[data.uuid,data])));return(await(0,from_uuids_1.fromUUIDs)(formulas.map((data=>data.uuid)))).filter((item=>item instanceof _item_1.PhysicalItemPF2e)).map((item=>{var _a;const{dc,batchSize,deletable}=null!==(_a=formulaMap.get(item.uuid))&&void 0!==_a?_a:{deletable:!1};return new formula_1.CraftingFormula(item,{dc,batchSize,deletable})}))}async getCraftingEntries(){const craftingFormulas=await this.getCraftingFormulas(),craftingEntriesData=this.data.data.crafting.entries,entries=[];for(const key in craftingEntriesData)craftingEntriesData[key]&&entries.push(new crafting_entry_1.CraftingEntry(this,craftingFormulas,craftingEntriesData[key]));return entries}async getCraftingEntry(selector){const craftingFormulas=await this.getCraftingFormulas(),craftingEntryData=this.data.data.crafting.entries[selector];if(craftingEntryData)return new crafting_entry_1.CraftingEntry(this,craftingFormulas,craftingEntryData)}async performDailyCrafting(){var _a;const entries=(await this.getCraftingEntries()).filter((e=>e.isDailyPrep)),reagentCost=entries.filter((e=>e.isAlchemical)).reduce(((sum,entry)=>sum+entry.reagentCost),0),reagentValue=(this.data.data.resources.crafting.infusedReagents.value||0)-reagentCost;if(reagentValue<0)ui.notifications.warn(game.i18n.localize("PF2E.CraftingTab.Alerts.MissingReagents"));else{await this.update({"data.resources.crafting.infusedReagents.value":reagentValue});for(const item of this.physicalItems)(null===(_a=item.data.data.temporary)||void 0===_a?void 0:_a.value)&&await item.delete();for(const entry of entries)for(const prepData of entry.preparedFormulas){const item=prepData.item.toObject();item.data.quantity.value=prepData.quantity||1,item.data.temporary={value:!0},!entry.isAlchemical||"consumable"!==item.type&&"weapon"!==item.type&&"equipment"!==item.type||item.data.traits.value.push("infused"),await this.addToInventory(item)}}}prepareBaseData(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;super.prepareBaseData();const systemData=this.data.data;null!==(_a=(_m=this.data.flags.pf2e).freeCrafting)&&void 0!==_a||(_m.freeCrafting=!1);const attributes=this.data.data.attributes;attributes.ac={modifiers:[]},attributes.classDC={rank:0},attributes.dexCap=[{value:1/0,source:""}];const perception=null!==(_b=attributes.perception)&&void 0!==_b?_b:attributes.perception={ability:"wis",rank:0};perception.ability="wis",null!==(_c=perception.rank)&&void 0!==_c||(perception.rank=0),attributes.reach={value:5,manipulate:5},attributes.doomed={value:0,max:3},attributes.dying={value:0,max:4},attributes.wounded={value:0,max:3};this.data.data.attributes.hp.recoveryMultiplier=1,attributes.ancestryhp=0,attributes.classhp=0,attributes.familiarAbilities={value:0};const saves=this.data.data.saves;for(const save of values_1.SAVE_TYPES)saves[save]={ability:CONFIG.PF2E.savingThrowDefaultAbilities[save],rank:null!==(_e=null===(_d=saves[save])||void 0===_d?void 0:_d.rank)&&void 0!==_e?_e:0};const skills=this.data.data.skills;for(const key of values_1.SKILL_ABBREVIATIONS){const skill=skills[key];skill.ability=values_1.SKILL_EXPANDED[values_1.SKILL_DICTIONARY[key]].ability,skill.armor=["dex","str"].includes(skill.ability)}systemData.proficiencies={traditions:data_5.MAGIC_TRADITIONS.reduce(((accumulated,tradition)=>Object.assign(Object.assign({},accumulated),{[tradition]:{rank:0}})),{})};const{resources}=this.data.data;resources.investiture={value:0,max:10},null!==(_f=resources.focus)&&void 0!==_f||(resources.focus={value:0,max:0}),resources.focus.max=0,null!==(_g=resources.crafting)&&void 0!==_g||(resources.crafting={infusedReagents:{value:0,max:0}}),resources.heroPoints.max=3,this.data.data.traits.size=new size_1.ActorSizePF2e({value:"med"});const martial=this.data.data.martial;for(const category of[...data_4.ARMOR_CATEGORIES,...data_2.WEAPON_CATEGORIES]){const proficiency=null!==(_h=martial[category])&&void 0!==_h?_h:{};proficiency.rank=null!==(_k=null===(_j=martial[category])||void 0===_j?void 0:_j.rank)&&void 0!==_k?_k:0,martial[category]=proficiency}const homebrewCategories=game.settings.get("pf2e","homebrew.weaponCategories").map((tag=>tag.id));for(const category of homebrewCategories)null!==(_l=martial[category])&&void 0!==_l||(martial[category]={rank:0,value:0,breakdown:""});this.data.data.crafting.formulas.forEach((formula=>{formula.deletable=!0}))}prepareDerivedData(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t;super.prepareDerivedData();const rules=this.rules.filter((rule=>!rule.ignored)),systemData=this.data.data;for(const abl of Object.values(systemData.abilities))abl.mod=Math.floor((abl.value-10)/2);const synthetics=this.prepareCustomModifiers(rules);this.getFlag("pf2e","disableABP")||automatic_bonus_1.AutomaticBonusProgression.concatModifiers(this.level,synthetics);const{statisticsModifiers,strikes,rollNotes}=synthetics;systemData.details.xp.pct=Math.min(Math.round(100*systemData.details.xp.value/systemData.details.xp.max),99.5);const itemTypes=this.itemTypes;for(const conditionName of["dying","doomed","wounded"]){const condition=itemTypes.condition.find((condition=>condition.slug===conditionName)),status=systemData.attributes[conditionName];status.value=Math.min(null!==(_a=null==condition?void 0:condition.value)&&void 0!==_a?_a:0,status.max)}(null===(_b=systemData.pfs)||void 0===_b?void 0:_b.levelBump)&&(statisticsModifiers.all=(statisticsModifiers.all||[]).concat(new modifiers_1.ModifierPF2e("PF2E.PFS.LevelBump",1,modifiers_1.MODIFIER_TYPE.UNTYPED)));{const ancestryHP=systemData.attributes.ancestryhp,classHP=systemData.attributes.classhp,hitPoints=systemData.attributes.hp,modifiers=[new modifiers_1.ModifierPF2e("PF2E.AncestryHP",ancestryHP,modifiers_1.MODIFIER_TYPE.UNTYPED)];if(game.settings.get("pf2e","staminaVariant")){const bonusSpPerLevel=(null!==(_c=systemData.attributes.levelbonussp)&&void 0!==_c?_c:1)*this.level,halfClassHp=Math.floor(classHP/2);systemData.attributes.sp.max=(halfClassHp+systemData.abilities.con.mod)*this.level+bonusSpPerLevel+systemData.attributes.flatbonussp,systemData.attributes.resolve.max=systemData.abilities[systemData.details.keyability.value].mod,modifiers.push(new modifiers_1.ModifierPF2e("PF2E.ClassHP",halfClassHp*this.level,modifiers_1.MODIFIER_TYPE.UNTYPED))}else{modifiers.push(new modifiers_1.ModifierPF2e("PF2E.ClassHP",classHP*this.level,modifiers_1.MODIFIER_TYPE.UNTYPED));const conLevelBonus=systemData.abilities.con.mod*this.level;modifiers.push(new modifiers_1.ModifierPF2e("PF2E.AbilityCon",conLevelBonus,modifiers_1.MODIFIER_TYPE.ABILITY))}if(systemData.attributes.flatbonushp){const flatBonusHP=systemData.attributes.flatbonushp;modifiers.push(new modifiers_1.ModifierPF2e("PF2E.FlatBonusHP",flatBonusHP,modifiers_1.MODIFIER_TYPE.UNTYPED))}if(systemData.attributes.levelbonushp){const bonusLevelHP=systemData.attributes.levelbonushp*this.level;modifiers.push(new modifiers_1.ModifierPF2e("PF2E.BonusHPperLevel",bonusLevelHP,modifiers_1.MODIFIER_TYPE.UNTYPED))}modifiers.push(...(statisticsModifiers.hp||[]).map((m=>m.clone({test:this.getRollOptions(["hp","all"])})))),(statisticsModifiers["hp-per-level"]||[]).map((m=>m.clone())).forEach((m=>{m.modifier*=this.level,m.test(this.getRollOptions(["hp-per-level","all"])),modifiers.push(m)}));const stat=mergeObject(new modifiers_1.StatisticModifier("hp",modifiers),hitPoints,{overwrite:!1});if(null===(_d=systemData.pfs)||void 0===_d?void 0:_d.levelBump){const hitPointsBump=Math.max(10,.1*stat.totalModifier);stat.push(new modifiers_1.ModifierPF2e("PF2E.PFS.LevelBump",hitPointsBump,modifiers_1.MODIFIER_TYPE.UNTYPED))}stat.max=stat.totalModifier,stat.value=Math.min(stat.value,stat.max),stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),systemData.attributes.hp=stat}const{wornArmor}=this;for(const saveType of values_1.SAVE_TYPES){const save=systemData.saves[saveType],abilityModifier=modifiers_1.AbilityModifier.fromScore(save.ability,systemData.abilities[save.ability].value),modifiers=[abilityModifier,modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,save.rank)];if(null==wornArmor?void 0:wornArmor.data.data.resiliencyRune.value){const resilientBonus=(0,runes_1.getResiliencyBonus)(wornArmor.data.data);resilientBonus>0&&wornArmor.isInvested&&modifiers.push(new modifiers_1.ModifierPF2e(wornArmor.name,resilientBonus,modifiers_1.MODIFIER_TYPE.ITEM))}if("reflex"===saveType&&(null==wornArmor?void 0:wornArmor.traits.has("bulwark"))){const bulwarkModifier=new modifiers_1.ModifierPF2e(CONFIG.PF2E.armorTraits.bulwark,3,modifiers_1.MODIFIER_TYPE.UNTYPED);bulwarkModifier.predicate=new predication_1.PredicatePF2e({all:["damaging-effect"],not:["self:armor:bulwark-all"]}),modifiers.push(bulwarkModifier),abilityModifier.predicate.not.push({and:["self:armor:trait:bulwark","damaging-effect"]},"self:armor:bulwark-all")}const rollOptions=[saveType,`${save.ability}-based`,"saving-throw","all"];modifiers.push(...rollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((m=>m.clone())));for(const modifier of modifiers)modifier.test(this.getRollOptions(rollOptions));const stat=mergeObject(new modifiers_1.StatisticModifier(saveType,modifiers),save,{overwrite:!1});stat.notes=rollOptions.flatMap((key=>{var _a;return duplicate(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[])})),stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=args=>{var _a;const label=game.i18n.format("PF2E.SavingThrowWithName",{saveName:game.i18n.localize(CONFIG.PF2E.saves[saveType])}),options=null!==(_a=args.options)&&void 0!==_a?_a:[];(0,modifiers_1.ensureProficiencyOption)(options,save.rank),args.dc&&stat.adjustments&&(args.dc.adjustments=stat.adjustments),rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"saving-throw",options,dc:args.dc,notes:stat.notes},args.event,args.callback)},systemData.saves[saveType]=stat}const combatProficiencies=Object.values(systemData.martial);for(const proficiency of combatProficiencies){if("predicate"in proficiency)continue;const proficiencyBonus=modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,proficiency.rank||0);proficiency.value=proficiencyBonus.modifier;const label=game.i18n.localize(proficiencyBonus.name),sign=proficiencyBonus.modifier<0?"":"+";proficiency.breakdown=`${label} ${sign}${proficiencyBonus.modifier}`}const linkedProficiencies=combatProficiencies.filter((p=>"predicate"in p));for(const proficiency of linkedProficiencies){const category=systemData.martial[proficiency.sameAs];proficiency.rank=(()=>{var _a;const maxRankIndex=data_3.PROFICIENCY_RANKS.indexOf(null!==(_a=proficiency.maxRank)&&void 0!==_a?_a:"legendary");return Math.min(category.rank,maxRankIndex)})(),proficiency.value=category.value,proficiency.breakdown=category.breakdown}{const proficiencyRank=systemData.attributes.perception.rank||0,modifiers=[modifiers_1.AbilityModifier.fromScore("wis",systemData.abilities.wis.value),modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,proficiencyRank)],rollOptions=["perception","wis-based","all"];modifiers.push(...rollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((m=>m.clone({test:this.getRollOptions(rollOptions)}))));const stat=mergeObject(new modifiers_1.StatisticModifier("perception",modifiers),systemData.attributes.perception,{overwrite:!1});stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.notes=rollOptions.flatMap((key=>{var _a;return duplicate(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[])})),stat.value=stat.totalModifier,stat.roll=args=>{var _a;const label=game.i18n.localize("PF2E.PerceptionCheck"),options=null!==(_a=args.options)&&void 0!==_a?_a:[];(0,modifiers_1.ensureProficiencyOption)(options,proficiencyRank),args.dc&&stat.adjustments&&(args.dc.adjustments=stat.adjustments),rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"perception-check",options,dc:args.dc,notes:stat.notes},args.event,args.callback)},systemData.attributes.perception=stat}this.data.data.traits.senses=this.prepareSenses(this.data.data.traits.senses,synthetics);{const rollOptions=["class",`${systemData.details.keyability.value}-based`,"all"],modifiers=[modifiers_1.AbilityModifier.fromScore(systemData.details.keyability.value,systemData.abilities[systemData.details.keyability.value].value),modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,null!==(_e=systemData.attributes.classDC.rank)&&void 0!==_e?_e:0),...rollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((m=>m.clone({test:this.getRollOptions(rollOptions)})))],stat=mergeObject(new modifiers_1.StatisticModifier("class",modifiers),systemData.attributes.classDC,{overwrite:!1});stat.notes=rollOptions.flatMap((key=>{var _a;return duplicate(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[])})),stat.value=10+stat.totalModifier,stat.ability=systemData.details.keyability.value,stat.breakdown=[game.i18n.localize("PF2E.ClassDCBase")].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),systemData.attributes.classDC=stat}{const modifiers=[...systemData.attributes.ac.modifiers],dexCapSources=systemData.attributes.dexCap;let armorCheckPenalty=0,proficiency="unarmored";wornArmor&&(dexCapSources.push({value:Number(null!==(_f=wornArmor.dexCap)&&void 0!==_f?_f:0),source:wornArmor.name}),wornArmor.checkPenalty&&(proficiency=wornArmor.category,"number"==typeof wornArmor.strength&&systemData.abilities.str.value<wornArmor.strength&&(armorCheckPenalty=Number(null!==(_g=wornArmor.checkPenalty)&&void 0!==_g?_g:0))),modifiers.push(new modifiers_1.ModifierPF2e(wornArmor.name,wornArmor.acBonus,modifiers_1.MODIFIER_TYPE.ITEM))),modifiers.unshift(modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,null!==(_j=null===(_h=systemData.martial[proficiency])||void 0===_h?void 0:_h.rank)&&void 0!==_j?_j:0));const dexterity=modifiers_1.AbilityModifier.fromScore("dex",systemData.abilities.dex.value);dexterity.modifier=Math.min(dexterity.modifier,...dexCapSources.map((cap=>cap.value))),modifiers.unshift(dexterity);const rollOptions=["ac","dex-based","all"];modifiers.push(...rollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((m=>m.clone({test:this.getRollOptions(rollOptions)}))));const dexCap=dexCapSources.reduce(((result,current)=>result.value>current.value?current:result)),stat=mergeObject(new modifiers_1.StatisticModifier("ac",modifiers),{value:10,breakdown:"",check:armorCheckPenalty,dexCap});stat.value+=stat.totalModifier,stat.breakdown=[game.i18n.localize("PF2E.ArmorClassBase")].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),systemData.attributes.ac=stat}const{heldShield}=this;if(heldShield){const{hitPoints}=heldShield;if(systemData.attributes.shield.value=hitPoints.value,systemData.attributes.shield.max=hitPoints.max,heldShield.speedPenalty){const speedPenalty=new modifiers_1.ModifierPF2e(heldShield.name,heldShield.speedPenalty,modifiers_1.MODIFIER_TYPE.UNTYPED);speedPenalty.predicate.not=["self:shield:ignore-speed-penalty"],null!==(_k=statisticsModifiers.speed)&&void 0!==_k||(statisticsModifiers.speed=[]),statisticsModifiers.speed.push(speedPenalty)}}const skills={};for(const shortForm of values_1.SKILL_ABBREVIATIONS){const skill=systemData.skills[shortForm],modifiers=[modifiers_1.AbilityModifier.fromScore(skill.ability,systemData.abilities[skill.ability].value),modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,skill.rank)],longForm=values_1.SKILL_DICTIONARY[shortForm];if("number"==typeof(null==wornArmor?void 0:wornArmor.strength)&&this.data.data.abilities.str.value>=wornArmor.strength)for(const selector of["skill-check","initiative"]){const rollOptions=null!==(_l=(_t=this.rollOptions)[selector])&&void 0!==_l?_l:_t[selector]={};null!==(_m=rollOptions["self:armor:strength-requirement-met"])&&void 0!==_m||(rollOptions["self:armor:strength-requirement-met"]=!0)}if(skill.armor&&"number"==typeof(null==wornArmor?void 0:wornArmor.checkPenalty)){const armorCheckPenalty=new modifiers_1.ModifierPF2e("PF2E.ArmorCheckPenalty",wornArmor.checkPenalty,modifiers_1.MODIFIER_TYPE.UNTYPED);armorCheckPenalty.predicate.not=["attack","armor:ignore-check-penalty"],["acr","ath"].includes(shortForm)?armorCheckPenalty.predicate.not.push("self:armor:strength-requirement-met","self:armor:trait:flexible"):"ste"===shortForm&&wornArmor.traits.has("noisy")?armorCheckPenalty.predicate.not.push({and:["self:armor:strength-requirement-met","armor:ignore-noisy-penalty"]}):armorCheckPenalty.predicate.not.push("self:armor:strength-requirement-met"),modifiers.push(armorCheckPenalty)}const rollOptions=[longForm,`${skill.ability}-based`,"skill-check","all"];modifiers.push(...rollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((m=>m.clone())));for(const modifier of modifiers)modifier.test(this.getRollOptions(rollOptions));const stat=mergeObject(new modifiers_1.StatisticModifier(longForm,modifiers),skill,{overwrite:!1});stat.breakdown=stat.modifiers.filter((modifier=>modifier.enabled)).map((modifier=>{const prefix=modifier.modifier<0?"":"+";return`${game.i18n.localize(modifier.name)} ${prefix}${modifier.modifier}`})).join(", "),stat.value=stat.totalModifier,stat.notes=rollOptions.flatMap((key=>{var _a;return duplicate(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[])})),stat.rank=skill.rank,stat.roll=args=>{var _a;const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:game.i18n.localize(CONFIG.PF2E.skills[shortForm])}),options=null!==(_a=args.options)&&void 0!==_a?_a:[];(0,modifiers_1.ensureProficiencyOption)(options,skill.rank),args.dc&&stat.adjustments&&(args.dc.adjustments=stat.adjustments),rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"skill-check",options,dc:args.dc,notes:stat.notes},args.event,args.callback)},skills[shortForm]=stat}itemTypes.lore.map((loreItem=>loreItem.data)).forEach((skill=>{const shortform=skill.name.toLowerCase().replace(/\s+/g,"-"),rank=skill.data.proficient.value,rollOptions=[shortform,"int-based","skill-check","all"],modifiers=[modifiers_1.AbilityModifier.fromScore("int",systemData.abilities.int.value),modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,rank),...rollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((m=>m.clone({test:this.getRollOptions(rollOptions)})))],loreSkill=systemData.skills[shortform],stat=mergeObject(new modifiers_1.StatisticModifier(skill.name,modifiers),loreSkill,{overwrite:!1});stat.itemID=skill._id,stat.notes=rollOptions.flatMap((key=>{var _a;return duplicate(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[])})),stat.rank=null!=rank?rank:0,stat.shortform=shortform,stat.expanded=skill,stat.value=stat.totalModifier,stat.lore=!0,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=args=>{var _a;const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:skill.name}),options=null!==(_a=args.options)&&void 0!==_a?_a:[];(0,modifiers_1.ensureProficiencyOption)(options,rank),rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"skill-check",options,dc:args.dc,notes:stat.notes},args.event,args.callback)},skills[shortform]=stat})),systemData.skills=skills,systemData.attributes.speed=this.prepareSpeed("land",synthetics);const{otherSpeeds}=systemData.attributes.speed;for(let idx=0;idx<otherSpeeds.length;idx++)otherSpeeds[idx]=this.prepareSpeed(otherSpeeds[idx].type,synthetics);systemData.actions=[];const getProficiencies=(translationMap,combatProficiencies,prefix)=>Object.keys(combatProficiencies).filter((key=>key.startsWith(prefix)&&key.replace(prefix,"")in translationMap)).map((key=>({key,data:combatProficiencies[key]}))).reduce(((accumulated,proficiency)=>{var _a;return void 0===(null===(_a=proficiency.data)||void 0===_a?void 0:_a.rank)?accumulated:Object.assign(Object.assign({},accumulated),{[proficiency.key]:{rank:proficiency.data.rank,name:game.i18n.localize(translationMap[proficiency.key.replace(prefix,"")])}})}),{}),weaponProficiencies=getProficiencies(localize_1.LocalizePF2e.translations.PF2E.Weapon.Base,systemData.martial,"weapon-base-"),groupProficiencies=getProficiencies(CONFIG.PF2E.weaponGroups,systemData.martial,"weapon-group-"),homebrewCategoryTags=game.settings.get("pf2e","homebrew.weaponCategories"),homebrewProficiencies=homebrewCategoryTags.reduce(((categories,category)=>{var _a,_b;return mergeObject(categories,{[category.id]:{name:category.value,rank:null!==(_b=null===(_a=systemData.martial[category.id])||void 0===_a?void 0:_a.rank)&&void 0!==_b?_b:0}})}),{});this.proficiencies=Object.assign(Object.assign(Object.assign({simple:{name:game.i18n.localize(CONFIG.PF2E.martialSkills.simple),rank:null!==(_o=systemData.martial.simple.rank)&&void 0!==_o?_o:0},martial:{name:game.i18n.localize(CONFIG.PF2E.martialSkills.martial),rank:null!==(_p=systemData.martial.martial.rank)&&void 0!==_p?_p:0},advanced:{name:game.i18n.localize(CONFIG.PF2E.martialSkills.advanced),rank:null!==(_q=systemData.martial.advanced.rank)&&void 0!==_q?_q:0},unarmed:{name:game.i18n.localize(CONFIG.PF2E.martialSkills.unarmed),rank:null!==(_r=systemData.martial.unarmed.rank)&&void 0!==_r?_r:0}},homebrewProficiencies),weaponProficiencies),groupProficiencies);const unarmed=(()=>{const source={_id:randomID(),name:game.i18n.localize("PF2E.WeaponTypeUnarmed"),type:"weapon",img:"systems/pf2e/icons/features/classes/powerful-fist.webp",data:{slug:"unarmed",baseItem:null,category:"unarmed",bonus:{value:0},damage:{dice:1,die:"d4",damageType:"bludgeoning"},group:"brawling",range:null,strikingRune:{value:null},traits:{value:["agile","finesse","nonlethal","unarmed"]},equipped:{value:!0}}};return itemTypes.feat.find((feat=>{var _a;return["powerful-fist","martial-artist-dedication"].includes(null!==(_a=feat.slug)&&void 0!==_a?_a:"")}))&&(source.name=localize_1.LocalizePF2e.translations.PF2E.Weapon.Base.fist,source.data.slug="fist",source.data.baseItem="fist",source.data.damage.die="d6"),new _item_1.WeaponPF2e(source,{parent:this,pf2e:{ready:!0}})})();synthetics.strikes.unshift(unarmed);const ammos=itemTypes.consumable.filter((item=>"ammo"===item.data.data.consumableType.value)),offensiveCategories=data_2.WEAPON_CATEGORIES.concat(homebrewCategoryTags.map((tag=>tag.id))),weapons=[itemTypes.weapon,strikes].flat().filter((weapon=>weapon.quantity>0));systemData.actions=weapons.map((weapon=>this.prepareStrike(weapon,{categories:offensiveCategories,synthetics,ammos})));for(const entry of itemTypes.spellcastingEntry){const entryData=entry.data,tradition=entry.tradition,rank=entry.data.data.proficiency.value=entry.rank,ability=entry.ability,baseModifiers=[modifiers_1.AbilityModifier.fromScore(ability,systemData.abilities[ability].value),modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,rank)],baseRollOptions=[`${ability}-based`,"all","spell-attack-dc"],baseNotes=baseRollOptions.flatMap((option=>{var _a;return duplicate(null!==(_a=rollNotes[option])&&void 0!==_a?_a:[])})),extendedBaseModifiers=baseRollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((modifier=>modifier.clone({test:this.getRollOptions(baseRollOptions)}))),attackRollOptions=[`${tradition}-spell-attack`,"spell-attack","attack","attack-roll"],attackNotes=attackRollOptions.flatMap((option=>{var _a;return duplicate(null!==(_a=rollNotes[option])&&void 0!==_a?_a:[])})),attackModifiers=attackRollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((modifier=>modifier.clone({test:this.getRollOptions(attackRollOptions)}))),saveRollOptions=[`${tradition}-spell-dc`,"spell-dc"],saveModifiers=saveRollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((modifier=>modifier.clone({test:this.getRollOptions(saveRollOptions)})));entryData.data.statisticData={name:game.i18n.format(`PF2E.SpellAttack.${tradition}`),modifiers:[...baseModifiers,...extendedBaseModifiers],notes:[...baseNotes,...attackNotes],check:{type:"spell-attack-roll",modifiers:attackModifiers},dc:{modifiers:saveModifiers}}}const{resources}=this.data.data;resources.focus.max=Math.clamped(resources.focus.max,0,3),!resources.focus.max&&this.spellcasting.some((entry=>entry.isFocusPool))&&(resources.focus.max=1),this.prepareInitiative(statisticsModifiers,rollNotes);for(const rule of this.rules)try{null===(_s=rule.onAfterPrepareData)||void 0===_s||_s.call(rule,synthetics)}catch(error){console.error(`PF2e | Failed to execute onAfterPrepareData on rule element ${rule}.`,error)}}prepareSpeed(movementType,synthetics){var _a,_b,_c,_d,_e;const{wornArmor}=this,basePenalty=null!==(_a=null==wornArmor?void 0:wornArmor.speedPenalty)&&void 0!==_a?_a:0,strength=this.data.data.abilities.str.value,value=strength>=(null!==(_b=null==wornArmor?void 0:wornArmor.strength)&&void 0!==_b?_b:strength)?Math.min(basePenalty+5,0):basePenalty,modifierName=null!==(_c=null==wornArmor?void 0:wornArmor.name)&&void 0!==_c?_c:"PF2E.ArmorSpeedLabel",armorPenalty=value?new modifiers_1.ModifierPF2e(modifierName,value,"untyped"):null;if(armorPenalty){const speedModifiers=null!==(_d=(_e=synthetics.statisticsModifiers).speed)&&void 0!==_d?_d:_e.speed=[];armorPenalty.predicate.not=["armor:ignore-speed-penalty"],armorPenalty.test(this.getRollOptions(["all","speed",`${movementType}-speed`])),speedModifiers.push(armorPenalty)}return super.prepareSpeed(movementType,synthetics)}prepareStrike(weapon,options){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v;const itemData=weapon.data,{rollNotes,statisticsModifiers}=options.synthetics,modifiers=[],weaponTraits=weapon.traits,systemData=this.data.data,{categories,synthetics}=options,ammos=null!==(_a=options.ammos)&&void 0!==_a?_a:[],defaultAbility=weapon.isMelee?"str":"dex",score=systemData.abilities[defaultAbility].value;if(modifiers.push(modifiers_1.AbilityModifier.fromScore(defaultAbility,score)),weapon.isMelee&&weaponTraits.has("finesse")){const dexScore=systemData.abilities.dex.value;modifiers.push(modifiers_1.AbilityModifier.fromScore("dex",dexScore))}const weaponRollOptions=weapon.getItemRollOptions(),categoryRank=null!==(_c=null===(_b=systemData.martial[weapon.category])||void 0===_b?void 0:_b.rank)&&void 0!==_c?_c:0,groupRank=null!==(_e=null===(_d=this.proficiencies[`weapon-group-${weapon.group}`])||void 0===_d?void 0:_d.rank)&&void 0!==_e?_e:0,baseWeapon=null!==(_g=CONFIG.PF2E.equivalentWeapons[null!==(_f=weapon.baseType)&&void 0!==_f?_f:""])&&void 0!==_g?_g:weapon.baseType,baseWeaponRank=null!==(_j=null===(_h=this.proficiencies[`weapon-base-${baseWeapon}`])||void 0===_h?void 0:_h.rank)&&void 0!==_j?_j:0,linkedRank=(()=>{var _a;const linkedProficiency=Object.values(systemData.martial).filter((p=>"sameAs"in p)).find((proficiency=>proficiency.predicate.test(weaponRollOptions)));return null!==(_a=null==linkedProficiency?void 0:linkedProficiency.rank)&&void 0!==_a?_a:0})(),proficiencyRank=Math.max(categoryRank,groupRank,baseWeaponRank,linkedRank);modifiers.push(modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,proficiencyRank));const defaultOptions=this.getRollOptions(["all","attack-roll"]).concat(...weaponTraits).concat(weaponRollOptions).concat(weapon.isMelee?"melee":"ranged");(0,modifiers_1.ensureProficiencyOption)(defaultOptions,proficiencyRank);const selectors=(()=>{const baseSelectors=["attack","mundane-attack",`${weapon.id}-attack`,`${(0,_util_1.sluggify)(weapon.name)}-attack`,"attack-roll","all"],abilityModifier=[...modifiers,...baseSelectors.flatMap((selector=>{var _a;return null!==(_a=statisticsModifiers[selector])&&void 0!==_a?_a:[]}))].filter((m=>"ability"===m.type)).flatMap((modifier=>modifier.predicate.test(defaultOptions)?modifier:[])).reduce(((best,candidate)=>candidate.modifier>best.modifier?candidate:best));if(!abilityModifier)return console.warn(`PF2e System | No ability modifier was determined for attack roll with ${weapon.name} (${weapon.uuid})`),baseSelectors;const ability=abilityModifier.ability;return[baseSelectors,baseWeapon&&!baseWeapon.includes(`${baseWeapon}-attack`)?`${baseWeapon}-attack`:[],weapon.group?`${weapon.group}-weapon-group-attack`:[],`${ability}-attack`,`${ability}-based`].flat()})(),notes=selectors.flatMap((key=>{var _a;return duplicate(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[])}));if("bomb"===weapon.group){const attackBonus=Number(null===(_k=itemData.data.bonus)||void 0===_k?void 0:_k.value)||0;0!==attackBonus&&modifiers.push(new modifiers_1.ModifierPF2e("PF2E.ItemBonusLabel",attackBonus,modifiers_1.MODIFIER_TYPE.ITEM))}if(weapon.traits.has("kickback")){const penalty=new modifiers_1.ModifierPF2e(CONFIG.PF2E.weaponTraits.kickback,-2,modifiers_1.MODIFIER_TYPE.CIRCUMSTANCE),strengthLessThan14="self:ability:strength:less-than-14";penalty.predicate=new predication_1.PredicatePF2e({all:[strengthLessThan14]});const attackRollOptions=null!==(_l=(_v=this.rollOptions)["attack-roll"])&&void 0!==_l?_l:_v["attack-roll"]={};penalty.ignored=!(attackRollOptions[strengthLessThan14]=this.data.data.abilities.str.value<14),modifiers.push(penalty)}let weaponPotency;const multipleAttackPenalty=base_1.ItemPF2e.calculateMap(itemData);{const potency=[],multipleAttackPenalties=[];for(const key of selectors)modifiers.push(...(null!==(_m=statisticsModifiers[key])&&void 0!==_m?_m:[]).map((m=>m.clone({test:this.getRollOptions(selectors)})))),(null!==(_o=synthetics.weaponPotency[key])&&void 0!==_o?_o:[]).filter((wp=>predication_1.PredicatePF2e.test(wp.predicate,defaultOptions))).forEach((wp=>potency.push(wp))),(null!==(_p=synthetics.multipleAttackPenalties[key])&&void 0!==_p?_p:[]).filter((map=>predication_1.PredicatePF2e.test(map.predicate,defaultOptions))).forEach((map=>multipleAttackPenalties.push(map)));const potencyRune=Number(null===(_q=itemData.data.potencyRune)||void 0===_q?void 0:_q.value)||0;potencyRune&&potency.push({label:"PF2E.PotencyRuneLabel",bonus:potencyRune}),potency.length>0&&(weaponPotency=potency.reduce(((highest,current)=>highest.bonus>current.bonus?highest:current),potency[0]),modifiers.push(new modifiers_1.ModifierPF2e(weaponPotency.label,weaponPotency.bonus,modifiers_1.MODIFIER_TYPE.ITEM))),multipleAttackPenalties.push({label:"PF2E.MultipleAttackPenalty",penalty:multipleAttackPenalty.map2});const{label,penalty}=multipleAttackPenalties.reduce(((lowest,current)=>lowest.penalty>current.penalty?lowest:current),multipleAttackPenalties[0]);multipleAttackPenalty.label=label,multipleAttackPenalty.map2=penalty,multipleAttackPenalty.map3=2*penalty}const flavor=this.getStrikeDescription(weapon),strikeStat=new modifiers_1.StatisticModifier(weapon.name,modifiers),meleeUsage=weapon.toMeleeUsage(),action=mergeObject(strikeStat,{imageUrl:weapon.img,item:weapon.id,slug:weapon.slug,ready:weapon.isEquipped,glyph:"A",type:"strike",description:flavor.description,criticalSuccess:flavor.criticalSuccess,success:flavor.success,options:null!==(_s=null===(_r=itemData.data.options)||void 0===_r?void 0:_r.value)&&void 0!==_s?_s:[],traits:[],variants:[],selectedAmmoId:itemData.data.selectedAmmoId,meleeUsage:meleeUsage?this.prepareStrike(meleeUsage,{categories,synthetics}):null});Object.defineProperty(action,"origin",{get:()=>this.items.get(weapon.id)}),Object.defineProperty(action,"weapon",{get:()=>weapon});const usesAmmo={bases:["blowgun"],groups:["firearm","bow","sling"]};if(usesAmmo.groups.includes(null!==(_t=weapon.group)&&void 0!==_t?_t:"")||usesAmmo.bases.includes(null!==(_u=weapon.baseType)&&void 0!==_u?_u:"")){const compatible=ammos.filter((ammo=>ammo.isAmmoFor(weapon))).map((ammo=>ammo.toObject(!1))),incompatible=ammos.filter((ammo=>!ammo.isAmmoFor(weapon))).map((ammo=>ammo.toObject(!1))),ammo=weapon.ammo,selected=ammo&&{id:ammo.id,compatible:ammo.isAmmoFor(weapon)};action.ammunition={compatible,incompatible,selected:null!=selected?selected:void 0}}const traitDescriptions=CONFIG.PF2E.traitsDescriptions,attackTrait={name:"attack",label:CONFIG.PF2E.featTraits.attack,description:CONFIG.PF2E.traitsDescriptions.attack,toggle:!1};action.traits=[attackTrait].concat([...weaponTraits].map((trait=>{var _a,_b;const traitObject={name:trait,label:null!==(_a=CONFIG.PF2E.npcAttackTraits[trait])&&void 0!==_a?_a:trait,toggle:!1,description:null!==(_b=traitDescriptions[trait])&&void 0!==_b?_b:""};return trait.startsWith("two-hand-")?(traitObject.rollName="damage-roll",traitObject.rollOption="two-handed"):trait.startsWith("versatile-")&&(traitObject.rollName="damage-roll",traitObject.rollOption=trait),traitObject.rollName&&traitObject.rollOption&&(traitObject.toggle=!0,traitObject.cssClass=this.getRollOptions([traitObject.rollName]).includes(traitObject.rollOption)?"toggled-on":"toggled-off"),traitObject}))),action.breakdown=action.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", ");const strikeLabel=game.i18n.localize("PF2E.WeaponStrikeLabel"),flavorText=weapon.traits.has("combination")?weapon.isMelee?game.i18n.format("PF2E.Item.Weapon.MeleeUsage.StrikeLabel.Melee",{weapon:weapon.name}):game.i18n.format("PF2E.Item.Weapon.MeleeUsage.StrikeLabel.Ranged",{weapon:weapon.name}):`${strikeLabel}: ${action.name}`,labels=[`${game.i18n.localize("PF2E.RuleElement.Strike")} ${action.totalModifier<0?"":"+"}${action.totalModifier}`,game.i18n.format("PF2E.MAPAbbreviationLabel",{penalty:multipleAttackPenalty.map2}),game.i18n.format("PF2E.MAPAbbreviationLabel",{penalty:multipleAttackPenalty.map3})],checkModifiers=[()=>new modifiers_1.CheckModifier(flavorText,action),()=>new modifiers_1.CheckModifier(flavorText,action,[new modifiers_1.ModifierPF2e(multipleAttackPenalty.label,multipleAttackPenalty.map2,modifiers_1.MODIFIER_TYPE.UNTYPED)]),()=>new modifiers_1.CheckModifier(flavorText,action,[new modifiers_1.ModifierPF2e(multipleAttackPenalty.label,multipleAttackPenalty.map3,modifiers_1.MODIFIER_TYPE.UNTYPED)])];action.variants=[0,1,2].map((index=>[labels[index],checkModifiers[index]])).map((([label,constructModifier])=>({label,roll:args=>{var _a,_b;const traits=["attack",...weapon.traits],context=this.createAttackRollContext({traits}),options=Array.from(new Set([null!==(_a=args.options)&&void 0!==_a?_a:[],context.options,action.options,defaultOptions])).flat(),dc=null!==(_b=args.dc)&&void 0!==_b?_b:context.dc;dc&&action.adjustments&&(dc.adjustments=action.adjustments),rolls_1.CheckPF2e.roll(constructModifier(),{actor:this,item:weapon,type:"attack-roll",options,notes,dc,traits:action.traits},args.event,args.callback)}}))),action.attack=action.roll=action.variants[0].roll;for(const method of["damage","critical"])action[method]=args=>{var _a;const ctx=this.createDamageRollContext(args.event),options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(ctx.options).concat(action.options).concat(defaultOptions),damage=weapon_1.WeaponDamagePF2e.calculate(itemData,this,action.traits,statisticsModifiers,synthetics.damageDice,proficiencyRank,options,rollNotes,weaponPotency,synthetics.striking),outcome="damage"===method?"success":"criticalSuccess";if(args.getFormula)return damage.formula[outcome].formula;rolls_1.DamageRollPF2e.roll(damage,{type:"damage-roll",item:weapon,actor:this,outcome,options},args.event,args.callback)};return action}async toggleInvested(itemId){const item=this.physicalItems.get(itemId);if(!(null==item?void 0:item.traits.has("invested")))throw(0,_util_1.ErrorPF2e)("Unexpected error toggling item investment");return!!await item.update({"data.invested.value":!item.isInvested})}async addCombatProficiency(key){if(key in this.data.data.martial)return;await this.update({[`data.martial.${key}`]:{rank:0,value:0,breakdown:"",custom:!0}})}async removeCombatProficiency(key){await this.update({[`data.martial.-=${key}`]:null})}async deleteEmbeddedDocuments(embeddedName,ids,context={}){if("Item"===embeddedName){const featureIds=[this.ancestry,this.background,this.class].filter((item=>!!item&&ids.includes(item.id))).flatMap((item=>item.getLinkedFeatures().map((feature=>feature.id))));ids.push(...featureIds)}return super.deleteEmbeddedDocuments(embeddedName,[...new Set(ids)],context)}async _preUpdate(data,options,user){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p;const characterData=this.data.data;game.settings.get("pf2e","staminaVariant")&&((null===(_b=null===(_a=data.data)||void 0===_a?void 0:_a.attributes)||void 0===_b?void 0:_b.sp)&&(data.data.attributes.sp.value=Math.clamped((null===(_e=null===(_d=null===(_c=data.data)||void 0===_c?void 0:_c.attributes)||void 0===_d?void 0:_d.sp)||void 0===_e?void 0:_e.value)||0,0,characterData.attributes.sp.max)),(null===(_g=null===(_f=data.data)||void 0===_f?void 0:_f.attributes)||void 0===_g?void 0:_g.resolve)&&(data.data.attributes.resolve.value=Math.clamped((null===(_k=null===(_j=null===(_h=data.data)||void 0===_h?void 0:_h.attributes)||void 0===_j?void 0:_j.resolve)||void 0===_k?void 0:_k.value)||0,0,characterData.attributes.resolve.max)));const newLevel=null!==(_p=null===(_o=null===(_m=null===(_l=data.data)||void 0===_l?void 0:_l.details)||void 0===_m?void 0:_m.level)||void 0===_o?void 0:_o.value)&&void 0!==_p?_p:this.level;newLevel!==this.level&&await manager_1.AncestryBackgroundClassManager.ensureClassFeaturesForLevel(this,newLevel),await super._preUpdate(data,options,user)}}exports.CharacterPF2e=CharacterPF2e},39481:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CharacterSheetPF2e=void 0;const base_1=__webpack_require__(24227),bulk_1=__webpack_require__(47297),helpers_1=__webpack_require__(23247),encumbrance_1=__webpack_require__(39057),spellcasting_entry_1=__webpack_require__(70267),modifiers_1=__webpack_require__(27324),data_1=__webpack_require__(52769),_1=__webpack_require__(886),sheet_1=__webpack_require__(83936),manage_combat_proficiencies_1=__webpack_require__(23958),_util_1=__webpack_require__(6945),_item_1=__webpack_require__(10843),manager_1=__webpack_require__(88297),data_2=__webpack_require__(39530),craft_1=__webpack_require__(46472),helpers_2=__webpack_require__(67285),spell_consumables_1=__webpack_require__(87458);class CharacterSheetPF2e extends sheet_1.CreatureSheetPF2e{static get defaultOptions(){return mergeObject(super.defaultOptions,{classes:["default","sheet","actor","pc"],width:750,height:800,tabs:[{navSelector:".sheet-navigation",contentSelector:".sheet-content",initial:"character"}],showUnpreparedSpells:!1})}get template(){return`systems/pf2e/templates/actors/character/${this.actor.limited&&!game.user.isGM?"limited":"sheet"}.html`}async _updateObject(event,formData){const heldShield=this.actor.heldShield;heldShield&&await heldShield.update({"data.hp.value":formData["data.attributes.shield.hp.value"]}),await super._updateObject(event,formData)}async getData(options){var _a;const sheetData=await super.getData(options);sheetData.ancestry=this.actor.ancestry,sheetData.background=this.actor.background,sheetData.class=this.actor.class,sheetData.data.resources.heroPoints.icon=this.getHeroPointsIcon(sheetData.data.resources.heroPoints.value),sheetData.data.resources.heroPoints.hover=game.i18n.format(1===this.actor.heroPoints.value?"PF2E.HeroPointRatio.One":"PF2E.HeroPointRatio.Many",this.actor.heroPoints),sheetData.data.attributes.classDC.icon=this.getProficiencyIcon(sheetData.data.attributes.classDC.rank),sheetData.data.attributes.classDC.hover=CONFIG.PF2E.proficiencyLevels[sheetData.data.attributes.classDC.rank],sheetData.magicTraditions=CONFIG.PF2E.magicTraditions,sheetData.preparationType=CONFIG.PF2E.preparationType,sheetData.showUnpreparedSpells=sheetData.options.showUnpreparedSpells,sheetData.data.attributes.dying.icon=this.getDyingIcon(sheetData.data.attributes.dying.value),sheetData.data.attributes.wounded.icon=this.getWoundedIcon(sheetData.data.attributes.wounded.value),sheetData.data.attributes.wounded.max=sheetData.data.attributes.dying.max-1,sheetData.data.attributes.doomed.icon=this.getDoomedIcon(sheetData.data.attributes.doomed.value),sheetData.data.attributes.doomed.max=sheetData.data.attributes.dying.max-1,sheetData.data.attributes.perception.rankName=game.i18n.format(`PF2E.ProficiencyLevel${sheetData.data.attributes.perception.rank}`),sheetData.data.saves={fortitude:sheetData.data.saves.fortitude,reflex:sheetData.data.saves.reflex,will:sheetData.data.saves.will};for(const save of Object.values(sheetData.data.saves))save.rankName=game.i18n.format(`PF2E.ProficiencyLevel${save.rank}`);sheetData.data.attributes.classDC.rankName=game.i18n.format(`PF2E.ProficiencyLevel${sheetData.data.attributes.classDC.rank}`);for(const save of Object.values(sheetData.data.saves))save.short=game.i18n.format(`PF2E.Saves${save.label}Short`);sheetData.data.details.keyability.singleOption=1===(null===(_a=this.actor.class)||void 0===_a?void 0:_a.data.data.keyAbility.value.length),sheetData.data.effects={},sheetData.data.effects.conditions=game.pf2e.ConditionManager.getFlattenedConditions(this.actor.itemTypes.condition),sheetData.showPFSTab=game.settings.get("pf2e","pfsSheetTab"),sheetData.hasStamina=game.settings.get("pf2e","staminaVariant")>0,this.prepareSpellcasting(sheetData);const formulasByLevel=await this.prepareCraftingFormulas();sheetData.crafting={noCost:this.actor.data.flags.pf2e.freeCrafting,knownFormulas:formulasByLevel,entries:await this.prepareCraftingEntries()},this.knownFormulas=new Map(Object.values(formulasByLevel).flat().map((formula=>[formula.uuid,formula]))),sheetData.abpEnabled="noABP"!==game.settings.get("pf2e","automaticBonusVariant");const combatProficiencies=sheetData.data.martial,weaponCategories=data_2.WEAPON_CATEGORIES,isWeaponProficiency=key=>weaponCategories.includes(key)||/\bweapon\b/.test(key);sheetData.data.martial=Object.entries(combatProficiencies).filter((entries=>!(entries[1]&&"sameAs"in entries[1]))).sort((([keyA,valueA],[keyB,valueB])=>{var _a,_b;return isWeaponProficiency(keyA)&&!isWeaponProficiency(keyB)?-1:!isWeaponProficiency(keyA)&&isWeaponProficiency(keyB)?1:(null!==(_a=valueA.label)&&void 0!==_a?_a:"").localeCompare(null!==(_b=valueB.label)&&void 0!==_b?_b:"")})).reduce(((proficiencies,[key,proficiency])=>Object.assign(Object.assign({},proficiencies),{[key]:proficiency})),{});const baseData=this.actor.toObject();return sheetData.adjustedBonusEncumbranceBulk=this.actor.attributes.bonusEncumbranceBulk!==baseData.data.attributes.bonusEncumbranceBulk,sheetData.adjustedBonusLimitBulk=this.actor.attributes.bonusLimitBulk!==baseData.data.attributes.bonusLimitBulk,sheetData}prepareItems(sheetData){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o;const actorData=sheetData.actor,inventory={weapon:{label:game.i18n.localize("PF2E.InventoryWeaponsHeader"),items:[]},armor:{label:game.i18n.localize("PF2E.InventoryArmorHeader"),items:[]},equipment:{label:game.i18n.localize("PF2E.InventoryEquipmentHeader"),items:[],investedItemCount:0},consumable:{label:game.i18n.localize("PF2E.InventoryConsumablesHeader"),items:[]},treasure:{label:game.i18n.localize("PF2E.InventoryTreasureHeader"),items:[]},backpack:{label:game.i18n.localize("PF2E.InventoryBackpackHeader"),items:[]}},tempFeats=[],featSlots={ancestryfeature:{label:"PF2E.FeaturesAncestryHeader",feats:[],bonusFeats:[]},classfeature:{label:"PF2E.FeaturesClassHeader",feats:[],bonusFeats:[]},ancestry:{label:"PF2E.FeatAncestryHeader",feats:[],bonusFeats:[]},class:{label:"PF2E.FeatClassHeader",feats:[],bonusFeats:[]},dualclass:{label:"PF2E.FeatDualClassHeader",feats:[],bonusFeats:[]},archetype:{label:"PF2E.FeatArchetypeHeader",feats:[],bonusFeats:[]},skill:{label:"PF2E.FeatSkillHeader",feats:[],bonusFeats:[]},general:{label:"PF2E.FeatGeneralHeader",feats:[],bonusFeats:[]},bonus:{label:"PF2E.FeatBonusHeader",feats:[],bonusFeats:[]}};if(game.settings.get("pf2e","dualClassVariant")){featSlots.dualclass.feats.push({id:"dualclass-1",level:1});for(let level=2;level<=actorData.data.details.level.value;level+=2)featSlots.dualclass.feats.push({id:`dualclass-${level}`,level})}else delete featSlots.dualclass;if(game.settings.get("pf2e","freeArchetypeVariant"))for(let level=2;level<=actorData.data.details.level.value;level+=2)featSlots.archetype.feats.push({id:`archetype-${level}`,level});else delete featSlots.archetype;const pfsBoons=[],deityBoonsCurses=[],actions={action:{label:game.i18n.localize("PF2E.ActionsActionsHeader"),actions:[]},reaction:{label:game.i18n.localize("PF2E.ActionsReactionsHeader"),actions:[]},free:{label:game.i18n.localize("PF2E.ActionsFreeActionsHeader"),actions:[]}},readonlyEquipment=[],attacks={weapon:{label:"Compendium Weapon",items:[],type:"weapon"}},lores=[],bulkConfig={ignoreCoinBulk:game.settings.get("pf2e","ignoreCoinBulk")},bulkItems=(0,bulk_1.itemsFromActorData)(actorData),bulkItemsById=(0,bulk_1.indexBulkItemsById)(bulkItems),containers=(0,helpers_1.getContainerMap)({items:actorData.items.filter((itemData=>itemData.isPhysical)),bulkItemsById,bulkConfig,actorSize:this.actor.size});let investedCount=0;const investedMax=actorData.data.resources.investiture.max;for(const itemData of sheetData.items){const physicalData=itemData;if(physicalData.isPhysical){itemData.showEdit=sheetData.user.isGM||physicalData.isIdentified,itemData.img||(itemData.img=CONST.DEFAULT_TOKEN);const containerData=containers.get(itemData._id);if(itemData.containerData=containerData,itemData.isInContainer=containerData.isInContainer,itemData.isInvestable=physicalData.isEquipped&&physicalData.isIdentified&&null!==physicalData.isInvested,"armor"!==physicalData.type&&"equipment"!==physicalData.type&&"consumable"!==physicalData.type&&"backpack"!==physicalData.type||(readonlyEquipment.push(itemData),actorData.hasEquipment=!0),itemData.canBeEquipped=!containerData.isInContainer,itemData.isSellableTreasure=itemData.showEdit&&"treasure"===physicalData.type&&"coins"!==physicalData.data.stackGroup.value,physicalData.isInvested&&(investedCount+=1),Object.keys(inventory).includes(itemData.type)){itemData.data.quantity.value=physicalData.data.quantity.value||0,itemData.data.weight.value=physicalData.data.weight.value||0;const bulkItem=bulkItemsById.get(physicalData._id),[approximatedBulk]=(0,bulk_1.calculateBulk)({items:void 0===bulkItem?[]:[bulkItem],bulkConfig,actorSize:this.actor.data.data.traits.size.value});itemData.totalWeight=(0,bulk_1.formatBulk)(approximatedBulk),itemData.hasCharges="consumable"===physicalData.type&&physicalData.data.charges.max>0,"weapon"===physicalData.type&&(itemData.isTwoHanded=physicalData.data.traits.value.some((trait=>trait.startsWith("two-hand"))),itemData.wieldedTwoHanded=physicalData.data.hands.value,attacks.weapon.items.push(itemData)),"book"===physicalData.type?inventory.equipment.items.push(itemData):inventory[physicalData.type].items.push(itemData)}}else if("feat"===itemData.type){const actionType=itemData.data.actionType.value||"passive";tempFeats.push(itemData),Object.keys(actions).includes(actionType)&&(itemData.feat=!0,itemData.img=_1.CharacterPF2e.getActionGraphics(actionType,parseInt((itemData.data.actions||{}).value,10)||1).imageUrl,actions[actionType].actions.push(itemData))}else if("lore"===itemData.type){itemData.data.icon=this.getProficiencyIcon((itemData.data.proficient||{}).value),itemData.data.hover=CONFIG.PF2E.proficiencyLevels[(itemData.data.proficient||{}).value];const rank=(null===(_a=itemData.data.proficient)||void 0===_a?void 0:_a.value)||0,proficiency=modifiers_1.ProficiencyModifier.fromLevelAndRank(actorData.data.details.level.value,rank).modifier,modifier=actorData.data.abilities.int.mod,itemBonus=Number((itemData.data.item||{}).value||0);itemData.data.itemBonus=itemBonus,itemData.data.value=modifier+proficiency+itemBonus,itemData.data.breakdown=`int modifier(${modifier}) + proficiency(${proficiency}) + item bonus(${itemBonus})`,lores.push(itemData)}else if("action"===itemData.type){const actionType=["free","reaction","passive"].includes(itemData.data.actionType.value)?itemData.data.actionType.value:"action";itemData.img=_1.CharacterPF2e.getActionGraphics(actionType,parseInt((itemData.data.actions||{}).value,10)||1).imageUrl,"passive"===actionType?actions.free.actions.push(itemData):actions[actionType].actions.push(itemData)}else if("class"===itemData.type){const classItem=itemData,mapFeatLevels=(featLevels,prefix)=>featLevels?featLevels.filter((featSlotLevel=>actorData.data.details.level.value>=featSlotLevel)).map((level=>({id:`${prefix}-${level}`,level}))):[];featSlots.ancestry.feats=mapFeatLevels(null===(_b=classItem.data.ancestryFeatLevels)||void 0===_b?void 0:_b.value,"ancestry"),featSlots.class.feats=mapFeatLevels(null===(_c=classItem.data.classFeatLevels)||void 0===_c?void 0:_c.value,"class"),featSlots.skill.feats=mapFeatLevels(null===(_d=classItem.data.skillFeatLevels)||void 0===_d?void 0:_d.value,"skill"),featSlots.general.feats=mapFeatLevels(null===(_e=classItem.data.generalFeatLevels)||void 0===_e?void 0:_e.value,"general")}}if(game.settings.get("pf2e","ancestryParagonVariant")){featSlots.ancestry.feats.unshift({id:"ancestry-bonus",level:1});for(let level=3;level<=actorData.data.details.level.value;level+=4){const index=(level+1)/2;featSlots.ancestry.feats.splice(index,0,{id:`ancestry-${level}`,level})}}const background=this.actor.background;background&&Object.keys(background.data.data.items).length>0&&featSlots.skill.feats.unshift({id:background.id,level:game.i18n.localize("PF2E.FeatBackgroundShort")}),inventory.equipment.investedItemCount=investedCount,inventory.equipment.investedMax=investedMax,inventory.equipment.overInvested=investedMax<investedCount;const allFeatSlots=Object.values(featSlots).flatMap((slot=>slot.feats));for(const feat of tempFeats){let slotIndex=allFeatSlots.findIndex((slotted=>slotted.id===feat.data.location));const existing=null===(_f=allFeatSlots[slotIndex])||void 0===_f?void 0:_f.feat;if(-1!==slotIndex&&existing&&(console.debug(`Foundry VTT | Multiple feats with same index: ${feat.name}, ${existing.name}`),slotIndex=-1),-1!==slotIndex)allFeatSlots[slotIndex].feat=feat;else{let featType=feat.data.featType.value||"bonus";if("heritage"===featType&&(featType="ancestryfeature"),"pfsboon"===featType)pfsBoons.push(feat);else if(["deityboon","curse"].includes(featType))deityBoonsCurses.push(feat);else if(["ancestryfeature","classfeature"].includes(featType)||(featType="bonus"),featType in featSlots){featSlots[featType].bonusFeats.push(feat)}}}featSlots.classfeature.bonusFeats.sort(((a,b)=>a.data.level.value>b.data.level.value?1:-1)),Object.values(actions).flatMap((section=>section.actions)).forEach((action=>{action.downtime=action.data.traits.value.includes("downtime"),action.exploration=action.data.traits.value.includes("exploration"),action.encounter=!(action.downtime||action.exploration)})),actorData.inventory=inventory,actorData.featSlots=featSlots,actorData.pfsBoons=pfsBoons,actorData.deityBoonsCurses=deityBoonsCurses,actorData.attacks=attacks,actorData.actions=actions,actorData.readonlyEquipment=readonlyEquipment,actorData.lores=lores;const equippedShield=null===(_g=this.actor.heldShield)||void 0===_g?void 0:_g.data;void 0===equippedShield?(actorData.data.attributes.shield={hp:{value:0},maxHp:{value:0},armor:{value:0},hardness:{value:0},brokenThreshold:{value:0}},actorData.data.attributes.shieldBroken=!1):(actorData.data.attributes.shield=duplicate(equippedShield.data),actorData.data.attributes.shieldBroken=equippedShield.data.hp.value<=equippedShield.data.brokenThreshold.value);const bonusEncumbranceBulk=null!==(_h=actorData.data.attributes.bonusEncumbranceBulk)&&void 0!==_h?_h:0,bonusLimitBulk=null!==(_j=actorData.data.attributes.bonusLimitBulk)&&void 0!==_j?_j:0,[bulk]=(0,bulk_1.calculateBulk)({items:bulkItems,bulkConfig,actorSize:this.actor.data.data.traits.size.value});actorData.data.attributes.encumbrance=(0,encumbrance_1.calculateEncumbrance)(actorData.data.abilities.str.mod,bonusEncumbranceBulk,bonusLimitBulk,bulk,null!==(_o=null===(_m=null===(_l=null===(_k=actorData.data)||void 0===_k?void 0:_k.traits)||void 0===_l?void 0:_l.size)||void 0===_m?void 0:_m.value)&&void 0!==_o?_o:"med")}prepareSpellcasting(sheetData){sheetData.spellcastingEntries=[];for(const itemData of sheetData.items)if("spellcastingEntry"===itemData.type){const entry=this.actor.spellcasting.get(itemData._id);if(!entry)continue;sheetData.spellcastingEntries.push(Object.assign(Object.assign({},itemData),entry.getSpellData()))}}async prepareCraftingFormulas(){const craftingFormulas=await this.actor.getCraftingFormulas();return Object.fromEntries((0,_util_1.groupBy)(craftingFormulas,(formula=>formula.level)))}async prepareCraftingEntries(){const actorCraftingEntries=await this.actor.getCraftingEntries(),craftingEntries={other:[],alchemical:{entries:[],totalReagentCost:0,infusedReagents:this.actor.data.data.resources.crafting.infusedReagents}};return actorCraftingEntries.forEach((entry=>{entry.isAlchemical?(craftingEntries.alchemical.entries.push(entry),craftingEntries.alchemical.totalReagentCost+=entry.reagentCost||0):craftingEntries.other.push(entry)})),craftingEntries}disableInitiativeButton(){this.element.find(".sidebar a.roll-init").addClass("disabled").attr({title:game.i18n.localize("PF2E.Encounter.NoActiveEncounter")})}enableInitiativeButton(){this.element.find(".sidebar a.roll-init").removeClass("disabled").removeAttr("title")}activateListeners(html){var _a;super.activateListeners(html),game.combat?this.enableInitiativeButton():this.disableInitiativeButton(),html.find(".roll-init").on("mouseenter",(event=>{const $target=$(event.currentTarget);$target.hasClass("disabled")&&game.combat?this.enableInitiativeButton():$target.hasClass("disabled")||game.combat||this.disableInitiativeButton()})),html.find('[name="ammo-used"]').on("change",(event=>{var _a;event.stopPropagation();const actionIndex=$(event.currentTarget).parents(".item").attr("data-action-index"),action=this.actor.data.data.actions[Number(actionIndex)],weapon=this.actor.items.get(action.item),ammo=this.actor.items.get($(event.currentTarget).val());weapon&&weapon.update({data:{selectedAmmoId:null!==(_a=null==ammo?void 0:ammo.id)&&void 0!==_a?_a:null}})})),html.find(".adjust-stat").on("click contextmenu",(event=>this.onClickAdjustStat(event))),html.find(".adjust-stat-select").on("change",(event=>this.onChangeAdjustStat(event))),html.find(".adjust-item-stat").on("click contextmenu",(event=>this.onClickAdjustItemStat(event))),html.find(".adjust-item-stat-select").on("change",(event=>this.onChangeAdjustItemStat(event)));{const title=$(".sheet-navigation .active").data("tabTitle");title&&html.find(".navigation-title").text(title)}html.find(".sheet-navigation").on("mouseover",".item",(event=>{const title=event.currentTarget.dataset.tabTitle;title&&$(event.currentTarget).parents(".sheet-navigation").find(".navigation-title").text(title)})),html.find(".sheet-navigation").on("mouseout",".item",(event=>{const parent=$(event.currentTarget).parents(".sheet-navigation"),title=parent.find(".item.active").data("tabTitle");title&&parent.find(".navigation-title").text(title)})),html.find(".open-compendium").on("click",(event=>{if(event.currentTarget.dataset.compendium){const compendium=game.packs.get(event.currentTarget.dataset.compendium);compendium&&compendium.render(!0)}})),html.find(".toggle-unready-strikes").on("click",(()=>{this.actor.setFlag(game.system.id,"showUnreadyStrikes",!this.actor.getFlag(game.system.id,"showUnreadyStrikes"))})),html.find(".actions-nav").on("click",".tab:not(.tab-active)",(event=>{const target=$(event.currentTarget),nav=target.parents(".actions-nav");nav.children(".tab-active").removeClass("tab-active"),nav.siblings(".actions-panels").children(".actions-panel.active").removeClass("active"),target.addClass("tab-active"),nav.siblings(".actions-panels").children(`#${target.data("panel")}`).addClass("active")})),html.find(".crb-trait-selector").on("click",(event=>this.onTraitSelector(event))),html.find(".actions-list span[data-roll-option]").on("click",(event=>{const{rollName,rollOption}=event.currentTarget.dataset;rollName&&rollOption&&this.actor.toggleRollOption(rollName,rollOption)}));const $strikesList=html.find(".tab.actions .strikes-list"),damageButtonSelectors=['button[data-action="strike-damage"]','button[data-action="strike-critical"]'].join(", "),$damageButtons=$strikesList.find(damageButtonSelectors);for(const damageButton of $damageButtons){const $button=$(damageButton),method="strike-damage"===$button.attr("data-action")?"damage":"critical",strike=this.getStrikeFromDOM($button[0]),formula=null===(_a=null==strike?void 0:strike[method])||void 0===_a?void 0:_a.call(strike,{getFormula:!0});formula&&($button.attr({title:formula}),$button.tooltipster({position:"bottom",theme:"crb-hover"}))}$strikesList.find(".item-summary .item-properties.tags .tag").each(((_idx,span)=>{span.dataset.description&&$(span).tooltipster({content:game.i18n.localize(span.dataset.description),maxWidth:400,theme:"crb-hover"})})),$strikesList.find(".melee-icon").tooltipster({content:game.i18n.localize("PF2E.Item.Weapon.MeleeUsage.Label"),position:"left",theme:"crb-hover"}),html.find(".add-modifier .fas.fa-plus-circle").on("click",(event=>this.onIncrementModifierValue(event))),html.find(".add-modifier .fas.fa-minus-circle").on("click",(event=>this.onDecrementModifierValue(event))),html.find(".add-modifier .add-modifier-submit").on("click",(event=>this.onAddCustomModifier(event))),html.find(".modifier-list .remove-modifier").on("click",(event=>this.onRemoveCustomModifier(event))),html.find(".item-toggle-invest").on("click",(event=>{var _a;const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"";this.actor.toggleInvested(itemId)})),html.find("i.fa-info-circle.small[title]").tooltipster({maxWidth:275,position:"right",theme:"crb-hover",contentAsHTML:!0});{const $tab=html.find(".tab.skills");$tab.find("ol.inventory-header.combat-proficiencies").find("a.add").on("click",(event=>{manage_combat_proficiencies_1.ManageCombatProficiencies.add(this.actor,event)}));$tab.find("ol.combat-list").find("li.skill.custom a.delete").on("click",(event=>{manage_combat_proficiencies_1.ManageCombatProficiencies.remove(this.actor,event)}))}html.find(".hover").tooltipster({animation:"fade",delay:200,trigger:"click",arrow:!1,contentAsHTML:!0,debug:!1,interactive:!0,side:["right","bottom"],theme:"crb-hover",minWidth:120}),html.find("aside > .sidebar > .hitpoints").find(".dots.dying, .dots.wounded, .dots.doomed").on("click contextmenu",(event=>{const condition=Array.from(event.delegateTarget.classList).find((className=>["dying","wounded","doomed"].includes(className)));condition&&this.onClickDyingWoundedDoomed(condition,event)})),html.find(".spell-slots-increment-reset").on("click",(event=>{const target=$(event.currentTarget),itemId=target.data().itemId,itemLevel=target.data().level,item=this.actor.items.get(itemId);if("spellcastingEntry"!==(null==item?void 0:item.data.type))return;const data=item.data.toObject();if(!data.data.slots)return;const slotLevel=(0,data_1.goesToEleven)(itemLevel)?`slot${itemLevel}`:"slot0";data.data.slots[slotLevel].value=data.data.slots[slotLevel].max,item.update(data)}));const $formulas=html.find(".craftingEntry-list");$formulas.find(".craft-item").on("click",(async event=>{var _a;const{itemUuid}=event.currentTarget.dataset,itemQuantity=Number($(event.currentTarget).parent().siblings(".formula-quantity").children("input").val())||1,formula=this.knownFormulas.get(null!=itemUuid?itemUuid:"");if(!formula)return;if(this.actor.data.flags.pf2e.freeCrafting){const itemId=null!==(_a=null==itemUuid?void 0:itemUuid.split(".").pop())&&void 0!==_a?_a:"";return(0,spell_consumables_1.isSpellConsumable)(itemId)?void(0,helpers_2.craftSpellConsumable)(formula.item,itemQuantity,this.actor):void(0,helpers_2.craftItem)(formula.item,itemQuantity,this.actor)}const dc={value:formula.dc,visibility:"all",adjustments:this.actor.data.data.skills.cra.adjustments,scope:"CheckOutcome"};(0,craft_1.craft)({dc,item:formula.item,quantity:itemQuantity,event,actors:this.actor})})),$formulas.find(".formula-increase-quantity, .formula-decrease-quantity").on("click",(async event=>{const $target=$(event.currentTarget),itemUUID=$target.closest("li.formula-item").attr("data-item-id"),entrySelector=$target.closest("li.crafting-entry").attr("data-entry-selector");if(entrySelector){const craftingEntry=await this.actor.getCraftingEntry(entrySelector);if(!craftingEntry)throw(0,_util_1.ErrorPF2e)("Crafting entry not found");const index=$target.closest("li.formula-item").attr("data-item-index");return void("+"===$target.text().trim()?await craftingEntry.increaseFormulaQuantity(Number(index),null!=itemUUID?itemUUID:""):await craftingEntry.decreaseFormulaQuantity(Number(index),null!=itemUUID?itemUUID:""))}const formula=this.knownFormulas.get(null!=itemUUID?itemUUID:"");if(!formula)throw(0,_util_1.ErrorPF2e)("Formula not found");const batchSize=formula.minimumBatchSize,step="+"===$target.text().trim()?batchSize:-batchSize,value=Number($target.siblings("input").val())||step;$target.siblings("input").val(Math.max(value+step,batchSize))})),$formulas.find(".formula-unprepare").on("click",(async event=>{const $target=$(event.currentTarget),itemUUID=$target.closest("li.formula-item").attr("data-item-id"),index=$target.closest("li.formula-item").attr("data-item-index"),entrySelector=$target.closest("li.crafting-entry").attr("data-entry-selector");if(!itemUUID||!index||!entrySelector)return;const craftingEntry=await this.actor.getCraftingEntry(entrySelector);if(!craftingEntry)throw(0,_util_1.ErrorPF2e)("Crafting entry not found");await craftingEntry.unprepareFormula(Number(index),itemUUID)})),$formulas.find(".toggle-formula-expended").on("click",(async event=>{const $target=$(event.currentTarget),itemUUID=$target.closest("li.formula-item").attr("data-item-id"),index=$target.closest("li.formula-item").attr("data-item-index"),entrySelector=$target.closest("li.crafting-entry").attr("data-entry-selector");if(!itemUUID||!index||!entrySelector)return;const craftingEntry=await this.actor.getCraftingEntry(entrySelector);if(!craftingEntry)throw(0,_util_1.ErrorPF2e)("Crafting entry not found");await craftingEntry.toggleFormulaExpended(Number(index),itemUUID)})),$formulas.find(".toggle-signature-item").on("click",(async event=>{const $target=$(event.currentTarget),itemUUID=$target.closest("li.formula-item").attr("data-item-id"),index=$target.closest("li.formula-item").attr("data-item-index"),entrySelector=$target.closest("li.crafting-entry").attr("data-entry-selector");if(!itemUUID||!index||!entrySelector)return;const craftingEntry=await this.actor.getCraftingEntry(entrySelector);if(!craftingEntry)throw(0,_util_1.ErrorPF2e)("Crafting entry not found");await craftingEntry.toggleSignatureItem(Number(index),itemUUID)})),$formulas.find(".infused-reagents").on("change",(event=>{var _a;const change=Number($(event.target).val()),infusedReagents=this.actor.data.data.resources.crafting.infusedReagents,value=Math.clamped(change,0,null!==(_a=null==infusedReagents?void 0:infusedReagents.max)&&void 0!==_a?_a:0);this.actor.update({"data.resources.crafting.infusedReagents.value":value})})),$formulas.find(".daily-crafting").on("click",(async()=>await this.actor.performDailyCrafting()))}async onChangeAdjustStat(event){var _a;const $select=$(event.delegateTarget),propertyKey=null!==(_a=$select.attr("data-property"))&&void 0!==_a?_a:"",currentValue=getProperty(this.actor.data,propertyKey),selectedValue=Number($select.val());if("number"!=typeof currentValue)throw(0,_util_1.ErrorPF2e)("Actor property not found");const newValue=Math.clamped(selectedValue,0,4);await this.actor.update({[propertyKey]:newValue}),newValue!==getProperty(this.actor.data,propertyKey)&&ui.notifications.info(game.i18n.localize("PF2E.ErrorMessage.MinimumProfLevelSetByFeatures"))}async onClickAdjustStat(event){var _a;const propertyKey=null!==(_a=$(event.delegateTarget).attr("data-property"))&&void 0!==_a?_a:"",currentValue=getProperty(this.actor.data,propertyKey);if("number"!=typeof currentValue)throw(0,_util_1.ErrorPF2e)("Actor property not found");const change="click"===event.type?1:-1,max=propertyKey.includes("heroPoints")?3:4,update=currentValue+change,newValue=Math.clamped(update,0,max);await this.actor.update({[propertyKey]:newValue})}async onChangeAdjustItemStat(event){var _a,_b;const $select=$(event.delegateTarget),propertyKey=null!==(_a=$select.attr("data-item-property"))&&void 0!==_a?_a:"",selectedValue=Number($select.val()),itemId=null!==(_b=$select.closest(".item").attr("data-item-id"))&&void 0!==_b?_b:"",item=this.actor.items.get(itemId);if(!item)throw(0,_util_1.ErrorPF2e)("Item not found");const newValue=(()=>{var _a;if(item instanceof spellcasting_entry_1.SpellcastingEntryPF2e){const dispatch={"data.proficiency.value":()=>Math.clamped(selectedValue,0,4)};return null===(_a=dispatch[propertyKey])||void 0===_a?void 0:_a.call(dispatch)}if(item instanceof _item_1.LorePF2e)return Math.clamped(selectedValue,0,4);throw(0,_util_1.ErrorPF2e)("Item not recognized")})();"number"==typeof newValue&&await item.update({[propertyKey]:newValue})}async onClickAdjustItemStat(event){var _a,_b;const $button=$(event.delegateTarget),itemId=null!==(_a=$button.closest(".item").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId);if(!item)throw(0,_util_1.ErrorPF2e)("Item not found");const propertyKey=null!==(_b=$button.attr("data-item-property"))&&void 0!==_b?_b:"",change="click"===event.type?1:-1,newValue=(()=>{var _a;if(item instanceof spellcasting_entry_1.SpellcastingEntryPF2e){const proficiencyRank=item.data.data.proficiency.value,dispatch={"data.proficiency.value":()=>Math.clamped(proficiencyRank+change,0,4)};return null===(_a=dispatch[propertyKey])||void 0===_a?void 0:_a.call(dispatch)}if(item instanceof _item_1.LorePF2e){const currentRank=item.data.data.proficient.value;return Math.clamped(currentRank+change,0,4)}throw(0,_util_1.ErrorPF2e)("Item not recognized")})();"number"==typeof newValue&&await item.update({[propertyKey]:newValue})}onIncrementModifierValue(event){$(event.currentTarget).parents(".add-modifier").find(".add-modifier-value input[type=number]")[0].stepUp()}onDecrementModifierValue(event){$(event.currentTarget).parents(".add-modifier").find(".add-modifier-value input[type=number]")[0].stepDown()}onAddCustomModifier(event){var _a,_b,_c,_d,_e;const parent=$(event.currentTarget).parents(".add-modifier"),stat=null!==(_a=$(event.currentTarget).attr("data-stat"))&&void 0!==_a?_a:"",modifier=Number(parent.find(".add-modifier-value input[type=number]").val())||1,type=null!==(_c=null===(_b=parent.find(".add-modifier-type")[0])||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:"",name=(null!==(_e=null===(_d=parent.find(".add-modifier-name")[0])||void 0===_d?void 0:_d.value)&&void 0!==_e?_e:"").trim()||game.i18n.localize(`PF2E.ModifierType.${type}`),errors=[];if(!stat.trim())throw(0,_util_1.ErrorPF2e)("No character attribute found");Object.values(modifiers_1.MODIFIER_TYPE).includes(type)||errors.push("Type is required."),errors.length>0?ui.notifications.error(errors.join(" ")):this.actor.addCustomModifier(stat,name,modifier,type)}onRemoveCustomModifier(event){var _a,_b;const stat=null!==(_a=$(event.currentTarget).attr("data-stat"))&&void 0!==_a?_a:"",name=null!==(_b=$(event.currentTarget).attr("data-name"))&&void 0!==_b?_b:"",errors=[];stat.trim()||errors.push("Statistic is required."),name.trim()||errors.push("Name is required."),errors.length>0?ui.notifications.error(errors.join(" ")):this.actor.removeCustomModifier(stat,name)}isFeatValidInFeatSlot(_slotId,featSlotType,feat){var _a,_b;let featType=null===(_b=null===(_a=feat.data)||void 0===_a?void 0:_a.featType)||void 0===_b?void 0:_b.value;return"archetype"===featType&&(featType=feat.data.traits.value.includes("skill")?"skill":"class"),"archetype"!==featSlotType&&"dualclass"!==featSlotType||(featSlotType="class"),"ancestryfeature"===featSlotType?["ancestryfeature","heritage"].includes(featType):"general"===featSlotType?["general","skill"].includes(featType):featSlotType===featType}onClickDyingWoundedDoomed(condition,event){"click"===event.type?this.actor.increaseCondition(condition,{max:this.actor.data.data.attributes[condition].max}):"contextmenu"===event.type&&this.actor.decreaseCondition(condition)}getNearestSlotId(event){const data=$(event.target).closest(".item").data();return data||{slotId:void 0,featType:void 0}}async _onDropItem(event,data){var _a;const actor=this.actor;if(data.actorId===actor.id||actor.isToken&&data.tokenId===(null===(_a=actor.token)||void 0===_a?void 0:_a.id))return super._onDropItem(event,data);event.preventDefault();const item=await base_1.ItemPF2e.fromDropData(data);if(!item)throw(0,_util_1.ErrorPF2e)("Unable to create item from drop data!");const itemData=item.toObject(),{slotId,featType}=this.getNearestSlotId(event);if("feat"===itemData.type){if(slotId&&featType&&this.isFeatValidInFeatSlot(slotId,featType,itemData)){itemData.data.location=slotId;return(await Promise.all([this.actor.createEmbeddedDocuments("Item",[itemData]),this.actor.updateEmbeddedDocuments("Item",this.actor.items.filter((x=>"feat"===x.data.type&&x.data.data.location===slotId)).map((x=>({_id:x.id,"data.location":""}))))])).flatMap((item=>item))}}else if("ancestry"===itemData.type||"background"===itemData.type||"class"===itemData.type)return manager_1.AncestryBackgroundClassManager.addABCItem(itemData,actor);return super._onDropItem(event,data)}async _onDrop(event){var _a,_b;const dataString=null===(_a=event.dataTransfer)||void 0===_a?void 0:_a.getData("text/plain"),dropData=JSON.parse(null!=dataString?dataString:"");if("CraftingFormula"===dropData.type){const $containerEl=$(event.target).closest(".item-container");if("craftingEntry"===$containerEl.attr("data-container-type")){const entrySelector=null!==(_b=$containerEl.attr("data-entry-selector"))&&void 0!==_b?_b:"",craftingEntry=await this.actor.getCraftingEntry(entrySelector);if(!craftingEntry)return;const formula=(await this.actor.getCraftingFormulas()).find((f=>f.uuid===dropData.itemUuid));return void(formula&&await craftingEntry.prepareFormula(formula))}}return super._onDrop(event)}async _onSortItem(event,itemData){if("feat"===itemData.type){const{slotId,featType}=this.getNearestSlotId(event);if(slotId&&featType){if(this.isFeatValidInFeatSlot(slotId,featType,itemData))return this.actor.updateEmbeddedDocuments("Item",[{_id:itemData._id,"data.location":slotId},...this.actor.items.filter((x=>"feat"===x.data.type&&x.data.data.location===slotId)).map((x=>({_id:x.id,"data.location":""})))]);if(itemData.data.location)return this.actor.updateEmbeddedDocuments("Item",[{_id:itemData._id,"data.location":""}])}}return super._onSortItem(event,itemData)}getDyingIcon(level){const maxDying=this.object.data.data.attributes.dying.max||4,doomed=this.object.data.data.attributes.doomed.value||0,icons={};for(let dyingLevel=0;dyingLevel<=maxDying;dyingLevel++){icons[dyingLevel]=dyingLevel===maxDying?"<span>":"";for(let column=1;column<=maxDying;column++)icons[dyingLevel]+=column>=maxDying-doomed||dyingLevel===maxDying?'<i class="fas fa-skull"></i>':dyingLevel<column?'<i class="far fa-circle"></i>':'<i class="fas fa-times-circle"></i>';icons[dyingLevel]+=dyingLevel===maxDying?"</span>":""}return icons[level]}getWoundedIcon(level){const maxDying=this.object.data.data.attributes.dying.max||4,icons={};for(let i=0;i<maxDying;i++){let iconHtml="";for(let iconColumn=1;iconColumn<maxDying;iconColumn++)iconHtml+=iconColumn<=i?'<i class="fas fa-dot-circle"></i>':'<i class="far fa-circle"></i>';icons[i]=iconHtml}return icons[level]}getDoomedIcon(level){var _a;const maxDying=this.object.data.data.attributes.dying.max||4,icons={};for(let i=0;i<maxDying;i++){let iconHtml="";for(let iconColumn=1;iconColumn<maxDying;iconColumn++)iconHtml+=iconColumn<=i?'<i class="fas fa-skull"></i>':'<i class="far fa-circle"></i>';icons[i]=iconHtml}return null!==(_a=icons[level])&&void 0!==_a?_a:icons[0]}getHeroPointsIcon(level){var _a;const icons=['<i class="far fa-circle"></i><i class="far fa-circle"></i><i class="far fa-circle"></i>','<i class="fas fa-hospital-symbol"></i><i class="far fa-circle"></i><i class="far fa-circle"></i>','<i class="fas fa-hospital-symbol"></i><i class="fas fa-hospital-symbol"></i><i class="far fa-circle"></i>','<i class="fas fa-hospital-symbol"></i><i class="fas fa-hospital-symbol"></i><i class="fas fa-hospital-symbol"></i>'];return null!==(_a=icons[level])&&void 0!==_a?_a:icons[0]}}exports.CharacterSheetPF2e=CharacterSheetPF2e},73204:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.VisionLevels=exports.BaseCreatureData=void 0;const base_1=__webpack_require__(49786);class BaseCreatureData extends base_1.BaseActorDataPF2e{}exports.BaseCreatureData=BaseCreatureData,function(VisionLevels){VisionLevels[VisionLevels.BLINDED=0]="BLINDED",VisionLevels[VisionLevels.NORMAL=1]="NORMAL",VisionLevels[VisionLevels.LOWLIGHT=2]="LOWLIGHT",VisionLevels[VisionLevels.DARKVISION=3]="DARKVISION"}(exports.VisionLevels||(exports.VisionLevels={}))},30653:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CreaturePF2e=void 0;const _actor_1=__webpack_require__(85530),modifiers_1=__webpack_require__(27324),_item_1=__webpack_require__(10843),prepare_minions_1=__webpack_require__(31565),notes_1=__webpack_require__(46379),helpers_1=__webpack_require__(44252),rolls_1=__webpack_require__(87525),data_1=__webpack_require__(73204),data_2=__webpack_require__(54096),statistic_1=__webpack_require__(77486),canvas_1=__webpack_require__(85336),_scene_1=__webpack_require__(12789),_util_1=__webpack_require__(6945),predication_1=__webpack_require__(538),values_1=__webpack_require__(35089),sense_1=__webpack_require__(82280);class CreaturePF2e extends _actor_1.ActorPF2e{constructor(){super(...arguments),this.redrawingTokenEffects=!1}get alignment(){return this.data.data.details.alignment.value}get visionLevel(){const senseTypes=this.data.data.traits.senses.map((sense=>sense.type)).filter((senseType=>["lowLightVision","darkvision"].includes(senseType)));return this.getCondition("blinded")?data_1.VisionLevels.BLINDED:senseTypes.includes("darkvision")?data_1.VisionLevels.DARKVISION:senseTypes.includes("lowLightVision")?data_1.VisionLevels.LOWLIGHT:data_1.VisionLevels.NORMAL}get hasDarkvision(){return this.visionLevel===data_1.VisionLevels.DARKVISION}get hasLowLightVision(){return this.visionLevel>=data_1.VisionLevels.LOWLIGHT}get canSee(){if(!canvas.scene)return!0;if(this.visionLevel===data_1.VisionLevels.BLINDED)return!1;return canvas.scene.lightLevel>data_2.LightLevels.DARKNESS||this.hasDarkvision}get isDead(){const deathIcon=game.settings.get("pf2e","deathIcon"),tokens=this.getActiveTokens(),hasDeathOverlay=tokens.length>0&&tokens.every((token=>token.data.overlayEffect===deathIcon));return(0===this.hitPoints.value||hasDeathOverlay)&&!this.hasCondition("dying")}get hitPoints(){return{value:this.data.data.attributes.hp.value,max:this.data.data.attributes.hp.max,negativeHealing:this.data.data.attributes.hp.negativeHealing}}get attributes(){return this.data.data.attributes}get perception(){const stat=this.data.data.attributes.perception;return statistic_1.Statistic.from(this,stat,"perception","PF2E.PerceptionCheck","perception-check")}get fortitude(){return this.buildSavingThrowStatistic("fortitude")}get reflex(){return this.buildSavingThrowStatistic("reflex")}get will(){return this.buildSavingThrowStatistic("will")}get deception(){const stat=this.data.data.skills.dec;return statistic_1.Statistic.from(this,stat,"deception","PF2E.ActionsCheck.deception","skill-check")}get stealth(){const stat=this.data.data.skills.ste;return statistic_1.Statistic.from(this,stat,"stealth","PF2E.ActionsCheck.stealth","skill-check")}get wornArmor(){var _a;return null!==(_a=this.itemTypes.armor.find((armor=>armor.isEquipped&&armor.isArmor)))&&void 0!==_a?_a:null}get heldShield(){const heldShields=this.itemTypes.armor.filter((armor=>armor.isEquipped&&armor.isShield));return 0===heldShields.length?null:heldShields.slice(0,-1).reduce(((bestShield,shield)=>{var _a,_b;if(bestShield===shield)return bestShield;const withBetterAC=bestShield.acBonus>shield.acBonus?bestShield:shield.acBonus>bestShield.acBonus?shield:null,withMoreHP=bestShield.hitPoints.value>shield.hitPoints.value?bestShield:shield.hitPoints.value>bestShield.hitPoints.value?shield:null,withBetterHardness=bestShield.hardness>shield.hardness?bestShield:shield.hardness>bestShield.hardness?shield:null;return null!==(_b=null!==(_a=null!=withBetterAC?withBetterAC:withMoreHP)&&void 0!==_a?_a:withBetterHardness)&&void 0!==_b?_b:bestShield}),heldShields.slice(-1)[0])}getSelfRollOptions(prefix="self"){const options=super.getSelfRollOptions(prefix),{alignment}=this,alignmentTraits=[...new Set([...["LG","NG","CG"].includes(alignment)?["good"]:[],...["LE","NE","CE"].includes(alignment)?["evil"]:[],...["LG","LN","LE"].includes(alignment)?["lawful"]:[],...["CG","CN","CE"].includes(alignment)?["chaotic"]:[]])].map((trait=>`${prefix}:trait:${trait}`));for(const trait of alignmentTraits)options.add(trait);const{itemTypes}=this;return itemTypes.spellcastingEntry.length>0&&itemTypes.spell.length>0&&options.add(`${prefix}:caster`),this.hitPoints.negativeHealing&&options.add(`${prefix}:negative-healing`),options}prepareBaseData(){var _a,_b,_c,_d;super.prepareBaseData();const attributes=this.data.data.attributes;attributes.hp=mergeObject(null!==(_a=attributes.hp)&&void 0!==_a?_a:{},{negativeHealing:!1}),null!==(_b=attributes.hardness)&&void 0!==_b||(attributes.hardness={value:0}),"initiative"in attributes&&(attributes.initiative.tiebreakPriority=this.hasPlayerOwner?2:1);const customModifiers=null!==(_c=(_d=this.data.data).customModifiers)&&void 0!==_c?_c:_d.customModifiers={};Object.values(customModifiers).forEach((modifiers=>{[...modifiers].forEach((modifier=>{const index=modifiers.indexOf(modifier);modifiers[index]=modifiers_1.ModifierPF2e.fromObject(modifier)}))})),this.data.data.toggles={actions:[{label:"PF2E.TargetFlatFootedLabel",inputName:"flags.pf2e.rollOptions.all.target:flatFooted",checked:this.getFlag("pf2e","rollOptions.all.target:flatFooted")}]}}prepareEmbeddedEntities(){var _a;super.prepareEmbeddedEntities();for(const option of this.getSelfRollOptions())this.rollOptions.all[option]=!0;for(const rule of this.rules)null===(_a=rule.onApplyActiveEffects)||void 0===_a||_a.call(rule);for(const changeEntries of Object.values(this.data.data.autoChanges))changeEntries.sort(((a,b)=>Number(a.level)>Number(b.level)?1:-1))}prepareDerivedData(){super.prepareDerivedData(),this.rollOptions.all["self:armored"]=!!this.wornArmor&&"unarmored"!==this.wornArmor.category}prepareInitiative(statisticsModifiers,rollNotes){var _a,_b,_c,_d,_e,_f,_g;if("character"!==this.data.type&&"npc"!==this.data.type)return;const systemData=this.data.data,checkType=systemData.attributes.initiative.ability||"perception",[ability,initStat]="perception"===checkType?["wis",systemData.attributes.perception]:[null!==(_b=null===(_a=systemData.skills[checkType])||void 0===_a?void 0:_a.ability)&&void 0!==_b?_b:"int",systemData.skills[checkType]],longForm=null!==(_c=values_1.SKILL_DICTIONARY[checkType])&&void 0!==_c?_c:checkType,modifiers=[initStat.modifiers.map((m=>m.clone({test:this.getRollOptions([longForm,`${ability}-based`,"all"])}))),null!==(_e=null===(_d=statisticsModifiers.initiative)||void 0===_d?void 0:_d.map((m=>m.clone({test:this.getRollOptions([longForm,`${ability}-based`,"all"])}))))&&void 0!==_e?_e:[]].flat(),notes=null!==(_g=null===(_f=rollNotes.initiative)||void 0===_f?void 0:_f.map((n=>duplicate(n))))&&void 0!==_g?_g:[],skillName=game.i18n.localize("perception"===checkType?"PF2E.PerceptionLabel":CONFIG.PF2E.skills[checkType]),label=game.i18n.format("PF2E.InitiativeWithSkill",{skillName}),stat=mergeObject(new modifiers_1.CheckModifier("initiative",initStat,modifiers),{ability:checkType,label,tiebreakPriority:this.data.data.attributes.initiative.tiebreakPriority,roll:async args=>{var _a,_b,_c,_d;if(!("initiative"in this.data.data.attributes))return null;const options=Array.from(new Set([...this.getRollOptions(["all","initiative",`${ability}-based`,longForm]),...null!==(_a=args.options)&&void 0!==_a?_a:[]]));"character"===this.data.type&&(0,modifiers_1.ensureProficiencyOption)(options,null!==(_b=initStat.rank)&&void 0!==_b?_b:-1);const combatant=await(async()=>{var _a;if(!game.combat)return ui.notifications.error(game.i18n.localize("PF2E.Encounter.NoActiveEncounter")),null;const token=this.getActiveTokens().pop(),existing=game.combat.combatants.find((combatant=>combatant.actor===this));return existing||(token?(await token.toggleCombat(game.combat),null!==(_a=token.combatant)&&void 0!==_a?_a:null):(ui.notifications.error(game.i18n.format("PF2E.Encounter.NoTokenInScene",{actor:this.name})),null))})();if(!combatant)return null;const roll=await rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,systemData.attributes.initiative,args.modifiers),{actor:this,type:"initiative",options,notes,dc:args.dc},args.event);if(!roll)return null;return(null===(_c=args.updateTracker)||void 0===_c||_c)&&(null===(_d=game.combat)||void 0===_d||_d.setInitiative(combatant.id,roll.total)),{combatant,roll}}});systemData.attributes.initiative=stat}prepareCustomModifiers(rules){var _a,_b,_c,_d;const actorData=this.data,synthetics={damageDice:{},multipleAttackPenalties:{},rollNotes:{},senses:[],statisticsModifiers:{},strikes:[],striking:{},weaponPotency:{}},statisticsModifiers=synthetics.statisticsModifiers;for(const rule of rules)try{null===(_a=rule.onBeforePrepareData)||void 0===_a||_a.call(rule,synthetics)}catch(error){console.error(`PF2e | Failed to execute onBeforePrepareData on rule element ${rule}.`,error)}const conditions=this.itemTypes.condition.filter((c=>{var _a;return(null===(_a=c.data.flags.pf2e)||void 0===_a?void 0:_a.condition)&&c.data.data.active})).map((c=>c.data));for(const[key,value]of game.pf2e.ConditionManager.getModifiersFromConditions(conditions.values()))statisticsModifiers[key]=(statisticsModifiers[key]||[]).concat(value);if(["character","familiar","npc"].includes(actorData.type)){const{data}=actorData;data.customModifiers=null!==(_b=data.customModifiers)&&void 0!==_b?_b:{};for(const[statistic,modifiers]of Object.entries(data.customModifiers))statisticsModifiers[statistic]=(null!==(_c=statisticsModifiers[statistic])&&void 0!==_c?_c:[]).concat(modifiers);data.damageDice=null!==(_d=data.damageDice)&&void 0!==_d?_d:{};const damageDice=synthetics.damageDice;for(const[attack,dice]of Object.entries(data.damageDice))damageDice[attack]=(damageDice[attack]||[]).concat(dice)}return synthetics}async addCustomModifier(stat,name,value,type,predicate,damageType,damageCategory){var _a,_b,_c;const customModifiers=duplicate(null!==(_a=this.data.data.customModifiers)&&void 0!==_a?_a:{});if(!(null!==(_b=customModifiers[stat])&&void 0!==_b?_b:[]).find((m=>m.name===name))){const modifier=new modifiers_1.ModifierPF2e(name,value,type);damageType&&(modifier.damageType=damageType),damageCategory&&(modifier.damageCategory=damageCategory),modifier.custom=!0,modifier.predicate=predicate instanceof predication_1.PredicatePF2e?predicate:new predication_1.PredicatePF2e(predicate),modifier.ignored=!modifier.predicate.test(),customModifiers[stat]=(null!==(_c=customModifiers[stat])&&void 0!==_c?_c:[]).concat([modifier]),await this.update({"data.customModifiers":customModifiers})}}async removeCustomModifier(stat,modifier){var _a;const customModifiers=duplicate(null!==(_a=this.data.data.customModifiers)&&void 0!==_a?_a:{});if("number"==typeof modifier&&customModifiers[stat]&&customModifiers[stat].length>modifier)customModifiers[stat].splice(modifier,1),await this.update({"data.customModifiers":customModifiers});else{if("string"!=typeof modifier||!customModifiers[stat])throw Error("Custom modifiers can only be removed by name (string) or index (number)");customModifiers[stat]=customModifiers[stat].filter((m=>m.name!==modifier)),await this.update({"data.customModifiers":customModifiers})}}async toggleRollOption(domain,optionName){if(!values_1.SUPPORTED_ROLL_OPTIONS.includes(domain)&&!(0,_util_1.objectHasKey)(this.data.data.skills,domain))throw new Error(`${domain} is not a supported roll`);const flag=`rollOptions.${domain}.${optionName}`;return this.setFlag("pf2e",flag,!this.getFlag("pf2e",flag))}prepareSenses(data,synthetics){const preparedSenses=data.map((datum=>new sense_1.CreatureSensePF2e(datum)));for(const{sense,predicate,force}of synthetics.senses){if(predicate&&!predicate.test(this.getRollOptions(["all","sense"])))continue;const existing=preparedSenses.find((oldSense=>oldSense.type===sense.type));existing?force?preparedSenses.findSplice((oldSense=>oldSense===existing),sense):(sense.isMoreAcuteThan(existing)&&(existing.acuity=sense.acuity),sense.hasLongerRangeThan(existing)&&(existing.value=sense.value)):preparedSenses.push(sense)}return preparedSenses}prepareSpeed(movementType,synthetics){var _a,_b;const systemData=this.data.data,rollOptions=this.getRollOptions(["all","speed",`${movementType}-speed`]),modifiers=[`${movementType}-speed`,"speed"].flatMap((key=>synthetics.statisticsModifiers[key]||[])).map((modifier=>modifier.clone({test:rollOptions})));if("land"===movementType){const label=game.i18n.localize("PF2E.SpeedTypesLand"),base=Number(null!==(_a=systemData.attributes.speed.value)&&void 0!==_a?_a:0),stat=mergeObject(new modifiers_1.StatisticModifier(game.i18n.format("PF2E.SpeedLabel",{type:label}),modifiers),systemData.attributes.speed,{overwrite:!1});return stat.total=base+stat.totalModifier,stat.type="land",stat.breakdown=[`${game.i18n.format("PF2E.SpeedBaseLabel",{type:label})} ${base}`].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),stat}{const speed=systemData.attributes.speed.otherSpeeds.find((otherSpeed=>otherSpeed.type===movementType));if(!speed)throw(0,_util_1.ErrorPF2e)("Unexpected missing speed");speed.label=game.i18n.localize(game.i18n.localize(CONFIG.PF2E.speedTypes[speed.type]));const base=Number(null!==(_b=speed.value)&&void 0!==_b?_b:0),stat=mergeObject(new modifiers_1.StatisticModifier(game.i18n.format("PF2E.SpeedLabel",{type:speed.label}),modifiers),speed,{overwrite:!1});return stat.total=base+stat.totalModifier,stat.breakdown=[`${game.i18n.format("PF2E.SpeedBaseLabel",{type:speed.label})} ${base}`].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),stat}}async updateEmbeddedDocuments(embeddedName,data,options={}){const equippingUpdates=data.filter((update=>"data.equipped.value"in update&&"boolean"==typeof update["data.equipped.value"])),wornArmor=this.wornArmor;for(const update of equippingUpdates){if(!("data.equipped.value"in update))continue;const item=this.physicalItems.get(update._id);wornArmor&&item instanceof _item_1.ArmorPF2e&&item.isArmor&&item.id!==wornArmor.id&&data.push({_id:wornArmor.id,"data.equipped.value":!1,"data.invested.value":!1}),!1===update["data.equipped.value"]&&(0,helpers_1.hasInvestedProperty)(item.data)&&(update["data.invested.value"]=!1)}return super.updateEmbeddedDocuments(embeddedName,data,options)}rollRecovery(event){if("character"!==this.data.type)throw Error("Recovery rolls are only applicable to characters");const dying=this.data.data.attributes.dying.value,recoveryMod=getProperty(this.data.data.attributes,"dying.recoveryMod")||0,dc={label:game.i18n.format("PF2E.Recovery.rollingDescription",{dying,dc:"{dc}"}),value:10+recoveryMod+dying,visibility:"all"},notes=[new notes_1.RollNotePF2e("all",game.i18n.localize("PF2E.Recovery.critSuccess"),void 0,["criticalSuccess"]),new notes_1.RollNotePF2e("all",game.i18n.localize("PF2E.Recovery.success"),void 0,["success"]),new notes_1.RollNotePF2e("all",game.i18n.localize("PF2E.Recovery.failure"),void 0,["failure"]),new notes_1.RollNotePF2e("all",game.i18n.localize("PF2E.Recovery.critFailure"),void 0,["criticalFailure"])],modifier=new modifiers_1.StatisticModifier(game.i18n.localize("PF2E.FlatCheck"),[]);rolls_1.CheckPF2e.roll(modifier,{actor:this,dc,notes},event)}redrawTokenEffects(){if(!game.ready||!canvas.scene||this.redrawingTokenEffects)return;this.redrawingTokenEffects=!0;Promise.allSettled(this.getActiveTokens().map((token=>token.drawEffects()))).then((()=>{this.redrawingTokenEffects=!1}))}buildSavingThrowStatistic(savingThrow){const label=game.i18n.format("PF2E.SavingThrowWithName",{saveName:game.i18n.localize(CONFIG.PF2E.saves[savingThrow])});return statistic_1.Statistic.from(this,this.data.data.saves[savingThrow],savingThrow,label,"saving-throw")}createAttackRollContext(options={}){var _a,_b,_c,_d;const domains=["all","attack-roll",...null!==(_a=null==options?void 0:options.domains)&&void 0!==_a?_a:[]],attackTraits=["attack",...null!==(_b=options.traits)&&void 0!==_b?_b:[]],ctx=this.createStrikeRollContext(domains);let dc=null,distance=null;if((null===(_c=ctx.target)||void 0===_c?void 0:_c.actor)instanceof CreaturePF2e){ctx.options.push(...ctx.target.actor.getSelfRollOptions("target"));const contextActor=ctx.target.actor.getContextualClone([...this.getSelfRollOptions("origin"),...attackTraits.map((trait=>`trait:${trait}`))]);dc={label:game.i18n.format("PF2E.CreatureStatisticDC.ac",{creature:ctx.target.name,dc:"{dc}"}),scope:"AttackOutcome",value:contextActor.attributes.ac.value};const self=canvas.tokens.controlled.find((token=>{var _a;return(null===(_a=token.actor)||void 0===_a?void 0:_a.id)===this.id}));if(self&&(null===(_d=canvas.grid)||void 0===_d?void 0:_d.grid)instanceof SquareGrid){const groundDistance=canvas_1.MeasuredTemplatePF2e.measureDistance(self.position,ctx.target.position),elevationDiff=Math.abs(self.data.elevation-ctx.target.data.elevation);distance=Math.floor(Math.sqrt(Math.pow(groundDistance,2)+Math.pow(elevationDiff,2)))}}return{options:Array.from(new Set(ctx.options)),targets:ctx.targets,dc,distance}}createDamageRollContext(event){var _a,_b,_c;const ctx=this.createStrikeRollContext(["all","damage-roll"]),targetRollOptions=null!==(_c=null===(_b=null===(_a=ctx.target)||void 0===_a?void 0:_a.actor)||void 0===_b?void 0:_b.getSelfRollOptions("target"))&&void 0!==_c?_c:[];return ctx.options.push(...targetRollOptions),{event,options:Array.from(new Set(ctx.options)),targets:ctx.targets}}createStrikeRollContext(domains){const options=[...this.getRollOptions(domains),...this.getSelfRollOptions()],targets=Array.from(game.user.targets).filter((token=>token.actor instanceof CreaturePF2e)),target=1===targets.length&&targets[0].actor instanceof CreaturePF2e?targets[0]:void 0;return{options:[...new Set(options)],targets:new Set(targets),target}}async update(data,options){await super.update(data,options);return Array.isArray(data.items)&&data.items.some((item=>{var _a;return item instanceof Object&&!this.items.get(null!==(_a=item.id)&&void 0!==_a?_a:"")}))&&this.parent instanceof _scene_1.TokenDocumentPF2e&&this.redrawTokenEffects(),this}_onUpdate(changed,options,userId){super._onUpdate(changed,options,userId),(0,prepare_minions_1.prepareMinions)(this),changed.items&&this.isToken&&userId!==game.user.id&&this.redrawTokenEffects()}async _preUpdate(data,options,user){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l;const focus=data.data&&"resources"in data.data&&null!==(_c=null===(_b=null===(_a=data.data)||void 0===_a?void 0:_a.resources)||void 0===_b?void 0:_b.focus)&&void 0!==_c?_c:null;if(focus&&"resources"in this.data.data){"number"==typeof focus.max&&(focus.max=Math.clamped(focus.max,0,3));const currentPoints=null!==(_f=null!==(_d=focus.value)&&void 0!==_d?_d:null===(_e=this.data.data.resources.focus)||void 0===_e?void 0:_e.value)&&void 0!==_f?_f:0,currentMax=null!==(_j=null!==(_g=focus.max)&&void 0!==_g?_g:null===(_h=this.data.data.resources.focus)||void 0===_h?void 0:_h.max)&&void 0!==_j?_j:0;focus.value=Math.clamped(currentPoints,0,currentMax)}const hitPoints=null===(_l=null===(_k=data.data)||void 0===_k?void 0:_k.attributes)||void 0===_l?void 0:_l.hp;"number"==typeof(null==hitPoints?void 0:hitPoints.value)&&(hitPoints.value=Math.clamped(hitPoints.value,0,this.hitPoints.max)),await super._preUpdate(data,options,user)}}exports.CreaturePF2e=CreaturePF2e},82280:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SENSE_TYPES=exports.BASIC_SENSE_TYPES=exports.SENSE_ACUITIES=exports.CreatureSensePF2e=void 0;exports.CreatureSensePF2e=class{constructor(data){var _a,_b;this.type=data.type,this.acuity=null!==(_a=data.acuity)&&void 0!==_a?_a:"precise",this.value=null!==(_b=data.value)&&void 0!==_b?_b:"",this.source=data.source||void 0}get range(){return Number(this.value)||1/0}get label(){const buildLabel=(type,acuity,range)=>{var _a;const senses=CONFIG.PF2E.senses,sense=game.i18n.localize(null!==(_a=senses[type])&&void 0!==_a?_a:"")||type,acuityLabel=acuity?game.i18n.localize(CONFIG.PF2E.senseAcuity[acuity]):null;return acuity&&range?game.i18n.format("PF2E.Sense.WithAcuityAndRange",{sense,acuity:acuityLabel,range}):acuity?game.i18n.format("PF2E.Sense.WithAcuity",{sense,acuity:acuityLabel}):sense},range=this.range<1/0?this.range:void 0;switch(this.type){case"lowLightVision":case"darkvision":case"greaterDarkvision":return buildLabel(this.type);case"scent":return"vague"===this.acuity?null:buildLabel(this.type,this.acuity,range);default:return buildLabel(this.type,this.acuity,range)}}isMoreAcuteThan(sense){var _a;return"precise"===this.acuity&&["imprecise","vague"].includes(null!==(_a=sense.acuity)&&void 0!==_a?_a:"precise")||"imprecise"===this.acuity&&"vague"===sense.acuity}hasLongerRangeThan(sense){return this.range>Number(sense.value)}},exports.SENSE_ACUITIES=["precise","imprecise","vague"],exports.BASIC_SENSE_TYPES=["darkvision","echolocation","greaterDarkvision","lifesense","lowLightVision","motionsense","scent","tremorsense","wavesense"],exports.SENSE_TYPES=[...exports.BASIC_SENSE_TYPES]},83936:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CreatureSheetPF2e=void 0;const modifiers_1=__webpack_require__(27324),base_1=__webpack_require__(11291),localize_1=__webpack_require__(41332),_item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),values_1=__webpack_require__(35089),item_summary_renderer_1=__webpack_require__(26910);class CreatureSheetPF2e extends base_1.ActorSheetPF2e{constructor(){super(...arguments),this.itemRenderer=new item_summary_renderer_1.CreatureSheetItemRenderer(this)}getData(options){var _a;const sheetData=super.getData(options);if(sheetData.data.martial){const proficiencies=Object.entries(sheetData.data.martial);for(const[key,proficiency]of proficiencies){const groupMatch=/^weapon-group-([-\w]+)$/.exec(key),baseWeaponMatch=/^weapon-base-([-\w]+)$/.exec(key),label=(()=>{if((0,_util_1.objectHasKey)(CONFIG.PF2E.martialSkills,key))return CONFIG.PF2E.martialSkills[key];if((0,_util_1.objectHasKey)(CONFIG.PF2E.weaponCategories,key))return CONFIG.PF2E.weaponCategories[key];if(Array.isArray(groupMatch)){const weaponGroup=groupMatch[1];return CONFIG.PF2E.weaponGroups[weaponGroup]}if(Array.isArray(baseWeaponMatch)){const baseWeapon=baseWeaponMatch[1];return localize_1.LocalizePF2e.translations.PF2E.Weapon.Base[baseWeapon]}return key})();proficiency.icon=this.getProficiencyIcon(proficiency.rank),proficiency.hover=CONFIG.PF2E.proficiencyLevels[proficiency.rank],proficiency.label=game.i18n.localize(label),proficiency.value=modifiers_1.ProficiencyModifier.fromLevelAndRank(sheetData.data.details.level.value,proficiency.rank||0).modifier}}if(sheetData.data.saves)for(const key of["fortitude","reflex","will"]){const save=sheetData.data.saves[key];save.icon=this.getProficiencyIcon(save.rank),save.hover=CONFIG.PF2E.proficiencyLevels[save.rank],save.label=CONFIG.PF2E.saves[key]}if(void 0!==sheetData.data.attributes&&(sheetData.data.attributes.perception.icon=this.getProficiencyIcon(sheetData.data.attributes.perception.rank),sheetData.data.attributes.perception.hover=CONFIG.PF2E.proficiencyLevels[sheetData.data.attributes.perception.rank]),sheetData.data.abilities)for(const key of values_1.ABILITY_ABBREVIATIONS)sheetData.data.abilities[key].label=CONFIG.PF2E.abilities[key];if(sheetData.data.skills){const skills=sheetData.data.skills,mainSkills=CONFIG.PF2E.skills;for(const key in skills){const skill=skills[key];skill.icon=this.getProficiencyIcon(skill.rank),skill.hover=CONFIG.PF2E.proficiencyLevels[skill.rank],skill.label=null!==(_a=skill.label)&&void 0!==_a?_a:mainSkills[key]}}return sheetData.abilities=CONFIG.PF2E.abilities,sheetData.skills=CONFIG.PF2E.skills,sheetData.actorSizes=CONFIG.PF2E.actorSizes,sheetData.alignments=CONFIG.PF2E.alignments,sheetData.rarity=CONFIG.PF2E.rarityTraits,sheetData.attitude=CONFIG.PF2E.attitude,sheetData.pfsFactions=CONFIG.PF2E.pfsFactions,sheetData}getProficiencyIcon(level){return{0:"",1:'<i class="fas fa-check-circle"></i>',2:'<i class="fas fa-check-circle"></i><i class="fas fa-check-circle"></i>',3:'<i class="fas fa-check-circle"></i><i class="fas fa-check-circle"></i><i class="fas fa-check-circle"></i>',4:'<i class="fas fa-check-circle"></i><i class="fas fa-check-circle"></i><i class="fas fa-check-circle"></i><i class="fas fa-check-circle"></i>'}[level]}activateListeners(html){super.activateListeners(html),html.find("input[data-property]").on("focus",(event=>{var _a;const $input=$(event.target),propertyPath=null!==(_a=$input.attr("data-property"))&&void 0!==_a?_a:"",baseValue=getProperty(this.actor.data._source,propertyPath);$input.val(baseValue).attr({name:propertyPath})})),html.find("input[data-property]").on("blur",(event=>{var _a;const $input=$(event.target);$input.removeAttr("name").removeAttr("style").attr({type:"text"});const propertyPath=null!==(_a=$input.attr("data-property"))&&void 0!==_a?_a:"",preparedValue=getProperty(this.actor.data,propertyPath);$input.val(preparedValue>=0&&$input.hasClass("modifier")?`+${preparedValue}`:preparedValue)}));html.find("input[data-item-id][data-item-property], select[data-item-id][data-item-property]").on("change",(event=>{const $target=$(event.target),{itemId,itemProperty}=event.target.dataset;if(!itemId||!itemProperty)return;const value=(()=>{var _a,_b;const value=$(event.target).val();if(null==value)return value;switch(null!==(_a=$target.attr("data-dtype"))&&void 0!==_a?_a:"checkbox"===$target.attr("type")?"Boolean":["number","range"].includes(null!==(_b=$target.attr("type"))&&void 0!==_b?_b:"")?"Number":"String"){case"Boolean":return"boolean"==typeof value?value:"true"===value;case"Number":return Number(value);case"String":return String(value);default:return value}})();this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,[itemProperty]:value}])})),html.find(".skill-name.rollable, .skill-score.rollable").on("click",(event=>{var _a,_b,_c;const skills=this.actor.data.data.skills,key=null!==(_b=null===(_a=event.currentTarget.parentElement)||void 0===_a?void 0:_a.getAttribute("data-skill"))&&void 0!==_b?_b:"",skill=skills[key];if(skill){const longForms=values_1.SKILL_DICTIONARY,options=this.actor.getRollOptions(["all","skill-check",null!==(_c=longForms[key])&&void 0!==_c?_c:key]);skill.roll({event,options})}})),html.find(".recoveryCheck.rollable").on("click",(event=>{this.actor.rollRecovery(event)}));const $strikesList=html.find("ol.strikes-list");$strikesList.find('button[data-action="strike-damage"]').on("click",(event=>{var _a,_b;if(!["character","npc"].includes(this.actor.data.type))throw(0,_util_1.ErrorPF2e)("This sheet only works for characters and NPCs");null===(_b=null===(_a=this.getStrikeFromDOM(event.currentTarget))||void 0===_a?void 0:_a.damage)||void 0===_b||_b.call(_a,{event})})),$strikesList.find('button[data-action="strike-critical"]').on("click",(event=>{var _a,_b;if(!["character","npc"].includes(this.actor.data.type))throw Error("This sheet only works for characters and NPCs");null===(_b=null===(_a=this.getStrikeFromDOM(event.currentTarget))||void 0===_a?void 0:_a.critical)||void 0===_b||_b.call(_a,{event})})),html.find(".spell-attack").on("click",(event=>{if(!["character"].includes(this.actor.data.type))throw(0,_util_1.ErrorPF2e)("This sheet only works for characters");const index=$(event.currentTarget).closest("[data-container-id]").data("containerId"),entry=this.actor.spellcasting.get(index);entry&&entry.statistic.check.roll({event})})),html.find(".spellcasting.rollable").on("click",(event=>{var _a;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId);item&&item.rollSpellcastingEntryCheck(event)})),html.find(".cast-spell-button").on("click",(event=>{const $spellEl=$(event.currentTarget).closest(".item"),{itemId,spellLvl,slotId,entryId}=$spellEl.data(),entry=this.actor.spellcasting.get(entryId);if(!entry)return void console.warn("PF2E System | Failed to load spellcasting entry");const spell=entry.spells.get(itemId);spell?entry.cast(spell,{slot:slotId,level:spellLvl}):console.warn("PF2E System | Failed to load spell")}));$strikesList.find('.item-image[data-action="strike-attack"], button[data-action="strike-attack"]').on("click",(event=>{var _a;if(!("actions"in this.actor.data.data))throw Error("Strikes are not supported on this actor");const strike=this.getStrikeFromDOM(event.currentTarget);if(!strike)return;const variantIndex=$(event.currentTarget).attr("data-variant-index"),ammo=(()=>{var _a;const fromMeleeWeapon=strike.weapon instanceof _item_1.WeaponPF2e&&strike.weapon.isMelee;if(!strike.selectedAmmoId||fromMeleeWeapon)return null;const ammo=this.actor.items.get(null!==(_a=strike.selectedAmmoId)&&void 0!==_a?_a:"");return ammo instanceof _item_1.ConsumablePF2e?ammo:null})();ammo&&ammo.quantity<1?ui.notifications.error(game.i18n.localize("PF2E.ErrorMessage.NotEnoughAmmo")):null===(_a=strike.variants[Number(variantIndex)])||void 0===_a||_a.roll({event,callback:()=>null==ammo?void 0:ammo.consume()})})),html.find(".focus-pool").on("change",(evt=>this.actor.update({"data.resources.focus.max":$(evt.target).val()}))),html.find(".spell-list .focus-points").on("click contextmenu",(event=>{var _a,_b;if("character"!==this.actor.data.type&&"npc"!==this.actor.data.type)return;const change="click"===event.type?1:-1,focusPool=this.actor.data.data.resources.focus,points=Math.clamped((null!==(_a=null==focusPool?void 0:focusPool.value)&&void 0!==_a?_a:0)+change,0,null!==(_b=null==focusPool?void 0:focusPool.max)&&void 0!==_b?_b:0);this.actor.update({"data.resources.focus.value":points})})),html.find(".toggle-signature-spell").on("click",(event=>{this.onToggleSignatureSpell(event)}))}getStrikeFromDOM(target){var _a;const $target=$(target),actionIndex=$target.closest("[data-action-index]").attr("data-action-index"),rootAction=null===(_a=this.actor.data.data.actions)||void 0===_a?void 0:_a[Number(actionIndex)];if(!rootAction)return null;return 1===$target.closest('div[data-action="melee-usage"]').length&&(null==rootAction?void 0:rootAction.meleeUsage)?rootAction.meleeUsage:rootAction}onToggleSignatureSpell(event){var _a,_b;const{containerId}=event.target.closest(".item-container").dataset,{itemId}=event.target.closest(".item").dataset;if(!containerId||!itemId)return;const spellcastingEntry=this.actor.items.get(containerId),spell=this.actor.items.get(itemId);if(!(spellcastingEntry instanceof _item_1.SpellcastingEntryPF2e&&spell instanceof _item_1.SpellPF2e))return;const signatureSpells=null!==(_b=null===(_a=spellcastingEntry.data.data.signatureSpells)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:[];if(signatureSpells.includes(spell.id)){const updatedSignatureSpells=signatureSpells.filter((id=>id!==spell.id));spellcastingEntry.update({"data.signatureSpells.value":updatedSignatureSpells})}else{if(spell.isCantrip||spell.isFocusSpell||spell.isRitual)return;const updatedSignatureSpells=signatureSpells.concat([spell.id]);spellcastingEntry.update({"data.signatureSpells.value":updatedSignatureSpells})}}async _onSubmit(event,options={}){if(!(event.currentTarget instanceof HTMLInputElement))return super._onSubmit(event,options);const target=event.currentTarget;if("data.attributes.hp.value"===target.name){const inputted=Number(target.value)||0;target.value=Math.floor(Math.clamped(inputted,0,this.actor.hitPoints.max)).toString()}return super._onSubmit(event,options)}}exports.CreatureSheetPF2e=CreatureSheetPF2e},49786:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseActorDataPF2e=void 0;class BaseActorDataPF2e extends foundry.data.ActorData{}exports.BaseActorDataPF2e=BaseActorDataPF2e},74909:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isCreatureData=void 0,exports.isCreatureData=function(actorData){return["character","npc","familiar"].includes(actorData.type)}},71504:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SAVE_TYPES=exports.AbilityString=void 0;const base_1=__webpack_require__(49786);Object.defineProperty(exports,"AbilityString",{enumerable:!0,get:function(){return base_1.AbilityString}});const values_1=__webpack_require__(35089);Object.defineProperty(exports,"SAVE_TYPES",{enumerable:!0,get:function(){return values_1.SAVE_TYPES}})},43270:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorSizePF2e=void 0;const data_1=__webpack_require__(52769);class ActorSizePF2e{constructor({value,length,width}){this.value=value;const spaces=ActorSizePF2e.defaultSpaces[value];this.length=null!=length?length:spaces.length,this.width=null!=width?width:spaces.width}equals(size,{smallIsMedium=!1}={}){return this.getEffectiveSize(this.value,{smallIsMedium})===this.getEffectiveSize(size.value,{smallIsMedium})&&this.length*this.width==size.length*size.width}isLargerThan(size,{smallIsMedium=!1}={}){const other=size instanceof ActorSizePF2e?size:new ActorSizePF2e({value:size}),thisSize=this.getEffectiveSize(this.value,{smallIsMedium}),otherSize=this.getEffectiveSize(other.value,{smallIsMedium});return ActorSizePF2e.sizeRanks[thisSize]>ActorSizePF2e.sizeRanks[otherSize]||this.length*this.width>other.length*other.width}isSmallerThan(size,{smallIsMedium=!1}={}){const other=size instanceof ActorSizePF2e?size:new ActorSizePF2e({value:size}),thisSize=this.getEffectiveSize(this.value,{smallIsMedium}),otherSize=this.getEffectiveSize(other.value,{smallIsMedium});return ActorSizePF2e.sizeRanks[thisSize]<ActorSizePF2e.sizeRanks[otherSize]||this.length*this.width<other.length*other.width}difference(size,{smallIsMedium=!1}={}){const thisSize=this.getEffectiveSize(this.value,{smallIsMedium}),otherSize=this.getEffectiveSize(size.value,{smallIsMedium});return ActorSizePF2e.sizeRanks[thisSize]-ActorSizePF2e.sizeRanks[otherSize]}getEffectiveSize(size,{smallIsMedium}){return smallIsMedium&&"sm"===size?"med":size}increment({skipSmall=!1}={}){this.value="tiny"===this.value&&skipSmall?"med":"sm"===this.value&&skipSmall?"lg":"grg"===this.value?"grg":data_1.SIZES[data_1.SIZES.indexOf(this.value)+1];const newSpace=ActorSizePF2e.defaultSpaces[this.value];this.length=newSpace.length,this.width=newSpace.width}decrement({skipSmall=!1}={}){this.value="med"===this.value&&skipSmall||"tiny"===this.value?"tiny":data_1.SIZES[data_1.SIZES.indexOf(this.value)+1];const newSpace=ActorSizePF2e.defaultSpaces[this.value];this.length=newSpace.length,this.width=newSpace.width}}exports.ActorSizePF2e=ActorSizePF2e,ActorSizePF2e.defaultSpaces={tiny:{length:2.5,width:2.5},sm:{length:5,width:5},med:{length:5,width:5},lg:{length:10,width:10},huge:{length:15,width:15},grg:{length:20,width:20}},ActorSizePF2e.sizeRanks={grg:5,huge:4,lg:3,med:2,sm:1,tiny:0}},35089:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MOVEMENT_TYPES=exports.SUPPORTED_ROLL_OPTIONS=exports.SKILL_EXPANDED=exports.SKILL_DICTIONARY=exports.SKILL_ABBREVIATIONS=exports.RESISTANCE_TYPES=exports.WEAKNESS_TYPES=exports.IMMUNITY_TYPES=exports.CONDITION_TYPES=exports.SAVE_TYPES=exports.CREATURE_ACTOR_TYPES=exports.ABILITY_ABBREVIATIONS=void 0;const damage_calculation_1=__webpack_require__(73594),values_1=__webpack_require__(67623);exports.ABILITY_ABBREVIATIONS=["str","dex","con","int","wis","cha"],exports.CREATURE_ACTOR_TYPES=["character","npc","familiar"],exports.SAVE_TYPES=["fortitude","reflex","will"],exports.CONDITION_TYPES=["blinded","broken","clumsy","concealed","confused","controlled","dazzled","deafened","doomed","drained","dying","encumbered","enfeebled","fascinated","fatigued","flat-footed","fleeing","friendly","frightened","grabbed","helpful","hidden","hostile","immobilized","indifferent","invisible","observed","paralyzed","persistent-damage","petrified","prone","quickened","restrained","sickened","slowed","stunned","stupefied","unconscious","undetected","unfriendly","unnoticed","wounded"],exports.IMMUNITY_TYPES=new Set([...exports.CONDITION_TYPES,...damage_calculation_1.DAMAGE_CATEGORIES,...damage_calculation_1.DAMAGE_TRAITS,...damage_calculation_1.DAMAGE_TYPES,...values_1.MAGIC_SCHOOLS,"area-damage","auditory","confusion","critical-hits","curse","detection","death-effects","disease","emotion","fear-effects","healing","inhaled","nonlethal-attacks","nonmagical-attacks","object-immunities","olfactory","polymorph","possession","precision","scrying","sleep","spellDeflection","swarm-attacks","swarm-mind","trip","visual"]),exports.WEAKNESS_TYPES=new Set([...damage_calculation_1.ATTACK_TYPES,...damage_calculation_1.DAMAGE_CATEGORIES,...damage_calculation_1.DAMAGE_TRAITS,...damage_calculation_1.DAMAGE_TYPES,"area-damage","axe","critical-hits","emotion","precision","splash-damage","vampire-weaknesses","vorpal","vorpal-fear"]),exports.RESISTANCE_TYPES=new Set([...damage_calculation_1.ATTACK_TYPES,...damage_calculation_1.DAMAGE_TRAITS,...damage_calculation_1.DAMAGE_TYPES,...damage_calculation_1.DAMAGE_CATEGORIES,"all","area-damage","critical-hits","protean anatomy"]),exports.SKILL_ABBREVIATIONS=["acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi"],exports.SKILL_DICTIONARY={acr:"acrobatics",arc:"arcana",ath:"athletics",cra:"crafting",dec:"deception",dip:"diplomacy",itm:"intimidation",med:"medicine",nat:"nature",occ:"occultism",prf:"performance",rel:"religion",soc:"society",ste:"stealth",sur:"survival",thi:"thievery"},exports.SKILL_EXPANDED={acrobatics:{ability:"dex",shortform:"acr"},arcana:{ability:"int",shortform:"arc"},athletics:{ability:"str",shortform:"ath"},crafting:{ability:"int",shortform:"cra"},deception:{ability:"cha",shortform:"dec"},diplomacy:{ability:"cha",shortform:"dip"},intimidation:{ability:"cha",shortform:"itm"},medicine:{ability:"wis",shortform:"med"},nature:{ability:"wis",shortform:"nat"},occultism:{ability:"int",shortform:"occ"},performance:{ability:"cha",shortform:"prf"},religion:{ability:"wis",shortform:"rel"},society:{ability:"int",shortform:"soc"},stealth:{ability:"dex",shortform:"ste"},survival:{ability:"wis",shortform:"sur"},thievery:{ability:"dex",shortform:"thi"}},exports.SUPPORTED_ROLL_OPTIONS=["all","attack-roll","damage-roll","saving-throw","fortitude","reflex","will","perception","initiative","skill-check","counteract-check"],exports.MOVEMENT_TYPES=["land","burrow","climb","fly","swim"]},47389:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FamiliarData=void 0;const data_1=__webpack_require__(73204);class FamiliarData extends data_1.BaseCreatureData{}exports.FamiliarData=FamiliarData,FamiliarData.DEFAULT_ICON="systems/pf2e/icons/default-icons/familiar.svg"},75826:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FamiliarPF2e=void 0;const values_1=__webpack_require__(35089),index_1=__webpack_require__(85530),modifiers_1=__webpack_require__(27324),rolls_1=__webpack_require__(87525),creature_1=__webpack_require__(30653),data_1=__webpack_require__(47389),size_1=__webpack_require__(43270);class FamiliarPF2e extends creature_1.CreaturePF2e{static get schema(){return data_1.FamiliarData}get master(){var _a,_b;const actor=null===(_a=game.actors)||void 0===_a?void 0:_a.get(null!==(_b=this.data.data.master.id)&&void 0!==_b?_b:"");return actor instanceof index_1.CharacterPF2e||actor instanceof index_1.NPCPF2e?actor:null}prepareBaseData(){super.prepareBaseData();const systemData=this.data.data;systemData.details.alignment={value:"N"},systemData.details.level={value:0},systemData.traits={senses:[{type:"lowLightVision",label:"PF2E.SensesLowLightVision",value:""}],size:new size_1.ActorSizePF2e({value:"tiny"}),traits:{value:["minion"],custom:""}},systemData.attributes.perception={},systemData.attributes.speed={value:"25",label:game.i18n.localize("PF2E.SpeedTypesLand"),otherSpeeds:[]},systemData.skills={},systemData.saves={fortitude:{},reflex:{},will:{}}}applyActiveEffects(){}prepareDerivedData(){var _a,_b,_c,_d,_e,_f,_g;super.prepareDerivedData();const master=this.master;this.data.data.details.level.value=null!==(_a=null==master?void 0:master.level)&&void 0!==_a?_a:0,super.applyActiveEffects();const data=this.data.data,rules=this.rules.filter((rule=>!rule.ignored));if(data.traits.traits.value=[...this.traits].sort(),!master)return;(_g=data.master).ability||(_g.ability="cha");const spellcastingAbilityModifier=master.data.data.abilities[data.master.ability].mod,synthetics=this.prepareCustomModifiers(rules),{statisticsModifiers}=synthetics,modifierTypes=[modifiers_1.MODIFIER_TYPE.ABILITY,modifiers_1.MODIFIER_TYPE.PROFICIENCY,modifiers_1.MODIFIER_TYPE.ITEM],filterModifier=modifier=>!modifierTypes.includes(modifier.type),{attributes}=data;attributes.speed=this.prepareSpeed("land",synthetics);const{otherSpeeds}=data.attributes.speed;for(let idx=0;idx<otherSpeeds.length;idx++)otherSpeeds[idx]=this.prepareSpeed(otherSpeeds[idx].type,synthetics);{const perLevelModifiers=null===(_b=statisticsModifiers["hp-per-level"])||void 0===_b?void 0:_b.filter(filterModifier).map((modifier=>{const clone=modifier.clone();return clone.modifier*=this.level,clone})),modifiers=[new modifiers_1.ModifierPF2e("PF2E.MasterLevelHP",5*this.level,modifiers_1.MODIFIER_TYPE.UNTYPED),null!==(_d=null===(_c=statisticsModifiers.hp)||void 0===_c?void 0:_c.filter(filterModifier).map((m=>m.clone())))&&void 0!==_d?_d:[],null!=perLevelModifiers?perLevelModifiers:[]].flat(),stat=mergeObject(new modifiers_1.StatisticModifier("hp",modifiers),attributes.hp,{overwrite:!1});stat.max=stat.totalModifier,stat.value=Math.min(stat.value,stat.max),stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),data.attributes.hp=stat}{const source=master.data.data.attributes.ac.modifiers.filter((modifier=>!["status","circumstance"].includes(modifier.type))),base=10+new modifiers_1.StatisticModifier("base",source).totalModifier,modifiers=[];["ac","dex-based","all"].forEach((key=>(statisticsModifiers[key]||[]).filter(filterModifier).map((m=>m.clone())).forEach((m=>modifiers.push(m)))));const stat=mergeObject(new modifiers_1.StatisticModifier("ac",modifiers),data.attributes.ac,{overwrite:!1});stat.value=base+stat.totalModifier,stat.breakdown=[game.i18n.format("PF2E.MasterArmorClass",{base})].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),data.attributes.ac=stat}for(const saveName of values_1.SAVE_TYPES){const save=master.data.data.saves[saveName],source=save.modifiers.filter((modifier=>!["status","circumstance"].includes(modifier.type))),modifiers=[new modifiers_1.ModifierPF2e(`PF2E.MasterSavingThrow.${saveName}`,new modifiers_1.StatisticModifier("base",source).totalModifier,modifiers_1.MODIFIER_TYPE.UNTYPED)],ability=save.ability;[save.name,`${ability}-based`,"saving-throw","all"].forEach((key=>(statisticsModifiers[key]||[]).filter(filterModifier).map((m=>m.clone())).forEach((m=>modifiers.push(m)))));const stat=mergeObject(new modifiers_1.StatisticModifier(CONFIG.PF2E.saves[saveName],modifiers),{roll:args=>{const label=game.i18n.format("PF2E.SavingThrowWithName",{saveName:game.i18n.localize(CONFIG.PF2E.saves[saveName])});rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"saving-throw",dc:args.dc,options:args.options},args.event,args.callback)},value:0});stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),data.saves[saveName]=stat}this.data.data.traits.senses=this.prepareSenses(this.data.data.traits.senses,synthetics);{const modifiers=[new modifiers_1.ModifierPF2e("PF2E.MasterLevel",data.details.level.value,modifiers_1.MODIFIER_TYPE.UNTYPED)];["attack","mundane-attack","attack-roll","all"].forEach((key=>(statisticsModifiers[key]||[]).filter(filterModifier).map((m=>m.clone())).forEach((m=>modifiers.push(m)))));const stat=mergeObject(new modifiers_1.StatisticModifier("attack",modifiers),{roll:({event,options=[],callback})=>{rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier("Attack Roll",stat),{actor:this,type:"attack-roll",options},event,callback)}});stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),data.attack=stat}{const modifiers=[new modifiers_1.ModifierPF2e("PF2E.MasterLevel",data.details.level.value,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(`PF2E.MasterAbility.${data.master.ability}`,spellcastingAbilityModifier,modifiers_1.MODIFIER_TYPE.UNTYPED)];["perception","wis-based","all"].forEach((key=>(statisticsModifiers[key]||[]).filter(filterModifier).map((m=>m.clone())).forEach((m=>modifiers.push(m)))));const stat=mergeObject(new modifiers_1.StatisticModifier("perception",modifiers),data.attributes.perception,{overwrite:!1});stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=args=>{var _a;const label=game.i18n.localize("PF2E.PerceptionCheck");rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"perception-check",options:null!==(_a=args.options)&&void 0!==_a?_a:[],dc:args.dc},args.event,args.callback)},data.attributes.perception=stat}for(const shortForm of values_1.SKILL_ABBREVIATIONS){const longForm=values_1.SKILL_DICTIONARY[shortForm],modifiers=[new modifiers_1.ModifierPF2e("PF2E.MasterLevel",data.details.level.value,modifiers_1.MODIFIER_TYPE.UNTYPED)];["acr","ste"].includes(shortForm)&&modifiers.push(new modifiers_1.ModifierPF2e(`PF2E.MasterAbility.${data.master.ability}`,spellcastingAbilityModifier,modifiers_1.MODIFIER_TYPE.UNTYPED));const ability=values_1.SKILL_EXPANDED[longForm].ability;[longForm,`${ability}-based`,"skill-check","all"].forEach((key=>(statisticsModifiers[key]||[]).filter(filterModifier).map((m=>m.clone())).forEach((m=>modifiers.push(m)))));const label=null!==(_e=CONFIG.PF2E.skills[shortForm])&&void 0!==_e?_e:longForm,stat=mergeObject(new modifiers_1.StatisticModifier(label,modifiers),{ability,value:0,roll:args=>{var _a;const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:game.i18n.localize(CONFIG.PF2E.skills[shortForm])});rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"skill-check",options:null!==(_a=args.options)&&void 0!==_a?_a:[],dc:args.dc},args.event,args.callback)}});stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),data.skills[shortForm]=stat}for(const rule of this.rules)try{null===(_f=rule.onAfterPrepareData)||void 0===_f||_f.call(rule,synthetics)}catch(error){console.error(`PF2e | Failed to execute onAfterPrepareData on rule element ${rule}.`,error)}}async createEmbeddedDocuments(embeddedName,data,context={}){var _a;const createData=Array.isArray(data)?data:[data];for(const datum of data)if("type"in datum&&!["condition","effect"].includes(null!==(_a=datum.type)&&void 0!==_a?_a:""))return ui.notifications.error(game.i18n.localize("PF2E.FamiliarItemTypeError")),[];return super.createEmbeddedDocuments(embeddedName,createData,context)}}exports.FamiliarPF2e=FamiliarPF2e},46949:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FamiliarSheetPF2e=void 0;const values_1=__webpack_require__(35089);class FamiliarSheetPF2e extends ActorSheet{static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:[...options.classes,"actor","familiar"],width:650,height:680,tabs:[{navSelector:".sheet-navigation",contentSelector:".sheet-content",initial:"attributes"}]}),options}get template(){return"systems/pf2e/templates/actors/familiar-sheet.html"}async getData(){var _a,_b,_c,_d;const familiar=this.actor,owners=Object.entries(familiar.data.permission).filter((([_id,permission])=>permission===CONST.ENTITY_PERMISSIONS.OWNER)).flatMap((([userID])=>{var _a;return null!==(_a=game.users.get(userID))&&void 0!==_a?_a:[]})),masters=game.actors.filter((actor=>["character","npc"].includes(actor.data.type))).filter((actor=>actor.testUserPermission(game.user,"OWNER"))).filter((actor=>owners.some((owner=>actor.testUserPermission(owner,"OWNER"))))),abilities=CONFIG.PF2E.abilities,size=null!==(_a=CONFIG.PF2E.actorSizes[familiar.data.data.traits.size.value])&&void 0!==_a?_a:null,familiarAbilities=null!==(_d=null===(_c=null===(_b=this.actor.master)||void 0===_b?void 0:_b.attributes)||void 0===_c?void 0:_c.familiarAbilities)&&void 0!==_d?_d:{value:0,breakdown:""},familiarTraits=CONFIG.PF2E.creatureTraits,traitDescriptions=CONFIG.PF2E.traitsDescriptions,traits=Array.from(this.actor.data.data.traits.traits.value).map((trait=>{var _a,_b;return{value:trait,label:null!==(_a=familiarTraits[trait])&&void 0!==_a?_a:trait,description:null!==(_b=traitDescriptions[trait])&&void 0!==_b?_b:""}})).sort(),actorData=this.actor.toObject(!1),baseData=await super.getData();return baseData.actor=actorData,baseData.data=actorData.data,Object.assign(Object.assign({},baseData),{owners,master:this.actor.master,masters,abilities,size,familiarAbilities,traits})}activateListeners(html){super.activateListeners(html),html.find('[data-saving-throw]:not([data-saving-throw=""])').on("click","*",(event=>{const save=$(event.currentTarget).closest("[data-saving-throw]").attr("data-saving-throw"),options=this.actor.getRollOptions(["all","saving-throw",save]);this.actor.data.data.saves[save].roll({event,options})})),html.find("[data-skill-check] *").on("click",(event=>{var _a;const skill=$(event.currentTarget).closest("[data-skill-check]").attr("data-skill-check"),options=this.actor.getRollOptions(["all","skill-check",null!==(_a=values_1.SKILL_DICTIONARY[skill])&&void 0!==_a?_a:skill]);this.actor.data.data.skills[skill].roll({event,options})})),html.find("[data-perception-check] *").on("click",(event=>{const options=this.actor.getRollOptions(["all","perception"]);this.actor.attributes.perception.roll({event,options})})),html.find("[data-attack-roll] *").on("click",(event=>{const options=this.actor.getRollOptions(["all","attack"]);this.actor.data.data.attack.roll({event,options})})),html.find(".item-list").on("click",".expandable",(event=>{$(event.currentTarget).removeClass("expandable").addClass("expanded")})),html.find(".item-list").on("click",".expanded",(event=>{$(event.currentTarget).removeClass("expanded").addClass("expandable")})),this.isEditable&&(html.find(".item-list").on("click",'[data-item-id]:not([data-item-id=""]) .item-edit',(event=>{const itemID=$(event.currentTarget).closest("[data-item-id]").attr("data-item-id"),item=this.actor.items.get(null!=itemID?itemID:"");item&&item.sheet.render(!0)})),html.find(".item-list").on("click",'[data-item-id]:not([data-item-id=""]) .item-delete',(event=>{var _a;const itemID=null!==(_a=$(event.currentTarget).closest("[data-item-id]").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemID);if(item)return new Dialog({title:`Remove ${item.type}?`,content:`<p>Are you sure you want to remove ${item.name}?</p>`,buttons:{delete:{icon:'<i class="fas fa-trash"></i>',label:"Remove",callback:()=>{item.delete()}},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"cancel"}).render(!0),!1})))}}exports.FamiliarSheetPF2e=FamiliarSheetPF2e},72192:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.HazardData=void 0;const base_1=__webpack_require__(49786);class HazardData extends base_1.BaseActorDataPF2e{}exports.HazardData=HazardData,HazardData.DEFAULT_ICON="systems/pf2e/icons/default-icons/hazard.svg"},17197:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.HazardPF2e=void 0;const data_1=__webpack_require__(72192),index_1=__webpack_require__(85530);class HazardPF2e extends index_1.ActorPF2e{static get schema(){return data_1.HazardData}get rarity(){return this.data.data.traits.rarity.value}get isComplex(){return this.data.data.details.isComplex}prepareBaseData(){super.prepareBaseData(),this.data.data.attributes.initiative={tiebreakPriority:this.hasPlayerOwner?2:1}}}exports.HazardPF2e=HazardPF2e},13945:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.HazardSheetPF2e=void 0;const base_1=__webpack_require__(11291),_util_1=__webpack_require__(6945),_1=__webpack_require__(17197),_item_1=__webpack_require__(10843),data_1=__webpack_require__(71504);class HazardSheetPF2e extends base_1.ActorSheetPF2e{static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:options.classes.concat("hazard"),width:650,height:680}),options}get template(){const path="systems/pf2e/templates/actors/";return this.actor.getFlag("pf2e","editHazard.value")?`${path}hazard-sheet.html`:`${path}hazard-sheet-no-edit.html`}async getData(){var _a,_b,_c,_d,_e;const sheetData=await super.getData();for(const key of data_1.SAVE_TYPES)sheetData.data.saves[key].label=CONFIG.PF2E.saves[key];null!==(_a=(_e=sheetData.actor.flags).editHazard)&&void 0!==_a||(_e.editHazard={value:!1});const systemData=sheetData.data;for(const weakness of systemData.traits.dv)weakness.label=CONFIG.PF2E.weaknessTypes[weakness.type];for(const resistance of systemData.traits.dr)resistance.label=CONFIG.PF2E.resistanceTypes[resistance.type];return Object.assign(Object.assign({},sheetData),{flags:sheetData.actor.flags,hazardTraits:CONFIG.PF2E.hazardTraits,actorTraits:systemData.traits.traits.value,actorRarities:CONFIG.PF2E.rarityTraits,actorRarity:CONFIG.PF2E.rarityTraits[this.actor.rarity],stealthDC:(null!==(_c=null===(_b=systemData.attributes.stealth)||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:0)+10,hasStealthDescription:(null===(_d=systemData.attributes.stealth)||void 0===_d?void 0:_d.details)||!1,hasImmunities:!!systemData.traits.di.value.length&&systemData.traits.di.value,hasResistances:systemData.traits.dr.length>0,hasWeaknesses:systemData.traits.dv.length>0,hasDescription:systemData.details.description||!1,hasDisable:systemData.details.disable||!1,hasRoutineDetails:systemData.details.routine||!1,hasResetDetails:systemData.details.reset||!1,hasHPDetails:systemData.attributes.hp.details||!1,hasWillSave:0!==systemData.saves.will.value||!1,brokenThreshold:Math.floor(systemData.attributes.hp.max/2)})}prepareItems(sheetData){var _a;const actorData=sheetData.actor,attacks={melee:{label:"NPC Melee Attack",items:[],type:"melee"},ranged:{label:"NPC Ranged Attack",items:[],type:"melee"}},actions={action:{label:"Actions",actions:[]},reaction:{label:"Reactions",actions:[]},free:{label:"Free Actions",actions:[]},passive:{label:"Passive Actions",actions:[]}},weaponTraits=CONFIG.PF2E.weaponTraits,traitsDescriptions=CONFIG.PF2E.traitsDescriptions;for(const itemData of actorData.items)if(itemData.img=itemData.img||CONST.DEFAULT_TOKEN,"melee"===itemData.type){const weaponType=itemData.data.weaponType.value||"melee",traits=itemData.data.traits.value,isAgile=traits.includes("agile");itemData.data.bonus.total=Number(itemData.data.bonus.value)||0,itemData.data.isAgile=isAgile,itemData.traits=traits.map((trait=>{var _a,_b;return{label:null!==(_a=weaponTraits[trait])&&void 0!==_a?_a:trait.charAt(0).toUpperCase()+trait.slice(1),description:null!==(_b=traitsDescriptions[trait])&&void 0!==_b?_b:""}})),attacks[weaponType].items.push(itemData)}else if("action"===itemData.type){const actionType=itemData.data.actionType.value||"action";itemData.img=_1.HazardPF2e.getActionGraphics(actionType,Number(itemData.data.actions.value)||1).imageUrl;const traitObjects=itemData.data.traits.value.map((trait=>{var _a;return{label:weaponTraits[trait]||trait.charAt(0).toUpperCase()+trait.slice(1),description:null!==(_a=traitsDescriptions[trait])&&void 0!==_a?_a:""}}));if(itemData.data.actionType.value){const actionType=itemData.data.actionType.value;traitObjects.push({label:weaponTraits[actionType]||actionType.charAt(0).toUpperCase()+actionType.slice(1),description:null!==(_a=traitsDescriptions[actionType])&&void 0!==_a?_a:""})}itemData.traits=traitObjects,actions[actionType].actions.push(itemData)}actorData.actions=actions,actorData.attacks=attacks}activateListeners(html){super.activateListeners(html),html.find("button").on("click",(event=>{var _a;event.preventDefault(),event.stopPropagation();const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId);if(!item)throw(0,_util_1.ErrorPF2e)(`Item ${itemId} not found`);const spell=item instanceof _item_1.SpellPF2e?item:item instanceof _item_1.ConsumablePF2e?item.embeddedSpell:null;switch(event.target.dataset.action){case"npcAttack":item.rollNPCAttack(event);break;case"npcAttack2":item.rollNPCAttack(event,2);break;case"npcAttack3":item.rollNPCAttack(event,3);break;case"npcDamage":item.rollNPCDamage(event);break;case"npcDamageCritical":item.rollNPCDamage(event,!0);break;case"spellAttack":null==spell||spell.rollAttack(event);break;case"spellDamage":null==spell||spell.rollDamage(event);break;case"consume":item instanceof _item_1.ConsumablePF2e&&item.consume();break;default:throw new Error("Unknown action type")}})),this.options.editable&&html.find(".isHazardEditable").on("change",(event=>{this.actor.setFlag("pf2e","editHazard",{value:event.target.checked})}))}}exports.HazardSheetPF2e=HazardSheetPF2e},85530:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.VehiclePF2e=exports.LootPF2e=exports.HazardPF2e=exports.FamiliarPF2e=exports.NPCPF2e=exports.CharacterPF2e=exports.CreaturePF2e=exports.ActorPF2e=void 0;var base_1=__webpack_require__(65532);Object.defineProperty(exports,"ActorPF2e",{enumerable:!0,get:function(){return base_1.ActorPF2e}});var creature_1=__webpack_require__(30653);Object.defineProperty(exports,"CreaturePF2e",{enumerable:!0,get:function(){return creature_1.CreaturePF2e}});var character_1=__webpack_require__(886);Object.defineProperty(exports,"CharacterPF2e",{enumerable:!0,get:function(){return character_1.CharacterPF2e}});var npc_1=__webpack_require__(78382);Object.defineProperty(exports,"NPCPF2e",{enumerable:!0,get:function(){return npc_1.NPCPF2e}});var familiar_1=__webpack_require__(75826);Object.defineProperty(exports,"FamiliarPF2e",{enumerable:!0,get:function(){return familiar_1.FamiliarPF2e}});var hazard_1=__webpack_require__(17197);Object.defineProperty(exports,"HazardPF2e",{enumerable:!0,get:function(){return hazard_1.HazardPF2e}});var loot_1=__webpack_require__(36011);Object.defineProperty(exports,"LootPF2e",{enumerable:!0,get:function(){return loot_1.LootPF2e}});var vehicle_1=__webpack_require__(47341);Object.defineProperty(exports,"VehiclePF2e",{enumerable:!0,get:function(){return vehicle_1.VehiclePF2e}})},46485:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ItemTransfer=void 0;const index_1=__webpack_require__(10843),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),index_2=__webpack_require__(85530);class ItemTransfer{constructor(source,target,quantity,containerId){this.source=source,this.target=target,this.quantity=quantity,this.containerId=containerId,this.templatePaths={flavor:"./systems/pf2e/templates/chat/action/flavor.html",content:"./systems/pf2e/templates/chat/action/content.html"}}async request(){var _a;const gamemaster=game.users.find((user=>user.isGM&&user.active));if(null===gamemaster){const loot=[this.getSource(),this.getTarget()].find((actor=>actor instanceof index_2.ActorPF2e&&actor.isLootableBy(game.user)&&!actor.isOwner));if(!(loot instanceof index_2.ActorPF2e))throw(0,_util_1.ErrorPF2e)("Unexpected missing actor");const translations=localize_1.LocalizePF2e.translations.PF2E.loot;return ui.notifications.error(game.i18n.format(translations.GMSupervisionError,{loot:ItemTransfer.tokenName(loot)})),Promise.reject()}console.debug(`PF2e System | Requesting item transfer from GM ${null!==(_a=null==gamemaster?void 0:gamemaster.name)&&void 0!==_a?_a:"<None available>"}`),game.socket.emit("system.pf2e",{request:"itemTransfer",data:this})}async enact(requester){var _a;if(!game.user.isGM)throw(0,_util_1.ErrorPF2e)("Unauthorized item transfer");console.debug("PF2e System | Enacting item transfer");const sourceActor=this.getSource(),sourceItem=null===(_a=null==sourceActor?void 0:sourceActor.items)||void 0===_a?void 0:_a.find((item=>item.id===this.source.itemId)),targetActor=this.getTarget();if(!(sourceActor instanceof index_2.ActorPF2e&&sourceItem instanceof index_1.PhysicalItemPF2e&&targetActor instanceof index_2.ActorPF2e&&sourceActor.isLootableBy(game.user)&&targetActor.isLootableBy(game.user)))throw(0,_util_1.ErrorPF2e)("Failed sanity check during item transfer");const targetItem=await sourceActor.transferItemToActor(targetActor,sourceItem,this.quantity,this.containerId),sourceIsLoot="loot"===sourceActor.data.type&&"Loot"===sourceActor.data.data.lootSheetType;!sourceItem&&sourceIsLoot||this.sendMessage(requester,sourceActor,targetActor,targetItem)}getActor(tokenId,actorId){var _a,_b;if("string"==typeof tokenId){const token=canvas.tokens.placeables.find((canvasToken=>canvasToken.id===tokenId));return null!==(_a=null==token?void 0:token.actor)&&void 0!==_a?_a:null}return null!==(_b=game.actors.get(actorId))&&void 0!==_b?_b:null}getSource(){return this.getActor(this.source.tokenId,this.source.actorId)}getTarget(){return this.getActor(this.target.tokenId,this.target.actorId)}static tokenName(entity){var _a,_b,_c,_d;if(entity instanceof index_2.ActorPF2e)return entity.isToken&&entity.token instanceof Token?entity.token.name:null!==(_b=null===(_a=entity.data.token)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:entity.name;if(entity.character instanceof index_2.ActorPF2e){const token=canvas.tokens.placeables.find((canvasToken=>{var _a;return(null===(_a=canvasToken.actor)||void 0===_a?void 0:_a.id)===entity.id}));return null!==(_c=null==token?void 0:token.name)&&void 0!==_c?_c:null===(_d=entity.character)||void 0===_d?void 0:_d.name}return entity.name}async sendMessage(requester,sourceActor,targetActor,item){const translations=localize_1.LocalizePF2e.translations.PF2E.loot;if(!item){if("loot"===sourceActor.data.type&&"Merchant"===sourceActor.data.data.lootSheetType){const message=translations.InsufficientFundsMessage,content=await renderTemplate(this.templatePaths.content,{imgPath:targetActor.img,message:game.i18n.format(message,{buyer:targetActor.name})}),flavor=await this.messageFlavor(sourceActor,targetActor,translations.BuySubtitle);return void await ChatMessage.create({user:requester.id,speaker:{alias:ItemTransfer.tokenName(targetActor)},type:CONST.CHAT_MESSAGE_TYPES.EMOTE,flavor,content})}throw(0,_util_1.ErrorPF2e)("Unexpected item-transfer failure")}const[speaker,subtitle,formatArgs]=(()=>{var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;const isMerchant=actor=>"loot"===actor.data.type&&"Merchant"===actor.data.data.lootSheetType,isWhat=actor=>({isCharacter:actor.testUserPermission(requester,"OWNER")&&"character"===actor.data.type,isMerchant:isMerchant(actor),isNPC:"npc"===actor.data.type&&actor.isLootableBy(requester)&&!actor.testUserPermission(requester,"OWNER"),isLoot:"loot"===actor.data.type&&actor.isLootableBy(requester)&&!actor.testUserPermission(requester,"OWNER")&&!isMerchant(actor)}),source=isWhat(sourceActor),target=isWhat(targetActor);if(source.isCharacter&&target.isLoot)return[ItemTransfer.tokenName(sourceActor),translations.DepositSubtitle,[translations.DepositMessage,{depositor:ItemTransfer.tokenName(sourceActor),container:ItemTransfer.tokenName(targetActor)}]];if(source.isCharacter&&target.isMerchant)return[ItemTransfer.tokenName(sourceActor),translations.GiveSubtitle,[translations.GiveMessage,{giver:ItemTransfer.tokenName(sourceActor),recipient:ItemTransfer.tokenName(targetActor)}]];if(source.isCharacter&&target.isNPC)return[ItemTransfer.tokenName(sourceActor),translations.PlantSubtitle,[translations.PlantMessage,{planter:ItemTransfer.tokenName(sourceActor),corpse:ItemTransfer.tokenName(targetActor)}]];if(source.isLoot&&target.isCharacter)return[ItemTransfer.tokenName(targetActor),translations.TakeSubtitle,[translations.TakeMessage,{taker:ItemTransfer.tokenName(targetActor),container:ItemTransfer.tokenName(sourceActor)}]];if(source.isNPC&&target.isCharacter)return[ItemTransfer.tokenName(targetActor),translations.LootSubtitle,[translations.LootMessage,{looter:ItemTransfer.tokenName(targetActor),corpse:ItemTransfer.tokenName(sourceActor)}]];if([source,target].every((actor=>actor.isLoot||actor.isNPC)))return[null!==(_b=null===(_a=requester.character)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:requester.name,translations.TransferSubtitle,[translations.TransferMessage,{transferrer:null!==(_d=null===(_c=requester.character)||void 0===_c?void 0:_c.name)&&void 0!==_d?_d:requester.name,fromContainer:ItemTransfer.tokenName(sourceActor),toContainer:ItemTransfer.tokenName(targetActor)}]];if(source.isLoot&&target.isMerchant)return[null!==(_f=null===(_e=requester.character)||void 0===_e?void 0:_e.name)&&void 0!==_f?_f:requester.name,translations.GiveSubtitle,[translations.GiveMessage,{seller:null!==(_h=null===(_g=requester.character)||void 0===_g?void 0:_g.name)&&void 0!==_h?_h:requester.name,buyer:ItemTransfer.tokenName(targetActor)}]];if(source.isMerchant&&target.isCharacter)return[ItemTransfer.tokenName(sourceActor),translations.SellSubtitle,[translations.SellMessage,{seller:ItemTransfer.tokenName(sourceActor),buyer:ItemTransfer.tokenName(targetActor)}]];if(source.isMerchant&&target.isLoot)return[null!==(_k=null===(_j=requester.character)||void 0===_j?void 0:_j.name)&&void 0!==_k?_k:requester.name,translations.SellSubtitle,[translations.SellMessage,{seller:ItemTransfer.tokenName(sourceActor),buyer:null!==(_m=null===(_l=requester.character)||void 0===_l?void 0:_l.name)&&void 0!==_m?_m:requester.name}]];throw(0,_util_1.ErrorPF2e)("Unexpected item-transfer failure")})(),formatProperties=formatArgs[1];if(!formatProperties)throw(0,_util_1.ErrorPF2e)("Unexpected item-transfer failure");formatProperties.quantity=this.quantity,formatProperties.item=item.name;const content=await renderTemplate(this.templatePaths.content,{imgPath:item.img,message:game.i18n.format(...formatArgs).replace(/\b1 × /,"")}),flavor=await this.messageFlavor(sourceActor,targetActor,subtitle);await ChatMessage.create({user:requester.id,speaker:{alias:speaker},type:CONST.CHAT_MESSAGE_TYPES.EMOTE,flavor,content})}async messageFlavor(sourceActor,targetActor,subtitle){return await renderTemplate(this.templatePaths.flavor,{action:{title:CONFIG.PF2E.featTraits.interact,subtitle,tooltip:CONFIG.PF2E.featTraits.interact,typeNumber:"loot"===sourceActor.data.type&&"loot"===targetActor.data.type?2:1},traits:[{name:CONFIG.PF2E.featTraits.manipulate,description:CONFIG.PF2E.traitsDescriptions.manipulate}]})}}exports.ItemTransfer=ItemTransfer},76069:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LootData=void 0;const base_1=__webpack_require__(49786);class LootData extends base_1.BaseActorDataPF2e{}exports.LootData=LootData,LootData.DEFAULT_ICON="systems/pf2e/icons/default-icons/loot.svg"},36011:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LootPF2e=void 0;const base_1=__webpack_require__(65532),physical_1=__webpack_require__(6560),helpers_1=__webpack_require__(71046),_util_1=__webpack_require__(6945),data_1=__webpack_require__(76069);class LootPF2e extends base_1.ActorPF2e{static get schema(){return data_1.LootData}get isLoot(){return"Loot"===this.data.data.lootSheetType}get isMerchant(){return"Merchant"===this.data.data.lootSheetType}get hiddenWhenEmpty(){return this.isLoot&&this.data.data.hiddenWhenEmpty}canUserModify(user,action){return"update"===action?this.permission>=CONST.ENTITY_PERMISSIONS.LIMITED:super.canUserModify(user,action)}get visible(){return this.permission>=CONST.ENTITY_PERMISSIONS.OBSERVER}async transferItemToActor(targetActor,item,quantity,containerId){if(!this.isOwner||!targetActor.isOwner)return super.transferItemToActor(targetActor,item,quantity,containerId);if(this.isMerchant&&item instanceof physical_1.PhysicalItemPF2e){const itemValue=(0,helpers_1.extractPriceFromItem)(item.data,quantity);if(await(0,helpers_1.attemptToRemoveCoinsByValue)({actor:targetActor,coinsToRemove:itemValue}))return await(0,helpers_1.addCoins)(item.actor,{coins:itemValue,combineStacks:!0}),super.transferItemToActor(targetActor,item,quantity,containerId);if(this.isLoot)throw(0,_util_1.ErrorPF2e)("Loot transfer failed");return null}return super.transferItemToActor(targetActor,item,quantity,containerId)}async toggleTokenHiding(){if(!this.hiddenWhenEmpty)return;const hiddenStatus=0===this.items.size,promises=game.scenes.contents.map((scene=>[scene,scene.tokens.filter((tokenDoc=>tokenDoc.actor===this))])).map((([scene,tokenDocs])=>scene.updateEmbeddedDocuments("Token",tokenDocs.map((tokenDoc=>({_id:tokenDoc.id,hidden:hiddenStatus}))))));await Promise.allSettled(promises)}_onCreate(data,options,userId){this.toggleTokenHiding(),super._onCreate(data,options,userId)}_onUpdate(changed,options,userId){var _a;void 0!==(null===(_a=changed.data)||void 0===_a?void 0:_a.hiddenWhenEmpty)&&this.toggleTokenHiding(),super._onUpdate(changed,options,userId)}_onCreateEmbeddedDocuments(embeddedName,documents,result,options,userId){this.toggleTokenHiding(),super._onCreateEmbeddedDocuments(embeddedName,documents,result,options,userId)}_onDeleteEmbeddedDocuments(embeddedName,documents,result,options,userId){this.toggleTokenHiding(),super._onDeleteEmbeddedDocuments(embeddedName,documents,result,options,userId)}}exports.LootPF2e=LootPF2e},58693:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LootSheetPF2e=void 0;const base_1=__webpack_require__(11291),bulk_1=__webpack_require__(47297),helpers_1=__webpack_require__(23247),distribute_coins_popup_1=__webpack_require__(25289),loot_npcs_popup_1=__webpack_require__(87e3),helpers_2=__webpack_require__(44252);class LootSheetPF2e extends base_1.ActorSheetPF2e{static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{editable:!0,classes:options.classes.concat("loot"),width:650,height:680,tabs:[{navSelector:".sheet-navigation",contentSelector:".sheet-content",initial:"inventory"}]})}get template(){return"systems/pf2e/templates/actors/loot/sheet.html"}get isLootSheet(){return!this.actor.isOwner&&this.actor.isLootableBy(game.user)}async getData(){const sheetData=await super.getData(),isLoot="Loot"===this.actor.data.data.lootSheetType;return Object.assign(Object.assign({},sheetData),{isLoot})}activateListeners(html){super.activateListeners(html),this.options.editable&&(html.find(".split-coins").removeAttr("disabled").on("click",(event=>this.distributeCoins(event))),html.find(".loot-npcs").removeAttr("disabled").on("click",(event=>this.lootNPCs(event))),html.find("i.fa-info-circle.help[title]").tooltipster({maxWidth:275,position:"right",theme:"crb-hover",contentAsHTML:!0}))}prepareItems(sheetData){var _a;const actorData=sheetData.actor,inventory={weapon:{label:game.i18n.localize("PF2E.InventoryWeaponsHeader"),items:[]},armor:{label:game.i18n.localize("PF2E.InventoryArmorHeader"),items:[]},equipment:{label:game.i18n.localize("PF2E.InventoryEquipmentHeader"),items:[]},consumable:{label:game.i18n.localize("PF2E.InventoryConsumablesHeader"),items:[]},treasure:{label:game.i18n.localize("PF2E.InventoryTreasureHeader"),items:[]},backpack:{label:game.i18n.localize("PF2E.InventoryBackpackHeader"),items:[]}},bulkConfig={ignoreCoinBulk:game.settings.get("pf2e","ignoreCoinBulk")},bulkItems=(0,bulk_1.itemsFromActorData)(actorData),bulkItemsById=(0,bulk_1.indexBulkItemsById)(bulkItems),containers=(0,helpers_1.getContainerMap)({items:actorData.items.filter((itemData=>itemData.isPhysical)),bulkItemsById,bulkConfig}),itemsData=actorData.items.filter((itemData=>(0,helpers_2.isPhysicalData)(itemData)));for(const itemData of itemsData){itemData.showEdit=game.user.isGM||itemData.isIdentified&&this.actor.isOwner,null!==(_a=itemData.img)&&void 0!==_a||(itemData.img=CONST.DEFAULT_TOKEN);const containerData=containers.get(itemData._id);if(!containerData)continue;itemData.containerData=containerData,itemData.showEdit=game.user.isGM||itemData.isIdentified&&this.actor.isOwner,itemData.isInContainer=containerData.isInContainer,itemData.isSellableTreasure=itemData.showEdit&&"treasure"===itemData.type&&"coins"!==itemData.data.stackGroup.value,itemData.canBeEquipped=!1,itemData.data.quantity.value=itemData.data.quantity.value||0,itemData.data.weight.value=itemData.data.weight.value||0;const bulkItem=bulkItemsById.get(itemData._id),[approximatedBulk]=(0,bulk_1.calculateBulk)({items:void 0===bulkItem?[]:[bulkItem],bulkConfig});itemData.totalWeight=(0,bulk_1.formatBulk)(approximatedBulk),"book"===itemData.type?inventory.equipment.items.push(itemData):inventory[itemData.type].items.push(itemData)}actorData.inventory=inventory}distributeCoins(event){event.preventDefault(),new distribute_coins_popup_1.DistributeCoinsPopup(this.actor,{}).render(!0)}lootNPCs(event){event.preventDefault(),canvas.tokens.controlled.some((token=>{var _a;return(null===(_a=token.actor)||void 0===_a?void 0:_a.id)!==this.actor.id}))?new loot_npcs_popup_1.LootNPCsPopup(this.actor).render(!0):ui.notifications.warn("No tokens selected.")}async _onDropItem(event,itemData){return this.actor.id!==itemData.actorId||this.actor.testUserPermission(game.user,"OWNER")?super._onDropItem(event,itemData):[]}}exports.LootSheetPF2e=LootSheetPF2e},20744:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NPCData=void 0;const data_1=__webpack_require__(73204);class NPCData extends data_1.BaseCreatureData{}exports.NPCData=NPCData,NPCData.DEFAULT_ICON="systems/pf2e/icons/default-icons/npc.svg"},78382:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.NPCPF2e=void 0;const values_1=__webpack_require__(35089),_item_1=__webpack_require__(10843),modifiers_1=__webpack_require__(27324),weapon_1=__webpack_require__(11678),rolls_1=__webpack_require__(87525),notes_1=__webpack_require__(46379),_actor_1=__webpack_require__(85530),_util_1=__webpack_require__(6945),data_1=__webpack_require__(20744),data_2=__webpack_require__(73204),localize_1=__webpack_require__(41332);class NPCPF2e extends _actor_1.CreaturePF2e{static get schema(){return data_1.NPCData}get rarity(){return this.data.data.traits.rarity.value}get isElite(){return this.traits.has("elite")}get isWeak(){return this.traits.has("weak")}get visionLevel(){return data_2.VisionLevels.NORMAL}canUserModify(user,action){return"update"===action&&this.isLootable?this.permission>=CONST.ENTITY_PERMISSIONS.LIMITED:super.canUserModify(user,action)}get visible(){return this.permission>=CONST.ENTITY_PERMISSIONS.OBSERVER}get isLootable(){const npcsAreLootable=game.settings.get("pf2e","automation.lootableNPCs");return this.isDead&&(npcsAreLootable||this.getFlag("pf2e","lootable"))}get permission(){return game.user.isGM||!this.isLootable?super.permission:Math.max(super.permission,1)}testUserPermission(user,permission,options){return game.user.isGM||!this.isLootable?super.testUserPermission(user,permission,options):[1,"LIMITED"].includes(permission)&&!options?this.permission>=CONST.ENTITY_PERMISSIONS.LIMITED:super.testUserPermission(user,permission,options)}prepareBaseData(){super.prepareBaseData();const systemData=this.data.data;for(const key of values_1.SAVE_TYPES)systemData.saves[key].ability=CONFIG.PF2E.savingThrowDefaultAbilities[key];systemData.attributes.perception.ability="wis",systemData.attributes.dexCap=[{value:1/0,source:""}]}prepareDerivedData(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t;super.prepareDerivedData();const{data}=this.data,traits=this.data.data.traits,customTraits=traits.traits.custom.split(/\s*[,;|]\s*/).filter((trait=>trait)),traitSet=new Set(traits.traits.value.concat(customTraits));traits.traits.value=Array.from(traitSet).sort();const rules=this.rules.filter((rule=>!rule.ignored)),synthetics=this.prepareCustomModifiers(rules),{damageDice,statisticsModifiers,strikes,rollNotes}=synthetics,{details}=this.data.data;this.isElite?(statisticsModifiers.all=null!==(_a=statisticsModifiers.all)&&void 0!==_a?_a:[],statisticsModifiers.all.push(new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.EliteLabel",2,modifiers_1.MODIFIER_TYPE.UNTYPED)),statisticsModifiers.damage=null!==(_b=statisticsModifiers.damage)&&void 0!==_b?_b:[],statisticsModifiers.damage.push(new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.EliteLabel",2,modifiers_1.MODIFIER_TYPE.UNTYPED)),statisticsModifiers.hp=null!==(_c=statisticsModifiers.hp)&&void 0!==_c?_c:[],statisticsModifiers.hp.push(new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.EliteLabel",this.getHpAdjustment(details.level.value,"elite"),modifiers_1.MODIFIER_TYPE.UNTYPED)),details.level={base:details.level.value,value:details.level.value+1}):this.isWeak?(statisticsModifiers.all=null!==(_d=statisticsModifiers.all)&&void 0!==_d?_d:[],statisticsModifiers.all.push(new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.WeakLabel",-2,modifiers_1.MODIFIER_TYPE.UNTYPED)),statisticsModifiers.damage=null!==(_e=statisticsModifiers.damage)&&void 0!==_e?_e:[],statisticsModifiers.damage.push(new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.WeakLabel",-2,modifiers_1.MODIFIER_TYPE.UNTYPED)),statisticsModifiers.hp=null!==(_f=statisticsModifiers.hp)&&void 0!==_f?_f:[],statisticsModifiers.hp.push(new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.WeakLabel",-1*this.getHpAdjustment(details.level.value,"weak"),modifiers_1.MODIFIER_TYPE.UNTYPED)),details.level={base:details.level.value,value:details.level.value-1}):details.level.base=details.level.value;for(const ability of Object.values(this.data.data.abilities))ability.mod=Number(ability.mod)||0,ability.value=2*ability.mod+10;{const base=data.attributes.hp.max,modifiers=[];(statisticsModifiers.hp||[]).map((m=>m.clone())).forEach((m=>{m.ignored=!m.predicate.test(["hp"]),modifiers.push(m)})),(statisticsModifiers["hp-per-level"]||[]).map((m=>m.clone())).forEach((m=>{m.modifier*=data.details.level.value,m.ignored=!m.predicate.test(["hp-per-level"]),modifiers.push(m)}));const hpData=duplicate(data.attributes.hp);delete hpData.modifiers;const stat=mergeObject(new modifiers_1.StatisticModifier("hp",modifiers),hpData,{overwrite:!1});stat.base=base,stat.max=stat.max+stat.totalModifier,stat.value=Math.min(stat.value,stat.max),stat.breakdown=[game.i18n.format("PF2E.MaxHitPointsBaseLabel",{base}),...stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))].join(", "),data.attributes.hp=stat}data.attributes.speed=this.prepareSpeed("land",synthetics);const{otherSpeeds}=data.attributes.speed;for(let idx=0;idx<otherSpeeds.length;idx++)otherSpeeds[idx]=this.prepareSpeed(otherSpeeds[idx].type,synthetics);{const base=data.attributes.ac.value,dexterity=Math.min(data.abilities.dex.mod,...data.attributes.dexCap.map((cap=>cap.value))),rollOptions=["ac","dex-based","all"],modifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",base-10-dexterity,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities.dex,dexterity,modifiers_1.MODIFIER_TYPE.ABILITY),...rollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((m=>m.clone({test:this.getRollOptions(rollOptions)})))],stat=mergeObject(new modifiers_1.StatisticModifier("ac",modifiers),data.attributes.ac,{overwrite:!1});stat.base=base,stat.value=10+stat.totalModifier,stat.breakdown=[game.i18n.localize("PF2E.ArmorClassBase")].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),data.attributes.ac=stat}{const shield=null===(_g=this.heldShield)||void 0===_g?void 0:_g.data;if(shield){const isBroken=shield.data.hp.value<=shield.data.brokenThreshold.value,shieldData={value:shield.data.hp.value,max:shield.data.maxHp.value,ac:isBroken?0:shield.data.armor.value,hardness:shield.data.hardness.value,brokenThreshold:shield.data.brokenThreshold.value};data.attributes.shield=shieldData}else if(data.attributes.shield.max){Number(data.attributes.shield.value)<=Number(data.attributes.shield.brokenThreshold)&&(data.attributes.shield.ac=0)}else{const shieldData={value:0,max:0,ac:0,hardness:0,brokenThreshold:0};data.attributes.shield=shieldData}}for(const saveName of values_1.SAVE_TYPES){const save=data.saves[saveName],base=save.value,ability=save.ability,rollOptions=[saveName,`${ability}-based`,"saving-throw","all"],modifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",base-data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities[ability],data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.ABILITY),...rollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((m=>m.clone({test:this.getRollOptions(rollOptions)})))],stat=mergeObject(new modifiers_1.StatisticModifier(saveName,modifiers),save,{overwrite:!1});stat.base=base,stat.notes=rollOptions.flatMap((key=>{var _a;return duplicate(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[])})),stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=args=>{const label=game.i18n.format("PF2E.SavingThrowWithName",{saveName:game.i18n.localize(CONFIG.PF2E.saves[saveName])});rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"saving-throw",options:args.options,dc:args.dc,notes:stat.notes},args.event,args.callback)},data.saves[saveName]=stat}{const base=data.attributes.perception.value,rollOptions=["perception","wis-based","all"],modifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",base-data.abilities.wis.mod,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities.wis,data.abilities.wis.mod,modifiers_1.MODIFIER_TYPE.ABILITY),...rollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((m=>m.clone({test:this.getRollOptions(rollOptions)})))],stat=mergeObject(new modifiers_1.StatisticModifier("perception",modifiers),data.attributes.perception,{overwrite:!1});stat.base=base,stat.notes=rollOptions.flatMap((key=>{var _a;return duplicate(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[])})),stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=args=>{const label=game.i18n.localize("PF2E.PerceptionCheck");rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"perception-check",options:args.options,dc:args.dc,notes:stat.notes},args.event,args.callback)},data.attributes.perception=stat}data.skills={};for(const[skill,{ability,shortform}]of Object.entries(values_1.SKILL_EXPANDED)){const rollOptions=[skill,`${ability}-based`,"skill-check","all"],modifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",0,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities[ability],data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.ABILITY),...rollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((m=>m.clone({test:this.getRollOptions(rollOptions)})))],notes=rollOptions.flatMap((key=>{var _a;return duplicate(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[])})),name=game.i18n.localize(`PF2E.Skill${values_1.SKILL_DICTIONARY[shortform].capitalize()}`),stat=mergeObject(new modifiers_1.StatisticModifier(name,modifiers),{ability,expanded:skill,label:name,value:0,visible:!1,roll:args=>{const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:name});rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"skill-check",options:args.options,dc:args.dc,notes},args.event,args.callback)},lore:!1},{overwrite:!1});stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),data.skills[shortform]=stat}data.actions=[];const generatedMelee=strikes.map((weapon=>weapon.toNPCAttack())),items=this.items.contents.concat(generatedMelee);for(const item of items){const itemData=item.data;if("lore"===itemData.type){const skill=itemData.name.slugify(),{ability,shortform}=null!==(_h=values_1.SKILL_EXPANDED[skill])&&void 0!==_h?_h:{ability:"int",shortform:skill},base=itemData.data.mod.value,mod=data.abilities[ability].mod,modifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",base-mod,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities[ability],mod,modifiers_1.MODIFIER_TYPE.ABILITY)],rollOptions=[skill,`${ability}-based`,"skill-check","all"];modifiers.push(...rollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((m=>m.clone({test:this.getRollOptions(rollOptions)}))));const stat=mergeObject(new modifiers_1.StatisticModifier(itemData.name,modifiers),data.skills[shortform],{overwrite:!1});stat.notes=rollOptions.flatMap((key=>{var _a;return duplicate(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[])})),stat.itemID=itemData._id,stat.base=base,stat.expanded=skill,stat.label=itemData.name,stat.lore=!values_1.SKILL_EXPANDED[skill],stat.rank=1,stat.value=stat.totalModifier,stat.visible=!0,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=args=>{const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:itemData.name});rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"skill-check",options:args.options,dc:args.dc,notes:stat.notes},args.event,args.callback)};const variants=itemData.data.variants;if(variants&&Object.keys(variants).length){stat.variants=[];for(const[,variant]of Object.entries(variants))stat.variants.push(variant)}data.skills[shortform]=stat}else if("melee"===itemData.type){const modifiers=[],notes=[],traits=itemData.data.traits.value;let ability;{ability="ranged"===(null===(_j=itemData.data.weaponType)||void 0===_j?void 0:_j.value)?"dex":"str";const bonus=Number(null===(_k=itemData.data.bonus)||void 0===_k?void 0:_k.value)||0;traits.includes("finesse")?ability="dex":traits.includes("brutal")&&(ability="str");const mod=data.abilities[ability].mod;modifiers.push(new modifiers_1.ModifierPF2e("PF2E.BaseModifier",bonus-mod,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities[ability],mod,modifiers_1.MODIFIER_TYPE.ABILITY))}{const stats=[];stats.push(`${itemData.name.replace(/\s+/g,"-").toLowerCase()}-attack`);const rollOptions=stats.concat(["attack","mundane-attack",`${ability}-attack`,`${ability}-based`,`${itemData._id}-attack`,"attack-roll","all"]);modifiers.push(...rollOptions.flatMap((key=>statisticsModifiers[key]||[])).map((m=>m.clone({test:this.getRollOptions(rollOptions)})))),notes.push(...rollOptions.flatMap((key=>{var _a;return duplicate(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[])})))}const{imageUrl,actionGlyph}=_actor_1.ActorPF2e.getActionGraphics("action",1),action=mergeObject(new modifiers_1.StatisticModifier(itemData.name,modifiers),{type:"strike",glyph:actionGlyph});Object.defineProperty(action,"origin",{get:()=>this.items.get(item.id)}),action.imageUrl=imageUrl,action.sourceId=itemData._id,action.description=itemData.data.description.value||"",action.attackRollType="ranged"===(null===(_l=itemData.data.weaponType)||void 0===_l?void 0:_l.value)?"PF2E.NPCAttackRanged":"PF2E.NPCAttackMelee",action.breakdown=action.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", ");const attackTrait={name:"attack",label:CONFIG.PF2E.featTraits.attack,description:CONFIG.PF2E.traitsDescriptions.attack,toggle:!1};action.traits=[attackTrait].concat(traits.map((trait=>{var _a;return{name:trait,label:null!==(_a=CONFIG.PF2E.npcAttackTraits[trait])&&void 0!==_a?_a:trait,description:CONFIG.PF2E.traitsDescriptions[trait],toggle:!1}})));const attackEffects=CONFIG.PF2E.attackEffects;action.additionalEffects=itemData.data.attackEffects.value.map((tag=>{var _a,_b,_c;const label=null!==(_c=null!==(_a=attackEffects[tag])&&void 0!==_a?_a:null===(_b=this.items.find((item=>{var _a;return(null!==(_a=item.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(item.name))===tag})))||void 0===_b?void 0:_b.name)&&void 0!==_c?_c:tag;return{tag,label}})),"PF2E.NPCAttackRanged"!==action.attackRollType||action.traits.some((trait=>"range"===trait.name))||action.traits.splice(1,0,{name:"range",label:game.i18n.localize("PF2E.TraitRange"),toggle:!1}),action.damageBreakdown=Object.values(itemData.data.damageRolls).flatMap((roll=>{const damageType=game.i18n.localize(CONFIG.PF2E.damageTypes[roll.damageType]);return[`${roll.damage} ${damageType}`]})),action.damageBreakdown.length>0&&(this.isElite?action.damageBreakdown[0]=action.damageBreakdown[0]+` +2 ${game.i18n.localize("PF2E.NPC.Adjustment.EliteLabel")}`:this.isWeak&&(action.damageBreakdown[0]=action.damageBreakdown[0]+` -2 ${game.i18n.localize("PF2E.NPC.Adjustment.WeakLabel")}`));const strikeLabel=game.i18n.localize("PF2E.WeaponStrikeLabel"),meleeItem=this.items.get(itemData._id);action.attack=async args=>{var _a,_b;const attackEffects=await this.getAttackEffects(itemData),rollNotes=notes.concat(attackEffects),ctx=this.createAttackRollContext({traits}),options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(ctx.options).concat(itemData.data.traits.value);rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(`${strikeLabel}: ${action.name}`,action),{actor:this,item:meleeItem,type:"attack-roll",options,notes:rollNotes,dc:null!==(_b=args.dc)&&void 0!==_b?_b:ctx.dc,traits:action.traits},args.event)},action.roll=action.attack;const map=_item_1.ItemPF2e.calculateMap(itemData);action.variants=[{label:`${strikeLabel} ${action.totalModifier<0?"":"+"}${action.totalModifier}`,roll:async args=>{var _a,_b;const attackEffects=await this.getAttackEffects(itemData),rollNotes=notes.concat(attackEffects),ctx=this.createAttackRollContext({traits}),options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(ctx.options).concat(itemData.data.traits.value);rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(`Strike: ${action.name}`,action),{actor:this,item:meleeItem,type:"attack-roll",options,notes:rollNotes,dc:null!==(_b=args.dc)&&void 0!==_b?_b:ctx.dc,traits:action.traits},args.event)}},{label:`MAP ${map.map2}`,roll:async args=>{var _a,_b;const attackEffects=await this.getAttackEffects(itemData),rollNotes=notes.concat(attackEffects),ctx=this.createAttackRollContext({traits}),options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(ctx.options).concat(itemData.data.traits.value);rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(`Strike: ${action.name}`,action,[new modifiers_1.ModifierPF2e("PF2E.MultipleAttackPenalty",map.map2,modifiers_1.MODIFIER_TYPE.UNTYPED)]),{actor:this,item:meleeItem,type:"attack-roll",options,notes:rollNotes,dc:null!==(_b=args.dc)&&void 0!==_b?_b:ctx.dc,traits:action.traits},args.event)}},{label:`MAP ${map.map3}`,roll:async args=>{var _a,_b;const attackEffects=await this.getAttackEffects(itemData),rollNotes=notes.concat(attackEffects),ctx=this.createAttackRollContext({traits}),options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(ctx.options).concat(itemData.data.traits.value);rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(`Strike: ${action.name}`,action,[new modifiers_1.ModifierPF2e("PF2E.MultipleAttackPenalty",map.map3,modifiers_1.MODIFIER_TYPE.UNTYPED)]),{actor:this,item:meleeItem,type:"attack-roll",options,notes:rollNotes,dc:null!==(_b=args.dc)&&void 0!==_b?_b:ctx.dc,traits:action.traits},args.event)}}],action.damage=args=>{var _a;const ctx=this.createDamageRollContext(args.event),options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(ctx.options).concat(itemData.data.traits.value),clonedModifiers=Object.fromEntries(Object.entries(statisticsModifiers).map((([key,modifiers])=>[key,modifiers.map((modifier=>modifier.clone()))]))),damage=weapon_1.WeaponDamagePF2e.calculateStrikeNPC(itemData,this,action.traits,clonedModifiers,damageDice,1,options,rollNotes);rolls_1.DamageRollPF2e.roll(damage,{type:"damage-roll",item:meleeItem,actor:this,outcome:"success",options},args.event,args.callback)},action.critical=args=>{var _a;const ctx=this.createDamageRollContext(args.event),options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(ctx.options).concat(itemData.data.traits.value),clonedModifiers=Object.fromEntries(Object.entries(statisticsModifiers).map((([key,modifiers])=>[key,modifiers.map((modifier=>modifier.clone()))]))),damage=weapon_1.WeaponDamagePF2e.calculateStrikeNPC(itemData,this,action.traits,clonedModifiers,damageDice,1,options,rollNotes);rolls_1.DamageRollPF2e.roll(damage,{type:"damage-roll",item:meleeItem,actor:this,outcome:"criticalSuccess",options},args.event,args.callback)},data.actions.push(action)}else if("spellcastingEntry"===itemData.type){const tradition=itemData.data.tradition.value,ability=itemData.data.ability.value||"int",abilityMod=data.abilities[ability].mod;itemData.data.spelldc.dc=Number(itemData.data.spelldc.dc),itemData.data.spelldc.value=Number(itemData.data.spelldc.value);const baseRollOptions=[`${ability}-based`,"all","spell-attack-dc"],baseNotes=baseRollOptions.flatMap((option=>{var _a;return duplicate(null!==(_a=rollNotes[option])&&void 0!==_a?_a:[])})),baseModifiers=[new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities[ability],abilityMod,modifiers_1.MODIFIER_TYPE.ABILITY),...baseRollOptions.flatMap((key=>statisticsModifiers[key]||[]))],baseMod=Number(null!==(_p=null===(_o=null===(_m=itemData.data)||void 0===_m?void 0:_m.spelldc)||void 0===_o?void 0:_o.value)&&void 0!==_p?_p:0),attackRollOptions=[`${tradition}-spell-attack`,"spell-attack","attack","attack-roll"],attackNotes=attackRollOptions.flatMap((option=>{var _a;return duplicate(null!==(_a=rollNotes[option])&&void 0!==_a?_a:[])})),attackModifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",baseMod-abilityMod,modifiers_1.MODIFIER_TYPE.UNTYPED),...baseModifiers,...attackRollOptions.flatMap((key=>statisticsModifiers[key]||[]))].map((modifier=>modifier.clone({test:this.getRollOptions(attackRollOptions)}))),baseDC=Number(null!==(_s=null===(_r=null===(_q=itemData.data)||void 0===_q?void 0:_q.spelldc)||void 0===_r?void 0:_r.dc)&&void 0!==_s?_s:0),saveRollOptions=[`${tradition}-spell-dc`,"spell-dc"],saveModifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",baseDC-10-abilityMod,modifiers_1.MODIFIER_TYPE.UNTYPED),...baseModifiers,...saveRollOptions.flatMap((key=>statisticsModifiers[key]||[]))].map((modifier=>modifier.clone({test:this.getRollOptions(saveRollOptions)})));itemData.data.statisticData={name:game.i18n.format(`PF2E.SpellAttack.${tradition}`),notes:[...baseNotes,...attackNotes],check:{type:"spell-attack-roll",modifiers:attackModifiers},dc:{modifiers:saveModifiers}},this.isElite?(itemData.data.spelldc.dc+=2,itemData.data.spelldc.value+=2):this.isWeak&&(itemData.data.spelldc.dc-=2,itemData.data.spelldc.value-=2)}}this.prepareInitiative(statisticsModifiers,rollNotes);for(const rule of this.rules)try{null===(_t=rule.onAfterPrepareData)||void 0===_t||_t.call(rule,synthetics)}catch(error){console.error(`PF2e | Failed to execute onAfterPrepareData on rule element ${rule}.`,error)}}async updateTokenAttitude(attitude){var e_1,_a;const disposition=NPCPF2e.mapNPCAttitudeToTokenDisposition(attitude),tokenDocuments=this.getActiveTokens().map((token=>token.document));try{for(var tokenDocuments_1_1,tokenDocuments_1=__asyncValues(tokenDocuments);!(tokenDocuments_1_1=await tokenDocuments_1.next()).done;){const tokenDoc=tokenDocuments_1_1.value;await tokenDoc.update({disposition})}}catch(e_1_1){e_1={error:e_1_1}}finally{try{tokenDocuments_1_1&&!tokenDocuments_1_1.done&&(_a=tokenDocuments_1.return)&&await _a.call(tokenDocuments_1)}finally{if(e_1)throw e_1.error}}}static mapNPCAttitudeToTokenDisposition(attitude){return null===attitude||"hostile"===attitude?CONST.TOKEN_DISPOSITIONS.HOSTILE:"unfriendly"===attitude||"indifferent"===attitude?CONST.TOKEN_DISPOSITIONS.NEUTRAL:CONST.TOKEN_DISPOSITIONS.FRIENDLY}static mapTokenDispositionToNPCAttitude(disposition){return disposition===CONST.TOKEN_DISPOSITIONS.FRIENDLY?"friendly":disposition===CONST.TOKEN_DISPOSITIONS.NEUTRAL?"indifferent":"hostile"}async getAttackEffects(sourceItemData){const notes=[],description=sourceItemData.data.description.value;description&&notes.push(new notes_1.RollNotePF2e("all",`<div style="display: inline-block; font-weight: normal; line-height: 1.3em;" data-visibility="gm">${description}</div>`));const formatItemName=item=>item instanceof _item_1.ConsumablePF2e?`${item.name} - ${localize_1.LocalizePF2e.translations.ITEM.TypeConsumable} (${item.data.data.quantity.value}) <button type="button" style="width: auto; line-height: 14px;" data-action="consume" data-item="${item.id}">${localize_1.LocalizePF2e.translations.PF2E.ConsumableUseLabel}</button>`:item.name,formatNoteText=(itemName,description)=>`<div style="display: inline-block; font-weight: normal; line-height: 1.3em;" data-visibility="gm"><div><strong>${itemName}</strong></div>${description}</div>`;for(const attackEffect of sourceItemData.data.attackEffects.value){const item=this.items.find((item=>{var _a;return"melee"!==item.type&&(null!==(_a=item.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(item.name))===(0,_util_1.sluggify)(attackEffect)})),note=new notes_1.RollNotePF2e("all","");if(item)note.text=formatNoteText(formatItemName(item),item.description),notes.push(note);else{const compendium=game.packs.get("pf2e.bestiary-ability-glossary-srd",{strict:!0}),packItem=(await compendium.getDocuments({"data.slug":{$in:[attackEffect]}}))[0];packItem instanceof _item_1.ItemPF2e&&(note.text=formatNoteText(formatItemName(packItem),packItem.description),notes.push(note))}}return notes}getHpAdjustment(level,adjustment){if("elite"===adjustment){if(level>=20)return 30;if(level<=19&&level>=5)return 20;if(level<=4&&level>=2)return 15;if(level<=1)return 10}else if("weak"===adjustment){if(level>=21)return 30;if(level<=20&&level>=6)return 20;if(level<=5&&level>=3)return 15;if(1===level||2===level)return 10}return 0}_onUpdate(changed,options,userId){var _a,_b,_c,_d;super._onUpdate(changed,options,userId);const attitude=null===(_d=null===(_c=null===(_b=null===(_a=changed)||void 0===_a?void 0:_a.data)||void 0===_b?void 0:_b.traits)||void 0===_c?void 0:_c.attitude)||void 0===_d?void 0:_d.value;attitude&&userId===game.userId&&this.updateTokenAttitude(attitude)}async applyAdjustment(adjustment){if(this.isElite&&"elite"===adjustment||this.isWeak&&"weak"===adjustment||!this.isElite&&!this.isWeak&&"normal"===adjustment)return;const currentHPAdjustment=(()=>this.isElite?this.getHpAdjustment(this.getBaseLevel(),"elite"):this.isWeak?this.getHpAdjustment(this.getBaseLevel(),"weak"):0)(),newHPAdjustment=this.getHpAdjustment(this.getBaseLevel(),adjustment),currentHP=this.data.data.attributes.hp.value,maxHP=this.data.data.attributes.hp.max,newHP=(()=>{if(this.isElite){if("weak"===adjustment)return currentHP-currentHPAdjustment-newHPAdjustment;if("normal"===adjustment)return currentHP-currentHPAdjustment}else if(this.isWeak){if("elite"===adjustment)return this.data.data.attributes.hp.max=maxHP+currentHPAdjustment+newHPAdjustment,currentHP+currentHPAdjustment+newHPAdjustment;if("normal"===adjustment)return this.data.data.attributes.hp.max=maxHP+currentHPAdjustment,currentHP+currentHPAdjustment}else{if("elite"===adjustment)return this.data.data.attributes.hp.max=currentHP+newHPAdjustment,currentHP+newHPAdjustment;if("weak"===adjustment)return currentHP-newHPAdjustment}return currentHP})(),toAdd="normal"===adjustment?[]:[adjustment],toRemove="weak"===adjustment?["elite"]:"elite"===adjustment?["weak"]:["elite","weak"],newTraits=this.toObject().data.traits.traits.value.filter((trait=>!toRemove.includes(trait))).concat(toAdd);await this.update({"data.attributes.hp.value":Math.max(0,newHP),"data.traits.traits.value":newTraits})}getBaseLevel(){return this.isElite?this.level-1:this.isWeak?this.level+1:this.level}updateAttitudeFromDisposition(disposition){this.data.data.traits.attitude.value=NPCPF2e.mapTokenDispositionToNPCAttitude(disposition)}}exports.NPCPF2e=NPCPF2e},22123:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NPCLegacyEditSheetPF2e=void 0;const sheet_1=__webpack_require__(83936),values_1=__webpack_require__(35089),_1=__webpack_require__(78382),recall_knowledge_1=__webpack_require__(25306),recall_knowledge_popup_1=__webpack_require__(75242),_util_1=__webpack_require__(6945),_item_1=__webpack_require__(10843);class NPCLegacyEditSheetPF2e extends sheet_1.CreatureSheetPF2e{static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:options.classes.concat("npc-sheet"),width:650,height:680,showUnpreparedSpells:!0}),options}get template(){return"systems/pf2e/templates/actors/npc-sheet.html"}getData(){const sheetData=super.getData();sheetData.monsterTraits=CONFIG.PF2E.monsterTraits;const proficiencyWithoutLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant"),identifyCreatureData=(0,recall_knowledge_1.identifyCreature)(sheetData,{proficiencyWithoutLevel});return sheetData.identifyCreatureData=identifyCreatureData,sheetData.identifySkillDC=identifyCreatureData.skill.dc,sheetData.identifySkillAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.skill.start],sheetData.identifySkillProgression=identifyCreatureData.skill.progression.join("/"),sheetData.identificationSkills=Array.from(identifyCreatureData.skills).sort().map((skillAcronym=>CONFIG.PF2E.skills[skillAcronym])),sheetData.specificLoreDC=identifyCreatureData.specificLoreDC.dc,sheetData.specificLoreAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.specificLoreDC.start],sheetData.specificLoreProgression=identifyCreatureData.specificLoreDC.progression.join("/"),sheetData.unspecificLoreDC=identifyCreatureData.unspecificLoreDC.dc,sheetData.unspecificLoreAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.unspecificLoreDC.start],sheetData.unspecificLoreProgression=identifyCreatureData.unspecificLoreDC.progression.join("/"),this.prepareSpellcasting(sheetData),sheetData}prepareItems(sheetData){var _a,_b;const actorData=sheetData.actor,attacks={melee:{label:"NPC Melee Attack",prefix:"PF2E.NPCAttackMelee",items:[],type:"melee"},ranged:{label:"NPC Ranged Attack",prefix:"PF2E.NPCAttackRanged",items:[],type:"melee"}},actions={action:{label:"Actions",actions:[]},reaction:{label:"Reactions",actions:[]},free:{label:"Free Actions",actions:[]},passive:{label:"Passive Actions",actions:[]}},lores=[],weaponTraits=CONFIG.PF2E.weaponTraits,traitDescriptions=CONFIG.PF2E.traitsDescriptions;for(const itemData of actorData.items)if("weapon"===itemData.type);else if("melee"===itemData.type){const weaponType=(itemData.data.weaponType||{}).value||"melee",isAgile=(itemData.data.traits.value||[]).includes("agile");itemData.data.bonus.total=parseInt(itemData.data.bonus.value,10)||0,itemData.data.isAgile=isAgile;const traits=[];if(0!==(itemData.data.traits.value||[]).length)for(let j=0;j<itemData.data.traits.value.length;j++){const trait=itemData.data.traits.value[j],traitsObject={label:null!==(_a=weaponTraits[trait])&&void 0!==_a?_a:trait.charAt(0).toUpperCase()+trait.slice(1),description:null!==(_b=traitDescriptions[trait])&&void 0!==_b?_b:""};traits.push(traitsObject)}itemData.traits=traits.filter((p=>!!p)),attacks[weaponType].items.push(itemData)}else if("action"===itemData.type){const actionType=itemData.data.actionType.value||"action";itemData.img=_1.NPCPF2e.getActionGraphics(actionType,parseInt((itemData.data.actions||{}).value,10)||1).imageUrl;const traits=[];if(0!==(itemData.data.traits.value||[]).length)for(let j=0;j<itemData.data.traits.value.length;j++){const trait=itemData.data.traits.value[j],traitsObject={label:weaponTraits[trait]||trait.charAt(0).toUpperCase()+trait.slice(1),description:traitDescriptions[trait]||""};traits.push(traitsObject)}actionType&&traits.push({label:weaponTraits[actionType]||actionType.charAt(0).toUpperCase()+actionType.slice(1),description:traitDescriptions[actionType]||""}),itemData.traits=traits.filter((p=>!!p)),actions[actionType].actions.push(itemData)}else if("feat"===itemData.type){const actionType=itemData.data.actionType.value||"passive";Object.keys(actions).includes(actionType)&&(itemData.feat=!0,itemData.img=_1.NPCPF2e.getActionGraphics(actionType,parseInt((itemData.data.actions||{}).value,10)||1).imageUrl,actions[actionType].actions.push(itemData))}else"lore"===itemData.type&&lores.push(itemData);const embeddedEntityUpdate=[];embeddedEntityUpdate.length&&(console.log("PF2e System | Prepare Actor Data | Updating location for the following embedded entities: ",embeddedEntityUpdate),this.actor.updateEmbeddedDocuments("Item",embeddedEntityUpdate),ui.notifications.info("PF2e actor data migration for orphaned spells applied. Please close actor and open again for changes to take affect.")),actorData.actions=actions,actorData.attacks=attacks,actorData.lores=lores}prepareSpellcasting(sheetData){const spellcastingEntries=[];for(const i of sheetData.items)if("spellcastingEntry"===i.type){const entry=this.actor.spellcasting.get(i._id);if(!entry)continue;const data=entry.getSpellData();for(const level of data.levels)for(const active of level.active){if(!active)continue;const spellType=active.spell.data.data.time.value;active.chatData.img=(0,_util_1.getActionIcon)(spellType,active.spell.img)}spellcastingEntries.push(mergeObject(i,data))}sheetData.spellcastingEntries=spellcastingEntries,sheetData.actor.spellcastingEntries=spellcastingEntries}activateListeners(html){super.activateListeners(html),html.find("button:not(.recall-knowledge-breakdown)").on("click",(event=>{var _a;event.preventDefault(),event.stopPropagation();const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId);if(!item)return;const spell=item instanceof _item_1.SpellPF2e?item:item instanceof _item_1.ConsumablePF2e?item.embeddedSpell:null;switch(event.target.dataset.action){case"legacy-attack":item.rollNPCAttack(event);break;case"legacy-attack-2":item.rollNPCAttack(event,2);break;case"legacy-attack-3":item.rollNPCAttack(event,3);break;case"legacy-damage":item.rollNPCDamage(event);break;case"legacy-critical":item.rollNPCDamage(event,!0);break;case"spellAttack":null==spell||spell.rollAttack(event);break;case"spellDamage":null==spell||spell.rollDamage(event);break;case"consume":item instanceof _item_1.ConsumablePF2e&&item.consume();break;default:throw new Error("Unknown action type")}})),this.options.editable&&(html.find(".rollable[data-skill]").on("click",(event=>{var _a,_b,_c;const $target=$(event.delegateTarget),shortform=null!==(_a=$target.attr("data-skill"))&&void 0!==_a?_a:"";if(!(0,_util_1.objectHasKey)(values_1.SKILL_DICTIONARY,shortform))return;const opts=this.actor.getRollOptions(["all","skill-check",null!==(_b=values_1.SKILL_DICTIONARY[shortform])&&void 0!==_b?_b:shortform]),extraOptions=$target.attr("data-options");if(extraOptions){const split=extraOptions.split(",").map((o=>o.trim())).filter((o=>!!o));opts.push(...split)}null===(_c=this.actor.data.data.skills[shortform])||void 0===_c||_c.roll({event,options:opts})})),html.find(".skill-input").on("change",(async event=>{var _a;const itemId=null!==(_a=$(event.target).attr("data-item-id"))&&void 0!==_a?_a:"";await this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,"data.mod.value":Number(event.target.value)}])})),html.find(".spelldc-input").on("change",(async event=>{var _a,_b;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_a?_a:"",spelldcType=null!==(_b=$(event.currentTarget).parents(".npc-defense").attr("data-spelldc-attribute"))&&void 0!==_b?_b:"";["dc","value"].includes(spelldcType)?await this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,[`data.spelldc.${spelldcType}`]:Number(event.target.value)}]):"ability"===spelldcType&&await this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,"data.ability.value":event.target.value}])})),html.find(".recall-knowledge-breakdown").on("click",(async event=>{event.preventDefault();const{identifyCreatureData}=await this.getData();new recall_knowledge_popup_1.RecallKnowledgePopup({},identifyCreatureData).render(!0)})))}}exports.NPCLegacyEditSheetPF2e=NPCLegacyEditSheetPF2e},55820:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NPCLegacySheetPF2e=void 0;const legacy_edit_sheet_1=__webpack_require__(22123),dice_1=__webpack_require__(18235),base_1=__webpack_require__(65532),sheet_1=__webpack_require__(89536),action_1=__webpack_require__(93390),melee_1=__webpack_require__(17923);class NPCLegacySheetPF2e extends legacy_edit_sheet_1.NPCLegacyEditSheetPF2e{get template(){if(this.isLootSheet)return"systems/pf2e/templates/actors/npc/loot-sheet.html";const path="systems/pf2e/templates/actors/";return this.actor.getFlag("pf2e","editNPC.value")?`${path}npc-sheet.html`:`${path}npc-sheet-no-edit.html`}static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:options.classes.concat("updatedNPCSheet"),width:650,height:680,showUnpreparedSpells:!0}),options}get title(){var _a,_b;if(this.isLootSheet){return`${null!==(_b=null===(_a=this.token)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:this.actor.name} [${game.i18n.localize("PF2E.NPC.Dead")}]`}return super.title}async getData(){var _a,_b,_c;const sheetData=await super.getData();if(this.isLootSheet)return this.getLootData(sheetData);sheetData.flags=sheetData.actor.flags,void 0===sheetData.flags.pf2e_updatednpcsheet&&(sheetData.flags.pf2e_updatednpcsheet={}),void 0===sheetData.flags.pf2e_updatednpcsheet.editNPC&&(sheetData.flags.pf2e_updatednpcsheet.editNPC={value:!1}),void 0===sheetData.flags.pf2e_updatednpcsheet.allSaveDetail&&(sheetData.flags.pf2e_updatednpcsheet.allSaveDetail={value:""});const{isElite,isWeak}=this.actor;sheetData.npcEliteActive=isElite?" active":"",sheetData.npcWeakActive=isWeak?" active":"",sheetData.npcEliteHidden=isWeak?" hidden":"",sheetData.npcWeakHidden=isElite?" hidden":"",sheetData.notAdjusted=!(isElite||isWeak),sheetData.actorRarities=CONFIG.PF2E.rarityTraits,sheetData.actorRarity=sheetData.actorRarities[sheetData.data.traits.rarity.value],sheetData.isNotCommon="common"!==sheetData.data.traits.rarity.value,sheetData.actorSize=sheetData.actorSizes[sheetData.data.traits.size.value],sheetData.actorTraits=(sheetData.data.traits.traits||{}).value,sheetData.actorAlignment=sheetData.data.details.alignment.value,sheetData.actorAttitudes=CONFIG.PF2E.attitude,sheetData.actorAttitude=sheetData.actorAttitudes[null!==(_b=null===(_a=sheetData.data.traits.attitude)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"indifferent"],sheetData.hasLanguages=!1,sheetData.data.traits.languages.value&&Array.isArray(sheetData.data.traits.languages.value)&&sheetData.actor.data.traits.languages.value.length>0&&(sheetData.hasLanguages=!0),sheetData.hasSkills=sheetData.actor.lores.length>0,sheetData.hasACDetails=sheetData.data.attributes.ac.details&&""!==sheetData.data.attributes.ac.details,sheetData.hasHPDetails=sheetData.data.attributes.hp.details&&""!==sheetData.data.attributes.hp.details,sheetData.hasFortDetails=sheetData.data.saves.fortitude.saveDetail&&""!==sheetData.data.saves.fortitude.saveDetail,sheetData.hasRefDetails=sheetData.data.saves.reflex.saveDetail&&""!==sheetData.data.saves.reflex.saveDetail,sheetData.hasWillDetails=sheetData.data.saves.will.saveDetail&&""!==sheetData.data.saves.will.saveDetail,sheetData.hasAllSaveDetails=(sheetData.data.attributes.allSaves||{}).value&&""!==(sheetData.data.attributes.allSaves||{}).value,sheetData.hasImmunities=!!sheetData.data.traits.di.value.length&&sheetData.data.traits.di.value,sheetData.hasResistances=!!sheetData.data.traits.dr.length&&Array.isArray(sheetData.data.traits.dr),sheetData.hasWeaknesses=!!sheetData.data.traits.dv.length&&Array.isArray(sheetData.data.traits.dv),sheetData.data.attributes.speed&&sheetData.data.attributes.speed.otherSpeeds&&(sheetData.hasSpeedDetails=!!sheetData.data.attributes.speed.otherSpeeds.length&&sheetData.data.attributes.speed.otherSpeeds),sheetData.hasSpells=!!sheetData.actor.spellcastingEntries.length&&sheetData.actor.spellcastingEntries;const equipment=[],reorgActions={interaction:{label:"Interaction Actions",actions:{action:{label:"Actions",actions:[]},reaction:{label:"Reactions",actions:[]},free:{label:"Free Actions",actions:[]},passive:{label:"Passive Actions",actions:[]}}},defensive:{label:"Defensive Actions",actions:{action:{label:"Actions",actions:[]},reaction:{label:"Reactions",actions:[]},free:{label:"Free Actions",actions:[]},passive:{label:"Passive Actions",actions:[]}}},offensive:{label:"Offensive Actions",actions:{action:{label:"Actions",actions:[]},reaction:{label:"Reactions",actions:[]},free:{label:"Free Actions",actions:[]},passive:{label:"Passive Actions",actions:[]}}}};sheetData.hasInteractionActions=!1,sheetData.hasDefensiveActions=!1,sheetData.hasOffensiveActions=!1,sheetData.hasEquipment=!1;const items=sheetData.actor.items;for(const itemData of items)if(itemData.isPhysical)1!=itemData.data.quantity.value&&(itemData.name+=` (${itemData.data.quantity.value})`),equipment.push(itemData),sheetData.hasEquipment=!0;else if("action"===itemData.type){const actionType=itemData.data.actionType.value||"action";switch((null===(_c=itemData.data.actionCategory)||void 0===_c?void 0:_c.value)||"offensive"){case"interaction":reorgActions.interaction.actions[actionType].actions.push(itemData),sheetData.hasInteractionActions=!0;break;case"defensive":reorgActions.defensive.actions[actionType].actions.push(itemData),sheetData.hasDefensiveActions=!0;break;default:reorgActions.offensive.actions[actionType].actions.push(itemData),sheetData.hasOffensiveActions=!0}}else"melee"===itemData.type&&(itemData.img=base_1.ActorPF2e.getActionGraphics("action",1).imageUrl);return sheetData.actor.reorgActions=reorgActions,sheetData.actor.equipment=equipment,sheetData}getLootData(data){var _a,_b;return data.actor.name=null!==(_b=null===(_a=this.token)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:this.actor.name,data.options.classes=data.options.classes.filter((cls=>!["npc-sheet","updatedNPCSheet"].includes(cls))).concat("npc"),data.inventory=sheet_1.NPCSheetPF2e.prototype.prepareInventory({items:data.actor.items}),data}get isLootSheet(){return this.actor.isLootable&&!this.actor.isOwner&&this.actor.isLootableBy(game.user)}npcAdjustment(increase){var _a;let traits=null!==(_a=duplicate(this.actor.data.data.traits.traits.value))&&void 0!==_a?_a:[];const isElite=traits.some((trait=>"elite"===trait)),isWeak=traits.some((trait=>"weak"===trait));increase?isWeak?(console.log("PF2e System | Adjusting NPC to become less powerful"),traits=traits.filter((trait=>"weak"!==trait))):isWeak||isElite||(console.log("PF2e System | Adjusting NPC to become more powerful"),traits.push("elite")):isElite?(console.log("PF2e System | Adjusting NPC to become less powerful"),traits=traits.filter((trait=>"elite"!==trait))):isElite||isWeak||(console.log("PF2e System | Adjusting NPC to become less powerful"),traits.push("weak")),this.actor.update({"data.traits.traits.value":traits})}rollNPCDamageRoll(event,damageRoll,item){const itemData=item.data.data,rollData=duplicate(item.actor.data.data),parts=[damageRoll.die],dtype=CONFIG.PF2E.damageTypes[damageRoll.damageType];let title=`${item.name} - Damage`;dtype&&(title+=` (${dtype})`),rollData.item=itemData,dice_1.DicePF2e.damageRoll({event,parts,actor:item.actor,data:rollData,title,speaker:ChatMessage.getSpeaker({actor:item.actor}),dialogOptions:{width:400,top:event.clientY-80,left:window.innerWidth-710}})}expandAttackEffect(attackEffectName,event){var _a,_b,_c,_d,_e,_f;const actionList=$(event.currentTarget).parents("form").find(".item.action-item");let toggledAnything=!1;const mAbilities=CONFIG.PF2E.monsterAbilities();if(actionList.each(((_index,element)=>{var _a;(null===(_a=$(element).attr("data-item-name"))||void 0===_a?void 0:_a.trim().toLowerCase())===attackEffectName.trim().toLowerCase()&&($(element).find("h4").trigger("click"),toggledAnything=!0)})),!toggledAnything){const newAbilityInfo=mAbilities[attackEffectName];if(newAbilityInfo){const newAction={name:attackEffectName,type:"action",data:{actionType:{value:newAbilityInfo.actionType},actionCategory:{value:"offensive"},source:{value:""},description:{value:newAbilityInfo.description},traits:{value:[]},actions:{value:newAbilityInfo.actionCost}}},traitRegEx=/(?:Traits.aspx.+?">)(?:<\w+>)*(.+?)(?:<\/\w+>)*(?:<\/a>)/g,matchTraits=[...newAbilityInfo.description.matchAll(traitRegEx)];for(let i=0;i<matchTraits.length;i++)matchTraits[i]&&matchTraits[i].length>=2&&matchTraits[i][1]&&((null===(_c=null===(_b=null===(_a=newAction.data)||void 0===_a?void 0:_a.traits)||void 0===_b?void 0:_b.value)||void 0===_c?void 0:_c.includes(matchTraits[i][1]))||null===(_f=null===(_e=null===(_d=newAction.data)||void 0===_d?void 0:_d.traits)||void 0===_e?void 0:_e.value)||void 0===_f||_f.push(matchTraits[i][1]));action_1.ActionPF2e.create(newAction,{parent:this.actor,renderSheet:!1})}}}activateListeners(html){super.activateListeners(html),this.isLootSheet&&html.find(".tab.inventory").addClass("active"),this.options.editable&&(html.find(".npc-detail-text textarea").on("focusout",(async event=>{event.target.style.height="5px",event.target.style.height=`${event.target.scrollHeight}px`})),html.find(".npc-detail-text textarea").each(((_index,element)=>{element.style.height="5px",element.style.height=`${element.scrollHeight}px`})),html.find(".isNPCEditable").on("change",(event=>{this.actor.setFlag("pf2e","editNPC",{value:event.target.checked})})),html.find("button.npc-attackEffect").on("click",(event=>{var _a;event.preventDefault(),event.stopPropagation();const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",aId=Number($(event.currentTarget).attr("data-attackEffect")),item=this.actor.items.get(itemId);if(!(item instanceof melee_1.MeleePF2e))return void console.debug("PF2e System | clicked an attackEffect, but item was not a melee");const attackEffect=item.data.data.attackEffects.value[aId];switch(console.debug("PF2e System | clicked an attackEffect:",attackEffect,event),event.target.dataset.action){case"npcAttackEffect":this.expandAttackEffect(attackEffect,event)}})),html.find("a.npc-elite-adjustment").on("click",(event=>{event.preventDefault(),console.log("PF2e System | Adding Elite adjustment to NPC");const eliteButton=$(event.currentTarget),weakButton=eliteButton.siblings(".npc-weak-adjustment");eliteButton.toggleClass("active"),weakButton.toggleClass("hidden"),this.npcAdjustment(eliteButton.hasClass("active"))})),html.find("a.npc-weak-adjustment").on("click",(event=>{event.preventDefault(),console.log("PF2e System | Adding Weak adjustment to NPC");const weakButton=$(event.currentTarget),eliteButton=weakButton.siblings(".npc-elite-adjustment");weakButton.toggleClass("active"),eliteButton.toggleClass("hidden"),this.npcAdjustment(!weakButton.hasClass("active"))})))}}exports.NPCLegacySheetPF2e=NPCLegacySheetPF2e},89536:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NPCSheetPF2e=void 0;const sheet_1=__webpack_require__(83936),dice_1=__webpack_require__(18235),values_1=__webpack_require__(35089),skills_editor_1=__webpack_require__(58998),recall_knowledge_1=__webpack_require__(25306),recall_knowledge_popup_1=__webpack_require__(75242),physical_1=__webpack_require__(6560),_util_1=__webpack_require__(6945);class NPCSheetPF2e extends sheet_1.CreatureSheetPF2e{static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:options.classes.concat("npc"),width:650,height:680,showUnpreparedSpells:!0,tabs:[{navSelector:".sheet-tabs",contentSelector:".sheet-body",initial:"main"}],scrollY:[".tab.main",".tab.inventory",".tab.spells",".tab.notes"]}),options}get template(){return this.isLootSheet?"systems/pf2e/templates/actors/npc/loot-sheet.html":this.actor.limited?"systems/pf2e/templates/actors/limited/npc-sheet.html":"systems/pf2e/templates/actors/npc/sheet.html"}get title(){var _a,_b;if(this.isLootSheet){const actorName=null!==(_b=null===(_a=this.token)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:this.actor.name;return this.actor.isDead?`${actorName} [${game.i18n.localize("PF2E.NPC.Dead")}]`:actorName}return super.title}get isLootSheet(){return this.actor.isLootable&&!this.actor.isOwner&&this.actor.isLootableBy(game.user)}prepareItems(sheetData){this.prepareAbilities(sheetData.data.abilities),this.prepareSize(sheetData.data),this.prepareAlignment(sheetData.data),this.prepareSkills(sheetData.data),this.prepareSpeeds(sheetData.data),this.prepareSaves(sheetData.data),this.prepareActions(sheetData),sheetData.inventory=this.prepareInventory(sheetData),sheetData.attacks=this.prepareAttacks(sheetData.data),sheetData.conditions=sheetData.items.filter((data=>"condition"===data.type)),sheetData.effectItems=sheetData.items.filter((data=>"effect"===data.type)),this.prepareSpellcasting(sheetData)}prepareIWR(sheetData){var _a;sheetData.immunities=this.prepareOptions(CONFIG.PF2E.immunityTypes,sheetData.data.traits.di),sheetData.hasImmunities=0!==Object.keys(sheetData.immunities).length;const weaknessTypes=CONFIG.PF2E.weaknessTypes;for(const weakness of sheetData.data.traits.dv)weakness.label=weaknessTypes[weakness.type];const resistanceTypes=CONFIG.PF2E.resistanceTypes;for(const resistance of sheetData.data.traits.dr)resistance.label=null!==(_a=resistanceTypes[resistance.type])&&void 0!==_a?_a:resistance.label}getIdentifyCreatureData(){const proficiencyWithoutLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant");return(0,recall_knowledge_1.identifyCreature)(this.actor.data,{proficiencyWithoutLevel})}async getData(){var _a,_b,_c,_d;const sheetData=await super.getData(),identifyCreatureData=sheetData.identifyCreatureData=this.getIdentifyCreatureData();sheetData.identifySkillDC=identifyCreatureData.skill.dc,sheetData.identifySkillAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.skill.start],sheetData.identifySkillProgression=identifyCreatureData.skill.progression.join("/"),sheetData.identificationSkills=Array.from(sheetData.identifyCreatureData.skills).sort().map((skillAcronym=>CONFIG.PF2E.skills[skillAcronym])),sheetData.specificLoreDC=identifyCreatureData.specificLoreDC.dc,sheetData.specificLoreAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.specificLoreDC.start],sheetData.specificLoreProgression=identifyCreatureData.specificLoreDC.progression.join("/"),sheetData.unspecificLoreDC=identifyCreatureData.unspecificLoreDC.dc,sheetData.unspecificLoreAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.unspecificLoreDC.start],sheetData.unspecificLoreProgression=identifyCreatureData.unspecificLoreDC.progression.join("/"),sheetData.isNotCommon="common"!==sheetData.data.traits.rarity.value,sheetData.actorSize=CONFIG.PF2E.actorSizes[sheetData.data.traits.size.value],sheetData.actorAttitudes=CONFIG.PF2E.attitude,sheetData.actorAttitude=sheetData.actorAttitudes[null!==(_b=null===(_a=sheetData.data.traits.attitude)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"indifferent"],sheetData.traits=this.prepareOptions(CONFIG.PF2E.creatureTraits,sheetData.data.traits.traits),this.prepareIWR(sheetData),sheetData.languages=this.prepareOptions(CONFIG.PF2E.languages,sheetData.data.traits.languages);const shield=this.actor.heldShield,actorShieldData=sheetData.data.attributes.shield;shield?(sheetData.hasShield=!0,sheetData.data.attributes.shieldBroken=shield.isBroken):actorShieldData.max>0&&(sheetData.hasShield=!0,sheetData.data.attributes.shieldBroken=actorShieldData.value>actorShieldData.max/2);const isElite=this.isElite,isWeak=this.isWeak;if(sheetData.isElite=isElite,sheetData.isWeak=isWeak,sheetData.notAdjusted=!isElite&&!isWeak,isElite&&isWeak)throw(0,_util_1.ErrorPF2e)("NPC is both, Elite and Weak at the same time.");isElite?(sheetData.eliteState="active",sheetData.weakState="inactive"):isWeak?(sheetData.eliteState="inactive",sheetData.weakState="active"):(sheetData.eliteState="inactive",sheetData.weakState="inactive"),this.isLootSheet&&(sheetData.actor.name=null!==(_d=null===(_c=this.token)||void 0===_c?void 0:_c.name)&&void 0!==_d?_d:this.actor.name);const{level}=sheetData.data.details;level.adjustedHigher=level.value>Number(level.base),level.adjustedLower=level.value<Number(level.base);const{ac,hp,perception,hardness}=sheetData.data.attributes;return ac.adjustedHigher=ac.value>Number(ac.base),ac.adjustedLower=ac.value<Number(ac.base),hp.adjustedHigher=hp.max>Number(hp.base),hp.adjustedLower=hp.max<Number(hp.base),perception.adjustedHigher=perception.totalModifier>Number(perception.base),perception.adjustedLower=perception.totalModifier<Number(perception.base),sheetData.hasHardness=this.actor.traits.has("construct")||(Number(null==hardness?void 0:hardness.value)||0)>0,sheetData.configLootableNpc=game.settings.get("pf2e","automation.lootableNPCs"),sheetData}activateListeners(html){super.activateListeners(html),this.isLootSheet&&html.find(".tab.inventory").addClass("active");const rollables=["a.rollable",".rollable a",".item-icon.rollable"].join(", ");html.find(rollables).on("click",(event=>this.onClickRollable(event))),html.find("a.chat, .spell-icon.rollable").on("click",(event=>this.onClickToChat(event))),this.options.editable&&(html.find(".trait-edit").on("click",(event=>this.onTraitSelector(event))),html.find(".skills-edit").on("click",(()=>{new skills_editor_1.NPCSkillsEditor(this.actor).render(!0)})),html.find(".npc-elite-adjustment").on("click",(()=>this.onClickMakeElite())),html.find(".npc-weak-adjustment").on("click",(()=>this.onClickMakeWeak())),html.find(".spellcasting-entry").find(".attack-input, .dc-input, .ability-score select").on("change",(event=>this.onChangeSpellcastingEntry(event))),html.find(".spell-slots-increment-reset").on("click",(event=>this.onSpellSlotIncrementReset(event))),html.find(".effects-list > .effect > .item-image").on("contextmenu",(event=>this.onClickDeleteItem(event))),html.find(".recall-knowledge button.breakdown").on("click",(event=>{event.preventDefault();const identifyCreatureData=this.getIdentifyCreatureData();new recall_knowledge_popup_1.RecallKnowledgePopup({},identifyCreatureData).render(!0)})))}prepareOptions(options,selections){const mainSelections=selections.value.map((trait=>({value:trait,label:options[trait]}))),customSelections=selections.custom.split(/\s*[,;|]\s*/).filter((trait=>trait)).map((trait=>({value:trait.replace(/\.$/,""),label:trait})));return mainSelections.concat(customSelections).filter((selection=>selection.label)).reduce(((selections,selection)=>mergeObject(selections,{[selection.value]:selection.label})),{})}prepareAbilities(abilities){for(const key of values_1.ABILITY_ABBREVIATIONS){const data=abilities[key],localizedCode=game.i18n.localize(`PF2E.AbilityId.${key}`),nameKey=this.getAbilityNameKey(key),localizedName=game.i18n.localize(nameKey);data.localizedCode=localizedCode,data.localizedName=localizedName}}prepareSize(sheetSystemData){const size=sheetSystemData.traits.size.value,localizationKey=this.getSizeLocalizedKey(size),localizedName=game.i18n.localize(localizationKey);sheetSystemData.traits.size.localizedName=localizedName}prepareAlignment(sheetSystemData){const alignmentCode=sheetSystemData.details.alignment.value,localizedName=game.i18n.localize(`PF2E.Alignment${alignmentCode}`);sheetSystemData.details.alignment.localizedName=localizedName}prepareSkills(sheetSystemData){const sortedSkillsIds=Object.keys(sheetSystemData.skills),skills=sheetSystemData.skills;for(const skillId of sortedSkillsIds){const skill=skills[skillId];skill.label=(0,_util_1.objectHasKey)(CONFIG.PF2E.skillList,skill.expanded)?game.i18n.localize(CONFIG.PF2E.skillList[skill.expanded]):skill.name,skill.adjustedHigher=skill.value>Number(skill.base),skill.adjustedLower=skill.value<Number(skill.base)}sortedSkillsIds.sort(((a,b)=>{const skillA=skills[a],skillB=skills[b];return skillA.label<skillB.label?-1:skillA.label>skillB.label?1:0}));const sortedSkills={};for(const skillId of sortedSkillsIds)sortedSkills[skillId]=skills[skillId];sheetSystemData.sortedSkills=sortedSkills}prepareSpeeds(sheetData){const configSpeedTypes=CONFIG.PF2E.speedTypes;sheetData.attributes.speed.otherSpeeds.forEach((speed=>{const speedName=speed.type.trim().toLowerCase().replace(/\s+/g,"-");let value=speed.value;"string"==typeof value&&value.includes("feet")&&(value=value.replace("feet","").trim()),speed.label=(0,_util_1.objectHasKey)(configSpeedTypes,speedName)?configSpeedTypes[speedName]:""})),"string"==typeof sheetData.attributes.speed.value&&(sheetData.attributes.speed.value=sheetData.attributes.speed.value.replace("feet","").trim())}prepareSaves(systemData){for(const saveType of values_1.SAVE_TYPES){const save=systemData.saves[saveType];save.labelShort=game.i18n.localize(`PF2E.Saves${saveType.titleCase()}Short`),save.adjustedHigher=save.totalModifier>Number(save.base),save.adjustedLower=save.totalModifier<Number(save.base)}}prepareActions(sheetData){var _a;const actions={passive:{label:game.i18n.localize("PF2E.ActionTypePassive"),actions:[]},free:{label:game.i18n.localize("PF2E.ActionTypeFree"),actions:[]},reaction:{label:game.i18n.localize("PF2E.ActionTypeReaction"),actions:[]},action:{label:game.i18n.localize("PF2E.ActionTypeAction"),actions:[]}};for(const item of this.actor.itemTypes.action){const itemData=item.toObject(!1),chatData=item.getChatData(),traits=chatData.traits,systemData=itemData.data;if(systemData.actionType&&systemData.actionType.value){const configTraitDescriptions=CONFIG.PF2E.traitsDescriptions,configAttackTraits=CONFIG.PF2E.npcAttackTraits,actionTrait=systemData.actionType.value,trait={label:(0,_util_1.objectHasKey)(configAttackTraits,actionTrait)?configAttackTraits[actionTrait]:actionTrait.charAt(0).toUpperCase()+actionTrait.slice(1),description:(0,_util_1.objectHasKey)(configTraitDescriptions,actionTrait)?configTraitDescriptions[actionTrait]:"",value:""};traits.splice(0,0,trait)}const actionType=(null===(_a=item.actionCost)||void 0===_a?void 0:_a.type)||"passive";(0,_util_1.objectHasKey)(actions,actionType)&&actions[actionType].actions.push(Object.assign(Object.assign({},itemData),{glyph:(0,_util_1.getActionGlyph)(item.actionCost),imageUrl:(0,_util_1.getActionIcon)(item.actionCost),chatData,traits}))}sheetData.actions=actions}prepareAttacks(sheetData){const attackTraits=CONFIG.PF2E.npcAttackTraits,traitDescriptions=CONFIG.PF2E.traitsDescriptions;return sheetData.actions.map((attack=>{const traits=attack.traits.map((strikeTrait=>{var _a,_b;return{label:null!==(_a=attackTraits[strikeTrait.label])&&void 0!==_a?_a:strikeTrait.label,description:null!==(_b=traitDescriptions[strikeTrait.name])&&void 0!==_b?_b:""}})).sort(((a,b)=>a.label<b.label?-1:a.label>b.label?1:0));return{attack,traits}}))}prepareSpellcasting(sheetData){sheetData.spellcastingEntries=[];for(const item of sheetData.items)if("spellcastingEntry"===item.type){const entry=this.actor.spellcasting.get(item._id);if(!entry)continue;sheetData.spellcastingEntries.push(mergeObject(item,entry.getSpellData()))}}prepareInventory(sheetData){const itemsData=sheetData.items;return{weapon:{label:game.i18n.localize("PF2E.InventoryWeaponsHeader"),type:"weapon",items:itemsData.filter((itemData=>"weapon"===itemData.type))},armor:{label:game.i18n.localize("PF2E.InventoryArmorHeader"),type:"armor",items:itemsData.filter((itemData=>"armor"===itemData.type))},equipment:{label:game.i18n.localize("PF2E.InventoryEquipmentHeader"),type:"equipment",items:itemsData.filter((itemData=>"equipment"===itemData.type||"book"===itemData.type))},consumable:{label:game.i18n.localize("PF2E.InventoryConsumablesHeader"),type:"consumable",items:itemsData.filter((itemData=>"consumable"===itemData.type))},treasure:{label:game.i18n.localize("PF2E.InventoryTreasureHeader"),type:"treasure",items:itemsData.filter((itemData=>"treasure"===itemData.type))}}}get isWeak(){return this.actor.traits.has("weak")}get isElite(){return this.actor.traits.has("elite")}getSizeLocalizedKey(size){const actorSizes=CONFIG.PF2E.actorSizes;return(0,_util_1.objectHasKey)(actorSizes,size)?actorSizes[size]:""}getAbilityNameKey(abilityCode){return CONFIG.PF2E.abilities[abilityCode]}rollPerception(event){const options=this.actor.getRollOptions(["all","perception-check"]),perception=this.actor.data.data.attributes.perception;(null==perception?void 0:perception.roll)&&perception.roll({event,options})}rollAbility(event,abilityId){const bonus=this.actor.data.data.abilities[abilityId].mod,title=game.i18n.localize(`PF2E.AbilityCheck.${abilityId}`),data={bonus},speaker=ChatMessage.getSpeaker({token:this.token,actor:this.actor});dice_1.DicePF2e.d20Roll({event,parts:["@bonus"],data,title,speaker})}rollSkill(event,skillKey){var _a;const skill=this.actor.data.data.skills[skillKey];if(!(null==skill?void 0:skill.roll))return;const longForms=values_1.SKILL_DICTIONARY,opts=this.actor.getRollOptions(["all","skill-check",null!==(_a=longForms[skillKey])&&void 0!==_a?_a:skillKey]),extraOptions=$(event.currentTarget).attr("data-options");if(extraOptions){const split=extraOptions.split(",").map((o=>o.trim())).filter((o=>!!o));opts.push(...split)}skill.roll({event,options:opts})}rollSave(event,saveId){const save=this.actor.data.data.saves[saveId];if(null==save?void 0:save.roll){const options=this.actor.getRollOptions(["all","saving-throw",saveId]);save.roll({event,options})}else this.actor.rollSave(event,saveId)}onClickRollable(event){event.preventDefault();const $label=$(event.currentTarget).closest(".rollable"),ability=$label.parent().attr("data-attribute"),skill=$label.parent().attr("data-skill"),save=$label.parent().attr("data-save"),action=$label.parent().parent().attr("data-action"),item=$label.parent().parent().attr("data-item"),spell=$label.parent().parent().attr("data-spell");if(ability)switch(ability){case"perception":this.rollPerception(event);break;default:this.rollAbility(event,ability)}else skill?this.rollSkill(event,skill):save?this.rollSave(event,save):(action||item||spell)&&this.onClickExpandable(event)}onClickExpandable(event){const $details=$(event.currentTarget).closest("li.item").find(".sub-section.expandable");$details.hasClass("expanded")?$details.slideUp(200,(()=>{$details.removeClass("expanded")})):$details.slideDown(200,(()=>{$details.addClass("expanded")}))}onClickToChat(event){var _a;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId);if(item){if(item instanceof physical_1.PhysicalItemPF2e&&!item.isIdentified)return;item.toChat(event)}else console.error(`Clicked item with ID ${itemId}, but unable to find item with that ID.`)}onClickMakeWeak(){this.actor.isWeak?this.actor.applyAdjustment("normal"):this.actor.applyAdjustment("weak")}onClickMakeElite(){this.actor.isElite?this.actor.applyAdjustment("normal"):this.actor.applyAdjustment("elite")}async onChangeSpellcastingEntry(event){var _a,_b,_c;event.preventDefault();const $input=$(event.currentTarget),itemId=null!==(_a=$input.closest(".spellcasting-entry").attr("data-container-id"))&&void 0!==_a?_a:"",key=null!==(_c=null===(_b=$input.attr("data-base-property"))||void 0===_b?void 0:_b.replace(/data\.items\.\d+\./,""))&&void 0!==_c?_c:"",value=$input.hasClass("focus-points")||$input.hasClass("focus-pool")?Math.min(Number($input.val()),3):$input.is("select")?String($input.val()):Number($input.val());await this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,[key]:value}])}async onSpellSlotIncrementReset(event){const $target=$(event.currentTarget),itemId=$target.attr("data-item-id"),itemLevel="string"==typeof $target.attr("data-level")?Number($target.attr("data-level")||0):null,item=this.actor.items.get(null!=itemId?itemId:"");if(null===itemLevel||"spellcastingEntry"!==(null==item?void 0:item.data.type))return;const systemData=item.data.toObject().data;if(!systemData.slots)return;const slot=`slot${itemLevel}`;systemData.slots[slot].value=systemData.slots[slot].max,await item.update({"data.slots":systemData.slots})}async _updateObject(event,formData){if(this.isElite||this.isWeak){const{max}=this.actor.data.data.attributes.hp;formData["data.attributes.hp.max"]===max&&delete formData["data.attributes.hp.max"]}const shield=this.actor.heldShield;shield&&Number.isInteger(formData["data.attributes.shield.value"])&&await shield.update({"data.hp.value":formData["data.attributes.shield.value"]}),await super._updateObject(event,formData)}}exports.NPCSheetPF2e=NPCSheetPF2e},58998:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NPCSkillsEditor=void 0;const values_1=__webpack_require__(35089),_util_1=__webpack_require__(6945);class NPCSkillsEditor extends FormApplication{get npc(){return this.object}static get defaultOptions(){const options=super.defaultOptions;return options.id="npc-skills-selector",options.classes=["pf2e","npc"],options.title=game.i18n.localize("PF2E.NPC.SkillsEditor.TitleLabel"),options.template="systems/pf2e/templates/actors/npc/forms/npc-skills-editor.html",options.width="auto",options.height=700,options.scrollY=[".skills-list"],options}getData(){const trainedSkills={},untrainedSkills={},skills=this.npc.data.data.skills;for(const[key,skill]of Object.entries(skills))this.isLoreSkill(key)?(skill.isLore=!0,trainedSkills[key]=skill):skill.visible?(skill.label=game.i18n.localize("PF2E.Skill"+skill.name),trainedSkills[key]=skill):untrainedSkills[key]=skill;return Object.assign(Object.assign({},super.getData()),{trainedSkills,untrainedSkills})}activateListeners(html){super.activateListeners(html),html.find(".delete").on("click",(event=>this.onClickRemoveSkill(event))),html.find(".add-lore-button").on("click",(event=>this.onClickAddLoreSkill(event))),html.find(".item-edit").on("click",(event=>this.onClickEditSkill(event))),html.find(".add-skill-button").on("click",(event=>this.onClickAddSkill(event)))}async onClickAddSkill(eventData){eventData.preventDefault();const skillId=$(eventData.currentTarget).parents("#skill-selector").find("select").val(),itemName=this.findSkillName(skillId).replace(/-/g," ").titleCase();await this.npc.createEmbeddedDocuments("Item",[{name:itemName,type:"lore"}]),this.render()}async onClickRemoveSkill(event){event.preventDefault();const skillContainer=$(event.currentTarget).parents(".skill"),skillId=skillContainer.attr("data-skill"),skillItem=this.findSkillItem(null!=skillId?skillId:"");skillItem?(skillContainer.remove(),await skillItem.delete(),this.render(!0)):console.error("Unable to delete skill, couldn't find skill item.")}async onClickAddLoreSkill(event){event.preventDefault();const loreNameField=$(event.currentTarget).parents("#lore-skill-creator").find("input"),data={name:String(loreNameField.val()),type:"lore",data:{mod:{value:0}}};await this.npc.createEmbeddedDocuments("Item",[data]),this.render()}onClickEditSkill(event){const skillId=$(event.currentTarget).parents(".skill").attr("data-skill"),item=this.findSkillItem(null!=skillId?skillId:"");if(!item)throw(0,_util_1.ErrorPF2e)(`Unable to find item for skill ${skillId}.`);item.sheet.render(!0)}async _updateObject(_event,formData){const updates=Object.entries(formData).flatMap((([key,modifier])=>{const value=Number(modifier)||0,skillItem=this.findSkillItem(key);return skillItem?{_id:skillItem.id,"data.mod.value":value}:[]}));await this.npc.updateEmbeddedDocuments("Item",updates)}isLoreSkill(skillId){return!this.isRegularSkill(skillId)}isRegularSkill(skillId){for(const key of Object.keys(values_1.SKILL_EXPANDED)){if(key===skillId)return!0;if(values_1.SKILL_EXPANDED[key].shortform===skillId)return!0}return!1}findSkillName(skillId){for(const skillDataId of Object.keys(values_1.SKILL_EXPANDED)){if(values_1.SKILL_EXPANDED[skillDataId].shortform===skillId)return skillDataId}return skillId}findSkillItem(skillId){var _a;const skill=this.npc.data.data.skills[skillId];return void 0===skill?(console.error(`No skill found with skill id ${skillId}`),null):void 0===skill.itemID?(console.error("Skill has no itemID defined."),null):null!==(_a=this.npc.itemTypes.lore.find((item=>item.id===skill.itemID)))&&void 0!==_a?_a:null}}exports.NPCSkillsEditor=NPCSkillsEditor},11291:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorSheetPF2e=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),helpers_1=__webpack_require__(44252),spell_consumables_1=__webpack_require__(87458),helpers_2=__webpack_require__(71046),trait_selector_1=__webpack_require__(17145),_util_1=__webpack_require__(6945),localize_1=__webpack_require__(41332),move_loot_popup_1=__webpack_require__(46527),add_coins_popup_1=__webpack_require__(4048),identify_popup_1=__webpack_require__(67441),remove_coins_popup_1=__webpack_require__(34302),scroll_wand_popup_1=__webpack_require__(30837),folder_1=__webpack_require__(75064),inline_roll_links_1=__webpack_require__(27542),spellcasting_dialog_1=__webpack_require__(93198),item_summary_renderer_1=__webpack_require__(26910);class ActorSheetPF2e extends ActorSheet{constructor(){super(...arguments),this.itemRenderer=new item_summary_renderer_1.ItemSummaryRendererPF2e(this)}static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:options.classes.concat(["pf2e","actor"]),scrollY:[".sheet-sidebar",".spellcastingEntry-list",".actions-list",".skills-pane",".feats-pane",".inventory-pane",".actions-pane",".spellbook-pane",".skillstab-pane",".crafting-pane",".pfs-pane",".tab.active"]})}get isLootSheet(){return!1}getData(options=this.options){options.id||(options.id=this.id);const actorData=this.actor.toObject(!1),items=deepClone(this.actor.items.map((item=>item.data)).sort(((a,b)=>(a.sort||0)-(b.sort||0))));actorData.items=items;const inventoryItems=items.filter((itemData=>itemData.isPhysical));for(const itemData of inventoryItems)itemData.isContainer="backpack"===itemData.type;const coins=(0,helpers_2.calculateValueOfCurrency)(inventoryItems),totalCoinage=ActorSheetPF2e.coinsToSheetData(coins),totalCoinageGold=((0,helpers_2.coinValueInCopper)(coins)/100).toFixed(2),totalWealth=(0,helpers_2.calculateTotalWealth)(inventoryItems),totalWealthGold=((0,helpers_2.coinValueInCopper)(totalWealth)/100).toFixed(2),sheetData={cssClass:this.actor.isOwner?"editable":"locked",editable:this.isEditable,document:this.actor,limited:this.actor.limited,options,owner:this.actor.isOwner,title:this.title,actor:actorData,data:actorData.data,effects:actorData.effects,items,user:{isGM:game.user.isGM},isTargetFlatFooted:this.actor.getFlag(game.system.id,"rollOptions.all.target:flatFooted"),isProficiencyLocked:this.actor.getFlag(game.system.id,"proficiencyLock"),totalCoinage,totalCoinageGold,totalWealth,totalWealthGold};return this.prepareTraits(sheetData.data.traits),this.prepareItems(sheetData),sheetData}findActiveList(){return this.element.find(".tab.active .directory-list")}static coinsToSheetData(coins){return["cp","sp","gp","pp"].reduce(((accumulated,denomination)=>Object.assign(Object.assign({},accumulated),{[denomination]:{value:coins[denomination],label:CONFIG.PF2E.currencies[denomination]}})),{})}prepareTraits(traits){var _a;if(void 0===traits)return;const map={languages:CONFIG.PF2E.languages,dr:CONFIG.PF2E.resistanceTypes,di:CONFIG.PF2E.immunityTypes,dv:CONFIG.PF2E.weaknessTypes,ci:CONFIG.PF2E.immunityTypes,traits:CONFIG.PF2E.creatureTraits};for(const[t,choices]of Object.entries(map)){const trait=traits[t]||{value:[],selected:[]};if(Array.isArray(trait)){trait.selected={};for(const entry of trait)if("object"==typeof entry){const entryType=game.i18n.localize(null!==(_a=choices[entry.type])&&void 0!==_a?_a:"");if(entry.exceptions){const exceptions=entry.exceptions;trait.selected[entry.type]=`${entryType} (${entry.value}) [${exceptions}]`}else{let text=entryType;""!==entry.value&&(text=`${text} (${entry.value})`),trait.selected[entry.type]=text}}else trait.selected[entry]=choices[entry]||String(entry)}else trait.value&&(trait.selected=Object.fromEntries(trait.value.filter((key=>(0,_util_1.objectHasKey)(choices,key))).map((key=>[key,choices[key]]))));trait.custom&&(trait.selected.custom=trait.custom)}}async close(options={}){const editors=Object.values(this.editors).filter((editor=>editor.active));for(const editor of editors)editor.options.save_onsavecallback();await super.close(options)}activateListeners(html){super.activateListeners(html),html.find("[data-wpad]").each(((_i,e)=>{const w=("INPUT"===e.tagName?e.value:e.innerText).length*Number(null==e?void 0:e.getAttribute("data-wpad"))/2;e.setAttribute("style",`flex: 0 0 ${w}px`)})),this.itemRenderer.activateListeners(html),this.options.editable&&("character"!==this.actor.type&&inline_roll_links_1.InlineRollsLinks.listen(html),html.find(".save-name").on("click",(event=>{var _a;event.preventDefault();const save=$(event.currentTarget).parents("[data-save]")[0].getAttribute("data-save");if(null===(_a=this.actor.data.data.saves[save])||void 0===_a?void 0:_a.roll){const options=this.actor.getRollOptions(["all","saving-throw",save]);this.actor.data.data.saves[save].roll({event,options})}else this.actor.rollSave(event,save)})),html.find(".roll-init").on("click",(event=>{var _a,_b;const $target=$(event.currentTarget),{attributes}=this.actor.data.data;!$target.hasClass("disabled")&&"initiative"in attributes&&(null===(_b=(_a=attributes.initiative).roll)||void 0===_b||_b.call(_a,{event}))})),html.find(".attribute-name").on("click",(event=>{var _a;event.preventDefault();const key=(null===(_a=event.currentTarget.parentElement)||void 0===_a?void 0:_a.getAttribute("data-attribute"))||"",isSecret=event.currentTarget.getAttribute("data-secret"),attributes=this.actor.data.data.attributes,attribute=(0,_util_1.objectHasKey)(attributes,key)?attributes[key]:null;if((property=attribute)instanceof Object&&"roll"in property&&"function"==typeof property.roll){const options=this.actor.getRollOptions(["all",key]);isSecret&&options.push("secret"),attribute.roll({event,options})}else this.actor.rollAttribute(event,key);var property})),html.find(".item-unprepare").on("click",(event=>{var _a,_b,_c;const spellLvl=Number(null!==(_a=$(event.currentTarget).parents(".item").attr("data-spell-lvl"))&&void 0!==_a?_a:0),slotId=Number(null!==(_b=$(event.currentTarget).parents(".item").attr("data-slot-id"))&&void 0!==_b?_b:0),entryId=null!==(_c=$(event.currentTarget).parents(".item").attr("data-entry-id"))&&void 0!==_c?_c:"",entry=this.actor.spellcasting.get(entryId);null==entry||entry.unprepareSpell(spellLvl,slotId)})),html.find(".item-toggle-prepare").on("click",(event=>{var _a,_b,_c;const slotId=Number(null!==(_a=$(event.currentTarget).parents(".item").attr("data-slot-id"))&&void 0!==_a?_a:0),spellLvl=Number(null!==(_b=$(event.currentTarget).parents(".item").attr("data-spell-lvl"))&&void 0!==_b?_b:0),entryId=null!==(_c=$(event.currentTarget).parents(".item").attr("data-entry-id"))&&void 0!==_c?_c:"",expendedState=(()=>{var _a;return"true"!==(null!==(_a=$(event.currentTarget).parents(".item").attr("data-expended-state"))&&void 0!==_a?_a:"")})(),entry=this.actor.spellcasting.get(entryId);null==entry||entry.setSlotExpendedState(spellLvl,slotId,expendedState)})),html.find(".item-toggle-equip").on("click",(event=>{var _a;const f=$(event.currentTarget),itemId=null!==(_a=f.closest("[data-item-id]").attr("data-item-id"))&&void 0!==_a?_a:"",active=f.hasClass("active");this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,"data.equipped.value":!active}])})),html.find(".trait-selector").on("click",(event=>this.onTraitSelector(event))),html.find(".add-coins-popup button").on("click",(event=>this.onAddCoinsPopup(event))),html.find(".remove-coins-popup button").on("click",(event=>this.onRemoveCoinsPopup(event))),html.find(".sell-all-treasure button").on("click",(event=>this.onSellAllTreasure(event))),html.find(".feat-browse").on("click",(()=>game.pf2e.compendiumBrowser.openTab("feat"))),html.find(".action-browse").on("click",(()=>game.pf2e.compendiumBrowser.openTab("action"))),html.find(".spell-browse").on("click",(()=>game.pf2e.compendiumBrowser.openTab("spell"))),html.find(".inventory-browse").on("click",(event=>this.onClickBrowseCompendia(event))),html.find(".spell-create").on("click",(event=>this.onClickCreateItem(event))),html.find(".spellcasting-create").on("click",(event=>this.createSpellcastingEntry(event))),html.find(".spellcasting-edit").on("click",(event=>this.editSpellcastingEntry(event))),html.find(".spellcasting-remove").on("click",(event=>this.removeSpellcastingEntry(event))),html.find(".item-create").on("click",(event=>this.onClickCreateItem(event))),html.find(".item-toggle-container").on("click",(event=>this.toggleContainer(event))),html.find(".item-sell-treasure").on("click",(event=>{var _a;const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"";(0,helpers_2.sellTreasure)(this.actor,itemId)})),html.find(".item-edit").on("click",(event=>{const itemId=$(event.currentTarget).parents(".item").attr("data-item-id"),item=this.actor.items.get(null!=itemId?itemId:"");item&&item.sheet.render(!0)})),html.find(".item-toggle-identified").on("click",(event=>{var _a;const f=$(event.currentTarget),itemId=null!==(_a=f.parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"";if(f.hasClass("identified")){const item=this.actor.items.get(itemId);if(!(item instanceof _item_1.PhysicalItemPF2e))throw(0,_util_1.ErrorPF2e)(`${itemId} is not a physical item.`);item.setIdentificationStatus("unidentified")}else{const item=this.actor.items.get(itemId);item instanceof _item_1.PhysicalItemPF2e&&new identify_popup_1.IdentifyItemPopup(item).render(!0)}})),html.find(".item-delete").on("click",(event=>this.onClickDeleteItem(event))),html.find(".item-increase-quantity").on("click",(event=>{var _a;const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId);if(!(item instanceof _item_1.PhysicalItemPF2e))throw new Error("PF2e System | Tried to update quantity on item that does not have quantity");this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,"data.quantity.value":Number(item.data.data.quantity.value)+1}])})),html.find(".item-decrease-quantity").on("click",(event=>{var _a;const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId);if(!(item instanceof _item_1.PhysicalItemPF2e))throw new Error("Tried to update quantity on item that does not have quantity");Number(item.data.data.quantity.value)>0&&this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,"data.quantity.value":Number(item.data.data.quantity.value)-1}])})),html.find("[data-item-id].item .item-image").on("click",(event=>this.onItemRoll(event))),html.find(".item-value-input").on("change",(async event=>{event.preventDefault();let itemId=$(event.currentTarget).parents(".item").attr("data-item-id");itemId||(itemId=$(event.currentTarget).parents(".item-container").attr("data-container-id")),await this.actor.updateEmbeddedDocuments("Item",[{_id:null!=itemId?itemId:"","data.item.value":Number(event.target.value)}])})),html.find(".formula-delete").on("click",(event=>{var _a;event.preventDefault();const itemUuid=$(event.currentTarget).parents(".item").attr("data-item-id");if(itemUuid&&this.actor instanceof _actor_1.CharacterPF2e){const actorFormulas=null!==(_a=this.actor.data.toObject().data.crafting.formulas)&&void 0!==_a?_a:[];actorFormulas.findSplice((f=>f.uuid===itemUuid)),this.actor.update({"data.crafting.formulas":actorFormulas})}})),html.find(".ability-select").on("change",(async event=>{var _a;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_a?_a:"";await this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,"data.ability.value":event.target.value}])})),html.find(".prepared-toggle").on("click",(async event=>{var _a,_b;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_a?_a:"",itemToEdit=null===(_b=this.actor.items.get(itemId))||void 0===_b?void 0:_b.data;if("spellcastingEntry"!==(null==itemToEdit?void 0:itemToEdit.type))throw new Error("Tried to toggle prepared spells on a non-spellcasting entry");const bool=!(itemToEdit.data.showUnpreparedSpells||{}).value;await this.actor.updateEmbeddedDocuments("Item",[{_id:null!=itemId?itemId:"","data.showUnpreparedSpells.value":bool}])})),html.find(".level-prepared-toggle").on("click",(async event=>{var _a,_b,_c;event.preventDefault();const parentNode=$(event.currentTarget).parents(".spellbook-header"),itemId=null!==(_a=parentNode.attr("data-item-id"))&&void 0!==_a?_a:"",lvl=Number(null!==(_b=parentNode.attr("data-level"))&&void 0!==_b?_b:"");if(!Number.isInteger(lvl))return;const itemToEdit=null===(_c=this.actor.items.get(itemId))||void 0===_c?void 0:_c.data;if("spellcastingEntry"!==(null==itemToEdit?void 0:itemToEdit.type))throw new Error("Tried to toggle prepared spells on a non-spellcasting entry");const currentDisplayLevels=itemToEdit.data.displayLevels||{};currentDisplayLevels[lvl]=void 0!==currentDisplayLevels[lvl]&&!currentDisplayLevels[lvl],await this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,"data.displayLevels":currentDisplayLevels}]),this.render()})),html.find(".slotless-level-toggle").on("click",(async event=>{var _a,_b;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_a?_a:"",itemToEdit=null===(_b=this.actor.items.get(itemId))||void 0===_b?void 0:_b.data;if("spellcastingEntry"!==(null==itemToEdit?void 0:itemToEdit.type))throw new Error("Tried to toggle visibility of slotless levels on a non-spellcasting entry");const bool=!(itemToEdit.data.showSlotlessLevels||{}).value;await this.actor.updateEmbeddedDocuments("Item",[{_id:null!=itemId?itemId:"","data.showSlotlessLevels.value":bool}])})),html.find("input[type=text], input[type=number]").on("focus",(event=>{event.currentTarget.select()})))}async onClickDeleteItem(event){var _a;const li=$(event.currentTarget).closest(".item"),itemId=null!==(_a=li.attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId);if(item instanceof _item_1.ConditionPF2e&&item.fromSystem){const references=li.find(".condition-references"),deleteCondition=async()=>{this.actor.decreaseCondition(item,{forceRemove:!0})};if(event.ctrlKey)return void deleteCondition();const content=await renderTemplate("systems/pf2e/templates/actors/delete-condition-dialog.html",{question:game.i18n.format("PF2E.DeleteConditionQuestion",{condition:item.name}),ref:references.html()});new Dialog({title:game.i18n.localize("PF2E.DeleteConditionTitle"),content,buttons:{Yes:{icon:'<i class="fa fa-check"></i>',label:"Yes",callback:deleteCondition},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"Yes"}).render(!0)}else{if(!(item instanceof _item_1.ItemPF2e))throw(0,_util_1.ErrorPF2e)("Item not found");{const deleteItem=async()=>{if(await item.delete(),"lore"===item.type){const skill=item.name.toLowerCase().replace(/\s+/g,"-");await this.actor.update({[`data.skills.-=${skill}`]:null})}else await this.actor.update({[`data.customModifiers.-=${itemId}-attack`]:null,[`data.customModifiers.-=${itemId}-damage`]:null});li.slideUp(200,(()=>this.render(!1)))};if(event.ctrlKey)return void deleteItem();const content=await renderTemplate("systems/pf2e/templates/actors/delete-item-dialog.html",{name:item.name});new Dialog({title:"Delete Confirmation",content,buttons:{Yes:{icon:'<i class="fa fa-check"></i>',label:"Yes",callback:deleteItem},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"Yes"}).render(!0)}}}onClickBrowseCompendia(event){var _a;const filter=null!==(_a=$(event.currentTarget).attr("data-filter"))&&void 0!==_a?_a:null;console.debug(`Filtering on: ${filter}`),game.pf2e.compendiumBrowser.openTab("equipment",filter)}_canDragStart(selector){return!!this.isLootSheet||super._canDragStart(selector)}_canDragDrop(selector){return!!this.isLootSheet||super._canDragDrop(selector)}_onDragStart(event){var _a,_b,_c,_d;const $li=$(event.currentTarget),baseDragData={actorId:this.actor.id,sceneId:null!==(_b=null===(_a=canvas.scene)||void 0===_a?void 0:_a.id)&&void 0!==_b?_b:null,tokenId:null!==(_d=null===(_c=this.actor.token)||void 0===_c?void 0:_c.id)&&void 0!==_d?_d:null},supplementalData=(()=>{const actionIndex=$li.attr("data-action-index"),toggleProperty=$li.attr("data-toggle-property"),toggleLabel=$li.attr("data-toggle-label"),itemType=$li.attr("data-item-type"),itemUuid=$li.attr("data-item-id");return actionIndex?{type:"Action",index:Number(actionIndex)}:toggleProperty?{type:"Toggle",property:toggleProperty,label:toggleLabel}:"formula"===itemType?{type:"CraftingFormula",itemUuid}:null})();return supplementalData?event.dataTransfer.setData("text/plain",JSON.stringify(Object.assign(Object.assign({},baseDragData),supplementalData))):super._onDragStart(event)}async _onSortItem(event,itemData){var _a,_b,_c,_d,_e;const $dropItemEl=$(event.target).closest(".item"),$dropContainerEl=$(event.target).closest(".item-container"),dropSlotType=$dropItemEl.attr("data-item-type"),dropContainerType=$dropContainerEl.attr("data-container-type"),item=this.actor.items.get(itemData._id);if(!item)return[];if(item instanceof _item_1.SpellPF2e&&"spell"===itemData.type){const targetLocation=null!==(_a=$dropContainerEl.attr("data-container-id"))&&void 0!==_a?_a:"",entry=this.actor.spellcasting.get(targetLocation);if(!entry)return console.warn("PF2E System | Failed to load spellcasting entry"),[];if("spellLevel"===dropSlotType){const{level}=$dropItemEl.data();return entry.addSpell(item,level)}if("spell"===dropSlotType){const dropId=null!==(_b=$dropItemEl.attr("data-item-id"))&&void 0!==_b?_b:"",target=this.actor.items.get(dropId);if(target instanceof _item_1.SpellPF2e&&item.id!==dropId){const sourceLocation=item.data.data.location.value,testSibling=(item,test)=>item.isCantrip===test.isCantrip&&(!(!item.isCantrip||!test.isCantrip)||(!(!item.isFocusSpell||!test.isFocusSpell)||item.heightenedLevel===test.heightenedLevel));if(sourceLocation===targetLocation&&testSibling(item,target)){const siblings=entry.spells.filter((spell=>testSibling(item,spell))),sortBefore=item.data.sort>=target.data.sort;return await item.sortRelative({target,siblings,sortBefore}),[target]}return entry.addSpell(item,target.heightenedLevel)}}else if("spellSlot"===dropSlotType){CONFIG.debug.hooks&&console.debug("PF2e System | ***** spell dropped on a spellSlot *****");const dropId=Number($(event.target).closest(".item").attr("data-item-id")),spellLvl=Number($(event.target).closest(".item").attr("data-spell-lvl"));if(Number.isInteger(dropId)&&Number.isInteger(spellLvl)){const allocated=await entry.prepareSpell(item,spellLvl,dropId);if(allocated)return[allocated]}}else if("spellcastingEntry"===dropContainerType){CONFIG.debug.hooks&&console.debug("PF2e System | ***** spell from same actor dropped on a spellcasting entry *****");const dropId=$(event.target).parents(".item-container").attr("data-container-id");return dropId?[await item.update({"data.location.value":dropId})]:[]}}else if("spellcastingEntry"===itemData.type&&"spellcastingEntry"===dropContainerType){const sourceId=itemData._id,dropId=null!==(_c=$dropContainerEl.attr("data-container-id"))&&void 0!==_c?_c:"",source=this.actor.items.get(sourceId),target=this.actor.items.get(dropId);if(source&&target&&source.id!==target.id){const siblings=this.actor.spellcasting.contents,sortBefore=source.data.sort>=target.data.sort;return source.sortRelative({target,siblings,sortBefore}),[target]}}const containerId=null!==(_d=$(event.target).closest('[data-item-is-container="true"]').attr("data-item-id"))&&void 0!==_d?_d:"",container=this.actor.physicalItems.get(containerId);return item instanceof _item_1.PhysicalItemPF2e&&(!container||container instanceof _item_1.ContainerPF2e)&&(null===(_e=item.container)||void 0===_e?void 0:_e.id)!==(null==container?void 0:container.id)?(await this.actor.stowOrUnstow(item,container),[item]):super._onSortItem(event,itemData)}async _onDropItemCreate(itemData){var _a;const itemsData=Array.isArray(itemData)?itemData:[itemData],pcOnlyItems=["ancestry","background","class","feat"];if("character"!==this.actor.type)for(const datum of[...itemsData])pcOnlyItems.includes(datum.type)&&(ui.notifications.error(game.i18n.format("PF2E.Item.CannotAddType",{type:game.i18n.localize(null!==(_a=CONFIG.Item.typeLabels[datum.type])&&void 0!==_a?_a:datum.type.titleCase())})),itemsData.findSplice((item=>item===datum)));return super._onDropItemCreate(itemsData)}async onDropItem(data){return await this._onDropItem({preventDefault(){}},data)}async _onDropItem(event,data){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l;event.preventDefault();const item=await _item_1.ItemPF2e.fromDropData(data);if(!item)return[];const itemData=item.toObject(),actor=this.actor;if(data.actorId===actor.id||actor.isToken&&data.tokenId===(null===(_a=actor.token)||void 0===_a?void 0:_a.id))return this._onSortItem(event,itemData);const sourceItemId=null===(_b=data.data)||void 0===_b?void 0:_b._id;if(data.actorId&&(0,helpers_1.isPhysicalData)(itemData)&&"string"==typeof sourceItemId)return await this.moveItemBetweenActors(event,data.actorId,null!==(_c=data.tokenId)&&void 0!==_c?_c:"",actor.id,null!==(_e=null===(_d=actor.token)||void 0===_d?void 0:_d.id)&&void 0!==_e?_e:"",sourceItemId),[item];const $itemEl=$(event.target).closest(".item"),$containerEl=$(event.target).closest(".item-container"),containerAttribute=$containerEl.attr("data-container-type"),dropContainerType="inventory"===(null===(_f=this._tabs[0])||void 0===_f?void 0:_f.active)&&!containerAttribute?"actorInventory":containerAttribute,craftingTab="crafting"===(null===(_g=this._tabs[0])||void 0===_g?void 0:_g.active);if(item instanceof _item_1.SpellPF2e&&"spell"===itemData.type){if("spellcastingEntry"===dropContainerType){const entryId=null!==(_h=$containerEl.attr("data-container-id"))&&void 0!==_h?_h:"",entry=this.actor.spellcasting.get(entryId);if(!entry)return console.warn("PF2E System | Failed to load spellcasting entry"),[];const level=Math.max(Number($itemEl.attr("data-level"))||0,item.level);return this.actor._setShowUnpreparedSpells(entry.id,null===(_j=itemData.data.level)||void 0===_j?void 0:_j.value),entry.addSpell(item,level)}if("actorInventory"===dropContainerType&&itemData.data.level.value>0){return new scroll_wand_popup_1.ScrollWandPopup(this.actor,{},(async(heightenedLevel,itemType,spell)=>{if("scroll"!==itemType&&"wand"!==itemType)return;const item=await(0,spell_consumables_1.createConsumableFromSpell)(itemType,spell,heightenedLevel);await this._onDropItemCreate(item)}),item).render(!0),[item]}return[]}if("spellcastingEntry"===itemData.type)return[];if(item instanceof _item_1.KitPF2e)return item.dumpContents(this.actor),[item];if("condition"===itemData.type){const value=data.value;"number"==typeof value&&itemData.data.value.isValued&&(itemData.data.value.value=value);const token=(null===(_k=actor.token)||void 0===_k?void 0:_k.object)?actor.token.object:canvas.tokens.controlled.find((canvasToken=>{var _a;return(null===(_a=canvasToken.actor)||void 0===_a?void 0:_a.id)===actor.id}));if(actor.canUserModify(game.user,"update")){if(token){const condition=await game.pf2e.ConditionManager.addConditionToToken(itemData,token);return condition?[condition]:[]}return await actor.increaseCondition(itemData.data.slug,{min:itemData.data.value.value}),[item]}{const translations=localize_1.LocalizePF2e.translations.PF2E;return ui.notifications.error(translations.ErrorMessage.NoUpdatePermission),[]}}if("effect"===itemData.type&&data&&"level"in data){const level=data.level;"number"==typeof level&&level>=0&&(itemData.data.level.value=level)}else if(item instanceof _item_1.PhysicalItemPF2e&&actor instanceof _actor_1.CharacterPF2e&&craftingTab){const actorFormulas=actor.data.toObject().data.crafting.formulas;return actorFormulas.some((f=>f.uuid===item.uuid))||(actorFormulas.push({uuid:item.uuid}),await actor.update({"data.crafting.formulas":actorFormulas})),[item]}if((0,helpers_1.isPhysicalData)(itemData)){const containerId=(null===(_l=$(event.target).closest('[data-item-is-container="true"]').attr("data-item-id"))||void 0===_l?void 0:_l.trim())||null;this.actor.itemTypes.backpack.find((container=>container.id===containerId))&&(itemData.data.containerId.value=containerId),"tiny"===actor.size&&(itemData.data.size.value="tiny")}return this._onDropItemCreate(itemData)}async _onDropFolder(_event,data){if(!this.actor.isOwner||"Item"!==data.documentName)return[];const folder=await folder_1.FolderPF2e.fromDropData(data);if(!folder)return[];const itemSources=folder.flattenedContents.map((item=>item.toObject()));return this._onDropItemCreate(itemSources)}async moveItemBetweenActors(event,sourceActorId,sourceTokenId,targetActorId,targetTokenId,itemId){var _a,_b,_c,_d,_e,_f,_g;const sourceActor=null!==(_c=null===(_b=null===(_a=canvas.scene)||void 0===_a?void 0:_a.tokens.get(null!=sourceTokenId?sourceTokenId:""))||void 0===_b?void 0:_b.actor)&&void 0!==_c?_c:game.actors.get(sourceActorId),targetActor=null!==(_f=null===(_e=null===(_d=canvas.scene)||void 0===_d?void 0:_d.tokens.get(null!=targetTokenId?targetTokenId:""))||void 0===_e?void 0:_e.actor)&&void 0!==_f?_f:game.actors.get(targetActorId),item=null==sourceActor?void 0:sourceActor.items.get(itemId);if(!sourceActor||!targetActor)return Promise.reject(new Error("PF2e System | Unexpected missing actor(s)"));if(!(item instanceof _item_1.PhysicalItemPF2e))return Promise.reject(new Error("PF2e System | Missing or invalid item"));const container=$(event.target).parents('[data-item-is-container="true"]'),containerId=void 0!==container[0]?null===(_g=container[0].dataset.itemId)||void 0===_g?void 0:_g.trim():void 0,sourceItemQuantity=Number(item.data.data.quantity.value);if(sourceItemQuantity>1){new move_loot_popup_1.MoveLootPopup(sourceActor,{maxQuantity:sourceItemQuantity},(quantity=>{sourceActor.transferItemToActor(targetActor,item,quantity,containerId)})).render(!0)}else sourceActor.transferItemToActor(targetActor,item,1,containerId)}onItemRoll(event){event.preventDefault();const itemId=$(event.currentTarget).parents(".item").attr("data-item-id"),item=this.actor.items.get(null!=itemId?itemId:"");null==item||item.toChat(event)}toggleContainer(event){var _a;const itemId=$(event.currentTarget).parents(".item").data("item-id"),item=this.actor.items.get(itemId);if(!(item instanceof _item_1.ContainerPF2e))return;const isCollapsed=null!==(_a=item.data.data.collapsed.value)&&void 0!==_a&&_a;item.update({"data.collapsed.value":!isCollapsed})}onClickCreateItem(event){var _a;event.preventDefault();const header=event.currentTarget,data=duplicate(header.dataset);if(data.img=`systems/pf2e/icons/default-icons/${data.type}.svg`,"feat"===data.type){const featTypeString=game.i18n.localize(`PF2E.FeatType${data.featType.capitalize()}`);data.name=`${game.i18n.localize("PF2E.NewLabel")} ${featTypeString}`,mergeObject(data,{"data.featType.value":data.featType})}else if("action"===data.type){const newLabel=game.i18n.localize("PF2E.NewLabel"),actionTypeLabel=game.i18n.localize(`PF2E.ActionType${data.actionType.capitalize()}`);data.name=`${newLabel} ${actionTypeLabel}`,mergeObject(data,{"data.actionType.value":data.actionType})}else if("melee"===data.type)data.name=game.i18n.localize(`PF2E.NewPlaceholders.${data.type.capitalize()}`),mergeObject(data,{"data.weaponType.value":data.actionType});else if("spell"===data.type){data.level=Number(null!==(_a=data.level)&&void 0!==_a?_a:1),this.actor._setShowUnpreparedSpells(data.location,data.level);const newLabel=game.i18n.localize("PF2E.NewLabel"),levelLabel=game.i18n.localize(`PF2E.SpellLevel${data.level}`),spellLabel=data.level>0?game.i18n.localize("PF2E.SpellLabel"):"";data.name=`${newLabel} ${levelLabel} ${spellLabel}`,mergeObject(data,{"data.level.value":data.level,"data.location.value":data.location});const currentLvlToDisplay={};currentLvlToDisplay[data.level]=!0,this.actor.updateEmbeddedDocuments("Item",[{_id:data.location,"data.showUnpreparedSpells.value":!0,"data.displayLevels":currentLvlToDisplay}])}else"lore"===data.type?data.name="npc"===this.actor.type?game.i18n.localize("PF2E.SkillLabel"):game.i18n.localize("PF2E.NewPlaceholders.Lore"):data.name=game.i18n.localize(`PF2E.NewPlaceholders.${data.type.capitalize()}`);this.actor.createEmbeddedDocuments("Item",[data])}createSpellcastingEntry(event){event.preventDefault(),(0,spellcasting_dialog_1.createSpellcastingDialog)(event,{callback:result=>{var _a;const{spellcastingType,tradition,ability,flexible}=result,name="ritual"===spellcastingType?game.i18n.localize(CONFIG.PF2E.preparationType.ritual):game.i18n.format("PF2E.SpellCastingFormat",{preparationType:game.i18n.localize(null!==(_a=CONFIG.PF2E.preparationType[spellcastingType])&&void 0!==_a?_a:""),traditionSpells:game.i18n.format(`PF2E.TraditionSpells.${tradition.titleCase()}`,{tradition:game.i18n.localize(CONFIG.PF2E.magicTraditions[tradition||"arcane"])})}),actor=this.actor;if(!(actor instanceof _actor_1.CharacterPF2e||actor instanceof _actor_1.NPCPF2e))return;const data={name,type:"spellcastingEntry",data:{ability:{value:ability},spelldc:{value:0,dc:0,mod:0},tradition:{value:tradition},prepared:{value:spellcastingType,flexible:null!=flexible?flexible:void 0},showUnpreparedSpells:{value:!0}}};this.actor.createEmbeddedDocuments("Item",[data])}})}editSpellcastingEntry(event){const{containerId}=$(event.target).closest("[data-container-id]").data(),entry=this.actor.spellcasting.get(containerId);entry?(0,spellcasting_dialog_1.createSpellcastingDialog)(event,{entry,callback:result=>{entry.update({"data.tradition.value":result.tradition,"data.ability.value":result.ability,"data.prepared.flexible":result.flexible})}}):console.warn("PF2E System | Failed to load spellcasting entry")}removeSpellcastingEntry(event){var _a;event.preventDefault();const li=$(event.currentTarget).parents("[data-container-id]"),itemId=null!==(_a=li.attr("data-container-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId);item&&renderTemplate("systems/pf2e/templates/actors/delete-spellcasting-dialog.html").then((html=>{new Dialog({title:"Delete Confirmation",content:html,buttons:{Yes:{icon:'<i class="fa fa-check"></i>',label:"Yes",callback:async()=>{console.debug("PF2e System | Deleting Spell Container: ",item.name);const itemsToDelete=[];for(const item of this.actor.itemTypes.spell)item.data.data.location.value===itemId&&itemsToDelete.push(item.id);itemsToDelete.push(item.id),await this.actor.deleteEmbeddedDocuments("Item",itemsToDelete),li.slideUp(200,(()=>this.render(!1)))}},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"Yes"}).render(!0)}))}onAddCoinsPopup(event){event.preventDefault(),new add_coins_popup_1.AddCoinsPopup(this.actor,{}).render(!0)}onRemoveCoinsPopup(event){event.preventDefault(),new remove_coins_popup_1.RemoveCoinsPopup(this.actor,{}).render(!0)}onSellAllTreasure(event){event.preventDefault(),renderTemplate("systems/pf2e/templates/actors/sell-all-treasure-dialog.html").then((html=>{new Dialog({title:game.i18n.localize("PF2E.SellAllTreasureTitle"),content:html,buttons:{Yes:{icon:'<i class="fa fa-check"></i>',label:"Yes",callback:async()=>{console.debug("PF2e System | Selling all treasure: ",this.actor),(0,helpers_2.sellAllTreasure)(this.actor)}},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"Yes"}).render(!0)}))}onTraitSelector(event){var _a,_b,_c;event.preventDefault();const $anchor=$(event.currentTarget),selectorType=null!==(_a=$anchor.attr("data-trait-selector"))&&void 0!==_a?_a:"";if(!(0,_util_1.tupleHasValue)(trait_selector_1.TAG_SELECTOR_TYPES,selectorType))throw(0,_util_1.ErrorPF2e)(`Unrecognized trait selector type "${selectorType}"`);if("basic"===selectorType){const objectProperty=null!==(_b=$anchor.attr("data-property"))&&void 0!==_b?_b:"",title=$anchor.attr("data-title"),configTypes=(null!==(_c=$anchor.attr("data-config-types"))&&void 0!==_c?_c:"").split(",").map((type=>type.trim())).filter((tag=>(0,_util_1.tupleHasValue)(trait_selector_1.SELECTABLE_TAG_FIELDS,tag)));this.tagSelector("basic",{objectProperty,configTypes,title})}else this.tagSelector(selectorType)}tagSelector(selectorType,options){if("basic"===selectorType&&options&&"objectProperty"in options)new trait_selector_1.TagSelectorBasic(this.object,options).render(!0);else{if("basic"===selectorType)throw(0,_util_1.ErrorPF2e)("Insufficient options provided to render basic tag selector");new(0,{resistances:trait_selector_1.ResistanceSelector,senses:trait_selector_1.SenseSelector,"speed-types":trait_selector_1.SpeedSelector,weaknesses:trait_selector_1.WeaknessSelector}[selectorType])(this.object,options).render(!0)}}_getHeaderButtons(){const buttons=super._getHeaderButtons(),sheetButton=buttons.find((button=>"configure-sheet"===button.class));return!(Object.keys(CONFIG.Actor.sheetClasses[this.actor.type]).length>1)&&sheetButton&&buttons.splice(buttons.indexOf(sheetButton),1),buttons}async _renderInner(data,options){return this.itemRenderer.saveAndRestoreState((()=>super._renderInner(data,options)))}}exports.ActorSheetPF2e=ActorSheetPF2e},26910:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CreatureSheetItemRenderer=exports.ItemSummaryRendererPF2e=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),helpers_1=__webpack_require__(44252),inline_roll_links_1=__webpack_require__(27542);class ItemSummaryRendererPF2e{constructor(sheet){this.sheet=sheet}activateListeners($html){$html.find(".item .item-name h4, .item .melee-name h4").on("click",(async event=>{const $target=$(event.currentTarget),$li=$target.closest("li");await this.toggleItemSummary($li);const $summary=$target.closest("li.expandable").find(".item-summary");"none"===$summary.css("display")?$summary.slideDown():$summary.slideUp()}))}async toggleItemSummary($li,options={}){const itemId=$li.attr("data-item-id"),itemType=$li.attr("data-item-type");if("spellSlot"===itemType)return;const actor=this.sheet.actor,item="formula"===itemType?await fromUuid(null!=itemId?itemId:""):actor.items.get(null!=itemId?itemId:"");if(item instanceof _item_1.ItemPF2e&&item&&!["condition","spellcastingEntry"].includes(item.type)){if($li.hasClass("expanded")){const $summary=$li.children(".item-summary");options.instant?$summary.remove():$summary.slideUp(200,(()=>$summary.remove()))}else{const $summary=$('<div class="item-summary">'),chatData=item.getChatData({secrets:actor.isOwner},$li.data());this.renderItemSummary($summary,item,chatData),$li.append($summary),options.instant?inline_roll_links_1.InlineRollsLinks.listen($summary):$summary.hide().slideDown(200,(()=>{inline_roll_links_1.InlineRollsLinks.listen($summary)}))}$li.toggleClass("expanded")}}renderItemSummary($div,item,chatData){var _a,_b;const localize=game.i18n.localize.bind(game.i18n),itemIsIdentifiedOrUserIsGM=item instanceof _item_1.PhysicalItemPF2e&&(item.isIdentified||game.user.isGM),$rarityTag=itemIsIdentifiedOrUserIsGM?(()=>{const mystifiedClass=item.isIdentified?"":" mystified",rarityLabel=CONFIG.PF2E.rarityTraits[item.rarity];return $(`<span class="tag tag_secondary${mystifiedClass}">${localize(rarityLabel)}</span>`)})():null,$priceLabel=itemIsIdentifiedOrUserIsGM&&"coins"!==item.data.data.stackGroup.value?(()=>{const priceLabel=game.i18n.format("PF2E.Item.Physical.PriceLabel",{price:item.price});return $(`<p>${priceLabel}</p>`)})():$(),properties=null!==(_b=null===(_a=chatData.properties)||void 0===_a?void 0:_a.filter((property=>"string"==typeof property)).flatMap((property=>{const mystifiedClass=item instanceof _item_1.PhysicalItemPF2e&&!item.isIdentified?" mystified":"";return game.user.isGM||!mystifiedClass?$(`<span class="tag tag_secondary${mystifiedClass}">${localize(property)}</span>`):[]})))&&void 0!==_b?_b:[],allTags=[$rarityTag,...Array.isArray(chatData.traits)?chatData.traits.filter((trait=>!trait.excluded)).map((trait=>{const label=game.i18n.localize(trait.label),classes=["tag",trait.mystified?"mystified":[]].flat().join(" "),$trait=$(`<span class="${classes}">${label}</span>`);if(trait.description){const description=game.i18n.localize(trait.description);$trait.attr({title:description}).tooltipster({maxWidth:400,theme:"crb-hover",contentAsHTML:!0})}return $trait})):[],...properties].filter((tag=>!!tag)),$properties=$('<div class="item-properties tags"></div>').append(...allTags),description=(0,helpers_1.isItemSystemData)(chatData)?chatData.description.value:game.pf2e.TextEditor.enrichHTML(item.description);$div.append($properties,$priceLabel,`<div class="item-description">${description}</div>`)}async saveAndRestoreState(callback){const $element=this.sheet.element,expandedSummaryElements=$element.find(".item.expanded[data-item-summary-id]"),expandedItemElements=$element.find(".item.expanded[data-item-id]:not([data-item-summary-id])"),expandedActionElements=$element.find(".item.expanded[data-action-index]"),openActionIdxs=new Set(expandedActionElements.map(((_i,el)=>el.dataset.actionIndex))),openItemsIds=expandedItemElements.map(((_,el)=>$(el).attr("data-item-id"))).get(),openSummaryIds=expandedSummaryElements.map(((_,el)=>$(el).attr("data-item-summary-id"))).get(),result=await callback.apply(null);for(const itemId of openItemsIds){const $item=result.find(`.item[data-item-id=${itemId}]:not([data-item-summary-id])`);this.toggleItemSummary($item,{instant:!0})}for(const summaryId of openSummaryIds)this.toggleItemSummary(result.find(`.item[data-item-summary-id=${summaryId}]`),{instant:!0});for(const elementIdx of openActionIdxs)result.find(`.item[data-action-index=${elementIdx}]`).toggleClass("expanded");return result}}exports.ItemSummaryRendererPF2e=ItemSummaryRendererPF2e;exports.CreatureSheetItemRenderer=class extends ItemSummaryRendererPF2e{renderItemSummary($div,item,chatData){super.renderItemSummary($div,item,chatData);const actor=item.actor,buttons=$('<div class="item-buttons"></div>');switch(item.data.type){case"spell":if(chatData.isSave){const save=chatData.save;buttons.append(`<span>${save.label}</span>`)}actor instanceof _actor_1.CharacterPF2e&&(chatData.isAttack&&buttons.append(`<span><button class="spell_attack" data-action="spellAttack">${game.i18n.localize("PF2E.AttackLabel")}</button></span>`),chatData.hasDamage&&buttons.append(`<span><button class="spell_damage" data-action="spellDamage">${chatData.damageLabel}: ${chatData.formula}</button></span>`));break;case"consumable":item instanceof _item_1.ConsumablePF2e&&item.charges.max>0&&item.isIdentified&&buttons.append(`<span><button class="consume" data-action="consume">${game.i18n.localize("PF2E.ConsumableUseLabel")} ${item.name}</button></span>`)}$div.append(buttons),buttons.find("button").on("click",(event=>{event.preventDefault(),event.stopPropagation();const spell=item instanceof _item_1.SpellPF2e?item:item instanceof _item_1.ConsumablePF2e?item.embeddedSpell:null;switch(event.target.dataset.action){case"spellAttack":null==spell||spell.rollAttack(event);break;case"spellDamage":null==spell||spell.rollDamage(event);break;case"consume":item instanceof _item_1.ConsumablePF2e&&item.consume()}}))}}},87e3:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LootNPCsPopup=void 0;const _util_1=__webpack_require__(6945);class LootNPCsPopup extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.id="loot-NPCs",options.classes=[],options.title="Loot NPCs",options.template="systems/pf2e/templates/actors/loot/loot-npcs-popup.html",options.width="auto",options}activateListeners(html){super.activateListeners(html)}async _updateObject(_event,formData){var _a;const itemData=[],selectionData=Array.isArray(formData.selection)?formData.selection:[formData.selection];for(let i=0;i<selectionData.length;i++){const token=canvas.tokens.placeables.find((token=>{var _a;return token.actor&&token.id===(null===(_a=this.form[i])||void 0===_a?void 0:_a.id)}));if(!token)throw(0,_util_1.ErrorPF2e)(`Token ${null===(_a=this.form[i])||void 0===_a?void 0:_a.id} not found`);const currentSource=token.actor;if(selectionData[i]&&currentSource){const currentSourceItemData=currentSource.physicalItems.map((item=>item.toObject()));itemData.push(...currentSourceItemData);const idsToDelete=currentSourceItemData.map((item=>item._id));currentSource.deleteEmbeddedDocuments("Item",idsToDelete)}}itemData.length>0&&await this.object.createEmbeddedDocuments("Item",itemData)}async getData(){const tokenInfo=canvas.tokens.controlled.filter((token=>token.actor&&token.actor.id!==this.object.id)).map((token=>({id:token.id,name:token.name,checked:token.actor.hasPlayerOwner})));return Object.assign(Object.assign({},await super.getData()),{tokenInfo})}}exports.LootNPCsPopup=LootNPCsPopup},46527:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MoveLootPopup=void 0;class MoveLootPopup extends FormApplication{constructor(object,options,callback){super(object,options),this.onSubmitCallback=callback}async getData(){return Object.assign(Object.assign({},await super.getData()),{maxQuantity:this.options.maxQuantity})}static get defaultOptions(){return Object.assign(Object.assign({},super.defaultOptions),{id:"MoveLootPopup",classes:[],title:game.i18n.localize("PF2E.loot.MoveLootPopupTitle"),template:"systems/pf2e/templates/popups/loot/move-loot-popup.html",width:"auto",maxQuantity:1})}async _updateObject(_event,formData){this.onSubmitCallback&&this.onSubmitCallback(formData.quantity)}}exports.MoveLootPopup=MoveLootPopup},4048:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AddCoinsPopup=void 0;const helpers_1=__webpack_require__(71046);class AddCoinsPopup extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.id="add-coins",options.classes=[],options.title="Add Coins",options.template="systems/pf2e/templates/actors/add-coins.html",options.width="auto",options}async _updateObject(_event,formData){const actor=this.object;(0,helpers_1.addCoins)(actor,{coins:{pp:formData.pp,gp:formData.gp,sp:formData.sp,cp:formData.cp},combineStacks:formData.combineStacks})}}exports.AddCoinsPopup=AddCoinsPopup},25289:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DistributeCoinsPopup=void 0;const helpers_1=__webpack_require__(71046),base_1=__webpack_require__(65532),character_1=__webpack_require__(886);class DistributeCoinsPopup extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.id="distribute-coins",options.classes=[],options.title="Distribute Coins",options.template="systems/pf2e/templates/actors/distribute-coins.html",options.width="auto",options}async _updateObject(_event,formData){var e_1,_a;const thisActor=this.object,selectedActors=formData.actorIds.flatMap((actorId=>{const maybeActor=game.actors.get(actorId);return maybeActor instanceof character_1.CharacterPF2e?maybeActor:[]})),playerCount=selectedActors.length;if(thisActor instanceof base_1.ActorPF2e){const coinShare={pp:0,gp:0,sp:0,cp:0},thisActorCurrency=(0,helpers_1.calculateValueOfCurrency)(thisActor.items.map((item=>item.data)));if(formData.breakCoins){const thisActorCopperValue=thisActorCurrency.cp+10*thisActorCurrency.sp+100*thisActorCurrency.gp+1e3*thisActorCurrency.pp,copperToDistribute=Math.trunc(thisActorCopperValue/playerCount);if(0===copperToDistribute)return void ui.notifications.warn("Nothing to distribute");(0,helpers_1.attemptToRemoveCoinsByValue)({actor:thisActor,coinsToRemove:{pp:0,gp:0,sp:0,cp:copperToDistribute*playerCount}}),coinShare.cp=copperToDistribute%10,coinShare.sp=Math.trunc(copperToDistribute/10)%10,coinShare.gp=Math.trunc(copperToDistribute/100)%10,coinShare.pp=Math.trunc(copperToDistribute/1e3)}else{if(coinShare.pp=Math.trunc(thisActorCurrency.pp/playerCount),coinShare.cp=Math.trunc(thisActorCurrency.cp/playerCount),coinShare.gp=Math.trunc(thisActorCurrency.gp/playerCount),coinShare.sp=Math.trunc(thisActorCurrency.sp/playerCount),0===coinShare.pp&&0===coinShare.gp&&0===coinShare.sp&&0===coinShare.cp)return void ui.notifications.warn("Nothing to distribute");(0,helpers_1.removeCoins)(thisActor,{coins:{pp:coinShare.pp*playerCount,gp:coinShare.gp*playerCount,sp:coinShare.sp*playerCount,cp:coinShare.cp*playerCount}})}let message="Distributed ";0!==coinShare.pp&&(message+=`${coinShare.pp} pp `),0!==coinShare.gp&&(message+=`${coinShare.gp} gp `),0!==coinShare.sp&&(message+=`${coinShare.sp} sp `),0!==coinShare.cp&&(message+=`${coinShare.cp} cp `);message+=`${playerCount>1?"each ":""}from ${thisActor.name} to `;try{for(var selectedActors_1_1,selectedActors_1=__asyncValues(selectedActors);!(selectedActors_1_1=await selectedActors_1.next()).done;){const actor=selectedActors_1_1.value;await(0,helpers_1.addCoins)(actor,{coins:coinShare,combineStacks:!0});const index=selectedActors.indexOf(actor);message+=0===index?`${actor.name}`:index<playerCount-1?`, ${actor.name}`:` and ${actor.name}.`}}catch(e_1_1){e_1={error:e_1_1}}finally{try{selectedActors_1_1&&!selectedActors_1_1.done&&(_a=selectedActors_1.return)&&await _a.call(selectedActors_1)}finally{if(e_1)throw e_1.error}}ChatMessage.create({user:game.user.id,type:CONST.CHAT_MESSAGE_TYPES.OTHER,content:message})}}async _onSubmit(event,options={}){var _a;const actorIds=Array.from(this.form.elements).flatMap((element=>element instanceof HTMLInputElement&&"actorIds"===element.name&&element.checked?element.value:[]));return options.updateData=mergeObject(null!==(_a=options.updateData)&&void 0!==_a?_a:{},{actorIds}),super._onSubmit(event,options)}async getData(){const sheetData=await super.getData(),playerActors=game.actors.filter((actor=>actor.hasPlayerOwner&&actor instanceof character_1.CharacterPF2e));return sheetData.actorInfo=playerActors.map((actor=>({id:actor.id,name:actor.name,checked:game.users.players.some((user=>{var _a;return user.active&&(null===(_a=user.character)||void 0===_a?void 0:_a.id)===actor.id}))}))),sheetData}}exports.DistributeCoinsPopup=DistributeCoinsPopup},67441:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.IdentifyItemPopup=void 0;const identification_1=__webpack_require__(79206),_util_1=__webpack_require__(6945);class IdentifyItemPopup extends FormApplication{static get defaultOptions(){return Object.assign(Object.assign({},super.defaultOptions),{id:"identify-item",title:game.i18n.localize("PF2E.identification.Identify"),template:"systems/pf2e/templates/actors/identify-item.html",width:"auto",classes:["identify-popup"]})}get item(){return this.object}async getData(){const item=this.object,notMatchingTraditionModifier=game.settings.get("pf2e","identifyMagicNotMatchingTraditionModifier"),proficiencyWithoutLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant"),dcs=(0,identification_1.identifyItem)(item,{proficiencyWithoutLevel,notMatchingTraditionModifier});return Object.assign(Object.assign({},await super.getData()),{isMagic:dcs instanceof identification_1.IdentifyMagicDCs,isAlchemical:dcs instanceof identification_1.IdentifyAlchemyDCs,dcs})}activateListeners($form){$form.find("button.update-identification").on("click",(event=>{const $button=$(event.delegateTarget);this.submit({updateData:{status:$button.val()}})})),$form.find("button.post-skill-checks").on("click",(()=>{const item=this.item,itemImg=item.data.data.identification.unidentified.img,itemName=item.data.data.identification.unidentified.name,identifiedName=item.data.data.identification.identified.name,skillArray=[];$("div#identify-item").find("tr").each((function(){const description=$(this).find("th").text();description&&skillArray.push({description,skill:description.toLowerCase(),DC:$(this).find("td").text()})})),renderTemplate("systems/pf2e/templates/actors/identify-item-chat-skill-checks.html",{itemImg,itemName,identifiedName,skillArray}).then((template=>{ChatMessage.create({user:game.user.id,content:template})}))}))}async _updateObject(_event,formData){const status=formData.status;"string"==typeof status&&(0,_util_1.tupleHasValue)(["identified"],status)&&await this.item.setIdentificationStatus(status)}}exports.IdentifyItemPopup=IdentifyItemPopup},23958:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ManageCombatProficiencies=void 0;const localize_1=__webpack_require__(41332);exports.ManageCombatProficiencies={add:async function(actor,event){const translations=localize_1.LocalizePF2e.translations.PF2E,weaponGroups=CONFIG.PF2E.weaponGroups,baseWeapons=translations.Weapon.Base,template=await renderTemplate("systems/pf2e/templates/actors/add-combat-proficiency-dialog.html",{message:translations.AddCombatProficiency.Message,weaponGroups,baseWeapons});new Dialog({title:localize_1.LocalizePF2e.translations.PF2E.AddCombatProficiency.Title,content:template,buttons:{add:{icon:'<i class="fas fa-check"></i>',label:localize_1.LocalizePF2e.translations.PF2E.AddShortLabel,callback:async $dialog=>{const selection=$dialog.find('select[name="proficiency"]').val();if("string"==typeof selection&&selection){const proficiencyKey=selection in weaponGroups?`weapon-group-${selection}`:`weapon-base-${selection}`;await actor.addCombatProficiency(proficiencyKey);const $tab=$(event.currentTarget).closest(".tab.skills");$tab.animate({scrollTop:$tab.height()},"slow")}}},cancel:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("Cancel")}},default:"cancel"}).render(!0)},remove:function(actor,event){const weaponGroups=CONFIG.PF2E.weaponGroups,baseWeapons=localize_1.LocalizePF2e.translations.PF2E.Weapon.Base,key=$(event.currentTarget).closest("li.skill.custom").data("skill"),translationKey=key.replace(/^weapon-(?:base|group)-/,""),name=translationKey in weaponGroups?game.i18n.localize(weaponGroups[translationKey]):baseWeapons[translationKey],dialogText=localize_1.LocalizePF2e.translations.PF2E.RemoveCombatProficiency,message=game.i18n.format(dialogText.Message,{proficiency:name});Dialog.confirm({title:dialogText.Title,content:`<p>${message}</p>`,defaultYes:!1,yes:()=>{key in actor.data.data.martial&&actor.removeCombatProficiency(key)}})}}},75242:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RecallKnowledgePopup=void 0;const _util_1=__webpack_require__(6945);class RecallKnowledgePopup extends Application{constructor(options,data){super(options),this.data=data}static get defaultOptions(){const options=super.defaultOptions;return options.id="recall-knowledge-breakdown",options.classes=[],options.title=game.i18n.localize("PF2E.RecallKnowledge.BreakdownTitle"),options.template="systems/pf2e/templates/actors/recall-knowledge.html",options.width=630,options}async getData(){const data=this.data;return{specificLoreAttempts:this.padAttempts(data.specificLoreDC.progression),unspecificLoreAttempts:this.padAttempts(data.unspecificLoreDC.progression),skills:Array.from(data.skills).sort().map((skill=>({name:CONFIG.PF2E.skills[skill],attempts:this.padAttempts(data.skill.progression)})))}}padAttempts(attempts){return(0,_util_1.padArray)(attempts.map((attempt=>attempt.toString())),6,"-")}}exports.RecallKnowledgePopup=RecallKnowledgePopup},34302:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RemoveCoinsPopup=void 0;const helpers_1=__webpack_require__(71046);class RemoveCoinsPopup extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.id="remove-coins",options.classes=[],options.title="Remove Coins",options.template="systems/pf2e/templates/actors/remove-coins.html",options.width="auto",options}async _updateObject(_event,formData){const actor=this.object,coinsToRemove={pp:formData.pp,gp:formData.gp,sp:formData.sp,cp:formData.cp};if(formData.removeByValue)await(0,helpers_1.attemptToRemoveCoinsByValue)({actor,coinsToRemove})||ui.notifications.warn("Insufficient coins");else{const actorCoins=(0,helpers_1.calculateValueOfCurrency)(actor.items.map((item=>item.data)));coinsToRemove.pp<=actorCoins.pp&&coinsToRemove.gp<=actorCoins.gp&&coinsToRemove.sp<=actorCoins.sp&&coinsToRemove.cp<=actorCoins.cp?(0,helpers_1.removeCoins)(actor,{coins:coinsToRemove}):ui.notifications.warn("Insufficient coins")}}}exports.RemoveCoinsPopup=RemoveCoinsPopup},30837:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ScrollWandPopup=void 0;const _util_1=__webpack_require__(6945);class ScrollWandPopup extends FormApplication{constructor(object,options,callback,spell){super(object,options),this.spell=spell,this.onSubmitCallback=callback}static get defaultOptions(){const options=super.defaultOptions;return options.classes=[],options.title=game.i18n.localize("PF2E.ScrollWandPopup.title"),options.template="systems/pf2e/templates/popups/scroll-wand-popup.html",options.width="auto",options}async getData(){const sheetData=await super.getData();if(!this.spell)throw(0,_util_1.ErrorPF2e)("ScrollWandPopup | Could not read spelldata");const minimumLevel=this.spell.level,levels=Array.from(Array(11-minimumLevel).keys()).map((index=>minimumLevel+index));return sheetData.validLevels=levels,sheetData}async _updateObject(_event,formData){"wand"===formData.itemType&&10===formData.level?ui.notifications.warn(game.i18n.localize("PF2E.ScrollWandPopup.10thLevelWand")):this.onSubmitCallback&&this.spell&&this.onSubmitCallback(formData.level,formData.itemType,this.spell)}}exports.ScrollWandPopup=ScrollWandPopup},93198:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createSpellcastingDialog=void 0;const values_1=__webpack_require__(35089);class SpellcastingCreateAndEditDialog extends Application{constructor(options,dialogOptions){var _a,_b,_c,_d,_e,_f,_g,_h;super(options),this.dialogOptions=dialogOptions,this.entry=this.dialogOptions.entry,this.result={spellcastingType:null!==(_b=null===(_a=this.entry)||void 0===_a?void 0:_a.data.data.prepared.value)&&void 0!==_b?_b:"innate",tradition:null!==(_d=null===(_c=this.entry)||void 0===_c?void 0:_c.tradition)&&void 0!==_d?_d:"arcane",ability:null!==(_f=null===(_e=this.entry)||void 0===_e?void 0:_e.ability)&&void 0!==_f?_f:"cha",flexible:null!==(_h=null===(_g=this.entry)||void 0===_g?void 0:_g.data.data.prepared.flexible)&&void 0!==_h&&_h}}static get defaultOptions(){const options=super.defaultOptions;return options.id="spellcasting-dialog",options.classes=[],options.title=game.i18n.localize("PF2E.SpellcastingTypeLabel"),options.template="systems/pf2e/templates/actors/spellcasting-dialog.html",options.width=300,options}activateListeners($html){const typeField=$html.find('[name="spellcastingType"]'),traditionField=$html.find('[name="magicTradition"]'),abilityField=$html.find('[name="ability"]'),flexibleField=$html.find('[name="flexible"]'),updateData=()=>{this.result.spellcastingType=String(typeField.val()),this.result.tradition=String(traditionField.val()),this.result.ability=String(abilityField.val()),this.result.flexible=Boolean(flexibleField.prop("checked")),"ritual"===this.result.spellcastingType&&(this.result.tradition="",this.result.ability=""),"prepared"!==this.result.spellcastingType&&(this.result.flexible=!1)};typeField.on("change",(()=>{const wasRitual="ritual"===this.result.spellcastingType;updateData(),wasRitual&&"ritual"!==this.result.spellcastingType&&(this.result.tradition="arcane",this.result.ability="cha"),"innate"===this.result.spellcastingType&&(this.result.ability="cha"),this.render(!0)})),$html.find("[data-button='finish']").on("click",(()=>{updateData(),this.dialogOptions.callback(this.result,$html),this.close()}))}getData(){const abilities=Object.fromEntries(values_1.ABILITY_ABBREVIATIONS.map((key=>[key,CONFIG.PF2E.abilities[key]])));return{magicTraditions:CONFIG.PF2E.magicTraditions,spellcastingTypes:CONFIG.PF2E.preparationType,entry:this.entry,data:this.result,abilities}}}exports.createSpellcastingDialog=async function(event,options){return new SpellcastingCreateAndEditDialog({top:event.clientY-80,left:window.innerWidth-710,height:"auto"},options).render(!0)}},45357:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TrickMagicItemPopup=void 0;const spell_consumables_1=__webpack_require__(87458),_actor_1=__webpack_require__(85530),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),values_1=__webpack_require__(35089),trick_1=__webpack_require__(73041);exports.TrickMagicItemPopup=class{constructor(item){if(this.translations=localize_1.LocalizePF2e.translations.PF2E.TrickMagicItemPopup,this.item=item,"consumable"!==item.data.type)throw(0,_util_1.ErrorPF2e)("Unexpected item used for Trick Magic Item");this.checkDC=(0,spell_consumables_1.calculateTrickMagicItemCheckDC)(item.data),item.actor instanceof _actor_1.CharacterPF2e?(this.actor=item.actor,this.initialize()):ui.notifications.warn(this.translations.InvalidActor)}async initialize(){const buttons=trick_1.TRICK_MAGIC_SKILLS.filter((skill=>skill in this.checkDC)).map((value=>({value,label:game.i18n.localize(`PF2E.Skill${value.capitalize()}`)}))).reduce(((accumulated,skill)=>{const button={icon:'<i class="fas fa-dice-d20"></i>',label:skill.label,callback:()=>this.handleTrickItem(skill.value)};return Object.assign(Object.assign({},accumulated),{[skill.value]:button})}),{});new Dialog({title:this.translations.Title,content:`<p>${this.translations.Label}</p>`,buttons},{classes:["dialog","trick-magic-item"],width:"auto"}).render(!0)}handleTrickItem(skill){var _a;const options=["all","skill-check","action:trick-magic-item"].concat(values_1.SKILL_DICTIONARY[skill]);this.actor.data.data.skills[skill].roll({options,dc:{value:null!==(_a=this.checkDC[skill])&&void 0!==_a?_a:0}});const trick=new trick_1.TrickMagicItemEntry(this.actor,skill);this.item.castEmbeddedSpell(trick)}}},95438:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorSpellcasting=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945);class ActorSpellcasting extends Collection{constructor(actor,entries){super(null==entries?void 0:entries.map((entry=>[entry.id,entry]))),this.actor=actor}get spellcastingFeatures(){return this.filter((entry=>entry.isPrepared||entry.isSpontaneous))}canCastConsumable(item){var _a,_b;const spellData=null===(_b=null===(_a=item.data.data.spell)||void 0===_a?void 0:_a.data)||void 0===_b?void 0:_b.data;return!!spellData&&this.spellcastingFeatures.some((entry=>(0,_util_1.tupleHasValue)(spellData.traditions.value,entry.tradition)))}refocus(options={}){if(!options.all)throw(0,_util_1.ErrorPF2e)("Actors do not currently support regular refocusing");if(this.actor instanceof _actor_1.NPCPF2e||this.actor instanceof _actor_1.CharacterPF2e){const focus=this.actor.data.data.resources.focus,rechargeFocus=(null==focus?void 0:focus.max)&&focus.value<focus.max;if(focus&&rechargeFocus)return focus.value=focus.max,{"data.resources.focus.value":focus.value}}return null}recharge(){return{itemUpdates:this.contents.flatMap((entry=>{if(!(entry instanceof _item_1.SpellcastingEntryPF2e))return[];if(entry.isFocusPool)return[];const slots=entry.data.data.slots;let updated=!1;for(const slot of Object.values(slots))if(entry.isPrepared&&!entry.isFlexible)for(const preparedSpell of Object.values(slot.prepared))preparedSpell.expended&&(preparedSpell.expended=!1,updated=!0);else slot.value<slot.max&&(slot.value=slot.max,updated=!0);return updated?{_id:entry.id,"data.slots":slots}:[]})),actorUpdates:this.refocus({all:!0})}}}exports.ActorSpellcasting=ActorSpellcasting},78426:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.VehicleData=void 0;const base_1=__webpack_require__(49786);class VehicleData extends base_1.BaseActorDataPF2e{}exports.VehicleData=VehicleData,VehicleData.DEFAULT_ICON="systems/pf2e/icons/default-icons/vehicle.svg"},47341:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.VehiclePF2e=void 0;const _scene_1=__webpack_require__(12789),base_1=__webpack_require__(65532),data_1=__webpack_require__(78426);class VehiclePF2e extends base_1.ActorPF2e{static get schema(){return data_1.VehicleData}get dimensions(){return{length:this.data.data.details.space.long,width:this.data.data.details.space.wide,height:this.data.data.details.space.high}}getTokenDimensions(dimensions=this.dimensions){return{width:Math.max(Math.round(dimensions.width/5),1),height:Math.max(Math.round(dimensions.length/5),1)}}prepareBaseData(){var _a,_b;super.prepareBaseData();const{size}=this.data.data.traits,{dimensions}=this;if(size.length=dimensions.length,size.width=dimensions.width,null===(_b=null===(_a=this.data.token.flags)||void 0===_a?void 0:_a.pf2e)||void 0===_b?void 0:_b.linkToActorSize){const{width,height}=this.getTokenDimensions();this.data.token.width=width,this.data.token.height=height}}async createEmbeddedDocuments(embeddedName,data,context){var _a;for(const datum of data)if("type"in datum&&!["weapon","armor","equipment","consumable","treasure","backpack","kit","action"].includes(null!==(_a=datum.type)&&void 0!==_a?_a:""))return ui.notifications.error(game.i18n.localize("PF2E.vehicle.ItemTypeError")),[];return super.createEmbeddedDocuments(embeddedName,data,context)}async _preUpdate(data,options,user){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;if(await super._preUpdate(data,options,user),null===(_b=null===(_a=this.data.token.flags)||void 0===_a?void 0:_a.pf2e)||void 0===_b?void 0:_b.linkToActorSize){const{space}=this.data.data.details,spaceUpdates={width:null!==(_f=null===(_e=null===(_d=null===(_c=data.data)||void 0===_c?void 0:_c.details)||void 0===_d?void 0:_d.space)||void 0===_e?void 0:_e.wide)&&void 0!==_f?_f:space.wide,length:null!==(_k=null===(_j=null===(_h=null===(_g=data.data)||void 0===_g?void 0:_g.details)||void 0===_h?void 0:_h.space)||void 0===_j?void 0:_j.long)&&void 0!==_k?_k:space.long},tokenDimensions=this.getTokenDimensions(spaceUpdates);if(mergeObject(data,{token:tokenDimensions}),canvas.scene){const updates=this.getActiveTokens().filter((token=>token.document.linkToActorSize)).map((token=>Object.assign({_id:token.id},tokenDimensions)));await _scene_1.TokenDocumentPF2e.updateDocuments(updates,{parent:canvas.scene})}}}}exports.VehiclePF2e=VehiclePF2e},46014:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.VehicleSheetPF2e=void 0;const bulk_1=__webpack_require__(47297),helpers_1=__webpack_require__(23247),base_1=__webpack_require__(11291),helpers_2=__webpack_require__(71046),vehicle_1=__webpack_require__(47341);class VehicleSheetPF2e extends base_1.ActorSheetPF2e{static get defaultOptions(){return mergeObject(super.defaultOptions,{classes:["default","sheet","actor","vehicle"],width:670,height:480,tabs:[{navSelector:".sheet-navigation",contentSelector:".sheet-content",initial:"details"}]})}get template(){return"systems/pf2e/templates/actors/vehicle/vehicle-sheet.html"}async getData(){const sheetData=await super.getData();if(sheetData.actorSizes=CONFIG.PF2E.actorSizes,sheetData.actorSize=sheetData.actorSizes[sheetData.data.traits.size.value],sheetData.actorRarities=CONFIG.PF2E.rarityTraits,sheetData.actorRarity=sheetData.actorRarities[sheetData.data.traits.rarity.value],sheetData.isNotCommon="common"!==sheetData.data.traits.rarity.value,void 0!==sheetData.data.attributes&&(sheetData.data.attributes.hp.brokenThreshold=Math.floor(sheetData.data.attributes.hp.max/2)),sheetData.data.saves.fortitude.label=CONFIG.PF2E.saves.fortitude,sheetData.data.traits.traits.selected=sheetData.data.traits.traits.value.reduce(((traits,trait)=>Object.assign(Object.assign({},traits),{[trait]:CONFIG.PF2E.vehicleTraits[trait]})),{}),this.prepareItems(sheetData),void 0!==sheetData.actor.items){const treasure=(0,helpers_2.calculateWealth)(sheetData.actor.items);sheetData.totalTreasure={};for(const denomination of["cp","sp","gp","pp"]){const value=treasure[denomination];sheetData.totalTreasure[denomination]={value,label:CONFIG.PF2E.currencies[denomination]}}}return sheetData}prepareItems(sheetData){const actorData=sheetData.actor,inventory={weapon:{label:game.i18n.localize("PF2E.InventoryWeaponsHeader"),items:[]},armor:{label:game.i18n.localize("PF2E.InventoryArmorHeader"),items:[]},equipment:{label:game.i18n.localize("PF2E.InventoryEquipmentHeader"),items:[]},consumable:{label:game.i18n.localize("PF2E.InventoryConsumablesHeader"),items:[]},treasure:{label:game.i18n.localize("PF2E.InventoryTreasureHeader"),items:[]},backpack:{label:game.i18n.localize("PF2E.InventoryBackpackHeader"),items:[]}},actions={action:{label:game.i18n.localize("PF2E.ActionsActionsHeader"),actions:[]},reaction:{label:game.i18n.localize("PF2E.ActionsReactionsHeader"),actions:[]},free:{label:game.i18n.localize("PF2E.ActionsFreeActionsHeader"),actions:[]}},bulkConfig={ignoreCoinBulk:game.settings.get("pf2e","ignoreCoinBulk")},bulkItems=(0,bulk_1.itemsFromActorData)(actorData),bulkItemsById=(0,bulk_1.indexBulkItemsById)(bulkItems),containers=(0,helpers_1.getContainerMap)({items:actorData.items.filter((itemData=>itemData.isPhysical)),bulkItemsById,bulkConfig,actorSize:actorData.data.traits.size.value});for(const itemData of actorData.items){const physicalData=itemData;if(physicalData.isPhysical){itemData.showEdit=sheetData.user.isGM||physicalData.isIdentified,itemData.img||(itemData.img=CONST.DEFAULT_TOKEN);const containerData=containers.get(itemData._id);if(itemData.containerData=containerData,itemData.isInContainer=containerData.isInContainer,itemData.isInvestable=!1,Object.keys(inventory).includes(itemData.type)){itemData.data.quantity.value=physicalData.data.quantity.value||0,itemData.data.weight.value=physicalData.data.weight.value||0;const bulkItem=bulkItemsById.get(physicalData._id),[approximatedBulk]=(0,bulk_1.calculateBulk)({items:void 0===bulkItem?[]:[bulkItem],bulkConfig,actorSize:this.actor.data.data.traits.size.value});itemData.totalWeight=(0,bulk_1.formatBulk)(approximatedBulk),itemData.hasCharges="consumable"===physicalData.type&&physicalData.data.charges.max>0,"weapon"===physicalData.type&&(itemData.isTwoHanded=physicalData.data.traits.value.some((trait=>trait.startsWith("two-hand"))),itemData.wieldedTwoHanded=physicalData.data.hands.value),"book"===physicalData.type?inventory.equipment.items.push(itemData):inventory[physicalData.type].items.push(itemData)}}if("action"===itemData.type){const actionType=["free","reaction","passive"].includes(itemData.data.actionType.value)?itemData.data.actionType.value:"action";itemData.img=vehicle_1.VehiclePF2e.getActionGraphics(actionType,parseInt((itemData.data.actions||{}).value,10)||1).imageUrl,"passive"===actionType?actions.free.actions.push(itemData):actions[actionType].actions.push(itemData)}for(const itemData of sheetData.items){itemData.isPhysical&&(itemData.showEdit=!0)}}actorData.inventory=inventory,actorData.actions=actions}activateListeners(html){super.activateListeners(html);{const title=$(".sheet-navigation .active").data("tabTitle");title&&html.find(".navigation-title").text(title)}html.find(".sheet-navigation").on("mouseover",".item",(event=>{const title=event.currentTarget.dataset.tabTitle;title&&$(event.currentTarget).parents(".sheet-navigation").find(".navigation-title").text(title)})),html.find(".sheet-navigation").on("mouseout",".item",(event=>{const parent=$(event.currentTarget).parents(".sheet-navigation"),title=parent.find(".item.active").data("tabTitle");title&&parent.find(".navigation-title").text(title)})),html.find(".crb-trait-selector").on("click",(event=>this.onTraitSelector(event)))}}exports.VehicleSheetPF2e=VehicleSheetPF2e},16571:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isChaotic=exports.isLawful=exports.isGood=exports.isEvil=void 0,exports.isEvil=function(alignment){return"LE"===alignment||"CE"===alignment||"NE"===alignment},exports.isGood=function(alignment){return"LG"===alignment||"CG"===alignment||"NG"===alignment},exports.isLawful=function(alignment){return"LE"===alignment||"LN"===alignment||"LG"===alignment},exports.isChaotic=function(alignment){return"CE"===alignment||"CN"===alignment||"CG"===alignment}},79472:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}},__await=this&&this.__await||function(v){return this instanceof __await?(this.v=v,this):new __await(v)},__asyncGenerator=this&&this.__asyncGenerator||function(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,g=generator.apply(thisArg,_arguments||[]),q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i;function verb(n){g[n]&&(i[n]=function(v){return new Promise((function(a,b){q.push([n,v,a,b])>1||resume(n,v)}))})}function resume(n,v){try{(r=g[n](v)).value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r)}catch(e){settle(q[0][3],e)}var r}function fulfill(value){resume("next",value)}function reject(value){resume("throw",value)}function settle(f,v){f(v),q.shift(),q.length&&resume(q[0][0],q[0][1])}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompendiumBrowser=void 0;const progress_1=__webpack_require__(21946),physical_1=__webpack_require__(6560),kit_1=__webpack_require__(32919),helpers_1=__webpack_require__(71046),_util_1=__webpack_require__(6945),_actor_1=__webpack_require__(85530),localize_1=__webpack_require__(41332);function sortedObject(obj){return Object.fromEntries([...Object.entries(obj)].sort())}function sortedIndexByName(index){const sorted={};return Object.values(index).sort(((entryA,entryB)=>entryA.name>entryB.name?1:entryA.name<entryB.name?-1:0)).forEach((entry=>{sorted[entry._id]=entry})),sorted}function hasAllIndexFields(data,indexFields){for(const field of indexFields)if(void 0===getProperty(data,field))return!1;return!0}function normaliseString(str){return str.normalize("NFD").toLowerCase().replace(/[^a-z0-9]/g,"")}const packLoader=new class{constructor(){this.loadedPacks={Actor:{},Item:{}}}loadPacks(entityType,packs,indexFields){var _a,_b,_c,_d;return __asyncGenerator(this,arguments,(function*(){var e_1,_e;null!==(_a=(_d=this.loadedPacks)[entityType])&&void 0!==_a||(_d[entityType]={});const translations=localize_1.LocalizePF2e.translations.PF2E.CompendiumBrowser.ProgressBar,progress=new progress_1.Progress({steps:packs.length});try{for(var packs_1_1,packs_1=__asyncValues(packs);!(packs_1_1=yield __await(packs_1.next())).done;){const packId=packs_1_1.value;let data=this.loadedPacks[entityType][packId];if(data){const{pack}=data;progress.advance(game.i18n.format(translations.LoadingPack,{pack:null!==(_c=null==pack?void 0:pack.metadata.label)&&void 0!==_c?_c:""}))}else{const pack=game.packs.get(packId);if(!pack){progress.advance("");continue}if(progress.advance(game.i18n.format(translations.LoadingPack,{pack:pack.metadata.label})),pack.metadata.entity!==entityType)continue;{const index=yield __await(pack.getIndex({fields:indexFields}));if(!(null!==(_b=index.contents[0])&&void 0!==_b?_b:{}).data)continue;data={pack,index},this.loadedPacks[entityType][packId]=data}}yield yield __await(data)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{packs_1_1&&!packs_1_1.done&&(_e=packs_1.return)&&(yield __await(_e.call(packs_1)))}finally{if(e_1)throw e_1.error}}progress.close(translations.LoadingComplete)}))}};class CompendiumBrowser extends Application{constructor(options={}){super(options),this.sorters={text:"",castingtime:""},this.ranges={},this.userIsDragging=!1,this.initialFilter=null,this.npcIndex=["img","data.details.level.value","data.details.alignment.value","data.details.source.value","data.traits"],this.hazardIndex=["img","data.details.level.value","data.details.isComplex","data.traits"],this.loadSettings(),this.initCompendiumList(),this.injectActorDirectory(),this.hookTab(),this.hazardNPCIndex=[...new Set([...this.npcIndex,...this.hazardIndex])]}get title(){return game.i18n.localize("PF2E.CompendiumBrowser.Title")}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"compendium-browser",classes:[],template:"systems/pf2e/templates/packs/compendium-browser.html",width:800,height:700,resizable:!0,dragDrop:[{dragSelector:"ul.item-list > li.item"}],tabs:[{navSelector:"nav",contentSelector:"section.content",initial:"landing-page"}]})}async _render(force,options){await super._render(force,options),this.activateResultListeners()}async close(options){this.initialFilter=null,await super.close(options)}initCompendiumList(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t;const settings={action:{},bestiary:{},hazard:{},equipment:{},feat:{},spell:{}},loadDefault={"pf2e.actionspf2e":!0,"pf2e.equipment-srd":!0,"pf2e.ancestryfeatures":!0,"pf2e.classfeatures":!0,"pf2e.feats-srd":!0,"pf2e.spells-srd":!0};for(const pack of game.packs){const types=new Set(pack.index.map((entry=>entry.type)));if(0!==types.size){if(types.has("npc")){const load=null===(_c=null===(_b=null===(_a=this.settings.bestiary)||void 0===_a?void 0:_a[pack.collection])||void 0===_b?void 0:_b.load)||void 0===_c||_c;settings.bestiary[pack.collection]={load,name:pack.metadata.label}}if(types.has("hazard")){const load=null===(_f=null===(_e=null===(_d=this.settings.hazard)||void 0===_d?void 0:_d[pack.collection])||void 0===_e?void 0:_e.load)||void 0===_f||_f;settings.hazard[pack.collection]={load,name:pack.metadata.label}}if(types.has("action")){const load=null!==(_j=null===(_h=null===(_g=this.settings.action)||void 0===_g?void 0:_g[pack.collection])||void 0===_h?void 0:_h.load)&&void 0!==_j?_j:!!loadDefault[pack.collection];settings.action[pack.collection]={load,name:pack.metadata.label}}else if(["weapon","armor","equipment","consumable","treasure","backpack","kit"].some((type=>types.has(type)))){const load=null!==(_m=null===(_l=null===(_k=this.settings.equipment)||void 0===_k?void 0:_k[pack.collection])||void 0===_l?void 0:_l.load)&&void 0!==_m?_m:!!loadDefault[pack.collection];settings.equipment[pack.collection]={load,name:pack.metadata.label}}else if(types.has("feat")){const load=null!==(_q=null===(_p=null===(_o=this.settings.feat)||void 0===_o?void 0:_o[pack.collection])||void 0===_p?void 0:_p.load)&&void 0!==_q?_q:!!loadDefault[pack.collection];settings.feat[pack.collection]={load,name:pack.metadata.label}}else if(types.has("spell")){const load=null!==(_t=null===(_s=null===(_r=this.settings.spell)||void 0===_r?void 0:_r[pack.collection])||void 0===_s?void 0:_s.load)&&void 0!==_t?_t:!!loadDefault[pack.collection];settings.spell[pack.collection]={load,name:pack.metadata.label}}}}for(const tab of["action","bestiary","equipment","feat","hazard","spell"])settings[tab]=Object.fromEntries(Object.entries(settings[tab]).sort((([_collectionA,dataA],[_collectionB,dataB])=>{var _a,_b;return(null!==(_a=null==dataA?void 0:dataA.name)&&void 0!==_a?_a:"")>(null!==(_b=null==dataB?void 0:dataB.name)&&void 0!==_b?_b:"")?1:-1})));this.settings=settings}loadSettings(){this.settings=JSON.parse(game.settings.get("pf2e","compendiumBrowserPacks")),this.data={action:null,bestiary:null,equipment:null,feat:null,hazard:null,spell:null,settings:null}}hookTab(){this.navigationTab=this._tabs[0];const tabCallback=this.navigationTab.callback;this.navigationTab.callback=async(event,tabs,active)=>{null==tabCallback||tabCallback(event,tabs,active),await this.loadTab(active)}}async openTab(tab,filter=null){this.initialFilter=filter,await this._render(!0),this.initialFilter=filter,this.navigationTab.activate(tab,{triggerCallback:!0})}async loadTab(tab){if(this.data[tab])return void this.activateResultListeners();const data=await(async()=>{switch(tab){case"settings":return null;case"action":return await this.loadActions();case"equipment":return await this.loadEquipment();case"feat":return await this.loadFeats();case"spell":return await this.loadSpells();case"bestiary":return await this.loadBestiary();case"hazard":return await this.loadHazards();default:throw(0,_util_1.ErrorPF2e)(`Unknown tab "${tab}"`)}})();data&&(this.data[tab]=data),this.rendered&&this.render(!0)}loadedPacks(tab){var _a;return"settings"===tab?[]:Object.entries(null!==(_a=this.settings[tab])&&void 0!==_a?_a:[]).flatMap((([collection,info])=>(null==info?void 0:info.load)?[collection]:[]))}async loadActions(){var e_2,_a;console.debug("PF2e System | Compendium Browser | Started loading actions");const actions={},indexFields=["img","data.actionType.value","data.traits.value","data.source.value"],sources=new Set;try{for(var _c,_b=__asyncValues(packLoader.loadPacks("Item",this.loadedPacks("action"),indexFields));!(_c=await _b.next()).done;){const{pack,index}=_c.value;console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - Loading`);for(const actionData of index)if("action"===actionData.type){if(!hasAllIndexFields(actionData,indexFields)){console.warn(`Action '${actionData.name}' does not have all required data fields. Consider unselecting pack '${pack.metadata.label}' in the compendium browser settings.`);continue}"passive"===actionData.data.actionType.value&&(actionData.img=this._getActionImg("passive")),actionData.compendium=pack.collection,actionData.filters={traits:actionData.data.traits.value,source:actionData.data.source.value},actions[actionData._id]=actionData,CompendiumBrowser.extractSources(actionData,sources,actionData.data.source)}}}catch(e_2_1){e_2={error:e_2_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_2)throw e_2.error}}return console.debug("PF2e System | Compendium Browser | Finished loading actions"),{actions:sortedIndexByName(actions),actionTraits:sortedObject(CONFIG.PF2E.featTraits),skills:CONFIG.PF2E.skillList,proficiencies:CONFIG.PF2E.proficiencyLevels,source:[...sources].sort()}}async loadBestiary(){var e_3,_a;console.debug("PF2e System | Compendium Browser | Started loading Bestiary actors");const bestiaryActors={},sources=new Set,indexFields=this.hazardNPCIndex;try{for(var _c,_b=__asyncValues(packLoader.loadPacks("Actor",this.loadedPacks("bestiary"),indexFields));!(_c=await _b.next()).done;){const{pack,index}=_c.value;console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${index.size} entries found`);for(const actorData of index)if("npc"===actorData.type){if(!hasAllIndexFields(actorData,this.npcIndex)){console.warn(`Actor '${actorData.name}' does not have all required data fields. Consider unselecting pack '${pack.metadata.label}' in the compendium browser settings.`);continue}actorData.compendium=pack.collection,actorData.filters={},actorData.filters.level=actorData.data.details.level.value,actorData.filters.traits=actorData.data.traits.traits.value,actorData.filters.alignment=actorData.data.details.alignment.value,actorData.filters.actorSize=actorData.data.traits.size.value,bestiaryActors[actorData._id]=actorData,actorData.filters.rarity=actorData.data.traits.rarity.value,CompendiumBrowser.extractSources(actorData,sources,actorData.data.details.source)}console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - Loaded`)}}catch(e_3_1){e_3={error:e_3_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_3)throw e_3.error}}return console.debug("PF2e System | Compendium Browser | Finished loading Bestiary actors"),{bestiaryActors:sortedIndexByName(bestiaryActors),actorSize:CONFIG.PF2E.actorSizes,alignments:CONFIG.PF2E.alignments,traits:sortedObject(CONFIG.PF2E.monsterTraits),languages:sortedObject(CONFIG.PF2E.languages),source:[...sources].sort(),rarities:CONFIG.PF2E.rarityTraits}}async loadHazards(){var e_4,_a;console.debug("PF2e System | Compendium Browser | Started loading Hazard actors");const hazardActors={},sources=new Set,rarities=Object.keys(CONFIG.PF2E.rarityTraits),indexFields=this.hazardNPCIndex;try{for(var _c,_b=__asyncValues(packLoader.loadPacks("Actor",this.loadedPacks("hazard"),indexFields));!(_c=await _b.next()).done;){const{pack,index}=_c.value;console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${index.size} entries found`);for(const actorData of index)if("hazard"===actorData.type){if(!hasAllIndexFields(actorData,this.hazardIndex)){console.warn(`Hazard '${actorData.name}' does not have all required data fields. Consider unselecting pack '${pack.metadata.label}' in the compendium browser settings.`);continue}actorData.compendium=pack.collection,actorData.filters={},actorData.filters.level=actorData.data.details.level.value,actorData.filters.traits=actorData.data.traits.traits.value,actorData.filters.complex=actorData.data.details.isComplex?"complex":"simple",hazardActors[actorData._id]=actorData,actorData.filters.rarity=(()=>{if(actorData.data.traits.rarity)return actorData.data.traits.rarity.value;if(actorData.data.rarity)return actorData.data.rarity.value;for(const rarity of rarities){const indexOfRarity=actorData.data.traits.traits.value.indexOf(rarity);if(indexOfRarity>=0)return actorData.data.traits.traits.value[indexOfRarity]}return"common"})(),CompendiumBrowser.extractSources(actorData,sources,actorData.data.details.source)}console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - Loaded`)}}catch(e_4_1){e_4={error:e_4_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_4)throw e_4.error}}return console.debug("PF2e System | Compendium Browser | Finished loading Hazard actors"),{hazardActors:sortedIndexByName(hazardActors),traits:sortedObject(CONFIG.PF2E.hazardTraits),source:[...sources].sort(),rarities:CONFIG.PF2E.rarityTraits}}async loadEquipment(){var e_5,_a;console.debug("PF2e System | Compendium Browser | Started loading inventory items");const inventoryItems={},itemTypes=["weapon","armor","equipment","consumable","treasure","backpack","kit"],kitFields=["img","data.price.value","data.traits"],baseFields=[...kitFields,"data.stackGroup.value","data.level.value","data.source.value"],armorAndWeaponFields=[...baseFields,"data.category","data.group"],consumableFields=[...baseFields,"data.consumableType.value"],indexFields=[...new Set([...armorAndWeaponFields,...consumableFields])],sources=new Set;try{for(var _c,_b=__asyncValues(packLoader.loadPacks("Item",this.loadedPacks("equipment"),indexFields));!(_c=await _b.next()).done;){const{pack,index}=_c.value;console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${index.size} entries found`);for(const itemData of index)if(("treasure"!==itemData.type||"coins"!==itemData.data.stackGroup.value)&&itemTypes.includes(itemData.type)){let skip=!1;if("weapon"===itemData.type||"armor"===itemData.type?hasAllIndexFields(itemData,armorAndWeaponFields)||(skip=!0):"kit"===itemData.type?hasAllIndexFields(itemData,kitFields)||(skip=!0):"consumable"===itemData.type?hasAllIndexFields(itemData,consumableFields)||(skip=!0):hasAllIndexFields(itemData,baseFields)||(skip=!0),skip){console.warn(`Item '${itemData.name}' does not have all required data fields. Consider unselecting pack '${pack.metadata.label}' in the compendium browser settings.`);continue}itemData.compendium=pack.collection,itemData.data.itemTypes={value:itemData.type},itemData.data.rarity={value:itemData.data.traits.rarity.value},itemData.filters=["itemTypes","rarity","level","traits","price","source","category","consumableType","group"],inventoryItems[itemData._id]=itemData,CompendiumBrowser.extractSources(itemData,sources,itemData.data.source)}}}catch(e_5_1){e_5={error:e_5_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_5)throw e_5.error}}return console.debug("PF2e System | Compendium Browser | Finished loading inventory items"),{inventoryItems:sortedIndexByName(inventoryItems),armorTypes:CONFIG.PF2E.armorTypes,armorGroups:CONFIG.PF2E.armorGroups,weaponTraits:sortedObject(CONFIG.PF2E.weaponTraits),itemTypes:{weapon:game.i18n.localize("ITEM.TypeWeapon"),armor:game.i18n.localize("ITEM.TypeArmor"),equipment:game.i18n.localize("ITEM.TypeEquipment"),consumable:game.i18n.localize("ITEM.TypeConsumable"),treasure:game.i18n.localize("ITEM.TypeTreasure"),backpack:game.i18n.localize("ITEM.TypeBackpack"),kit:game.i18n.localize("ITEM.TypeKit")},rarities:CONFIG.PF2E.rarityTraits,consumableTypes:CONFIG.PF2E.consumableTypes,weaponCategories:CONFIG.PF2E.weaponCategories,weaponGroups:CONFIG.PF2E.weaponGroups,source:[...sources].sort()}}async loadFeats(){var e_6,_a;console.debug("PF2e System | Compendium Browser | Started loading feats");const feats={},classes=new Set,skills=new Set,ancestries=new Set,times=new Set,ancestryList=Object.keys(CONFIG.PF2E.ancestryTraits),sources=new Set,indexFields=["img","data.prerequisites.value","data.actionType.value","data.actions.value","data.featType.value","data.level.value","data.traits","data.source.value"];try{for(var _c,_b=__asyncValues(packLoader.loadPacks("Item",this.loadedPacks("feat"),indexFields));!(_c=await _b.next()).done;){const{pack,index}=_c.value;console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${index.size} entries found`);for(const featData of index)if("feat"===featData.type){if(featData.filters={},!hasAllIndexFields(featData,indexFields)){console.warn(`Feat '${featData.name}' does not have all required data fields. Consider unselecting pack '${pack.metadata.label}' in the compendium browser settings.`);continue}if(featData.compendium=pack.collection,featData.data.traits.value){const classIntersection=Object.keys(CONFIG.PF2E.classTraits).filter((x=>featData.data.traits.value.includes(x)));if(0!==classIntersection.length&&(classes.add(classIntersection.join(",")),featData.data.classes={value:classIntersection}),"ancestry"===featData.data.featType.value){const ancestryIntersection=ancestryList.filter((x=>featData.data.traits.value.includes(x)));0!==ancestryIntersection.length&&(ancestries.add(ancestryIntersection.join(",")),featData.data.ancestry={value:ancestryIntersection})}}{const skillList=Object.keys(CONFIG.PF2E.skillList),prereqs=featData.data.prerequisites.value;let prerequisitesArr=[];prerequisitesArr=prereqs.map((prerequisite=>(null==prerequisite?void 0:prerequisite.value)?prerequisite.value.toLowerCase():""));const skillIntersection=skillList.filter((x=>prerequisitesArr.some((entry=>entry.includes(x)))));0!==skillIntersection.length&&(skills.add(skillIntersection.join(",")),featData.data.skills={value:skillIntersection})}let time="";"reaction"===featData.data.actionType.value?(featData.data.actionType.img=this._getActionImg("reaction"),time="reaction"):"free"===featData.data.actionType.value?(featData.data.actionType.img=this._getActionImg("free"),time="free"):"passive"===featData.data.actionType.value?(featData.data.actionType.img=this._getActionImg("passive"),time="passive"):featData.data.actions.value&&(featData.data.actionType.img=this._getActionImg(featData.data.actions.value.toString()),time=featData.data.actions.value.toString()),""!==time&&times.add(time),feats[featData._id]=featData,featData.data.rarity=deepClone(featData.data.traits.rarity),CompendiumBrowser.extractSources(featData,sources,featData.data.source)}}}catch(e_6_1){e_6={error:e_6_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_6)throw e_6.error}}const classesObj={};for(const classStr of[...classes].sort()){const classTraits=CONFIG.PF2E.classTraits;classesObj[classStr]=classTraits[classStr]}const ancestryObj={};for(const ancestryStr of[...ancestries].sort()){const ancestryTraits=CONFIG.PF2E.ancestryTraits;ancestryObj[ancestryStr]=ancestryTraits[ancestryStr]}const excludedTraits=new Set([...ancestries,...classes]),featTraits=Object.fromEntries(Object.entries(CONFIG.PF2E.featTraits).filter((([key])=>!excludedTraits.has(key))).map((([key,name])=>[key,game.i18n.localize(name)])).sort(((traitA,traitB)=>traitA[1].localeCompare(traitB[1]))));return console.debug("PF2e System | Compendium Browser | Finished loading feats"),{feats:sortedIndexByName(feats),featClasses:CONFIG.PF2E.classTraits,featSkills:CONFIG.PF2E.skillList,featTraits,featAncestry:ancestryObj,featTimes:[...times].sort(),rarities:CONFIG.PF2E.rarityTraits,source:[...sources].sort()}}async loadSpells(){var e_7,_a;console.debug("PF2e System | Compendium Browser | Started loading spells");const spells={},classes=new Set,schools=new Set,times=new Set,classList=Object.keys(CONFIG.PF2E.classTraits),sources=new Set,indexFields=["img","data.level.value","data.category.value","data.traditions.value","data.time","data.school.value","data.traits","data.source.value"];try{for(var _c,_b=__asyncValues(packLoader.loadPacks("Item",this.loadedPacks("spell"),indexFields));!(_c=await _b.next()).done;){const{pack,index}=_c.value;console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${index.size} entries found`);for(const spellData of index)if(spellData.filters={},"spell"===spellData.type){if(!hasAllIndexFields(spellData,indexFields)){console.warn(`Item '${spellData.name}' does not have all required data fields. Consider unselecting pack '${pack.metadata.label}' in the compendium browser settings.`);continue}spellData.data.traits.value.includes("cantrip")&&(spellData.data.category.value="cantrip"),spellData.compendium=pack.collection,0===spellData.data.level.value?spellData.data.level.formated="C":11===spellData.data.level.value?spellData.data.level.formated="F":spellData.data.level.formated=spellData.data.level.value;const classIntersection=classList.filter((trait=>spellData.data.traits.value.includes(trait)));if(0!==classIntersection.length&&(classes.add(classIntersection.join(",")),spellData.data.classes={value:classIntersection}),void 0!==spellData.data.time.value){let time=spellData.data.time.value;-1!==time.indexOf("reaction")&&(time="reaction"),times.add(time)}"reaction"===spellData.data.time.value?spellData.data.time.img=this._getActionImg("reaction"):"free"===spellData.data.time.value?spellData.data.time.img=this._getActionImg("free"):spellData.data.time.img=this._getActionImg(spellData.data.time.value),spells[spellData._id]=spellData,void 0!==spellData.data.school.value&&schools.add(spellData.data.school.value),spellData.data.rarity=deepClone(spellData.data.traits.rarity),CompendiumBrowser.extractSources(spellData,sources,spellData.data.source)}}}catch(e_7_1){e_7={error:e_7_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_7)throw e_7.error}}const classesObj={};for(const classStr of[...classes].sort()){const classTraits=CONFIG.PF2E.classTraits;classesObj[classStr]=classTraits[classStr]}const schoolsObj={};for(const school of[...schools].sort())schoolsObj[school]=CONFIG.PF2E.magicSchools[school];return console.debug("PF2e System | Compendium Browser | Finished loading spells"),{spells:sortedIndexByName(spells),classes:classesObj,times:[...times].sort(),schools:schoolsObj,categories:CONFIG.PF2E.spellCategories,traditions:CONFIG.PF2E.magicTraditions,rarities:CONFIG.PF2E.rarityTraits,spellTraits:sortedObject(Object.assign(Object.assign({},CONFIG.PF2E.spellOtherTraits),CONFIG.PF2E.damageTraits)),source:[...sources].sort()}}setSortDirection($direction,sortBy,{change=!1}={}){const direction=$direction.attr("data-direction");if("asc"!==direction&&"desc"!==direction)throw(0,_util_1.ErrorPF2e)("No sort direction set");const newDirection=change?"asc"===direction?"desc":"asc":direction,$icon=$direction.children("i"),iconClass=`fas fa-sort-${"name"===sortBy?"alpha":"numeric"}-${"asc"===newDirection?"up":"down-alt"}`;return $icon.attr("class",iconClass),$direction.attr("data-direction",newDirection),newDirection}activateListeners($html){super.activateListeners($html),this.resetFilters();const $controlArea=$html.find(".control-area");$controlArea.find("button.clear-filters").on("click",(()=>{this.resetFilters(),this.filterItems($html.find(".tab.active li"))})),$controlArea.find(".filtercontainer h3").on("click",(event=>{$(event.delegateTarget).next().toggle(100)})),$controlArea.find("input[name=textFilter]").on("contextmenu",(()=>{$html.find(".hint").toggle(100)}));const $sortContainer=$controlArea.find(".sortcontainer"),$orderSelects=$sortContainer.find("select.order"),$directionButtons=$sortContainer.find("a.direction");if($orderSelects.on("change",(event=>{const $order=$(event.target),$direction=$order.next("a.direction"),sortBy=$order.val();if(!(0,_util_1.tupleHasValue)(["name","level","price"],sortBy))return;const direction=this.setSortDirection($direction,sortBy),$list=$html.find(".tab.active ul.item-list");this.sortResults($list,{sortBy,direction})})),$directionButtons.on("click",(event=>{const $direction=$(event.delegateTarget),sortBy=$direction.prev("select.order").val();if(!(0,_util_1.tupleHasValue)(["name","level","price"],sortBy))return;const direction=this.setSortDirection($direction,sortBy,{change:!0}),$list=$html.find(".tab.active ul.item-list");this.sortResults($list,{sortBy,direction})})),$controlArea.find("input[name=textFilter]").on("change paste",(event=>{this.sorters.text=event.target.value,this.filterItems($html.find(".tab.active li"))})),$controlArea.find(".timefilter select").on("change",(event=>{this.sorters.castingtime=event.target.value,this.filterItems($html.find(".tab.active li"))})),$controlArea.find("input[type=checkbox]").on("click",(event=>{const filterType=event.target.name.split(/-(.+)/)[0],filterTarget=event.target.name.split(/-(.+)/)[1],filterValue=event.target.checked;Object.keys(this.filters).includes(filterType)&&(this.filters[filterType][filterTarget]=filterValue,this.filters[filterType]=this.clearObject(this.filters[filterType])),this.filterItems($html.find(".tab.active li"))})),$controlArea.find("input[name*=Bound]").on("input change paste",(event=>{var _a;const type=null!==(_a=event.target.name.split("-")[1])&&void 0!==_a?_a:"",$parent=$(event.target).closest("div"),$lowerBound=$parent.find("input[name*=lowerBound]"),$upperBound=$parent.find("input[name*=upperBound]");this.ranges[type].lowerBound=Number($lowerBound.val()),this.ranges[type].upperBound=Number($upperBound.val()),this.filterItems($html.find(".tab.active li"))})),$html.find("button.save-settings").on("click",(()=>{const formData=new FormData($html.find(".compendium-browser-settings form")[0]);for(const[t,packs]of Object.entries(this.settings))for(const[key,pack]of Object.entries(packs))pack.load=formData.has(`${t}-${key}`);game.settings.set("pf2e","compendiumBrowserPacks",JSON.stringify(this.settings)),this.loadSettings(),this.initCompendiumList(),this.render(!0)})),this.initialFilter){$html.find(".tab.active .control-area").find(`input[type="checkbox"][name=${this.initialFilter}]`).trigger("click")}}activateResultListeners(){const $list=this.element.find(".tab.active ul.item-list");if(0===$list.length)return;const $items=$list.children("li");$list.data("listeners-active")&&$items.children("a").off("click"),$items.children(".name").children("a.item-link, a.actor-link").on("click",(event=>{var _a;const entry=$(event.currentTarget).closest(".item")[0].dataset,id=null!==(_a=entry.entryId)&&void 0!==_a?_a:"",compendium=entry.entryCompendium,pack=game.packs.get(null!=compendium?compendium:"");null==pack||pack.getDocument(id).then((document=>{document.sheet.render(!0)}))})),$items.children("a.take-item").on("click",(event=>{var _a;const itemId=null!==(_a=$(event.currentTarget).closest("li").attr("data-entry-id"))&&void 0!==_a?_a:"";this.takePhysicalItem(itemId)})),$list.data("listeners-active",!0)}async takePhysicalItem(itemId){var e_8,_a,e_9,_b;const actors=canvas.tokens.controlled.flatMap((token=>{var _a;return!(null===(_a=token.actor)||void 0===_a?void 0:_a.isOwner)||token.actor instanceof _actor_1.FamiliarPF2e?[]:token.actor}));if(0===actors.length&&game.user.character&&actors.push(game.user.character),0===actors.length)return void ui.notifications.error(game.i18n.format("PF2E.ErrorMessage.NoTokenSelected"));const item=await this.getPhysicalItem(itemId);if(item instanceof kit_1.KitPF2e)try{for(var actors_1_1,actors_1=__asyncValues(actors);!(actors_1_1=await actors_1.next()).done;){const actor=actors_1_1.value;await item.dumpContents(actor)}}catch(e_8_1){e_8={error:e_8_1}}finally{try{actors_1_1&&!actors_1_1.done&&(_a=actors_1.return)&&await _a.call(actors_1)}finally{if(e_8)throw e_8.error}}else try{for(var actors_2_1,actors_2=__asyncValues(actors);!(actors_2_1=await actors_2.next()).done;){const actor=actors_2_1.value;await actor.createEmbeddedDocuments("Item",[item.toObject()])}}catch(e_9_1){e_9={error:e_9_1}}finally{try{actors_2_1&&!actors_2_1.done&&(_b=actors_2.return)&&await _b.call(actors_2)}finally{if(e_9)throw e_9.error}}1===actors.length&&game.user.character&&actors[0]===game.user.character?ui.notifications.info(game.i18n.format("PF2E.CompendiumBrowser.AddedItemToCharacter",{item:item.name,character:game.user.character.name})):ui.notifications.info(game.i18n.format("PF2E.CompendiumBrowser.AddedItem",{item:item.name}))}async getPhysicalItem(itemId){var _a;const item=await(null===(_a=game.packs.get("pf2e.equipment-srd"))||void 0===_a?void 0:_a.getDocument(itemId));if(!(item instanceof physical_1.PhysicalItemPF2e||item instanceof kit_1.KitPF2e))throw(0,_util_1.ErrorPF2e)("Unexpected failure retrieving compendium item");return item}_canDragStart(){return!0}_canDragDrop(){return!0}_onDragStart(event){this.userIsDragging=!0,this.element.animate({opacity:.125},250);const $item=$(event.currentTarget),packName=$item.attr("data-entry-compendium"),itemPack=game.packs.find((pack=>pack.collection===packName));itemPack&&(event.dataTransfer.setData("text/plain",JSON.stringify({type:itemPack.documentName,pack:itemPack.collection,id:$item.attr("data-entry-id")})),$item.one("dragend",(()=>{this.userIsDragging=!1,this.element.animate({opacity:1},500)})))}_onDrop(event){var _a;if(!this.userIsDragging)return;const browserZIndex=Number(this.element.css("zIndex")),highestElement=Array.from(document.body.querySelectorAll("*")).filter((element=>{if(!(element instanceof HTMLElement)||["compendium-browser","hud"].includes(element.id))return!1;const appBounds=element.getBoundingClientRect(),zIndex=Number(element.style.zIndex);return!(!appBounds||zIndex>browserZIndex)&&(event.clientX>=appBounds.left&&event.clientX<=appBounds.right&&event.clientY>=appBounds.top&&event.clientY<=appBounds.bottom)})).reduce(((highest,candidate)=>highest?Number(candidate.style.zIndex)>Number(highest.style.zIndex)?candidate:highest:candidate),null);if(highestElement){const isSheet=/^actor-\w+$/.test(highestElement.id),sheetForm=isSheet&&highestElement.querySelector("form.editable"),dropTarget=isSheet&&sheetForm instanceof HTMLElement?sheetForm:highestElement,newEvent=new DragEvent(event.type,Object.assign(Object.assign({},event),{clientX:event.clientX,clientY:event.clientY,dataTransfer:new DataTransfer}));null===(_a=newEvent.dataTransfer)||void 0===_a||_a.setData("text/plain",event.dataTransfer.getData("text/plain")),dropTarget.dispatchEvent(newEvent)}}injectActorDirectory(){const $html=ui.actors.element;if($html.find(".bestiary-browser-btn").length>0)return;const bestiaryImportButton=$('<button class="bestiary-browser-btn"><i class="fas fa-fire"></i> Bestiary Browser</button>');game.user.isGM&&$html.find("footer").append(bestiaryImportButton),bestiaryImportButton.on("click",(ev=>{ev.preventDefault(),this.openTab("bestiary")}))}clearObject(obj){return Object.fromEntries(Object.entries(obj).filter((([_key,value])=>value)))}_getActionImg(action){var _a;return null!==(_a={1:"systems/pf2e/icons/actions/OneAction.webp",2:"systems/pf2e/icons/actions/TwoActions.webp",3:"systems/pf2e/icons/actions/ThreeActions.webp","1 or 2":"systems/pf2e/icons/actions/OneTwoActions.webp","1 to 3":"systems/pf2e/icons/actions/OneThreeActions.webp","2 or 3":"systems/pf2e/icons/actions/TwoThreeActions.webp",free:"systems/pf2e/icons/actions/FreeAction.webp",reaction:"systems/pf2e/icons/actions/Reaction.webp",passive:"systems/pf2e/icons/actions/Passive.webp"}[action])&&void 0!==_a?_a:"systems/pf2e/icons/actions/OneAction.webp"}getData(){return Object.assign(Object.assign({user:game.user},this.data),{settings:this.settings})}async filterItems($lis){let counter=0;$lis.hide();for(const li of $lis)this.getFilterResult(li)&&($(li).show(),counter+=1,counter%20==0&&await new Promise((r=>setTimeout(r,0))))}getFilterResult(element){var _a;if(this.sorters.text){const searches=this.sorters.text.split(",");for(const search of searches)if(-1===search.indexOf(":")){if(!normaliseString($(element).find(".name a")[0].innerHTML).includes(normaliseString(search)))return!1}else{const targetValue=search.split(":")[1].trim(),targetStat=search.split(":")[0];if(!normaliseString(null!==(_a=element.dataset[targetStat])&&void 0!==_a?_a:"").includes(normaliseString(targetValue)))return!1}}if(""!==this.sorters.castingtime){if(element.dataset.time!==this.sorters.castingtime)return!1}for(const filter of Object.keys(this.filters))if(Object.keys(this.filters[filter]).length>0){const filteredElements=element.dataset[filter];let hide=!0;if(filteredElements)for(const e of filteredElements.split(","))if(!0===this.filters[filter][e.trim()]){hide=!1;break}if(hide)return!1}return this.isWithinFilteredBounds(element)}isWithinFilteredBounds(element){var _a;const rangeIdentifiers=Object.keys(this.ranges);for(const range of rangeIdentifiers){const lowerBound=this.ranges[range].lowerBound,upperBound=this.ranges[range].upperBound,filter=Number(null!==(_a=element.dataset[range])&&void 0!==_a?_a:0);if(filter<lowerBound||upperBound<filter)return!1}return!0}resetFilters(){this.sorters={text:"",castingtime:""},this.filters={level:{},complex:{},classes:{},skills:{},ancestry:{},school:{},category:{},traditions:{},armortype:{},group:{},traits:{},itemtypes:{},rarity:{},consumabletype:{},proficiencies:{},actorsize:{},alignment:{},source:{},feattype:{}},this.ranges={level:{lowerBound:-1,upperBound:30}};const $controlAreas=this.element.find(".tab .control-area");$controlAreas.find("input[name=textFilter]").val(""),$controlAreas.find("input[name=timefilter]").val(""),$controlAreas.find("input[type=checkbox]:checked").prop("checked",!1)}sortResults($list,{sortBy="name",direction="asc"}){const $items=$list.children("li"),mappedList=(()=>{switch(sortBy){case"name":return $items.map(((index,element)=>({value:$(element).find(".name a")[0].innerHTML,element,index}))).toArray();case"level":return $items.map(((index,element)=>{var _a;const levelString=(null===(_a=element.dataset.level)||void 0===_a?void 0:_a.trim())||"0";return{value:Number(levelString),element,index}})).toArray();case"price":return $items.map(((index,element)=>{var _a,_b;if("kit"===element.dataset.itemtypes){return{value:(null!==(_a=element.dataset.price)&&void 0!==_a?_a:"0 gp").split(/,\s*/).map((coinValue=>(0,helpers_1.coinValueInCopper)((0,helpers_1.extractPriceFromItem)({data:{price:{value:coinValue},quantity:{value:1}}})))).reduce(((total,part)=>total+part),0),element,index}}return{value:(0,helpers_1.coinValueInCopper)((0,helpers_1.extractPriceFromItem)({data:{price:{value:null!==(_b=element.dataset.price)&&void 0!==_b?_b:"0 gp"},quantity:{value:1}}})),element,index}})).toArray()}})();mappedList.sort(((entryA,entryB)=>entryA.value<entryB.value?"asc"===direction?-1:1:entryA.value>entryB.value?"asc"===direction?1:-1:0));const rows=mappedList.map((mapping=>mapping.element));$list.html("");for(const row of rows)$list[0].append(row);this.activateResultListeners()}static extractSources(indexData,sources,sourcePath){sourcePath&&sourcePath.value&&(sourcePath.value.includes("pg.")?indexData.filters.source=sourcePath.value.split("pg.")[0].trim():sourcePath.value.includes("page.")?indexData.filters.source=sourcePath.value.split("page.")[0].trim():indexData.filters.source=sourcePath.value),indexData.filters.source&&sources.add(indexData.filters.source)}}exports.CompendiumBrowser=CompendiumBrowser},21946:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Progress=void 0;exports.Progress=class{constructor({steps=1}={}){this.steps=steps,this.counter=-1,this.label=""}advance(label){this.counter+=1,this.label=label,this.updateUI()}close(label){label&&(this.label=label),this.counter=this.steps,this.updateUI()}updateUI(){const $loader=$("#loading");if(0===$loader.length)return;const pct=Math.clamped(100*this.counter/this.steps,0,100);$loader.find("#context").text(this.label),$loader.find("#loading-bar").css({width:`${pct}%`,whiteSpace:"nowrap"}),$loader.find("#progress").text(`${this.counter} / ${this.steps}`),$loader.css({display:"block"}),this.counter!==this.steps||$loader.is(":hidden")||$loader.fadeOut(2e3)}}},78614:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectsPanel=void 0;const _item_1=__webpack_require__(10843);class EffectsPanel extends Application{constructor(){super(...arguments),this.refresh=foundry.utils.debounce(this.render,100)}get actor(){var _a,_b,_c,_d;return null!==(_d=null!==(_b=null===(_a=canvas.tokens.controlled[0])||void 0===_a?void 0:_a.actor)&&void 0!==_b?_b:null===(_c=game.user)||void 0===_c?void 0:_c.character)&&void 0!==_d?_d:null}static get defaultOptions(){return mergeObject(super.defaultOptions,{popOut:!1,template:"systems/pf2e/templates/system/effects-panel.html"})}getData(options){var _a;const data=Object.assign(Object.assign({},super.getData(options)),{actor:this.actor,effects:[],conditions:[]}),{itemTypes}=null!==(_a=data.actor)&&void 0!==_a?_a:{itemTypes:{condition:[],effect:[]}};return data.effects=itemTypes.effect.map((effect=>{var _a;const duration=effect.totalDuration,effectData=effect.clone({},{keepId:!0}).data;if(duration===1/0)effectData.data.expired=!1,effectData.data.remaining=game.i18n.localize("PF2E.EffectPanel.UnlimitedDuration");else{const duration=effect.remainingDuration;effectData.data.expired=duration.expired,effectData.data.remaining=effectData.data.expired?game.i18n.localize("PF2E.EffectPanel.Expired"):EffectsPanel.getRemainingDurationLabel(duration.remaining,null!==(_a=effectData.data.start.initiative)&&void 0!==_a?_a:0,effectData.data.duration.expiry)}return effectData})),data.conditions=game.pf2e.ConditionManager.getFlattenedConditions(itemTypes.condition).map((condition=>(condition.locked=condition.parents.length>0,condition.breakdown=EffectsPanel.getParentConditionsBreakdown(condition.parents),condition))),data}activateListeners($html){super.activateListeners($html);$html.find("div[data-item-id]").on("contextmenu",(async event=>{var _a;const $target=$(event.currentTarget);if($target.attr("data-locked"))return;const actor=this.actor,effect=null==actor?void 0:actor.items.get(null!==(_a=$target.attr("data-item-id"))&&void 0!==_a?_a:"");effect instanceof _item_1.ConditionPF2e?await(null==actor?void 0:actor.decreaseCondition(effect)):effect instanceof _item_1.EffectPF2e?await effect.delete():this.refresh()}))}static getParentConditionsBreakdown(conditions){let breakdown="";if((null!=conditions?conditions:[]).length>0){const list=Array.from(new Set(conditions.map((p=>p.name)))).sort().join(", ");breakdown=`${game.i18n.format("PF2E.EffectPanel.AppliedBy",{"condition-list":list})}`}return breakdown}static getRemainingDurationLabel(remaining,initiative,expiry){if(remaining>=63072e3)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleYears",{years:Math.floor(remaining/31536e3)});if(remaining>=31536e3)return game.i18n.localize("PF2E.EffectPanel.RemainingDuration.SingleYear");if(remaining>=1209600)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleWeeks",{weeks:Math.floor(remaining/604800)});if(remaining>604800)return game.i18n.localize("PF2E.EffectPanel.RemainingDuration.SingleWeek");if(remaining>=172800)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleDays",{days:Math.floor(remaining/86400)});if(remaining>7200)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleHours",{hours:Math.floor(remaining/3600)});if(remaining>120)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleMinutes",{minutes:Math.floor(remaining/60)});if(remaining>=12)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleRounds",{rounds:Math.floor(remaining/6)});if(remaining>=6)return game.i18n.localize("PF2E.EffectPanel.RemainingDuration.SingleRound");if(remaining>=2)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleSeconds",{seconds:remaining});if(1===remaining)return game.i18n.localize("PF2E.EffectPanel.RemainingDuration.SingleSecond");{const key="turn-end"===expiry?"PF2E.EffectPanel.RemainingDuration.ZeroRoundsExpireTurnEnd":"PF2E.EffectPanel.RemainingDuration.ZeroRoundsExpireTurnStart";return game.i18n.format(key,{initiative})}}}exports.EffectsPanel=EffectsPanel},86513:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LicenseViewer=void 0;class LicenseViewer extends Application{static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"license-viewer",title:game.i18n.localize("PF2E.LicenseViewer.Label"),template:"systems/pf2e/templates/packs/license-viewer.html",width:500,height:600,resizable:!0,tabs:[{navSelector:"nav",contentSelector:"section.content",initial:"landing-page"}]})}}exports.LicenseViewer=LicenseViewer},96735:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MigrationSummary=void 0;const migration_1=__webpack_require__(63051);class MigrationSummary extends Application{constructor(options={}){var _a,_b;super(options),this.isRemigrating=!1,null!==(_a=(_b=this.options).troubleshoot)&&void 0!==_a||(_b.troubleshoot=!1),this.options.title=options.troubleshoot?game.i18n.localize("PF2E.Migrations.Summary.Troubleshoot.Title"):game.i18n.localize("PF2E.Migrations.Summary.Title");const existing=Object.values(ui.windows).find((app=>app instanceof MigrationSummary));if(existing)return existing.options=mergeObject(existing.options,options),existing}get template(){return"systems/pf2e/templates/system/migration-summary.html"}static get defaultOptions(){return Object.assign(Object.assign({},super.defaultOptions),{id:"migration-summary",width:400,height:"auto"})}getData(){const latestSchemaVersion=migration_1.MigrationRunner.LATEST_SCHEMA_VERSION,actors={successful:game.actors.filter((actor=>actor.schemaVersion===latestSchemaVersion)).length,total:game.actors.size},items={successful:game.items.filter((item=>item.schemaVersion===latestSchemaVersion)).length,total:game.items.size},canRemigrate=this.options.troubleshoot||actors.successful<actors.total||items.successful<items.total;return{options:this.options,systemVersion:game.system.data.version,latestSchemaVersion,actors,items,canRemigrate,helpResources:canRemigrate&&this.isRemigrating}}activateListeners($html){super.activateListeners($html),$html.find('button[data-action="remigrate"]').on("click",(async event=>{const lowestSchemaVersion=Math.max(Math.min(0,...game.actors.map((actor=>{var _a;return null!==(_a=actor.schemaVersion)&&void 0!==_a?_a:0}))),migration_1.MigrationRunner.RECOMMENDED_SAFE_VERSION);$html.find(".docs-successful").text("...");try{this.isRemigrating=!0,this.options.troubleshoot=!1,$(event.currentTarget).prop("disabled",!0),await game.pf2e.system.remigrate({from:lowestSchemaVersion}),this.options.troubleshoot=!1,this.render(!1)}catch(_a){return}})),$html.find('button[data-action="close"]').on("click",(()=>this.close()))}}exports.MigrationSummary=MigrationSummary},39940:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var _a,__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SceneDarknessAdjuster=void 0;const _util_1=__webpack_require__(6945),nouislider_1=__importStar(__webpack_require__(25136));__webpack_require__(75926);class SceneDarknessAdjuster extends Application{constructor(){super(...arguments),this.scene=null}static get defaultOptions(){return Object.assign(Object.assign({},super.defaultOptions),{width:400,height:45,id:"darkness-adjuster",minimizable:!1})}get template(){return"systems/pf2e/templates/system/scene-darkness-adjuster.html"}async render(force=!0,options){if(this.scene=options.scene,!this.scene)return this;const bounds=ui.controls.element.find('li[data-tool="darkness-adjuster"]')[0].getBoundingClientRect();return options.left=bounds.right+6,options.top=bounds.top-3,super.render(force,options)}activateListeners($html){if(!this.scene)return;const $slider=$html.find(".slider");$("#darkness-adjuster").find(".window-header").remove(),this.slider=nouislider_1.default.create($slider[0],{range:{min:0,max:1},start:[.25,this.scene.data.darkness,.75],connect:[!0,!1,!1,!0],behaviour:"snap-unconstrained-snap",pips:{mode:nouislider_1.PipsMode.Range,density:5},step:.05}),$slider.find(".noUi-origin").each(((index,thumb)=>{1!==index&&$(thumb).attr({disabled:"disabled"})})),this.slider.on("slide",((values,thumbNumber)=>{1===thumbNumber&&canvas.lighting.refresh(Number(values[1]),{noHooks:!0})})),this.slider.on("change",((values,thumbNumber)=>{if(canvas.scene&&1===thumbNumber){const newValue=Number(values[1]);canvas.scene.update({darkness:newValue},{animateDarkness:Math.round(5e3*Math.abs(canvas.scene.data.darkness-newValue))})}})),$slider.find(".noUi-handle").each(((index,handle)=>{const decoration={0:["threshold_bright-light",(0,_util_1.fontAwesomeIcon)("sun")],1:["darkness-level",null],2:["threshold_darkness",(0,_util_1.fontAwesomeIcon)("moon")]},$handle=$(handle),[cssClass,icon]=decoration[index];icon&&$handle.append(icon),$handle.addClass(cssClass)})),$slider.find(".noUi-connect").each(((index,connect)=>{$(connect).addClass({0:"range_bright-light",1:"range_darkness"}[index])}))}onLightingRefresh(darkness){if(!this.rendered)return;const{slider}=this,sliderValues=null==slider?void 0:slider.get();if(slider&&Array.isArray(sliderValues)){const currentValue=sliderValues[1],stepValue=Math.round(20*darkness)/20;stepValue!==currentValue&&(sliderValues[1]=stepValue,slider.set(sliderValues))}}}exports.SceneDarknessAdjuster=SceneDarknessAdjuster,_a=SceneDarknessAdjuster,SceneDarknessAdjuster.instance=new _a},92443:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChatLogPF2e=void 0;const _actor_1=__webpack_require__(85530),rolls_1=__webpack_require__(87525),_util_1=__webpack_require__(6945);class ChatLogPF2e extends ChatLog{_getEntryContextOptions(){const options=super._getEntryContextOptions(),canApplyDamage=$html=>{var _a;const messageId=null!==(_a=$html.attr("data-message-id"))&&void 0!==_a?_a:"",message=game.messages.get(messageId,{strict:!0});return canvas.tokens.controlled.length>0&&message.isRoll&&1===$html.find(".chat-damage-buttons").length},canReroll=li=>game.messages.get(li.data("messageId"),{strict:!0}).isRerollable;return options.push({name:"PF2E.DamageButton.FullContext",icon:'<i class="fas fa-heart-broken"></i>',condition:canApplyDamage,callback:li=>_actor_1.ActorPF2e.applyDamage(li,1)},{name:"PF2E.DamageButton.HalfContext",icon:'<i class="fas fa-heart-broken"></i>',condition:canApplyDamage,callback:li=>_actor_1.ActorPF2e.applyDamage(li,.5)},{name:"PF2E.DamageButton.DoubleContext",icon:'<i class="fas fa-heart-broken"></i>',condition:canApplyDamage,callback:li=>_actor_1.ActorPF2e.applyDamage(li,2)},{name:"PF2E.DamageButton.TripleContext",icon:'<i class="fas fa-heart-broken"></i>',condition:$li=>canApplyDamage($li)&&1===$li.find("button.triple-damage").length,callback:li=>_actor_1.ActorPF2e.applyDamage(li,3)},{name:"PF2E.DamageButton.HealingContext",icon:'<i class="fas fa-heart"></i>',condition:canApplyDamage,callback:li=>_actor_1.ActorPF2e.applyDamage(li,-1)},{name:"PF2E.ClickToSetInitiativeContext",icon:'<i class="fas fa-fist-raised"></i>',condition:$li=>{var _a,_b,_c,_d,_e;const messageId=null!==(_a=$li.attr("data-message-id"))&&void 0!==_a?_a:"",message=game.messages.get(messageId,{strict:!0}),validActor="npc"===(null===(_c=null===(_b=message.token)||void 0===_b?void 0:_b.actor)||void 0===_c?void 0:_c.data.type)&&null===(null!==(_e=null===(_d=message.token.combatant)||void 0===_d?void 0:_d.initiative)&&void 0!==_e?_e:null),validRollType=message.isRoll&&message.isCheckRoll;return validActor&&validRollType},callback:$li=>{var _a,_b,_c,_d,_e;const message=game.messages.get(null!==(_a=$li.attr("data-message-id"))&&void 0!==_a?_a:"",{strict:!0}),roll=message.isRoll?message.roll:null;if(!roll||Number.isNaN(roll.total||"NaN"))throw(0,_util_1.ErrorPF2e)("No roll found");const token=message.token;token?token.setInitiative({initiative:roll.total}):ui.notifications.error(game.i18n.format("PF2E.Encounter.NoTokenInScene",{actor:null!==(_e=null!==(_c=null===(_b=message.actor)||void 0===_b?void 0:_b.name)&&void 0!==_c?_c:null===(_d=message.user)||void 0===_d?void 0:_d.name)&&void 0!==_e?_e:""}))}},{name:"PF2E.RerollMenu.HeroPoint",icon:'<i class="fas fa-hospital-symbol"></i>',condition:li=>{var _a;const message=game.messages.get(li.data("messageId"),{strict:!0}),actorId=null!==(_a=message.data.speaker.actor)&&void 0!==_a?_a:"",actor=game.actors.get(actorId);return message.isRerollable&&actor instanceof _actor_1.CharacterPF2e&&actor.heroPoints.value>0},callback:li=>rolls_1.CheckPF2e.rerollFromMessage(game.messages.get(li.data("messageId"),{strict:!0}),{heroPoint:!0})},{name:"PF2E.RerollMenu.KeepNew",icon:'<i class="fas fa-dice"></i>',condition:canReroll,callback:li=>rolls_1.CheckPF2e.rerollFromMessage(game.messages.get(li.data("messageId"),{strict:!0}))},{name:"PF2E.RerollMenu.KeepWorst",icon:'<i class="fas fa-dice-one"></i>',condition:canReroll,callback:li=>rolls_1.CheckPF2e.rerollFromMessage(game.messages.get(li.data("messageId"),{strict:!0}),{keep:"worst"})},{name:"PF2E.RerollMenu.KeepBest",icon:'<i class="fas fa-dice-six"></i>',condition:canReroll,callback:li=>rolls_1.CheckPF2e.rerollFromMessage(game.messages.get(li.data("messageId"),{strict:!0}),{keep:"best"})}),options}}exports.ChatLogPF2e=ChatLogPF2e},30109:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PackFolderPF2e=void 0;exports.PackFolderPF2e=class extends Array{constructor(items=[],{id,name,type,parent=null,expanded=!1}){super(...items),this.subfolders=[],this.id=id,this.type=type,this.name=name,this.parent=parent,this.expanded=expanded}get private(){return this.every((pack=>pack.private))&&this.subfolders.every((folder=>folder.private))}get visible(){return game.user.isGM||this.some((pack=>!pack.private))||this.subfolders.some((folder=>folder.visible))}push(summaryData){const packID=`pf2e.${summaryData.metadata.name}`,compendium=game.packs.get(packID);return(null==compendium?void 0:compendium.documentName)===this.type?super.push(summaryData):this.length}}},18226:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompendiumDirectoryPF2e=void 0;const localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),folder_1=__webpack_require__(30109);class CompendiumDirectoryPF2e extends CompendiumDirectory{constructor(){super(...arguments),this.folders=new Map}static get defaultOptions(){return Object.assign(Object.assign({},super.defaultOptions),{template:"systems/pf2e/templates/system/ui/compendium-directory.html",filters:[{inputSelector:'input[name="search"]',contentSelector:CompendiumDirectoryPF2e.contentSelector}],renderUpdateKeys:["name","permission","sort","folder"]})}getData(options){var _a,_b;const data=super.getData(options),packSummaries=Object.values(data.packs);for(const summary of packSummaries)summary.title=null!==(_b=null===(_a=localize_1.LocalizePF2e.translations.PF2E[summary.label])||void 0===_a?void 0:_a.Plural)&&void 0!==_b?_b:summary.label,this.setupFolders(summary);return data}setupFolders(summary){const summaryFolders=[];summary.folders=summaryFolders;const inFolders=summary.packs.filter((summaryData=>!!summaryData.metadata.folder));for(const summaryData of inFolders){const folder=summaryData.metadata.folder.split("/").reduce(((folder,folderPart)=>{const newFolder=this.findOrCreateFolder(folder,summaryData,folderPart);return this.folders.set(newFolder.id,newFolder),summaryFolders.includes(newFolder)||newFolder.parent||summaryFolders.push(newFolder),newFolder}),null);folder&&!folder.some((pack=>pack===summaryData))&&folder.push(summaryData)}}findOrCreateFolder(parent,summaryData,folderPart){var _a,_b;const metadata=summaryData.metadata,folderID=parent?`${parent.id}/${folderPart}`:`${metadata.package}.${folderPart}`,existingFolder=this.folders.get(folderID);if(existingFolder)return existingFolder;const folderName=null!==(_a=localize_1.LocalizePF2e.translations.PF2E.CompendiumDirectory.Folders[folderID.replace(/^[^.]+\./,"")])&&void 0!==_a?_a:folderPart,flagKey=`compendiumFolders.${folderID}.expanded`,newFolder=new folder_1.PackFolderPF2e([],{id:folderID,name:folderName,type:metadata.entity,parent,expanded:game.user.getFlag("pf2e",flagKey)});return null===(_b=null==parent?void 0:parent.subfolders)||void 0===_b||_b.push(newFolder),newFolder}activateListeners($html){super.activateListeners($html),$("#compendium > footer > button").on("click",(()=>{game.pf2e.compendiumBrowser.render(!0)}));for(const filter of this._searchFilters)for(const compendiumList of $html)filter.bind(compendiumList);$html.find("header.folder-header").on("click",(event=>{this.toggleFolder(event)})),$html.find("li.compendium-pack").on("click",(event=>{const $li=$(event.currentTarget),$icon=$li.find("i.folder");$icon.removeClass(["fa-folder","fa-folder-open"]),"1"===$li.attr("data-open")&&$icon.removeClass("fa-atlas").addClass("fa-book-open")}))}_canDragDrop(){return game.user.hasPermission("ACTOR_CREATE")}_onSearchFilter(_event,query){const $compendia=$(CompendiumDirectoryPF2e.contentSelector).find("li.compendium-pack"),isSearch=!!query,regexp=new RegExp(this.escape(query),"i"),$filteredRows=isSearch?$compendia.filter(((_i,row)=>{var _a;return regexp.test((null!==(_a=$(row).find("h4 a").text())&&void 0!==_a?_a:"").trim())})):$compendia;$filteredRows.css({display:"list-item"});$compendia.not($filteredRows).css({display:"none"});const $filteredFolders=$filteredRows.parents("li.folder");$filteredFolders.filter("li.folder.collapsed").children("header.folder-header").trigger("click");$compendia.parents("li.folder:not(.collapsed)").not($filteredFolders).children("header.folder-header").trigger("click")}toggleFolder(event){const $folder=$(event.currentTarget.parentElement),folderID=$folder.data("folder-id"),folder=this.folders.get(folderID);if(!folder)throw(0,_util_1.ErrorPF2e)("Unexpected failure to find folder");folder.expanded?(folder.expanded=!1,$folder.addClass("collapsed")):(folder.expanded=!0,$folder.removeClass("collapsed"));const flagKey=`compendiumFolders.${folder.id}.expanded`;game.user.setFlag("pf2e",flagKey,folder.expanded),this.popOut&&this.setPosition()}escape(text){return text.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&")}}exports.CompendiumDirectoryPF2e=CompendiumDirectoryPF2e,CompendiumDirectoryPF2e.contentSelector="ol.compendium-list"},64346:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.EncounterTrackerPF2e=void 0;const _util_1=__webpack_require__(6945),sortablejs_1=__importDefault(__webpack_require__(2344));class EncounterTrackerPF2e extends CombatTracker{static get defaultOptions(){const options=super.defaultOptions;return options.title="SIDEBAR.TabCombat",options}activateListeners($html){var _a,_b,_c,_d;const tracker=$html[0].querySelector("#combat-tracker");if(!tracker)throw(0,_util_1.ErrorPF2e)("No tracker found");const encounter=this.viewed;if(!encounter)return super.activateListeners($html);if(game.settings.get("pf2e","metagame.tokenSetsNameVisibility"))for(const row of Array.from(tracker.querySelectorAll("li.combatant"))){const combatantId=null!==(_a=row.dataset.combatantId)&&void 0!==_a?_a:"",combatant=encounter.combatants.get(combatantId,{strict:!0}),nameElement=row.querySelector(".token-name h4");if(!nameElement||game.user.isGM||combatant.playersCanSeeName||(nameElement.innerText=""),game.user.isGM&&!(null===(_b=combatant.actor)||void 0===_b?void 0:_b.hasPlayerOwner)){const toggleNameVisibility=document.createElement("a"),isActive=combatant.playersCanSeeName;toggleNameVisibility.classList.add(...["combatant-control",isActive?"active":[]].flat()),toggleNameVisibility.dataset.control="toggle-name-visibility",toggleNameVisibility.title=game.i18n.localize(isActive?"PF2E.Encounter.HideName":"PF2E.Encounter.RevealName");const icon=(0,_util_1.fontAwesomeIcon)("signature");toggleNameVisibility.append(icon),null===(_c=row.querySelector('.combatant-controls a[data-control="toggleHidden"]'))||void 0===_c||_c.after(toggleNameVisibility)}}game.user.isGM&&!(null===(_d=game.modules.get("combat-enhancements"))||void 0===_d?void 0:_d.active)&&sortablejs_1.default.create(tracker,{animation:200,dataIdAttr:"data-combatant-id",direction:"vertical",dragoverBubble:!0,easing:"cubic-bezier(1, 0, 0, 1)",ghostClass:"drag-gap",onUpdate:event=>this.onDropCombatant(event),onEnd:()=>this.saveNewOrder()}),super.activateListeners($html)}async _onCombatControl(event){const control=event.currentTarget.dataset.control;("rollNPC"===control||"rollAll"===control)&&this.viewed&&event.ctrlKey?(event.stopPropagation(),await this.viewed[control]({secret:!0})):await super._onCombatControl(event)}async _onCombatantControl(event){var _a;if(event.stopPropagation(),!this.viewed)return;const control=event.currentTarget.dataset.control,li=event.currentTarget.closest(".combatant"),combatant=this.viewed.combatants.get(null!==(_a=null==li?void 0:li.dataset.combatantId)&&void 0!==_a?_a:"",{strict:!0});"rollInitiative"===control&&event.ctrlKey?await this.viewed.rollInitiative([combatant.id],{secret:!0}):"toggle-name-visibility"===control?await combatant.toggleNameVisibility():await super._onCombatantControl(event)}async onDropCombatant(event){var _a;this.validateDrop(event);const encounter=this.viewed,droppedId=null!==(_a=event.item.getAttribute("data-combatant-id"))&&void 0!==_a?_a:"",dropped=encounter.combatants.get(droppedId,{strict:!0});if("number"!=typeof dropped.initiative)return void ui.notifications.error(game.i18n.format("PF2E.Encounter.HasNoInitiativeScore",{actor:dropped.name}));const newOrder=this.getCombatantsFromDOM(),oldOrder=encounter.turns.filter((c=>null!==c.initiative));newOrder.every((c=>newOrder.indexOf(c)===oldOrder.indexOf(c)))||(this.setInitiativeFromDrop(newOrder,dropped),await this.saveNewOrder(newOrder))}setInitiativeFromDrop(newOrder,dropped){var _a;const aboveDropped=newOrder.find((c=>newOrder.indexOf(c)===newOrder.indexOf(dropped)-1)),belowDropped=newOrder.find((c=>newOrder.indexOf(c)===newOrder.indexOf(dropped)+1)),hasAboveAndBelow=!!aboveDropped&&!!belowDropped,hasAboveAndNoBelow=!!aboveDropped&&!belowDropped,hasBelowAndNoAbove=!aboveDropped&&!!belowDropped,aboveIsHigherThanBelow=hasAboveAndBelow&&belowDropped.initiative<aboveDropped.initiative,belowIsHigherThanAbove=hasAboveAndBelow&&belowDropped.initiative<aboveDropped.initiative,wasDraggedUp=!!belowDropped&&(null===(_a=this.viewed)||void 0===_a?void 0:_a.getCombatantWithHigherInit(dropped,belowDropped))===belowDropped,wasDraggedDown=!!aboveDropped&&!wasDraggedUp;dropped.data.initiative=hasBelowAndNoAbove||aboveIsHigherThanBelow&&wasDraggedUp?belowDropped.initiative+1:hasAboveAndNoBelow||belowIsHigherThanAbove&&wasDraggedDown?aboveDropped.initiative-1:hasAboveAndBelow?belowDropped.initiative:dropped.initiative;const withSameInitiative=newOrder.filter((c=>c.initiative===dropped.initiative));if(withSameInitiative.length>1)for(let priority=0;priority<withSameInitiative.length;priority++)withSameInitiative[priority].data.flags.pf2e.overridePriority[dropped.initiative]=priority}async saveNewOrder(newOrder=this.getCombatantsFromDOM()){var _a;await(null===(_a=this.viewed)||void 0===_a?void 0:_a.setMultipleInitiatives(newOrder.map((c=>({id:c.id,value:c.initiative,overridePriority:c.overridePriority(c.initiative)})))))}validateDrop(event){const{combat}=game;if(!combat)throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving combat");const{oldIndex,newIndex}=event;if("number"!=typeof oldIndex||"number"!=typeof newIndex)throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving new index")}getCombatantsFromDOM(){const{combat}=game;if(!combat)throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving combat");const tracker=this.element[0].querySelector("#combat-tracker");if(!tracker)throw(0,_util_1.ErrorPF2e)("Unexpected failure to retriever tracker DOM element");return Array.from(tracker.querySelectorAll("li.combatant")).map((row=>{var _a;return null!==(_a=row.getAttribute("data-combatant-id"))&&void 0!==_a?_a:""})).map((id=>combat.combatants.get(id,{strict:!0}))).filter((c=>"number"==typeof c.initiative))}}exports.EncounterTrackerPF2e=EncounterTrackerPF2e},8320:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EncounterTrackerPF2e=exports.CompendiumDirectoryPF2e=exports.ChatLogPF2e=void 0;var chat_log_1=__webpack_require__(92443);Object.defineProperty(exports,"ChatLogPF2e",{enumerable:!0,get:function(){return chat_log_1.ChatLogPF2e}});var compendium_directory_1=__webpack_require__(18226);Object.defineProperty(exports,"CompendiumDirectoryPF2e",{enumerable:!0,get:function(){return compendium_directory_1.CompendiumDirectoryPF2e}});var encounter_tracker_1=__webpack_require__(64346);Object.defineProperty(exports,"EncounterTrackerPF2e",{enumerable:!0,get:function(){return encounter_tracker_1.EncounterTrackerPF2e}})},40851:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UnitedPaizoWorkers=void 0;class UnitedPaizoWorkers extends Application{static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"upw-viewer",title:game.i18n.localize("PF2E.UnitedPaizoWorkers.Title"),template:"systems/pf2e/templates/system/upw-viewer.html",width:650,height:240,resizable:!1})}}exports.UnitedPaizoWorkers=UnitedPaizoWorkers},92159:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AmbientLightPF2e=void 0;class AmbientLightPF2e extends AmbientLight{get brightRadius(){const ignoreLight=this.source.isDarkness||!this.visible;if(!canvas.sight.rulesBasedVision||ignoreLight)return super.brightRadius;return canvas.tokens.controlled.filter((token=>token.hasLowLightVision)).length>0?Math.max(this.dimRadius,super.brightRadius):super.brightRadius}get isDarkness(){return this.source.isDarkness}}exports.AmbientLightPF2e=AmbientLightPF2e},8189:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DarkvisionLayerPF2e=void 0;const _actor_1=__webpack_require__(85530),data_1=__webpack_require__(54096);class DarkvisionLayerPF2e extends CanvasLayer{constructor(){super(...arguments),this.filter=new PIXI.filters.ColorMatrixFilter,this.tileSprites=[]}static get layerOptions(){return foundry.utils.mergeObject(super.layerOptions,{name:"darkvision",zIndex:1,controllableObjects:!1,rotatableObjects:!1})}get userRequestsFilter(){return canvas.sight.rulesBasedVision&&game.user.settings.darkvisionFilter}getZIndex(){return canvas.background.getZIndex()+1}async draw(){var _a;if(await super.draw(),this.disable(),!this.userRequestsFilter)return this;const texture=canvas.background.bg.texture;this.background=PIXI.Sprite.from(texture);const{dimensions}=canvas;this.background.position.set(dimensions.paddingX-dimensions.shiftX,dimensions.paddingY-dimensions.shiftY),this.background.width=dimensions.sceneWidth,this.background.height=dimensions.sceneHeight,this.addChild(this.background);const tiles=canvas.background.placeables.filter((tile=>tile.tile&&tile.texture&&tile.visible));this.tileSprites=tiles.map((tile=>{const clone=PIXI.Sprite.from(tile.texture);return clone.x=tile.x,clone.y=tile.y,clone.height=tile.tile.height,clone.width=tile.tile.width,this.addChild(clone)}));for(const layer of[canvas.background,canvas.foreground])null!==(_a=layer.filters)&&void 0!==_a||(layer.filters=[]),layer.filters.includes(this.filter)||layer.filters.push(this.filter);return this.refresh({drawMask:!0})}refresh({darkness=canvas.lighting.darknessLevel,drawMask=!1}={}){if(!this.userRequestsFilter)return this;drawMask&&this.drawMask();const lightLevel=1-darkness;if(lightLevel<=data_1.LightLevels.DARKNESS&&canvas.sight.hasDarkvision){const saturation=this.getSaturation(lightLevel);this.filter.saturate(saturation),this.enable()}else this.disable();return this}drawMask(){const circles=(new PIXI.Graphics).beginFill(16777215);for(const source of canvas.lighting.sources)circles.drawPolygon(source.fov);const lightEmitters=canvas.tokens.placeables.flatMap((token=>token.isVisible&&token.emitsLight?token.light:[]));for(const source of lightEmitters)circles.drawPolygon(source.fov);circles.endFill();const blur=new PIXI.filters.BlurFilter(canvas.blurDistance);circles.filters=[blur];const texture=canvas.app.renderer.generateTexture(circles,PIXI.SCALE_MODES.NEAREST,1,canvas.dimensions.sceneRect),mask=new PIXI.Sprite(texture);for(const sprite of this.tileSprites)sprite.removeChildren(),sprite.mask=sprite.addChild(mask);this.background.removeChildren(),this.background.mask=this.background.addChild(mask)}getSaturation(lightLevel){const fetchlingSight=canvas.tokens.controlled.flatMap((token=>{var _a;return null!==(_a=token.actor)&&void 0!==_a?_a:[]})).some((actor=>{var _a;return actor instanceof _actor_1.CharacterPF2e&&"fetchling"===(null===(_a=actor.ancestry)||void 0===_a?void 0:_a.slug)})),monochrome=Math.clamped(4*lightLevel-1,-1,0);return fetchlingSight?-1*monochrome:monochrome}enable(){this.visible=!0,this.filter.enabled=!0}disable(){this.visible=!1,this.filter.enabled=!1}activate(){return this}}exports.DarkvisionLayerPF2e=DarkvisionLayerPF2e,DarkvisionLayerPF2e.documentName="Darkvision"},85336:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TemplateLayerPF2e=exports.SightLayerPF2e=exports.LightingLayerPF2e=exports.TokenPF2e=exports.MeasuredTemplatePF2e=exports.DarkvisionLayerPF2e=exports.AmbientLightPF2e=void 0;const ambient_light_1=__webpack_require__(92159);Object.defineProperty(exports,"AmbientLightPF2e",{enumerable:!0,get:function(){return ambient_light_1.AmbientLightPF2e}});const darkvision_layer_1=__webpack_require__(8189);Object.defineProperty(exports,"DarkvisionLayerPF2e",{enumerable:!0,get:function(){return darkvision_layer_1.DarkvisionLayerPF2e}});const lighting_layer_1=__webpack_require__(36696);Object.defineProperty(exports,"LightingLayerPF2e",{enumerable:!0,get:function(){return lighting_layer_1.LightingLayerPF2e}});const measured_template_1=__webpack_require__(25119);Object.defineProperty(exports,"MeasuredTemplatePF2e",{enumerable:!0,get:function(){return measured_template_1.MeasuredTemplatePF2e}});const sight_layer_1=__webpack_require__(28491);Object.defineProperty(exports,"SightLayerPF2e",{enumerable:!0,get:function(){return sight_layer_1.SightLayerPF2e}});const template_layer_1=__webpack_require__(1359);Object.defineProperty(exports,"TemplateLayerPF2e",{enumerable:!0,get:function(){return template_layer_1.TemplateLayerPF2e}});const token_1=__webpack_require__(756);Object.defineProperty(exports,"TokenPF2e",{enumerable:!0,get:function(){return token_1.TokenPF2e}})},36696:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LightingLayerPF2e=void 0;class LightingLayerPF2e extends LightingLayer{constructor(){super(...arguments),this.noRefreshHooks=!1}hasGlobalIllumination(){if(!canvas.scene)return!1;const{globalLight,globalLightThreshold}=canvas.scene.data;return globalLight&&(null===globalLightThreshold||this.darknessLevel<globalLightThreshold)}setPerceivedLightLevel({defer=!0}={}){if(!canvas.sight.rulesBasedVision)return;const lightEmitters=[...canvas.tokens.placeables.filter((token=>token.visible&&token.emitsLight)),...canvas.lighting.placeables.filter((light=>light.visible&&!light.isDarkness))];for(const emitter of lightEmitters)emitter.updateSource({defer:!0});defer||canvas.perception.update({lighting:{refresh:!0},sight:{initialize:!0,refresh:!0}})}refresh(darkness,{noHooks=!1}={}){var _a,_b,_c;if(canvas.sight.hasLowLightVision)for(const source of this.sources)source.isDarkness||(source.bright=Math.max(source.dim,source.bright),source.dim=0,source.ratio=1);if(this.noRefreshHooks=noHooks,super.refresh(darkness),this.noRefreshHooks=!1,canvas.sight.rulesBasedVision){this.blendFilter||(this.blendFilter=new PIXI.filters.BlurFilter(2*canvas.blurDistance),this.blendFilter.blendMode=PIXI.BLEND_MODES.SCREEN);for(const color of null!==(_b=null===(_a=canvas.lighting.coloration)||void 0===_a?void 0:_a.children)&&void 0!==_b?_b:[])null!==(_c=color.filters)&&void 0!==_c||(color.filters=[this.blendFilter])}}_onDarknessChange(darkness,prior){super._onDarknessChange(darkness,prior),canvas.darkvision.refresh({darkness})}}exports.LightingLayerPF2e=LightingLayerPF2e},25119:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MeasuredTemplatePF2e=void 0;class MeasuredTemplatePF2e extends MeasuredTemplate{get type(){return this.data.t}highlightGrid(){var _a,_b;if(!["circle","cone"].includes(this.type)||(null===(_a=canvas.scene)||void 0===_a?void 0:_a.data.gridType)!==CONST.GRID_TYPES.SQUARE)return super.highlightGrid();const grid=canvas.grid,dimensions=canvas.dimensions;if(!this.id||!this.shape)return;const highlightLayer=null===(_b=grid.getHighlightLayer(`Template.${this.id}`))||void 0===_b?void 0:_b.clear(),x=this.data.x,y=this.data.y,[cx,cy]=grid.getCenter(x,y),[col0,row0]=grid.grid.getGridPositionFromPixels(cx,cy),minAngle=(360+(this.data.direction-.5*this.data.angle)%360)%360,maxAngle=(360+(this.data.direction+.5*this.data.angle)%360)%360,originOffset={x:0,y:0};if("cone"===this.data.t){const dir=(this.data.direction>=0?360-this.data.direction:-this.data.direction)%360,xOffset=this.data.x%dimensions.size!=0?Math.sign(1*Math.round(100*Math.cos(Math.toRadians(dir)))/100)/2:0,yOffset=this.data.y%dimensions.size!=0?-Math.sign(1*Math.round(100*Math.sin(Math.toRadians(dir)))/100)/2:0;originOffset.x=xOffset,originOffset.y=yOffset}let origin={x:this.data.x+originOffset.x*dimensions.size,y:this.data.y+originOffset.y*dimensions.size};const rowCount=Math.ceil(1.5*this.data.distance/dimensions.distance/(dimensions.size/grid.h)),columnCount=Math.ceil(1.5*this.data.distance/dimensions.distance/(dimensions.size/grid.w));for(let a=-columnCount;a<columnCount;a++)for(let b=-rowCount;b<rowCount;b++){const[gx,gy]=canvas.grid.grid.getPixelsFromGridPosition(col0+a,row0+b),[cellCenterX,cellCenterY]=[gx+.5*dimensions.size,gy+.5*dimensions.size];origin={x:this.data.x,y:this.data.y},origin.x+=originOffset.x*dimensions.size,origin.y+=originOffset.y*dimensions.size;const ray=new Ray(origin,{x:cellCenterX,y:cellCenterY}),rayAngle=(360+ray.angle/(Math.PI/180)%360)%360;if("cone"===this.data.t&&ray.distance>0&&(value=(360+(value=rayAngle)%360)%360,!((min=(360+(min=minAngle)%360)%360)<(max=(360+(max=maxAngle)%360)%360)?value>=min&&value<=max:value>=min||value<=max)))continue;const destination={x:cellCenterX,y:cellCenterY},distance=this.measureDistance(destination,origin);if(highlightLayer&&distance<=this.data.distance){const color=this.fillColor,border=this.borderColor;grid.grid.highlightGridPosition(highlightLayer,{x:gx,y:gy,color,border})}}var min,max,value}static measureDistance(p0,p1){const gridSize=canvas.dimensions.size,ray=new Ray(p0,p1),nx=Math.ceil(Math.abs(ray.dx/gridSize)),ny=Math.ceil(Math.abs(ray.dy/gridSize)),nDiagonal=Math.min(nx,ny),nStraight=Math.abs(ny-nx);return Math.floor(1.5*nDiagonal+nStraight)*canvas.dimensions.distance}measureDistance(p0,p1){return MeasuredTemplatePF2e.measureDistance(p0,p1)}}exports.MeasuredTemplatePF2e=MeasuredTemplatePF2e},28491:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SightLayerPF2e=void 0;class SightLayerPF2e extends SightLayer{get rulesBasedVision(){const settingEnabled=game.settings.get("pf2e","automation.rulesBasedVision");return canvas.ready&&!!canvas.scene&&this.tokenVision&&settingEnabled}get hasLowLightVision(){return this.rulesBasedVision&&this.sources.some((source=>source.object.hasLowLightVision))}get hasDarkvision(){return this.rulesBasedVision&&this.sources.some((source=>source.object.hasDarkvision))}async initialize(){var _a;null===(_a=canvas.scene)||void 0===_a||_a.prepareData(),await super.initialize()}refresh({forceUpdateFog=!1,noUpdateFog=!1}={}){super.refresh({forceUpdateFog,noUpdateFog}),canvas.darkvision.refresh()}}exports.SightLayerPF2e=SightLayerPF2e},1359:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TemplateLayerPF2e=void 0;class TemplateLayerPF2e extends TemplateLayer{_onMouseWheel(event){const template=this._hover;if(!template)return;const snap="cone"===template.type?event.shiftKey?45:15:event.shiftKey?15:5,delta=snap*Math.sign(event.deltaY);return template.rotate(template.data.direction+delta,snap)}}exports.TemplateLayerPF2e=TemplateLayerPF2e},756:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenPF2e=void 0;class TokenPF2e extends Token{constructor(){super(...arguments),this.statusEffectChanged=!1}get isControlled(){return this._controlled}get isMoving(){return!!this._movement}get emitsDarkness(){return this.document.emitsDarkness}get hasLowLightVision(){return this.document.hasLowLightVision}get hasDarkvision(){return this.document.hasDarkvision}updateSource({defer=!1,deleted=!1,noUpdateFog=!1}={}){if(!canvas.sight.hasLowLightVision)return super.updateSource({defer,deleted,noUpdateFog});const original={dim:this.data.dimLight,bright:this.data.brightLight};this.data.brightLight=Math.max(this.data.dimLight,this.data.brightLight),this.data.dimLight=0,super.updateSource({defer,deleted,noUpdateFog}),this.data.dimLight=original.dim,this.data.brightLight=original.bright}async redraw(){var _a,_b;const sizeChanged=this.w!==this.hitArea.width,imageChanged=(null===(_a=this.icon)||void 0===_a?void 0:_a.src)!==this.data.img;if((sizeChanged||imageChanged)&&"vehicle"!==(null===(_b=this.actor)||void 0===_b?void 0:_b.type)){console.debug("PF2e System | Redrawing due to token size or image change");const visible=this.visible;await this.draw(),this.visible=visible}}emitHoverIn(){this.emit("mouseover",{data:{object:this}})}emitHoverOut(){this.emit("mouseout",{data:{object:this}})}async _drawIcon(){const icon=await super._drawIcon();return icon.src=this.data.img,icon}refresh(){var _a;if(null===(_a=this.icon)||void 0===_a?void 0:_a.transform)return super.refresh();{const visible=this.visible;return this.draw().then((()=>{this.visible=visible,super.refresh()})),this}}_isVisionSource(){var _a;return!!(null===(_a=this.actor)||void 0===_a?void 0:_a.hasPlayerOwner)&&!game.user.isGM&&game.settings.get("pf2e","metagame.partyVision")||super._isVisionSource()}_drawBar(number,bar,data){bar.geometry&&super._drawBar(number,bar,data)}_refreshBorder(){var _a;(null===(_a=this.border)||void 0===_a?void 0:_a.geometry)&&super._refreshBorder()}_refreshTarget(){var _a;(null===(_a=this.target)||void 0===_a?void 0:_a.geometry)&&super._refreshTarget()}clone(){const clone=super.clone();return clone.id||(clone.data.height=this.data.height,clone.data.width=this.data.width,clone.data.img=this.data.img),clone}async animateMovement(ray){await super.animateMovement(ray),canvas.darkvision.refresh({drawMask:!0})}_onControl(options){game.ready&&game.pf2e.effectPanel.refresh(),this.hasLowLightVision&&canvas.lighting.setPerceivedLightLevel({defer:!1}),super._onControl(options)}_onRelease(options){game.pf2e.effectPanel.refresh(),this.hasLowLightVision&&canvas.lighting.setPerceivedLightLevel(),super._onRelease(options)}}exports.TokenPF2e=TokenPF2e},97532:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CriticalHitAndFumbleCards=void 0;class CriticalHitAndFumbleCards{static handleDraw(chatMessage){var _a,_b,_c;if(chatMessage.isAuthor&&chatMessage.isContentVisible){const type=null!==(_b=null===(_a=chatMessage.getFlag("pf2e","context"))||void 0===_a?void 0:_a.type)&&void 0!==_b?_b:"",firstDie=null===(_c=chatMessage.roll)||void 0===_c?void 0:_c.dice[0];firstDie&&20===firstDie.faces&&this.rollTypes.includes(type)&&(20===firstDie.total?this.automaticDraw("critTable"):1===firstDie.total&&this.automaticDraw("fumbleTable"))}}static automaticDraw(table){var _a,_b;null!==(_a=this.diceSoNice)&&void 0!==_a||(this.diceSoNice=!!(null===(_b=game.modules.get("dice-so-nice"))||void 0===_b?void 0:_b.active)),this.diceSoNice?Hooks.once("diceSoNiceRollComplete",(()=>{this.drawFromTable(table,!0)})):this.drawFromTable(table,!0)}static drawFromTable(table,automatic=!1){const tableId="critTable"===table?"FTEpsIWWVrDj0jNG":"WzMGWMIrrPvSp75D";game.packs.get("pf2e.rollable-tables",{strict:!0}).getDocument(tableId).then((rollTable=>{rollTable.draw({displayChat:!1}).then((draw=>{const data={roll:draw.roll,messageData:{}};automatic&&!this.diceSoNice&&(data.messageData.sound=void 0),rollTable.toMessage(draw.results,data)}))}))}static appendButtons(chatMessage,$html){var _a,_b,_c;if(null!==(_a=this.appendButtonsOption)&&void 0!==_a||(this.appendButtonsOption=game.settings.get("pf2e","critFumbleButtons")),this.appendButtonsOption&&(chatMessage.isAuthor||game.user.isGM)&&chatMessage.isContentVisible){const type=null!==(_c=null===(_b=chatMessage.getFlag("pf2e","context"))||void 0===_b?void 0:_b.type)&&void 0!==_c?_c:"";if(this.rollTypes.includes(type)){const critButton=$(`<button class="dice-total-fullDamage-btn" style="width: 22px; height:22px; font-size:10px;line-height:1px"><i class="fas fa-thumbs-up" title="${game.i18n.localize("PF2E.CriticalHitCardButtonTitle")}"></i></button>`),fumbleButton=$(`<button class="dice-total-fullDamage-btn" style="width: 22px; height:22px; font-size:10px;line-height:1px"><i class="fas fa-thumbs-down" title="${game.i18n.localize("PF2E.CriticalFumbleCardButtonTitle")}"></i></button>`),btnContainer1=$('<span class="dmgBtn-container" style="position:absolute; right:0; bottom:1px;"></span>');btnContainer1.append(critButton),btnContainer1.append(fumbleButton),critButton.on("click",(event=>{event.stopPropagation(),this.drawFromTable("critTable"),event.currentTarget.blur()})),fumbleButton.on("click",(event=>{event.stopPropagation(),this.drawFromTable("fumbleTable"),event.currentTarget.blur()})),$html.find(".dice-total").wrapInner('<span id="value"></span>').append(btnContainer1)}}}}exports.CriticalHitAndFumbleCards=CriticalHitAndFumbleCards,CriticalHitAndFumbleCards.rollTypes=["attack-roll","spell-attack-roll"]},40405:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChatMessagePF2e=void 0;const cards_1=__webpack_require__(60780),crit_fumble_cards_1=__webpack_require__(97532),_item_1=__webpack_require__(10843),inline_roll_links_1=__webpack_require__(27542),damage_buttons_1=__webpack_require__(67545),degree_of_success_1=__webpack_require__(7066),chat_card_1=__webpack_require__(76907),set_as_initiative_1=__webpack_require__(938),user_visibility_1=__webpack_require__(96498);class ChatMessagePF2e extends ChatMessage{constructor(data={},context={}){var _a;data.flags=mergeObject(expandObject(null!==(_a=data.flags)&&void 0!==_a?_a:{}),{core:{},pf2e:{}}),super(data,context)}get isDamageRoll(){var _a;if(this.isRoll&&this.roll.terms.some((term=>term instanceof FateDie||term instanceof Coin)))return!1;const isDamageRoll=!!this.data.flags.pf2e.damageRoll,fromRollTable=!!this.data.flags.core.RollTable,isRoll=isDamageRoll||this.isRoll,isD20=isRoll&&this.roll&&20===(null===(_a=this.roll.dice[0])||void 0===_a?void 0:_a.faces)||!1;return isRoll&&!(isD20||fromRollTable)}get actor(){const fromItem=(()=>{var _a,_b,_c,_d,_e,_f,_g,_h;const origin=null!==(_b=null===(_a=this.data.flags.pf2e)||void 0===_a?void 0:_a.origin)&&void 0!==_b?_b:null,match=null!==(_d=/^(Actor|Scene)\.(\w+)/.exec(null!==(_c=null==origin?void 0:origin.uuid)&&void 0!==_c?_c:""))&&void 0!==_d?_d:[];switch(match[1]){case"Actor":return null!==(_e=game.actors.get(match[2]))&&void 0!==_e?_e:null;case"Scene":{const scene=game.scenes.get(match[2]),tokenId=null!==(_g=null===(_f=/(?<=Token\.)(\w+)/.exec(origin.uuid))||void 0===_f?void 0:_f[1])&&void 0!==_g?_g:"",token=null==scene?void 0:scene.tokens.get(tokenId);return null!==(_h=null==token?void 0:token.actor)&&void 0!==_h?_h:null}default:return null}})();return null!=fromItem?fromItem:ChatMessagePF2e.getSpeakerActor(this.data.speaker)}get isCheckRoll(){return this.isRoll&&!!this.data.flags.pf2e.context}get isReroll(){var _a;return!!(null===(_a=this.data.flags.pf2e.context)||void 0===_a?void 0:_a.isReroll)}get isRerollable(){var _a,_b;const actorId=null!==(_a=this.data.speaker.actor)&&void 0!==_a?_a:"",isOwner=!!(null===(_b=game.actors.get(actorId))||void 0===_b?void 0:_b.isOwner);return this.isCheckRoll&&!this.isReroll&&isOwner&&this.canUserModify(game.user,"update")}get item(){var _a,_b,_c,_d,_e,_f,_g;const domItem=this.getItemFromDOM();if(domItem)return domItem;const origin=null!==(_b=null===(_a=this.data.flags.pf2e)||void 0===_a?void 0:_a.origin)&&void 0!==_b?_b:null,match=null!==(_d=/Item\.(\w+)/.exec(null!==(_c=null==origin?void 0:origin.uuid)&&void 0!==_c?_c:""))&&void 0!==_d?_d:[];return null!==(_g=null===(_e=this.actor)||void 0===_e?void 0:_e.items.get(null!==(_f=null==match?void 0:match[1])&&void 0!==_f?_f:""))&&void 0!==_g?_g:null}getItemFromDOM(){var _a;const sourceString=null!==(_a=$("ol#chat-log").children(`li[data-message-id="${this.id}"]`).find("div.pf2e.item-card").attr("data-embedded-item"))&&void 0!==_a?_a:"null";try{const itemSource=JSON.parse(sourceString);return itemSource?new _item_1.ItemPF2e(itemSource,{parent:this.actor}):null}catch(_error){return null}}get alias(){var _a,_b,_c,_d,_e,_f;const speaker=this.data.speaker;return null!==(_f=null!==(_d=null!==(_a=speaker.alias)&&void 0!==_a?_a:null===(_c=game.actors.get(null!==(_b=speaker.actor)&&void 0!==_b?_b:""))||void 0===_c?void 0:_c.name)&&void 0!==_d?_d:null===(_e=this.user)||void 0===_e?void 0:_e.name)&&void 0!==_f?_f:""}get token(){var _a,_b,_c,_d;if(!game.scenes)return null;const sceneId=null!==(_a=this.data.speaker.scene)&&void 0!==_a?_a:"",tokenId=null!==(_b=this.data.speaker.token)&&void 0!==_b?_b:"";return null!==(_d=null===(_c=game.scenes.get(sceneId))||void 0===_c?void 0:_c.tokens.get(tokenId))&&void 0!==_d?_d:null}async getHTML(){const $html=await super.getHTML();return user_visibility_1.UserVisibility.process($html,{message:this,actor:this.actor}),this.isDamageRoll&&this.isContentVisible&&(await damage_buttons_1.DamageButtons.append(this,$html),$html.find(".flavor-text > div:has(.tags)").removeAttr("style").attr({"data-pf2e-deprecated":!0})),crit_fumble_cards_1.CriticalHitAndFumbleCards.appendButtons(this,$html),cards_1.ChatCards.listen($html),inline_roll_links_1.InlineRollsLinks.listen($html),degree_of_success_1.DegreeOfSuccessHighlights.listen(this,$html),canvas.ready&&set_as_initiative_1.SetAsInitiative.listen($html),$html.find(".tag[data-trait]").each(((_idx,span)=>{const $tag=$(span),description=$tag.attr("data-description");description&&$tag.tooltipster({content:game.i18n.localize(description),maxWidth:400,theme:"crb-hover"})})),$html.on("mouseenter",(()=>this.onHoverIn())),$html.on("mouseleave",(()=>this.onHoverOut())),$html.find(".message-sender").on("click",this.onClick.bind(this)),$html}onHoverIn(){var _a;const token=null===(_a=this.token)||void 0===_a?void 0:_a.object;(null==token?void 0:token.isVisible)&&!token.isControlled&&token.emitHoverIn()}onHoverOut(){var _a,_b;null===(_b=null===(_a=this.token)||void 0===_a?void 0:_a.object)||void 0===_b||_b.emitHoverOut()}onClick(event){var _a;event.preventDefault();const token=null===(_a=this.token)||void 0===_a?void 0:_a.object;(null==token?void 0:token.isVisible)&&(token.isControlled?token.release():token.control({releaseOthers:!event.shiftKey}))}async _preCreate(data,options,user){return this.isDamageRoll&&game.settings.get("pf2e","automation.experimentalDamageFormatting")&&await chat_card_1.DamageChatCard.preformat(this),super._preCreate(data,options,user)}_onCreate(data,options,userId){super._onCreate(data,options,userId),this.isRoll&&game.settings.get("pf2e","drawCritFumble")&&crit_fumble_cards_1.CriticalHitAndFumbleCards.handleDraw(this)}}exports.ChatMessagePF2e=ChatMessagePF2e},60780:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChatCards=void 0;const _item_1=__webpack_require__(10843),_actor_1=__webpack_require__(85530),helpers_1=__webpack_require__(71046),localize_1=__webpack_require__(41332),spell_consumables_1=__webpack_require__(87458),helpers_2=__webpack_require__(67285);exports.ChatCards={listen:$html=>{$html.find('.card-buttons button, button[data-action="consume"]').on("click",(async event=>{var _a,_b,_c,_d,_e,_f,_g;event.preventDefault();const button=$(event.currentTarget),messageId=null!==(_a=button.parents(".message").attr("data-message-id"))&&void 0!==_a?_a:"",message=game.messages.get(messageId),card=button.parents(".chat-card"),action=button.attr("data-action"),item=null==message?void 0:message.item,actor=null!==(_b=null==item?void 0:item.actor)&&void 0!==_b?_b:null==message?void 0:message.actor;if(actor&&(game.user.isGM||actor.isOwner||"save"===action))if(item){const spell=item instanceof _item_1.SpellPF2e?item:item instanceof _item_1.ConsumablePF2e?item.embeddedSpell:null,strike="actions"in actor.data.data&&null!==(_c=actor.data.data.actions.find((a=>a.item===item.id)))&&void 0!==_c?_c:null,rollOptions=actor.getRollOptions(["all","attack-roll"]);if("weaponAttack"===action)strike&&rollOptions&&strike.variants[0].roll({event,options:rollOptions});else if("weaponAttack2"===action)strike&&rollOptions&&strike.variants[1].roll({event,options:rollOptions});else if("weaponAttack3"===action)strike&&rollOptions&&strike.variants[2].roll({event,options:rollOptions});else if("weaponDamage"===action)strike&&rollOptions&&strike.damage({event,options:rollOptions});else if("weaponDamageCritical"===action||"criticalDamage"===action)strike&&rollOptions&&strike.critical({event,options:rollOptions});else if("npcAttack"===action&&item instanceof _item_1.MeleePF2e)item.rollNPCAttack(event);else if("npcAttack2"===action&&item instanceof _item_1.MeleePF2e)item.rollNPCAttack(event,2);else if("npcAttack3"===action&&item instanceof _item_1.MeleePF2e)item.rollNPCAttack(event,3);else if("npcDamage"===action&&item instanceof _item_1.MeleePF2e)item.rollNPCDamage(event);else if("npcDamageCritical"===action&&item instanceof _item_1.MeleePF2e)item.rollNPCDamage(event,!0);else if("spellAttack"===action)null==spell||spell.rollAttack(event);else if("spellAttack2"===action)null==spell||spell.rollAttack(event,2);else if("spellAttack3"===action)null==spell||spell.rollAttack(event,3);else if("spellDamage"===action)null==spell||spell.rollDamage(event);else if("spellCounteract"===action)item.rollCounteract(event);else if("spellTemplate"===action)item.placeTemplate(event);else if("consume"===action){if(item instanceof _item_1.ConsumablePF2e)item.consume();else if(item instanceof _item_1.MeleePF2e){const consumable=actor.items.get(null!==(_d=button.attr("data-item"))&&void 0!==_d?_d:"");if(consumable instanceof _item_1.ConsumablePF2e){const oldQuant=consumable.data.data.quantity.value,toReplace=`${consumable.name} - ${localize_1.LocalizePF2e.translations.ITEM.TypeConsumable} (${oldQuant})`;await consumable.consume();const currentQuant=1===oldQuant?0:consumable.data.data.quantity.value;let flavor=null===(_e=message.data.flavor)||void 0===_e?void 0:_e.replace(toReplace,`${consumable.name} - ${localize_1.LocalizePF2e.translations.ITEM.TypeConsumable} (${currentQuant})`);if(0===currentQuant){const buttonStr=`>${localize_1.LocalizePF2e.translations.PF2E.ConsumableUseLabel}</button>`;flavor=null==flavor?void 0:flavor.replace(buttonStr," disabled"+buttonStr)}await message.update({flavor}),message.render(!0)}}}else"save"===action&&_actor_1.ActorPF2e.rollSave(event,item)}else if(actor instanceof _actor_1.CharacterPF2e||actor instanceof _actor_1.NPCPF2e){const strikeIndex=card.attr("data-strike-index"),strikeName=card.attr("data-strike-name"),strikeAction=actor.data.data.actions[Number(strikeIndex)];if(strikeAction&&strikeAction.name===strikeName){const options=actor.getRollOptions(["all","attack-roll"]);"strikeAttack"===action?strikeAction.variants[0].roll({event,options}):"strikeAttack2"===action?strikeAction.variants[1].roll({event,options}):"strikeAttack3"===action?strikeAction.variants[2].roll({event,options}):"strikeDamage"===action?null===(_f=strikeAction.damage)||void 0===_f||_f.call(strikeAction,{event,options}):"strikeCritical"===action&&(null===(_g=strikeAction.critical)||void 0===_g||_g.call(strikeAction,{event,options}))}if("pay-crafting-costs"===action){const itemUuid=card.attr("data-item-uuid")||"",item=await fromUuid(itemUuid);if(null===item||!(item instanceof _item_1.PhysicalItemPF2e))return;const quantity=Number(card.attr("data-crafting-quantity"))||1,craftingCost=(0,helpers_1.extractPriceFromItem)({data:{quantity:{value:quantity},price:item.data.data.price}}),coinsToRemove=button.hasClass("full")?craftingCost:(0,helpers_1.multiplyCoinValue)(craftingCost,.5);if(!await(0,helpers_1.attemptToRemoveCoinsByValue)({actor,coinsToRemove}))return void ui.notifications.warn(game.i18n.localize("PF2E.Actions.Craft.Warning.InsufficientCoins"));if((0,spell_consumables_1.isSpellConsumable)(item.id))return(0,helpers_2.craftSpellConsumable)(item,quantity,actor),void ChatMessage.create({user:game.user.id,content:game.i18n.format("PF2E.Actions.Craft.Information.PayAndReceive",{actorName:actor.name,cost:(0,helpers_1.coinsToString)(coinsToRemove),quantity,itemName:item.name}),speaker:{alias:actor.name}});const itemObject=item.toObject();itemObject.data.quantity.value=quantity;if(!await actor.addToInventory(itemObject,void 0))return void ui.notifications.warn(game.i18n.localize("PF2E.Actions.Craft.Warning.CantAddItem"));ChatMessage.create({user:game.user.id,content:game.i18n.format("PF2E.Actions.Craft.Information.PayAndReceive",{actorName:actor.name,cost:(0,helpers_1.coinsToString)(coinsToRemove),quantity,itemName:item.name}),speaker:{alias:actor.name}})}else if("lose-materials"===action){const itemUuid=card.attr("data-item-uuid")||"",item=await fromUuid(itemUuid);if(null===item||!(item instanceof _item_1.PhysicalItemPF2e))return;const quantity=Number(card.attr("data-crafting-quantity"))||1,craftingCost=(0,helpers_1.extractPriceFromItem)({data:{quantity:{value:quantity},price:item.data.data.price}}),materialCosts=(0,helpers_1.multiplyCoinValue)(craftingCost,.5),coinsToRemove=(0,helpers_1.multiplyCoinValue)(materialCosts,.1);await(0,helpers_1.attemptToRemoveCoinsByValue)({actor,coinsToRemove})?ChatMessage.create({user:game.user.id,content:game.i18n.format("PF2E.Actions.Craft.Information.PayAndReceive",{actorName:actor.name,cost:(0,helpers_1.coinsToString)(coinsToRemove)}),speaker:{alias:actor.name}}):ui.notifications.warn(game.i18n.localize("PF2E.Actions.Craft.Warning.InsufficientCoins"))}}}))}}},67545:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DamageButtons=void 0;const base_1=__webpack_require__(65532),localize_1=__webpack_require__(41332);function applyDamage(html,multiplier,promptModifier=!1){var _a;let attribute="attributes.hp";const $button=html.find("button.shield-block");CONFIG.PF2E.chatDamageButtonShieldToggle&&multiplier>0&&(attribute="attributes.shield",$button.removeClass("shield-activated"),CONFIG.PF2E.chatDamageButtonShieldToggle=!1);const shieldID=null!==(_a=$button.attr("data-shield-id"))&&void 0!==_a?_a:void 0;promptModifier?function(html,multiplier,attributePassed="attributes.hp"){new Dialog({title:game.i18n.localize("PF2E.UI.shiftModifyDamageTitle"),content:`<form>\n                <div class="form-group">\n                    <label>${game.i18n.localize("PF2E.UI.shiftModifyDamageLabel")}</label>\n                    <input type="number" name="modifier" value="" placeholder="0">\n                </div>\n                <p style="line-height:160%">${game.i18n.localize("PF2E.UI.shiftModifyDamageHint")}</p>\n                </form>\n                <script type="text/javascript">\n                $(function () {\n                    $(".form-group input").focus();\n                });\n                <\/script>`,buttons:{ok:{label:"Ok",callback:async dialogHtml=>{let modifier=parseFloat(dialogHtml.find('[name="modifier"]').val());Number.isNaN(modifier)&&(modifier=0),void 0!==modifier&&await base_1.ActorPF2e.applyDamage(html,multiplier,attributePassed,modifier)}}},default:"ok",close:()=>{}}).render(!0)}(html,multiplier,attribute):base_1.ActorPF2e.applyDamage(html,multiplier,attribute,0,{shieldID})}exports.DamageButtons={append:async(message,html)=>{const $buttons=$(await renderTemplate("systems/pf2e/templates/chat/damage/buttons.html",{showTripleDamage:game.settings.get("pf2e","critFumbleButtons")}));html.find(".message-content").append($buttons);const full=html.find("button.full-damage"),half=html.find("button.half-damage"),double=html.find("button.double-damage"),triple=html.find("button.triple-damage"),heal=html.find("button.heal-damage"),contentSelector=`li.chat-message[data-message-id="${message.id}"] div.hover-content`,$shield=html.find("button.shield-block").attr({"data-tooltip-content":contentSelector}).tooltipster({animation:"fade",trigger:"click",arrow:!1,contentAsHTML:!0,debug:!1,interactive:!0,side:["top"],theme:"crb-hover"});$shield.tooltipster("disable"),html.find("button.shield-block").attr({title:localize_1.LocalizePF2e.translations.PF2E.DamageButton.ShieldBlock}),full.on("click",(event=>{applyDamage(html,1,event.shiftKey)})),half.on("click",(event=>{applyDamage(html,.5,event.shiftKey)})),double.on("click",(event=>{applyDamage(html,2,event.shiftKey)})),null==triple||triple.on("click",(event=>{applyDamage(html,3,event.shiftKey)})),$shield.on("click",(async event=>{const tokens=canvas.tokens.controlled.filter((token=>token.actor));if(0===tokens.length){const errorMsg=localize_1.LocalizePF2e.translations.PF2E.UI.errorTargetToken;return ui.notifications.error(errorMsg),void event.stopPropagation()}const nonBrokenShields=tokens[0].actor.itemTypes.armor.filter((armor=>armor.isEquipped&&armor.isShield)).filter((shield=>!shield.isBroken)),multipleShields=1===tokens.length&&nonBrokenShields.length>1,shieldActivated=$shield.hasClass("shield-activated");if(multipleShields&&!shieldActivated){$shield.tooltipster("enable");const $list=$buttons.find("ul.shield-options");$list.children("li").remove();const $template=$list.children("template");for(const shield of nonBrokenShields){const $listItem=$($template.html());$listItem.children("input.data").val(shield.id),$listItem.children("span.label").text(shield.name);const hardnessLabel=localize_1.LocalizePF2e.translations.PF2E.ShieldHardnessLabel;$listItem.children("span.tag").text(`${hardnessLabel}: ${shield.hardness}`),$list.append($listItem)}return $list.find("li input").on("change",(event=>{const $input=$(event.currentTarget);$shield.attr({"data-shield-id":$input.val()}),$shield.tooltipster("close").tooltipster("disable"),$shield.addClass("shield-activated"),CONFIG.PF2E.chatDamageButtonShieldToggle=!0})),void $shield.tooltipster("open")}$shield.tooltipster("disable"),$shield.removeAttr("data-shield-id"),event.stopPropagation(),$shield.toggleClass("shield-activated"),CONFIG.PF2E.chatDamageButtonShieldToggle=!CONFIG.PF2E.chatDamageButtonShieldToggle})),heal.on("click",(event=>{applyDamage(html,-1,event.shiftKey)}))}}},7066:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DegreeOfSuccessHighlights=void 0,exports.DegreeOfSuccessHighlights={listen:(message,$html)=>{var _a;if($html.find(".pf2e-reroll-indicator").length>0)return;if(!message.isRoll||!message.roll||message.getFlag("pf2e","damageRoll"))return;const dice=null!==(_a=message.roll.dice[0])&&void 0!==_a?_a:{};if(20!==dice.faces||!message.isContentVisible)return;const $diceTotal=$html.find(".dice-total");20===dice.total?$diceTotal.addClass("success"):1===dice.total&&$diceTotal.addClass("failure")}}},938:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SetAsInitiative=void 0,exports.SetAsInitiative={listen:$li=>{var _a;const message=game.messages.get(null!==(_a=$li.attr("data-message-id"))&&void 0!==_a?_a:"",{strict:!0}),{context}=message.data.flags.pf2e;if(message.token&&(message.isAuthor||game.user.isGM)&&("skill-check"===(null==context?void 0:context.type)||"perception-check"===(null==context?void 0:context.type))){const btnStyling="width: 22px; height:22px; font-size:10px;line-height:1px",initiativeButtonTitle=game.i18n.localize("PF2E.ClickToSetInitiative"),setInitiativeButton=$(`<button class="dice-total-setInitiative-btn" style="${btnStyling}"><i class="fas fa-fist-raised" title="${initiativeButtonTitle}"></i></button>`),btnContainer=$('<span class="dmgBtn-container" style="position:absolute; right:0; bottom:1px;"></span>');btnContainer.append(setInitiativeButton);$li.find(".dice-total").append(btnContainer),setInitiativeButton.on("click",(()=>{var _a;null===(_a=message.token)||void 0===_a||_a.setInitiative({initiative:message.roll.total})}))}}}},45210:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CraftingEntry=void 0;const _util_1=__webpack_require__(6945),formula_1=__webpack_require__(5957);exports.CraftingEntry=class{constructor(parentActor,knownFormulas,data){this.parentActor=parentActor,this.actorPreparedFormulas=data.actorPreparedFormulas,this.selector=data.selector,this.name=data.name,this.isAlchemical=data.isAlchemical,this.isDailyPrep=data.isDailyPrep,this.isPrepared=data.isPrepared,this.requiredTraits=data.requiredTraits,this.maxSlots=data.maxSlots,this.maxItemLevel=data.maxItemLevel,this.fieldDiscovery=data.fieldDiscovery,this.batchSize=data.batchSize,this.fieldDiscoveryBatchSize=data.fieldDiscoveryBatchSize,knownFormulas&&this.actorPreparedFormulas?this.preparedFormulas=this.actorPreparedFormulas.map((prepData=>{const formula=knownFormulas.find((formula=>formula.uuid===prepData.itemUUID));if(formula)return Object.assign(new formula_1.CraftingFormula(formula.item),{quantity:prepData.quantity,expended:prepData.expended,isSignatureItem:prepData.isSignatureItem})})).filter((prepData=>void 0!==prepData)):this.preparedFormulas=[]}get formulas(){const formulas=[];if(Object.assign(formulas,this.preparedFormulas),this.maxSlots){const fill=this.maxSlots-this.preparedFormulas.length;if(fill>0){const nulls=new Array(fill).fill(null);return formulas.concat(nulls)}}return formulas}get formulasByLevel(){return Object.fromEntries((0,_util_1.groupBy)(this.preparedFormulas,(prepData=>prepData.level)))}get reagentCost(){if(!this.isAlchemical)return 0;const fieldDiscoveryQuantity=this.preparedFormulas.filter((f=>f.item.traits.has(this.fieldDiscovery)||f.isSignatureItem)).reduce(((sum,current)=>sum+(current.quantity||1)),0),otherQuantity=this.preparedFormulas.filter((f=>!f.item.traits.has(this.fieldDiscovery)&&!f.isSignatureItem)).reduce(((sum,current)=>sum+(current.quantity||1)),0),fieldDiscoveryBatchSize=this.fieldDiscoveryBatchSize||3,batchSize=this.batchSize||2;return Math.floor(fieldDiscoveryQuantity/fieldDiscoveryBatchSize)+Math.ceil((fieldDiscoveryQuantity%fieldDiscoveryBatchSize+otherQuantity)/batchSize)}async prepareFormula(formula){if(this.checkEntryRequirements(formula),this.isAlchemical&&this.preparedFormulas.find((f=>f.uuid===formula.uuid))){const index=this.preparedFormulas.findIndex((f=>f.uuid===formula.uuid)),quantity=this.preparedFormulas[index].quantity||1;this.preparedFormulas[index].quantity=quantity+1}else{const prepData=formula;this.isAlchemical&&(prepData.quantity=1),this.preparedFormulas.push(prepData)}this.updateActorEntryFormulas()}checkEntryRequirements(formula){this.maxSlots&&this.preparedFormulas.length>=this.maxSlots||(this.parentActor.level<formula.level&&ui.notifications.warn(game.i18n.localize("PF2E.CraftingTab.Alerts.CharacterLevel")),this.maxItemLevel&&formula.level>this.maxItemLevel&&ui.notifications.warn(game.i18n.localize("PF2E.CraftingTab.Alerts.MaxItemLevel")),this.requiredTraits&&!this.requiredTraits.some((traits=>traits.every((t=>formula.item.traits.has(t)))))&&ui.notifications.warn(game.i18n.format("PF2E.CraftingTab.Alerts.ItemMissingTraits",{traits:JSON.stringify(this.requiredTraits)})))}async unprepareFormula(index,itemUUID){const prepData=this.preparedFormulas[index];prepData&&prepData.item.uuid===itemUUID&&(this.preparedFormulas.splice(index,1),this.updateActorEntryFormulas())}async increaseFormulaQuantity(index,itemUUID){const prepData=this.preparedFormulas[index];prepData&&prepData.item.uuid===itemUUID&&(prepData.quantity?prepData.quantity+=1:prepData.quantity=2,this.updateActorEntryFormulas())}async decreaseFormulaQuantity(index,itemUUID){const prepData=this.preparedFormulas[index];prepData&&prepData.item.uuid===itemUUID&&(prepData.quantity?prepData.quantity-=1:prepData.quantity=0,prepData.quantity<=0?await this.unprepareFormula(index,itemUUID):this.updateActorEntryFormulas())}async toggleFormulaExpended(index,itemUUID){const prepData=this.preparedFormulas[index];prepData&&prepData.item.uuid===itemUUID&&(prepData.expended=!prepData.expended,this.updateActorEntryFormulas())}async toggleSignatureItem(index,itemUUID){const prepData=this.preparedFormulas[index];prepData&&prepData.item.uuid===itemUUID&&(prepData.isSignatureItem=!prepData.isSignatureItem,this.updateActorEntryFormulas())}async updateActorEntryFormulas(){const actorPreparedFormulas=this.preparedFormulas.map((data=>({itemUUID:data.item.uuid,quantity:data.quantity,expended:data.expended,isSignatureItem:data.isSignatureItem})));await this.parentActor.update({[`data.crafting.entries.${this.selector}.actorPreparedFormulas`]:actorPreparedFormulas})}}},5957:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CraftingFormula=void 0;const _item_1=__webpack_require__(10843),bulk_1=__webpack_require__(47297),dc_1=__webpack_require__(84372);exports.CraftingFormula=class{constructor(item,{dc,batchSize,deletable=!1}={}){this.item=item,this.dc=null!=dc?dc:(0,dc_1.calculateDC)(item.level,{rarity:item.rarity,proficiencyWithoutLevel:"ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant")}),this.batchSize=Math.max(null!=batchSize?batchSize:1,this.minimumBatchSize),this.deletable=deletable}get uuid(){return this.item.uuid}get img(){return this.item.img}get name(){return this.item.name}get level(){return this.item.level}get rarity(){return this.item.rarity}get price(){return this.item.price}get minimumBatchSize(){var _a,_b;return null!==(_b=null===(_a=bulk_1.stackDefinitions[this.item.data.data.stackGroup.value])||void 0===_a?void 0:_a.size)&&void 0!==_b?_b:1}get defaultBatchSize(){const{item}=this,isMundaneAmmo=item instanceof _item_1.ConsumablePF2e&&item.isAmmunition&&!item.isMagical,isConsumable=item instanceof _item_1.ConsumablePF2e&&"wand"!==item.consumableType||item instanceof _item_1.WeaponPF2e&&"alchemical-bomb"===item.baseType;return Math.max(this.minimumBatchSize,isMundaneAmmo?10:"rations"===item.slug?28:isConsumable?4:1)}get description(){return this.item.description}}},67285:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.renderCraftingInline=exports.craftSpellConsumable=exports.craftItem=void 0;const helpers_1=__webpack_require__(71046),degree_of_success_1=__webpack_require__(7859),_actor_1=__webpack_require__(85530),earn_income_1=__webpack_require__(67184),_item_1=__webpack_require__(10843),spell_consumables_1=__webpack_require__(87458);function prepStrings(costs,itemUuid){return{reductionPerDay:(0,helpers_1.coinsToString)(costs.reductionPerDay),materialCost:game.i18n.format("PF2E.Actions.Craft.Details.PayMaterials",{cost:(0,helpers_1.coinsToString)(costs.materials)}),itemCost:game.i18n.format("PF2E.Actions.Craft.Details.PayFull",{cost:(0,helpers_1.coinsToString)(costs.itemPrice)}),lostMaterials:game.i18n.format("PF2E.Actions.Craft.Details.LostMaterials",{cost:(0,helpers_1.coinsToString)(costs.lostMaterials)}),itemLink:game.pf2e.TextEditor.enrichHTML("@"+itemUuid.replace(".","[")+"]")}}async function craftItem(item,itemQuantity,actor){const itemSource=item.toObject();itemSource.data.quantity.value=itemQuantity;await actor.addToInventory(itemSource)?ChatMessage.create({user:game.user.id,content:game.i18n.format("PF2E.Actions.Craft.Information.ReceiveItem",{actorName:actor.name,quantity:itemQuantity,itemName:item.name}),speaker:{alias:actor.name}}):ui.notifications.warn(game.i18n.localize("PF2E.Actions.Craft.Warning.CantAddItem"))}exports.craftItem=craftItem,exports.craftSpellConsumable=async function(item,itemQuantity,actor){const consumableType=item.consumableType;if("scroll"!==consumableType&&"wand"!==consumableType)return;const spellLevel="wand"===consumableType?Math.ceil(item.level/2)-1:Math.ceil(item.level/2),validSpells=actor.itemTypes.spell.filter((spell=>spell.level<=spellLevel&&!spell.isCantrip&&!spell.isFocusSpell&&!spell.isRitual)).reduce(((result,spell)=>(result[spell.level]=[...result[spell.level]||[],spell],result)),{}),content=await renderTemplate("systems/pf2e/templates/actors/crafting-select-spell-dialog.html",{spells:validSpells});new Dialog({title:game.i18n.localize("PF2E.Actions.Craft.SelectSpellDialog.Title"),content,buttons:{cancel:{icon:'<i class="fa fa-times"></i>',label:game.i18n.localize("Cancel")},craft:{icon:'<i class="fa fa-hammer"></i>',label:game.i18n.localize("PF2E.Actions.Craft.SelectSpellDialog.CraftButtonLabel"),callback:async $dialog=>{const spellId=String($dialog.find('select[name="spell"]').val()),spell=actor.items.get(spellId);if(!(spell&&spell instanceof _item_1.SpellPF2e))return;const item=await(0,spell_consumables_1.createConsumableFromSpell)(consumableType,spell,spellLevel);craftItem(new _item_1.ConsumablePF2e(item),itemQuantity,actor)}}},default:"craft"}).render(!0)},exports.renderCraftingInline=async function(item,roll,quantity,actor){if(!(actor instanceof _actor_1.CharacterPF2e))return;const degreeOfSuccess=roll.data.degreeOfSuccess||0,costs=function(item,quantity,actor,degreeOfSuccess){const itemPrice=(0,helpers_1.extractPriceFromItem)({data:{quantity:{value:quantity},price:item.data.data.price}}),materialCosts=(0,helpers_1.multiplyCoinValue)(itemPrice,.5),lostMaterials={pp:0,gp:0,sp:0,cp:0},reductionPerDay={pp:0,gp:0,sp:0,cp:0},proficiency=function(rank){switch(rank){case 0:return;case 1:return"trained";case 2:return"expert";case 3:return"master";case 4:return"legendary"}}(actor.data.data.skills.cra.rank);if(proficiency)return degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.CRITICAL_SUCCESS?Object.assign(reductionPerDay,(0,earn_income_1.getIncomeForLevel)(actor.level+1).rewards[proficiency]):degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.SUCCESS?Object.assign(reductionPerDay,(0,earn_income_1.getIncomeForLevel)(actor.level).rewards[proficiency]):degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.CRITICAL_FAILURE&&Object.assign(lostMaterials,(0,helpers_1.multiplyCoinValue)(materialCosts,.1)),{itemPrice,materials:materialCosts,lostMaterials,reductionPerDay}}(item,quantity,actor,degreeOfSuccess);if(!costs)return;const daysForZeroCost=degreeOfSuccess>1?function(costs){return Math.ceil(((0,helpers_1.coinValueInCopper)(costs.itemPrice)-(0,helpers_1.coinValueInCopper)(costs.materials))/(0,helpers_1.coinValueInCopper)(costs.reductionPerDay))}(costs):0;return await renderTemplate("systems/pf2e/templates/chat/crafting-result.html",{daysForZeroCost,strings:prepStrings(costs,item.uuid),item,quantity,success:degreeOfSuccess>1,criticalFailure:0===degreeOfSuccess})}},73594:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.reduceResistances=exports.parseExceptions=exports.golemAntiMagic=exports.GolemMagicImmunityResult=exports.calculateDamage=exports.removePositiveOrNegativeDamage=exports.removeAlignmentDamage=exports.Resistance=exports.Weakness=exports.Immunity=exports.DamageValues=exports.isCombinedTrait=exports.isAttackTrait=exports.ATTACK_TYPES=exports.DAMAGE_TRAITS=exports.DAMAGE_CATEGORIES=exports.isDamageType=exports.DAMAGE_TYPES=void 0;const alignment_1=__webpack_require__(16571),util_1=__webpack_require__(6945),physicalDamageTypes=["bludgeoning","piercing","slashing","bleed"],energyDamageTypes=["acid","cold","electricity","fire","sonic","force","positive","negative"];exports.DAMAGE_TYPES=new Set([...physicalDamageTypes,...energyDamageTypes,"chaotic","lawful","good","evil","mental","poison","untyped"]),exports.isDamageType=function(value){return exports.DAMAGE_TYPES.has(value)},exports.DAMAGE_CATEGORIES=new Set(["adamantine","alignment","coldiron","darkwood","energy","ghostTouch","mithral","orichalcum","physical","precision","salt","salt-water","silver","warpglass"]),exports.DAMAGE_TRAITS=new Set(["air","earth","light","magical","unarmed","water"]),exports.ATTACK_TYPES=new Set(["area-damage","nonlethal-attacks","persistent-damage","precision","vorpal","weapons"]),exports.isAttackTrait=function(trait){return exports.ATTACK_TYPES.has(trait)};const combinedTypes=new Set([...exports.ATTACK_TYPES,...exports.DAMAGE_CATEGORIES,...exports.DAMAGE_TRAITS,...exports.DAMAGE_TYPES,"all","non-magical","critical-hits","splash-damage"]);function isCombinedTrait(trait){return combinedTypes.has(trait)}exports.isCombinedTrait=isCombinedTrait;class DamageValues{constructor({normal=0,precision=0,critical=0,criticalPrecision=0,splash=0,traits=new Set}={}){this.normal=normal,this.precision=precision,this.critical=critical,this.criticalPrecision=criticalPrecision,this.splash=splash,this.traits=traits}total(){return this.normal+this.precision+this.critical+this.criticalPrecision+this.splash}totalPrecision(){return this.precision+this.criticalPrecision}totalCritical(){return this.critical+this.criticalPrecision}totalSplash(){return this.splash}getTraits(){return denormalizeTraits(this.traits)}withoutCritical(){return this.copy({critical:0,criticalPrecision:0})}withoutPrecision(){return this.copy({precision:0,criticalPrecision:0})}withoutSplash(){return this.copy({splash:0})}addDamage(value){return this.copy({normal:this.normal+value})}copy({normal,precision,critical,criticalPrecision,splash,traits}){return new DamageValues({normal:null!=normal?normal:this.normal,precision:null!=precision?precision:this.precision,critical:null!=critical?critical:this.critical,criticalPrecision:null!=criticalPrecision?criticalPrecision:this.criticalPrecision,splash:null!=splash?splash:this.splash,traits:null!=traits?traits:this.traits})}}exports.DamageValues=DamageValues;class Modifier{constructor({exceptions=[],type}){this.exceptions=exceptions,this.type=type}exceptionApplies(damageTraits){return this.exceptions.some((traitCombination=>Array.from(traitCombination).every((trait=>damageTraits.has(trait)))))}getType(){return this.type}}class Immunity extends Modifier{copy({type,exceptions}){return new Immunity({exceptions:null!=exceptions?exceptions:this.exceptions,type:null!=type?type:this.type})}}exports.Immunity=Immunity;exports.Weakness=class extends Modifier{constructor({type,value,exceptions=[]}){super({exceptions,type}),this.value=value}calculateValue(damage,damageType){var _a;const damageValues=null!==(_a=damage.get(damageType))&&void 0!==_a?_a:new DamageValues;return"critical-hits"===this.type?damageValues.totalCritical()>0?this.value:0:"precision"===this.type?damageValues.totalPrecision()>0?this.value:0:"splash-damage"===this.type?damageValues.totalSplash()>0?this.value:0:damageValues.total()>0?this.value:0}};class Resistance extends Modifier{constructor({type,value,doubleResistanceVsNonMagical=!1,exceptions=[]}){super({exceptions,type}),this.value=value,this.doubleResistanceVsNonMagical=doubleResistanceVsNonMagical}calculateValue(damage,damageType){var _a;const damageValues=null!==(_a=damage.get(damageType))&&void 0!==_a?_a:new DamageValues,isNonMagical=getAllAttackTraits(damage).has("non-magical"),adjustedValue=this.doubleResistanceVsNonMagical&&isNonMagical?2*this.value:this.value;return"critical-hits"===this.type?Math.min(adjustedValue,damageValues.totalCritical()):"precision"===this.type?Math.min(adjustedValue,damageValues.totalPrecision()):"splash-damage"===this.type?Math.min(adjustedValue,damageValues.totalSplash()):adjustedValue}withReducedValue(reduceBy){return new Resistance({type:this.type,value:Math.max(0,this.value-reduceBy),exceptions:this.exceptions,doubleResistanceVsNonMagical:this.doubleResistanceVsNonMagical})}getValue(){return this.value}}function denormalizeTraits(traits){const result=new Set;result.add("all"),[...physicalDamageTypes].some((damageType=>traits.has(damageType)))&&result.add("physical"),[...energyDamageTypes].some((damageType=>traits.has(damageType)))&&result.add("energy"),traits.has("salt-water")&&result.add("water"),traits.has("mithral")&&result.add("silver"),traits.has("magical")||result.add("non-magical");for(const trait of traits)result.add(trait);return result}function getAllAttackTraits(damage){const damageTypes=Array.from(damage.keys()),combined=[...Array.from(damage.values()).flatMap((value=>Array.from(value.getTraits()))),...damageTypes];return denormalizeTraits(new Set(combined))}function filterModifiers(damage,damageType,modifiersByType){var _a,_b;const allAttackTraits=getAllAttackTraits(damage),damageTraits=new Set(["critical-hits","precision","splash-damage",...denormalizeTraits(new Set([damageType])),...null!==(_b=null===(_a=damage.get(damageType))||void 0===_a?void 0:_a.getTraits())&&void 0!==_b?_b:new Set]);return Array.from(damageTraits).flatMap((trait=>{var _a;return null!==(_a=modifiersByType.get(trait))&&void 0!==_a?_a:[]})).filter((modifier=>!modifier.exceptionApplies(allAttackTraits)))}function findHighestModifier(damage,damageType,modifiersByType){return filterModifiers(damage,damageType,modifiersByType).map((modifier=>modifier.calculateValue(damage,damageType))).sort(((a,b)=>a-b)).reverse()[0]}function removeAlignmentDamage(damage,alignment){(0,alignment_1.isEvil)(alignment)||damage.delete("good"),(0,alignment_1.isGood)(alignment)||damage.delete("evil"),(0,alignment_1.isLawful)(alignment)||damage.delete("chaotic"),(0,alignment_1.isChaotic)(alignment)||damage.delete("lawful")}function removePositiveOrNegativeDamage(damage,modeOfBeing){"living"===modeOfBeing?damage.delete("positive"):"undead"===modeOfBeing?(damage.delete("negative"),damage.delete("bleed")):(damage.delete("negative"),damage.delete("positive"))}exports.Resistance=Resistance,exports.removeAlignmentDamage=removeAlignmentDamage,exports.removePositiveOrNegativeDamage=removePositiveOrNegativeDamage,exports.calculateDamage=function({damage,immunities=[],resistances=[],weaknesses=[],modeOfBeing="living",alignment="N",damageOptions={disregardTargetAlignment:!1}}){const copiedDamage=new Map;return Array.from(damage.entries()).forEach((([type,value])=>{copiedDamage.set(type,value)})),removePositiveOrNegativeDamage(copiedDamage,modeOfBeing),damageOptions.disregardTargetAlignment||removeAlignmentDamage(copiedDamage,alignment),function(damage,immunities){const flattenedImmunities=immunities.flatMap((immunity=>"object-immunities"===immunity.getType()?["bleed","poison","nonlethal-attacks","mental"].map((type=>immunity.copy({type}))):[immunity])).filter((immunity=>isCombinedTrait(immunity.getType()))),modifiersByType=(0,util_1.groupBy)(flattenedImmunities,(immunity=>immunity.getType()));for(const type of Array.from(damage.keys())){let damageValues=damage.get(type),isImmune=!1;const applicableModifiers=filterModifiers(damage,type,modifiersByType);for(const modifier of applicableModifiers)"critical-hits"===modifier.getType()?damageValues=damageValues.withoutCritical():"precision"===modifier.getType()?damageValues=damageValues.withoutPrecision():"splash-damage"===modifier.getType()?damageValues=damageValues.withoutSplash():isImmune=!0;isImmune?damage.delete(type):damage.set(type,damageValues)}}(copiedDamage,immunities),function(damage,weaknesses){const usableModifiers=weaknesses.filter((weakness=>isCombinedTrait(weakness.getType()))),modifiersByType=(0,util_1.groupBy)(usableModifiers,(weakness=>weakness.getType()));for(const type of Array.from(damage.keys())){const damageValues=damage.get(type),highestModifier=findHighestModifier(damage,type,modifiersByType);void 0!==highestModifier&&damage.set(type,damageValues.addDamage(highestModifier))}}(copiedDamage,weaknesses),function(damage,resistances){const usableModifiers=resistances.filter((resistance=>isCombinedTrait(resistance.getType()))),modifiersByType=(0,util_1.groupBy)(usableModifiers,(resistance=>resistance.getType()));return(0,util_1.sum)(Array.from(damage.keys()).map((type=>{const damageValues=damage.get(type),highestModifier=findHighestModifier(damage,type,modifiersByType);return void 0===highestModifier?damageValues.total():Math.max(0,damageValues.total()-highestModifier)})))}(copiedDamage,resistances)};class GolemMagicImmunityResult{constructor({slowedRoundsFormula,harmedFormula,healedFormula}={}){this.slowedRoundsFormula=slowedRoundsFormula,this.harmedFormula=harmedFormula,this.healedFormula=healedFormula}getSlowedRoundsFormula(){return this.slowedRoundsFormula}getHarmedFormula(){return this.harmedFormula}getHealedFormula(){return this.healedFormula}}function isTriggeredBy(damageType,values,triggeringTraits){return triggeringTraits.has(damageType)||Array.from(triggeringTraits).some((t=>values.getTraits().has(t)))}exports.GolemMagicImmunityResult=GolemMagicImmunityResult,exports.golemAntiMagic=function(damage,immunity){const result={};for(const[type,damageValues]of damage.entries())if(isTriggeredBy(type,damageValues,immunity.harmedBy.type)){const traits=damage.get(type).getTraits();traits.has("area-damage")||traits.has("persistent-damage")?result.harmedFormula=immunity.harmedBy.areaOrPersistentFormula:result.harmedFormula=immunity.harmedBy.formula}else isTriggeredBy(type,damageValues,immunity.healedBy.type)?result.healedFormula=immunity.healedBy.formula:isTriggeredBy(type,damageValues,immunity.slowedBy)&&(result.slowedRoundsFormula="2d6");return new GolemMagicImmunityResult(result)},exports.parseExceptions=function(exceptions){var _a;if(null==exceptions)return{doubleResistanceVsNonMagical:!1,except:[]};{const traitExceptions=exceptions.toLocaleLowerCase().replace("except","").replace(", or "," or ").replace(", "," or ").replace("unarmed attacks","unarmed").replace("ghost touch","ghostTouch").replace("cold iron","coldiron").trim().split(";"),traitCombinations=traitExceptions[0].split(" or ").map((value=>value.trim()));return{doubleResistanceVsNonMagical:"double resistance vs. non-magical"===(null===(_a=traitExceptions[1])||void 0===_a?void 0:_a.trim()),except:traitCombinations.map((traitCombination=>new Set(traitCombination.split(" ").filter((traitCombination=>isCombinedTrait(traitCombination)))))).filter((traits=>traits.size>0))}}},exports.reduceResistances=function(resistances,reductions){return resistances.map((resistance=>{const reduceBy=reductions.get(resistance.getType());return void 0===reduceBy?resistance:resistance.withReducedValue(reduceBy)}))}},52769:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MATH_FUNCTION_NAMES=exports.PROFICIENCY_RANKS=exports.goesToEleven=exports.RARITIES=exports.SIZES=void 0,exports.SIZES=["tiny","sm","med","lg","huge","grg"],exports.RARITIES=["common","uncommon","rare","unique"],exports.goesToEleven=function(value){return value>=0&&value<=11},exports.PROFICIENCY_RANKS=["untrained","trained","expert","master","legendary"],exports.MATH_FUNCTION_NAMES=new Set(["abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clamped","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","log","log10","log1p","log2","max","min","normalizeDegrees","normalizeRadians","pow","random","round","roundDecimals","safeEval","sign","sin","sinh","sqrt","tan","tanh","toDegrees","toRadians","trunc"])},84372:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createDifficultyScale=exports.combineDCAdjustments=exports.calculateSpellDC=exports.calculateSimpleDC=exports.calculateDC=exports.adjustDCByRarity=exports.adjustDC=exports.rarityToDCAdjustment=void 0;const adjustmentScale=["incredibly easy","very easy","easy","normal","hard","very hard","incredibly hard"],dcAdjustments=new Map;dcAdjustments.set("incredibly easy",-10),dcAdjustments.set("very easy",-5),dcAdjustments.set("easy",-2),dcAdjustments.set("normal",0),dcAdjustments.set("hard",2),dcAdjustments.set("very hard",5),dcAdjustments.set("incredibly hard",10);const dcByLevel=new Map;dcByLevel.set(-1,13),dcByLevel.set(0,14),dcByLevel.set(1,15),dcByLevel.set(2,16),dcByLevel.set(3,18),dcByLevel.set(4,19),dcByLevel.set(5,20),dcByLevel.set(6,22),dcByLevel.set(7,23),dcByLevel.set(8,24),dcByLevel.set(9,26),dcByLevel.set(10,27),dcByLevel.set(11,28),dcByLevel.set(12,30),dcByLevel.set(13,31),dcByLevel.set(14,32),dcByLevel.set(15,34),dcByLevel.set(16,35),dcByLevel.set(17,36),dcByLevel.set(18,38),dcByLevel.set(19,39),dcByLevel.set(20,40),dcByLevel.set(21,42),dcByLevel.set(22,44),dcByLevel.set(23,46),dcByLevel.set(24,48),dcByLevel.set(25,50);const simpleDCs=new Map;simpleDCs.set("untrained",10),simpleDCs.set("trained",15),simpleDCs.set("expert",20),simpleDCs.set("master",30),simpleDCs.set("legendary",40);const simpleDCsWithoutLevel=new Map;function rarityToDCAdjustment(rarity="common"){return"uncommon"===rarity?"hard":"rare"===rarity?"very hard":"unique"===rarity?"incredibly hard":"normal"}function adjustDC(dc,adjustment="normal"){var _a;return dc+(null!==(_a=dcAdjustments.get(adjustment))&&void 0!==_a?_a:0)}function adjustDCByRarity(dc,rarity="common"){return adjustDC(dc,rarityToDCAdjustment(rarity))}function calculateDC(level,{proficiencyWithoutLevel=!1,rarity="common"}={}){var _a;const dc=null!==(_a=dcByLevel.get(level))&&void 0!==_a?_a:14;return adjustDCByRarity(proficiencyWithoutLevel?dc-Math.max(level,0):dc,rarity)}simpleDCsWithoutLevel.set("untrained",10),simpleDCsWithoutLevel.set("trained",15),simpleDCsWithoutLevel.set("expert",20),simpleDCsWithoutLevel.set("master",25),simpleDCsWithoutLevel.set("legendary",30),exports.rarityToDCAdjustment=rarityToDCAdjustment,exports.adjustDC=adjustDC,exports.adjustDCByRarity=adjustDCByRarity,exports.calculateDC=calculateDC,exports.calculateSimpleDC=function(rank,{proficiencyWithoutLevel=!1}={}){var _a,_b;return proficiencyWithoutLevel?null!==(_a=simpleDCsWithoutLevel.get(rank))&&void 0!==_a?_a:10:null!==(_b=simpleDCs.get(rank))&&void 0!==_b?_b:10},exports.calculateSpellDC=function(spellLevel,{proficiencyWithoutLevel=!1}={}){return calculateDC(2*spellLevel-1,{proficiencyWithoutLevel})},exports.combineDCAdjustments=function(first,second){const startingIndex=adjustmentScale.indexOf(first),lowerByIndex=adjustmentScale.indexOf(second),resultIndex=Math.min(Math.max(startingIndex+lowerByIndex-3,0),6);return adjustmentScale[resultIndex]},exports.createDifficultyScale=function(dc,startAt){const beginAtIndex=adjustmentScale.indexOf(startAt);return adjustmentScale.filter(((_value,index)=>index>=beginAtIndex)).map((value=>adjustDC(dc,value)))}},7859:(__unused_webpack_module,exports)=>{"use strict";var DegreeOfSuccess;function adjustDegreeOfSuccess(adjustment,degreeOfSuccess){return DegreeOfSuccess[DegreeOfSuccess[Math.clamped(degreeOfSuccess+adjustment,0,3)]]}function adjustDegreeByDieValue(dieValue,degreeOfSuccess){return 20===dieValue?adjustDegreeOfSuccess(exports.DegreeAdjustment.INCREASE,degreeOfSuccess):1===dieValue?adjustDegreeOfSuccess(exports.DegreeAdjustment.LOWER,degreeOfSuccess):degreeOfSuccess}Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateDegreeOfSuccess=exports.adjustDegreeByDieValue=exports.adjustDegreeOfSuccess=exports.DegreeAdjustment=exports.DegreeOfSuccess=void 0,function(DegreeOfSuccess){DegreeOfSuccess[DegreeOfSuccess.CRITICAL_FAILURE=0]="CRITICAL_FAILURE",DegreeOfSuccess[DegreeOfSuccess.FAILURE=1]="FAILURE",DegreeOfSuccess[DegreeOfSuccess.SUCCESS=2]="SUCCESS",DegreeOfSuccess[DegreeOfSuccess.CRITICAL_SUCCESS=3]="CRITICAL_SUCCESS"}(DegreeOfSuccess=exports.DegreeOfSuccess||(exports.DegreeOfSuccess={})),exports.DegreeAdjustment={LOWER_BY_TWO:-2,LOWER:-1,INCREASE:1,INCREASE_BY_TWO:2},exports.adjustDegreeOfSuccess=adjustDegreeOfSuccess,exports.adjustDegreeByDieValue=adjustDegreeByDieValue,exports.calculateDegreeOfSuccess=function(roll,dc){const total=roll.dieValue+roll.modifier;return adjustDegreeByDieValue(roll.dieValue,total-dc>=10?DegreeOfSuccess.CRITICAL_SUCCESS:dc-total>=10?DegreeOfSuccess.CRITICAL_FAILURE:total>=dc?DegreeOfSuccess.SUCCESS:DegreeOfSuccess.FAILURE)}},87571:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CombatantPF2e=void 0;const _util_1=__webpack_require__(6945);class CombatantPF2e extends Combatant{get encounter(){return this.parent}get defeated(){return this.data.defeated}get playersCanSeeName(){var _a;return!!(null===(_a=this.token)||void 0===_a?void 0:_a.playersCanSeeName)}overridePriority(initiative){var _a;return null!==(_a=this.data.flags.pf2e.overridePriority[initiative])&&void 0!==_a?_a:null}hasHigherInitiative({than}){if(this.parent!==than.parent)throw(0,_util_1.ErrorPF2e)("The initiative of Combatants from different combats cannot be compared");return this.parent.getCombatantWithHigherInit(this,than)===this}prepareBaseData(){var _a;super.prepareBaseData(),this.data.flags.pf2e=mergeObject(null!==(_a=this.data.flags.pf2e)&&void 0!==_a?_a:{},{overridePriority:{}})}async toggleDefeated(){var _a;await this.update({defeated:!this.defeated}),await(null===(_a=this.token)||void 0===_a?void 0:_a.object.toggleEffect(game.settings.get("pf2e","deathIcon"),{overlay:!0}))}updateResource(){return this.isNPC&&!game.user.isGM?this.resource=null:super.updateResource()}_getInitiativeFormula(){const{actor}=this;if(!actor)return"1d20";const actorData=actor.data;let bonus=0;"hazard"===actorData.type?bonus=actorData.data.attributes.stealth.value:"initiative"in actorData.data.attributes&&"totalModifier"in actorData.data.attributes.initiative?bonus=actorData.data.attributes.initiative.totalModifier:"perception"in actorData.data.attributes&&(bonus=actorData.data.attributes.perception.value);return["1d20",bonus||0].join("+")}async toggleNameVisibility(){if(!this.token)return;const currentVisibility=this.token.data.displayName,visibilityToggles={[CONST.TOKEN_DISPLAY_MODES.ALWAYS]:CONST.TOKEN_DISPLAY_MODES.OWNER,[CONST.TOKEN_DISPLAY_MODES.CONTROL]:CONST.TOKEN_DISPLAY_MODES.HOVER,[CONST.TOKEN_DISPLAY_MODES.HOVER]:CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER,[CONST.TOKEN_DISPLAY_MODES.NONE]:CONST.TOKEN_DISPLAY_MODES.HOVER,[CONST.TOKEN_DISPLAY_MODES.OWNER]:CONST.TOKEN_DISPLAY_MODES.ALWAYS,[CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER]:CONST.TOKEN_DISPLAY_MODES.HOVER};await this.token.update({displayName:visibilityToggles[currentVisibility]})}}exports.CombatantPF2e=CombatantPF2e},48037:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EncounterPF2e=void 0;const _actor_1=__webpack_require__(85530),sheet_1=__webpack_require__(39481),values_1=__webpack_require__(35089),localize_1=__webpack_require__(41332);class EncounterPF2e extends Combat{get active(){return this.data.active}_sortCombatants(a,b){return"number"==typeof a.initiative&&"number"==typeof b.initiative&&a.initiative===b.initiative?(()=>{const[priorityA,priorityB]=[a,b].map((combatant=>{var _a,_b;return null!==(_b=combatant.overridePriority(null!==(_a=combatant.initiative)&&void 0!==_a?_a:0))&&void 0!==_b?_b:combatant.actor&&"initiative"in combatant.actor.data.data.attributes?combatant.actor.data.data.attributes.initiative.tiebreakPriority:3}));return priorityA===priorityB?a.id.localeCompare(b.id):priorityA-priorityB})():super._sortCombatants(a,b)}getCombatantWithHigherInit(a,b){const sortResult=this._sortCombatants(a,b);return sortResult>0?b:sortResult<0?a:null}async createEmbeddedDocuments(embeddedName,data,context={}){const createData=data.filter((datum=>{const token=canvas.tokens.placeables.find((canvasToken=>canvasToken.id===datum.tokenId));if(!token)return!1;const{actor}=token;if(!actor)return ui.notifications.warn(`${token.name} has no associated actor.`),!1;if("loot"===actor.type||actor.traits.has("minion")){const translation=localize_1.LocalizePF2e.translations.PF2E.Encounter.ExcludingFromInitiative,type=game.i18n.localize(actor.traits.has("minion")?CONFIG.PF2E.creatureTraits.minion:CONFIG.PF2E.actorTypes[actor.data.type]);return ui.notifications.info(game.i18n.format(translation,{type,actor:actor.name})),!1}return!0}));return super.createEmbeddedDocuments(embeddedName,createData,context)}async nextTurn(){var _a,_b;return Hooks.call("pf2e.endTurn",null!==(_a=this.combatant)&&void 0!==_a?_a:null,this,game.user.id),await super.nextTurn(),Hooks.call("pf2e.startTurn",null!==(_b=this.combatant)&&void 0!==_b?_b:null,this,game.user.id),this}async rollInitiative(ids,options={}){const fightyCombatants=ids.flatMap((id=>{var _a;return null!==(_a=this.combatants.get(id))&&void 0!==_a?_a:[]})).filter((combatant=>combatant.actor instanceof _actor_1.CharacterPF2e||combatant.actor instanceof _actor_1.NPCPF2e)),initiatives=(await Promise.all(fightyCombatants.map((combatant=>{var _a;const checkType=combatant.actor.data.data.attributes.initiative.ability,skills=values_1.SKILL_DICTIONARY,rollOptions=combatant.actor.getRollOptions(["all","initiative",null!==(_a=skills[checkType])&&void 0!==_a?_a:checkType]);return options.secret&&rollOptions.push("secret"),combatant.actor.data.data.attributes.initiative.roll({options:rollOptions,updateTracker:!1})})))).flatMap((result=>result?{id:result.combatant.id,value:result.roll.total}:[]));this.setMultipleInitiatives(initiatives);const remainingIds=ids.filter((id=>!fightyCombatants.some((c=>c.id===id))));return super.rollInitiative(remainingIds,options)}async setMultipleInitiatives(initiatives){var _a;const currentId=null===(_a=this.combatant)||void 0===_a?void 0:_a.id,updates=initiatives.map((i=>({_id:i.id,initiative:i.value,flags:{pf2e:{overridePriority:{[i.value]:i.overridePriority}}}})));await this.updateEmbeddedDocuments("Combatant",updates),await this.update({turn:this.turns.findIndex((c=>c.id===currentId))})}_onDelete(options,userId){var _a;if(super._onDelete(options,userId),this.started&&Hooks.call("pf2e.endTurn",null!==(_a=this.combatant)&&void 0!==_a?_a:null,this,userId),!game.combat){const pcSheets=Object.values(ui.windows).filter((sheet=>sheet instanceof sheet_1.CharacterSheetPF2e));for(const sheet of pcSheets)sheet.disableInitiativeButton()}}_onCreate(data,options,userId){super._onCreate(data,options,userId);const pcSheets=Object.values(ui.windows).filter((sheet=>sheet instanceof sheet_1.CharacterSheetPF2e));for(const sheet of pcSheets)sheet.enableInitiativeButton()}}exports.EncounterPF2e=EncounterPF2e},49938:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RolledCombatant=exports.CombatantPF2e=exports.EncounterPF2e=void 0;var document_1=__webpack_require__(48037);Object.defineProperty(exports,"EncounterPF2e",{enumerable:!0,get:function(){return document_1.EncounterPF2e}});var combatant_1=__webpack_require__(87571);Object.defineProperty(exports,"CombatantPF2e",{enumerable:!0,get:function(){return combatant_1.CombatantPF2e}}),Object.defineProperty(exports,"RolledCombatant",{enumerable:!0,get:function(){return combatant_1.RolledCombatant}})},12462:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FogExplorationPF2e=void 0;class FogExplorationPF2e extends FogExploration{}exports.FogExplorationPF2e=FogExplorationPF2e},75064:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FolderPF2e=void 0;class FolderPF2e extends Folder{get flattenedContents(){return[this,...this.getSubfolders()].flatMap((folder=>folder.contents))}}exports.FolderPF2e=FolderPF2e},15252:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GhostTemplate=void 0;class GhostTemplate extends MeasuredTemplate{constructor(){super(...arguments),this.moveTime=0,this._onMouseMove=event=>{event.stopPropagation();const now=Date.now();if(now-this.moveTime<=20)return;const center=event.data.getLocalPosition(this.layer),snapped=canvas.grid.getSnappedPosition(center.x,center.y,2);this.data.x=snapped.x,this.data.y=snapped.y,this.refresh(),this.moveTime=now},this._onClickRight=_event=>{this.layer.preview.removeChildren(),canvas.stage.off("mousemove",this._onMouseMove),canvas.stage.off("mousedown",this._onLeftClick),canvas.stage.off("rightdown",this._onClickRight),canvas.app.view.onwheel=null},this._onLeftClick=event=>{this._onClickRight(event);const destination=canvas.grid.getSnappedPosition(this.x,this.y,2);this.data._source.x=destination.x,this.data._source.y=destination.y,canvas.scene&&canvas.scene.createEmbeddedDocuments("MeasuredTemplate",[this.data])},this._onMouseWheel=event=>{if(event.ctrlKey){event.preventDefault(),event.stopPropagation();const delta=canvas.grid.type>CONST.GRID_TYPES.SQUARE?30:15,snap=event.shiftKey?delta:5;this.data._source.direction+=snap*Math.sign(event.deltaY),this.data.direction+=snap*Math.sign(event.deltaY),this.refresh()}else if(event.shiftKey){event.preventDefault(),event.stopPropagation();const snap=45;this.data._source.direction+=snap*Math.sign(event.deltaY),this.data.direction+=snap*Math.sign(event.deltaY),this.refresh()}}}drawPreview(){this.layer.activate(),this.draw(),this.layer.preview.addChild(this),this.activatePreviewListeners()}activatePreviewListeners(){canvas.stage.on("mousemove",this._onMouseMove),canvas.stage.on("mousedown",this._onLeftClick),canvas.stage.on("rightdown",this._onClickRight),canvas.app.view.onwheel=this._onMouseWheel}}exports.GhostTemplate=GhostTemplate},30301:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ABCItemPF2e=void 0;const index_1=__webpack_require__(10843);class ABCItemPF2e extends index_1.ItemPF2e{getLinkedFeatures(){if(!this.actor)return[];const existingABCIds=this.actor.itemTypes[this.data.type].map((item=>item.id));return this.actor.itemTypes.feat.filter((feat=>existingABCIds.includes(feat.data.data.location)))}logAutoChange(path,value){0!==value&&(this.actor.data.data.autoChanges[path]=[{mode:"upgrade",level:1,value,source:this.name}])}}exports.ABCItemPF2e=ABCItemPF2e},88297:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AncestryBackgroundClassManager=void 0;const index_1=__webpack_require__(10843),_util_1=__webpack_require__(6945);exports.AncestryBackgroundClassManager=class{static async addABCItem(source,actor,options){var _a,_b,_c,_d,_e;switch(source.type){case"ancestry":return await(null===(_a=actor.ancestry)||void 0===_a?void 0:_a.delete()),this.addFeatures(source,actor,!0,options);case"background":return await(null===(_b=actor.background)||void 0===_b?void 0:_b.delete()),this.addFeatures(source,actor,!0,options);case"class":{await(null===(_c=actor.class)||void 0===_c?void 0:_c.delete()),source._id=randomID(16),null!==(_d=(_e=source.flags).pf2e)&&void 0!==_d||(_e.pf2e={}),source.flags.pf2e.insertedClassFeaturesLevel=actor.level;const itemsToCreate=await this.getClassFeaturesForLevel(source,0,actor.level);return itemsToCreate.sort(((featureA,featureB)=>{const levelA=featureA.data.level.value,levelB=featureB.data.level.value;return levelA>levelB||levelA===levelB&&featureA.name>featureB.name?1:-1})),actor.createEmbeddedDocuments("Item",[...itemsToCreate,source],{keepId:!0})}default:throw(0,_util_1.ErrorPF2e)("Invalid item type for ABC creation!")}}static async ensureClassFeaturesForLevel(actor,newLevel){const actorClass=actor.class;if(!actorClass)return;const current=actor.itemTypes.feat.filter((feat=>"classfeature"===feat.featType.value));if(newLevel>actor.level){const classFeaturesToCreate=(await this.getClassFeaturesForLevel(actorClass,actor.level,newLevel)).filter((feature=>!current.some((currentFeature=>{var _a;return currentFeature.sourceId===(null===(_a=feature.flags.core)||void 0===_a?void 0:_a.sourceId)}))));await actor.createEmbeddedDocuments("Item",classFeaturesToCreate,{keepId:!0,render:!1})}else if(newLevel<actor.level){const classFeaturestoDelete=current.filter((feat=>feat.level>newLevel)).map((feat=>feat.id));await actor.deleteEmbeddedDocuments("Item",classFeaturestoDelete,{render:!1})}}static async getItemSource(packName,name){const slug=(0,_util_1.sluggify)(name),pack=game.packs.get(packName,{strict:!0}),docs=await pack.getDocuments({"data.slug":{$in:[slug]}});if(1===docs.length)return docs[0].toObject();throw(0,_util_1.ErrorPF2e)(`Cannot find '${name}' in pack '${packName}'`)}static async getClassFeaturesForLevel(item,minLevel,actorLevel){const classFeatsToAdd=item instanceof index_1.ClassPF2e?item.data.data.items:item.data.items,itemId=item instanceof index_1.ClassPF2e?item.id:item._id;if(minLevel>=actorLevel)return[];const featuresToAdd=Object.values(classFeatsToAdd).filter((entryData=>actorLevel>=entryData.level&&entryData.level>minLevel));return this.getFeatures(featuresToAdd,itemId)}static async getFeatures(entries,locationId){const feats=[];if(entries.length>0){const packEntries=entries.filter((entry=>!!entry.pack));if(packEntries.length>0){const compendiumFeats=await this.getFromCompendium(packEntries);feats.push(...compendiumFeats.map((feat=>{if(feat instanceof index_1.FeatPF2e){const featSource=feat.toObject();return featSource._id=randomID(16),featSource.data.location=locationId,featSource.effects.forEach((effect=>{effect._id=randomID(16)})),featSource}throw(0,_util_1.ErrorPF2e)("Invalid item type referenced in ABCFeatureEntryData")})))}const gameEntries=entries.filter((entry=>!entry.pack));feats.push(...gameEntries.map((entry=>{const item=game.items.get(entry.id);if(item instanceof index_1.FeatPF2e){const itemData=item.toObject();return itemData._id=randomID(16),itemData}throw(0,_util_1.ErrorPF2e)("Invalid item type referenced in ABCFeatureEntryData")})))}return feats}static async getFromCompendium(entries){var e_1,_a;const feats=[],packs=new Set(entries.map((entry=>entry.pack)));try{for(var packs_1_1,packs_1=__asyncValues(packs);!(packs_1_1=await packs_1.next()).done;){const pack=packs_1_1.value,entryIds=entries.filter((entry=>entry.pack===pack)).map((entry=>entry.id));feats.push(...await game.packs.get(pack,{strict:!0}).getDocuments({_id:{$in:entryIds}}))}}catch(e_1_1){e_1={error:e_1_1}}finally{try{packs_1_1&&!packs_1_1.done&&(_a=packs_1.return)&&await _a.call(packs_1)}finally{if(e_1)throw e_1.error}}return feats}static async addFeatures(itemSource,actor,createSource=!1,options){const itemsToCreate=[];createSource&&(itemSource._id=randomID(16),itemsToCreate.push(itemSource));const entriesData=Object.values(itemSource.data.items);if(itemsToCreate.push(...await this.getFeatures(entriesData,itemSource._id)),null==options?void 0:options.assurance)for(const skill of options.assurance){const index=itemsToCreate.findIndex((item=>"assurance"===item.data.slug));if(index>-1){const location=itemsToCreate[index].data.location;itemsToCreate[index]=await this.getItemSource("pf2e.feats-srd",`Assurance (${skill})`),itemsToCreate[index]._id=randomID(16),itemsToCreate[index].data.location=location}}return actor.createEmbeddedDocuments("Item",itemsToCreate,{keepId:!0})}}},44996:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ABCSheetPF2e=void 0;const index_1=__webpack_require__(10843),localize_1=__webpack_require__(41332),base_1=__webpack_require__(22222);class ABCSheetPF2e extends base_1.ItemSheetPF2e{static get defaultOptions(){return Object.assign(Object.assign({},super.defaultOptions),{scrollY:[".item-details"],dragDrop:[{dropSelector:".item-details"}]})}async getData(){const itemType=this.item.type;return Object.assign(Object.assign({},this.getBaseData()),{hasSidebar:"class"!==itemType,sidebarTemplate:()=>`systems/pf2e/templates/items/${itemType}-sidebar.html`,hasDetails:!0,detailsTemplate:()=>`systems/pf2e/templates/items/${itemType}-details.html`})}getLocalizedAbilities(traits){return void 0!==traits&&traits.value?6===traits.value.length?{free:game.i18n.localize("PF2E.AbilityFree")}:Object.fromEntries(traits.value.map((x=>[x,CONFIG.PF2E.abilities[x]]))):{}}isValidDrop(event,feat){var _a,_b;const validFeatTypes=null!==(_b=null===(_a=$(event.target).closest(".abc-list").data("valid-drops"))||void 0===_a?void 0:_a.split(" "))&&void 0!==_b?_b:[];if(validFeatTypes.includes(feat.featType.value))return!0;const goodTypes=validFeatTypes.map((featType=>game.i18n.localize(CONFIG.PF2E.featTypes[featType])));if(1===goodTypes.length){const badType=feat.featType.label,warning=game.i18n.format(localize_1.LocalizePF2e.translations.PF2E.Item.ABC.InvalidDrop,{badType,goodType:goodTypes[0]});return ui.notifications.warn(warning),!1}return!0}async _onDrop(event){var _a;event.preventDefault();const dataString=null===(_a=event.dataTransfer)||void 0===_a?void 0:_a.getData("text/plain"),dropData=JSON.parse(null!=dataString?dataString:""),item=await index_1.ItemPF2e.fromDropData(dropData);if(!(item instanceof index_1.FeatPF2e&&this.isValidDrop(event,item)))return;const entry={pack:dropData.pack||void 0,id:dropData.id,img:item.data.img,name:item.name,level:item.data.data.level.value},items=this.item.data.data.items;let id;do{id=randomID(5)}while(items[id]);await this.item.update({[`data.items.${id}`]:entry})}removeItem(event){event.preventDefault();const target=$(event.target).parents("li"),containerId=target.parents("[data-container-id]").data("containerId");let path=`-=${target.data("index")}`;containerId&&(path=`${containerId}.items.${path}`),this.item.update({[`data.items.${path}`]:null})}activateListeners(html){super.activateListeners(html),html.on("click","[data-action=remove]",(ev=>this.removeItem(ev)))}}exports.ABCSheetPF2e=ABCSheetPF2e},59142:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActionData=void 0;const non_physical_1=__webpack_require__(67561);class ActionData extends non_physical_1.BaseNonPhysicalItemData{}exports.ActionData=ActionData,ActionData.DEFAULT_ICON="systems/pf2e/icons/default-icons/action.svg"},93390:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActionPF2e=void 0;const base_1=__webpack_require__(24227),data_1=__webpack_require__(59142);class ActionPF2e extends base_1.ItemPF2e{static get schema(){return data_1.ActionData}get actionCost(){const actionType=this.data.data.actionType.value||"passive";return"passive"===actionType?null:{type:actionType,value:this.data.data.actions.value}}prepareData(){return super.prepareData()}getChatData(htmlOptions={}){const data=this.data.data,properties=[CONFIG.PF2E.actionTypes[data.actionType.value]].filter((property=>property)),traits=this.traitChatData(CONFIG.PF2E.featTraits);return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{properties,traits}))}async _preUpdate(data,options,user){var _a;const actionCount=null===(_a=data.data)||void 0===_a?void 0:_a.actions;actionCount&&(actionCount.value=Math.clamped(Number(actionCount.value),0,3)||null),await super._preUpdate(data,options,user)}}exports.ActionPF2e=ActionPF2e},71366:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActionSheetPF2e=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(22222);class ActionSheetPF2e extends base_1.ItemSheetPF2e{async getData(){var _a,_b;const data=await super.getData(),actorWeapons=null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.itemTypes.weapon.map((weapon=>weapon.data)))&&void 0!==_b?_b:[];return data.item.img=(0,_util_1.getActionIcon)(this.item.actionCost),Object.assign(Object.assign({},data),{categories:CONFIG.PF2E.actionCategories,weapons:actorWeapons,actionTypes:CONFIG.PF2E.actionTypes,actionsNumber:CONFIG.PF2E.actionsNumber,actionTraits:CONFIG.PF2E.actionTraits,skills:CONFIG.PF2E.skillList,proficiencies:CONFIG.PF2E.proficiencyLevels,traits:this.prepareOptions(CONFIG.PF2E.actionTraits,data.data.traits)})}}exports.ActionSheetPF2e=ActionSheetPF2e},17442:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AncestryData=void 0;const non_physical_1=__webpack_require__(67561);class AncestryData extends non_physical_1.BaseNonPhysicalItemData{}exports.AncestryData=AncestryData,AncestryData.DEFAULT_ICON="systems/pf2e/icons/default-icons/ancestry.svg"},98713:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AncestryPF2e=void 0;const _actor_1=__webpack_require__(85530),abc_1=__webpack_require__(30301),data_1=__webpack_require__(17442),_util_1=__webpack_require__(6945),sense_1=__webpack_require__(82280);class AncestryPF2e extends abc_1.ABCItemPF2e{static get schema(){return data_1.AncestryData}get traits(){return new Set(this.data.data.traits.value)}get hitPoints(){return this.data.data.hp}get speed(){return this.data.data.speed}get size(){return this.data.data.size}get reach(){return this.data.data.reach}prepareActorData(){var _a,_b,_c,_d;if(!(this.actor instanceof _actor_1.CharacterPF2e))return void console.error("PF2e System | Only a character can have an ancestry");const systemData=this.actor.data.data;systemData.attributes.ancestryhp=this.hitPoints,this.logAutoChange("data.attributes.ancestryhp",this.hitPoints),systemData.traits.size.value=this.size,this.logAutoChange("data.traits.size.value",this.size),systemData.attributes.speed.value=String(this.speed),systemData.attributes.reach={value:this.reach,manipulate:this.reach};const innateLanguages=this.data.data.languages.value;for(const language of innateLanguages)systemData.traits.languages.value.includes(language)||systemData.traits.languages.value.push(language);const{senses}=systemData.traits,{vision}=this.data.data;if("normal"!==vision&&!senses.some((sense=>sense.type===vision))){senses.push(new sense_1.CreatureSensePF2e({type:vision,value:"",source:this.name}));(null!==(_a=(_d=this.actor.rollOptions).sense)&&void 0!==_a?_a:_d.sense={})[`self:${(0,_util_1.sluggify)(vision)}:from-ancestry`]=!0}const ancestryTraits=this.traits,heritageTraits=null!==(_c=null===(_b=this.actor.heritage)||void 0===_b?void 0:_b.traits)&&void 0!==_c?_c:new Set,traits=Array.from(new Set([...ancestryTraits,...heritageTraits].filter((trait=>!["common","versatile heritage"].includes(trait))))).sort();systemData.traits.traits.value.push(...traits)}}exports.AncestryPF2e=AncestryPF2e},71950:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AncestrySheetPF2e=void 0;const sheet_1=__webpack_require__(44996);class AncestrySheetPF2e extends sheet_1.ABCSheetPF2e{async getData(){const data=await super.getData(),itemData=data.item;return Object.assign(Object.assign({},data),{selectedBoosts:Object.fromEntries(Object.entries(itemData.data.boosts).map((([k,b])=>[k,this.getLocalizedAbilities(b)]))),selectedFlaws:Object.fromEntries(Object.entries(itemData.data.flaws).map((([k,b])=>[k,this.getLocalizedAbilities(b)]))),rarities:this.prepareOptions(CONFIG.PF2E.rarityTraits,{value:[itemData.data.traits.rarity.value]}),sizes:this.prepareOptions(CONFIG.PF2E.actorSizes,{value:[itemData.data.size]}),traits:this.prepareOptions(CONFIG.PF2E.creatureTraits,itemData.data.traits),languages:this.prepareOptions(CONFIG.PF2E.languages,itemData.data.languages),additionalLanguages:this.prepareOptions(CONFIG.PF2E.languages,itemData.data.additionalLanguages)})}}exports.AncestrySheetPF2e=AncestrySheetPF2e},55749:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ARMOR_CATEGORIES=exports.ArmorData=void 0;const data_1=__webpack_require__(10530);class ArmorData extends data_1.BasePhysicalItemData{}exports.ArmorData=ArmorData,ArmorData.DEFAULT_ICON="systems/pf2e/icons/default-icons/armor.svg",exports.ARMOR_CATEGORIES=["unarmored","light","medium","heavy"]},83200:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ArmorPF2e=void 0;const data_1=__webpack_require__(69777),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),physical_1=__webpack_require__(6560),runes_1=__webpack_require__(35847),data_2=__webpack_require__(55749);class ArmorPF2e extends physical_1.PhysicalItemPF2e{static get schema(){return data_2.ArmorData}isStackableWith(item){return!this.isEquipped&&!item.isEquipped&&super.isStackableWith(item)}get isShield(){return"shield"===this.data.data.category}get isArmor(){return!this.isShield}get baseType(){var _a;return null!==(_a=this.data.data.baseItem)&&void 0!==_a?_a:null}get group(){return this.data.data.group||null}get category(){return this.data.data.category}get dexCap(){return this.isShield?null:this.data.data.dex.value}get strength(){return this.isShield?null:this.data.data.strength.value}get checkPenalty(){return this.isShield?null:this.data.data.check.value}get speedPenalty(){return this.data.data.speed.value}get acBonus(){const potencyRune=this.isArmor&&this.isInvested?this.data.data.runes.potency:0,baseArmor=Number(this.data.data.armor.value)||0;return this.isShield&&this.isBroken?0:baseArmor+potencyRune}get hitPoints(){return{value:this.data.data.hp.value,max:this.data.data.maxHp.value}}get hardness(){return this.data.data.hardness.value}get brokenThreshold(){return this.data.data.brokenThreshold.value}get isBroken(){return this.hitPoints.value<=this.brokenThreshold}getItemRollOptions(prefix="armor"){return super.getItemRollOptions(prefix).concat(Object.entries({[`category:${this.category}`]:!0,[`group:${this.group}`]:!!this.group,[`base:${this.baseType}`]:!!this.baseType}).filter((([_key,isTrue])=>isTrue)).map((([key])=>`${prefix?`${prefix}:`:""}${key}`)))}prepareBaseData(){super.prepareBaseData();const baseTraits=this.data.data.traits.value,fromRunes=this.data.data.potencyRune.value?["invested","abjuration"]:[],hasTraditionTraits=data_1.MAGIC_TRADITIONS.some((trait=>baseTraits.includes(trait))),magicTraits=fromRunes.length>0&&!hasTraditionTraits?["magical"]:[];this.data.data.traits.value=Array.from(new Set([...baseTraits,...fromRunes,...magicTraits]))}prepareDerivedData(){var _a;super.prepareDerivedData();const systemData=this.data.data,{potencyRune,resiliencyRune,propertyRune1,propertyRune2,propertyRune3,propertyRune4}=systemData;this.data.data.runes={potency:null!==(_a=potencyRune.value)&&void 0!==_a?_a:0,resilient:(0,runes_1.getResiliencyBonus)({resiliencyRune}),property:[propertyRune1.value,propertyRune2.value,propertyRune3.value,propertyRune4.value].filter((rune=>!!rune))}}prepareActorData(){var _a,_b;if(this.isArmor&&this.isEquipped){const traits=this.traits;for(const[trait,domain]of[["bulwark","reflex"],["flexible","skill-check"],["noisy","skill-check"]])if(traits.has(trait)){(null!==(_a=(_b=this.actor.rollOptions)[domain])&&void 0!==_a?_a:_b[domain]={})[`self:armor:trait:${trait}`]=!0}}}getChatData(htmlOptions={}){const data=this.data.data,translations=localize_1.LocalizePF2e.translations.PF2E,properties=[this.isArmor?CONFIG.PF2E.armorTypes[this.category]:CONFIG.PF2E.weaponCategories.martial,`${(0,_util_1.addSign)(this.acBonus)} ${translations.ArmorArmorLabel}`,this.isArmor?`${data.dex.value||0} ${translations.ArmorDexLabel}`:null,this.isArmor?`${data.check.value||0} ${translations.ArmorCheckLabel}`:null,this.speedPenalty?`${data.speed.value||0} ${translations.ArmorSpeedLabel}`:null];return this.processChatData(htmlOptions,Object.assign(Object.assign({},super.getChatData()),{traits:this.traitChatData(CONFIG.PF2E.armorTraits),properties}))}generateUnidentifiedName({typeOnly=!1}={typeOnly:!1}){var _a;const translations=localize_1.LocalizePF2e.translations.PF2E,base=this.baseType?translations.Item.Armor.Base[this.baseType]:null,group=this.group?CONFIG.PF2E.armorGroups[this.group]:null,fallback=this.isShield?"PF2E.ArmorTypeShield":"ITEM.TypeArmor",itemType=game.i18n.localize(null!==(_a=null!=base?base:group)&&void 0!==_a?_a:fallback);if(typeOnly)return itemType;const formatString=localize_1.LocalizePF2e.translations.PF2E.identification.UnidentifiedItem;return game.i18n.format(formatString,{item:itemType})}}exports.ArmorPF2e=ArmorPF2e},93942:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ArmorSheetPF2e=void 0;const sheet_1=__webpack_require__(38719),localize_1=__webpack_require__(41332),runes_1=__webpack_require__(35847);class ArmorSheetPF2e extends sheet_1.PhysicalItemSheetPF2e{async getData(){const sheetData=await super.getData(),totalSlots=(0,runes_1.getPropertySlots)(sheetData.item),propertyRuneSlots={};for(const slot of[1,2,3,4])totalSlots>=slot&&(propertyRuneSlots[`propertyRuneSlots${slot}`]=!0);return Object.assign(Object.assign(Object.assign({},sheetData),{armorPotencyRunes:CONFIG.PF2E.armorPotencyRunes,armorResiliencyRunes:CONFIG.PF2E.armorResiliencyRunes,armorPropertyRunes:CONFIG.PF2E.armorPropertyRunes,categories:CONFIG.PF2E.armorTypes,groups:CONFIG.PF2E.armorGroups,baseTypes:localize_1.LocalizePF2e.translations.PF2E.Item.Armor.Base,bulkTypes:CONFIG.PF2E.bulkTypes,preciousMaterials:CONFIG.PF2E.preciousMaterials,preciousMaterialGrades:CONFIG.PF2E.preciousMaterialGrades,sizes:CONFIG.PF2E.actorSizes,traits:this.prepareOptions(CONFIG.PF2E.armorTraits,sheetData.item.data.traits,{selectedOnly:!0})}),propertyRuneSlots)}}exports.ArmorSheetPF2e=ArmorSheetPF2e},41294:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BackgroundData=void 0;const non_physical_1=__webpack_require__(67561);class BackgroundData extends non_physical_1.BaseNonPhysicalItemData{}exports.BackgroundData=BackgroundData,BackgroundData.DEFAULT_ICON="systems/pf2e/icons/default-icons/background.svg"},70432:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BackgroundPF2e=void 0;const _actor_1=__webpack_require__(85530),abc_1=__webpack_require__(30301),data_1=__webpack_require__(41294);class BackgroundPF2e extends abc_1.ABCItemPF2e{static get schema(){return data_1.BackgroundData}prepareActorData(){if(!(this.actor instanceof _actor_1.CharacterPF2e))return void console.error("Only a character can have a background");const{trainedSkills}=this.data.data;if(1===trainedSkills.value.length){const key=trainedSkills.value[0],skill=this.actor.data.data.skills[key];skill.rank=Math.max(skill.rank,1)}}}exports.BackgroundPF2e=BackgroundPF2e},69401:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BackgroundSheetPF2e=void 0;const sheet_1=__webpack_require__(44996);class BackgroundSheetPF2e extends sheet_1.ABCSheetPF2e{async getData(){const data=await super.getData(),itemData=data.item;return Object.assign(Object.assign({},data),{rarities:this.prepareOptions(CONFIG.PF2E.rarityTraits,{value:[itemData.data.traits.rarity.value]}),trainedSkills:this.prepareOptions(CONFIG.PF2E.skills,itemData.data.trainedSkills),selectedBoosts:Object.fromEntries(Object.entries(itemData.data.boosts).map((([k,b])=>[k,this.getLocalizedAbilities(b)])))})}}exports.BackgroundSheetPF2e=BackgroundSheetPF2e},24227:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ItemPF2e=void 0;const chat_message_1=__webpack_require__(40405),modifiers_1=__webpack_require__(27324),_util_1=__webpack_require__(6945),dice_1=__webpack_require__(18235),_actor_1=__webpack_require__(85530),rules_1=__webpack_require__(40478),helpers_1=__webpack_require__(44252),helpers_2=__webpack_require__(74909),rolls_1=__webpack_require__(87525),migration_1=__webpack_require__(63051),ghost_measured_template_1=__webpack_require__(15252);class ItemPF2e extends Item{constructor(data,context={}){var _a;if(!(null===(_a=context.pf2e)||void 0===_a?void 0:_a.ready)){const ready={pf2e:{ready:!0}};return new CONFIG.PF2E.Item.documentClasses[data.type](data,Object.assign(Object.assign({},ready),context))}super(data,context),this.rules=[],this.initialized=!0}get slug(){return this.data.data.slug}get sourceId(){var _a,_b;return null!==(_b=null===(_a=this.data.flags.core)||void 0===_a?void 0:_a.sourceId)&&void 0!==_b?_b:null}get schemaVersion(){var _a;return Number(null===(_a=this.data.data.schema)||void 0===_a?void 0:_a.version)||null}get description(){return this.data.data.description.value}async delete(context={}){return this.actor?(await this.actor.deleteEmbeddedDocuments("Item",[this.id],context),this):super.delete(context)}getRollData(){const item=Object.assign({name:this.name},this.toObject(!1).data);if(!this.actor)return{item};const actor=this.actor.toObject(!1).data;return Object.assign(Object.assign({},actor),{actor,item})}async toMessage(event,{create=!0,data={}}={}){var _a,_b;if(!this.actor)throw(0,_util_1.ErrorPF2e)(`Cannot create message for unowned item ${this.name}`);const template=`systems/pf2e/templates/chat/${this.data.type}-card.html`,token=this.actor.token,nearestItem=event?event.currentTarget.closest(".item"):{},contextualData=isObjectEmpty(data)?nearestItem.dataset||{}:data,templateData={actor:this.actor,tokenId:token?`${null===(_a=token.parent)||void 0===_a?void 0:_a.id}.${token.id}`:null,item:this,data:this.getChatData(void 0,contextualData)},chatData={speaker:chat_message_1.ChatMessagePF2e.getSpeaker({actor:this.actor,token:null===(_b=this.actor.getActiveTokens()[0])||void 0===_b?void 0:_b.document}),flags:{core:{canPopout:!0},pf2e:{origin:{uuid:this.uuid,type:this.type}}},type:CONST.CHAT_MESSAGE_TYPES.OTHER},rollMode=game.settings.get("core","rollMode");return["gmroll","blindroll"].includes(rollMode)&&(chatData.whisper=chat_message_1.ChatMessagePF2e.getWhisperRecipients("GM").map((u=>u.id))),"blindroll"===rollMode&&(chatData.blind=!0),chatData.content=await renderTemplate(template,templateData),create?chat_message_1.ChatMessagePF2e.create(chatData,{renderSheet:!1}):new chat_message_1.ChatMessagePF2e(chatData)}async toChat(event){return this.toMessage(event,{create:!0})}prepareData(){super.prepareData(),!this.isOwned&&ui.items&&this.initialized&&ui.items.render()}prepareBaseData(){var _a;super.prepareBaseData(),this.data.flags.pf2e=mergeObject(null!==(_a=this.data.flags.pf2e)&&void 0!==_a?_a:{},{rulesSelections:{}})}prepareRuleElements(){return this.rules=rules_1.RuleElements.fromOwnedItem(this)}processChatData(htmlOptions={},data){var _a,_b,_c;if(data.properties=null!==(_b=null===(_a=data.properties)||void 0===_a?void 0:_a.filter((property=>null!==property)))&&void 0!==_b?_b:[],(0,helpers_1.isItemSystemData)(data)){const chatData=duplicate(data);return chatData.description.value=game.pf2e.TextEditor.enrichHTML(chatData.description.value,Object.assign(Object.assign({},htmlOptions),{rollData:null!==(_c=htmlOptions.rollData)&&void 0!==_c?_c:this.getRollData()})),chatData}return data}getChatData(htmlOptions={},_rollOptions={}){if(!this.actor)throw(0,_util_1.ErrorPF2e)(`Cannot retrieve chat data for unowned item ${this.name}`);return this.processChatData(htmlOptions,Object.assign(Object.assign({},duplicate(this.data.data)),{traits:this.traitChatData()}))}traitChatData(dictionary={}){var _a,_b,_c,_d;const traits=deepClone(null!==(_b=null===(_a=this.data.data.traits)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:[]).sort(),customTraits=null!==(_d=null===(_c=this.data.data.traits)||void 0===_c?void 0:_c.custom.trim().split(/\s*[,;|]\s*/).filter((trait=>trait)))&&void 0!==_d?_d:[];traits.push(...customTraits);return traits.map((trait=>{const label=dictionary[trait]||trait.charAt(0).toUpperCase()+trait.slice(1);return{value:trait,label,description:CONFIG.PF2E.traitsDescriptions[trait]}}))}rollNPCAttack(event,multiAttackPenalty=1){var _a,_b;if("melee"!==this.type)throw(0,_util_1.ErrorPF2e)("Wrong item type!");if("npc"!==(null===(_a=this.actor)||void 0===_a?void 0:_a.data.type)&&"hazard"!==(null===(_b=this.actor)||void 0===_b?void 0:_b.data.type))throw(0,_util_1.ErrorPF2e)("Attempted to roll an attack without an actor!");const itemData=this.getChatData(),rollData=duplicate(this.actor.data.data),parts=["@itemBonus"],title=`${this.name} - Attack Roll${multiAttackPenalty>1?` (MAP ${multiAttackPenalty})`:""}`;rollData.item=itemData;let adjustment=0;const traits=this.actor.data.data.traits.traits.value;traits.some((trait=>"elite"===trait))?adjustment=2:traits.some((trait=>"weak"===trait))&&(adjustment=-2),rollData.itemBonus=Number(itemData.bonus.value)+adjustment,2===multiAttackPenalty?parts.push(itemData.map2):3===multiAttackPenalty&&parts.push(itemData.map3),dice_1.DicePF2e.d20Roll({event,parts,actor:this.actor,data:rollData,rollType:"attack-roll",title,speaker:ChatMessage.getSpeaker({actor:this.actor}),dialogOptions:{width:400,top:event?event.clientY-80:400,left:window.innerWidth-710}})}rollNPCDamage(event,critical=!1){if("melee"!==this.data.type)throw(0,_util_1.ErrorPF2e)("Wrong item type!");if("npc"!==this.actor.data.type&&"hazard"!==this.actor.data.type)throw(0,_util_1.ErrorPF2e)("Attempted to roll an attack without an actor!");const itemData=this.data.data,rollData=duplicate(this.actor.data.data);let parts=[];const partsType=[];itemData.damageRolls&&"object"==typeof itemData.damageRolls?Object.keys(itemData.damageRolls).forEach((key=>{itemData.damageRolls[key].damage&&parts.push(itemData.damageRolls[key].damage),partsType.push(`${itemData.damageRolls[key].damage} ${itemData.damageRolls[key].damageType}`)})):parts=[itemData.damage.die];const title=`${this.name}: ${partsType.join(", ")}`;0===parts.length&&(console.log("PF2e System | No damage parts provided in damage roll"),parts=["0"]);const traits=this.actor.data.data.traits.traits.value;traits.some((trait=>"elite"===trait))?parts.push("+2"):traits.some((trait=>"weak"===trait))&&parts.push("-2"),rollData.item=itemData,dice_1.DicePF2e.damageRoll({event,parts,critical,actor:this.actor,data:rollData,title,speaker:ChatMessage.getSpeaker({actor:this.actor}),dialogOptions:{width:400,top:event.clientY-80,left:window.innerWidth-710}})}rollSpellcastingEntryCheck(event){const itemData=this.data;if("spellcastingEntry"!==itemData.type)throw new Error("Wrong item type!");if(!this.actor)throw new Error("Attempted a spellcasting check without an actor!");const rollData=duplicate(this.actor.data.data),parts=[itemData.data.spelldc.value],title=`${this.name} - Spellcasting Check`,traits=this.actor.data.data.traits.traits.value;traits.some((trait=>"elite"===trait))?parts.push(2):traits.some((trait=>"weak"===trait))&&parts.push(-2),dice_1.DicePF2e.d20Roll({event,parts,data:rollData,title,speaker:ChatMessage.getSpeaker({actor:this.actor}),dialogOptions:{width:400,top:event.clientY-80,left:window.innerWidth-710}})}rollCounteract(event){var _a,_b,_c,_d;if("character"!==this.actor.data.type&&"npc"!==this.actor.data.type)return;const itemData="consumable"===this.data.type&&(null===(_a=this.data.data.spell)||void 0===_a?void 0:_a.data)?duplicate(this.data.data.spell.data):this.toObject();if("spell"!==itemData.type)throw new Error("Wrong item type!");const spellcastingEntry=this.actor.spellcasting.get(itemData.data.location.value);if(!spellcastingEntry)throw(0,_util_1.ErrorPF2e)("Spell points to location that is not a spellcasting type");const modifiers=[],ability=(null===(_b=spellcastingEntry.data.data.ability)||void 0===_b?void 0:_b.value)||"int",score=null!==(_d=null===(_c=this.actor.data.data.abilities[ability])||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:0;modifiers.push(modifiers_1.AbilityModifier.fromScore(ability,score));const proficiencyRank=spellcastingEntry.rank;modifiers.push(modifiers_1.ProficiencyModifier.fromLevelAndRank(this.actor.data.data.details.level.value,proficiencyRank));const traits=itemData.data.traits.value;let flavor="<hr>";flavor+=`<h3>${game.i18n.localize("PF2E.Counteract")}</h3>`,flavor+="<hr>";const spellLevel=(()=>{const card=event.currentTarget.closest("*[data-spell-lvl]"),cardData=card?card.dataset:{};return Number(cardData.spellLvl)||1})(),addFlavor=(success,level)=>{const title=game.i18n.localize(`PF2E.${success}`),desc=game.i18n.format(`PF2E.CounteractDescription.${success}`,{level});flavor+=`<b>${title}</b> ${desc}<br>`};flavor+=`<p>${game.i18n.localize("PF2E.CounteractDescription.Hint")}</p>`,flavor+="<p>",addFlavor("CritSuccess",spellLevel+3),addFlavor("Success",spellLevel+1),addFlavor("Failure",spellLevel),addFlavor("CritFailure",0),flavor+="</p>";const check=new modifiers_1.StatisticModifier(flavor,modifiers),finalOptions=this.actor.getRollOptions(["all","counteract-check"]).concat(traits);(0,modifiers_1.ensureProficiencyOption)(finalOptions,proficiencyRank);const spellTraits=Object.assign(Object.assign(Object.assign({},CONFIG.PF2E.spellTraits),CONFIG.PF2E.magicSchools),CONFIG.PF2E.magicTraditions),traitObjects=traits.map((trait=>({name:trait,label:spellTraits[trait]})));rolls_1.CheckPF2e.roll(check,{actor:this.actor,type:"counteract-check",options:finalOptions,title:game.i18n.localize("PF2E.Counteract"),traits:traitObjects},event)}createTemplate(){var _a,_b,_c;const itemData="consumable"===this.data.type&&(null===(_a=this.data.data.spell)||void 0===_a?void 0:_a.data)?duplicate(this.data.data.spell.data):this.toObject();if("spell"!==itemData.type)throw new Error("Wrong item type!");const areaType={burst:"circle",emanation:"circle",line:"ray",cone:"cone",rect:"rect"}[itemData.data.area.areaType],templateData={t:areaType,distance:Number(itemData.data.area.value)/5*canvas.dimensions.distance,flags:{pf2e:{origin:{type:this.type,uuid:this.uuid,name:this.name,slug:this.slug,traits:deepClone(null!==(_c=null===(_b=this.data.data.traits)||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:[])}}}};"ray"===areaType?templateData.width=canvas.dimensions.distance:"cone"===areaType&&(templateData.angle=90),templateData.user=game.user.id,templateData.fillColor=game.user.color;const measuredTemplateDoc=new MeasuredTemplateDocument(templateData,{parent:canvas.scene});return new ghost_measured_template_1.GhostTemplate(measuredTemplateDoc)}placeTemplate(_event){this.createTemplate().drawPreview()}calculateMap(){return ItemPF2e.calculateMap(this.data)}static calculateMap(item){if("melee"===item.type||"weapon"===item.type){const agile=item.data.traits.value.includes("agile");switch((item.data.MAP||{}).value){case"1":return{label:"PF2E.MultipleAttackPenalty",map2:-1,map3:-2};case"2":return{label:"PF2E.MultipleAttackPenalty",map2:-2,map3:-4};case"3":return{label:"PF2E.MultipleAttackPenalty",map2:-3,map3:-6};case"4":return{label:"PF2E.MultipleAttackPenalty",map2:-4,map3:-8};case"5":return{label:"PF2E.MultipleAttackPenalty",map2:-5,map3:-10};default:return agile?{label:"PF2E.MultipleAttackPenalty",map2:-4,map3:-8}:{label:"PF2E.MultipleAttackPenalty",map2:-5,map3:-10}}}return{label:"PF2E.MultipleAttackPenalty",map2:-5,map3:-10}}static async createDialog(data={},options={}){const original=game.system.entityTypes.Item;game.system.entityTypes.Item=original.filter((itemType=>!(["condition","formula","martial","spellcastingEntry"].includes(itemType)||["book","deity"].includes(itemType))));const newItem=super.createDialog(data,options);return game.system.entityTypes.Item=original,newItem}async importFromJSON(json){var _a;const importData=JSON.parse(json),systemModel=deepClone(game.system.model.Item[importData.type]),data=mergeObject({data:systemModel},importData);return this.data.update(game.items.prepareForImport(data),{recursive:!1}),await migration_1.MigrationRunner.ensureSchemaVersion(this,migration_1.Migrations.constructFromVersion(null!==(_a=this.schemaVersion)&&void 0!==_a?_a:void 0),{preCreate:!1}),this.update(this.toObject(),{diff:!1,recursive:!1})}async _preCreate(data,options,user){var e_1,_a,_b;if(await super._preCreate(data,options,user),this.actor){const rules=rules_1.RuleElements.fromOwnedItem(this);try{for(var rules_2_1,rules_2=__asyncValues(rules);!(rules_2_1=await rules_2.next()).done;){const rule=rules_2_1.value,source=this.data._source.data.rules[rules.indexOf(rule)];await(null===(_b=rule.preCreate)||void 0===_b?void 0:_b.call(rule,source))}}catch(e_1_1){e_1={error:e_1_1}}finally{try{rules_2_1&&!rules_2_1.done&&(_a=rules_2.return)&&await _a.call(rules_2)}finally{if(e_1)throw e_1.error}}}else await migration_1.MigrationRunner.ensureSchemaVersion(this,migration_1.Migrations.constructFromVersion())}_onCreate(data,options,userId){var _a,_b;if(this.actor){if(!(0,helpers_2.isCreatureData)(null===(_a=this.actor)||void 0===_a?void 0:_a.data)||!this.canUserModify(game.user,"update"))return;const actorUpdates={};for(const rule of this.rules)null===(_b=rule.onCreate)||void 0===_b||_b.call(rule,actorUpdates);this.actor.update(actorUpdates)}super._onCreate(data,options,userId)}_onDelete(options,userId){var _a,_b;if(this.actor){if(!(0,helpers_2.isCreatureData)(this.actor.data)||!this.canUserModify(game.user,"update"))return;const actorUpdates={};for(const rule of this.rules)null===(_a=rule.onDelete)||void 0===_a||_a.call(rule,actorUpdates);if(this.actor instanceof _actor_1.NPCPF2e&&["action","consumable"].includes(this.type)){const slug=null!==(_b=this.slug)&&void 0!==_b?_b:(0,_util_1.sluggify)(this.name);if(this.actor.isToken){const promises=[];this.actor.itemTypes.melee.forEach((item=>{const attackEffects=item.data.data.attackEffects.value;if(attackEffects.includes(slug)){const updatedEffects=attackEffects.filter((effect=>effect!==slug));promises.push(item.update({"data.attackEffects.value":updatedEffects}))}})),promises.length>0&&Promise.allSettled(promises)}else{const itemUpdates=[];this.actor.itemTypes.melee.forEach((item=>{const attackEffects=item.data.data.attackEffects.value;if(attackEffects.includes(slug)){const updatedEffects=attackEffects.filter((effect=>effect!==slug));itemUpdates.push({_id:item.id,data:{attackEffects:{value:updatedEffects}}})}})),itemUpdates.length>0&&mergeObject(actorUpdates,{items:itemUpdates})}}this.actor.update(actorUpdates)}super._onDelete(options,userId)}}exports.ItemPF2e=ItemPF2e},86703:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BookData=void 0;const data_1=__webpack_require__(10530);class BookData extends data_1.BasePhysicalItemData{}exports.BookData=BookData,BookData.DEFAULT_ICON="systems/pf2e/icons/default-icons/book.svg"},92364:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BookPF2e=void 0;const _item_1=__webpack_require__(10843),data_1=__webpack_require__(86703);class BookPF2e extends _item_1.PhysicalItemPF2e{static get schema(){return data_1.BookData}}exports.BookPF2e=BookPF2e},59401:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BookSheetPF2e=void 0;const sheet_1=__webpack_require__(38719);class BookSheetPF2e extends sheet_1.PhysicalItemSheetPF2e{async getData(){return await super.getData()}activateListeners($html){super.activateListeners($html)}}exports.BookSheetPF2e=BookSheetPF2e},46875:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CLASS_TRAITS=exports.ClassData=void 0;const non_physical_1=__webpack_require__(67561);class ClassData extends non_physical_1.BaseNonPhysicalItemData{}exports.ClassData=ClassData,ClassData.DEFAULT_ICON="systems/pf2e/icons/default-icons/class.svg",exports.CLASS_TRAITS=["alchemist","barbarian","bard","champion","cleric","druid","fighter","gunslinger","inventor","investigator","magus","monk","oracle","ranger","rogue","sorcerer","summoner","swashbuckler","witch","wizard"]},43565:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ClassPF2e=void 0;const _actor_1=__webpack_require__(85530),values_1=__webpack_require__(35089),data_1=__webpack_require__(55749),data_2=__webpack_require__(39530),abc_1=__webpack_require__(30301),data_3=__webpack_require__(46875);class ClassPF2e extends abc_1.ABCItemPF2e{static get schema(){return data_3.ClassData}get hpPerLevel(){return this.data.data.hp}prepareActorData(){if(!(this.actor instanceof _actor_1.CharacterPF2e))return void console.error("Only a character can have a class");const classDetails=this.data.data,{attributes,details,martial,saves}=this.actor.data.data;attributes.classhp=this.hpPerLevel,attributes.perception.rank=Math.max(attributes.perception.rank,classDetails.perception),this.logAutoChange("data.attributes.perception.rank",classDetails.perception),attributes.classDC.rank=Math.max(attributes.classDC.rank,classDetails.classDC),this.logAutoChange("data.attributes.classDC.rank",classDetails.classDC),1===classDetails.keyAbility.value.length&&(details.keyability.value=classDetails.keyAbility.value[0]);for(const category of data_1.ARMOR_CATEGORIES)martial[category].rank=Math.max(martial[category].rank,classDetails.defenses[category]),this.logAutoChange(`data.martial.${category}.rank`,classDetails.defenses[category]);for(const category of data_2.WEAPON_CATEGORIES)martial[category].rank=Math.max(martial[category].rank,classDetails.attacks[category]),this.logAutoChange(`data.martial.${category}.rank`,classDetails.attacks[category]);for(const saveType of values_1.SAVE_TYPES)saves[saveType].rank=Math.max(saves[saveType].rank,classDetails.savingThrows[saveType]),this.logAutoChange(`data.saves.${saveType}.rank`,classDetails.savingThrows[saveType])}}exports.ClassPF2e=ClassPF2e},46840:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ClassSheetPF2e=void 0;const sheet_1=__webpack_require__(44996);class ClassSheetPF2e extends sheet_1.ABCSheetPF2e{async getData(){const data=await super.getData(),itemData=data.item,items=Object.entries(data.data.items).map((([key,item])=>({key,item}))).sort(((first,second)=>first.item.level-second.item.level));return Object.assign(Object.assign({},data),{items,rarities:this.prepareOptions(CONFIG.PF2E.rarityTraits,{value:[itemData.data.traits.rarity.value]}),skills:CONFIG.PF2E.skills,proficiencyChoices:CONFIG.PF2E.proficiencyLevels,selectedKeyAbility:this.getLocalizedAbilities(itemData.data.keyAbility),ancestryTraits:this.prepareOptions(CONFIG.PF2E.ancestryItemTraits,itemData.data.traits),trainedSkills:this.prepareOptions(CONFIG.PF2E.skills,itemData.data.trainedSkills),ancestryFeatLevels:this.prepareOptions(CONFIG.PF2E.levels,itemData.data.ancestryFeatLevels),classFeatLevels:this.prepareOptions(CONFIG.PF2E.levels,itemData.data.classFeatLevels),generalFeatLevels:this.prepareOptions(CONFIG.PF2E.levels,itemData.data.generalFeatLevels),skillFeatLevels:this.prepareOptions(CONFIG.PF2E.levels,itemData.data.skillFeatLevels),skillIncreaseLevels:this.prepareOptions(CONFIG.PF2E.levels,itemData.data.skillIncreaseLevels),abilityBoostLevels:this.prepareOptions(CONFIG.PF2E.levels,itemData.data.abilityBoostLevels)})}}exports.ClassSheetPF2e=ClassSheetPF2e},39103:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConditionData=void 0;const non_physical_1=__webpack_require__(67561);class ConditionData extends non_physical_1.BaseNonPhysicalItemData{}exports.ConditionData=ConditionData,ConditionData.DEFAULT_ICON="systems/pf2e/icons/default-icons/condition.svg"},16730:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConditionPF2e=void 0;const base_1=__webpack_require__(24227),data_1=__webpack_require__(39103);class ConditionPF2e extends base_1.ItemPF2e{static get schema(){return data_1.ConditionData}get value(){return this.data.data.value.value}get duration(){return this.data.data.duration.perpetual?null:this.data.data.duration.value}get isActive(){return this.data.data.active}get fromSystem(){return!!this.getFlag("pf2e","condition")}get isInHUD(){return this.data.data.sources.hud}prepareBaseData(){super.prepareBaseData();const systemData=this.data.data;systemData.value.value=systemData.value.isValued?Number(systemData.value.value)||1:null}}exports.ConditionPF2e=ConditionPF2e},53633:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConsumableData=void 0;const data_1=__webpack_require__(10530);class ConsumableData extends data_1.BasePhysicalItemData{}exports.ConsumableData=ConsumableData,ConsumableData.DEFAULT_ICON="systems/pf2e/icons/default-icons/consumable.svg"},74145:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConsumablePF2e=void 0;const localize_1=__webpack_require__(41332),data_1=__webpack_require__(53633),_item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),chat_message_1=__webpack_require__(40405),trick_magic_item_popup_1=__webpack_require__(45357);class ConsumablePF2e extends _item_1.PhysicalItemPF2e{static get schema(){return data_1.ConsumableData}get consumableType(){return this.data.data.consumableType.value}get isAmmunition(){return"ammo"===this.consumableType}get charges(){return{current:this.data.data.charges.value,max:this.data.data.charges.max}}get autoDestroy(){return this.data.data.autoDestroy.value}get embeddedSpell(){const spellData=deepClone(this.data.data.spell.data);if(!spellData)return null;if(!this.actor)throw(0,_util_1.ErrorPF2e)(`No owning actor found for "${this.name}" (${this.id})`);const heightenedLevel=this.data.data.spell.heightenedLevel;return"number"==typeof heightenedLevel&&(spellData.data.heightenedLevel={value:heightenedLevel}),new _item_1.SpellPF2e(spellData,{parent:this.actor,fromConsumable:!0})}getChatData(htmlOptions={}){const data=this.data.data,translations=localize_1.LocalizePF2e.translations.PF2E,traits=this.traitChatData(CONFIG.PF2E.consumableTraits),[consumableType,isUsable]=this.isIdentified?[game.i18n.localize(this.consumableType),!0]:[this.generateUnidentifiedName({typeOnly:!0}),!["other","scroll","talisman","tool","wand"].includes(this.consumableType)];return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{traits,properties:this.isIdentified&&this.charges.max>0?[`${data.charges.value}/${data.charges.max} ${translations.ConsumableChargesLabel}`]:[],usesCharges:this.charges.max>0,hasCharges:this.charges.max>0&&this.charges.current>0,consumableType,isUsable}))}generateUnidentifiedName({typeOnly=!1}={typeOnly:!1}){const translations=localize_1.LocalizePF2e.translations.PF2E.identification,itemType=["drug","elixir","mutagen","oil","poison","potion"].includes(this.consumableType)?(()=>this.traits.has("inhaled")||this.traits.has("contact")?translations.UnidentifiedType.Substance:translations.UnidentifiedType.Liquid)():["scroll","snare","ammo"].includes(this.consumableType)?game.i18n.localize(CONFIG.PF2E.consumableTypes[this.consumableType]):translations.UnidentifiedType.Object;if(typeOnly)return itemType;const formatString=localize_1.LocalizePF2e.translations.PF2E.identification.UnidentifiedItem;return game.i18n.format(formatString,{item:itemType})}isAmmoFor(weapon){if(!(weapon instanceof _item_1.WeaponPF2e))return console.warn("Cannot load a consumable into a non-weapon"),!1;const{max}=this.charges;return weapon.traits.has("repeating")?max>1:max<=1}async consume(){const{current,max}=this.charges;if(["scroll","wand"].includes(this.data.data.consumableType.value)&&this.data.data.spell.data)if(this.actor.spellcasting.canCastConsumable(this))this.castEmbeddedSpell();else if(this.actor.itemTypes.feat.some((feat=>"trick-magic-item"===feat.slug)))new trick_magic_item_popup_1.TrickMagicItemPopup(this);else{const content=game.i18n.format("PF2E.LackCastConsumableCapability",{name:this.name});await chat_message_1.ChatMessagePF2e.create({user:game.user.id,speaker:ChatMessage.getSpeaker({actor:this.actor}),whisper:ChatMessage.getWhisperRecipients(this.actor.name).map((user=>user.id)),content})}else{const key=max>1&&1===current?"UseExhausted":max>1?"UseMulti":"UseSingle",content=game.i18n.format(`PF2E.ConsumableMessage.${key}`,{name:this.name,current:current-1}),cv=this.data.data.consume.value;cv?new Roll(cv).toMessage({speaker:ChatMessage.getSpeaker({actor:this.actor}),flavor:content}):ChatMessage.create({user:game.user.id,speaker:ChatMessage.getSpeaker({actor:this.actor}),content})}const quantity=this.quantity;this.autoDestroy&&current<=1?quantity<=1?await this.delete():await this.update({"data.quantity.value":Math.max(quantity-1,0),"data.charges.value":max}):await this.update({"data.charges.value":Math.max(current-1,0)})}async castEmbeddedSpell(trickMagicItemData){const spell=this.embeddedSpell;if(!spell)return;const actor=this.actor,entry=(()=>{if(trickMagicItemData)return trickMagicItemData;const spellcastingEntries=actor.spellcasting.spellcastingFeatures.filter((entry=>spell.traditions.has(entry.tradition)));let maxBonus=0,bestEntry=0;for(let i=0;i<spellcastingEntries.length;i++)spellcastingEntries[i].data.data.spelldc.value>maxBonus&&(maxBonus=spellcastingEntries[i].data.data.spelldc.value,bestEntry=i);return spellcastingEntries[bestEntry]})();if(entry){const systemData=spell.data.data;entry instanceof _item_1.SpellcastingEntryPF2e&&(systemData.location.value=entry.id),entry.cast(spell,{consume:!1})}}}exports.ConsumablePF2e=ConsumablePF2e},87458:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateTrickMagicItemCheckDC=exports.createConsumableFromSpell=exports.isSpellConsumable=void 0;const index_1=__webpack_require__(10843),dc_1=__webpack_require__(84372),_util_1=__webpack_require__(6945),scrollCompendiumIds={1:"RjuupS9xyXDLgyIr",2:"Y7UD64foDbDMV9sx",3:"ZmefGBXGJF3CFDbn",4:"QSQZJ5BC3DeHv153",5:"tjLvRWklAylFhBHQ",6:"4sGIy77COooxhQuC",7:"fomEZZ4MxVVK3uVu",8:"iPki3yuoucnj7bIt",9:"cFHomF3tty8Wi1e5",10:"o1XIHJ4MJyroAHfF"},wandCompendiumIds={1:"UJWiN0K3jqVjxvKk",2:"vJZ49cgi8szuQXAD",3:"wrDmWkGxmwzYtfiA",4:"Sn7v9SsbEDMUIwrO",5:"5BF7zMnrPYzyigCs",6:"kiXh4SUWKr166ZeM",7:"nmXPj9zuMRQBNT60",8:"Qs8RgNH6thRPv2jt",9:"Fgv722039TVM5JTc"};exports.isSpellConsumable=function(itemId){return Object.values(scrollCompendiumIds).includes(itemId)||Object.values(wandCompendiumIds).includes(itemId)},exports.createConsumableFromSpell=async function(type,spell,heightenedLevel){heightenedLevel=null!=heightenedLevel?heightenedLevel:spell.level;const pack=game.packs.find((p=>"pf2e.equipment-srd"===p.collection)),itemId=function(type,heightenedLevel){var _a,_b;return"scroll"===type?null!==(_a=scrollCompendiumIds[heightenedLevel])&&void 0!==_a?_a:null:null!==(_b=wandCompendiumIds[heightenedLevel])&&void 0!==_b?_b:null}(type,heightenedLevel),consumable=await(null==pack?void 0:pack.getDocument(null!=itemId?itemId:""));if(!(consumable instanceof index_1.ConsumablePF2e))throw(0,_util_1.ErrorPF2e)("Failed to retrieve consumable item");const consumableData=consumable.toObject();spell.traditions.forEach((value=>consumableData.data.traits.value.push(value))),consumableData.name=function(type,spellName,heightenedLevel){return"scroll"===type?game.i18n.format("PF2E.ScrollFromSpell",{name:spellName,level:heightenedLevel}):game.i18n.format("PF2E.WandFromSpell",{name:spellName,level:heightenedLevel})}(type,spell.name,heightenedLevel);const description=consumableData.data.description.value;return consumableData.data.description.value=(spell.sourceId?"@"+spell.sourceId.replace(".","[")+"]":spell.description)+`\n<hr/>${description}`,consumableData.data.spell={data:duplicate(spell.toObject()),heightenedLevel},consumableData};const TraditionSkills={arcane:"arc",divine:"rel",occult:"occ",primal:"nat"};exports.calculateTrickMagicItemCheckDC=function(itemData,options={proficiencyWithoutLevel:!1}){const level=Number(itemData.data.level.value),saveDC=(0,dc_1.calculateDC)(level,options),skills=itemData.data.traits.value.filter((trait=>trait in CONFIG.PF2E.magicTraditions)).map((tradition=>[TraditionSkills[tradition],saveDC]));return Object.fromEntries(skills)}},1416:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ContainerData=void 0;const data_1=__webpack_require__(10530);class ContainerData extends data_1.BasePhysicalItemData{}exports.ContainerData=ContainerData,ContainerData.DEFAULT_ICON="systems/pf2e/icons/default-icons/backpack.svg"},23247:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getContainerMap=exports.isCycle=void 0;const bulk_1=__webpack_require__(47297),_util_1=__webpack_require__(6945);class ContainerData{constructor({item,heldItems,negateBulk,capacity,heldItemBulk,isInContainer,formattedNegateBulk,formattedHeldItemBulk,formattedCapacity}){this.item=item,this.heldItems=heldItems,this.negateBulk=negateBulk,this.heldItemBulk=heldItemBulk,this.isInContainer=isInContainer,this.formattedHeldItemBulk=formattedHeldItemBulk,this.formattedNegateBulk=formattedNegateBulk,this.formattedCapacity=formattedCapacity,this.capacity=capacity}get isContainer(){return!this.capacity.isNegligible}get isCollapsed(){var _a,_b,_c,_d;return null!==(_d=null===(_c=null===(_b=null===(_a=this.item)||void 0===_a?void 0:_a.data)||void 0===_b?void 0:_b.collapsed)||void 0===_c?void 0:_c.value)&&void 0!==_d&&_d}get isNotInContainer(){return!this.isInContainer}_getLightBulkCapacityThreshold(){return this.capacity.normal>0?this.capacity.toLightBulk()+10:this.capacity.light}get fullPercentage(){const capacity=this._getLightBulkCapacityThreshold();if(0===capacity)return 0;const heldLightBulk=this.heldItemBulk.toLightBulk();return Math.floor(heldLightBulk/capacity*100)}get fullPercentageMax100(){const percentage=this.fullPercentage;return percentage>100?100:percentage}get isOverLoaded(){return this.capacity.normal>0?this.heldItemBulk.toLightBulk()>=this.capacity.toLightBulk()+10:this.heldItemBulk.toLightBulk()>this.capacity.light}}function toContainer({item,heldItems=[],heldBulkItems=[],isInContainer,bulkConfig,actorSize}){var _a,_b,_c,_d,_e,_f;const negateBulk=null!==(_c=(0,bulk_1.weightToBulk)(null===(_b=null===(_a=item.data)||void 0===_a?void 0:_a.negateBulk)||void 0===_b?void 0:_b.value))&&void 0!==_c?_c:new bulk_1.Bulk,[heldItemBulk]=(0,bulk_1.calculateBulk)({items:heldBulkItems,bulkConfig,actorSize}),capacity=null!==(_f=(0,bulk_1.weightToBulk)(null===(_e=null===(_d=item.data)||void 0===_d?void 0:_d.bulkCapacity)||void 0===_e?void 0:_e.value))&&void 0!==_f?_f:new bulk_1.Bulk;return new ContainerData({item,heldItems,negateBulk,capacity,heldItemBulk,isInContainer,formattedNegateBulk:(0,bulk_1.formatBulk)(negateBulk),formattedHeldItemBulk:(0,bulk_1.formatBulk)(heldItemBulk),formattedCapacity:(0,bulk_1.formatBulk)(capacity)})}function detectCycle(itemId,containerId="",idIndexedItems){const currentItem=idIndexedItems.get(containerId);return!!currentItem&&(itemId===(null==currentItem?void 0:currentItem._id)||detectCycle(itemId,currentItem.data.containerId.value,idIndexedItems))}exports.isCycle=function(itemId,containerId,items){const idIndexedItems=new Map;for(const item of items)idIndexedItems.set(item._id,item);return detectCycle(itemId,containerId,idIndexedItems)},exports.getContainerMap=function({items=[],bulkItemsById=new Map,bulkConfig=bulk_1.defaultBulkConfig,actorSize="med"}={}){var _a,_b;const allIds=(0,_util_1.groupBy)(items,(itemData=>itemData._id)),containerGroups=(0,_util_1.groupBy)(items,(itemData=>{var _a;const containerId=null!==(_a=itemData.data.containerId.value)&&void 0!==_a?_a:"";return allIds.has(containerId)?containerId:null})),idIndexedContainerData=new Map;for(const item of items){const isInContainer=null!==item.data.containerId.value&&containerGroups.has(item.data.containerId.value),heldItems=containerGroups.get(item._id)||[];idIndexedContainerData.set(item._id,toContainer({item:allIds.get(item._id)[0],heldItems,heldBulkItems:null!==(_b=null===(_a=bulkItemsById.get(item._id))||void 0===_a?void 0:_a.holdsItems)&&void 0!==_b?_b:[],isInContainer,bulkConfig,actorSize}))}return idIndexedContainerData}},55323:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ContainerPF2e=void 0;const physical_1=__webpack_require__(6560),data_1=__webpack_require__(1416);class ContainerPF2e extends physical_1.PhysicalItemPF2e{constructor(){super(...arguments),this.contents=new Collection}static get schema(){return data_1.ContainerData}prepareSiblingData(){this.contents=new Collection(this.actor.physicalItems.filter((item=>{var _a;return(null===(_a=item.container)||void 0===_a?void 0:_a.id)===this.id})).map((item=>[item.id,item])))}getChatData(htmlOptions={}){const data=this.data.data,traits=this.traitChatData(CONFIG.PF2E.equipmentTraits);return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{traits}))}}exports.ContainerPF2e=ContainerPF2e},66193:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseItemDataPF2e=void 0;class BaseItemDataPF2e extends foundry.data.ItemData{}exports.BaseItemDataPF2e=BaseItemDataPF2e},44252:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isInventoryItem=exports.isPhysicalChatData=exports.isItemChatData=exports.isLevelItem=exports.hasInvestedProperty=exports.isPhysicalData=exports.isItemSystemData=void 0;const values_1=__webpack_require__(67189);function isItemSystemData(data){return data.description instanceof Object&&"string"==typeof data.description.value}function isPhysicalData(itemData){return values_1.PHYSICAL_ITEM_TYPES.includes(itemData.type)}exports.isItemSystemData=isItemSystemData,exports.isPhysicalData=isPhysicalData,exports.hasInvestedProperty=function(itemData){return isPhysicalData(itemData)&&itemData.data.invested instanceof Object},exports.isLevelItem=function(item){return"level"in item.data},exports.isItemChatData=function(data){return isItemSystemData(data)},exports.isPhysicalChatData=function(data){return"quantity"in data&&isItemSystemData(data)},exports.isInventoryItem=function(type){switch(type){case"armor":case"backpack":case"consumable":case"equipment":case"treasure":case"weapon":return!0}return!1}},67561:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseNonPhysicalItemData=void 0;const base_1=__webpack_require__(66193);class BaseNonPhysicalItemData extends base_1.BaseItemDataPF2e{constructor(){super(...arguments),this.isPhysical=!1}}exports.BaseNonPhysicalItemData=BaseNonPhysicalItemData},67189:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RANGE_TRAITS=exports.PRECIOUS_MATERIAL_GRADES=exports.PRECIOUS_MATERIAL_TYPES=exports.PHYSICAL_ITEM_TYPES=exports.MystifiedTraits=void 0;class MystifiedTraits{static compile(){this.mystifiedTraits=new Set([...Object.keys(CONFIG.PF2E.magicSchools),...Object.keys(CONFIG.PF2E.magicTraditions),...Object.keys(CONFIG.PF2E.consumableTraits).filter((trait=>"consumable"!==trait)),"cursed","extradimensional","invested"])}static has(trait){return this.mystifiedTraits.has(trait)}}exports.MystifiedTraits=MystifiedTraits,MystifiedTraits.mystifiedTraits=new Set,exports.PHYSICAL_ITEM_TYPES=["armor","backpack","book","consumable","equipment","treasure","weapon"],exports.PRECIOUS_MATERIAL_TYPES=["adamantine","coldIron","darkwood","dragonhide","mithral","orichalcum","silver","sovereignSteel","warpglass"],exports.PRECIOUS_MATERIAL_GRADES=["low","standard","high"],exports.RANGE_TRAITS=["range","range-5","range-10","range-15","range-20","range-25","range-30","range-40","range-50","range-60","range-70","range-80","range-90","range-100","range-120","range-180","range-240","range-increment-5","range-increment-10","range-increment-15","range-increment-20","range-increment-30","range-increment-40","range-increment-50","range-increment-60","range-increment-70","range-increment-75","range-increment-80","range-increment-90","range-increment-100","range-increment-110","range-increment-120","range-increment-130","range-increment-140","range-increment-150","range-increment-160","range-increment-170","range-increment-180","range-increment-190","range-increment-200","range-increment-210","range-increment-220","range-increment-230","range-increment-240","range-increment-250","range-increment-260","range-increment-270","range-increment-280","range-increment-290","range-increment-300","range-increment-310","range-increment-320","range-increment-500"]},26940:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DeityData=void 0;const non_physical_1=__webpack_require__(67561);class DeityData extends non_physical_1.BaseNonPhysicalItemData{}exports.DeityData=DeityData,DeityData.DEFAULT_ICON="systems/pf2e/icons/default-icons/deity.svg"},91603:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DeityPF2e=void 0;const _item_1=__webpack_require__(10843),data_1=__webpack_require__(26940);class DeityPF2e extends _item_1.ItemPF2e{static get schema(){return data_1.DeityData}}exports.DeityPF2e=DeityPF2e},52970:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DeitySource=exports.DeityData=exports.DeityPF2e=void 0;var document_1=__webpack_require__(91603);Object.defineProperty(exports,"DeityPF2e",{enumerable:!0,get:function(){return document_1.DeityPF2e}});var data_1=__webpack_require__(26940);Object.defineProperty(exports,"DeityData",{enumerable:!0,get:function(){return data_1.DeityData}}),Object.defineProperty(exports,"DeitySource",{enumerable:!0,get:function(){return data_1.DeitySource}})},11880:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var _DeitySheetPF2e_sidebarText,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DeitySheetPF2e=void 0;const base_1=__webpack_require__(22222),_util_1=__webpack_require__(6945),spell_1=__webpack_require__(12114),_item_1=__webpack_require__(10843),from_uuids_1=__webpack_require__(16539);class DeitySheetPF2e extends base_1.ItemSheetPF2e{constructor(){super(...arguments),_DeitySheetPF2e_sidebarText.set(this,["data.anathema","data.edicts","data.areasOfConcern"])}static get defaultOptions(){return Object.assign(Object.assign({},super.defaultOptions),{scrollY:[".item-details"],dragDrop:[{dropSelector:".sheet-header, .sheet-content"}]})}async getData(){const sheetData=super.getBaseData(),spells=(await(0,from_uuids_1.fromUUIDs)(Object.values(sheetData.data.spells))).map((spell=>{if(!(spell instanceof spell_1.SpellPF2e))throw(0,_util_1.ErrorPF2e)(`Unexpected item referenced on deity ${this.item.name} (${this.item.uuid})`);return spell})).sort(((spellA,spellB)=>spellA.level-spellB.level));return Object.assign(Object.assign({},sheetData),{hasDetails:!0,hasSidebar:!0,detailsTemplate:()=>"systems/pf2e/templates/items/deity-details.html",sidebarTemplate:()=>"systems/pf2e/templates/items/deity-sidebar.html",alignments:CONFIG.PF2E.alignments,followerAlignments:this.prepareOptions(CONFIG.PF2E.alignments,sheetData.data.alignment.follower,{selectedOnly:!0}),abilities:this.prepareOptions(CONFIG.PF2E.abilities,sheetData.data.ability,{selectedOnly:!0}),skills:CONFIG.PF2E.skills,favoredWeapons:this.prepareOptions(CONFIG.PF2E.baseWeaponTypes,sheetData.data.weapon,{selectedOnly:!0}),divineFonts:this.prepareOptions({harm:"PF2E.Item.Deity.DivineFont.Harm",heal:"PF2E.Item.Deity.DivineFont.Heal"},sheetData.data.font),spells})}activateListeners($html){super.activateListeners($html),$html.find(".sheet-header, .sheet-content").on("click",(event=>{var _a,_b;const openSidebarEditors=Object.entries(this.editors).filter((([key,editor])=>__classPrivateFieldGet(this,_DeitySheetPF2e_sidebarText,"f").includes(key)&&editor.active)).map((([_key,editor])=>editor)),$target=$(event.target);if(!$target.is("a")&&!$target.parents().is("a"))for(const editor of openSidebarEditors)null===(_b=(_a=editor.options).save_onsavecallback)||void 0===_b||_b.call(_a)}));const $clericSpells=$html.find(".cleric-spells");$clericSpells.find('a[data-action="view-spell"]').on("click",(async event=>{var _a;const uuid=null!==(_a=$(event.currentTarget).closest("li").attr("data-uuid"))&&void 0!==_a?_a:"",spell=await fromUuid(uuid);if(!(spell instanceof spell_1.SpellPF2e))throw(0,_util_1.ErrorPF2e)(`A spell with the UUID "${uuid}" no longer exists`);spell.sheet.render(!0)})),$clericSpells.find('a[data-action="remove-spell"]').on("click",(event=>{var _a,_b;const uuidToRemove=null!==(_a=$(event.currentTarget).closest("li").attr("data-uuid"))&&void 0!==_a?_a:"",[keyToRemove]=null!==(_b=Object.entries(this.item.data.data.spells).find((([_level,uuid])=>uuid===uuidToRemove)))&&void 0!==_b?_b:[];keyToRemove&&this.item.update({[`data.spells.-=${keyToRemove}`]:null})}))}activateEditor(name,options={},initialContent=""){__classPrivateFieldGet(this,_DeitySheetPF2e_sidebarText,"f").includes(name)&&(options.toolbar="",options.plugins="paste",options.paste_as_text=!0,options.body_class="pf2e sidebar-text","number"==typeof options.height&&(options.height*=1.5)),super.activateEditor(name,options,initialContent)}async _onDrop(event){const item=await(async()=>{var _a,_b;try{const dataString=null===(_a=event.dataTransfer)||void 0===_a?void 0:_a.getData("text/plain"),dropData=JSON.parse(null!=dataString?dataString:"");return null!==(_b=await _item_1.ItemPF2e.fromDropData(dropData))&&void 0!==_b?_b:null}catch(_c){return null}})();if(!(item instanceof spell_1.SpellPF2e))throw(0,_util_1.ErrorPF2e)("Invalid item drop on deity sheet");item.isCantrip||item.isFocusSpell||item.isRitual?console.warn("PF2e System | A deity's cleric spells cannot be a cantrip, focus spell, or ritual."):this.item.update({[`data.spells.${item.level}`]:item.uuid})}async _updateObject(event,formData){Array.isArray(formData["data.font"])&&(formData["data.font"]=[formData["data.font"][0]?"harm":[],formData["data.font"][1]?"heal":[]].flat()),await super._updateObject(event,formData)}}exports.DeitySheetPF2e=DeitySheetPF2e,_DeitySheetPF2e_sidebarText=new WeakMap},88151:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FormulaData=exports.FormulaPF2e=exports.MartialData=exports.MartialPF2e=void 0;const base_1=__webpack_require__(24227),non_physical_1=__webpack_require__(67561);class MartialPF2e extends base_1.ItemPF2e{}exports.MartialPF2e=MartialPF2e;class MartialData extends non_physical_1.BaseNonPhysicalItemData{}exports.MartialData=MartialData;class FormulaPF2e extends base_1.ItemPF2e{}exports.FormulaPF2e=FormulaPF2e;class FormulaData extends non_physical_1.BaseNonPhysicalItemData{}exports.FormulaData=FormulaData},84240:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectData=void 0;const non_physical_1=__webpack_require__(67561);class EffectData extends non_physical_1.BaseNonPhysicalItemData{}exports.EffectData=EffectData,EffectData.DEFAULT_ICON="systems/pf2e/icons/default-icons/effect.svg"},57785:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectPF2e=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(24227),data_1=__webpack_require__(84240);class EffectPF2e extends base_1.ItemPF2e{static get schema(){return data_1.EffectData}get isExpired(){return this.data.data.expired}get totalDuration(){var _a;const{duration}=this.data.data;return"unlimited"===duration.unit?1/0:duration.value*(null!==(_a=EffectPF2e.DURATION_UNITS[duration.unit])&&void 0!==_a?_a:0)}get remainingDuration(){var _a,_b,_c,_d,_e;const result={expired:!0,remaining:0},duration=this.totalDuration;if(duration===1/0)result.expired=!1;else{const start=null!==(_b=null===(_a=this.data.data.start)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:0;if(result.remaining=start+duration-game.time.worldTime,result.expired=result.remaining<=0,0===result.remaining&&void 0!==ui.combat&&(null===(_c=game.combat)||void 0===_c?void 0:_c.active)&&game.combat.combatant&&game.combat.turns.length>game.combat.turn){const initiative=null!==(_d=game.combat.combatant.initiative)&&void 0!==_d?_d:0;initiative===this.data.data.start.initiative?result.expired="turn-end"!==this.data.data.duration.expiry:result.expired=initiative<(null!==(_e=this.data.data.start.initiative)&&void 0!==_e?_e:0)}}return result}prepareActorData(){var _a;this.actor.data.flags.pf2e.rollOptions.all[null!==(_a=this.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(this.name)]=!0}prepareDerivedData(){super.prepareDerivedData(),this.actor&&game.pf2e.effectTracker.register(this)}async _preCreate(data,options,user){var _a,_b,_c;if(this.isOwned&&user.id===game.userId){const initiative=null!==(_c=null===(_b=null===(_a=game.combat)||void 0===_a?void 0:_a.turns[game.combat.turn])||void 0===_b?void 0:_b.initiative)&&void 0!==_c?_c:null;this.data.update({"data.start":{value:game.time.worldTime,initiative:game.combat&&game.combat.turns.length>game.combat.turn?initiative:null}})}await super._preCreate(data,options,user)}_onDelete(options,userId){this.actor&&game.pf2e.effectTracker.unregister(this),super._onDelete(options,userId)}}exports.EffectPF2e=EffectPF2e,EffectPF2e.DURATION_UNITS=Object.freeze({rounds:6,minutes:60,hours:3600,days:86400})},25531:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectSheetPF2e=void 0;const base_1=__webpack_require__(22222);class EffectSheetPF2e extends base_1.ItemSheetPF2e{}exports.EffectSheetPF2e=EffectSheetPF2e},90485:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EquipmentData=void 0;const data_1=__webpack_require__(10530);class EquipmentData extends data_1.BasePhysicalItemData{}exports.EquipmentData=EquipmentData,EquipmentData.DEFAULT_ICON="systems/pf2e/icons/default-icons/equipment.svg"},87533:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EquipmentPF2e=void 0;const localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),physical_1=__webpack_require__(6560),data_1=__webpack_require__(90485);class EquipmentPF2e extends physical_1.PhysicalItemPF2e{static get schema(){return data_1.EquipmentData}getChatData(htmlOptions={}){const data=this.data.data,traits=this.traitChatData(CONFIG.PF2E.equipmentTraits),properties=[data.equipped.value?game.i18n.localize("PF2E.EquipmentEquippedLabel"):null].filter((p=>p));return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{properties,traits}))}generateUnidentifiedName({typeOnly=!1}={typeOnly:!1}){var _a,_b,_c,_d;const translations=localize_1.LocalizePF2e.translations.PF2E.identification,slotType=/book\b/.test(null!==(_a=this.slug)&&void 0!==_a?_a:"")?"Book":/\bring\b/.test(null!==(_b=this.slug)&&void 0!==_b?_b:"")?"Ring":null!==(_d=null===(_c=this.data.data.usage.value)||void 0===_c?void 0:_c.replace(/^worn/,"").capitalize())&&void 0!==_d?_d:"",itemType=(0,_util_1.objectHasKey)(translations.UnidentifiedType,slotType)?translations.UnidentifiedType[slotType]:translations.UnidentifiedType.Object;if(typeOnly)return itemType;const formatString=translations.UnidentifiedItem;return game.i18n.format(formatString,{item:itemType})}}exports.EquipmentPF2e=EquipmentPF2e},98937:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FeatData=void 0;const non_physical_1=__webpack_require__(67561);class FeatData extends non_physical_1.BaseNonPhysicalItemData{}exports.FeatData=FeatData,FeatData.DEFAULT_ICON="systems/pf2e/icons/default-icons/feat.svg"},28960:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FeatPF2e=void 0;const index_1=__webpack_require__(10843),data_1=__webpack_require__(98937);class FeatPF2e extends index_1.ItemPF2e{static get schema(){return data_1.FeatData}get featType(){return{value:this.data.data.featType.value,label:game.i18n.localize(CONFIG.PF2E.featTypes[this.data.data.featType.value])}}get level(){return this.data.data.level.value}get traits(){return new Set(this.data.data.traits.value)}get actionCost(){const actionType=this.data.data.actionType.value||"passive";return"passive"===actionType?null:{type:actionType,value:this.data.data.actions.value}}getChatData(htmlOptions={}){const data=this.data.data,properties=[`Level ${data.level.value||0}`,data.actionType.value?CONFIG.PF2E.actionTypes[data.actionType.value]:null].filter((p=>p)),traits=this.traitChatData(CONFIG.PF2E.featTraits);return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{properties,traits}))}async _preUpdate(data,options,user){var _a;const actionCount=null===(_a=data.data)||void 0===_a?void 0:_a.actions;actionCount&&(actionCount.value=Math.clamped(Number(actionCount.value),0,3)||null),await super._preUpdate(data,options,user)}}exports.FeatPF2e=FeatPF2e},44225:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FeatSheetPF2e=void 0;const base_1=__webpack_require__(22222);class FeatSheetPF2e extends base_1.ItemSheetPF2e{async getData(){var _a,_b;const data=await super.getData(),isFeature=["ancestryfeature","classfeature"].includes(this.item.featType.value);return Object.assign(Object.assign({},data),{itemType:game.i18n.localize(isFeature?"PF2E.LevelLabel":"ITEM.TypeFeat"),featTypes:CONFIG.PF2E.featTypes,actionTypes:CONFIG.PF2E.actionTypes,actionsNumber:CONFIG.PF2E.actionsNumber,categories:CONFIG.PF2E.actionCategories,damageTypes:Object.assign(Object.assign({},CONFIG.PF2E.damageTypes),CONFIG.PF2E.healingTypes),prerequisites:JSON.stringify(null!==(_b=null===(_a=this.item.data.data.prerequisites)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:[]),rarities:this.prepareOptions(CONFIG.PF2E.rarityTraits,{value:[data.data.traits.rarity.value]}),traits:this.prepareOptions(CONFIG.PF2E.featTraits,data.data.traits)})}}exports.FeatSheetPF2e=FeatSheetPF2e},79206:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getUnidentifiedPlaceholderImage=exports.identifyItem=exports.isMagical=exports.GenericIdentifyDCs=exports.IdentifyAlchemyDCs=exports.IdentifyMagicDCs=void 0;const dc_1=__webpack_require__(84372),values_1=__webpack_require__(28479),magicTraditions=new Set(values_1.MAGIC_TRADITIONS);function getTraits(itemData){return new Set(itemData.data.traits.value)}function getDcRarity(itemData){var _a,_b;return function(itemData){return getTraits(itemData).has("cursed")}(itemData)?"unique":null!==(_b=null===(_a=itemData.data.traits.rarity)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"common"}class IdentifyMagicDCs{constructor(arc,nat,rel,occ){this.arc=arc,this.nat=nat,this.rel=rel,this.occ=occ}}exports.IdentifyMagicDCs=IdentifyMagicDCs;class IdentifyAlchemyDCs{constructor(cra){this.cra=cra}}exports.IdentifyAlchemyDCs=IdentifyAlchemyDCs;class GenericIdentifyDCs{constructor(dc){this.dc=dc}}function identifyMagic(itemData,baseDc,notMatchingTraditionModifier){const result={occult:baseDc,primal:baseDc,divine:baseDc,arcane:baseDc},traditions=function(itemData){const traits=getTraits(itemData);return new Set([...traits].filter((trait=>magicTraditions.has(trait))))}(itemData);for(const key of values_1.MAGIC_TRADITIONS)traditions.size>0&&!traditions.has(key)&&(result[key]=baseDc+notMatchingTraditionModifier);return new IdentifyMagicDCs(result.arcane,result.primal,result.divine,result.occult)}exports.GenericIdentifyDCs=GenericIdentifyDCs,exports.isMagical=function(itemData){const traits=getTraits(itemData);return traits.has("magical")||function(itemData){return"weapon"===itemData.type?!(!itemData.data.potencyRune.value&&!itemData.data.strikingRune.value):"armor"===itemData.type&&!(!itemData.data.potencyRune.value&&!itemData.data.resiliencyRune.value)}(itemData)||Array.from(magicTraditions).some((trait=>traits.has(trait)))},exports.identifyItem=function(item,{proficiencyWithoutLevel=!1,notMatchingTraditionModifier}){const dc=(0,dc_1.calculateDC)(item.level,{proficiencyWithoutLevel}),rarity=getDcRarity(item.data),baseDc=(0,dc_1.adjustDCByRarity)(dc,rarity);return item.isMagical?identifyMagic(item.data,baseDc,notMatchingTraditionModifier):item.isAlchemical?new IdentifyAlchemyDCs(baseDc):new GenericIdentifyDCs(baseDc)},exports.getUnidentifiedPlaceholderImage=function(itemData){const traits=getTraits(itemData);let iconName="adventuring_gear";switch(itemData.type){case"weapon":iconName=traits.has("bomb")?"alchemical_bomb":traits.has("staff")?"staves":traits.has("artifact")?"artifact":"weapon";break;case"armor":iconName="shield"===itemData.data.category?"shields":"armor";break;case"consumable":switch(itemData.data.consumableType.value){case"ammo":iconName="ammunition";break;case"oil":iconName="oils";break;case"scroll":iconName="infernal-contracts";break;case"talisman":iconName="talisman";break;case"elixir":case"mutagen":iconName="alchemical_elixir";break;case"poison":iconName="alchemical_poison";break;case"tool":iconName="alchemical_tool";break;case"wand":iconName="wands";break;case"potion":iconName="potions";break;case"snare":case"other":default:iconName=traits.has("drug")?"drugs":"other-consumables"}break;case"equipment":traits.has("precious")&&(iconName="material-chunk");break;default:iconName="adventuring_gear"}return`systems/pf2e/icons/unidentified_item_icons/${iconName}.webp`}},10843:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaponPF2e=exports.TreasurePF2e=exports.SpellcastingEntryPF2e=exports.SpellPF2e=exports.MeleePF2e=exports.MartialPF2e=exports.FormulaPF2e=exports.LorePF2e=exports.KitPF2e=exports.FeatPF2e=exports.EquipmentPF2e=exports.EffectPF2e=exports.DeityPF2e=exports.ContainerPF2e=exports.ConsumablePF2e=exports.ConditionPF2e=exports.ClassPF2e=exports.BookPF2e=exports.BackgroundPF2e=exports.ArmorPF2e=exports.AncestryPF2e=exports.ActionPF2e=exports.ABCItemPF2e=exports.PhysicalItemPF2e=exports.ItemPF2e=void 0;var base_1=__webpack_require__(24227);Object.defineProperty(exports,"ItemPF2e",{enumerable:!0,get:function(){return base_1.ItemPF2e}});var physical_1=__webpack_require__(6560);Object.defineProperty(exports,"PhysicalItemPF2e",{enumerable:!0,get:function(){return physical_1.PhysicalItemPF2e}});var abc_1=__webpack_require__(30301);Object.defineProperty(exports,"ABCItemPF2e",{enumerable:!0,get:function(){return abc_1.ABCItemPF2e}});var action_1=__webpack_require__(93390);Object.defineProperty(exports,"ActionPF2e",{enumerable:!0,get:function(){return action_1.ActionPF2e}});var ancestry_1=__webpack_require__(98713);Object.defineProperty(exports,"AncestryPF2e",{enumerable:!0,get:function(){return ancestry_1.AncestryPF2e}});var armor_1=__webpack_require__(83200);Object.defineProperty(exports,"ArmorPF2e",{enumerable:!0,get:function(){return armor_1.ArmorPF2e}});var background_1=__webpack_require__(70432);Object.defineProperty(exports,"BackgroundPF2e",{enumerable:!0,get:function(){return background_1.BackgroundPF2e}});var document_1=__webpack_require__(92364);Object.defineProperty(exports,"BookPF2e",{enumerable:!0,get:function(){return document_1.BookPF2e}});var class_1=__webpack_require__(43565);Object.defineProperty(exports,"ClassPF2e",{enumerable:!0,get:function(){return class_1.ClassPF2e}});var condition_1=__webpack_require__(16730);Object.defineProperty(exports,"ConditionPF2e",{enumerable:!0,get:function(){return condition_1.ConditionPF2e}});var consumable_1=__webpack_require__(74145);Object.defineProperty(exports,"ConsumablePF2e",{enumerable:!0,get:function(){return consumable_1.ConsumablePF2e}});var container_1=__webpack_require__(55323);Object.defineProperty(exports,"ContainerPF2e",{enumerable:!0,get:function(){return container_1.ContainerPF2e}});var deity_1=__webpack_require__(52970);Object.defineProperty(exports,"DeityPF2e",{enumerable:!0,get:function(){return deity_1.DeityPF2e}});var effect_1=__webpack_require__(57785);Object.defineProperty(exports,"EffectPF2e",{enumerable:!0,get:function(){return effect_1.EffectPF2e}});var equipment_1=__webpack_require__(87533);Object.defineProperty(exports,"EquipmentPF2e",{enumerable:!0,get:function(){return equipment_1.EquipmentPF2e}});var feat_1=__webpack_require__(28960);Object.defineProperty(exports,"FeatPF2e",{enumerable:!0,get:function(){return feat_1.FeatPF2e}});var kit_1=__webpack_require__(32919);Object.defineProperty(exports,"KitPF2e",{enumerable:!0,get:function(){return kit_1.KitPF2e}});var lore_1=__webpack_require__(97343);Object.defineProperty(exports,"LorePF2e",{enumerable:!0,get:function(){return lore_1.LorePF2e}});var deprecated_1=__webpack_require__(88151);Object.defineProperty(exports,"FormulaPF2e",{enumerable:!0,get:function(){return deprecated_1.FormulaPF2e}}),Object.defineProperty(exports,"MartialPF2e",{enumerable:!0,get:function(){return deprecated_1.MartialPF2e}});var melee_1=__webpack_require__(17923);Object.defineProperty(exports,"MeleePF2e",{enumerable:!0,get:function(){return melee_1.MeleePF2e}});var spell_1=__webpack_require__(12114);Object.defineProperty(exports,"SpellPF2e",{enumerable:!0,get:function(){return spell_1.SpellPF2e}});var spellcasting_entry_1=__webpack_require__(70267);Object.defineProperty(exports,"SpellcastingEntryPF2e",{enumerable:!0,get:function(){return spellcasting_entry_1.SpellcastingEntryPF2e}});var treasure_1=__webpack_require__(14580);Object.defineProperty(exports,"TreasurePF2e",{enumerable:!0,get:function(){return treasure_1.TreasurePF2e}});var weapon_1=__webpack_require__(14299);Object.defineProperty(exports,"WeaponPF2e",{enumerable:!0,get:function(){return weapon_1.WeaponPF2e}})},89570:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.KitData=void 0;const non_physical_1=__webpack_require__(67561);class KitData extends non_physical_1.BaseNonPhysicalItemData{}exports.KitData=KitData,KitData.DEFAULT_ICON="systems/pf2e/icons/default-icons/kit.svg"},32919:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.KitPF2e=void 0;const index_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),data_1=__webpack_require__(89570);class KitPF2e extends index_1.ItemPF2e{static get schema(){return data_1.KitData}get entries(){return Object.values(this.data.data.items)}async dumpContents(actor,kitEntries,containerId=""){var _a;null!=kitEntries||(kitEntries=this.entries);const equipmentPack=await(null===(_a=game.packs.get("pf2e.equipment-srd"))||void 0===_a?void 0:_a.getDocuments());if(!equipmentPack)throw(0,_util_1.ErrorPF2e)("Failed to acquire system equipment compendium");const promises=kitEntries.map((async kitEntry=>{var _a;const inflatedItem=await(async()=>{var _a;return"pf2e.equipment-srd"===kitEntry.pack?equipmentPack.find((item=>item.id===kitEntry.id)):kitEntry.pack?null===(_a=game.packs.get(kitEntry.pack))||void 0===_a?void 0:_a.getDocument(kitEntry.id):game.items.get(kitEntry.id)})();if(inflatedItem instanceof KitPF2e)return await inflatedItem.dumpContents(actor),null;if(!(inflatedItem instanceof index_1.PhysicalItemPF2e))throw(0,_util_1.ErrorPF2e)(`${null!==(_a=kitEntry.pack)&&void 0!==_a?_a:"World item"} ${kitEntry.name}} (${kitEntry.id}) not found`);const clonedItem=inflatedItem.clone();if(clonedItem.data.update({"data.quantity.value":kitEntry.quantity,"data.containerId.value":containerId}),clonedItem instanceof index_1.ContainerPF2e&&kitEntry.items){const container=await index_1.ContainerPF2e.create(clonedItem.toObject(),{parent:actor});return container&&await this.dumpContents(actor,Object.values(kitEntry.items),container.id),null}return clonedItem})),createData=(await Promise.all(promises)).flat().filter((item=>item instanceof index_1.PhysicalItemPF2e)).map((item=>item.toObject()));createData.length>0&&await actor.createEmbeddedDocuments("Item",createData)}}exports.KitPF2e=KitPF2e},81714:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.KitSheetPF2e=void 0;const kit_1=__webpack_require__(32919),physical_1=__webpack_require__(6560),base_1=__webpack_require__(22222);class KitSheetPF2e extends base_1.ItemSheetPF2e{static get defaultOptions(){return Object.assign(Object.assign({},super.defaultOptions),{scrollY:[".item-details"],dragDrop:[{dropSelector:".item-details"}]})}async getData(){const data=super.getBaseData(),traits=this.prepareOptions(CONFIG.PF2E.classTraits,data.data.traits,{selectedOnly:!0});return Object.assign(Object.assign({},data),{type:"kit",hasSidebar:!0,sidebarTemplate:()=>"systems/pf2e/templates/items/kit-sidebar.html",hasDetails:!0,detailsTemplate:()=>"systems/pf2e/templates/items/kit-details.html",rarity:CONFIG.PF2E.rarityTraits,traits})}async _onDrop(event){var _a,_b,_c,_d,_e;event.preventDefault();const dropTarget=$(event.target),dragData=null===(_a=event.dataTransfer)||void 0===_a?void 0:_a.getData("text/plain"),dragItem=JSON.parse(null!=dragData?dragData:""),containerId=null!==(_b=dropTarget.data("containerId"))&&void 0!==_b?_b:dropTarget.parents("[data-container-id]").data("containerId");if("Item"!==dragItem.type)return;const item=dragItem.pack?await(null===(_c=game.packs.get(dragItem.pack))||void 0===_c?void 0:_c.getDocument(dragItem.id)):game.items.get(dragItem.id);if(!(item instanceof physical_1.PhysicalItemPF2e||item instanceof kit_1.KitPF2e))return;const entry={pack:dragItem.pack,id:dragItem.id,img:item.data.img,quantity:1,name:item.name,isContainer:"backpack"===item.data.type&&!containerId,items:{}};let id,{items}=this.item.data.data,pathPrefix="data.items";void 0!==containerId&&(pathPrefix=`${pathPrefix}.${containerId}.items`,items=null!==(_e=null===(_d=items[containerId])||void 0===_d?void 0:_d.items)&&void 0!==_e?_e:{});do{id=randomID(5)}while(items[id]);await this.item.update({[`${pathPrefix}.${id}`]:entry})}removeItem(event){event.preventDefault();const target=$(event.target).parents("li"),containerId=target.parents("[data-container-id]").data("containerId");let path=`-=${target.data("index")}`;containerId&&(path=`${containerId}.items.${path}`),this.item.update({[`data.items.${path}`]:null})}activateListeners(html){super.activateListeners(html),html.on("click","[data-action=remove]",(event=>this.removeItem(event)))}}exports.KitSheetPF2e=KitSheetPF2e},23716:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LoreData=void 0;const non_physical_1=__webpack_require__(67561);class LoreData extends non_physical_1.BaseNonPhysicalItemData{}exports.LoreData=LoreData,LoreData.DEFAULT_ICON="systems/pf2e/icons/default-icons/lore.svg"},97343:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LorePF2e=void 0;const base_1=__webpack_require__(24227),data_1=__webpack_require__(23716);class LorePF2e extends base_1.ItemPF2e{static get schema(){return data_1.LoreData}}exports.LorePF2e=LorePF2e},70372:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MeleeData=void 0;const non_physical_1=__webpack_require__(67561);class MeleeData extends non_physical_1.BaseNonPhysicalItemData{}exports.MeleeData=MeleeData,MeleeData.DEFAULT_ICON="systems/pf2e/icons/default-icons/melee.svg"},17923:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MeleePF2e=void 0;const base_1=__webpack_require__(24227),data_1=__webpack_require__(70372);class MeleePF2e extends base_1.ItemPF2e{static get schema(){return data_1.MeleeData}get traits(){return new Set(this.data.data.traits.value)}getChatData(htmlOptions={}){const data=this.data.data,traits=this.traitChatData(CONFIG.PF2E.weaponTraits),isAgile=this.traits.has("agile"),map2=isAgile?"-4":"-5",map3=isAgile?"-8":"-10";return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{traits,map2,map3}))}}exports.MeleePF2e=MeleePF2e},47297:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.indexBulkItemsById=exports.fixWeight=exports.calculateCarriedArmorBulk=exports.itemsFromActorData=exports.toBulkItems=exports.toBulkItem=exports.normalizeWeight=exports.weightToBulk=exports.calculateBulk=exports.defaultBulkConfig=exports.BulkItem=exports.formatBulk=exports.convertBulkToSize=exports.Bulk=exports.stackDefinitions=void 0;const data_1=__webpack_require__(52769),_util_1=__webpack_require__(6945),helpers_1=__webpack_require__(44252);exports.stackDefinitions={bolts:{size:10,lightBulk:1},arrows:{size:10,lightBulk:1},slingBullets:{size:10,lightBulk:1},blowgunDarts:{size:10,lightBulk:1},woodenTaws:{size:10,lightBulk:1},rounds5:{size:5,lightBulk:1},rounds10:{size:10,lightBulk:1},rations:{size:7,lightBulk:1},sacks:{size:5,lightBulk:1},coins:{size:1e3,lightBulk:10},gems:{size:2e3,lightBulk:10}};class Bulk{constructor({normal=0,light=0}={}){this.normal=normal+Math.floor(light/10),this.light=light%10}get isNegligible(){return 0===this.normal&&0===this.light}get isLight(){return this.toLightBulk()<10&&!this.isNegligible}toLightBulk(){return 10*this.normal+this.light}plus(bulk){return new Bulk({normal:this.normal+bulk.normal,light:this.light+bulk.light})}minus(bulk){const[thisBulk,otherBulk]=this._toSingleNumber(bulk),result=thisBulk-otherBulk;return result<0?new Bulk:new Bulk({normal:Math.floor(result/10),light:result%10})}_toSingleNumber(bulk){return[10*this.normal+this.light,10*bulk.normal+bulk.light]}times(factor){const normal=this.normal*factor,lightCarryOver=normal<1&&normal>0?1:0,light=Math.floor(this.light*factor)+lightCarryOver;return new Bulk({normal:Math.floor(normal),light})}isSmallerThan(bulk){const[thisBulk,otherBulk]=this._toSingleNumber(bulk);return thisBulk<otherBulk}isBiggerThan(bulk){const[thisBulk,otherBulk]=this._toSingleNumber(bulk);return thisBulk>otherBulk}isEqualTo(bulk){return this.normal===bulk.normal&&this.light===bulk.light}isPositive(){return this.normal>0||this.light>0}toString(){return`normal: ${this.normal}; light: ${this.light}`}double(){return this.isNegligible?new Bulk({light:1}):this.isLight?this.times(10):this.times(2)}halve(){return this.isNegligible||this.isLight?new Bulk:1===this.normal?new Bulk({light:1}):this.times(.5)}}function convertBulkToSize(bulk,itemSize,actorSize){const sizes=data_1.SIZES.filter((size=>"sm"!==size)),itemSizeIndex=sizes.indexOf("sm"===itemSize?"med":itemSize),actorSizeIndex=sizes.indexOf("sm"===actorSize?"med":actorSize);return itemSizeIndex===actorSizeIndex?bulk:itemSizeIndex>actorSizeIndex?(0,_util_1.applyNTimes)((bulk=>bulk.double()),itemSizeIndex-actorSizeIndex,bulk):(0,_util_1.applyNTimes)((bulk=>bulk.halve()),actorSizeIndex-itemSizeIndex,bulk)}exports.Bulk=Bulk,exports.convertBulkToSize=convertBulkToSize,exports.formatBulk=function(bulk){return 0===bulk.normal&&0===bulk.light?"-":bulk.normal>0&&0===bulk.light?`${bulk.normal}`:1===bulk.light&&0===bulk.normal?"L":bulk.light>0&&0===bulk.normal?`${bulk.light}L`:`${bulk.normal}; ${bulk.light}L`};class BulkItem{constructor({id="",bulk=new Bulk,quantity=1,stackGroup,isEquipped=!1,unequippedBulk,equippedBulk,holdsItems=[],negateBulk=new Bulk,extraDimensionalContainer=!1,size="med"}={}){this.id=id,this.bulk=bulk,this.quantity=quantity,this.stackGroup=stackGroup,this.holdsItems=holdsItems,this.negateBulk=negateBulk,this.unequippedBulk=unequippedBulk,this.equippedBulk=equippedBulk,this.isEquipped=isEquipped,this.extraDimensionalContainer=extraDimensionalContainer,this.size=size}get reducesBulk(){return!this.negateBulk.isNegligible}}function combineBulkAndOverflow(first,second){const[firstBulk,firstOverflow]=first,[secondBulk,secondOverflow]=second;return[firstBulk.plus(secondBulk),(0,_util_1.combineObjects)(firstOverflow,secondOverflow,_util_1.add)]}function calculateStackBulk({itemStacks,bulkConfig=exports.defaultBulkConfig,actorSize,itemSize}){return Object.entries(itemStacks).filter((([stackType])=>!(bulkConfig.ignoreCoinBulk&&"coins"===stackType))).map((([stackType,quantity])=>{stackType in exports.stackDefinitions||(console.warn(`No stack definition found for stack ${stackType}`),stackType="arrows");const{size,lightBulk}=exports.stackDefinitions[stackType],bulkRelevantQuantity=Math.floor(quantity/size);return[bulkRelevantQuantity>0?convertBulkToSize(new Bulk({light:bulkRelevantQuantity*lightBulk}),itemSize,actorSize):new Bulk,{[stackType]:quantity%size}]})).reduce(combineBulkAndOverflow,[new Bulk,{}])}function reduceNestedItemBulk(bulk,item,nestedExtraDimensionalContainer){return function(item,nestedExtraDimensionalContainer){return item.extraDimensionalContainer&&!nestedExtraDimensionalContainer||item.reducesBulk&&item.isEquipped}(item,nestedExtraDimensionalContainer)?bulk.minus(item.negateBulk):bulk}function calculateCombinedBulk({item,nestedExtraDimensionalContainer=!1,bulkConfig=exports.defaultBulkConfig,actorSize}){const[mainBulk,mainOverflow]=function({item,bulkConfig,actorSize}){if(""===item.id)return[new Bulk,{}];const stackName=item.stackGroup;if((0,_util_1.isBlank)(stackName))return[convertBulkToSize(function(item){return void 0===item.unequippedBulk||null===item.unequippedBulk||item.isEquipped?void 0!==item.equippedBulk&&null!==item.equippedBulk&&item.isEquipped?item.equippedBulk:item.bulk:item.unequippedBulk}(item),item.size,actorSize).times(item.quantity),{}];return calculateStackBulk({itemStacks:{[stackName]:item.quantity},bulkConfig,itemSize:item.size,actorSize})}({item,bulkConfig,actorSize}),[childBulk,childOverflow]=item.holdsItems.map((child=>calculateCombinedBulk({item:child,nestedExtraDimensionalContainer:item.extraDimensionalContainer,bulkConfig,actorSize}))).reduce(combineBulkAndOverflow,[new Bulk,{}]),combinedOverflow=(0,_util_1.combineObjects)(mainOverflow,function(overflow,item){return item.extraDimensionalContainer?{}:overflow}(childOverflow,item),_util_1.add),[overflowBulk,remainingOverflow]=calculateStackBulk({itemStacks:combinedOverflow,bulkConfig,actorSize,itemSize:item.size});return[mainBulk.plus(reduceNestedItemBulk(childBulk,item,nestedExtraDimensionalContainer)).plus(overflowBulk),remainingOverflow]}exports.BulkItem=BulkItem,exports.defaultBulkConfig={ignoreCoinBulk:!1},exports.calculateBulk=function({items=[],nestedExtraDimensionalContainer=!1,actorSize="med",bulkConfig=exports.defaultBulkConfig}={}){return calculateCombinedBulk({item:new BulkItem({holdsItems:items}),nestedExtraDimensionalContainer,bulkConfig,actorSize})};const lightBulkRegex=/^(\d*)l$/i,complexBulkRegex=/^(\d+);\s*(\d*)l$/i;function weightToBulk(weight){if(null==weight)return;const trimmed=weight.trim();if(/^\d+$/.test(trimmed))return new Bulk({normal:parseInt(trimmed,10)});const lightMatch=trimmed.match(lightBulkRegex);if(lightMatch)return new Bulk({light:parseInt(lightMatch[1]||"1",10)});const complexMatch=trimmed.match(complexBulkRegex);if(complexMatch){const[,normal,light]=complexMatch;return new Bulk({normal:parseInt(normal,10),light:parseInt(light||"1",10)})}}function normalizeWeight(weight){if(null==weight)return;return`${weight}`.toLowerCase().trim()}function toBulkItem(item,nestedItems=[]){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s;const id=item._id,weight=null===(_b=null===(_a=item.data)||void 0===_a?void 0:_a.weight)||void 0===_b?void 0:_b.value,quantity=null!==(_e=null===(_d=null===(_c=item.data)||void 0===_c?void 0:_c.quantity)||void 0===_d?void 0:_d.value)&&void 0!==_e?_e:0,isEquipped=null!==(_h=null===(_g=null===(_f=item.data)||void 0===_f?void 0:_f.equipped)||void 0===_g?void 0:_g.value)&&void 0!==_h&&_h,equippedBulk=null===(_k=null===(_j=item.data)||void 0===_j?void 0:_j.equippedBulk)||void 0===_k?void 0:_k.value,unequippedBulk=null===(_m=null===(_l=item.data)||void 0===_l?void 0:_l.unequippedBulk)||void 0===_m?void 0:_m.value,stackGroup=null===(_p=null===(_o=item.data)||void 0===_o?void 0:_o.stackGroup)||void 0===_p?void 0:_p.value,negateBulk=null===(_q=item.data.negateBulk)||void 0===_q?void 0:_q.value,extraDimensionalContainer=item.data.traits.value.includes("extradimensional"),size=item.data.size.value||"med";return new BulkItem({id,bulk:null!==(_r=weightToBulk(normalizeWeight(weight)))&&void 0!==_r?_r:new Bulk,negateBulk:null!==(_s=weightToBulk(normalizeWeight(negateBulk)))&&void 0!==_s?_s:new Bulk,unequippedBulk:weightToBulk(normalizeWeight(unequippedBulk)),equippedBulk:weightToBulk(normalizeWeight(equippedBulk)),holdsItems:nestedItems,stackGroup,isEquipped,quantity,extraDimensionalContainer,size})}function buildContainerTree(items,groupedItems){return items.map((item=>{const containedItems=groupedItems.get(item._id);if(containedItems){return toBulkItem(item,buildContainerTree(containedItems,groupedItems))}return toBulkItem(item)}))}function toBulkItems(items){const allIds=new Set(items.map((item=>item._id))),itemsInContainers=(0,_util_1.groupBy)(items,(item=>{var _a,_b,_c;const ref=null!==(_c=null===(_b=null===(_a=item.data)||void 0===_a?void 0:_a.containerId)||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:null;return null!==ref&&allIds.has(ref)?ref:null})),topLevelItems=itemsInContainers.get(null);return topLevelItems?buildContainerTree(topLevelItems,itemsInContainers):[]}function fillBulkIndex(bulkItem,resultMap){resultMap.set(bulkItem.id,bulkItem),bulkItem.holdsItems.forEach((heldBulkItem=>fillBulkIndex(heldBulkItem,resultMap)))}exports.weightToBulk=weightToBulk,exports.normalizeWeight=normalizeWeight,exports.toBulkItem=toBulkItem,exports.toBulkItems=toBulkItems,exports.itemsFromActorData=function(actorData){return toBulkItems(actorData.items.filter((itemData=>(0,helpers_1.isPhysicalData)(itemData))))},exports.calculateCarriedArmorBulk=function(wornBulk){var _a;const bulk=null!==(_a=weightToBulk(normalizeWeight(wornBulk)))&&void 0!==_a?_a:new Bulk;return 1===bulk.light?"1":bulk.normal>0?`${bulk.normal+1}`:"-"},exports.fixWeight=function(brokenWeight){var _a;const bulk=null!==(_a=weightToBulk(normalizeWeight(brokenWeight)))&&void 0!==_a?_a:new Bulk;return 1===bulk.light?"l":bulk.normal>0?`${bulk.normal}`:null},exports.indexBulkItemsById=function(bulkItems=[]){const result=new Map;return bulkItems.forEach((bulkItem=>fillBulkIndex(bulkItem,result))),result}},10530:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BasePhysicalItemData=void 0;const base_1=__webpack_require__(66193);class BasePhysicalItemData extends base_1.BaseItemDataPF2e{constructor(){super(...arguments),this.isPhysical=!0}}exports.BasePhysicalItemData=BasePhysicalItemData},39057:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateEncumbrance=exports.InventoryWeight=void 0;class InventoryWeight{constructor(combinedBulk,encumberedAt,limit){this.combinedBulk=combinedBulk,this.encumberedAt=encumberedAt,this.limit=limit}get encumberedPercentage(){const totalTimes10=this.combinedBulk.toLightBulk(),encumberedAtTimes10=10*this.encumberedAt+10;return Math.floor(totalTimes10/encumberedAtTimes10*100)}get limitPercentage(){const totalTimes10=this.combinedBulk.toLightBulk(),limitTimes10=10*this.limit+10;return Math.floor(totalTimes10/limitTimes10*100)}get limitPercentageMax100(){return this.limitPercentage>100?100:this.limitPercentage}get isEncumbered(){return this.combinedBulk.normal>this.encumberedAt}get isOverLimit(){return this.combinedBulk.normal>this.limit}get bulk(){return this.combinedBulk.normal}}exports.InventoryWeight=InventoryWeight,exports.calculateEncumbrance=function(strengthModifier,bonusBulkEncumbrance,bonusBulkLimit,combinedBulk,_actorSize="med"){const encumberedAt=Math.floor(strengthModifier+bonusBulkEncumbrance+5),limit=Math.floor(strengthModifier+bonusBulkLimit+10);return new InventoryWeight(combinedBulk,encumberedAt,limit)}},6560:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PhysicalItemPF2e=void 0;const _item_1=__webpack_require__(10843),localize_1=__webpack_require__(41332),_actor_1=__webpack_require__(85530),values_1=__webpack_require__(67189),identification_1=__webpack_require__(79206),helpers_1=__webpack_require__(71046);class PhysicalItemPF2e extends _item_1.ItemPF2e{constructor(){super(...arguments),this._container=null}get level(){return this.data.data.level.value}get rarity(){return this.data.data.traits.rarity.value}get traits(){return new Set(this.data.data.traits.value)}get quantity(){var _a;return null!==(_a=this.data.data.quantity.value)&&void 0!==_a?_a:1}get size(){return this.data.data.size.value}get isEquipped(){return this.data.isEquipped}get price(){return this.data.data.price.value}get identificationStatus(){return this.data.data.identification.status}get isIdentified(){return this.data.isIdentified}get isAlchemical(){return this.data.isAlchemical}get isMagical(){const traits=this.traits;return["magical","arcane","primal","divine","occult"].some((trait=>traits.has(trait)))}get isInvested(){var _a;return this.traits.has("invested")?this.data.isEquipped&&this.data.isIdentified&&!0===(null===(_a=this.data.data.invested)||void 0===_a?void 0:_a.value):null}get isCursed(){return this.data.isCursed}get isTemporary(){var _a;return!0===(null===(_a=this.data.data.temporary)||void 0===_a?void 0:_a.value)}get material(){const systemData=this.data.data;return systemData.preciousMaterial.value&&systemData.preciousMaterialGrade.value?{type:systemData.preciousMaterial.value,grade:systemData.preciousMaterialGrade.value}:null}get isInContainer(){return!!this.container}get container(){var _a,_b,_c;if(null===this.data.data.containerId.value)return this._container=null;const container=null!==(_a=this._container)&&void 0!==_a?_a:null===(_b=this.actor)||void 0===_b?void 0:_b.items.get(null!==(_c=this.data.data.containerId.value)&&void 0!==_c?_c:"");return"backpack"===(null==container?void 0:container.type)&&(this._container=container),this._container}get activations(){var _a;return Object.values(null!==(_a=this.data.data.activations)&&void 0!==_a?_a:{}).map((action=>{const components=[];return action.components.cast&&components.push(game.i18n.localize("PF2E.Item.Activation.Cast")),action.components.command&&components.push(game.i18n.localize("PF2E.Item.Activation.Command")),action.components.envision&&components.push(game.i18n.localize("PF2E.Item.Activation.Envision")),action.components.interact&&components.push(game.i18n.localize("PF2E.Item.Activation.Interact")),Object.assign({componentsLabel:components.join(", ")},action)}))}getItemRollOptions(prefix=""){var _a;return[...this.traits].map((trait=>`trait:${trait}`)).concat(Object.entries({equipped:this.isEquipped,magical:this.isMagical,uninvested:!1===this.isInvested,[`material:${null===(_a=this.material)||void 0===_a?void 0:_a.type}`]:!!this.material}).filter((([_key,isTrue])=>isTrue)).map((([key])=>key))).map((string=>`${prefix?`${prefix}:`:""}${string}`))}prepareBaseData(){var _a,_b,_c,_d;super.prepareBaseData();const systemData=this.data.data;(_b=systemData.preciousMaterial).value||(_b.value=null),(_c=systemData.preciousMaterialGrade).value||(_c.value=null),(_d=systemData.containerId).value||(_d.value=null),systemData.price.value=(0,helpers_1.coinsToString)((0,helpers_1.extractPriceFromItem)(this.data,1)),this.data.isEquipped=systemData.equipped.value,this.data.isIdentified="identified"===systemData.identification.status;const traits=this.traits;this.data.isAlchemical=traits.has("alchemical"),this.data.isCursed=traits.has("cursed"),this.data.isMagical=this.isMagical,this.data.isInvested=this.isInvested,this.data.isTemporary=this.isTemporary,this.isTemporary&&(systemData.price.value="0 gp"),(null===(_a=this._container)||void 0===_a?void 0:_a.id)!==this.data.data.containerId.value&&(this._container=null),this.actor instanceof _actor_1.LootPF2e&&(this.data.data.equipped.value=!1)}prepareDerivedData(){super.prepareDerivedData(),this.data.isMagical=this.isMagical,this.data.isInvested=this.isInvested;const systemData=this.data.data;systemData.identification.identified={name:this.name,img:this.img,data:{description:{value:this.description}}};const mystifiedData=this.getMystifiedData(this.identificationStatus);mergeObject(this.data,mystifiedData,{insertKeys:!1,insertValues:!1}),systemData.identification.unidentified=this.getMystifiedData("unidentified")}isStackableWith(item){if(this.type!==item.type||this.name!==item.name||this.isIdentified!==item.isIdentified)return!1;const thisData=this.toObject().data,otherData=item.toObject().data;return thisData.quantity.value=otherData.quantity.value,thisData.equipped.value=otherData.equipped.value,thisData.containerId.value=otherData.containerId.value,thisData.schema=otherData.schema,thisData.identification=otherData.identification,JSON.stringify(thisData)===JSON.stringify(otherData)}getMystifiedData(status,_options){const mystifiedData=this.data.data.identification[status];return{name:mystifiedData.name||this.generateUnidentifiedName(),img:mystifiedData.img||(0,identification_1.getUnidentifiedPlaceholderImage)(this.data),data:{description:{value:mystifiedData.data.description.value||(()=>{if("identified"===status)return this.description;const formatString=localize_1.LocalizePF2e.translations.PF2E.identification.UnidentifiedDescription,itemType=this.generateUnidentifiedName({typeOnly:!0});return game.i18n.format(formatString,{item:(noun=itemType,"de"===game.i18n.lang.toLowerCase()?noun:noun.toLowerCase())});var noun})()}}}}getChatData(){const material=this.material?game.i18n.format("PF2E.Item.Weapon.MaterialAndRunes.MaterialOption",{type:game.i18n.localize(CONFIG.PF2E.preciousMaterials[this.material.type]),grade:game.i18n.localize(CONFIG.PF2E.preciousMaterialGrades[this.material.grade])}):null;return{rarity:{name:this.rarity,label:CONFIG.PF2E.rarityTraits[this.rarity],description:CONFIG.PF2E.traitsDescriptions[this.rarity]},description:{value:this.description},material}}async setIdentificationStatus(status){this.identificationStatus!==status&&await this.update({"data.identification.status":status,"data.identification.unidentified":this.getMystifiedData("unidentified")})}generateUnidentifiedName({typeOnly=!1}={typeOnly:!1}){const itemType=game.i18n.localize(`ITEM.Type${this.data.type.capitalize()}`);if(typeOnly)return itemType;const formatString=localize_1.LocalizePF2e.translations.PF2E.identification.UnidentifiedItem;return game.i18n.format(formatString,{item:itemType})}traitChatData(dictionary){const traitData=super.traitChatData(dictionary);for(const trait of traitData)if(trait.mystified=!this.isIdentified&&values_1.MystifiedTraits.has(trait.value),trait.excluded=trait.mystified&&!game.user.isGM,trait.excluded)delete trait.description;else if(trait.mystified){const gmNote=localize_1.LocalizePF2e.translations.PF2E.identification.TraitGMNote;trait.description=trait.description?`${gmNote}\n\n${game.i18n.localize(trait.description)}`:gmNote}return traitData}async _preCreate(data,options,user){await super._preCreate(data,options,user),this.isEmbedded&&this.data.update({"data.equipped.value":!1})}}exports.PhysicalItemPF2e=PhysicalItemPF2e},13416:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MATERIAL_VALUATION_DATA=void 0,exports.MATERIAL_VALUATION_DATA={"":{low:null,standard:null,high:null},adamantine:{low:null,standard:{level:11,price:1400,rarity:"uncommon"},high:{level:17,price:13500,rarity:"uncommon"}},coldIron:{low:{level:2,price:40,rarity:"common"},standard:{level:10,price:880,rarity:"common"},high:{level:16,price:9e3,rarity:"common"}},darkwood:{low:null,standard:{level:11,price:1400,rarity:"uncommon"},high:{level:17,price:13500,rarity:"uncommon"}},dragonhide:{low:null,standard:{level:12,price:1600,rarity:"uncommon"},high:{level:17,price:32e3,rarity:"uncommon"}},mithral:{low:null,standard:{level:11,price:1400,rarity:"uncommon"},high:{level:17,price:13500,rarity:"uncommon"}},orichalcum:{low:null,standard:null,high:{level:18,price:22500,rarity:"rare"}},silver:{low:{level:2,price:40,rarity:"common"},standard:{level:10,price:880,rarity:"common"},high:{level:16,price:9e3,rarity:"common"}},sovereignSteel:{low:null,standard:{level:12,price:1600,rarity:"rare"},high:{level:19,price:32e3,rarity:"rare"}},warpglass:{low:null,standard:null,high:{level:17,price:14e3,rarity:"rare"}}}},38719:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PhysicalItemSheetPF2e=void 0;const base_1=__webpack_require__(22222);class PhysicalItemSheetPF2e extends base_1.ItemSheetPF2e{async getData(){const sheetData=await super.getData(),identifiedData=this.item.getMystifiedData("identified",{source:!0});return mergeObject(sheetData.item,identifiedData,{insertKeys:!1,insertValues:!1}),Object.assign(Object.assign({},sheetData),{itemType:game.i18n.localize("PF2E.ItemTitle"),actionTypes:CONFIG.PF2E.actionTypes,actionsNumber:CONFIG.PF2E.actionsNumber,frequencies:CONFIG.PF2E.frequencies,activations:this.item.activations.map((action=>{var _a;return{action,id:action.id,base:`data.activations.${action.id}`,traits:this.prepareOptions(CONFIG.PF2E.actionTraits,null!==(_a=action.traits)&&void 0!==_a?_a:{value:[]},{selectedOnly:!0})}}))})}activateListeners($html){super.activateListeners($html),$html.find("input[data-property]").on("focus",(event=>{var _a;const $input=$(event.target),propertyPath=null!==(_a=$input.attr("data-property"))&&void 0!==_a?_a:"",baseValue=getProperty(this.item.data._source,propertyPath);$input.val(baseValue).attr({name:propertyPath})})),$html.find("input[data-property]").on("blur",(event=>{var _a;const $input=$(event.target);$input.removeAttr("name").removeAttr("style").attr({type:"text"});const propertyPath=null!==(_a=$input.attr("data-property"))&&void 0!==_a?_a:"",preparedValue=getProperty(this.item.data,propertyPath);$input.val(preparedValue)})),$html.find("[data-action=activation-add]").on("click",(event=>{event.preventDefault();const id=randomID(16),action={id,actionCost:{value:1,type:"action"},components:{command:!1,envision:!1,interact:!1,cast:!1},description:{value:""},frequency:{value:0,max:0,duration:null},traits:{value:[],custom:""}};this.item.update({[`data.activations.${id}`]:action})})),$html.find("[data-action=activation-delete]").on("click",(event=>{var _a,_b,_c;event.preventDefault();const id=null!==(_a=$(event.target).closest("[data-action=activation-delete]").attr("data-action-id"))&&void 0!==_a?_a:"";1===Object.values(null!==(_b=this.item.data.data.activations)&&void 0!==_b?_b:[]).length&&id in(null!==(_c=this.item.data.data.activations)&&void 0!==_c?_c:{})?this.item.update({"data.-=activations":null}):this.item.update({[`data.activations.-=${id}`]:null})}))}async _updateObject(event,formData){var _a,_b,_c;const propertyPaths=["data.baseItem","data.preciousMaterial.value","data.preciousMaterialGrade.value","data.group","data.group.value"];for(const path of propertyPaths)""===formData[path]&&(formData[path]=null);const expanded=expandObject(formData);for(const action of Object.values(null!==(_b=null===(_a=expanded.data)||void 0===_a?void 0:_a.activations)&&void 0!==_b?_b:[])){const actionCost=action.actionCost;if(actionCost){const isAction="action"===actionCost.type;actionCost.value||(actionCost.value=isAction?actionCost.value||1:null)}action.frequency&&!(null===(_c=action.frequency)||void 0===_c?void 0:_c.duration)&&(action.frequency.duration=null)}super._updateObject(event,flattenObject(expanded))}}exports.PhysicalItemSheetPF2e=PhysicalItemSheetPF2e},35847:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WEAPON_VALUATION_DATA=exports.hasGhostTouchRune=exports.getPropertyRuneModifiers=exports.WEAPON_PROPERTY_RUNES=exports.getResiliencyBonus=exports.getStrikingDice=exports.getArmorBonus=exports.getAttackBonus=exports.getPropertyRunes=exports.getPropertySlots=void 0;const modifiers_1=__webpack_require__(27324),_util_1=__webpack_require__(6945);function getPropertySlots(itemData){var _a,_b;let slots=0;"orichalcum"===(null===(_a=itemData.data.preciousMaterial)||void 0===_a?void 0:_a.value)&&(slots+=1);let potencyRune=null===(_b=itemData.data.potencyRune)||void 0===_b?void 0:_b.value;return"noABP"!==game.settings.get("pf2e","automaticBonusVariant")&&(potencyRune=0,slots+=getPropertyRunes(itemData,4).length,slots+=1),potencyRune&&(slots+=potencyRune),slots}function getPropertyRunes(itemData,slots){var _a;const runes=[];for(let i=1;i<=slots;i+=1){const rune=null===(_a=itemData.data[`propertyRune${i}`])||void 0===_a?void 0:_a.value;(0,_util_1.isBlank)(rune)||runes.push(rune)}return runes}exports.getPropertySlots=getPropertySlots,exports.getPropertyRunes=getPropertyRunes,exports.getAttackBonus=function(itemData){var _a,_b,_c;return"bomb"===itemData.group?null!==(_b=(0,_util_1.toNumber)(null===(_a=null==itemData?void 0:itemData.bonus)||void 0===_a?void 0:_a.value))&&void 0!==_b?_b:0:null!==(_c=itemData.potencyRune.value)&&void 0!==_c?_c:0},exports.getArmorBonus=function(itemData){var _a;const potencyRune=itemData.potencyRune.value;return(null!==(_a=(0,_util_1.toNumber)(itemData.armor.value))&&void 0!==_a?_a:0)+potencyRune};const strikingRuneValues=new Map([["striking",1],["greaterStriking",2],["majorStriking",3]]);exports.getStrikingDice=function(itemData){var _a;return null!==(_a=strikingRuneValues.get(itemData.strikingRune.value))&&void 0!==_a?_a:0};const resilientRuneValues=new Map([["resilient",1],["greaterResilient",2],["majorResilient",3]]);exports.getResiliencyBonus=function(itemData){var _a;return null!==(_a=resilientRuneValues.get(itemData.resiliencyRune.value))&&void 0!==_a?_a:0},exports.WEAPON_PROPERTY_RUNES={anarchic:{damage:{dice:[{damageType:"chaotic",diceNumber:1,dieSize:"d6",predicate:{all:["target:trait:lawful"]}}],notes:[{outcome:["criticalSuccess"],predicate:{all:["target:trait:lawful"]},text:"PF2E.WeaponPropertyRune.anarchic.Note.criticalSuccess"}]},level:11,name:"PF2E.WeaponPropertyRuneAnarchic",price:1400,rarity:"common",slug:"anarchic",traits:["chaotic","evocation","magical"]},ancestralEchoing:{level:15,name:"PF2E.WeaponPropertyRuneAncestralEchoing",price:9500,rarity:"rare",slug:"ancestralEchoing",traits:["dwarf","evocation","magical","saggorak"]},anchoring:{damage:{notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.anchoring.Note.criticalSuccess"}]},level:10,name:"PF2E.WeaponPropertyRuneAnchoring",price:900,rarity:"uncommon",slug:"anchoring",traits:["abjuration","magical"]},axiomatic:{damage:{dice:[{damageType:"lawful",diceNumber:1,dieSize:"d6",predicate:{all:["target:trait:chaotic"]}}],notes:[{outcome:["criticalSuccess"],predicate:{all:["target:trait:chaotic"]},text:"PF2E.WeaponPropertyRune.axiomatic.Note.criticalSuccess"}]},level:11,name:"PF2E.WeaponPropertyRuneAxiomatic",price:1400,rarity:"common",slug:"axiomatic",traits:["evocation","lawful","magical"]},bane:{level:4,name:"PF2E.WeaponPropertyRuneBane",price:100,rarity:"uncommon",slug:"bane",traits:["divination","magical"]},bloodbane:{level:8,name:"PF2E.WeaponPropertyRuneBloodbane",price:475,rarity:"uncommon",slug:"bloodbane",traits:["dwarf","evocation","magical"]},bloodthirsty:{damage:{notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.bloodthirsty.Note.criticalSuccess"}]},level:16,name:"PF2E.WeaponPropertyRuneBloodthirsty",price:8500,rarity:"uncommon",slug:"bloodthirsty",traits:["magical","necromancy"]},brilliant:{damage:{dice:[{damageType:"fire",diceNumber:1,dieSize:"d4"},{damageType:"good",diceNumber:1,dieSize:"d4",predicate:{all:["target:trait:fiend"]}},{damageType:"positive",diceNumber:1,dieSize:"d4",predicate:{any:["target:trait:undead","target:negative-healing"]}}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.brilliant.Note.criticalSuccess"}]},level:12,name:"PF2E.WeaponPropertyRuneBrilliant",price:2e3,rarity:"common",slug:"brilliant",traits:["evocation","magical"]},conducting:{level:7,name:"PF2E.WeaponPropertyRuneConducting",price:300,rarity:"common",slug:"conducting",traits:["evocation","magical"]},corrosive:{damage:{dice:[{damageType:"acid",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.corrosive.Note.criticalSuccess"},{outcome:["success"],text:"PF2E.WeaponPropertyRune.corrosive.Note.success"}]},level:8,name:"PF2E.WeaponPropertyRuneCorrosive",price:500,rarity:"common",slug:"corrosive",traits:["acid","conjuration","magical"]},crushing:{damage:{notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.crushing.Note.criticalSuccess"}]},level:3,name:"PF2E.WeaponPropertyRuneCrushing",price:50,rarity:"uncommon",slug:"crushing",traits:["magical","necromancy"]},cunning:{level:5,name:"PF2E.WeaponPropertyRuneCunning",price:140,rarity:"common",slug:"cunning",traits:["divination","magical"]},dancing:{level:13,name:"PF2E.WeaponPropertyRuneDancing",price:2700,rarity:"uncommon",slug:"dancing",traits:["evocation","magical"]},disrupting:{damage:{dice:[{damageType:"positive",diceNumber:1,dieSize:"d6",predicate:{any:["target:trait:undead","target:negative-healing"]}}],notes:[{outcome:["criticalSuccess"],predicate:{any:["target:trait:undead","target:negative-healing"]},text:"PF2E.WeaponPropertyRune.disrupting.Note.criticalSuccess"}]},level:5,name:"PF2E.WeaponPropertyRuneDisrupting",price:150,rarity:"common",slug:"disrupting",traits:["magical","necromancy"]},energizing:{level:6,name:"PF2E.WeaponPropertyRuneEnergizing",price:250,rarity:"uncommon",slug:"energizing",traits:["abjuration","magical"]},extending:{level:7,name:"PF2E.WeaponPropertyRuneExtending",price:700,rarity:"common",slug:"extending",traits:["magical","transmutation"]},fanged:{level:2,name:"PF2E.WeaponPropertyRuneFanged",price:30,rarity:"uncommon",slug:"fanged",traits:["magical","transmutation"]},fearsome:{damage:{notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.fearsome.Note.criticalSuccess"}]},level:5,name:"PF2E.WeaponPropertyRuneFearsome",price:160,rarity:"common",slug:"fearsome",traits:["emotion","enchantment","fear","magical","mental"]},flaming:{damage:{dice:[{damageType:"fire",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.flaming.Note.criticalSuccess"}]},level:8,name:"PF2E.WeaponPropertyRuneFlaming",price:500,rarity:"common",slug:"flaming",traits:["conjuration","fire","magical"]},frost:{damage:{dice:[{damageType:"cold",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.frost.Note.criticalSuccess"}]},level:8,name:"PF2E.WeaponPropertyRuneFrost",price:500,rarity:"common",slug:"frost",traits:["cold","conjuration","magical"]},ghostTouch:{damage:{notes:[{predicate:{all:["target:trait:incorporeal"]},text:"PF2E.WeaponPropertyRune.ghostTouch.Note"}]},level:4,name:"PF2E.WeaponPropertyRuneGhostTouch",price:75,rarity:"common",slug:"ghostTouch",traits:["magical","transmutation"],otherTags:["ghost-touch"]},greaterAnchoring:{damage:{notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.greaterAnchoring.Note.criticalSuccess"},{outcome:["success"],text:"PF2E.WeaponPropertyRune.greaterAnchoring.Note.success"}]},level:18,name:"PF2E.WeaponPropertyRuneGreaterAnchoring",price:22e3,rarity:"uncommon",slug:"greaterAnchoring",traits:["abjuration","magical"]},greaterBloodbane:{level:13,name:"PF2E.WeaponPropertyRuneGreaterBloodbane",price:2800,rarity:"uncommon",slug:"greaterBloodbane",traits:["dwarf","evocation","magical"]},greaterBrilliant:{damage:{dice:[{damageType:"fire",diceNumber:1,dieSize:"d4"},{damageType:"good",diceNumber:1,dieSize:"d4",predicate:{all:["target:trait:fiend"]}},{damageType:"positive",diceNumber:1,dieSize:"d4",predicate:{any:["target:trait:undead","target:negative-healing"]}}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.greaterBrilliant.Note.criticalSuccess"},{outcome:["success"],text:"PF2E.WeaponPropertyRune.greaterBrilliant.Note.success"}]},level:18,name:"PF2E.WeaponPropertyRuneGreaterBrilliant",price:24e3,rarity:"common",slug:"greaterBrilliant",traits:["evocation","magical"]},greaterCorrosive:{damage:{dice:[{damageType:"acid",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.greaterCorrosive.Note.criticalSuccess"},{outcome:["success"],text:"PF2E.WeaponPropertyRune.greaterCorrosive.Note.success"}]},level:15,name:"PF2E.WeaponPropertyRuneGreaterCorrosive",price:6500,rarity:"common",slug:"greaterCorrosive",traits:["acid","conjuration","magical"]},greaterCrushing:{damage:{notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.greaterCrushing.Note.criticalSuccess"}]},level:9,name:"PF2E.WeaponPropertyRuneGreaterCrushing",price:650,rarity:"uncommon",slug:"greaterCrushing",traits:["magical","necromancy"]},greaterDisrupting:{damage:{dice:[{damageType:"positive",diceNumber:2,dieSize:"d6",predicate:{any:["target:trait:undead","target:negative-healing"]}}],notes:[{outcome:["criticalSuccess"],predicate:{any:["target:trait:undead","target:negative-healing"]},text:"PF2E.WeaponPropertyRune.greaterDisrupting.Note.criticalSuccess"}]},level:14,name:"PF2E.WeaponPropertyRuneGreaterDisrupting",price:4300,rarity:"uncommon",slug:"greaterDisrupting",traits:["magical","necromancy"]},greaterExtending:{level:13,name:"PF2E.WeaponPropertyRuneGreaterExtending",price:3e3,rarity:"common",slug:"greaterExtending",traits:["magical","transmutation"]},greaterFanged:{level:8,name:"PF2E.WeaponPropertyRuneGreaterFanged",price:425,rarity:"uncommon",slug:"greaterFanged",traits:["magical","transmutation"]},greaterFearsome:{damage:{notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.greaterFearsome.Note.criticalSuccess"}]},level:12,name:"PF2E.WeaponPropertyRuneGreaterFearsome",price:2e3,rarity:"common",slug:"greaterFearsome",traits:["emotion","enchantment","fear","magical","mental"]},greaterFlaming:{damage:{dice:[{damageType:"fire",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.greaterFlaming.Note.criticalSuccess"},{outcome:["success"],text:"PF2E.WeaponPropertyRune.greaterFlaming.Note.success"}]},level:15,name:"PF2E.WeaponPropertyRuneGreaterFlaming",price:6500,rarity:"common",slug:"greaterFlaming",traits:["conjuration","fire","magical"]},greaterFrost:{damage:{dice:[{damageType:"cold",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.greaterFrost.Note.criticalSuccess"},{outcome:["success"],text:"PF2E.WeaponPropertyRune.greaterFrost.Note.success"}]},level:15,name:"PF2E.WeaponPropertyRuneGreaterFrost",price:6500,rarity:"common",slug:"greaterFrost",traits:["cold","conjuration","magical"]},greaterHauling:{level:1,name:"PF2E.WeaponPropertyRuneGreaterHauling",price:1300,rarity:"uncommon",slug:"greaterHauling",traits:["evocation","magical"]},greaterImpactful:{damage:{dice:[{damageType:"force",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.greaterImpactful.Note.criticalSuccess"}]},level:17,name:"PF2E.WeaponPropertyRuneGreaterImpactful",price:15e3,rarity:"common",slug:"greaterImpactful",traits:["evocation","force","magical"]},greaterShock:{damage:{dice:[{damageType:"electricity",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.greaterShock.Note.criticalSuccess"},{outcome:["success"],text:"PF2E.WeaponPropertyRune.greaterShock.Note.success"}]},level:15,name:"PF2E.WeaponPropertyRuneGreaterShock",price:6500,rarity:"common",slug:"greaterShock",traits:["electricity","evocation","magical"]},greaterThundering:{damage:{dice:[{damageType:"sonic",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.greaterThundering.Note.criticalSuccess"},{outcome:["success"],text:"PF2E.WeaponPropertyRune.greaterThundering.Note.success"}]},level:15,name:"PF2E.WeaponPropertyRuneGreaterThundering",price:6500,rarity:"common",slug:"greaterThundering",traits:["evocation","magical","sonic"]},grievous:{damage:{notes:[{outcome:["criticalSuccess"],predicate:{all:["weapon:group:axe"]},text:"PF2E.WeaponPropertyRune.grievous.Note.Axe"},{outcome:["criticalSuccess"],predicate:{all:["weapon:group:brawling"]},text:"PF2E.WeaponPropertyRune.grievous.Note.Brawling"},{outcome:["criticalSuccess"],predicate:{all:["weapon:group:club"]},text:"PF2E.WeaponPropertyRune.grievous.Note.Club"},{outcome:["criticalSuccess"],predicate:{all:["weapon:group:dart"]},text:"PF2E.WeaponPropertyRune.grievous.Note.Dart"},{outcome:["criticalSuccess"],predicate:{all:["weapon:group:flail"]},text:"PF2E.WeaponPropertyRune.grievous.Note.Flail"},{outcome:["criticalSuccess"],predicate:{all:["weapon:group:hammer"]},text:"PF2E.WeaponPropertyRune.grievous.Note.Hammer"},{outcome:["criticalSuccess"],predicate:{all:["weapon:group:knife"]},text:"PF2E.WeaponPropertyRune.grievous.Note.Knife"},{outcome:["criticalSuccess"],predicate:{all:["weapon:group:pick"]},text:"PF2E.WeaponPropertyRune.grievous.Note.Pick"},{outcome:["criticalSuccess"],predicate:{all:["weapon:group:polearm"]},text:"PF2E.WeaponPropertyRune.grievous.Note.Polearm"},{outcome:["criticalSuccess"],predicate:{all:["weapon:group:shield"]},text:"PF2E.WeaponPropertyRune.grievous.Note.Shield"},{outcome:["criticalSuccess"],predicate:{all:["weapon:group:sling"]},text:"PF2E.WeaponPropertyRune.grievous.Note.Sling"},{outcome:["criticalSuccess"],predicate:{all:["weapon:group:spear"]},text:"PF2E.WeaponPropertyRune.grievous.Note.Spear"},{outcome:["criticalSuccess"],predicate:{all:["weapon:group:sword"]},text:"PF2E.WeaponPropertyRune.grievous.Note.Sword"}]},level:9,name:"PF2E.WeaponPropertyRuneGrievous",price:700,rarity:"common",slug:"grievous",traits:["enchantment","magical"]},hauling:{level:6,name:"PF2E.WeaponPropertyRuneHauling",price:225,rarity:"uncommon",slug:"hauling",traits:["evocation","magical"]},holy:{damage:{dice:[{damageType:"good",diceNumber:1,dieSize:"d6",predicate:{all:["target:trait:evil"]}}]},level:11,name:"PF2E.WeaponPropertyRuneHoly",price:1400,rarity:"common",slug:"holy",traits:["evocation","good","magical"]},hopeful:{attack:{notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.hopeful.Note.criticalSuccess"}]},level:11,name:"PF2E.WeaponPropertyRuneHopeful",price:1200,rarity:"uncommon",slug:"hopeful",traits:["enchantment","magical"]},impactful:{damage:{dice:[{damageType:"force",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.impactful.Note.criticalSuccess"}]},level:10,name:"PF2E.WeaponPropertyRuneImpactful",price:1e3,rarity:"common",slug:"impactful",traits:["evocation","force","magical"]},keen:{attack:{notes:[{text:"PF2E.WeaponPropertyRune.keen.Note"}]},level:13,name:"PF2E.WeaponPropertyRuneKeen",price:3e3,rarity:"uncommon",slug:"keen",traits:["magical","transmutation"]},kinWarding:{level:3,name:"PF2E.WeaponPropertyRuneKinWarding",price:52,rarity:"uncommon",slug:"kinWarding",traits:["abjuration","dwarf","magical"]},majorFanged:{level:15,name:"PF2E.WeaponPropertyRuneMajorFanged",price:6e3,rarity:"uncommon",slug:"majorFanged",traits:["magical","transmutation"]},pacifying:{level:5,name:"PF2E.WeaponPropertyRunePacifying",price:150,rarity:"uncommon",slug:"pacifying",traits:["enchantment","magical"]},returning:{attack:{notes:[{text:"PF2E.WeaponPropertyRune.returning.Note"}]},level:3,name:"PF2E.WeaponPropertyRuneReturning",price:55,rarity:"common",slug:"returning",traits:["evocation","magical"]},serrating:{damage:{dice:[{damageType:"slashing",diceNumber:1,dieSize:"d4"}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.serrating.Note.criticalSuccess"}]},level:10,name:"PF2E.WeaponPropertyRuneSerrating",price:1e3,rarity:"uncommon",slug:"serrating",traits:["evocation","magical"]},shifting:{level:6,name:"PF2E.WeaponPropertyRuneShifting",price:225,rarity:"common",slug:"shifting",traits:["magical","transmutation"]},shock:{damage:{dice:[{damageType:"electricity",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.shock.Note.criticalSuccess"}]},level:8,name:"PF2E.WeaponPropertyRuneShock",price:500,rarity:"common",slug:"shock",traits:["electricity","conjuration","magical"]},speed:{level:16,name:"PF2E.WeaponPropertyRuneSpeed",price:1e4,rarity:"rare",slug:"speed",traits:["magical","transmutation"]},spellStoring:{level:13,name:"PF2E.WeaponPropertyRuneSpellStoring",price:2700,rarity:"uncommon",slug:"spellStoring",traits:["abjuration","magical"]},thundering:{damage:{dice:[{damageType:"sonic",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.thundering.Note.criticalSuccess"}]},level:8,name:"PF2E.WeaponPropertyRuneThundering",price:500,rarity:"common",slug:"thundering",traits:["evocation","magical","sonic"]},unholy:{damage:{dice:[{damageType:"evil",diceNumber:1,dieSize:"d6",predicate:{all:["target:trait:good"]}}]},level:11,name:"PF2E.WeaponPropertyRuneUnholy",price:1400,rarity:"common",slug:"unholy",traits:["evil","evocation","magical"]},vorpal:{level:17,name:"PF2E.WeaponPropertyRuneVorpal",price:15e3,rarity:"rare",slug:"vorpal",traits:["evocation","magical"]},wounding:{damage:{notes:[{outcome:["criticalSuccess"],text:"PF2E.WeaponPropertyRune.wounding.Note.criticalSuccess"},{outcome:["success"],text:"PF2E.WeaponPropertyRune.wounding.Note.success"}]},level:7,name:"PF2E.WeaponPropertyRuneWounding",price:340,rarity:"common",slug:"wounding",traits:["magical","necromancy"]}},exports.getPropertyRuneModifiers=function(itemData){return getPropertyRunes(itemData,getPropertySlots(itemData)).flatMap((rune=>{var _a;const runeConfig=CONFIG.PF2E.runes.weapon.property[rune];return runeConfig&&(null===(_a=runeConfig.damage)||void 0===_a?void 0:_a.dice)?function(rune,dice){return(dice=deepClone(dice)).map((die=>{var _a,_b,_c;const traits=die.damageType?[die.damageType]:[];return new modifiers_1.DiceModifierPF2e({name:null===(_a=CONFIG.PF2E.runes.weapon.property[rune])||void 0===_a?void 0:_a.name,diceNumber:null!==(_b=die.diceNumber)&&void 0!==_b?_b:1,dieSize:null!==(_c=die.dieSize)&&void 0!==_c?_c:"d6",damageType:die.damageType,traits,predicate:die.predicate})}))}(rune,runeConfig.damage.dice):[]}))},exports.hasGhostTouchRune=function(itemData){return new Set(getPropertyRunes(itemData,getPropertySlots(itemData))).has("ghostTouch")};exports.WEAPON_VALUATION_DATA={potency:Object.assign({0:null},{1:{level:2,price:35,rarity:"common",traits:["evocation"]},2:{level:10,price:935,rarity:"common",traits:["evocation"]},3:{level:16,price:8935,rarity:"common",traits:["evocation"]},4:{level:16,price:8935,rarity:"common",traits:["evocation"]}}),striking:Object.assign({"":null},{striking:{level:4,price:65,rarity:"common",traits:["evocation"]},greaterStriking:{level:12,price:1065,rarity:"common",traits:["evocation"]},majorStriking:{level:19,price:31065,rarity:"common",traits:["evocation"]}})}},22222:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ItemSheetPF2e=void 0;const localize_1=__webpack_require__(41332),_item_1=__webpack_require__(10843),tagify_1=__importDefault(__webpack_require__(88537)),trait_selector_1=__webpack_require__(17145),_util_1=__webpack_require__(6945),inline_roll_links_1=__webpack_require__(27542);class ItemSheetPF2e extends ItemSheet{static get defaultOptions(){const options=super.defaultOptions;return options.width=650,options.height=460,options.classes=options.classes.concat(["pf2e","item"]),options.template="systems/pf2e/templates/items/item-sheet.html",options.scrollY=[".tab.active"],options.tabs=[{navSelector:".tabs",contentSelector:".sheet-body",initial:"description"},{navSelector:".mystify-nav",contentSelector:".mystify-sheet",initial:"unidentified"}],options}async getData(){var _a,_b;const data=this.getBaseData();data.abilities=CONFIG.PF2E.abilities,data.saves=CONFIG.PF2E.saves;const itemData=data.item;mergeObject(data,{hasSidebar:!0,sidebarTemplate:()=>`systems/pf2e/templates/items/${itemData.type}-sidebar.html`,hasDetails:["action","armor","book","consumable","deity","equipment","feat","spell","weapon","melee","backpack","condition","lore"].includes(itemData.type),detailsTemplate:()=>`systems/pf2e/templates/items/${itemData.type}-details.html`});const dt=duplicate(CONFIG.PF2E.damageTypes);"spell"===itemData.type&&mergeObject(dt,CONFIG.PF2E.healingTypes),data.damageTypes=dt;const stackGroup=null===(_b=null===(_a=data.data)||void 0===_a?void 0:_a.stackGroup)||void 0===_b?void 0:_b.value;data.bulkDisabled=null!=stackGroup&&""!==stackGroup.trim(),data.rarity=CONFIG.PF2E.rarityTraits,data.usage=CONFIG.PF2E.usageTraits,data.stackGroups=CONFIG.PF2E.stackGroups,"treasure"===itemData.type?(data.currencies=CONFIG.PF2E.currencies,data.bulkTypes=CONFIG.PF2E.bulkTypes,data.sizes=CONFIG.PF2E.actorSizes):"consumable"===itemData.type?(data.consumableTypes=CONFIG.PF2E.consumableTypes,data.traits=this.prepareOptions(CONFIG.PF2E.consumableTraits,itemData.data.traits,{selectedOnly:!0}),data.bulkTypes=CONFIG.PF2E.bulkTypes,data.stackGroups=CONFIG.PF2E.stackGroups,data.consumableTraits=CONFIG.PF2E.consumableTraits,data.sizes=CONFIG.PF2E.actorSizes):"melee"===itemData.type?(data.hasSidebar=!1,data.detailsActive=!0,data.damageTypes=CONFIG.PF2E.damageTypes,data.attackEffects=this.prepareOptions(this.getAttackEffectOptions(),data.data.attackEffects),data.traits=this.prepareOptions(CONFIG.PF2E.npcAttackTraits,data.data.traits,{selectedOnly:!0})):"condition"===itemData.type?data.conditions=[]:"equipment"===itemData.type?(data.traits=this.prepareOptions(CONFIG.PF2E.equipmentTraits,itemData.data.traits,{selectedOnly:!0}),data.bulkTypes=CONFIG.PF2E.bulkTypes,data.stackGroups=CONFIG.PF2E.stackGroups,data.equipmentTraits=CONFIG.PF2E.equipmentTraits,data.sizes=CONFIG.PF2E.actorSizes):"backpack"===itemData.type?(data.traits=this.prepareOptions(CONFIG.PF2E.equipmentTraits,itemData.data.traits,{selectedOnly:!0}),data.bulkTypes=CONFIG.PF2E.bulkTypes,data.equipmentTraits=CONFIG.PF2E.equipmentTraits,data.sizes=CONFIG.PF2E.actorSizes):"lore"===itemData.type&&(data.proficiencies=CONFIG.PF2E.proficiencyLevels);const translations=localize_1.LocalizePF2e.translations.PF2E.RuleElement;return data.ruleLabels=itemData.data.rules.map((ruleData=>{var _a;const key=ruleData.key.replace(/^PF2E\.RuleElement\./,""),label=null!==(_a=translations[key])&&void 0!==_a?_a:translations.Unrecognized,recognized=label!==translations.Unrecognized;return{label:recognized?label:game.i18n.localize("PF2E.RuleElement.Unrecognized"),recognized}})),data}getBaseData(){const itemData=this.item.clone({},{keepId:!0}).data;itemData.data.rules=itemData.toObject().data.rules;const rollData=this.item.getRollData();itemData.data.description.value=game.pf2e.TextEditor.enrichHTML(itemData.data.description.value,{rollData});const isEditable=this.isEditable;return{itemType:null,hasSidebar:!1,hasDetails:!0,cssClass:isEditable?"editable":"locked",editable:isEditable,document:this.item,item:itemData,data:itemData.data,limited:this.item.limited,options:this.options,owner:this.item.isOwner,title:this.title,user:{isGM:game.user.isGM},enabledRulesUI:game.settings.get("pf2e","enabledRulesUI")}}prepareOptions(options,selections,{selectedOnly=!1}={}){const sheetOptions=Object.entries(options).reduce(((compiledOptions,[stringKey,label])=>{const selectionList=Array.isArray(selections)?selections:selections.value,key="number"==typeof selectionList[0]?Number(stringKey):stringKey,isSelected=selectionList.includes(key);return!isSelected&&selectedOnly||(compiledOptions[key]={label,value:stringKey,selected:isSelected}),compiledOptions}),{});return selections.custom&&(sheetOptions.custom={label:selections.custom,value:"",selected:!0}),sheetOptions}onTagSelector(event){var _a,_b,_c;event.preventDefault();const $anchor=$(event.currentTarget),selectorType=null!==(_a=$anchor.attr("data-trait-selector"))&&void 0!==_a?_a:"";if("basic"!==selectorType||!(0,_util_1.tupleHasValue)(trait_selector_1.TAG_SELECTOR_TYPES,selectorType))throw(0,_util_1.ErrorPF2e)("Item sheets can only use the basic tag selector");const propertyIsFlat=!!$anchor.attr("data-flat"),objectProperty=null!==(_b=$anchor.attr("data-property"))&&void 0!==_b?_b:"",title=$anchor.attr("data-title"),configTypes=(null!==(_c=$anchor.attr("data-config-types"))&&void 0!==_c?_c:"").split(",").map((type=>type.trim())).filter((tag=>(0,_util_1.tupleHasValue)(trait_selector_1.SELECTABLE_TAG_FIELDS,tag))),selectorOptions={objectProperty,configTypes,title,flat:propertyIsFlat};"true"===$anchor.attr("data-no-custom")?selectorOptions.allowCustom=!1:this.actor&&configTypes.includes("attackEffects")&&(selectorOptions.customChoices=this.getAttackEffectOptions()),new trait_selector_1.TagSelectorBasic(this.item,selectorOptions).render(!0)}getAttackEffectOptions(){var _a,_b;return null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.items.filter((item=>"action"===item.type||"consumable"===item.type)).reduce(((options,item)=>{var _a;const key=null!==(_a=item.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(item.name);return mergeObject(options,{[key]:item.name},{inplace:!1})}),CONFIG.PF2E.attackEffects))&&void 0!==_b?_b:{}}async addDamageRoll(event){event.preventDefault();const newKey=randomID(20);return this.item.update({[`data.damageRolls.${newKey}`]:{damage:"",damageType:""}})}async deleteDamageRoll(event){event.preventDefault(),event.originalEvent&&await this._onSubmit(event.originalEvent);const targetKey=$(event.target).parents(".damage-part").attr("data-damage-part");return this.item.update({[`data.damageRolls.-=${targetKey}`]:null})}_canDragDrop(_selector){return this.item.isOwner}activateListeners(html){super.activateListeners(html),html.find('li.trait-item input[type="checkbox"]').on("click",(event=>{event.originalEvent instanceof MouseEvent&&this._onSubmit(event.originalEvent)})),html.find(".trait-selector").on("click",(ev=>this.onTagSelector(ev))),html.find(".add-damage").on("click",(ev=>{this.addDamageRoll(ev)})),html.find(".delete-damage").on("click",(ev=>{this.deleteDamageRoll(ev)})),html.find(".add-rule-element").on("click",(async event=>{event.preventDefault(),event.originalEvent instanceof MouseEvent&&await this._onSubmit(event.originalEvent);const rulesData=this.item.data.data.rules;this.item.update({"data.rules":rulesData.concat([{key:"NewRuleElement"}])})})),html.find(".rules").on("click",".remove-rule-element",(async event=>{var _a;event.preventDefault(),event.originalEvent instanceof MouseEvent&&await this._onSubmit(event.originalEvent);const rules=duplicate(null!==(_a=this.item.data.data.rules)&&void 0!==_a?_a:[]),index=event.currentTarget.dataset.ruleIndex;rules&&rules.length>Number(index)&&(rules.splice(index,1),this.item.update({"data.rules":rules}))})),html.find(".add-skill-variant").on("click",(_event=>{var _a;if(!(this.item instanceof _item_1.LorePF2e))return;const variants=null!==(_a=this.item.data.data.variants)&&void 0!==_a?_a:{},index=Object.keys(variants).length;this.item.update({[`data.variants.${index}`]:{label:"+X in terrain",options:""}})})),html.find(".skill-variants").on("click",".remove-skill-variant",(event=>{const index=event.currentTarget.dataset.skillVariantIndex;this.item.update({[`data.variants.-=${index}`]:null})}));const $prerequisites=html.find('input[name="data.prerequisites.value"]');$prerequisites[0]&&new tagify_1.default($prerequisites[0],{editTags:1}),inline_roll_links_1.InlineRollsLinks.listen(html)}_getSubmitData(updateData={}){const fd=new FormDataExtended(this.form,{editors:this.editors}),data=updateData?mergeObject(fd.toObject(),updateData):expandObject(fd.toObject());return flattenObject(data)}_getHeaderButtons(){const buttons=super._getHeaderButtons(),hasMultipleSheets=Object.keys(CONFIG.Item.sheetClasses[this.item.type]).length>1,sheetButton=buttons.find((button=>"configure-sheet"===button.class));return!hasMultipleSheets&&sheetButton&&buttons.splice(buttons.indexOf(sheetButton),1),buttons}async _onSubmit(event,{updateData=null,preventClose=!1,preventRender=!1}={}){return $(this.form).find("tags ~ input").each(((_i,input)=>{""===input.value&&(input.value="[]")})),super._onSubmit(event,{updateData,preventClose,preventRender})}async _updateObject(event,formData){""===formData["data.baseItem"]&&(formData["data.baseItem"]=null);try{const rules=[];Object.entries(formData).filter((([key,_])=>key.startsWith("data.rules."))).forEach((([_,value])=>{try{rules.push(JSON.parse(value))}catch(error){if(error instanceof Error)throw ui.notifications.error(`Syntax error in rule element definition: ${error.message}`),console.warn("Syntax error in rule element definition.",error.message,value),error}})),formData["data.rules"]=rules}catch(e){return}super._updateObject(event,formData)}}exports.ItemSheetPF2e=ItemSheetPF2e},69777:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.MAGIC_TRADITIONS=exports.MAGIC_SCHOOLS=void 0,__exportStar(__webpack_require__(41408),exports);var values_1=__webpack_require__(67623);Object.defineProperty(exports,"MAGIC_SCHOOLS",{enumerable:!0,get:function(){return values_1.MAGIC_SCHOOLS}}),Object.defineProperty(exports,"MAGIC_TRADITIONS",{enumerable:!0,get:function(){return values_1.MAGIC_TRADITIONS}})},41408:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellData=void 0;const non_physical_1=__webpack_require__(67561);class SpellData extends non_physical_1.BaseNonPhysicalItemData{}exports.SpellData=SpellData,SpellData.DEFAULT_ICON="systems/pf2e/icons/default-icons/spell.svg"},67623:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MAGIC_TRADITIONS=exports.MAGIC_SCHOOLS=void 0,exports.MAGIC_SCHOOLS=["abjuration","conjuration","divination","enchantment","evocation","illusion","necromancy","transmutation"],exports.MAGIC_TRADITIONS=["arcane","divine","occult","primal"]},12114:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellPF2e=void 0;const _actor_1=__webpack_require__(85530),base_1=__webpack_require__(24227),modifiers_1=__webpack_require__(27324),_util_1=__webpack_require__(6945),dice_1=__webpack_require__(18235),data_1=__webpack_require__(69777);class SpellPF2e extends base_1.ItemPF2e{constructor(data,context={}){var _a;super(data,mergeObject(context,{pf2e:{ready:!0}})),this.isFromConsumable=null!==(_a=context.fromConsumable)&&void 0!==_a&&_a}static get schema(){return data_1.SpellData}get level(){return this.data.data.level.value}get traits(){return new Set(this.data.data.traits.value)}get school(){return this.data.data.school.value}get traditions(){var _a;return(null===(_a=this.spellcasting)||void 0===_a?void 0:_a.tradition)?new Set([this.spellcasting.tradition]):new Set(this.data.data.traditions.value)}get spellcasting(){var _a;const spellcastingId=this.data.data.location.value;return null===(_a=this.actor)||void 0===_a?void 0:_a.spellcasting.find((entry=>entry.id===spellcastingId))}get heightenedLevel(){var _a,_b;return null!==(_b=null===(_a=this.data.data.heightenedLevel)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:this.level}get isCantrip(){return this.data.isCantrip}get isFocusSpell(){return this.data.isFocusSpell}get isRitual(){return this.data.isRitual}get components(){const components=this.data.data.components,results=[];return components.focus&&results.push(game.i18n.localize("PF2E.SpellComponentShortF")),components.material&&results.push(game.i18n.localize("PF2E.SpellComponentShortM")),components.somatic&&results.push(game.i18n.localize("PF2E.SpellComponentShortS")),components.verbal&&results.push(game.i18n.localize("PF2E.SpellComponentShortV")),Object.assign(Object.assign({},components),{value:results.join("")})}get unlimited(){return this.isCantrip}computeCastLevel(castLevel){var _a;return(this.isCantrip||this.isFocusSpell)&&this.actor?this.data.data.autoHeightenLevel.value||(null===(_a=this.spellcasting)||void 0===_a?void 0:_a.data.data.autoHeightenLevel.value)||Math.ceil(this.actor.level/2):Math.max(this.level,null!=castLevel?castLevel:this.heightenedLevel)}getRollData(rollOptions={}){var _a;const rollData=super.getRollData();if(this.actor instanceof _actor_1.CharacterPF2e||this.actor instanceof _actor_1.NPCPF2e){const spellcasting=this.spellcasting,{abilities}=this.actor.data.data;!(null==spellcasting?void 0:spellcasting.data)&&this.trickMagicEntry?rollData.mod=abilities[this.trickMagicEntry.ability].mod:rollData.mod=abilities[null!==(_a=null==spellcasting?void 0:spellcasting.ability)&&void 0!==_a?_a:"int"].mod}const castLevel=Number(null==rollOptions?void 0:rollOptions.spellLvl)||this.heightenedLevel||this.level;return rollData.castLevel=Math.max(this.level,castLevel),rollData.heighten=Math.max(0,castLevel-this.level),rollData}getDamageFormula(castLevel,rollData={}){var _a,_b,_c,_d,_e;const experimentalDamageFormat=game.settings.get("pf2e","automation.experimentalDamageFormatting");castLevel=this.computeCastLevel(castLevel);const hasDangerousSorcery=null===(_a=this.actor)||void 0===_a?void 0:_a.itemTypes.feat.some((feat=>"dangerous-sorcery"===feat.slug)),formulas=[];for(const[id,damage]of Object.entries(null!==(_b=this.data.data.damage.value)&&void 0!==_b?_b:{})){const isPersistentOrSplash="persistent"===damage.type.subtype||"splash"===damage.type.subtype;if(!experimentalDamageFormat&&isPersistentOrSplash)continue;const parts=[];if(damage.value&&"0"!==damage.value&&parts.push(damage.value),damage.applyMod&&this.actor&&parts.push("@mod"),0===formulas.length){""===this.data.data.duration.value&&this.actor&&(!hasDangerousSorcery||this.isFocusSpell||this.isCantrip||parts.push(String(castLevel)));const traits=null!==(_d=null===(_c=this.actor)||void 0===_c?void 0:_c.data.data.traits.traits.value)&&void 0!==_d?_d:[];traits.some((trait=>"elite"===trait))?parts.push(this.unlimited?2:4):traits.some((trait=>"weak"===trait))&&parts.push(this.unlimited?-2:-4)}const scaling=this.data.data.scaling;if(null==scaling?void 0:scaling.interval){const scalingFormula=scaling.damage[id];if(scalingFormula&&"0"!==scalingFormula&&scaling.interval){const partCount=Math.floor((castLevel-this.level)/scaling.interval);if(partCount>0){const scalingParts=Array(partCount).fill(scalingFormula);parts.push(scalingParts.join("+"))}}}if(0===parts.length)continue;const categories=[];damage.type.subtype&&categories.push(damage.type.subtype),categories.push(...null!==(_e=damage.type.categories)&&void 0!==_e?_e:[],damage.type.value);const baseFormulaFixed=Roll.replaceFormulaData(parts.join(" + "),rollData).replace(/[\s]*\+[\s]*-[\s]*/g," - "),formula=dice_1.DicePF2e.combineTerms(baseFormulaFixed).formula;experimentalDamageFormat?formulas.push(`{${formula}}[${categories.join(",")}]`):formulas.push(formula)}return formulas.join(" + ")}prepareBaseData(){super.prepareBaseData(),this.data.data.level.value=Math.clamped(this.data.data.level.value,1,10),this.data.isFocusSpell="focus"===this.data.data.category.value,this.data.isRitual="ritual"===this.data.data.category.value,this.data.isCantrip=this.traits.has("cantrip")&&!this.data.isRitual}prepareSiblingData(){this.data.data.traits.value.push(this.school,...this.traditions)}getChatData(htmlOptions={},rollOptions={}){var _a,_b,_c,_d;const level=this.computeCastLevel(null!==(_a=(0,_util_1.toNumber)(null==rollOptions?void 0:rollOptions.spellLvl))&&void 0!==_a?_a:this.heightenedLevel),rollData=null!==(_b=htmlOptions.rollData)&&void 0!==_b?_b:this.getRollData({spellLvl:level}),localize=game.i18n.localize.bind(game.i18n),systemData=this.data.data,description=game.pf2e.TextEditor.enrichHTML(systemData.description.value,Object.assign(Object.assign({},htmlOptions),{rollData})),trickData=this.trickMagicEntry,spellcasting=this.spellcasting;if(!spellcasting&&!trickData)return console.warn(`PF2e System | Orphaned spell ${this.name} (${this.id}) on actor ${this.actor.name} (${this.actor.id})`),Object.assign({},systemData);const statistic=(null==trickData?void 0:trickData.statistic)||(null==spellcasting?void 0:spellcasting.statistic);if(!statistic)return console.warn(`PF2e System | Spell ${this.name} is missing a statistic to cast with (${this.id}) on actor ${this.actor.name} (${this.actor.id})`),Object.assign({},systemData);const statisticChatData=statistic.getChatData({options:[...this.traits]}),spellDC=statisticChatData.dc.value,isAttack="attack"===systemData.spellType.value,isSave="save"===systemData.spellType.value||""!==systemData.save.value,formula=this.getDamageFormula(level,rollData),hasDamage=formula&&"0"!==formula,saveType=systemData.save.value?game.i18n.localize(CONFIG.PF2E.saves[systemData.save.value]):"",saveKey=systemData.save.basic?"PF2E.SaveDCLabelBasic":"PF2E.SaveDCLabel",saveLabel=game.i18n.format(saveKey,{dc:spellDC,type:saveType}),isHeal="heal"===systemData.spellType.value,damageLabel=localize(isHeal?"PF2E.SpellTypeHeal":"PF2E.DamageLabel"),areaSize=null!==(_c=systemData.area.value)&&void 0!==_c?_c:"",areaType=game.i18n.localize(null!==(_d=CONFIG.PF2E.areaTypes[systemData.area.areaType])&&void 0!==_d?_d:""),areaUnit=game.i18n.localize("PF2E.Foot"),area=systemData.area.value?game.i18n.format("PF2E.SpellArea",{areaSize,areaUnit,areaType}).trim():null,baseLevel=this.level,heightened=level-baseLevel,levelLabel=(()=>{const type=this.isCantrip?localize("PF2E.TraitCantrip"):localize(CONFIG.PF2E.spellCategories[this.data.data.category.value]);return game.i18n.format("PF2E.ItemLevel",{type,level})})(),properties=[heightened?game.i18n.format("PF2E.SpellLevelBase",{level:(0,_util_1.ordinal)(baseLevel)}):null,heightened?game.i18n.format("PF2E.SpellLevelHeightened",{heightened}):null,`${localize("PF2E.SpellComponentsLabel")}: ${this.components.value}`,systemData.range.value?`${localize("PF2E.SpellRangeLabel")}: ${systemData.range.value}`:null,systemData.target.value?`${localize("PF2E.SpellTargetLabel")}: ${systemData.target.value}`:null,area,systemData.time.value?`${localize("PF2E.SpellTimeLabel")}: ${systemData.time.value}`:null,systemData.duration.value?`${localize("PF2E.SpellDurationLabel")}: ${systemData.duration.value}`:null].filter((p=>null!==p)),traits=this.traitChatData(CONFIG.PF2E.spellTraits),item=this.isFromConsumable?JSON.stringify(this.toObject(!1)):void 0;return Object.assign(Object.assign({},systemData),{description:{value:description},isAttack,isSave,save:Object.assign(Object.assign({},statisticChatData.dc),{type:systemData.save.value,label:saveLabel}),hasDamage,spellLvl:level,levelLabel,damageLabel,formula,properties,traits,areaSize,areaType,areaUnit,item})}rollAttack(event,multiAttackPenalty=1){var _a;const trickMagicEntry=this.trickMagicEntry,spellcastingEntry=this.spellcasting,statistic=null===(_a=null!=trickMagicEntry?trickMagicEntry:spellcastingEntry)||void 0===_a?void 0:_a.statistic,map=this.calculateMap();if(!statistic)throw(0,_util_1.ErrorPF2e)("Spell points to location that is not a spellcasting type");{const options=this.actor.getRollOptions(["all","attack-roll","spell-attack-roll"]).concat(...this.traits),modifiers=[];multiAttackPenalty>1&&modifiers.push(new modifiers_1.ModifierPF2e(map.label,map[`map${multiAttackPenalty}`],"untyped")),statistic.check.roll({event,item:this,options,modifiers})}}rollDamage(event){const castLevel=(()=>{const card=event.currentTarget.closest("*[data-spell-lvl]"),cardData=card?card.dataset:{};return Number(cardData.spellLvl)||1})(),rollData=this.getRollData({spellLvl:castLevel}),formula=this.getDamageFormula(castLevel,rollData),title=(()=>{var _a;if("heal"===this.data.data.spellType.value)return`${this.name} - ${game.i18n.localize("PF2E.SpellTypeHeal")}`;{const damageType=Object.values(null!==(_a=this.data.data.damage.value)&&void 0!==_a?_a:{}).filter((damage=>"persistent"!==damage.type.subtype&&"splash"!==damage.type.subtype)).map((damage=>damage.type.value)).filter((type=>(0,_util_1.objectHasKey)(CONFIG.PF2E.damageTypes,type))).map((type=>game.i18n.localize(CONFIG.PF2E.damageTypes[type]))).join("/");return`${this.name} - ${game.i18n.localize("PF2E.DamageLabel")} (${damageType})`}})();dice_1.DicePF2e.damageRoll({event,item:this,parts:[formula],data:rollData,actor:this.actor,title,speaker:ChatMessage.getSpeaker({actor:this.actor}),dialogOptions:{width:400,top:event.clientY-80,left:window.innerWidth-710}})}}exports.SpellPF2e=SpellPF2e},30988:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellSheetPF2e=void 0;const base_1=__webpack_require__(22222),_util_1=__webpack_require__(6945),DEFAULT_INTERVAL_SCALING={interval:1,damage:{}};class SpellSheetPF2e extends base_1.ItemSheetPF2e{async getData(){const data=await super.getData(),itemType=this.item.isCantrip&&this.item.isFocusSpell?game.i18n.localize("PF2E.SpellCategoryFocusCantrip"):this.item.isCantrip?game.i18n.localize("PF2E.TraitCantrip"):game.i18n.localize(CONFIG.PF2E.spellCategories[this.item.data.data.category.value]);return Object.assign(Object.assign({},data),{itemType,spellCategories:CONFIG.PF2E.spellCategories,spellTypes:CONFIG.PF2E.spellTypes,magicSchools:CONFIG.PF2E.magicSchools,spellLevels:CONFIG.PF2E.spellLevels,magicTraditions:this.prepareOptions(CONFIG.PF2E.magicTraditions,data.data.traditions),damageSubtypes:CONFIG.PF2E.damageSubtypes,damageCategories:CONFIG.PF2E.damageCategories,traits:this.prepareOptions(CONFIG.PF2E.spellTraits,data.data.traits,{selectedOnly:!0}),rarities:this.prepareOptions(CONFIG.PF2E.rarityTraits,{value:[data.data.traits.rarity.value]}),spellComponents:this.formatSpellComponents(data.data),areaSizes:CONFIG.PF2E.areaSizes,areaTypes:CONFIG.PF2E.areaTypes,spellScalingIntervals:[1,2,3,4]})}activateListeners(html){super.activateListeners(html),html.find(".toggle-trait").on("change",(evt=>{var _a;const target=evt.target,trait=null!==(_a=target.dataset.trait)&&void 0!==_a?_a:"";if((0,_util_1.objectHasKey)(CONFIG.PF2E.spellTraits,trait)){if(target.checked&&!this.item.traits.has(trait)){const newTraits=this.item.data.data.traits.value.concat([trait]);this.item.update({"data.traits.value":newTraits})}else if(!target.checked&&this.item.traits.has(trait)){const newTraits=this.item.data.data.traits.value.filter((t=>t!==trait));this.item.update({"data.traits.value":newTraits})}}else console.warn("Toggled trait is invalid")})),html.find("[data-action='damage-create']").on("click",(event=>{event.preventDefault();this.item.update({[`data.damage.value.${randomID()}`]:{value:"",type:{value:"bludgeoning",categories:[]}}})})),html.find("[data-action='damage-delete']").on("click",(event=>{event.preventDefault();const id=$(event.target).closest("[data-action='damage-delete']").attr("data-id");if(id){const values={[`data.damage.value.-=${id}`]:null};this.item.data.data.scaling&&(values[`data.scaling.damage.-=${id}`]=null),this.item.update(values)}})),html.find("[data-action='scaling-create']").on("click",(event=>{event.preventDefault(),this.item.update({"data.scaling":DEFAULT_INTERVAL_SCALING})})),html.find("[data-action='scaling-delete']").on("click",(event=>{event.preventDefault(),this.item.update({"data.-=scaling":null})}))}formatSpellComponents(data){if(!data.components)return[];const comps=[];return data.components.focus&&comps.push(game.i18n.localize(CONFIG.PF2E.spellComponents.F)),data.components.material&&comps.push(game.i18n.localize(CONFIG.PF2E.spellComponents.M)),data.components.somatic&&comps.push(game.i18n.localize(CONFIG.PF2E.spellComponents.S)),data.components.verbal&&comps.push(game.i18n.localize(CONFIG.PF2E.spellComponents.V)),data.materials.value&&comps.push(data.materials.value),comps}}exports.SpellSheetPF2e=SpellSheetPF2e},83511:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(78970),exports),__exportStar(__webpack_require__(28479),exports),__exportStar(__webpack_require__(52052),exports)},52052:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0})},78970:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellcastingEntryData=void 0;const non_physical_1=__webpack_require__(67561);class SpellcastingEntryData extends non_physical_1.BaseNonPhysicalItemData{}exports.SpellcastingEntryData=SpellcastingEntryData,SpellcastingEntryData.DEFAULT_ICON="systems/pf2e/icons/default-icons/spellcastingEntry.svg"},28479:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MAGIC_TRADITIONS=void 0,exports.MAGIC_TRADITIONS=["arcane","primal","divine","occult"]},70267:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellcastingEntryPF2e=void 0;const _actor_1=__webpack_require__(85530),data_1=__webpack_require__(83511),data_2=__webpack_require__(52769),_util_1=__webpack_require__(6945),base_1=__webpack_require__(24227),statistic_1=__webpack_require__(77486);class SpellcastingEntryPF2e extends base_1.ItemPF2e{constructor(){super(...arguments),this._spells=null}static get schema(){return data_1.SpellcastingEntryData}get spells(){if(!this._spells&&(this._spells=new Collection,this.actor)){const spells=this.actor.itemTypes.spell.filter((i=>i.data.data.location.value===this.id));for(const spell of spells)this._spells.set(spell.id,spell)}return this._spells}get ability(){return this.data.data.ability.value||"int"}get tradition(){const tradition=this.data.data.tradition.value||"arcane";return data_1.MAGIC_TRADITIONS.includes(tradition)?tradition:"arcane"}get rank(){var _a,_b;const actor=this.actor;if(actor instanceof _actor_1.CharacterPF2e){const traditions=actor.data.data.proficiencies.traditions;if(this.isInnate){const allRanks=data_1.MAGIC_TRADITIONS.map((tradition=>traditions[tradition].rank));return Math.max(1,null!==(_a=this.data.data.proficiency.value)&&void 0!==_a?_a:0,...allRanks)}return Math.max(this.data.data.proficiency.value,traditions[this.tradition].rank)}return null!==(_b=this.data.data.proficiency.value)&&void 0!==_b?_b:0}get isPrepared(){return"prepared"===this.data.data.prepared.value}get isFlexible(){return this.isPrepared&&!!this.data.data.prepared.flexible}get isSpontaneous(){return"spontaneous"===this.data.data.prepared.value}get isInnate(){return"innate"===this.data.data.prepared.value}get isFocusPool(){return"focus"===this.data.data.prepared.value}get isRitual(){return"ritual"===this.data.data.prepared.value}get highestLevel(){var _a,_b;const highestSpell=Math.max(...this.spells.map((s=>s.heightenedLevel))),actorSpellLevel=Math.ceil((null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.level)&&void 0!==_b?_b:0)/2);return Math.min(10,Math.max(highestSpell,actorSpellLevel))}get statistic(){const actor=this.actor,data=this.data.data.statisticData;if(!actor)throw(0,_util_1.ErrorPF2e)("Cannot get statistic for spellcasting entry without actor");if(!data)throw(0,_util_1.ErrorPF2e)("Missing statistic data for spellcasting entry");return new statistic_1.Statistic(actor,data)}prepareData(){super.prepareData(),this._spells=null}async cast(spell,options={}){var _a,_b,_c;const consume=null===(_a=options.consume)||void 0===_a||_a,message=null===(_b=options.message)||void 0===_b||_b,level=null!==(_c=options.level)&&void 0!==_c?_c:spell.heightenedLevel,valid=!consume||spell.isCantrip||await this.consume(spell.name,level,options.slot);message&&valid&&await spell.toMessage(void 0,{data:{spellLvl:level}})}async consume(name,level,slot){var _a,_b,_c,_d;const actor=this.actor;if(!(actor instanceof _actor_1.CharacterPF2e||actor instanceof _actor_1.NPCPF2e))throw(0,_util_1.ErrorPF2e)("Spellcasting entries require an actor");if(this.isRitual)return!0;if(this.isFocusPool){const currentPoints=null!==(_b=null===(_a=actor.data.data.resources.focus)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:0;return currentPoints>0?(await actor.update({"data.resources.focus.value":currentPoints-1}),!0):(ui.notifications.warn(game.i18n.localize("PF2E.Focus.NotEnoughFocusPointsError")),!1)}const levelLabel=game.i18n.localize(CONFIG.PF2E.spellLevels[level]),slotKey=(0,data_2.goesToEleven)(level)?`slot${level}`:"slot0";if(null===this.data.data.slots)return!1;if(this.isPrepared&&!this.isFlexible){if(null==slot)throw(0,_util_1.ErrorPF2e)("Slot is a required argument for prepared spells");return null!==(_c=this.data.data.slots[slotKey].prepared[slot].expended)&&void 0!==_c&&_c?(ui.notifications.warn(game.i18n.format("PF2E.SpellSlotExpendedError",{name})),!1):(await this.setSlotExpendedState(level,slot,!0),!0)}const slots=this.data.data.slots[slotKey];return slots.value>0?(await this.update({[`data.slots.${slotKey}.value`]:slots.value-1}),!0):!("npc"!==(null===(_d=this.actor)||void 0===_d?void 0:_d.type)||!this.isInnate||0!==slots.max)||(ui.notifications.warn(game.i18n.format("PF2E.SpellSlotNotEnoughError",{name,level:levelLabel})),!1)}async addSpell(spell,targetLevel){var _a;const actor=this.actor;if(!(actor instanceof _actor_1.CreaturePF2e))throw(0,_util_1.ErrorPF2e)("Spellcasting entries can only exist on creatures");if(spell.data.data.location.value===this.id&&spell.heightenedLevel===targetLevel)return[];const spellData=spell.toObject(!0);if(spellData.data.location.value=this.id,spell.isCantrip||spell.isFocusSpell||spell.isRitual||(this.isSpontaneous||this.isInnate)&&(spellData.data.heightenedLevel={value:Math.max(spell.level,targetLevel)}),(null===(_a=spell.actor)||void 0===_a?void 0:_a.id)===actor.id){return await actor.updateEmbeddedDocuments("Item",[spellData])}return await actor.createEmbeddedDocuments("Item",[spellData])}prepareSpell(spell,spellLevel,spellSlot){if(spell.level>spellLevel&&(0!==spellLevel||!spell.isCantrip))return void console.warn(`Attempted to add level ${spell.level} spell to level ${spellLevel} spell slot.`);CONFIG.debug.hooks&&console.debug(`PF2e System | Updating location for spell ${spell.name} to match spellcasting entry ${this.id}`);const key=`data.slots.slot${spellLevel}.prepared.${spellSlot}`,updates={[key]:{id:spell.id}},slot=this.data.data.slots[`slot${spellLevel}`].prepared[spellSlot];return slot&&(void 0!==slot.prepared&&(updates[`${key}.-=prepared`]=null),void 0!==slot.name&&(updates[`${key}.-=name`]=null),void 0!==slot.expended&&(updates[`${key}.-=expended`]=null)),this.update(updates)}unprepareSpell(spellLevel,spellSlot){!0===CONFIG.debug.hooks&&console.debug(`PF2e System | Updating spellcasting entry ${this.id} to remove spellslot ${spellSlot} for spell level ${spellLevel}`);const key=`data.slots.slot${spellLevel}.prepared.${spellSlot}`;return this.update({[key]:{name:game.i18n.localize("PF2E.SpellSlotEmpty"),id:null,prepared:!1}})}setSlotExpendedState(spellLevel,spellSlot,isExpended){const key=`data.slots.slot${spellLevel}.prepared.${spellSlot}.expended`;return this.update({[key]:isExpended})}getSpellData(){var _a,_b,_c,_d,_e,_f,_g;if(!(this.actor instanceof _actor_1.CharacterPF2e||this.actor instanceof _actor_1.NPCPF2e))throw(0,_util_1.ErrorPF2e)("Spellcasting entries can only exist on creatures");const results=[],spellPrepList={},spells=this.spells.contents.sort(((s1,s2)=>(s1.data.sort||0)-(s2.data.sort||0))),signatureSpells=new Set(null!==(_b=null===(_a=this.data.data.signatureSpells)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:[]);if(this.isPrepared){const spellsByLevel=(0,_util_1.groupBy)(spells,(spell=>spell.isCantrip?0:spell.level));for(let level=0;level<=this.highestLevel;level++){const data=this.data.data.slots[`slot${level}`],active=[];if((this.data.data.showSlotlessLevels.value||data.max>0)&&(0===level||!this.isFlexible)){const maxPrepared=Math.max(data.max,0);active.push(...Array(maxPrepared).fill(null));for(const[key,value]of Object.entries(data.prepared)){const spell=value.id?this.spells.get(value.id):null;spell&&(active[Number(key)]={spell,chatData:spell.getChatData(),expended:!!value.expended})}}spellPrepList[level]=null!==(_d=null===(_c=spellsByLevel.get(level))||void 0===_c?void 0:_c.map((spell=>({spell,chatData:spell.getChatData(),signature:this.isFlexible&&signatureSpells.has(spell.id)}))))&&void 0!==_d?_d:[],results.push({label:0===level?"PF2E.TraitCantrip":CONFIG.PF2E.spellLevels[level],level,uses:{value:level>0&&this.isFlexible?data.value||0:void 0,max:data.max},isCantrip:0===level,active,displayPrepared:!this.data.data.displayLevels||void 0===this.data.data.displayLevels[level]||this.data.data.displayLevels[level]})}}else if(this.isFocusPool){const cantrips=spells.filter((spell=>spell.isCantrip)),leveled=spells.filter((spell=>!spell.isCantrip));cantrips.length&&results.push({label:"PF2E.TraitCantrip",level:0,isCantrip:!0,active:cantrips.map((spell=>({spell,chatData:spell.getChatData()})))}),leveled.length&&results.push({label:"PF2E.Focus.label",level:Math.max(1,Math.ceil(this.actor.level/2)),isCantrip:!1,uses:null!==(_e=this.actor.data.data.resources.focus)&&void 0!==_e?_e:{value:0,max:0},active:leveled.map((spell=>({spell,chatData:spell.getChatData()})))})}else{const alwaysShowHeader=!this.isRitual,spellsByLevel=(0,_util_1.groupBy)(spells,(spell=>spell.isCantrip?0:spell.heightenedLevel));for(let level=0;level<=this.highestLevel;level++){const data=this.data.data.slots[`slot${level}`],spells=null!==(_f=spellsByLevel.get(level))&&void 0!==_f?_f:[];if(alwaysShowHeader||spells.length){const uses=this.isRitual||0===level?void 0:{value:data.value,max:data.max},active=spells.map((spell=>({spell,chatData:spell.getChatData()}))),hideForSpontaneous=this.isSpontaneous&&0===(null==uses?void 0:uses.max),hideForInnate=this.isInnate&&0===active.length;if(!this.data.data.showSlotlessLevels.value&&(hideForSpontaneous||hideForInnate))continue;results.push({label:0===level?"PF2E.TraitCantrip":CONFIG.PF2E.spellLevels[level],level,isCantrip:0===level,uses,active})}}}if(this.isSpontaneous||this.isFlexible)for(const spellId of signatureSpells){const spell=this.spells.get(spellId);if(spell)for(const result of results){if(spell.level>result.level)continue;if(!this.data.data.showSlotlessLevels.value&&0===(null===(_g=result.uses)||void 0===_g?void 0:_g.max))continue;const existing=result.active.find((a=>(null==a?void 0:a.spell.id)===spellId));if(existing)existing.signature=!0;else{const chatData=spell.getChatData({},{spellLvl:result.level});result.active.push({spell,chatData,signature:!0,virtual:!0})}}}const flexibleAvailable=(()=>{if(!this.isFlexible)return;const totalSlots=results.filter((result=>!result.isCantrip)).map((level=>{var _a;return(null===(_a=level.uses)||void 0===_a?void 0:_a.max)||0})).reduce(((first,second)=>first+second),0);return{value:signatureSpells.size,max:totalSlots}})();return{id:this.id,name:this.name,statistic:this.statistic.getChatData(),tradition:this.tradition,castingType:this.data.data.prepared.value,isPrepared:this.isPrepared,isSpontaneous:this.isSpontaneous,isFlexible:this.isFlexible,isInnate:this.isInnate,isFocusPool:this.isFocusPool,isRitual:this.isRitual,flexibleAvailable,levels:results,spellPrepList}}prepareActorData(){const actor=this.actor;if(actor instanceof _actor_1.CharacterPF2e){const{traditions}=actor.data.data.proficiencies,tradition=this.tradition,rank=this.data.data.proficiency.value;traditions[tradition].rank=Math.max(0,rank,traditions[tradition].rank)}}async _preUpdate(data,options,user){var _a;if(null===(_a=data.data)||void 0===_a?void 0:_a.slots)for(const key of[0,1,2,3,4,5,6,7,8,9,10]){const slotKey=`slot${key}`,slotData=data.data.slots[slotKey];if(slotData&&("max"in slotData&&(slotData.max=Math.max(Number(slotData.max)||0,0)),"value"in slotData)){const max="max"in slotData?Number(null==slotData?void 0:slotData.max)||0:this.data.data.slots[slotKey].max;slotData.value=Math.clamped(Number(slotData.value),0,max)}}await super._preUpdate(data,options,user)}}exports.SpellcastingEntryPF2e=SpellcastingEntryPF2e},73041:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TrickMagicItemEntry=exports.TRICK_MAGIC_SKILLS=void 0;const modifiers_1=__webpack_require__(27324),statistic_1=__webpack_require__(77486);exports.TRICK_MAGIC_SKILLS=["arc","nat","occ","rel"];const TrickMagicTradition={arc:"arcane",nat:"primal",occ:"occult",rel:"religion"};exports.TrickMagicItemEntry=class{constructor(actor,skill){const{abilities}=actor.data.data,{ability,value}=["int","wis","cha"].map((ability=>({ability,value:abilities[ability].value}))).reduce(((highest,next)=>next.value>highest.value?next:highest));this.ability=ability;const tradition=TrickMagicTradition[skill],skillRank=actor.data.data.skills[skill].rank,baseModifiers=[modifiers_1.AbilityModifier.fromScore(ability,value),modifiers_1.ProficiencyModifier.fromLevelAndRank(actor.level,Math.max(0,skillRank-2))];this.statistic=new statistic_1.Statistic(actor,{name:game.i18n.format(`PF2E.SpellAttack.${tradition}`),modifiers:baseModifiers,check:{type:"spell-attack-roll"},dc:{}})}async cast(spell,options={}){var _a;const level=null!==(_a=options.level)&&void 0!==_a?_a:spell.heightenedLevel;try{spell.trickMagicEntry=this,await spell.toMessage(void 0,{data:{spellLvl:level}})}finally{spell.trickMagicEntry=void 0}}}},2410:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TreasureData=void 0;const data_1=__webpack_require__(10530);class TreasureData extends data_1.BasePhysicalItemData{}exports.TreasureData=TreasureData,TreasureData.DEFAULT_ICON="systems/pf2e/icons/default-icons/treasure.svg"},71046:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.attemptToRemoveCoinsByValue=exports.sellTreasure=exports.sellAllTreasure=exports.removeCoins=exports.addCoins=exports.coinCompendiumIds=exports.calculateWealth=exports.calculateValueOfCurrency=exports.calculateTotalWealth=exports.multiplyCoinValue=exports.extractPriceFromItem=exports.combineCoins=exports.toCoins=exports.coinsToString=exports.coinValueInCopper=exports.DENOMINATIONS=void 0;const _util_1=__webpack_require__(6945),helpers_1=__webpack_require__(44252);function coinValueInCopper(coins){return coins.cp+10*coins.sp+100*coins.gp+1e3*coins.pp}function toCoins(denomination,value){return{pp:"pp"===denomination?value:0,gp:"gp"===denomination?value:0,sp:"sp"===denomination?value:0,cp:"cp"===denomination?value:0}}function combineCoins(first,second){return{pp:first.pp+second.pp,gp:first.gp+second.gp,sp:first.sp+second.sp,cp:first.cp+second.cp}}function extractPriceFromItem(itemData,quantity=itemData.data.quantity.value){const priceTag=String(itemData.data.price.value).trim().replace(/,/g,""),match=/^(\d+)\s*([pgsc]p)$/.exec(priceTag);if(match){const[value,denomination]=match.slice(1,3);return toCoins(denomination,(Number(value)||0)*quantity)}return toCoins("gp",0)}function calculateWealthForCategory(items,category){const toCalculate=items.filter((itemData=>(0,helpers_1.isPhysicalData)(itemData)&&(game.user.isGM||"identified"===itemData.data.identification.status)));return"treasure"===category?function(items){return items.filter((itemData=>{var _a,_b,_c,_d;return"treasure"===itemData.type&&void 0!==(null===(_b=null===(_a=null==itemData?void 0:itemData.data)||void 0===_a?void 0:_a.denomination)||void 0===_b?void 0:_b.value)&&null!==(null===(_d=null===(_c=null==itemData?void 0:itemData.data)||void 0===_c?void 0:_c.denomination)||void 0===_d?void 0:_d.value)})).map((item=>{var _a,_b,_c,_d,_e,_f;const value=(null!==(_c=null===(_b=null===(_a=item.data)||void 0===_a?void 0:_a.value)||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:1)*(null!==(_f=null===(_e=null===(_d=item.data)||void 0===_d?void 0:_d.quantity)||void 0===_e?void 0:_e.value)&&void 0!==_f?_f:1);return toCoins(item.data.denomination.value,value)})).reduce(combineCoins,{pp:0,gp:0,sp:0,cp:0})}(toCalculate):toCalculate.filter((item=>item.type===category)).map((item=>extractPriceFromItem(item))).reduce(combineCoins,{pp:0,gp:0,sp:0,cp:0})}function calculateValueOfCurrency(items){return items.filter((item=>{var _a,_b,_c;return"treasure"===item.type&&"coins"===(null===(_a=item.data.stackGroup)||void 0===_a?void 0:_a.value)&&void 0!==(null===(_b=item.data.denomination)||void 0===_b?void 0:_b.value)&&null!==(null===(_c=item.data.denomination)||void 0===_c?void 0:_c.value)})).map((item=>{const value=(Number(item.data.value.value)||0)*item.data.quantity.value;return toCoins(item.data.denomination.value,value)})).reduce(combineCoins,{pp:0,gp:0,sp:0,cp:0})}function isTopLevelCoin(itemData,currencies){var _a;return"treasure"===itemData.type&&1===itemData.data.value.value&&"coins"===itemData.data.stackGroup.value&&null===itemData.data.containerId.value&&currencies.has(null===(_a=itemData.data.denomination)||void 0===_a?void 0:_a.value)}async function addFromCompendium(actor,compendiumId,quantity){const pack=game.packs.find((p=>"pf2e.equipment-srd"===p.collection));if(!pack)throw Error("unable to get pack!");const item=await pack.getDocument(compendiumId);"treasure"===(null==item?void 0:item.data.type)&&(item.data.update({"data.quantity.value":quantity}),await actor.createEmbeddedDocuments("Item",[item.toObject()]))}async function increaseItemQuantity(item,quantity){"treasure"===item.data.type&&await item.update({"data.quantity.value":item.quantity+quantity})}async function decreaseItemQuantity(items,quantityToRemove){var e_1,_a;const itemsToDelete=[];try{for(var items_1_1,items_1=__asyncValues(items);!(items_1_1=await items_1.next()).done;){const item=items_1_1.value;if(0===quantityToRemove)break;const currentQuantity=item.quantity;if(item.quantity>quantityToRemove){await item.update({"data.quantity.value":currentQuantity-quantityToRemove});break}itemsToDelete.push(item),quantityToRemove-=currentQuantity}}catch(e_1_1){e_1={error:e_1_1}}finally{try{items_1_1&&!items_1_1.done&&(_a=items_1.return)&&await _a.call(items_1)}finally{if(e_1)throw e_1.error}}if(itemsToDelete.length>0){const actor=itemsToDelete[0].parent;await actor.deleteEmbeddedDocuments("Item",itemsToDelete.map((item=>item.id)))}quantityToRemove>0&&console.warn("Attempted to remove more coinage than exists")}exports.DENOMINATIONS=["cp","sp","gp","pp"],exports.coinValueInCopper=coinValueInCopper,exports.coinsToString=function({cp=0,sp=0,gp=0,pp=0}){const coins={cp,sp,gp,pp};if(exports.DENOMINATIONS.every((denomination=>0===coins[denomination])))return"0 gp";const denomination=[...exports.DENOMINATIONS].reverse().reduce(((highest,denomination)=>coins[denomination]>0?denomination:highest));return`${{pp:coins.pp,gp:10*coins.pp+coins.gp,sp:100*coins.pp+10*coins.gp+coins.sp,cp:coinValueInCopper(coins)}[denomination]} ${denomination}`},exports.toCoins=toCoins,exports.combineCoins=combineCoins,exports.extractPriceFromItem=extractPriceFromItem,exports.multiplyCoinValue=function(coins,factor){if(factor%1==0)return{pp:coins.pp*factor,gp:coins.gp*factor,sp:coins.sp*factor,cp:coins.cp*factor};{const pp=coins.pp*factor,gp=coins.gp*factor+pp%1*10,sp=coins.sp*factor+gp%1*10,cp=coins.cp*factor+sp%1*10;return{pp:Math.floor(pp),gp:Math.floor(gp),sp:Math.floor(sp),cp:Math.floor(cp)}}},exports.calculateTotalWealth=function(items){return["weapon","armor","equipment","consumable","treasure","backpack"].map((itemType=>calculateWealthForCategory(items,itemType))).reduce(combineCoins,{pp:0,gp:0,sp:0,cp:0})},exports.calculateValueOfCurrency=calculateValueOfCurrency,exports.calculateWealth=function(items){return calculateWealthForCategory(items.filter((itemData=>"treasure"===itemData.type)),"treasure")},exports.coinCompendiumIds={pp:"JuNPeK5Qm1w6wpb4",gp:"B6B7tBWJSqOBz5zz",sp:"5Ew82vBF9YfaiY9f",cp:"lzJ8AVhRcbFul5fh"};const CURRENCIES=new Set(["pp","gp","sp","cp"]);async function addCoins(actor,{coins={pp:0,gp:0,sp:0,cp:0},combineStacks=!1}={}){var e_2,_a,_b;const topLevelCoins=actor.itemTypes.treasure.filter((item=>combineStacks&&isTopLevelCoin(item.data,CURRENCIES))),coinsByDenomination=(0,_util_1.groupBy)(topLevelCoins,(item=>"treasure"===item.data.type&&item.data.data.denomination.value));try{for(var CURRENCIES_1_1,CURRENCIES_1=__asyncValues(CURRENCIES);!(CURRENCIES_1_1=await CURRENCIES_1.next()).done;){const denomination=CURRENCIES_1_1.value,quantity=coins[denomination];if(quantity>0){const coins=null===(_b=coinsByDenomination.get(denomination))||void 0===_b?void 0:_b[0];if(coins)await increaseItemQuantity(coins,quantity);else{const compendiumId=exports.coinCompendiumIds[denomination];await addFromCompendium(actor,compendiumId,quantity)}}}}catch(e_2_1){e_2={error:e_2_1}}finally{try{CURRENCIES_1_1&&!CURRENCIES_1_1.done&&(_a=CURRENCIES_1.return)&&await _a.call(CURRENCIES_1)}finally{if(e_2)throw e_2.error}}}async function removeCoins(actor,{coins={pp:0,gp:0,sp:0,cp:0}}={}){var e_3,_a;const topLevelCoins=actor.itemTypes.treasure.filter((item=>isTopLevelCoin(item.data,CURRENCIES))),coinsByDenomination=(0,_util_1.groupBy)(topLevelCoins,(item=>item.data.data.denomination.value));try{for(var CURRENCIES_2_1,CURRENCIES_2=__asyncValues(CURRENCIES);!(CURRENCIES_2_1=await CURRENCIES_2.next()).done;){const denomination=CURRENCIES_2_1.value,quantity=coins[denomination];if(quantity>0){const coins=coinsByDenomination.get(denomination);coins&&await decreaseItemQuantity(coins,quantity)}}}catch(e_3_1){e_3={error:e_3_1}}finally{try{CURRENCIES_2_1&&!CURRENCIES_2_1.done&&(_a=CURRENCIES_2.return)&&await _a.call(CURRENCIES_2)}finally{if(e_3)throw e_3.error}}}exports.addCoins=addCoins,exports.removeCoins=removeCoins,exports.sellAllTreasure=async function(actor){const treasureIds=[],coins=actor.itemTypes.treasure.filter((item=>void 0!==item.data.data.denomination.value&&null!==item.data.data.denomination.value&&"coins"!==item.data.data.stackGroup.value)).map((item=>{var _a,_b;treasureIds.push(item.id);const value=(null!==(_a=item.data.data.value.value)&&void 0!==_a?_a:1)*(null!==(_b=item.quantity)&&void 0!==_b?_b:1);return toCoins(item.data.data.denomination.value,value)})).reduce(combineCoins,{pp:0,gp:0,sp:0,cp:0});await actor.deleteEmbeddedDocuments("Item",treasureIds),await addCoins(actor,{coins,combineStacks:!0})},exports.sellTreasure=async function(actor,itemId){var _a,_b;const item=actor.physicalItems.get(itemId);if("treasure"===(null==item?void 0:item.data.type)&&void 0!==item.data.data.denomination.value&&null!==item.data.data.denomination.value&&"coins"!==item.data.data.stackGroup.value){const quantity=(null!==(_a=item.data.data.value.value)&&void 0!==_a?_a:1)*(null!==(_b=item.quantity)&&void 0!==_b?_b:1),coins=toCoins(item.data.data.denomination.value,quantity);await item.delete(),await addCoins(actor,{coins,combineStacks:!0})}},exports.attemptToRemoveCoinsByValue=async function({actor,coinsToRemove}){const actorCoins=calculateValueOfCurrency(actor.items.map((item=>item.data))),actorCoinsCopper=actorCoins.cp+10*actorCoins.sp+100*actorCoins.gp+1e3*actorCoins.pp;let valueToRemoveInCopper=coinsToRemove.cp+10*coinsToRemove.sp+100*coinsToRemove.gp+1e3*coinsToRemove.pp;if(valueToRemoveInCopper>actorCoinsCopper)return!1;const coinsToAdd={pp:0,gp:0,sp:0,cp:0};let coinsBroken=!1;if(valueToRemoveInCopper%10>actorCoins.cp)coinsToAdd.cp=10,coinsToRemove.cp=valueToRemoveInCopper%10,valueToRemoveInCopper+=10-coinsToRemove.cp,coinsBroken=!0;else{coinsToRemove.cp=valueToRemoveInCopper%10,valueToRemoveInCopper-=coinsToRemove.cp,actorCoins.cp-=coinsToRemove.cp;const extraCopper=10*Math.min(valueToRemoveInCopper/10,Math.trunc(actorCoins.cp/10));coinsToRemove.cp+=extraCopper,valueToRemoveInCopper-=extraCopper}if(valueToRemoveInCopper/10%10>actorCoins.sp)coinsToAdd.sp=10,coinsToRemove.sp=valueToRemoveInCopper/10%10,valueToRemoveInCopper+=100-10*coinsToRemove.sp,coinsBroken=!0;else{coinsToRemove.sp=valueToRemoveInCopper/10%10,valueToRemoveInCopper-=10*coinsToRemove.sp,actorCoins.sp-=coinsToRemove.sp;const extraSilver=10*Math.min(valueToRemoveInCopper/100,Math.trunc(actorCoins.sp/10));coinsToRemove.sp+=extraSilver,valueToRemoveInCopper-=10*extraSilver}if(valueToRemoveInCopper/100%10>actorCoins.gp)coinsToAdd.gp=10,coinsToRemove.gp=valueToRemoveInCopper/100%10,valueToRemoveInCopper+=1e3-100*coinsToRemove.gp,coinsBroken=!0;else{coinsToRemove.gp=valueToRemoveInCopper/100%10,valueToRemoveInCopper-=100*coinsToRemove.gp,actorCoins.gp-=coinsToRemove.gp;const extraGold=10*Math.min(valueToRemoveInCopper/1e3,Math.trunc(actorCoins.gp/10));coinsToRemove.gp+=extraGold,valueToRemoveInCopper-=100*extraGold}return coinsToRemove.pp=valueToRemoveInCopper/1e3,coinsBroken&&await addCoins(actor,{coins:coinsToAdd}),await removeCoins(actor,{coins:coinsToRemove}),!0}},14580:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TreasurePF2e=void 0;const physical_1=__webpack_require__(6560),data_1=__webpack_require__(2410);class TreasurePF2e extends physical_1.PhysicalItemPF2e{static get schema(){return data_1.TreasureData}prepareBaseData(){super.prepareBaseData();const systemData=this.data.data;if("coins"!==systemData.stackGroup.value){const value=systemData.value.value,denomination=systemData.denomination.value.trim();systemData.price.value=`${value} ${denomination}`}}getChatData(htmlOptions={}){const data=this.data.data,traits=this.traitChatData({});return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{traits}))}}exports.TreasurePF2e=TreasurePF2e},39530:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(15730),exports),__exportStar(__webpack_require__(2528),exports)},15730:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaponData=void 0;const data_1=__webpack_require__(10530);class WeaponData extends data_1.BasePhysicalItemData{}exports.WeaponData=WeaponData,WeaponData.DEFAULT_ICON="systems/pf2e/icons/default-icons/weapon.svg"},2528:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CROSSBOW_WEAPONS=exports.WEAPON_RANGES=exports.WEAPON_GROUPS=exports.RANGED_WEAPON_GROUPS=exports.MELEE_WEAPON_GROUPS=exports.WEAPON_CATEGORIES=void 0,exports.WEAPON_CATEGORIES=["unarmed","simple","martial","advanced"],exports.MELEE_WEAPON_GROUPS=["axe","brawling","club","flail","hammer","knife","pick","polearm","shield","spear","sword"],exports.RANGED_WEAPON_GROUPS=["bomb","bow","dart","firearm","sling"],exports.WEAPON_GROUPS=[...exports.MELEE_WEAPON_GROUPS,...exports.RANGED_WEAPON_GROUPS],exports.WEAPON_RANGES=[10,20,30,40,50,60,70,80,90,100,120,140,150,180,240,300],exports.CROSSBOW_WEAPONS=new Set(["alchemical-crossbow","crossbow","hand-crossbow","heavy-crossbow","repeating-crossbow","repeating-hand-crossbow","repeating-heavy-crossbow"])},14299:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaponPF2e=void 0;const physical_1=__webpack_require__(6560),runes_1=__webpack_require__(35847),localize_1=__webpack_require__(41332),data_1=__webpack_require__(39530),helpers_1=__webpack_require__(71046),_util_1=__webpack_require__(6945),materials_1=__webpack_require__(13416),bulk_1=__webpack_require__(47297),melee_1=__webpack_require__(17923),_actor_1=__webpack_require__(85530),data_2=__webpack_require__(69777),_item_1=__webpack_require__(10843);class WeaponPF2e extends physical_1.PhysicalItemPF2e{static get schema(){return data_1.WeaponData}isStackableWith(item){var _a;const equippedButStackable=["bomb","dart"].includes(null!==(_a=this.group)&&void 0!==_a?_a:"");return!((this.isEquipped||item.isEquipped)&&!equippedButStackable)&&super.isStackableWith(item)}get baseType(){return this.data.data.baseItem}get group(){return this.data.data.group}get category(){return this.data.data.category}get hands(){var _a;return null!==(_a={"worn-gloves":"0","held-in-one-hand":"1","held-in-one-plus-hands":"1+","held-in-two-hands":"2"}[this.data.data.usage.value])&&void 0!==_a?_a:"1"}get range(){return this.data.data.range}get isSpecific(){var _a,_b;return null!==(_b=null===(_a=this.data.data.specific)||void 0===_a?void 0:_a.value)&&void 0!==_b&&_b}get isMelee(){return null===this.range}get isRanged(){return null!==this.range}get ammo(){var _a,_b;const ammo=null===(_a=this.actor)||void 0===_a?void 0:_a.items.get(null!==(_b=this.data.data.selectedAmmoId)&&void 0!==_b?_b:"");return ammo instanceof _item_1.ConsumablePF2e?ammo:null}getItemRollOptions(prefix="weapon"){var _a,_b,_c;const actorSize=null===(_a=this.actor)||void 0===_a?void 0:_a.data.data.traits.size,oversized="unarmed"!==this.category&&!!(null==actorSize?void 0:actorSize.isSmallerThan(this.size,{smallIsMedium:!0}));return super.getItemRollOptions(prefix).concat(Object.entries({[`category:${this.category}`]:!0,[`group:${this.group}`]:!!this.group,[`base:${this.baseType}`]:!!this.baseType,[`hands:${this.hands}`]:"0"!==this.hands,[`material:${null===(_b=this.material)||void 0===_b?void 0:_b.type}`]:!!(null===(_c=this.material)||void 0===_c?void 0:_c.type),oversized,melee:this.isMelee,ranged:this.isRanged,magical:this.isMagical}).filter((([_key,isTrue])=>isTrue)).map((([key])=>`${prefix?`${prefix}:`:""}${key}`)),...this.data.data.traits.otherTags.map((tag=>`${prefix}tag:${tag}`)))}prepareBaseData(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s;super.prepareBaseData(),(_f=this.data.data).category||(_f.category="simple"),(_g=this.data.data).group||(_g.group=null),(_h=this.data.data).baseItem||(_h.baseItem=null),(_j=this.data.data.potencyRune).value||(_j.value=null),(_k=this.data.data.strikingRune).value||(_k.value=null),(_l=this.data.data.propertyRune1).value||(_l.value=null),(_m=this.data.data.propertyRune2).value||(_m.value=null),(_o=this.data.data.propertyRune3).value||(_o.value=null),(_p=this.data.data.propertyRune4).value||(_p.value=null),this.data.data.traits.otherTags=[];const traitSet=this.traits;if(data_1.RANGED_WEAPON_GROUPS.includes(null!==(_a=this.group)&&void 0!==_a?_a:"")||traitSet.has("thrown")){null!==(_b=(_q=this.data.data).range)&&void 0!==_b||(_q.range=10),traitSet.has("thrown")&&(this.data.data.reload.value="-"),traitSet.has("combination")&&(this.data.data.group="firearm");const crossbowWeapons=data_1.CROSSBOW_WEAPONS;"bow"===this.group&&crossbowWeapons.has(null!==(_c=this.baseType)&&void 0!==_c?_c:"")&&this.data.data.traits.otherTags.push("crossbow")}this.data.data.traits.value.some((trait=>/^thrown-\d+$/.test(trait)))&&(this.data.data.range=null),null!==(_d=(_r=this.data.flags.pf2e).comboMeleeUsage)&&void 0!==_d||(_r.comboMeleeUsage=!1),this.data.data.meleeUsage&&(null!==(_e=(_s=this.data.data.meleeUsage).traits)&&void 0!==_e||(_s.traits=[])),this.processMaterialAndRunes()}prepareDerivedData(){var _a;super.prepareDerivedData();const systemData=this.data.data,{potencyRune,strikingRune,propertyRune1,propertyRune2,propertyRune3,propertyRune4}=systemData;this.data.data.runes={potency:null!==(_a=potencyRune.value)&&void 0!==_a?_a:0,striking:(0,runes_1.getStrikingDice)({strikingRune}),property:[propertyRune1.value,propertyRune2.value,propertyRune3.value,propertyRune4.value].filter((rune=>!!rune))}}processMaterialAndRunes(){var _a,_b,_c;const systemData=this.data.data,runesData=this.getRunesData(),baseTraits=systemData.traits.value,traitsFromRunes=runesData.flatMap((datum=>datum.traits)),hasTraditionTraits=data_2.MAGIC_TRADITIONS.some((trait=>baseTraits.concat(traitsFromRunes).includes(trait))),magicTraits=traitsFromRunes.length>0&&!hasTraditionTraits?["magical"]:[];systemData.traits.value=Array.from(new Set([...baseTraits,...traitsFromRunes,...magicTraits])),systemData.traits.otherTags.push(...runesData.flatMap((runeData=>{var _a;return null!==(_a=runeData.otherTags)&&void 0!==_a?_a:[]})));const materialData=this.getMaterialData();if(!this.isMagical&&!materialData||this.isSpecific)return;const materialPrice=null!==(_a=null==materialData?void 0:materialData.price)&&void 0!==_a?_a:0,bulk=materialPrice&&Math.max(Math.ceil((0,bulk_1.toBulkItem)(this.data).bulk.normal),1),materialValue=(0,helpers_1.toCoins)("gp",materialPrice+bulk*materialPrice/10),runeValue=runesData.reduce(((sum,rune)=>sum+rune.price),0),withRunes=(0,helpers_1.extractPriceFromItem)({data:{quantity:{value:1},price:{value:`${runeValue} gp`}}}),modifiedPrice=(0,helpers_1.combineCoins)(withRunes,materialValue),basePrice=(0,helpers_1.extractPriceFromItem)(this.data,1),highestPrice=(0,helpers_1.coinValueInCopper)(modifiedPrice)>(0,helpers_1.coinValueInCopper)(basePrice)?modifiedPrice:basePrice;systemData.price.value=(0,helpers_1.coinsToString)(highestPrice);const baseLevel=this.level;systemData.level.value=runesData.map((runeData=>runeData.level)).concat(null!==(_b=null==materialData?void 0:materialData.level)&&void 0!==_b?_b:0).reduce(((highest,level)=>level>highest?level:highest),baseLevel);const rarityOrder={common:0,uncommon:1,rare:2,unique:3},baseRarity=this.rarity;systemData.traits.rarity.value=runesData.map((runeData=>runeData.rarity)).concat(null!==(_c=null==materialData?void 0:materialData.rarity)&&void 0!==_c?_c:"common").reduce(((highest,rarity)=>rarityOrder[rarity]>rarityOrder[highest]?rarity:highest),baseRarity),this.data.name=this.generateMagicName()}getRunesData(){var _a,_b,_c,_d,_e,_f;const systemData=this.data.data;return[runes_1.WEAPON_VALUATION_DATA.potency[null!==(_a=systemData.potencyRune.value)&&void 0!==_a?_a:0],runes_1.WEAPON_VALUATION_DATA.striking[null!==(_b=systemData.strikingRune.value)&&void 0!==_b?_b:""],CONFIG.PF2E.runes.weapon.property[null!==(_c=systemData.propertyRune1.value)&&void 0!==_c?_c:""],CONFIG.PF2E.runes.weapon.property[null!==(_d=systemData.propertyRune2.value)&&void 0!==_d?_d:""],CONFIG.PF2E.runes.weapon.property[null!==(_e=systemData.propertyRune3.value)&&void 0!==_e?_e:""],CONFIG.PF2E.runes.weapon.property[null!==(_f=systemData.propertyRune4.value)&&void 0!==_f?_f:""]].filter((datum=>!!datum))}getMaterialData(){var _a,_b;const material=this.material;return materials_1.MATERIAL_VALUATION_DATA[null!==(_a=null==material?void 0:material.type)&&void 0!==_a?_a:""][null!==(_b=null==material?void 0:material.grade)&&void 0!==_b?_b:"low"]}getChatData(htmlOptions={}){const traits=this.traitChatData(CONFIG.PF2E.weaponTraits);return this.processChatData(htmlOptions,Object.assign(Object.assign({},super.getChatData()),{traits,properties:[CONFIG.PF2E.weaponCategories[this.category],this.range?`PF2E.TraitRangeIncrement${this.range}`:null]}))}generateMagicName(){var _a,_b,_c,_d,_e,_f,_g,_h;const sluggifiedName=(0,_util_1.sluggify)(this.data._source.name);if(this.isSpecific||sluggifiedName!==this.baseType)return this.data.name;const systemData=this.data.data,translations=localize_1.LocalizePF2e.translations.PF2E,baseWeapons=translations.Weapon.Base,potencyRune=systemData.potencyRune.value,strikingRune=systemData.strikingRune.value,propertyRunes={1:null!==(_b=null===(_a=systemData.propertyRune1)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:null,2:null!==(_d=null===(_c=systemData.propertyRune2)||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:null,3:null!==(_f=null===(_e=systemData.propertyRune3)||void 0===_e?void 0:_e.value)&&void 0!==_f?_f:null,4:null!==(_h=null===(_g=systemData.propertyRune4)||void 0===_g?void 0:_g.value)&&void 0!==_h?_h:null},params={base:this.baseType?baseWeapons[this.baseType]:this.name,material:this.material&&game.i18n.localize(CONFIG.PF2E.preciousMaterials[this.material.type]),potency:potencyRune,striking:strikingRune&&game.i18n.localize(CONFIG.PF2E.weaponStrikingRunes[strikingRune]),property1:propertyRunes[1]&&game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[propertyRunes[1]]),property2:propertyRunes[2]&&game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[propertyRunes[2]]),property3:propertyRunes[3]&&game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[propertyRunes[3]]),property4:propertyRunes[4]&&game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[propertyRunes[4]])},formatStrings=translations.Item.Weapon.GeneratedName,formatString=(()=>{const key=[params.potency&&"Potency",params.striking&&"Striking",params.property4?"FourProperties":params.property3?"ThreeProperties":params.property2?"TwoProperties":params.property1?"OneProperty":null,params.material&&"Material"].filter((keyPart=>!!keyPart)).join("")||null;return key&&formatStrings[key]})();return formatString?game.i18n.format(formatString,params):this.name}getMystifiedData(status,{source=!1}={}){const mystifiedData=super.getMystifiedData(status);return source&&(mystifiedData.name=this.data._source.name),mystifiedData}generateUnidentifiedName({typeOnly=!1}={typeOnly:!1}){var _a;const translations=localize_1.LocalizePF2e.translations.PF2E,base=this.baseType?translations.Weapon.Base[this.baseType]:null,group=this.group?CONFIG.PF2E.weaponGroups[this.group]:null,itemType=game.i18n.localize(null!==(_a=null!=base?base:group)&&void 0!==_a?_a:"ITEM.TypeWeapon");if(typeOnly)return itemType;const formatString=localize_1.LocalizePF2e.translations.PF2E.identification.UnidentifiedItem;return game.i18n.format(formatString,{item:itemType})}toMeleeUsage(){const{meleeUsage}=this.data.data;if(!meleeUsage||this.data.flags.pf2e.comboMeleeUsage)return null;const overlay={data:{damage:{damageType:meleeUsage.damage.type,dice:1,die:meleeUsage.damage.die},group:meleeUsage.group,range:null,traits:{value:meleeUsage.traits.concat("combination")}},flags:{pf2e:{comboMeleeUsage:!0}}};return this.clone(overlay)}toNPCAttack(){if(!(this.actor instanceof _actor_1.NPCPF2e))throw(0,_util_1.ErrorPF2e)("Melee items can only be generated for NPCs");const damageRoll=(()=>{const weaponDamage=this.data.data.damage,ability=this.range?"dex":"str",modifier=this.actor.data.data.abilities[ability].mod,actorLevel=this.actor.level,constant=modifier>0?` + ${modifier}`:modifier<0?" - "+-1*modifier:"";return{damage:`${[1,2,3,4].reduce(((closest,dice)=>Math.abs(dice-Math.round(actorLevel/4))<Math.abs(closest-Math.round(actorLevel/4))?dice:closest))}${weaponDamage.die}${constant}`,damageType:weaponDamage.damageType}})(),source={name:this.name,type:"melee",data:{bonus:{value:Math.ceil(3*this.actor.level/2)-1},damageRolls:{[randomID()]:damageRoll},weaponType:{value:this.isMelee?"melee":"ranged"}}};return new melee_1.MeleePF2e(source,{parent:this.actor})}}exports.WeaponPF2e=WeaponPF2e},9053:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaponSheetPF2e=void 0;const values_1=__webpack_require__(67189),materials_1=__webpack_require__(13416),sheet_1=__webpack_require__(38719),helpers_1=__webpack_require__(71046),_util_1=__webpack_require__(6945),localize_1=__webpack_require__(41332),data_1=__webpack_require__(39530);class WeaponSheetPF2e extends sheet_1.PhysicalItemSheetPF2e{async getData(){var _a,_b,_c,_d,_e;const sheetData=await super.getData(),potencyRuneValue="ABPFundamentalPotency"===game.settings.get("pf2e","automaticBonusVariant")?4:null!==(_a=sheetData.data.potencyRune.value)&&void 0!==_a?_a:0,propertyRuneSlots=[[1,sheetData.data.propertyRune1],[2,sheetData.data.propertyRune2],[3,sheetData.data.propertyRune3],[4,sheetData.data.propertyRune4]];sheetData.propertyRuneSlots=propertyRuneSlots.filter((([slotNumber,slot],idx)=>{var _a,_b;return!(!(slotNumber<=potencyRuneValue||"orichalcum"===sheetData.data.preciousMaterial.value)||1!==slotNumber&&!(null===(_a=sheetData.data[`propertyRune${idx}`])||void 0===_a?void 0:_a.value)||(null===(_b=sheetData.data.specific)||void 0===_b?void 0:_b.value)&&null===slot.value)})).map((([slotNumber,slot])=>Object.assign(Object.assign({},slot),{name:`data.propertyRune${slotNumber}.value`,label:game.i18n.localize(`PF2E.PropertyRuneLabel${slotNumber}`),number:slotNumber})));const baseData=this.item.toObject();sheetData.data.traits.rarity.value=baseData.data.traits.rarity.value;const hintText=localize_1.LocalizePF2e.translations.PF2E.Item.Weapon.FromMaterialAndRunes,adjustedLevelHint=this.item.level!==baseData.data.level.value?game.i18n.format(hintText,{property:game.i18n.localize("PF2E.LevelLabel"),value:this.item.level}):null,adjustedPriceHint=(()=>(0,helpers_1.coinValueInCopper)((0,helpers_1.extractPriceFromItem)(baseData))!==(0,helpers_1.coinValueInCopper)((0,helpers_1.extractPriceFromItem)(sheetData.item))?game.i18n.format(hintText,{property:game.i18n.localize("PF2E.PriceLabel"),value:this.item.price}):null)(),preciousMaterials=deepClone(materials_1.MATERIAL_VALUATION_DATA);delete preciousMaterials[""],delete preciousMaterials.dragonhide;for(const materialKey of values_1.PRECIOUS_MATERIAL_TYPES){const materialData=preciousMaterials[materialKey];if(materialData){materialData.label=game.i18n.localize(CONFIG.PF2E.preciousMaterials[materialKey]);for(const gradeKey of values_1.PRECIOUS_MATERIAL_GRADES){const grade=materialData[gradeKey];grade&&(grade.label=game.i18n.localize(CONFIG.PF2E.preciousMaterialGrades[gradeKey]),grade.selected=(null===(_b=this.item.material)||void 0===_b?void 0:_b.type)===materialKey&&this.item.material.grade===gradeKey)}}}const groups=Object.fromEntries(Object.entries(CONFIG.PF2E.weaponGroups).map((([slug,localizeKey])=>[slug,game.i18n.localize(localizeKey)])).sort(((damageA,damageB)=>damageA[1].localeCompare(damageB[1])))),damageTypes=Object.fromEntries(Object.entries(CONFIG.PF2E.damageTypes).map((([slug,localizeKey])=>[slug,game.i18n.localize(localizeKey)])).sort(((damageA,damageB)=>damageA[1].localeCompare(damageB[1])))),weaponPropertyRunes=Object.fromEntries(Object.entries(CONFIG.PF2E.runes.weapon.property).map((([slug,data])=>[slug,game.i18n.localize(data.name)])).sort(((runeA,runeB)=>runeA[1].localeCompare(runeB[1])))),traitSet=this.item.traits,isComboWeapon=traitSet.has("combination"),weaponRanges=data_1.WEAPON_RANGES.reduce(((ranges,range)=>Object.assign(Object.assign({},ranges),{[range]:game.i18n.format("PF2E.WeaponRangeN",{range})})),{}),mandatoryRanged=data_1.RANGED_WEAPON_GROUPS.includes(null!==(_c=this.item.group)&&void 0!==_c?_c:"")||["combination","thrown","volley-20","volley-30","volley-50"].some((trait=>traitSet.has(trait))),mandatoryMelee=sheetData.data.traits.value.some((trait=>/^thrown-\d+$/.test(trait))),meleeUsage=null!==(_d=sheetData.data.meleeUsage)&&void 0!==_d?_d:{group:"knife",damage:{type:"piercing",die:"d4"},traits:[]};return Object.assign(Object.assign({},sheetData),{preciousMaterials,weaponPotencyRunes:CONFIG.PF2E.weaponPotencyRunes,weaponStrikingRunes:CONFIG.PF2E.weaponStrikingRunes,weaponPropertyRunes,traits:this.prepareOptions(CONFIG.PF2E.weaponTraits,sheetData.item.data.traits,{selectedOnly:!0}),otherTags:this.prepareOptions(CONFIG.PF2E.otherWeaponTags,sheetData.item.data.traits.otherTags,{selectedOnly:!0}),adjustedLevelHint,adjustedPriceHint,baseLevel:baseData.data.level.value,baseRarity:baseData.data.traits.rarity.value,basePrice:baseData.data.price.value,categories:CONFIG.PF2E.weaponCategories,groups,baseTypes:localize_1.LocalizePF2e.translations.PF2E.Weapon.Base,itemBonuses:CONFIG.PF2E.itemBonuses,damageDie:CONFIG.PF2E.damageDie,damageDice:CONFIG.PF2E.damageDice,conditionTypes:CONFIG.PF2E.conditionTypes,damageTypes,weaponRanges,mandatoryMelee,mandatoryRanged,weaponReload:CONFIG.PF2E.weaponReload,weaponMAP:CONFIG.PF2E.weaponMAP,bulkTypes:CONFIG.PF2E.bulkTypes,sizes:CONFIG.PF2E.actorSizes,isBomb:"bomb"===this.item.group,isComboWeapon,meleeGroups:CONFIG.PF2E.meleeWeaponGroups,meleeUsage,meleeUsageTraits:this.prepareOptions(CONFIG.PF2E.weaponTraits,null!==(_e=meleeUsage.traits)&&void 0!==_e?_e:[],{selectedOnly:!0})})}activateListeners($html){var _a;super.activateListeners($html),$html.find("i.fa-info-circle.small[title]").tooltipster({maxWidth:275,position:"right",theme:"crb-hover",contentAsHTML:!0}),$html.find("i.fa-info-circle.large[title]").tooltipster({maxWidth:400,theme:"crb-hover",contentAsHTML:!0});const $otherTagsHint=$html.find("i.other-tags-hint");$otherTagsHint.tooltipster({maxWidth:350,theme:"crb-hover",content:game.i18n.localize(null!==(_a=$otherTagsHint.attr("title"))&&void 0!==_a?_a:"")})}async _updateObject(event,formData){var _a,_b,_c;const weapon=this.item;formData["data.potencyRune.value"]||(formData["data.potencyRune.value"]=0);for(const slotNumber of[1,2,3,4])formData[_c=`data.propertyRune${slotNumber}.value`]||(formData[_c]=null);if(formData["data.range"]||(formData["data.range"]=null),"string"==typeof formData.preciousMaterial){const typeGrade=formData.preciousMaterial.split("-");(0,_util_1.objectHasKey)(CONFIG.PF2E.preciousMaterials,null!==(_a=typeGrade[0])&&void 0!==_a?_a:"")&&(0,_util_1.objectHasKey)(CONFIG.PF2E.preciousMaterialGrades,null!==(_b=typeGrade[1])&&void 0!==_b?_b:"")?(formData["data.preciousMaterial.value"]=typeGrade[0],formData["data.preciousMaterialGrade.value"]=typeGrade[1]):(formData["data.preciousMaterial.value"]=null,formData["data.preciousMaterialGrade.value"]=null);const isSpecific=formData["data.specific.value"];isSpecific!==weapon.isSpecific&&(!0===isSpecific?(formData["data.specific.price"]=formData["data.price.value"],formData["data.specific.material"]=weapon.material,formData["data.specific.runes"]={potency:formData["data.potencyRune.value"],striking:formData["data.strikingRune.value"]}):!1===isSpecific&&(formData["data.specific.-=material"]=null,formData["data.specific.-=runes"]=null)),delete formData.preciousMaterial}weapon.data.data.meleeUsage&&!this.item.traits.has("combination")&&(formData["data.-=meleeUsage"]=null),super._updateObject(event,formData)}}exports.WeaponSheetPF2e=WeaponSheetPF2e},46047:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.JournalSheetPF2e=void 0;const inline_roll_links_1=__webpack_require__(27542);__webpack_require__(3314);class JournalSheetPF2e extends JournalSheet{static get theme(){return game.settings.get("pf2e","journalEntryTheme")}static get defaultOptions(){const options=super.defaultOptions;return"pf2eTheme"===this.theme&&options.classes.push("pf2e"),options}activateListeners($html){super.activateListeners($html),inline_roll_links_1.InlineRollsLinks.listen($html)}activateEditor(name,options={},initialContent=""){var _a;const editor=this.editors[name];if(!editor)throw new Error(`${name} is not a registered editor name!`);(options=foundry.utils.mergeObject(editor.options,options)).height=null===(_a=options.target)||void 0===_a?void 0:_a.offsetHeight,TextEditor.create(options,initialContent||editor.initial).then((mce=>{"pf2eTheme"===JournalSheetPF2e.theme&&mce.getBody().classList.add("pf2e"),editor.mce=mce,editor.changed=!1,editor.active=!0,mce.focus(),mce.on("change",(()=>editor.changed=!0))}))}}exports.JournalSheetPF2e=JournalSheetPF2e},49151:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MacroPF2e=void 0;class MacroPF2e extends Macro{get visible(){return this.permission>=CONST.ENTITY_PERMISSIONS.OBSERVER}}exports.MacroPF2e=MacroPF2e},54310:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MigrationBase=void 0;exports.MigrationBase=class{constructor(){this.version=this.constructor.version,this.requiresFlush=!1}async updateActor(_actor){}async updateItem(_item,_actor){}}},63051:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migrations=exports.MigrationRunner=void 0;const runner_1=__webpack_require__(46842),_600_reach_1=__webpack_require__(3731),_601_migrate_effect_compendia_1=__webpack_require__(48324),_602_update_diehard_feat_1=__webpack_require__(33999),_603_reset_quick_roll_default_1=__webpack_require__(66171),_604_fix_class_items_1=__webpack_require__(92887),_605_catch_up_to_template_json_1=__webpack_require__(19032),_606_signature_spells_1=__webpack_require__(97591),_607_melee_item_damage_rolls_1=__webpack_require__(35650),_608_delete_persisted_kits_1=__webpack_require__(88146),_609_loot_actor_traits_1=__webpack_require__(65596),_610_set_heritage_feat_type_1=__webpack_require__(83512),_611_update_toughness_mountains_stoutness_1=__webpack_require__(39127),_612_normalize_rarities_1=__webpack_require__(25483),_613_remove_ammo_charges_1=__webpack_require__(90736),_614_numify_melee_bonuses_1=__webpack_require__(34788),_615_remove_instinct_trait_1=__webpack_require__(69506),_616_migrate_feat_prerequisites_1=__webpack_require__(7115),_617_fix_user_flags_1=__webpack_require__(39281),_618_migrate_item_img_paths_1=__webpack_require__(14740),_619_remove_wand_and_scroll_tradition_1=__webpack_require__(91944),_620_rename_to_webp_1=__webpack_require__(58708),_621_remove_config_spell_schools_1=__webpack_require__(42712),_622_remove_old_token_effect_icons_1=__webpack_require__(32476),_623_numify_potency_runes_1=__webpack_require__(63267),_624_removed_token_effect_icon_flags_1=__webpack_require__(24636),_625_ensure_presence_of_saves_1=__webpack_require__(7715),_626_update_spell_category_1=__webpack_require__(4099),_627_lowercase_spell_saves_1=__webpack_require__(63023),_628_update_identification_data_1=__webpack_require__(90606),_629_set_base_items_1=__webpack_require__(19691),_630_fix_talisman_spelling_1=__webpack_require__(8004),_631_fix_sense_rule_element_selector_1=__webpack_require__(21962),_632_delete_orphaned_spells_1=__webpack_require__(34441),_633_delete_unidentified_traits_1=__webpack_require__(76937),_634_purge_martial_items_1=__webpack_require__(98489),_635_numify_ac_and_quantity_1=__webpack_require__(69222),_636_numify_armor_data_1=__webpack_require__(95184),_637_clean_melee_items_1=__webpack_require__(87245),_638_spell_components_1=__webpack_require__(75650),_639_normalize_level_and_price_1=__webpack_require__(2769),_640_cantrips_are_not_zero_level_1=__webpack_require__(90794),_641_sovereign_steel_value_1=__webpack_require__(26121),_642_track_schema_version_1=__webpack_require__(4063),_643_hazard_level_1=__webpack_require__(62371),_644_spellcasting_category_1=__webpack_require__(69080),_645_token_image_size_1=__webpack_require__(2876),_646_update_inline_links_1=__webpack_require__(11338),_647_fix_pc_senses_1=__webpack_require__(30161),_648_remove_invested_property_1=__webpack_require__(79483),_649_focus_to_actor_1=__webpack_require__(26888),_650_stringify_weapon_properties_1=__webpack_require__(24002),_651_ephemeral_focus_pool_1=__webpack_require__(50813),_652_kill_halcyon_tradition_1=__webpack_require__(35673),_653_aes_to_res_1=__webpack_require__(67060),_654_action_type_count_1=__webpack_require__(6029),_655_creature_token_sizes_1=__webpack_require__(49198),_656_other_focus_pool_sources_1=__webpack_require__(41387),_657_remove_set_property_1=__webpack_require__(43453),_658_monk_unarmored_proficiency_1=__webpack_require__(50169),_659_multiple_damage_rows_1=__webpack_require__(77636),_660_derived_spell_traits_1=__webpack_require__(46105),_661_numify_vehicle_dimensions_1=__webpack_require__(10335),_662_link_to_actor_size_defaults_1=__webpack_require__(63724),_663_fix_spell_damage_1=__webpack_require__(47655),_664_delete_cub_conditions_1=__webpack_require__(69417),_665_handwraps_corrections_1=__webpack_require__(46544),_666_usage_and_stowing_containers_1=__webpack_require__(69e3),_667_hp_subproperties_1=__webpack_require__(91543),_668_armor_speed_penalty_1=__webpack_require__(25409),_669_npc_attack_effects_1=__webpack_require__(93322),_670_no_custom_trait_1=__webpack_require__(3725),_670_ancestry_vision_1=__webpack_require__(3892),_671_no_pc_items_on_non_pcs_1=__webpack_require__(55986),_672_remove_npc_base_properties_1=__webpack_require__(83337),_673_remove_bulwark_res_1=__webpack_require__(97094),_674_stable_homebrew_tag_ids_1=__webpack_require__(75141),_675_flat_modifier_aes_to_res_1=__webpack_require__(96710),_676_replace_items_with_re_like_aes_1=__webpack_require__(85235),_677_rule_value_data_refs_1=__webpack_require__(9838),_678_separate_npc_attack_traits_1=__webpack_require__(45497),_679_tower_shield_speed_penalty_1=__webpack_require__(38580),_680_set_weapon_hands_1=__webpack_require__(95615),_681_giant_language_to_jotun_1=__webpack_require__(4720),_682_biography_fields_1=__webpack_require__(97548),_683_flavortext_to_public_notes_1=__webpack_require__(9581),_684_rations_to_consumable_1=__webpack_require__(10852),_685_fix_melee_usage_traits_1=__webpack_require__(26921),_686_hero_points_to_resources_1=__webpack_require__(77882),_687_familiarity_aes_to_res_1=__webpack_require__(1802),_688_clamp_spell_level_1=__webpack_require__(80450),_689_encumberance_aes_1=__webpack_require__(68850),_690_tiebreak_items_1=__webpack_require__(21715),_691_weapon_range_ability_category_group_1=__webpack_require__(2741),_692_crafting_entry_feat_replacement_1=__webpack_require__(64046),_693_armor_category_group_1=__webpack_require__(87780),_694_retire_system_token_settings_1=__webpack_require__(35149),_695_summon_to_summoned_1=__webpack_require__(14887),_696_flat_ability_modifiers_1=__webpack_require__(55269),_697_weapon_reach_trait_1=__webpack_require__(5299);var runner_2=__webpack_require__(46842);Object.defineProperty(exports,"MigrationRunner",{enumerable:!0,get:function(){return runner_2.MigrationRunner}});class Migrations{static get latestVersion(){return Math.max(...this.list.map((Migration=>Migration.version)))}static constructAll(){return this.list.map((Migration=>new Migration))}static constructFromVersion(version=runner_1.MigrationRunner.RECOMMENDED_SAFE_VERSION){return this.list.filter((Migration=>Migration.version>version)).map((Migration=>new Migration))}static constructRange(min,max=1/0){return this.list.filter((Migration=>Migration.version>=min&&Migration.version<=max)).map((Migration=>new Migration))}}exports.Migrations=Migrations,Migrations.list=[_600_reach_1.Migration600Reach,_601_migrate_effect_compendia_1.Migration601SplitEffectCompendia,_602_update_diehard_feat_1.Migration602UpdateDiehardFeat,_603_reset_quick_roll_default_1.Migration603ResetQuickRollDefault,_604_fix_class_items_1.Migration604FixClassItem,_605_catch_up_to_template_json_1.Migration605CatchUpToTemplateJSON,_606_signature_spells_1.Migration606SignatureSpells,_607_melee_item_damage_rolls_1.Migration607MeleeItemDamageRolls,_608_delete_persisted_kits_1.Migration608DeletePersistedKits,_609_loot_actor_traits_1.Migration609LootActorTraits,_610_set_heritage_feat_type_1.Migration610SetHeritageFeatType,_611_update_toughness_mountains_stoutness_1.Migration611UpdateToughnessMountainsStoutness,_612_normalize_rarities_1.Migration612NormalizeRarities,_613_remove_ammo_charges_1.Migration613RemoveAmmoCharges,_614_numify_melee_bonuses_1.Migration614NumifyMeleeBonuses,_615_remove_instinct_trait_1.Migration615RemoveInstinctTrait,_616_migrate_feat_prerequisites_1.Migration616MigrateFeatPrerequisites,_617_fix_user_flags_1.Migration617FixUserFlags,_618_migrate_item_img_paths_1.Migration618MigrateItemImagePaths,_619_remove_wand_and_scroll_tradition_1.Migration619TraditionLowercaseAndRemoveWandScroll,_620_rename_to_webp_1.Migration620RenameToWebp,_621_remove_config_spell_schools_1.Migration621RemoveConfigSpellSchools,_622_remove_old_token_effect_icons_1.Migration622RemoveOldTokenEffectIcons,_623_numify_potency_runes_1.Migration623NumifyPotencyRunes,_624_removed_token_effect_icon_flags_1.Migration624RemoveTokenEffectIconFlags,_625_ensure_presence_of_saves_1.Migration625EnsurePresenceOfSaves,_626_update_spell_category_1.Migration626UpdateSpellCategory,_627_lowercase_spell_saves_1.Migration627LowerCaseSpellSaves,_628_update_identification_data_1.Migration628UpdateIdentificationData,_629_set_base_items_1.Migration629SetBaseItems,_630_fix_talisman_spelling_1.Migration630FixTalismanSpelling,_631_fix_sense_rule_element_selector_1.Migration631FixSenseRuleElementSelector,_632_delete_orphaned_spells_1.Migration632DeleteOrphanedSpells,_633_delete_unidentified_traits_1.Migration633DeleteUnidentifiedTraits,_634_purge_martial_items_1.Migration634PurgeMartialItems,_635_numify_ac_and_quantity_1.Migration635NumifyACAndQuantity,_636_numify_armor_data_1.Migration636NumifyArmorData,_637_clean_melee_items_1.Migration637CleanMeleeItems,_638_spell_components_1.Migration638SpellComponents,_639_normalize_level_and_price_1.Migration639NormalizeLevelAndPrice,_640_cantrips_are_not_zero_level_1.Migration640CantripsAreNotZeroLevel,_641_sovereign_steel_value_1.Migration641SovereignSteelValue,_642_track_schema_version_1.Migration642TrackSchemaVersion,_643_hazard_level_1.Migration643HazardLevel,_644_spellcasting_category_1.Migration644SpellcastingCategory,_645_token_image_size_1.Migration645TokenImageSize,_646_update_inline_links_1.Migration646UpdateInlineLinks,_647_fix_pc_senses_1.Migration647FixPCSenses,_648_remove_invested_property_1.Migration648RemoveInvestedProperty,_649_focus_to_actor_1.Migration649FocusToActor,_650_stringify_weapon_properties_1.Migration650StringifyWeaponProperties,_651_ephemeral_focus_pool_1.Migration651EphemeralFocusPool,_652_kill_halcyon_tradition_1.Migration652KillHalcyonTradition,_653_aes_to_res_1.Migration653AEstoREs,_654_action_type_count_1.Migration654ActionTypeAndCount,_655_creature_token_sizes_1.Migration655CreatureTokenSizes,_656_other_focus_pool_sources_1.Migration656OtherFocusPoolSources,_657_remove_set_property_1.Migration657RemoveSetProperty,_658_monk_unarmored_proficiency_1.Migration658MonkUnarmoredProficiency,_659_multiple_damage_rows_1.Migration659MultipleDamageRows,_660_derived_spell_traits_1.Migration660DerivedSpellTraits,_661_numify_vehicle_dimensions_1.Migration661NumifyVehicleDimensions,_662_link_to_actor_size_defaults_1.Migration662LinkToActorSizeDefaults,_663_fix_spell_damage_1.Migration663FixSpellDamage,_664_delete_cub_conditions_1.Migration664DeleteCUBConditions,_665_handwraps_corrections_1.Migration665HandwrapsCorrections,_666_usage_and_stowing_containers_1.Migration666UsageAndStowingContainers,_667_hp_subproperties_1.Migration667HPSubProperties,_668_armor_speed_penalty_1.Migration668ArmorSpeedPenalty,_669_npc_attack_effects_1.Migration669NPCAttackEffects,_670_no_custom_trait_1.Migration670NoCustomTrait,_670_ancestry_vision_1.Migration670AncestryVision,_671_no_pc_items_on_non_pcs_1.Migration671NoPCItemsOnNonPCs,_672_remove_npc_base_properties_1.Migration672RemoveNPCBaseProperties,_673_remove_bulwark_res_1.Migration673RemoveBulwarkREs,_674_stable_homebrew_tag_ids_1.Migration674StableHomebrewTagIDs,_675_flat_modifier_aes_to_res_1.Migration675FlatModifierAEsToREs,_676_replace_items_with_re_like_aes_1.Migration676ReplaceItemsWithRELikeAEs,_677_rule_value_data_refs_1.Migration677RuleValueDataRefs,_678_separate_npc_attack_traits_1.Migration678SeparateNPCAttackTraits,_679_tower_shield_speed_penalty_1.Migration679TowerShieldSpeedPenalty,_680_set_weapon_hands_1.Migration680SetWeaponHands,_681_giant_language_to_jotun_1.Migration681GiantLanguageToJotun,_682_biography_fields_1.Migration682BiographyFields,_683_flavortext_to_public_notes_1.Migration683FlavorTextToPublicNotes,_684_rations_to_consumable_1.Migration684RationsToConsumable,_685_fix_melee_usage_traits_1.Migration685FixMeleeUsageTraits,_686_hero_points_to_resources_1.Migration686HeroPointsToResources,_687_familiarity_aes_to_res_1.Migration687FamiliarityAEsToREs,_688_clamp_spell_level_1.Migration688ClampSpellLevel,_689_encumberance_aes_1.Migration689EncumberanceActiveEffects,_690_tiebreak_items_1.Migration690InitiativeTiebreakItems,_691_weapon_range_ability_category_group_1.Migration691WeaponRangeAbilityCategoryGroup,_692_crafting_entry_feat_replacement_1.Migration692CraftingEntryFeatReplacement,_693_armor_category_group_1.Migration693ArmorCategoryGroup,_694_retire_system_token_settings_1.Migration694RetireSystemTokenSettings,_695_summon_to_summoned_1.Migration695SummonToSummoned,_696_flat_ability_modifiers_1.Migration696FlatAbilityModifiers,_697_weapon_reach_trait_1.Migration697WeaponReachTrait]},3731:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration600Reach=void 0;const base_1=__webpack_require__(54310);class Migration600Reach extends base_1.MigrationBase{async updateItem(item){"ancestry"===item.type&&(item.data.reach=5)}}exports.Migration600Reach=Migration600Reach,Migration600Reach.version=.6},48324:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration601SplitEffectCompendia=void 0;const base_1=__webpack_require__(54310),_util_1=__webpack_require__(6945);class Migration601SplitEffectCompendia extends base_1.MigrationBase{async updateItem(item){var _a;"string"==typeof item.data.description.value&&(item.data.description.value=item.data.description.value.replace(/(@Compendium\[pf2e\.)(spell-effects)(\.)([a-zA-Z0-9]{16})(\]{.*?})/g,((_full,first,_replace,dot,itemId,rest)=>first+((0,_util_1.objectHasKey)(Migration601SplitEffectCompendia.effectLocations,itemId)?Migration601SplitEffectCompendia.effectLocations[itemId]:"??")+dot+itemId+rest))),"string"==typeof(null===(_a=item.flags.core)||void 0===_a?void 0:_a.sourceId)&&(item.flags.core.sourceId=item.flags.core.sourceId.replace(/(Compendium\.pf2e\.)(spell-effects)(\.)([a-zA-Z0-9]{16})/g,((_full,first,_replace,dot,itemId)=>first+((0,_util_1.objectHasKey)(Migration601SplitEffectCompendia.effectLocations,itemId)?Migration601SplitEffectCompendia.effectLocations[itemId]:"??")+dot+itemId)))}async migrate(){game.macros.forEach((macro=>{macro.data.command=macro.data.command.replace(/(Compendium\.pf2e\.)(spell-effects)(\.)([a-zA-Z0-9]{16})/g,((_full,first,_replace,dot,itemId)=>first+((0,_util_1.objectHasKey)(Migration601SplitEffectCompendia.effectLocations,itemId)?Migration601SplitEffectCompendia.effectLocations[itemId]:"??")+dot+itemId))}))}}exports.Migration601SplitEffectCompendia=Migration601SplitEffectCompendia,Migration601SplitEffectCompendia.version=.601,Migration601SplitEffectCompendia.effectLocations={QuZ5frBMJF3gi7RY:"consumable-effects","7z1iY4AaNEAIKuAU":"consumable-effects","1mKjaWC65KWPuFR4":"consumable-effects",mi4Md1fB2XThCand:"consumable-effects",R106i7WCXvHLGMTu:"consumable-effects",kkDbalYEavzRpYlp:"consumable-effects",qVKrrKpTghgMIuGH:"consumable-effects",HeRHBo2NaKy5IxhU:"consumable-effects",tTBJ33UGtzXjWOJp:"consumable-effects",xVAdPzFaSvJXPMKv:"consumable-effects",fYjvLx9DHIdCHdDx:"consumable-effects",kwD0wuW5Ndkc9YXB:"consumable-effects",fIpzDpuwLdIS4tW5:"consumable-effects","1ouUo8lLK6H79Rqh":"consumable-effects",xFQRiVU6h8EA6Lw9:"consumable-effects",MI5OCkF9IXmD2lPF:"consumable-effects",S4MZzALqFoXJsr6o:"consumable-effects",wFF0SZs1Hcf87Kk1:"consumable-effects","2C1HuKDQDGFZuv7l":"consumable-effects",q1EhQ716bPSgJVnC:"consumable-effects",eh7EqmDBDW30ShCu:"consumable-effects",wTZnKkT0K4Tdy8mD:"consumable-effects",Cxa7MdgMCUoMqbKm:"consumable-effects",PeuUz7JaabCgl6Yh:"consumable-effects",lNWACCNe9RYgaFxb:"consumable-effects",j9zVZwRBVAcnpEkE:"consumable-effects",qit1mLbJUyRTYcPU:"consumable-effects",jaBMZKdoywOTrQvP:"consumable-effects",RT1BxXrbbGgk40Ti:"consumable-effects",ztxW3lBPRcesF7wK:"consumable-effects","7vCenP9j6FuHRv5C":"consumable-effects","7UL8belWmo7U5YGM":"consumable-effects",bcxVvIbuZWOvsKcA:"consumable-effects","4tepFOJLhZSelPoa":"consumable-effects",qwoLV4awdezlEJ60:"consumable-effects",GBBjw61g4ekJymT0:"consumable-effects",vFOr2JAJxiVvvn2E:"consumable-effects",BV8RPntjc9FUzD3g:"consumable-effects",kgotU0sFmtAHYySB:"consumable-effects",VCypzSu659eC6jNi:"consumable-effects",wyLEew86nhNUXASu:"consumable-effects",Wa4317cqU4lJ8vAQ:"consumable-effects",Z9oPh462q82IYIZ6:"consumable-effects",EpB7yJPEuG6ez4z3:"consumable-effects",PpLxndUSgzgs6dd0:"consumable-effects",lPRuIRbu0rHBkoKY:"consumable-effects",Yxssrnh9UZJAM0V7:"consumable-effects","9MeHc072G4L8AJkp":"consumable-effects",xLilBqqf34ZJYO9i:"consumable-effects","1l139A2Qik4lBHKO":"consumable-effects","2PNo8u4wxSbz5WEs":"consumable-effects",fUrZ4xcMJz0CfTyG:"consumable-effects","6A8jsLR7upLGuRiv":"consumable-effects",Zdh2uO1vVYJmaqld:"consumable-effects",Mf9EBLhYmZerf0nS:"consumable-effects",ModBoFdCi7YQU4gP:"consumable-effects",W3xQBLj5hLOtb6Tj:"consumable-effects","2Bds6d4UGQZqYSZM":"consumable-effects","6PNLBIdlqqWNCFMy":"consumable-effects","988f6NpOo4YzFzIr":"consumable-effects",VPtsrpbP0AE642al:"consumable-effects",MCny5ohCGf09a7Wl:"consumable-effects",RRusoN3HEGnDO1Dg:"consumable-effects",thOpQunbQr77XWdF:"consumable-effects","9keegq0GdS1eSrNr":"consumable-effects",jw6Tr9FbErjLAFLQ:"consumable-effects","5xgapIXn5DwbXHKh":"consumable-effects",t7VUJHSUT6bkVUjg:"consumable-effects",yrbz0rZzp8aZEqbv:"consumable-effects","16tOZk4qy329s2aK":"consumable-effects",zd85Ny1RS46OL0TD:"consumable-effects",oAewXfq9c0ecaSfw:"consumable-effects",dpIrjd1UPY7EnWUD:"consumable-effects","9FfFhu2kl2wMTsiI":"consumable-effects",v5Ht1V4MZvRKRBjL:"consumable-effects",TkRuKKYyPHTGPfgf:"consumable-effects",XrlChFETfe8avLsX:"consumable-effects",qzRcSQ0HTTp58hV2:"consumable-effects",TsWUTODTVi487SEz:"consumable-effects","5Gof60StUppR2Xn9":"consumable-effects",mG6S6zm6hxaF7Tla:"consumable-effects",zlSNbMDIlTOpcO8R:"consumable-effects",b9DTIJyBT8kvIBpj:"consumable-effects",PEPOd38VfVzQMKG5:"consumable-effects","1xHHvQlW4pRR89qj":"consumable-effects",AMhUb42NAJ1aisZp:"consumable-effects",kwOtHtmlH69ctK0O:"consumable-effects",VrYfR2WuyA15zFhq:"consumable-effects",OAN5Fj21PJPhIqRU:"consumable-effects",e6dXfbKzv5sNr1zh:"consumable-effects",Hnt3Trd7TiFICB06:"consumable-effects",p2aGtovaY1feytws:"equipment-effects",yvabfuAO74pvH8hh:"equipment-effects",etJW0w4CiSFgMrWP:"equipment-effects",vOU4Yv2MyAfYBbmF:"equipment-effects",FbFl95WRpzrrijh3:"equipment-effects",iK6JeCsZwm5Vakks:"equipment-effects",P7Y7pO2ulZ5wBgxU:"equipment-effects",cg5qyeMJUh6b4fta:"equipment-effects",fbSFwwp60AuDDKpK:"equipment-effects","88kqcDmsoAEddzUt":"equipment-effects",lLP56tbG689TNKW5:"equipment-effects",PeiuJ951kkBPTCSM:"equipment-effects",G0lG7IIZnCZtYi6v:"equipment-effects",gDefAEEMXVVZgqXH:"equipment-effects",uXEp1rPU5fY4OiBf:"equipment-effects",Uadsb25G18pKdZ2e:"equipment-effects",viCX9fZzTWGuoO85:"equipment-effects",eeGWTG9ZAha4IIOY:"equipment-effects",ioGzmVSmMGXWWBYb:"equipment-effects",pAMyEbJzWBoYoGhs:"equipment-effects","7dLsA9PAb5ij7Bc6":"equipment-effects",NE7Fm5YnUhD4ySX3:"equipment-effects","8ersuvNJXX00XaIQ":"equipment-effects",EpNflrkmWzQ0lEb4:"equipment-effects",iEkH8BKLMUa2wxLX:"equipment-effects",bP40jr6wE6MCsRvY:"equipment-effects",eSIYyxi6uTKiP6W5:"equipment-effects",E4B02mJmNexQLa8F:"equipment-effects","3O5lvuX4VHqtpCkU":"equipment-effects",ah41XCrV4LFsVyzl:"equipment-effects",W3BCLbX6j1IqL0uB:"equipment-effects",zqKzWGLODgIvtiKf:"equipment-effects",lBMhT2W2raYMa8JS:"equipment-effects","5uK3fmGlfJrbWQz4":"equipment-effects",i0tm2ZHekp7rGGR3:"equipment-effects",Zb8RYgmzCI6fQE0o:"equipment-effects",QapoFh0tbUgMwSIB:"equipment-effects",UlalLihKzDxcOdXL:"equipment-effects",lO95TwgihBdTilAB:"equipment-effects","9PASRixhNM0ogqmG":"equipment-effects","7MgpgF8tOXOiDEwv":"equipment-effects","1S51uIRb9bnZtpFU":"equipment-effects","1nCwQErK6hpkNvfw":"feat-effects","5IGz4iheaiUWm5KR":"feat-effects",uFYvW3kFP9iyNfVX:"feat-effects",CgxYa0lrLUjS2ZhI:"feat-effects",nwkYZs6YwXYAJ4ps:"feat-effects",qUowHpn79Dpt1hVn:"feat-effects",RozqjLocahvQWERr:"feat-effects",tPKXLtDJ3bzJcXlv:"feat-effects",gYpy9XBPScIlY93p:"feat-effects",Im5JBInybWFbHEYS:"feat-effects",BCyGDKcplkJiSAKJ:"feat-effects",PMHwCrnh9W4sMu5b:"feat-effects",pf9yvKNg6jZLrE30:"feat-effects",eeAlh6edygcZIz9c:"feat-effects",b2kWJuCPj1rDMdwz:"feat-effects",UQ7vZgmfK0VSFS8A:"feature-effects",s1tulrmW6teTFjVd:"feature-effects",aKRo5TIhUtu0kyEr:"feature-effects",yfbP64r4a9e5oyli:"feature-effects",n1vhmOd7aNiuR3nk:"feature-effects",FNTTeJHiK6iOjrSq:"feature-effects","3gGBZHcUFsHLJeQH":"feature-effects",rJpkKaPRGaH0pLse:"feature-effects","9AUcoY48H5LrVZiF":"feature-effects",KVbS7AbhQdeuA0J6:"feature-effects","6fb15XuSV4TNuVAT":"feature-effects",vguxP8ukwVTWWWaA:"feature-effects",SVGW8CLKwixFlnTv:"feature-effects",ruRAfGJnik7lRavk:"feature-effects",uBJsxCzNhje8m8jj:"feature-effects","7BFd8A9HFrmg6vwL":"feature-effects",z3uyCMBddrPK5umr:"feature-effects",Nv70aqcQgCBpDYp8:"feature-effects",OqH6IaeOwRWkGPrk:"feature-effects",Lb4q2bBAgxamtix5:"feature-effects",Gqy7K6FnbLtwGpud:"spell-effects","41WThj17MZBXTO2X":"spell-effects",sPCWrhUHqlbGhYSD:"spell-effects","3qHKBDF7lrHw8jFK":"spell-effects",l9HRQggofFGIxEse:"spell-effects",beReeFroAx24hj83:"spell-effects",qkwb5DD3zmKwvbk0:"spell-effects",GnWkI3T3LYRlm3X8:"spell-effects",dWbg2gACxMkSnZag:"spell-effects",Jemq5UknGdMO7b73:"spell-effects",LXf1Cqi1zyo4DaLv:"spell-effects"}},33999:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration602UpdateDiehardFeat=void 0;const base_1=__webpack_require__(54310),_item_1=__webpack_require__(10843);class Migration602UpdateDiehardFeat extends base_1.MigrationBase{constructor(){super(),this.requiresFlush=!0,this.diehardPromise=fromUuid("Compendium.pf2e.feats-srd.I0BhPWqYf1bbzEYg")}async updateActor(actorData){const diehard=actorData.items.find((itemData=>"diehard"===itemData.data.slug&&"feat"===itemData.type));if("character"===actorData.type&&void 0!==diehard){actorData.data.attributes.dying.max=4;const diehardIndex=actorData.items.indexOf(diehard),newDiehard=await this.diehardPromise;if(!(newDiehard instanceof _item_1.FeatPF2e))throw Error("PF2E System | Expected item not found in Compendium");actorData.items.splice(diehardIndex,1,newDiehard.toObject())}}}exports.Migration602UpdateDiehardFeat=Migration602UpdateDiehardFeat,Migration602UpdateDiehardFeat.version=.602},66171:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration603ResetQuickRollDefault=void 0;const base_1=__webpack_require__(54310);class Migration603ResetQuickRollDefault extends base_1.MigrationBase{async updateUser(userData){var _a,_b;const flags=userData.flags;"boolean"==typeof(null===(_b=null===(_a=flags.PF2e)||void 0===_a?void 0:_a.settings)||void 0===_b?void 0:_b.quickD20roll)&&(flags.PF2e.settings.quickD20roll=!1)}}exports.Migration603ResetQuickRollDefault=Migration603ResetQuickRollDefault,Migration603ResetQuickRollDefault.version=.603},92887:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration604FixClassItem=void 0;const base_1=__webpack_require__(54310);class Migration604FixClassItem extends base_1.MigrationBase{async updateItem(item){"class"===item.type&&(Array.isArray(item.data.ancestryFeatLevels)&&(item.data.ancestryFeatLevels={value:item.data.ancestryFeatLevels}),Array.isArray(item.data.classFeatLevels)&&(item.data.classFeatLevels={value:item.data.classFeatLevels}),Array.isArray(item.data.skillFeatLevels)&&(item.data.skillFeatLevels={value:item.data.skillFeatLevels}),Array.isArray(item.data.generalFeatLevels)&&(item.data.generalFeatLevels={value:item.data.generalFeatLevels}),Array.isArray(item.data.skillIncreaseLevels)&&(item.data.skillIncreaseLevels={value:item.data.skillIncreaseLevels}),Array.isArray(item.data.abilityBoostLevels)&&(item.data.abilityBoostLevels={value:item.data.abilityBoostLevels}))}}exports.Migration604FixClassItem=Migration604FixClassItem,Migration604FixClassItem.version=.604},19032:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration605CatchUpToTemplateJSON=void 0;const base_1=__webpack_require__(54310),helpers_1=__webpack_require__(44252);class Migration605CatchUpToTemplateJSON extends base_1.MigrationBase{addEffects(entityData){Array.isArray(entityData.effects)||(entityData.effects=[])}async updateActor(actorData){if(this.addEffects(actorData),"traits"in actorData.data&&"string"!=typeof actorData.data.traits.traits.custom&&(actorData.data.traits.traits.custom=""),"character"===actorData.type||"npc"===actorData.type){if("string"==typeof actorData.data.attributes.hp.max){const newMax=parseInt(actorData.data.attributes.hp.max,10);Number.isInteger(newMax)&&(actorData.data.attributes.hp.max=newMax)}if("string"==typeof actorData.data.attributes.hp.value){const newValue=parseInt(actorData.data.attributes.hp.value,10);Number.isInteger(newValue)&&(actorData.data.attributes.hp.value=newValue)}if("string"==typeof actorData.data.details.level.value){const newLevel=parseInt(actorData.data.details.level.value,10);Number.isInteger(newLevel)&&(actorData.data.details.level.value=newLevel)}"tempmax"in actorData.data.attributes.hp&&delete actorData.data.attributes.hp.tempmax,"special"in actorData.data.attributes.speed&&delete actorData.data.attributes.speed.special}}async updateItem(itemData,actorData){if(this.addEffects(itemData),!itemData.data.slug&&actorData&&(itemData.data.slug=null),Array.isArray(itemData.data.rules)||(itemData.data.rules=[]),itemData.data.traits&&!itemData.data.traits.custom&&(itemData.data.traits.custom=""),itemData.data.traits&&!itemData.data.traits.rarity&&(itemData.data.traits.rarity={value:"common"}),(0,helpers_1.isPhysicalData)(itemData)&&!itemData.data.identification){itemData.data.identification.status="identified"}"spell"!==itemData.type||itemData.data.hasCounteractCheck||(itemData.data.hasCounteractCheck={value:!1}),"lore"===itemData.type&&"featType"in itemData.data&&delete itemData.data.featType,"action"===itemData.type&&"skill_requirements"in itemData.data&&delete itemData.data.skill_requirements,"action"===itemData.type&&"skill_requirement"in itemData.data&&delete itemData.data.skill_requirement}}exports.Migration605CatchUpToTemplateJSON=Migration605CatchUpToTemplateJSON,Migration605CatchUpToTemplateJSON.version=.605},97591:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration606SignatureSpells=void 0;const base_1=__webpack_require__(54310);class Migration606SignatureSpells extends base_1.MigrationBase{async updateItem(item){"spellcastingEntry"!==item.type||item.data.signatureSpells||(item.data.signatureSpells={value:[]})}}exports.Migration606SignatureSpells=Migration606SignatureSpells,Migration606SignatureSpells.version=.606},35650:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration607MeleeItemDamageRolls=void 0;const base_1=__webpack_require__(54310);class Migration607MeleeItemDamageRolls extends base_1.MigrationBase{async updateItem(itemData){if("melee"===itemData.type&&Array.isArray(itemData.data.damageRolls)){const damageRolls={};itemData.data.damageRolls.forEach((roll=>{const key=randomID(20);damageRolls[key]=roll})),itemData.data.damageRolls=damageRolls}}}exports.Migration607MeleeItemDamageRolls=Migration607MeleeItemDamageRolls,Migration607MeleeItemDamageRolls.version=.607},88146:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration608DeletePersistedKits=void 0;const base_1=__webpack_require__(54310);class Migration608DeletePersistedKits extends base_1.MigrationBase{async updateItem(itemData,actorData){if(actorData&&"kit"===itemData.type){const index=actorData.items.indexOf(itemData);actorData.items.splice(index,1)}}}exports.Migration608DeletePersistedKits=Migration608DeletePersistedKits,Migration608DeletePersistedKits.version=.608},65596:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration609LootActorTraits=void 0;const base_1=__webpack_require__(54310);class Migration609LootActorTraits extends base_1.MigrationBase{async updateActor(actorData){"loot"===actorData.type&&void 0===actorData.data.traits&&(actorData.data.traits={rarity:{value:"common"},size:{value:"med"},traits:{value:[],custom:""},di:{custom:"",value:[]},dr:[],dv:[],ci:[]})}}exports.Migration609LootActorTraits=Migration609LootActorTraits,Migration609LootActorTraits.version=.609},83512:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration610SetHeritageFeatType=void 0;const base_1=__webpack_require__(54310);class Migration610SetHeritageFeatType extends base_1.MigrationBase{async updateItem(itemData){var _a;const itemTraits=null===(_a=itemData.data.traits)||void 0===_a?void 0:_a.value;if("feat"===itemData.type&&(null==itemTraits?void 0:itemTraits.includes("heritage"))){itemData.data.featType.value="heritage";const index=itemTraits.indexOf("heritage");itemTraits.splice(index,1)}}}exports.Migration610SetHeritageFeatType=Migration610SetHeritageFeatType,Migration610SetHeritageFeatType.version=.61},39127:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration611UpdateToughnessMountainsStoutness=void 0;const base_1=__webpack_require__(54310),_item_1=__webpack_require__(10843);class Migration611UpdateToughnessMountainsStoutness extends base_1.MigrationBase{constructor(){super(),this.requiresFlush=!0,this.featSlugs=["mountains-stoutness","mountain-s-stoutness","toughness"],this.featsPromise=game.packs.get("pf2e.feats-srd").getDocuments()}async updateActor(actorData){var e_1,_a;if("character"!==actorData.type)return;const oldFeatsData=actorData.items.filter((itemData=>{var _a;return this.featSlugs.includes(null!==(_a=itemData.data.slug)&&void 0!==_a?_a:"")&&"feat"===itemData.type}));try{for(var oldFeatsData_1_1,oldFeatsData_1=__asyncValues(oldFeatsData);!(oldFeatsData_1_1=await oldFeatsData_1.next()).done;){const oldFeatData=oldFeatsData_1_1.value;"mountain-s-stoutness"===oldFeatData.data.slug&&(oldFeatData.data.slug="mountains-stoutness");const newFeat="toughness"===oldFeatData.data.slug?(await this.featsPromise).find((feat=>"toughness"===feat.slug)):(await this.featsPromise).find((feat=>"mountains-stoutness"===feat.slug));if(!(newFeat instanceof _item_1.FeatPF2e))throw Error("PF2E System | Expected item not found in Compendium");newFeat.data.data.location=oldFeatData.data.location;const oldFeatIndex=actorData.items.indexOf(oldFeatData);actorData.items.splice(oldFeatIndex,1,newFeat.toObject())}}catch(e_1_1){e_1={error:e_1_1}}finally{try{oldFeatsData_1_1&&!oldFeatsData_1_1.done&&(_a=oldFeatsData_1.return)&&await _a.call(oldFeatsData_1)}finally{if(e_1)throw e_1.error}}}}exports.Migration611UpdateToughnessMountainsStoutness=Migration611UpdateToughnessMountainsStoutness,Migration611UpdateToughnessMountainsStoutness.version=.611},25483:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration612NormalizeRarities=void 0;const base_1=__webpack_require__(54310);class Migration612NormalizeRarities extends base_1.MigrationBase{async updateActor(actorData){if("familiar"===actorData.type)return;const traitsAndOtherMiscellany=actorData.data.traits;"rarity"in traitsAndOtherMiscellany||(traitsAndOtherMiscellany.rarity={value:"common"});const rarities=["common","uncommon","rare","unique"];for(const rarity of rarities){const traits=traitsAndOtherMiscellany.traits;if(traits.value.includes(rarity)){const index=traits.value.indexOf(rarity);traits.value.splice(index,1),traitsAndOtherMiscellany.rarity={value:rarity}}}}}exports.Migration612NormalizeRarities=Migration612NormalizeRarities,Migration612NormalizeRarities.version=.612},90736:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration613RemoveAmmoCharges=void 0;const base_1=__webpack_require__(54310);class Migration613RemoveAmmoCharges extends base_1.MigrationBase{async updateItem(itemData){"consumable"===itemData.type&&"ammo"===itemData.data.consumableType.value&&(itemData.data.charges.value=0,itemData.data.charges.max=0)}}exports.Migration613RemoveAmmoCharges=Migration613RemoveAmmoCharges,Migration613RemoveAmmoCharges.version=.613},34788:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration614NumifyMeleeBonuses=void 0;const base_1=__webpack_require__(54310);class Migration614NumifyMeleeBonuses extends base_1.MigrationBase{async updateItem(itemData){"melee"===itemData.type&&(itemData.data.bonus={value:Number(itemData.data.bonus.value)})}}exports.Migration614NumifyMeleeBonuses=Migration614NumifyMeleeBonuses,Migration614NumifyMeleeBonuses.version=.614},69506:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration615RemoveInstinctTrait=void 0;const base_1=__webpack_require__(54310);class Migration615RemoveInstinctTrait extends base_1.MigrationBase{async updateItem(itemData){const traits=itemData.data.traits;traits&&("string"==typeof traits.value?traits.value=[]:traits.value=traits.value.filter((trait=>"instinct"!==trait)))}}exports.Migration615RemoveInstinctTrait=Migration615RemoveInstinctTrait,Migration615RemoveInstinctTrait.version=.615},7115:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration616MigrateFeatPrerequisites=void 0;const base_1=__webpack_require__(54310);class Migration616MigrateFeatPrerequisites extends base_1.MigrationBase{async updateItem(itemData){if("feat"===itemData.type){const update=[],prerequisites=itemData.data.prerequisites;if(prerequisites.value){if("string"==typeof prerequisites.value)update.push({value:prerequisites.value});else if(Array.isArray(prerequisites.value))for(const p of prerequisites.value)p&&update.push({value:(null==p?void 0:p.value)?p.value:p})}else if(Array.isArray(prerequisites))for(const p of prerequisites)p&&update.push({value:(null==p?void 0:p.value)?p.value:p});itemData.data.prerequisites={value:update}}}}exports.Migration616MigrateFeatPrerequisites=Migration616MigrateFeatPrerequisites,Migration616MigrateFeatPrerequisites.version=.616},39281:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration617FixUserFlags=void 0;const base_1=__webpack_require__(54310);class Migration617FixUserFlags extends base_1.MigrationBase{async updateUser(userData){var _a,_b,_c,_d,_e;const flags=userData.flags,settings=null===(_a=flags.PF2e)||void 0===_a?void 0:_a.settings;if(settings){const uiTheme=null!==(_b=settings.color)&&void 0!==_b?_b:"blue",showRollDialogs=!settings.quickD20roll;null!==(_c=flags.pf2e)&&void 0!==_c||(flags.pf2e={}),flags.pf2e.settings={uiTheme,showEffectPanel:null===(_e=null===(_d=flags.pf2e)||void 0===_d?void 0:_d.showEffectPanel)||void 0===_e||_e,showRollDialogs},delete flags.PF2e,flags["-=PF2e"]=null}}}exports.Migration617FixUserFlags=Migration617FixUserFlags,Migration617FixUserFlags.version=.617},14740:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration618MigrateItemImagePaths=void 0;const base_1=__webpack_require__(54310);class Migration618MigrateItemImagePaths extends base_1.MigrationBase{constructor(){super(...arguments),this.IMAGE_PATHS={"systems/pf2e/icons/equipment/weapons/blowgun.png":"systems/pf2e/icons/equipment/weapons/blowgun.jpg","systems/pf2e/icons/equipment/weapons/trident.png":"systems/pf2e/icons/equipment/weapons/trident.jpg","systems/pf2e/icons/equipment/weapons/longsword.png":"systems/pf2e/icons/equipment/weapons/longsword.jpg","systems/pf2e/icons/equipment/weapons/composite-longbow.png":"systems/pf2e/icons/equipment/weapons/composite-longbow.jpg","systems/pf2e/icons/equipment/weapons/composite-shortbow.png":"systems/pf2e/icons/equipment/weapons/composite-shortbow.jpg","systems/pf2e/icons/equipment/weapons/dagger.png":"systems/pf2e/icons/equipment/weapons/dagger.jpg","systems/pf2e/icons/equipment/weapons/katar.png":"systems/pf2e/icons/equipment/weapons/katar.jpg","systems/pf2e/icons/equipment/weapons/kukri.png":"systems/pf2e/icons/equipment/weapons/kukri.jpg","systems/pf2e/icons/equipment/weapons/shortbow.png":"systems/pf2e/icons/equipment/weapons/shortbow.jpg","systems/pf2e/icons/equipment/weapons/scimitar.png":"systems/pf2e/icons/equipment/weapons/scimitar.jpg","systems/pf2e/icons/equipment/weapons/hatchet.png":"systems/pf2e/icons/equipment/weapons/hatchet.jpg","systems/pf2e/icons/equipment/weapons/halfling-sling-staff.png":"systems/pf2e/icons/equipment/weapons/halfling-sling-staff.jpg","systems/pf2e/icons/equipment/weapons/halberd.png":"systems/pf2e/icons/equipment/weapons/halberd.jpg","systems/pf2e/icons/equipment/weapons/shield-spikes.png":"systems/pf2e/icons/equipment/weapons/shield-spikes.jpg","systems/pf2e/icons/equipment/weapons/light-mace.jpg":"systems/pf2e/icons/equipment/weapons/light-mace.jpg","systems/pf2e/icons/equipment/weapons/morningstar.png":"systems/pf2e/icons/equipment/weapons/morningstar.jpg","systems/pf2e/icons/equipment/weapons/sling.png":"systems/pf2e/icons/equipment/weapons/sling.jpg","systems/pf2e/icons/equipment/weapons/main-gauche.png":"systems/pf2e/icons/equipment/weapons/main-gauche.jpg","systems/pf2e/icons/equipment/weapons/bastard-sword.png":"systems/pf2e/icons/equipment/weapons/bastard-sword.jpg","systems/pf2e/icons/equipment/weapons/spear.png":"systems/pf2e/icons/equipment/weapons/spear.jpg","systems/pf2e/icons/equipment/weapons/staff.png":"systems/pf2e/icons/equipment/weapons/staff.jpg","systems/pf2e/icons/equipment/weapons/katana.png":"systems/pf2e/icons/equipment/weapons/katana.jpg","systems/pf2e/icons/equipment/weapons/elven-curve-blade.png":"systems/pf2e/icons/equipment/weapons/elven-curve-blade.jpg","systems/pf2e/icons/equipment/weapons/bo-staff.png":"systems/pf2e/icons/equipment/weapons/bo-staff.jpg","systems/pf2e/icons/equipment/weapons/clan-dagger.png":"systems/pf2e/icons/equipment/weapons/clan-dagger.jpg","systems/pf2e/icons/equipment/weapons/dogslicer.png":"systems/pf2e/icons/equipment/weapons/dogslicer.jpg","systems/pf2e/icons/equipment/weapons/falchion.png":"systems/pf2e/icons/equipment/weapons/falchion.jpg","systems/pf2e/icons/equipment/weapons/fist.png":"systems/pf2e/icons/equipment/weapons/fist.jpg","systems/pf2e/icons/equipment/weapons/gauntlet.png":"systems/pf2e/icons/equipment/weapons/gauntlet.jpg","systems/pf2e/icons/equipment/weapons/gnome-hooked-hammer.png":"systems/pf2e/icons/equipment/weapons/gnome-hooked-hammer.jpg","systems/pf2e/icons/equipment/weapons/greatpick.png":"systems/pf2e/icons/equipment/weapons/greatpick.jpg","systems/pf2e/icons/equipment/weapons/guisarme.png":"systems/pf2e/icons/equipment/weapons/guisarme.jpg","systems/pf2e/icons/equipment/weapons/horsechopper.png":"systems/pf2e/icons/equipment/weapons/horsechopper.jpg","systems/pf2e/icons/equipment/weapons/lance.png":"systems/pf2e/icons/equipment/weapons/lance.jpg","systems/pf2e/icons/equipment/weapons/maul.png":"systems/pf2e/icons/equipment/weapons/maul.jpg","systems/pf2e/icons/equipment/weapons/pick.png":"systems/pf2e/icons/equipment/weapons/pick.jpg","systems/pf2e/icons/equipment/weapons/ranseur.png":"systems/pf2e/icons/equipment/weapons/ranseur.jpg","systems/pf2e/icons/equipment/weapons/sai.png":"systems/pf2e/icons/equipment/weapons/sai.jpg","systems/pf2e/icons/equipment/weapons/sawtooth-saber.png":"systems/pf2e/icons/equipment/weapons/sawtooth-saber.jpg","systems/pf2e/icons/equipment/weapons/shield-bash.png":"systems/pf2e/icons/equipment/weapons/shield-bash.jpg","systems/pf2e/icons/equipment/weapons/shield-boss.png":"systems/pf2e/icons/equipment/weapons/shield-boss.jpg","systems/pf2e/icons/equipment/weapons/shuriken.png":"systems/pf2e/icons/equipment/weapons/shuriken.jpg","systems/pf2e/icons/equipment/weapons/spiked-gauntlet.png":"systems/pf2e/icons/equipment/weapons/spiked-gauntlet.jpg","systems/pf2e/icons/equipment/weapons/broom.png":"systems/pf2e/icons/equipment/held-items/broom-of-flying.jpg","systems/pf2e/icons/equipment/weapons/cutlass.png":"systems/pf2e/icons/equipment/weapons/scimitar.jpg","systems/pf2e/icons/equipment/weapons/scalpel.png":"systems/pf2e/icons/equipment/weapons/war-razor.jpg","systems/pf2e/icons/equipment/weapons/cane.png":"systems/pf2e/icons/equipment/weapons/cane.jpg"}}async updateItem(itemData){var _a;itemData.img=null!==(_a=this.IMAGE_PATHS[itemData.img])&&void 0!==_a?_a:itemData.img}}exports.Migration618MigrateItemImagePaths=Migration618MigrateItemImagePaths,Migration618MigrateItemImagePaths.version=.618},91944:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration619TraditionLowercaseAndRemoveWandScroll=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310),LEGIT_TRADITIONS=["arcane","divine","occult","primal","focus","ritual","halcyon",""];class Migration619TraditionLowercaseAndRemoveWandScroll extends base_1.MigrationBase{async updateItem(item,actorData){if(!actorData||"spellcastingEntry"!==item.type)return;const tradition=item.data.tradition;if(tradition.value=tradition.value.toLowerCase(),(0,_util_1.tupleHasValue)(LEGIT_TRADITIONS,item.data.tradition.value))return;const highestTradition=actorData.items.filter((itemData=>"spellcastingEntry"===itemData.type)).reduce(((prev,current)=>{var _a;if((0,_util_1.tupleHasValue)(LEGIT_TRADITIONS,current.data.tradition.value)){const value=null!==(_a=current.data.spelldc.value)&&void 0!==_a?_a:0;if(value>prev.value){return{name:current.data.tradition.value,value}}}return prev}),{name:"arcane",value:0});tradition.value=highestTradition.name}}exports.Migration619TraditionLowercaseAndRemoveWandScroll=Migration619TraditionLowercaseAndRemoveWandScroll,Migration619TraditionLowercaseAndRemoveWandScroll.version=.619},58708:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration620RenameToWebp=void 0;const base_1=__webpack_require__(54310);class Migration620RenameToWebp extends base_1.MigrationBase{constructor(){super(...arguments),this.regexp=/(\/?systems\/pf2e\/[^"]+)\.(?:jpg|png)\b/}renameToWebP(imgPath){return"string"==typeof imgPath&&this.regexp.test(imgPath)?imgPath.replace(this.regexp,"$1.webp"):null==imgPath?void 0:imgPath.replace("icons/svg/mystery-man.svg","systems/pf2e/icons/default-icons/mystery-man.svg")}isABCK(itemData){return["ancestry","background","class","kit"].includes(itemData.type)}async updateActor(actorData){var _a,_b;actorData.img=this.renameToWebP(actorData.img),"string"==typeof(null===(_a=actorData.token)||void 0===_a?void 0:_a.img)&&(actorData.token.img=this.renameToWebP(actorData.token.img));for(const effect of null!==(_b=actorData.effects)&&void 0!==_b?_b:[])effect.icon=this.renameToWebP(effect.icon);"character"===actorData.type&&(actorData.data.details.deity.image=this.renameToWebP(actorData.data.details.deity.image))}async updateItem(itemData){var _a,_b,_c;itemData.img=this.renameToWebP(itemData.img);for(const effect of null!==(_a=itemData.effects)&&void 0!==_a?_a:[])effect.icon=this.renameToWebP(effect.icon);if("consumable"===itemData.type&&(null===(_b=itemData.data.spell)||void 0===_b?void 0:_b.data)){const embeddedSpell=itemData.data.spell.data;embeddedSpell.img=this.renameToWebP(embeddedSpell.img)}if("condition"===itemData.type&&(null===(_c=itemData.flags.pf2e)||void 0===_c?void 0:_c.condition)&&(itemData.data.hud.img.value=this.renameToWebP(itemData.data.hud.img.value)),this.isABCK(itemData)){const embedData=itemData.data.items,embeds=Object.values(embedData).filter((maybeEmbed=>!!maybeEmbed));for(const embed of embeds)if(embed.img=this.renameToWebP(embed.img),"items"in embed&&embed.items){const deepEmbeds=Object.values(embed.items).filter((maybeDeepEmbed=>!!maybeDeepEmbed));for(const deepEmbed of deepEmbeds)deepEmbed.img=this.renameToWebP(deepEmbed.img)}}}async updateMacro(macroData){macroData.img=this.renameToWebP(macroData.img)}async updateTable(tableData){tableData.img=this.renameToWebP(tableData.img);for(const result of tableData.results)result.img=this.renameToWebP(result.img)}async updateToken(tokenData){tokenData.img=this.renameToWebP(tokenData.img),tokenData.effects=tokenData.effects.filter((texture=>!this.regexp.test(texture)))}async updateUser(userData){userData.img=this.renameToWebP(userData.img)}}exports.Migration620RenameToWebp=Migration620RenameToWebp,Migration620RenameToWebp.version=.62},42712:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration621RemoveConfigSpellSchools=void 0;const base_1=__webpack_require__(54310),_util_1=__webpack_require__(6945);class Migration621RemoveConfigSpellSchools extends base_1.MigrationBase{constructor(){super(...arguments),this.KEY_MAP={abj:"abjuration",con:"conjuration",div:"divination",enc:"enchantment",evo:"evocation",ill:"illusion",nec:"necromancy",trs:"transmutation"}}reassignSchool(abbreviation){return(0,_util_1.objectHasKey)(this.KEY_MAP,abbreviation)?this.KEY_MAP[abbreviation]:Object.values(this.KEY_MAP).includes(abbreviation)?abbreviation:this.KEY_MAP.evo}async updateItem(itemData){var _a,_b,_c;if("spell"===itemData.type){const school=null!==(_a=itemData.data.school)&&void 0!==_a?_a:{value:"evocation"};school.value=this.reassignSchool(school.value)}else if("consumable"===itemData.type&&(null===(_b=itemData.data.spell)||void 0===_b?void 0:_b.data)){const school=null!==(_c=itemData.data.spell.data.data.school)&&void 0!==_c?_c:{value:"evocation"};school.value=this.reassignSchool(school.value)}}}exports.Migration621RemoveConfigSpellSchools=Migration621RemoveConfigSpellSchools,Migration621RemoveConfigSpellSchools.version=.621},32476:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration622RemoveOldTokenEffectIcons=void 0;const base_1=__webpack_require__(54310);class Migration622RemoveOldTokenEffectIcons extends base_1.MigrationBase{async updateActor(actorData){var _a,_b,_c,_d,_e;actorData.token.effects&&(actorData.token["-=effects"]=null);const effects=null!==(_c=null===(_b=null===(_a=actorData.flags.pf2e)||void 0===_a?void 0:_a.token)||void 0===_b?void 0:_b.effects)&&void 0!==_c?_c:{};for(const img of Object.keys(effects))(null===(_e=null===(_d=actorData.token.effects)||void 0===_d?void 0:_d.map((fx=>fx.replace(/[.]/g,"-"))))||void 0===_e?void 0:_e.includes(img))&&(actorData.token.effects=actorData.token.effects.filter((fx=>fx.replace(/[.]/g,"-")!==img)))}async updateToken(tokenData){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;tokenData.effects=tokenData.effects.filter((fx=>!fx.startsWith("systems/pf2e/icons/conditions/")));const effects=null!==(_k=null!==(_d=null===(_c=null===(_b=null===(_a=tokenData.actorData.flags)||void 0===_a?void 0:_a.pf2e)||void 0===_b?void 0:_b.token)||void 0===_c?void 0:_c.effects)&&void 0!==_d?_d:null===(_j=null===(_h=null===(_g=null===(_f=null===(_e=game.actors.get(tokenData.actorId))||void 0===_e?void 0:_e.data)||void 0===_f?void 0:_f.flags)||void 0===_g?void 0:_g.pf2e)||void 0===_h?void 0:_h.token)||void 0===_j?void 0:_j.effects)&&void 0!==_k?_k:{};for(const img of Object.keys(effects))tokenData.effects.map((fx=>fx.replace(/[.]/g,"-"))).includes(img)&&(tokenData.effects=tokenData.effects.filter((fx=>fx.replace(/[.]/g,"-")!==img)))}}exports.Migration622RemoveOldTokenEffectIcons=Migration622RemoveOldTokenEffectIcons,Migration622RemoveOldTokenEffectIcons.version=.622},63267:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration623NumifyPotencyRunes=void 0;const base_1=__webpack_require__(54310);class Migration623NumifyPotencyRunes extends base_1.MigrationBase{async updateItem(itemData){if("weapon"!==itemData.type&&"armor"!==itemData.type)return;const potencyRune=itemData.data.potencyRune;potencyRune?potencyRune.value=Number(itemData.data.potencyRune.value)||null:itemData.data.potencyRune={value:null}}}exports.Migration623NumifyPotencyRunes=Migration623NumifyPotencyRunes,Migration623NumifyPotencyRunes.version=.623},24636:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration624RemoveTokenEffectIconFlags=void 0;const base_1=__webpack_require__(54310);class Migration624RemoveTokenEffectIconFlags extends base_1.MigrationBase{async updateActor(actorData){var _a,_b,_c;(null===(_c=null===(_b=null===(_a=actorData.flags)||void 0===_a?void 0:_a.pf2e)||void 0===_b?void 0:_b.token)||void 0===_c?void 0:_c.effects)&&(delete actorData.flags.pf2e.token.effects,"game"in globalThis&&(actorData.flags.pf2e.token["-=effects"]=null))}async updateToken(tokenData){var _a,_b,_c;(null===(_c=null===(_b=null===(_a=tokenData.actorData.flags)||void 0===_a?void 0:_a.pf2e)||void 0===_b?void 0:_b.token)||void 0===_c?void 0:_c.effects)&&(delete tokenData.actorData.flags.pf2e.token.effects,"game"in globalThis&&(tokenData.actorData.flags.pf2e.token["-=effects"]=null))}}exports.Migration624RemoveTokenEffectIconFlags=Migration624RemoveTokenEffectIconFlags,Migration624RemoveTokenEffectIconFlags.version=.624},7715:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration625EnsurePresenceOfSaves=void 0;const base_1=__webpack_require__(54310);class Migration625EnsurePresenceOfSaves extends base_1.MigrationBase{async updateActor(actorData){var _a;if("npc"!==actorData.type)return;const saves=actorData.data.saves;for(const key of["fortitude","reflex","will"])null!==(_a=saves[key])&&void 0!==_a||(saves[key]={value:0,saveDetail:""}),"number"!=typeof saves[key].value&&(saves[key].value=Number(saves[key].value)||0),"string"!=typeof saves[key].saveDetail&&(saves[key].saveDetail="")}}exports.Migration625EnsurePresenceOfSaves=Migration625EnsurePresenceOfSaves,Migration625EnsurePresenceOfSaves.version=.625},4099:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration626UpdateSpellCategory=void 0;const base_1=__webpack_require__(54310);class Migration626UpdateSpellCategory extends base_1.MigrationBase{async updateItem(itemData){var _a,_b,_c,_d,_e;if("spell"===itemData.type){const systemData=itemData.data,traditions=systemData.traditions,isFocus=traditions.value.includes("focus"),isRitual=traditions.value.includes("ritual");if("string"==typeof traditions.value&&(traditions.value=[]),systemData.spellCategorie||systemData.spellCategory){const currentCategory=null!==(_d=null!==(_b=null===(_a=systemData.spellCategorie)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:null===(_c=systemData.spellCategory)||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:"";itemData.data.category={value:isFocus?"focus":isRitual?"ritual":""===currentCategory?"spell":currentCategory},delete systemData.spellCategorie,delete systemData.spellCategory,"game"in globalThis&&(systemData["-=spellCategorie"]=null,systemData["-=spellCategory"]=null)}["focus","ritual"].includes(itemData.data.spellType.value)&&(itemData.data.spellType.value="utility"),traditions.value=traditions.value.filter((tradition=>!["focus","ritual"].includes(tradition)))}else"consumable"===itemData.type&&(null===(_e=itemData.data.spell)||void 0===_e?void 0:_e.data)&&await this.updateItem(itemData.data.spell.data)}}exports.Migration626UpdateSpellCategory=Migration626UpdateSpellCategory,Migration626UpdateSpellCategory.version=.626},63023:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration627LowerCaseSpellSaves=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310),AllSaves=["fortitude","reflex","will"];class Migration627LowerCaseSpellSaves extends base_1.MigrationBase{async updateItem(itemData){var _a,_b;if("spell"!==itemData.type)return;const saveType=null!==(_b=null===(_a=itemData.data.save.value)||void 0===_a?void 0:_a.toLowerCase())&&void 0!==_b?_b:"";(0,_util_1.tupleHasValue)(AllSaves,saveType)?itemData.data.save.value=saveType:itemData.data.save.value=""}}exports.Migration627LowerCaseSpellSaves=Migration627LowerCaseSpellSaves,Migration627LowerCaseSpellSaves.version=.627},90606:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration628UpdateIdentificationData=void 0;const base_1=__webpack_require__(54310),helpers_1=__webpack_require__(44252);class Migration628UpdateIdentificationData extends base_1.MigrationBase{get defaultData(){return JSON.parse(JSON.stringify({status:"identified",unidentified:{name:"",img:"",data:{description:{value:""}}},misidentified:{}}))}async updateItem(itemData){var _a,_b,_c,_d,_e;if(!(0,helpers_1.isPhysicalData)(itemData))return;null!==(_a=(_e=itemData.data.traits).rarity)&&void 0!==_a||(_e.rarity={value:"common"});const systemData=itemData.data,hasBadData=systemData.identification&&void 0===systemData.identification.status;systemData.identification&&!hasBadData||(systemData.identification=this.defaultData);const mystifyData=systemData.identification;if(mystifyData.status||(mystifyData.status="identified"),mystifyData.unidentified||(mystifyData.unidentified=this.defaultData.unidentified),mystifyData.misidentified||(mystifyData.misidentified=this.defaultData.misidentified),"identified"===mystifyData.status)systemData.identification=this.defaultData;else if("unidentified"===mystifyData.status){"string"==typeof(null===(_b=mystifyData.identified)||void 0===_b?void 0:_b.name)&&(itemData.name=mystifyData.identified.name);const identifiedData=mystifyData.identified;identifiedData&&identifiedData.data&&"string"==typeof(null===(_c=identifiedData.data.description)||void 0===_c?void 0:_c.value)&&(systemData.description.value=null===(_d=identifiedData.data)||void 0===_d?void 0:_d.description.value)}delete systemData.identified,"game"in globalThis&&"identified"in systemData&&(itemData["data.-=identified"]=null)}}exports.Migration628UpdateIdentificationData=Migration628UpdateIdentificationData,Migration628UpdateIdentificationData.version=.628},19691:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration629SetBaseItems=void 0;const base_1=__webpack_require__(54310),_util_1=__webpack_require__(6945),helpers_1=__webpack_require__(44252);class Migration629SetBaseItems extends base_1.MigrationBase{constructor(){super(...arguments),this.BASE_ARMORS=["explorers-clothing","padded-armor","leather-armor","studded-leather-armor","chain-shirt","hide-armor","scale-mail","chain-mail","breastplate","splint-mail","half-plate","full-plate","hellknight-plate"],this.MAGIC_ARMOR_TO_BASE={"breastplate-of-command-greater":"breastplate","breastplate-of-command":"breastplate","celestial-armor":"chain-mail","demon-armor":"full-plate",dragonplate:"full-plate","electric-eelskin":"leather-armor","forgotten-shell":"full-plate","ghoul-hide":"hide-armor","glorious-plate":"full-plate","impenetrable-scale":"scale-mail","jerkin-of-liberation":"studded-leather-armor","mail-of-luck":"splint-mail","moonlit-chain":"chain-shirt","noxious-jerkin":"padded-armor","numerian-steel-breastplate":"breastplate","plate-armor-of-the-deep":"full-plate","rhino-hide":"hide-armor","spangled-riders-suit":"studded-leather-armor","victory-plate":"full-plate"},this.BASE_WEAPONS=["adze","aklys","alchemical-bomb","alchemical-crossbow","aldori-dueling-sword","arrows","bastard-sword","battle-axe","battle-lute","bladed-diabolo","bladed-hoop","bladed-scarf","blowgun-darts","blowgun","bo-staff","boarding-axe","boarding-pike","bola","bolts","buugeng","clan-dagger","claw","claw-blade","club","combat-grapnel","composite-longbow","composite-shortbow","crossbow","dagger","daikyu","dart","dogslicer","dwarven-war-axe","elven-curve-blade","exquisite-sword-cane-sheath","exquisite-sword-cane","falchion","fangwire","fauchard","fighting-fan","filchers-fork","fire-poi","fist","flail","gaff","gauntlet","gill-hook","glaive","gnome-flickmace","gnome-hooked-hammer","greataxe","greatclub","greatpick","greatsword","guisarme","halberd","halfling-sling-staff","hand-adze","hand-crossbow","hatchet","heavy-crossbow","horsechopper","javelin","jaws","juggling-club","kama","katana","katar","khakkara","khopesh","kukri","lance","light-hammer","light-mace","light-pick","longbow","longspear","longsword","mace","machete","main-gauche","mambele","maul","meteor-hammer","monkeys-fist","morningstar","naginata","nightstick","nine-ring-sword","nunchaku","ogre-hook","orc-knuckle-dagger","orc-necksplitter","pick","poi","polytool","ranseur","rapier","rhoka-sword","rungu","sai","sap","sawtooth-saber","scimitar","scorpion-whip","scourge","scythe","shears","shield-bash","shield-boss","shield-spikes","shortbow","shortsword","shuriken","sickle","sling-bullets","sling","spear","spiked-chain","spiked-gauntlet","staff","starknife","stiletto-pen","sword-cane","tamchal-chakram","taw-launcher","tekko-kagi","temple-sword","tengu-gale-blade","throwing-knife","thunder-sling","tricky-pick","trident","urumi","wakizashi","war-flail","war-razor","warhammer","whip-claw","whip","wish-blade","wish-knife","wooden-taws"]}async updateItem(itemData){var _a;if(!(0,helpers_1.isPhysicalData)(itemData))return;const systemData=itemData.data;!systemData.slug||"armor"!==itemData.type&&"weapon"!==itemData.type||("armor"===itemData.type?("hide"!==systemData.slug&&"hide"!==(0,_util_1.sluggify)(itemData.name)||(systemData.slug="hide-armor"),this.BASE_ARMORS.includes(null!==(_a=systemData.slug)&&void 0!==_a?_a:"")?systemData.baseItem=systemData.slug:systemData.slug in this.MAGIC_ARMOR_TO_BASE&&(systemData.baseItem=this.MAGIC_ARMOR_TO_BASE[systemData.slug])):"weapon"===itemData.type&&(this.BASE_WEAPONS.includes(systemData.slug)&&(systemData.baseItem=systemData.slug),"cinderclaw-gauntlet"===systemData.slug&&(systemData.baseItem="spiked-gauntlet")))}}exports.Migration629SetBaseItems=Migration629SetBaseItems,Migration629SetBaseItems.version=.629},8004:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration630FixTalismanSpelling=void 0;const base_1=__webpack_require__(54310);class Migration630FixTalismanSpelling extends base_1.MigrationBase{async updateItem(itemData){if("consumable"===itemData.type){const consumableType=itemData.data.consumableType;"talasman"===consumableType.value&&(consumableType.value="talisman")}}}exports.Migration630FixTalismanSpelling=Migration630FixTalismanSpelling,Migration630FixTalismanSpelling.version=.63},21962:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration631FixSenseRuleElementSelector=void 0;const base_1=__webpack_require__(54310);class Migration631FixSenseRuleElementSelector extends base_1.MigrationBase{constructor(){super(...arguments),this.SENSE_SELECTOR_CONVERSION={lowlightvision:"lowLightVision",Tremorsense:"tremorsense"}}async updateItem(itemData){itemData.data.rules.forEach((rule=>{var _a;"PF2E.RuleElement.Sense"===rule.key&&rule.selector&&(rule.selector=null!==(_a=this.SENSE_SELECTOR_CONVERSION[rule.selector])&&void 0!==_a?_a:rule.selector)}))}}exports.Migration631FixSenseRuleElementSelector=Migration631FixSenseRuleElementSelector,Migration631FixSenseRuleElementSelector.version=.631},34441:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration632DeleteOrphanedSpells=void 0;const base_1=__webpack_require__(54310);class Migration632DeleteOrphanedSpells extends base_1.MigrationBase{constructor(){super(...arguments),this.requiresFlush=!0}async updateActor(actorData){const spells=actorData.items.filter((itemData=>"spell"===itemData.type)),entries=actorData.items.filter((itemData=>"spellcastingEntry"===itemData.type)),orphans=spells.filter((spellData=>!entries.some((entryData=>entryData._id===spellData.data.location.value))));actorData.items=actorData.items.filter((itemData=>!orphans.some((orphan=>orphan._id===itemData._id))))}}exports.Migration632DeleteOrphanedSpells=Migration632DeleteOrphanedSpells,Migration632DeleteOrphanedSpells.version=.632},76937:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration633DeleteUnidentifiedTraits=void 0;const helpers_1=__webpack_require__(44252),base_1=__webpack_require__(54310);class Migration633DeleteUnidentifiedTraits extends base_1.MigrationBase{async updateItem(itemData){var _a,_b;if("melee"===itemData.type){const systemData=itemData.data;systemData.identification&&("game"in globalThis?itemData["data.-=identification"]=null:delete systemData.identification)}if(!(0,helpers_1.isPhysicalData)(itemData))return;const unidentifiedDataData=null===(_b=null===(_a=itemData.data.identification)||void 0===_a?void 0:_a.unidentified)||void 0===_b?void 0:_b.data;(null==unidentifiedDataData?void 0:unidentifiedDataData.traits)&&("game"in globalThis?itemData["data.identification.unidentified.data.-=traits"]=null:delete unidentifiedDataData.traits)}}exports.Migration633DeleteUnidentifiedTraits=Migration633DeleteUnidentifiedTraits,Migration633DeleteUnidentifiedTraits.version=.633},98489:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration634PurgeMartialItems=void 0;const base_1=__webpack_require__(54310);class Migration634PurgeMartialItems extends base_1.MigrationBase{async updateActor(actorData){const martialIds=actorData.items.filter((itemData=>"martial"===itemData.type)).map((itemData=>itemData._id)),martialItemWeapons=actorData.items.filter((itemData=>{var _a,_b;if("weapon"!==itemData.type)return!1;const systemData=itemData.data;return martialIds.includes(null!==(_b=null===(_a=systemData.weaponType)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"")}));for(const weaponData of martialItemWeapons)weaponData.data.category="simple";actorData.items=actorData.items.filter((itemData=>"martial"!==itemData.type))}}exports.Migration634PurgeMartialItems=Migration634PurgeMartialItems,Migration634PurgeMartialItems.version=.634},69222:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration635NumifyACAndQuantity=void 0;const helpers_1=__webpack_require__(44252),base_1=__webpack_require__(54310);class Migration635NumifyACAndQuantity extends base_1.MigrationBase{async updateActor(actorData){"hazard"!==actorData.type&&"npc"!==actorData.type&&"vehicle"!==actorData.type||(actorData.data.attributes.ac.value=Number(actorData.data.attributes.ac.value))}async updateItem(itemData){(0,helpers_1.isPhysicalData)(itemData)&&(itemData.data.quantity.value=Number(itemData.data.quantity.value))}}exports.Migration635NumifyACAndQuantity=Migration635NumifyACAndQuantity,Migration635NumifyACAndQuantity.version=.635},95184:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration636NumifyArmorData=void 0;const base_1=__webpack_require__(54310);class Migration636NumifyArmorData extends base_1.MigrationBase{async updateItem(itemData){if("armor"!==itemData.type)return;const systemData=itemData.data;systemData.armor.value=Number(systemData.armor.value)||0,systemData.check.value=Number(systemData.check.value)||0,systemData.dex.value=Number(systemData.dex.value)||0,systemData.strength.value=Number(systemData.strength.value)||0,"string"==typeof systemData.speed.value&&(systemData.speed.value=parseInt(systemData.speed.value,10)||0)}}exports.Migration636NumifyArmorData=Migration636NumifyArmorData,Migration636NumifyArmorData.version=.636},87245:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration637CleanMeleeItems=void 0;const base_1=__webpack_require__(54310),meleeKeys=new Set(["description","source","traits","rules","slug","weaponType","attack","damageRolls","bonus","attackEffects"]);class Migration637CleanMeleeItems extends base_1.MigrationBase{async updateItem(itemData){if("melee"!==itemData.type)return;const systemData=itemData.data;for(const key of Object.keys(systemData))meleeKeys.has(key)||delete systemData[key]}}exports.Migration637CleanMeleeItems=Migration637CleanMeleeItems},75650:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration638SpellComponents=void 0;const base_1=__webpack_require__(54310),validComponents=["material","somatic","verbal"];class Migration638SpellComponents extends base_1.MigrationBase{async updateItem(itemData){var _a;if("spell"!==itemData.type)return;const components=itemData.data.components,oldComponents=new Set(null===(_a=components.value)||void 0===_a?void 0:_a.split(",").map((v=>v.trim().toLowerCase())));for(const component of validComponents)components[component]=components[component]||oldComponents.has(component);delete components.value,"game"in globalThis&&(components["-=value"]=null)}}exports.Migration638SpellComponents=Migration638SpellComponents,Migration638SpellComponents.version=.638},2769:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration639NormalizeLevelAndPrice=void 0;const helpers_1=__webpack_require__(44252),helpers_2=__webpack_require__(71046),base_1=__webpack_require__(54310);class Migration639NormalizeLevelAndPrice extends base_1.MigrationBase{async updateItem(itemData){if("level"in itemData.data&&(itemData.data.level.value=Number(itemData.data.level.value)||0),!(0,helpers_1.isPhysicalData)(itemData)||"treasure"===itemData.type&&"coins"===itemData.data.stackGroup.value)return;const price=itemData.data.price;try{price.value=price.value.trim()}catch(_a){price.value="0 gp"}/^[0-9]+$/.test(price.value)?price.value=`${price.value} gp`:0===(0,helpers_2.coinValueInCopper)((0,helpers_2.extractPriceFromItem)(itemData))&&(price.value="0 gp")}}exports.Migration639NormalizeLevelAndPrice=Migration639NormalizeLevelAndPrice,Migration639NormalizeLevelAndPrice.version=.639},90794:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration640CantripsAreNotZeroLevel=void 0;const base_1=__webpack_require__(54310);class Migration640CantripsAreNotZeroLevel extends base_1.MigrationBase{async updateItem(itemData){if("spell"!==itemData.type)return;const level=itemData.data.level;0===level.value&&(level.value=1,itemData.data.traits.value.includes("cantrip")||itemData.data.traits.value.push("cantrip"))}}exports.Migration640CantripsAreNotZeroLevel=Migration640CantripsAreNotZeroLevel,Migration640CantripsAreNotZeroLevel.version=.64},26121:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration641SovereignSteelValue=void 0;const base_1=__webpack_require__(54310);class Migration641SovereignSteelValue extends base_1.MigrationBase{async updateItem(itemSource){var _a;"weapon"===itemSource.type&&"sovereign steel"===(null===(_a=itemSource.data.preciousMaterial.value)||void 0===_a?void 0:_a.toLowerCase())&&(itemSource.data.preciousMaterial.value="sovereignSteel")}}exports.Migration641SovereignSteelValue=Migration641SovereignSteelValue,Migration641SovereignSteelValue.version=.641},4063:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration642TrackSchemaVersion=void 0;const base_1=__webpack_require__(54310);class Migration642TrackSchemaVersion extends base_1.MigrationBase{async updateActor(actorSource){var _a,_b;null!==(_a=(_b=actorSource.data).schema)&&void 0!==_a||(_b.schema={version:null,lastMigration:null})}async updateItem(itemSource){var _a,_b;null!==(_a=(_b=itemSource.data).schema)&&void 0!==_a||(_b.schema={version:null,lastMigration:null})}}exports.Migration642TrackSchemaVersion=Migration642TrackSchemaVersion,Migration642TrackSchemaVersion.version=.642},62371:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration643HazardLevel=void 0;const base_1=__webpack_require__(54310);class Migration643HazardLevel extends base_1.MigrationBase{async updateActor(actorSource){if("hazard"!==actorSource.type)return;const hazardDetails=actorSource.data.details;if("number"==typeof hazardDetails.level){const level=hazardDetails.level;hazardDetails.level={value:level}}}}exports.Migration643HazardLevel=Migration643HazardLevel,Migration643HazardLevel.version=.643},69080:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration644SpellcastingCategory=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310),defaultTraditionByClass={wizard:"arcane",cleric:"divine",druid:"primal",bard:"occult",ranger:"primal",champion:"divine",monk:"divine"};class Migration644SpellcastingCategory extends base_1.MigrationBase{async updateItem(item,actor){var _a,_b;if(!actor||"spellcastingEntry"!==item.type)return;const spellcasting=item.data;if("ritual"===spellcasting.tradition.value)spellcasting.prepared.value="ritual",spellcasting.tradition.value="";else if("focus"===spellcasting.tradition.value){spellcasting.prepared.value="focus";const possibleMatch=actor.items.find((testItem=>{if("spellcastingEntry"!==testItem.type)return!1;const testSpellcasting=testItem.data;return(0,_util_1.tupleHasValue)(["prepared","spontaneous"],testSpellcasting.prepared.value)&&"focus"!==testSpellcasting.tradition.value&&("character"===actor.type?testSpellcasting.proficiency.value===spellcasting.proficiency.value:testSpellcasting.spelldc.value===spellcasting.spelldc.value)&&(testSpellcasting.ability.value||"int")===(spellcasting.ability.value||"int")}));if(possibleMatch)spellcasting.tradition.value=possibleMatch.data.tradition.value;else{const classItem=actor.items.find((testItem=>"class"===testItem.type)),className=(null==classItem?void 0:classItem.data.slug)||(0,_util_1.sluggify)(null!==(_a=null==classItem?void 0:classItem.name)&&void 0!==_a?_a:"");spellcasting.tradition.value=null!==(_b=defaultTraditionByClass[className])&&void 0!==_b?_b:"arcane"}}}}exports.Migration644SpellcastingCategory=Migration644SpellcastingCategory,Migration644SpellcastingCategory.version=.644},2876:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration645TokenImageSize=void 0;const base_1=__webpack_require__(54310);class Migration645TokenImageSize extends base_1.MigrationBase{constructor(){super(...arguments),this.imageOverrides=new Map,this.sizeOverrides=new Map}isTokenImageFlag(flag){return"string"==typeof flag}isTokenSizeFlag(flag){return flag instanceof Object&&"height"in flag&&"number"==typeof flag.height&&"width"in flag&&"number"==typeof flag.width}async updateActor(actorSource){var _a,_b,_c,_d,_e;const flags=actorSource.flags,originalImg=null===(_b=null===(_a=flags.pf2e)||void 0===_a?void 0:_a.token)||void 0===_b?void 0:_b.img;this.isTokenImageFlag(originalImg)&&this.imageOverrides.set(actorSource._id,originalImg);const originalSize=null===(_d=null===(_c=flags.pf2e)||void 0===_c?void 0:_c.token)||void 0===_d?void 0:_d.size;this.isTokenSizeFlag(originalSize)&&this.sizeOverrides.set(actorSource._id,originalSize),"object"==typeof(null===(_e=flags.pf2e)||void 0===_e?void 0:_e.token)&&("game"in globalThis&&(flags.pf2e["-=token"]=null),delete flags.pf2e.token)}async updateToken(tokenSource,actor){var _a,_b,_c,_d,_e;tokenSource.img=null!==(_b=this.imageOverrides.get(null!==(_a=null==actor?void 0:actor.id)&&void 0!==_a?_a:""))&&void 0!==_b?_b:tokenSource.img;const sizeOverride=this.sizeOverrides.get(null!==(_c=null==actor?void 0:actor.id)&&void 0!==_c?_c:"");tokenSource.height=null!==(_d=null==sizeOverride?void 0:sizeOverride.height)&&void 0!==_d?_d:tokenSource.height,tokenSource.width=null!==(_e=null==sizeOverride?void 0:sizeOverride.width)&&void 0!==_e?_e:tokenSource.width}}exports.Migration645TokenImageSize=Migration645TokenImageSize,Migration645TokenImageSize.version=.645},11338:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration646UpdateInlineLinks=void 0;const base_1=__webpack_require__(54310);class Migration646UpdateInlineLinks extends base_1.MigrationBase{updateCheckAttributes(markup=""){return markup.replace(/\bdata-pf2-([a-z]+)-check="\w*"/g,'data-pf2-check="$1"').replace(/\bdata-pf2-(?:saving-throw|skill-check)\b/g,"data-pf2-check")}async updateActor(actorData){var _a;if("hazard"===actorData.type){const hazardDetails=actorData.data.details;hazardDetails.disable=this.updateCheckAttributes(null!==(_a=hazardDetails.disable)&&void 0!==_a?_a:"")}}async updateItem(itemData){var _a;const description=itemData.data.description;description.value=this.updateCheckAttributes(null!==(_a=description.value)&&void 0!==_a?_a:"")}}exports.Migration646UpdateInlineLinks=Migration646UpdateInlineLinks,Migration646UpdateInlineLinks.version=.646},30161:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration647FixPCSenses=void 0;const base_1=__webpack_require__(54310);class Migration647FixPCSenses extends base_1.MigrationBase{async updateActor(actorData){if("character"!==actorData.type)return;const notTraits=actorData.data.traits;Array.isArray(notTraits.senses)?notTraits.senses=notTraits.senses.filter((sense=>!!sense)):notTraits.senses=[]}}exports.Migration647FixPCSenses=Migration647FixPCSenses,Migration647FixPCSenses.version=.647},79483:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration648RemoveInvestedProperty=void 0;const base_1=__webpack_require__(54310);class Migration648RemoveInvestedProperty extends base_1.MigrationBase{async updateItem(itemSource){if("treasure"!==itemSource.type&&"consumable"!==itemSource.type)return;const systemData=itemSource.data;delete systemData.invested,"game"in globalThis&&(systemData["-=invested"]=null)}}exports.Migration648RemoveInvestedProperty=Migration648RemoveInvestedProperty,Migration648RemoveInvestedProperty.version=.648},26888:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration649FocusToActor=void 0;const base_1=__webpack_require__(54310);class Migration649FocusToActor extends base_1.MigrationBase{async updateActor(actorData){var _a,_b;if(!["character","npc"].includes(actorData.type))return;const systemData=actorData.data;systemData.resources||(systemData.resources={});const spellLists=actorData.items.filter((i=>"spellcastingEntry"===i.type)).sort(((a,b)=>(a.sort||0)-(b.sort||0))).map((i=>i.data)).filter((i=>"focus"===i.prepared.value&&i.focus)).sort(((a,b)=>{var _a,_b;return((null===(_a=b.focus)||void 0===_a?void 0:_a.pool)||0)-((null===(_b=a.focus)||void 0===_b?void 0:_b.pool)||0)}));if(0===spellLists.length)return;const focusOld=spellLists[0].focus;actorData.data.resources.focus={value:null!==(_a=null==focusOld?void 0:focusOld.points)&&void 0!==_a?_a:0,max:null!==(_b=null==focusOld?void 0:focusOld.pool)&&void 0!==_b?_b:1}}async updateItem(itemData){if("spellcastingEntry"!==itemData.type)return;const data=itemData.data;delete data.focus,"game"in globalThis&&(data["-=focus"]=null)}}exports.Migration649FocusToActor=Migration649FocusToActor,Migration649FocusToActor.version=.649},24002:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration650StringifyWeaponProperties=void 0;const base_1=__webpack_require__(54310);class Migration650StringifyWeaponProperties extends base_1.MigrationBase{async updateItem(itemData){var _a,_b;if("weapon"!==itemData.type)return;const systemData=itemData.data;systemData.weaponType&&((_b=systemData.weaponType).value||(_b.value="simple"));const range=null!==(_a=systemData.range)&&void 0!==_a?_a:systemData.range={value:"melee"};range instanceof Object&&"string"==typeof range.value&&(range.value=range.value.trim()||"melee","reach"===range.value&&(range.value="melee"))}}exports.Migration650StringifyWeaponProperties=Migration650StringifyWeaponProperties,Migration650StringifyWeaponProperties.version=.65},50813:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration651EphemeralFocusPool=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration651EphemeralFocusPool extends base_1.MigrationBase{constructor(){super(...arguments),this.increasesByOne=new Set(["abundant-step","achaekeks-grip","advanced-bloodline","advanced-deitys-domain","advanced-domain","advanced-revelation","advanced-school-spell","advanced-seeker-of-truths","animal-feature","arcane-school-spell","apex-companion","basic-lesson","beastmasters-trance","blessed-sacrifice","cackle","champions-sacrifice","clinging-shadows-initiate","counter-perform","debilitating-dichotomy","domain-acumen","domain-fluency","empty-body","enlarge-companion","ephemeral-tracking","familiar-form","fatal-aria","gaze-of-veracity","greater-bloodline","greater-lesson","greater-revelation","heal-animal","healing-touch","hunters-luck","hunters-vision","impaling-briars","inspire-heroics","invoke-disaster","invoke-the-crimson-oath","ki-blast","ki-form","ki-rush","ki-strike","leaf-order","light-of-revelation","lingering-composition","litany-against-sloth","litany-against-wrath","litany-of-depravity","litany-of-righteousness","litany-of-self-interest","loremasters-etude","magic-hide","major-lesson","mantis-form","medusas-wrath","order-spell","perfect-ki-adept","perfect-strike","quivering-palm","rangers-bramble","shadow-magic","shadows-web","shall-not-falter-shall-not-rout","snare-hopping","song-of-the-fallen","soothing-ballad","soothing-mist","speaking-sky","spellmasters-ward","steal-the-sky","storm-order","sun-blade","suns-fury","terrain-transposition","transcribe-moment","universal-versatility","vision-of-weakness","wholeness-of-body","wild-winds-initiate","wind-caller","wind-jump","wronged-monks-wrath"])}needsRuleElement(rules){return!rules.some((rule=>"ActiveEffectLike"===rule.key&&"data.resources.focus.max"===rule.path))}async updateActor(actorSource){var _a,_b,_c;if("character"!==actorSource.type)return;const systemData=actorSource.data;null!==(_a=systemData.resources)&&void 0!==_a||(systemData.resources={});const resources=systemData.resources;"number"==typeof(null===(_b=resources.focus)||void 0===_b?void 0:_b.max)&&"game"in globalThis?resources.focus["-=max"]=null:null===(_c=resources.focus)||void 0===_c||delete _c.max}async updateItem(itemSource){if("feat"!==itemSource.type)return;const systemData=itemSource.data,rule=(()=>{var _a;const slug=null!==(_a=systemData.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name);return"revelation-spells"===slug?{key:"ActiveEffectLike",path:"data.resources.focus.max",mode:"upgrade",value:2,priority:10}:"major-curse"===slug?{key:"ActiveEffectLike",path:"data.resources.focus.max",mode:"upgrade",value:3}:["composition-spells","devotion-spells","druidic-order","hexes"].includes(slug)||/^(?:arcane-school|bloodline)-/.test(slug)&&"classfeature"===itemSource.data.featType.value?{key:"ActiveEffectLike",path:"data.resources.focus.max",mode:"upgrade",value:1,priority:10}:this.increasesByOne.has(slug)||slug.startsWith("first-revelation-")?{key:"ActiveEffectLike",path:"data.resources.focus.max",mode:"add",value:1}:null})();rule&&this.needsRuleElement(itemSource.data.rules)&&systemData.rules.push(rule)}}exports.Migration651EphemeralFocusPool=Migration651EphemeralFocusPool,Migration651EphemeralFocusPool.version=.651},35673:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration652KillHalcyonTradition=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310),defaultTraditionByClass={wizard:"arcane",druid:"primal",ranger:"primal"};class Migration652KillHalcyonTradition extends base_1.MigrationBase{async updateItem(itemData,actor){var _a,_b;if("spellcastingEntry"!==itemData.type)return;const tradition=itemData.data.tradition;if("halcyon"===tradition.value){const classItem=null==actor?void 0:actor.items.find((testItem=>"class"===testItem.type)),className=(null==classItem?void 0:classItem.data.slug)||(0,_util_1.sluggify)(null!==(_a=null==classItem?void 0:classItem.name)&&void 0!==_a?_a:"");tradition.value=null!==(_b=defaultTraditionByClass[className])&&void 0!==_b?_b:"arcane"}}}exports.Migration652KillHalcyonTradition=Migration652KillHalcyonTradition,Migration652KillHalcyonTradition.version=.652},67060:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration653AEstoREs=void 0;const base_1=__webpack_require__(54310);class Migration653AEstoREs extends base_1.MigrationBase{constructor(){super(...arguments),this.pathsToRemove=new Set([...["unarmored","light","medium","heavy"].map((category=>`data.martial.${category}.rank`)),...["unarmed","simple","martial","advanced"].map((category=>`data.martial.${category}.rank`)),...["fortitude","reflex","will"].map((save=>`data.saves.${save}.rank`)),"data.details.keyability.value","data.attributes.perception.rank","data.attributes.classDC.rank"])}isRemovableAE(effect){return effect.changes.every(this.isRemoveableChange)}isRemoveableChange(change){return 0!==change.mode&&Number.isInteger(Number(change.value))||5===change.mode&&!change.value.startsWith("{")}fixClassKeyAbilities(classSource){const keyAbility=classSource.data.keyAbility;keyAbility.value=keyAbility.value.map((value=>"string"==typeof value?value:value.value))}async updateActor(actorSource){if("character"!==actorSource.type)return;actorSource.data.martial={},actorSource.effects=actorSource.effects.filter((effect=>{var _a,_b;const origin=null!==(_a=effect.origin)&&void 0!==_a?_a:"",itemId=null===(_b=/(?<=Item\.)[a-z0-9]{16}$/i.exec(origin))||void 0===_b?void 0:_b[0],itemSource=actorSource.items.find((maybeSource=>maybeSource._id===itemId));return itemSource&&!(["class","effect","feat"].includes(itemSource.type)&&this.isRemovableAE(effect))}))}async updateItem(itemSource){if("class"!==itemSource.type&&"effect"!==itemSource.type&&"feat"!==itemSource.type)return;"class"===itemSource.type&&this.fixClassKeyAbilities(itemSource);const modes={1:"multiply",2:"add",3:"downgrade",4:"upgrade",5:"override"};for(const effect of[...itemSource.effects]){"class"===itemSource.type&&(effect.changes=effect.changes.filter((change=>!this.pathsToRemove.has(change.key))));const toAELikes=effect.changes.filter(this.isRemoveableChange),rules=itemSource.data.rules;for(const change of toAELikes){if(0===change.mode)continue;const newRule={key:"ActiveEffectLike",path:change.key,mode:modes[change.mode],value:Number.isNaN(Number(change.value))?change.value:Number(change.value),priority:change.priority};rules.push(newRule)}effect.changes=effect.changes.filter((change=>!this.isRemoveableChange(change)))}itemSource.effects=itemSource.effects.filter((effect=>!this.isRemovableAE(effect)))}}exports.Migration653AEstoREs=Migration653AEstoREs,Migration653AEstoREs.version=.653},6029:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration654ActionTypeAndCount=void 0;const base_1=__webpack_require__(54310);class Migration654ActionTypeAndCount extends base_1.MigrationBase{async updateItem(item){if("feat"!==item.type&&"action"!==item.type)return;const systemData=item.data;systemData.actions.value=Math.min(3,Math.max(Number(systemData.actions.value),0))||null}}exports.Migration654ActionTypeAndCount=Migration654ActionTypeAndCount,Migration654ActionTypeAndCount.version=.654},49198:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration655CreatureTokenSizes=void 0;const base_1=__webpack_require__(54310);class Migration655CreatureTokenSizes extends base_1.MigrationBase{constructor(){super(...arguments),this.dimensionToSize={.5:"tiny",2:"lg",3:"huge",4:"grg"}}isTokenSizeRE(rule){var _a;return!!(null===(_a=rule.key)||void 0===_a?void 0:_a.endsWith("TokenSize"))}isActorSizeAELike(rule){var _a;return!!(null===(_a=rule.key)||void 0===_a?void 0:_a.endsWith("ActiveEffectLike"))&&"data.traits.size.value"===rule.path}isBracketedValue(value){return value instanceof Object&&"brackets"in value&&Array.isArray(value.brackets)}async updateItem(itemSource){var _a,_b,_c,_d;null!==(_a=(_d=itemSource.data).rules)&&void 0!==_a||(_d.rules=[]);const rules=itemSource.data.rules,actorSizeAELike=rules.find(this.isActorSizeAELike),tokenSizeRE=rules.find(this.isTokenSizeRE);if(actorSizeAELike)actorSizeAELike.key="CreatureSize",delete actorSizeAELike.path,delete actorSizeAELike.mode;else if(tokenSizeRE&&["number","string","object"].includes(typeof tokenSizeRE.value))if(tokenSizeRE.key="CreatureSize",this.isBracketedValue(tokenSizeRE.value))for(const bracket of tokenSizeRE.value.brackets)"number"==typeof bracket.value&&(bracket.value=null!==(_b=this.dimensionToSize[bracket.value])&&void 0!==_b?_b:"med");else"number"==typeof tokenSizeRE.value&&(tokenSizeRE.value=null!==(_c=this.dimensionToSize[tokenSizeRE.value])&&void 0!==_c?_c:"med");tokenSizeRE&&"CreatureSize"!==tokenSizeRE.key&&itemSource.data.rules.splice(itemSource.data.rules.indexOf(tokenSizeRE),1)}}exports.Migration655CreatureTokenSizes=Migration655CreatureTokenSizes,Migration655CreatureTokenSizes.version=.655},41387:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration656OtherFocusPoolSources=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration656OtherFocusPoolSources extends base_1.MigrationBase{constructor(){super(...arguments),this.increasesByOne=new Set(["additional-shadow-magic","basic-bloodline-spell","blessed-one-dedication","breath-of-the-dragon","crystal-ward-spells","domain-initiate","expanded-domain-initiate","gravity-weapon","heal-companion","leaf-order","shadow-illusion","storm-order","wings-of-the-dragon"])}needsRuleElement(rules){return!rules.some((rule=>"ActiveEffectLike"===rule.key&&"data.resources.focus.max"===rule.path))}async updateItem(itemSource){if("feat"!==itemSource.type)return;const systemData=itemSource.data,rule=(()=>{var _a;const slug=null!==(_a=systemData.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name);return"druidic-order"===slug?{key:"ActiveEffectLike",path:"data.resources.focus.max",mode:"upgrade",value:1,priority:10}:this.increasesByOne.has(slug)?{key:"ActiveEffectLike",path:"data.resources.focus.max",mode:"add",value:1}:null})();rule&&this.needsRuleElement(itemSource.data.rules)&&systemData.rules.push(rule)}}exports.Migration656OtherFocusPoolSources=Migration656OtherFocusPoolSources,Migration656OtherFocusPoolSources.version=.656},43453:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration657RemoveSetProperty=void 0;const base_1=__webpack_require__(54310);class Migration657RemoveSetProperty extends base_1.MigrationBase{async updateActor(actorSource){var _a;const systemFlags=null!==(_a=actorSource.flags.pf2e)&&void 0!==_a?_a:{};delete systemFlags["set-property"],"game"in globalThis&&"set-property"in systemFlags&&(systemFlags["-=set-property"]=null)}async updateItem(itemSource){var _a,_b;null!==(_a=(_b=itemSource.data).rules)&&void 0!==_a||(_b.rules=[]);const rules=itemSource.data.rules,setPropertyRules=itemSource.data.rules.filter((rule=>"string"==typeof rule.key&&["SetProperty","PF2E.RuleElement.SetProperty"].includes(rule.key)&&"string"==typeof rule.property&&"object"==typeof rule.on&&null!==rule.on&&"added"in rule.on)),aeLikes=setPropertyRules.map((setProperty=>({key:"ActiveEffectLike",mode:"override",path:setProperty.property.replace(/^flags\.2e/,"flags.pf2e"),value:setProperty.on.added,priority:10})));for(const setPropertyRule of setPropertyRules){const index=rules.indexOf(setPropertyRule);rules.splice(index,1,aeLikes.shift())}itemSource.data.rules=itemSource.data.rules.filter((rule=>rule&&"string"==typeof rule.key&&!rule.key.trim().endsWith("SetProperty")))}}exports.Migration657RemoveSetProperty=Migration657RemoveSetProperty,Migration657RemoveSetProperty.version=.657},50169:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration658MonkUnarmoredProficiency=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration658MonkUnarmoredProficiency extends base_1.MigrationBase{async updateItem(itemSource){var _a;const slug=null!==(_a=itemSource.data.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name);"class"===itemSource.type&&"monk"===slug&&2!==itemSource.data.defenses.unarmored&&(itemSource.data.defenses.unarmored=2)}}exports.Migration658MonkUnarmoredProficiency=Migration658MonkUnarmoredProficiency,Migration658MonkUnarmoredProficiency.version=.658},77636:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration659MultipleDamageRows=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310),formulaHasValue=value=>!!value&&"0"!==value,modes=["level1","level2","level3","level4"];class Migration659MultipleDamageRows extends base_1.MigrationBase{async updateItem(itemData){var _a;if("spell"!==itemData.type)return;const data=itemData.data;if(data.scaling instanceof Object&&("string"==typeof data.scaling.mode&&(0,_util_1.tupleHasValue)(modes,data.scaling.mode)&&(data.scaling.interval=modes.indexOf(data.scaling.mode)+1),"string"==typeof data.scaling.formula&&formulaHasValue(data.scaling.formula)&&!data.scaling.damage&&(data.scaling.damage={0:data.scaling.formula}),data.scaling.interval&&data.scaling.damage?"game"in globalThis?(data.scaling["-=mode"]=null,data.scaling["-=formula"]=null):(delete data.scaling.mode,delete data.scaling.formula):"game"in globalThis?data["-=scaling"]=null:delete data.scaling),"string"==typeof data.damage.value){if(formulaHasValue(data.damage.value)||data.damage.applyMod){const value=data.damage.value;data.damage.value={0:{value,applyMod:data.damage.applyMod||void 0,type:{value:(null===(_a=data.damageType)||void 0===_a?void 0:_a.value)||"untyped",categories:[]}}}}else data.damage.value={};"game"in globalThis?data.damage["-=applyMod"]=null:delete data.damage.applyMod}"damageType"in data&&("game"in globalThis?data["-=damageType"]=null:data.damageType=void 0)}}exports.Migration659MultipleDamageRows=Migration659MultipleDamageRows,Migration659MultipleDamageRows.version=.659},46105:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration660DerivedSpellTraits=void 0;const base_1=__webpack_require__(54310),values_1=__webpack_require__(67623);class Migration660DerivedSpellTraits extends base_1.MigrationBase{constructor(){super(...arguments),this.derivedTraits=[...values_1.MAGIC_SCHOOLS,...values_1.MAGIC_TRADITIONS]}async updateItem(itemSource){if("spell"===itemSource.type){const traits=itemSource.data.traits;traits.value=traits.value.filter((trait=>!this.derivedTraits.includes(trait)))}}}exports.Migration660DerivedSpellTraits=Migration660DerivedSpellTraits,Migration660DerivedSpellTraits.version=.66},10335:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration661NumifyVehicleDimensions=void 0;const base_1=__webpack_require__(54310);class Migration661NumifyVehicleDimensions extends base_1.MigrationBase{async updateActor(actorSource){if("vehicle"===actorSource.type){const{space}=actorSource.data.details;space.long=Number(space.long)||2,space.wide=Number(space.wide)||2,space.high=Number(space.high)||1}}}exports.Migration661NumifyVehicleDimensions=Migration661NumifyVehicleDimensions,Migration661NumifyVehicleDimensions.version=.661},63724:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration662LinkToActorSizeDefaults=void 0;const base_1=__webpack_require__(54310);class Migration662LinkToActorSizeDefaults extends base_1.MigrationBase{async updateActor(actorSource){var _a,_b,_c,_d,_e,_f;const linkToActorSize=!["hazard","loot"].includes(actorSource.type);null!==(_a=(_d=actorSource.token).flags)&&void 0!==_a||(_d.flags={pf2e:{linkToActorSize}}),null!==(_b=(_e=actorSource.token.flags).pf2e)&&void 0!==_b||(_e.pf2e={linkToActorSize}),null!==(_c=(_f=actorSource.token.flags.pf2e).linkToActorSize)&&void 0!==_c||(_f.linkToActorSize=linkToActorSize)}async updateToken(tokenSource,actor){var _a,_b,_c,_d;const linkToActorSize=!["hazard","loot"].includes(actor.type);null!==(_a=(_c=tokenSource.flags).pf2e)&&void 0!==_a||(_c.pf2e={linkToActorSize}),null!==(_b=(_d=tokenSource.flags.pf2e).linkToActorSize)&&void 0!==_b||(_d.linkToActorSize=linkToActorSize)}}exports.Migration662LinkToActorSizeDefaults=Migration662LinkToActorSizeDefaults,Migration662LinkToActorSizeDefaults.version=.662},47655:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration663FixSpellDamage=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);function createBasicDamage(value,applyMod,damageType){return{0:{applyMod,type:{categories:[],value:damageType},value}}}function createBasicScaling(interval,scaling){return{interval,damage:{0:scaling}}}class Migration663FixSpellDamage extends base_1.MigrationBase{async updateItem(itemData){var _a,_b,_c;if("spell"!==itemData.type)return;if(Object.keys(null!==(_b=null===(_a=itemData.data.damage)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:{}).length>0)return;switch(null!==(_c=itemData.data.slug)&&void 0!==_c?_c:(0,_util_1.sluggify)(itemData.name)){case"animated-assault":itemData.data.damage.value=createBasicDamage("2d10",!1,"bludgeoning"),itemData.data.scaling=createBasicScaling(2,"2d10");break;case"daze":itemData.data.damage.value=createBasicDamage("0",!0,"mental"),itemData.data.scaling=createBasicScaling(2,"1d6");break;case"personal-blizzard":itemData.data.damage.value={0:{applyMod:!1,type:{value:"cold",categories:[]},value:"1d6"},1:{applyMod:!1,type:{value:"cold",subtype:"persistent",categories:[]},value:"1d6"}},itemData.data.scaling={interval:1,damage:{0:"1",1:"1"}};break;case"power-word-kill":itemData.data.damage.value=createBasicDamage("50",!1,"untyped")}}}exports.Migration663FixSpellDamage=Migration663FixSpellDamage,Migration663FixSpellDamage.version=.663},69417:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration664DeleteCUBConditions=void 0;const base_1=__webpack_require__(54310);class Migration664DeleteCUBConditions extends base_1.MigrationBase{async updateActor(actorSource){const cubConditions=actorSource.items.filter((item=>{var _a;return"condition"===item.type&&!(null===(_a=item.data.references)||void 0===_a?void 0:_a.overriddenBy)}));for(const condition of cubConditions)actorSource.items.findSplice((item=>item===condition))}}exports.Migration664DeleteCUBConditions=Migration664DeleteCUBConditions,Migration664DeleteCUBConditions.version=.664},46544:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration665HandwrapsCorrections=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration665HandwrapsCorrections extends base_1.MigrationBase{async updateItem(itemSource){var _a;const slug=null!==(_a=itemSource.data.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name);"weapon"===itemSource.type&&"handwraps-of-mighty-blows"===slug&&(itemSource.data.usage.value="worn-gloves");const dirPath="systems/pf2e/icons/equipment/worn-items/other-worn-items";itemSource.img===`${dirPath}/handwraps-of-nighty-blows.webp`&&(itemSource.img=`${dirPath}/handwraps-of-mighty-blows.webp`)}}exports.Migration665HandwrapsCorrections=Migration665HandwrapsCorrections,Migration665HandwrapsCorrections.version=.665},69e3:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration666UsageAndStowingContainers=void 0;const helpers_1=__webpack_require__(44252),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration666UsageAndStowingContainers extends base_1.MigrationBase{constructor(){super(...arguments),this.backpacks=new Set(["backpack","knapsack-of-halflingkind","knapsack-of-halflingkind-greater","sturdy-satchel","vaultbreaker-harness","voyagers-pack"]),this.wornGarment=new Set(["sleeves-of-storage","sleeves-of-storage-greater"]),this.wornGloves=new Set(["gloves-of-storing"]),this.heldInTwoHands=new Set(["bag-of-devouring-type-i","bag-of-devouring-type-ii","bag-of-devouring-type-iii","bag-of-holding-type-i","bag-of-holding-type-ii","bag-of-holding-type-iii","bag-of-holding-type-iv","bag-of-weasels","chest","sealing-chest-greater","sealing-chest-lesser","sealing-chest-moderate"]),this.stowingContainers=new Set([...this.backpacks,...this.heldInTwoHands,...this.wornGarment,...this.wornGloves,"extradimensional-stash"])}async updateItem(itemSource){var _a,_b;if(!itemSource.data.traits)return;const traits=itemSource.data.traits;if("string"==typeof(null===(_a=traits.usage)||void 0===_a?void 0:_a.value)){const traitUsage=traits.usage.value,isPhysical=(0,helpers_1.isPhysicalData)(itemSource),keepUsage=isPhysical&&("held-in-one-hand"!==traitUsage||""===itemSource.data.usage.value);isPhysical&&keepUsage&&(itemSource.data.usage.value=traits.usage.value),"game"in globalThis?traits["-=usage"]=null:delete traits.usage}if("backpack"!==itemSource.type)return;const slug=null!==(_b=itemSource.data.slug)&&void 0!==_b?_b:(0,_util_1.sluggify)(itemSource.name);this.backpacks.has(slug)?itemSource.data.usage.value="wornbackpack":this.heldInTwoHands.has(slug)?itemSource.data.usage.value="held-in-two-hands":this.wornGarment.has(slug)?itemSource.data.usage.value="worngarment":this.wornGloves.has(slug)?itemSource.data.usage.value="worngloves":itemSource.data.usage.value="worn",itemSource.data.stowing=this.stowingContainers.has(slug)}}exports.Migration666UsageAndStowingContainers=Migration666UsageAndStowingContainers,Migration666UsageAndStowingContainers.version=.666},91543:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration667HPSubProperties=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration667HPSubProperties extends base_1.MigrationBase{addRecoveryMultiplier(itemSource,slug){if(!["dream-may","fast-recovery"].includes(slug))return;const rules=itemSource.data.rules;if(!rules.some((rule=>"path"in rule&&"data.attributes.hp.recoveryMultiplier"===rule.path))){const element={key:"ActiveEffectLike",mode:"add",path:"data.attributes.hp.recoveryMultiplier",value:1};rules.push(element)}}addNegativeHealing(itemSource,slug){if(!["dhampir","negative-healing"].includes(slug))return;const rules=itemSource.data.rules;if(!rules.some((rule=>"path"in rule&&"data.attributes.hp.negativeHealing"===rule.path))){const element={key:"ActiveEffectLike",mode:"override",path:"data.attributes.hp.negativeHealing",value:!0};rules.push(element)}}async updateItem(itemSource){var _a;if("feat"!==itemSource.type&&"action"!==itemSource.type)return;const slug=null!==(_a=itemSource.data.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name);this.addRecoveryMultiplier(itemSource,slug),this.addNegativeHealing(itemSource,slug)}}exports.Migration667HPSubProperties=Migration667HPSubProperties,Migration667HPSubProperties.version=.667},25409:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration668ArmorSpeedPenalty=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration668ArmorSpeedPenalty extends base_1.MigrationBase{async updateItem(itemSource){var _a,_b,_c;const slug=null!==(_a=itemSource.data.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name);if("armor"===itemSource.type){const rules=null!==(_b=(_c=itemSource.data).rules)&&void 0!==_b?_b:_c.rules=[],rule=rules.find((rule=>{var _a;return rule.key.endsWith("FlatModifier")&&"speed"===rule.selector&&"object"==typeof rule.value&&JSON.stringify(null!==(_a=rule.predicate)&&void 0!==_a?_a:null)===JSON.stringify({not:["unburdened-iron"]})}));rule&&rules.splice(rules.indexOf(rule),1)}else if("feat"===itemSource.type)if("unburdened-iron"===slug){const rule={key:"RollOption",domain:"speed",option:"armor:ignore-speed-penalty"};itemSource.data.rules=[rule]}else if("armored-stealth"===slug){const rule={key:"RollOption",domain:"stealth",option:"armor:ignore-noisy-penalty"};itemSource.data.rules=[rule]}}}exports.Migration668ArmorSpeedPenalty=Migration668ArmorSpeedPenalty,Migration668ArmorSpeedPenalty.version=.668},93322:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration669NPCAttackEffects=void 0;const base_1=__webpack_require__(54310),_util_1=__webpack_require__(6945);class Migration669NPCAttackEffects extends base_1.MigrationBase{async updateItem(item,actor){var _a,_b;actor&&"melee"===item.type&&(null!==(_a=(_b=item.data).attackEffects)&&void 0!==_a||(_b.attackEffects={value:[]}),Array.isArray(item.data.attackEffects.value)&&item.data.attackEffects.value.forEach(((entry,index,arr)=>{arr[index]=(0,_util_1.sluggify)(entry)})))}}exports.Migration669NPCAttackEffects=Migration669NPCAttackEffects,Migration669NPCAttackEffects.version=.669},3892:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration670AncestryVision=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration670AncestryVision extends base_1.MigrationBase{constructor(){super(...arguments),this.DARKVISION_ID="HHVQDp61ehcpdiU8",this.LOWLIGHTVISION_ID="DRtaqOHXTRtGRIUT"}async updateActor(actorSource){if("character"!==actorSource.type)return;const ancestry=actorSource.items.find((item=>"ancestry"===item.type));if(ancestry){this.setAncestryVision(ancestry);for(const vision of["darkvision","low-light-vision"]){const index=actorSource.items.findIndex((item=>{var _a;return"feat"===item.type&&(null!==(_a=item.data.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(item.name))===vision}));-1!==index&&actorSource.items.splice(index,1)}}}async updateItem(itemSource,actor){"ancestry"!==itemSource.type||actor||this.setAncestryVision(itemSource)}setAncestryVision(ancestry){var _a,_b;const features=ancestry.data.items;for(const[key,value]of Object.entries(features))(null==value?void 0:value.id)===this.LOWLIGHTVISION_ID?("game"in globalThis?features[`-=${key}`]=null:delete features[key],ancestry.data.vision="darkvision"===ancestry.data.vision?"darkvision":"lowLightVision"):(null==value?void 0:value.id)===this.DARKVISION_ID&&("game"in globalThis?features[`-=${key}`]=null:delete features[key],ancestry.data.vision="darkvision");null!==(_a=(_b=ancestry.data).vision)&&void 0!==_a||(_b.vision="normal")}}exports.Migration670AncestryVision=Migration670AncestryVision,Migration670AncestryVision.version=.67},3725:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration670NoCustomTrait=void 0;const base_1=__webpack_require__(54310);class Migration670NoCustomTrait extends base_1.MigrationBase{async updateItem(itemSource){const traits=itemSource.data.traits;traits&&(Array.isArray(traits.value)||(traits.value=[]),traits.value=traits.value.filter((trait=>trait&&"custom"!==trait)))}}exports.Migration670NoCustomTrait=Migration670NoCustomTrait,Migration670NoCustomTrait.version=.67},55986:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration671NoPCItemsOnNonPCs=void 0;const base_1=__webpack_require__(54310);class Migration671NoPCItemsOnNonPCs extends base_1.MigrationBase{async updateActor(actorSource){if("character"===actorSource.type)return;const pcOnlyTypes=["ancestry","background","class","feat"],forbiddenItems=actorSource.items.filter((item=>pcOnlyTypes.includes(item.type)));for(const forbiddenItem of forbiddenItems){const index=actorSource.items.findIndex((item=>item===forbiddenItem));-1!==index&&actorSource.items.splice(index,1)}}}exports.Migration671NoPCItemsOnNonPCs=Migration671NoPCItemsOnNonPCs,Migration671NoPCItemsOnNonPCs.version=.671},83337:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration672RemoveNPCBaseProperties=void 0;const data_1=__webpack_require__(71504),base_1=__webpack_require__(54310);class Migration672RemoveNPCBaseProperties extends base_1.MigrationBase{removeBase(property,replace="value"){property[replace]=Number(property[replace])||0,"number"==typeof property.base&&(property[replace]=property.base,"game"in globalThis?property["-=base?"]=null:delete property.base)}async updateActor(actorSource){if("npc"!==actorSource.type)return;const{ac,hp,perception}=actorSource.data.attributes;this.removeBase(ac),this.removeBase(hp,"max"),this.removeBase(perception);const{saves}=actorSource.data;for(const saveType of data_1.SAVE_TYPES)this.removeBase(saves[saveType])}async updateItem(itemSource,actorSource){"npc"===(null==actorSource?void 0:actorSource.type)&&"lore"===itemSource.type&&this.removeBase(itemSource.data.mod)}}exports.Migration672RemoveNPCBaseProperties=Migration672RemoveNPCBaseProperties,Migration672RemoveNPCBaseProperties.version=.672},97094:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration673RemoveBulwarkREs=void 0;const base_1=__webpack_require__(54310),_util_1=__webpack_require__(6945);class Migration673RemoveBulwarkREs extends base_1.MigrationBase{hasRuleElement(rules){return rules.some((rule=>{var _a,_b,_c;return(null===(_a=rule.key)||void 0===_a?void 0:_a.endsWith("FlatModifier"))&&(null===(_c=null===(_b=rule.predicate)||void 0===_b?void 0:_b.all)||void 0===_c?void 0:_c.includes("self:armor:trait:bulwark"))}))}async updateItem(item){var _a;const{rules}=item.data;if("armor"===item.type){const index=rules.findIndex((rule=>{var _a,_b;return(null===(_a=rule.key)||void 0===_a?void 0:_a.endsWith("FlatModifier"))&&"reflex"===rule.selector&&"ability"===rule.type&&/bulwark/i.test(null!==(_b=rule.label)&&void 0!==_b?_b:"")}));-1!==index&&rules.splice(index)}const slug=null!==(_a=item.data.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(item.name);if("feat"===item.type&&"mighty-bulwark"===slug&&!this.hasRuleElement(rules)){const newRules=[{key:"FlatModifier",predicate:{all:["self:armor:trait:bulwark"]},selector:"reflex",type:"untyped",value:4},{key:"RollOption",domain:"reflex",option:"self:armor:bulwark-all"}];rules.push(...newRules)}}}exports.Migration673RemoveBulwarkREs=Migration673RemoveBulwarkREs,Migration673RemoveBulwarkREs.version=.673},75141:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration674StableHomebrewTagIDs=void 0;const homebrew_1=__webpack_require__(27608),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration674StableHomebrewTagIDs extends base_1.MigrationBase{constructor(){super(...arguments),this.homebrewKeys=deepClone(homebrew_1.HomebrewElements.SETTINGS),this.homebrewTags=this.homebrewKeys.reduce(((settings,key)=>mergeObject(settings,{[key]:game.settings.get("pf2e",`homebrew.${key}`)})),{})}updateDocumentTags(documentTags=[]){for(const key of this.homebrewKeys){const homebrewTags=this.homebrewTags[key];for(const tag of homebrewTags){const index=documentTags.indexOf(tag.id);-1!==index&&documentTags.splice(index,1,`hb_${(0,_util_1.sluggify)(tag.value)}`)}}}async updateActor(actorSource){var _a;"familiar"!==actorSource.type&&(this.updateDocumentTags(actorSource.data.traits.traits.value),"character"!==actorSource.type&&"npc"!==actorSource.type||this.updateDocumentTags(null===(_a=actorSource.data.traits)||void 0===_a?void 0:_a.languages.value))}async updateItem(itemSource){var _a;this.updateDocumentTags(null===(_a=itemSource.data.traits)||void 0===_a?void 0:_a.value)}async migrate(){var e_1,_a;try{for(var _c,_b=__asyncValues(this.homebrewKeys);!(_c=await _b.next()).done;){const key=_c.value,tags=this.homebrewTags[key];for(const tag of tags){tag.id=`hb_${(0,_util_1.sluggify)(tag.value)}`;const tagMap="baseWeapons"===key?localize_1.LocalizePF2e.translations.PF2E.Weapon.Base:CONFIG.PF2E[key];tagMap[tag.id]=tag.value,delete tagMap[key]}tags.length>0&&await game.settings.set("pf2e",`homebrew.${key}`,tags)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_1)throw e_1.error}}}}exports.Migration674StableHomebrewTagIDs=Migration674StableHomebrewTagIDs,Migration674StableHomebrewTagIDs.version=.674},96710:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration675FlatModifierAEsToREs=void 0;const base_1=__webpack_require__(54310);class Migration675FlatModifierAEsToREs extends base_1.MigrationBase{isFlatModifier(data){return"object"==typeof data&&null!==data&&(("number"==typeof(obj=data).modifier||"string"==typeof obj.modifier)&&"string"==typeof obj.type);var obj}toRuleElement(aeValue){const aeModifier=(()=>{try{const parsed=JSON.parse(aeValue);return this.isFlatModifier(parsed)?parsed:null}catch(error){return console.warn(error),null}})();return"string"==typeof(null==aeModifier?void 0:aeModifier.modifier)&&aeModifier.modifier.replace("@data.","@"),aeModifier&&{key:"FlatModifier",type:aeModifier.type,value:aeModifier.modifier,selector:"hp"}}async updateActor(actorSource){for(const effect of[...actorSource.effects])effect.changes.some((change=>change.key.endsWith(".modifiers")))&&actorSource.effects.splice(actorSource.effects.indexOf(effect),1)}async updateItem(itemSource){for(const effect of[...itemSource.effects]){for(const change of effect.changes.filter((change=>change.key.endsWith(".modifiers")))){const reData=this.toRuleElement(change.value);reData&&(effect.changes.splice(effect.changes.indexOf(change),1),itemSource.data.rules.push(reData))}0===effect.changes.length&&itemSource.effects.splice(itemSource.effects.indexOf(effect),1)}}}exports.Migration675FlatModifierAEsToREs=Migration675FlatModifierAEsToREs,Migration675FlatModifierAEsToREs.version=.675},85235:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration676ReplaceItemsWithRELikeAEs=void 0;const _item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration676ReplaceItemsWithRELikeAEs extends base_1.MigrationBase{constructor(){super(...arguments),this.toughnessPromise=fromUuid("Compendium.pf2e.feats-srd.AmP0qu7c5dlBSath"),this.stoutnessPromise=fromUuid("Compendium.pf2e.feats-srd.COP89tjrNhEucuRW"),this.toughPromise=fromUuid("Compendium.pf2e.familiar-abilities.Le8UWr5BU8rV3iBf")}replaceItem({items,type,slug,replacement}){if(!(replacement instanceof _item_1.ItemPF2e))throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving compendium item");const current=items.find((itemSource=>{var _a;return itemSource.type===type&&(null===(_a=itemSource.data.slug)||void 0===_a?void 0:_a.replace(/'/g,""))===slug}));if(current){const newSource=replacement.toObject();"feat"===current.type&&"feat"===newSource.type&&(newSource.data.location=current.data.location),items.splice(items.indexOf(current),1,newSource)}}async updateActor(actorSource){"familiar"===actorSource.type?this.replaceItem({items:actorSource.items,type:"effect",slug:"tough",replacement:await this.toughPromise}):"character"===actorSource.type&&(this.replaceItem({items:actorSource.items,type:"feat",slug:"toughness",replacement:await this.toughnessPromise}),this.replaceItem({items:actorSource.items,type:"feat",slug:"mountains-stoutness",replacement:await this.stoutnessPromise}))}}exports.Migration676ReplaceItemsWithRELikeAEs=Migration676ReplaceItemsWithRELikeAEs,Migration676ReplaceItemsWithRELikeAEs.version=.676},9838:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration677RuleValueDataRefs=void 0;const base_1=__webpack_require__(54310);class Migration677RuleValueDataRefs extends base_1.MigrationBase{async updateItem(itemSource){for(const rule of itemSource.data.rules)"string"==typeof rule.value&&(rule.value=rule.value.replace("@data.","@"))}}exports.Migration677RuleValueDataRefs=Migration677RuleValueDataRefs,Migration677RuleValueDataRefs.version=.677},45497:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration678SeparateNPCAttackTraits=void 0;const data_1=__webpack_require__(52769),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration678SeparateNPCAttackTraits extends base_1.MigrationBase{async updateItem(itemSource){if("weapon"===itemSource.type){const weaponTraits=itemSource.data.traits.value,rangeTraits=weaponTraits.filter((trait=>/^range(?!d)/.test(trait)));for(const trait of rangeTraits)weaponTraits.splice(weaponTraits.indexOf(trait),1);const reloadTraits=weaponTraits.filter((trait=>trait.startsWith("reload")));for(const trait of reloadTraits)weaponTraits.splice(weaponTraits.indexOf(trait),1);itemSource.data.traits.value=[...new Set(weaponTraits)].sort()}if(!itemSource.data.traits)return;const itemTraits=itemSource.data.traits.value;for(const trait of itemTraits)(0,_util_1.tupleHasValue)(data_1.RARITIES,trait)&&(itemTraits.splice(itemTraits.indexOf(trait),1),"common"!==trait&&"common"===itemSource.data.traits.rarity.value&&(itemSource.data.traits.rarity.value=trait))}}exports.Migration678SeparateNPCAttackTraits=Migration678SeparateNPCAttackTraits,Migration678SeparateNPCAttackTraits.version=.678},38580:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration679TowerShieldSpeedPenalty=void 0;const base_1=__webpack_require__(54310);class Migration679TowerShieldSpeedPenalty extends base_1.MigrationBase{constructor(){super(...arguments),this.towerShieldSlugs=["darkwood-tower-shield-high-grade","darkwood-tower-shield-standard-grade","tower-shield"]}async updateItem(itemSource){var _a;if("armor"===itemSource.type){const systemData=itemSource.data;this.towerShieldSlugs.includes(null!==(_a=systemData.slug)&&void 0!==_a?_a:"")&&(itemSource.data.speed.value=-5),systemData.armor.value=Number(systemData.armor.value)||0,systemData.speed.value=Number(systemData.speed.value)||0,systemData.potencyRune.value=Number(systemData.potencyRune.value)||0,"resilient"in systemData&&("game"in globalThis?systemData["-=resilient"]=null:delete systemData.resilient)}}}exports.Migration679TowerShieldSpeedPenalty=Migration679TowerShieldSpeedPenalty,Migration679TowerShieldSpeedPenalty.version=.679},95615:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration680SetWeaponHands=void 0;const base_1=__webpack_require__(54310);class Migration680SetWeaponHands extends base_1.MigrationBase{constructor(){super(...arguments),this.oneHandedWeapons=new Set(["repeating-hand-crossbow"]),this.onePlusHandedWeapons=new Set(["backpack-ballista","backpack-catapult","composite-longbow","composite-shortbow","hongali-hornbow","longbow","shortbow","sun-sling"]),this.shieldAttachments=new Set(["shield-boss","shield-spikes"]),this.firearmAttachments=new Set(["bayonette","reinforced-stock"]),this.wornGloves=new Set(["handwraps-of-mighty-blows"]),this.twoHandedWeapons=new Set(["adze","alchemical-crossbow","arquebus","axe-musket","bladed-diabolo","bladed-scarf","blunderbuss","bo-staff","boarding-pike","butchering-axe","combat-grapnel","crossbow","double-barreled-musket","dueling-spear","dwarven-scattergun","elven-branched-spear","elven-curve-blade","explosive-dogslicer","falchion","fauchard","fire-lance","flingflenser","flintlock-musket","gill-hook","glaive","gnome-amalgam-musket","greataxe","greatclub","greatpick","greatsword","guisarme","gun-sword","halberd","halfling-sling-staff","hammer-gun","harmona-gun","heavy-crossbow","horsechopper","kusarigama","lance","longspear","maul","meteor-hammer","mithral-tree","naginata","ogre-hook","ranseur","repeating-crossbow","repeating-heavy-crossbow","scythe","shauth-lash","spiked-chain","taw-launcher","three-peaked-tree","thundermace","war-flail","whip-claw"])}isShield(source){var _a;return"armor"===source.type&&("shield"===(null===(_a=source.data.armorType)||void 0===_a?void 0:_a.value)||"shield"===source.data.category)}async updateItem(itemSource){var _a,_b;if(this.isShield(itemSource))itemSource.data.usage.value="held-in-one-hand";else if("weapon"===itemSource.type){null!==(_a=(_b=itemSource.data).usage)&&void 0!==_a||(_b.usage={value:"held-in-one-hand"});const{baseItem,slug,traits,usage}=itemSource.data;if(this.twoHandedWeapons.has(baseItem||slug||""))usage.value="held-in-two-hands";else if(this.onePlusHandedWeapons.has(baseItem||slug||""))usage.value="held-in-one-plus-hands";else if(this.oneHandedWeapons.has(baseItem||slug||""))usage.value="held-in-one-hand";else if(this.shieldAttachments.has(baseItem||slug||"")){usage.value="held-in-one-hand";const attachedIndex=traits.value.findIndex((trait=>"attached"===trait));-1!==attachedIndex&&traits.value.splice(attachedIndex,1,"attached-to-shield")}else if(this.firearmAttachments.has(baseItem||slug||"")){usage.value="held-in-one-hand";const attachedIndex=traits.value.findIndex((trait=>"attached"===trait));-1!==attachedIndex&&traits.value.splice(attachedIndex,1,"attached-to-crossbow-or-firearm")}else this.wornGloves.has(baseItem||slug||"")&&(usage.value="worn-gloves")}}}exports.Migration680SetWeaponHands=Migration680SetWeaponHands,Migration680SetWeaponHands.version=.68},4720:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration681GiantLanguageToJotun=void 0;const base_1=__webpack_require__(54310);class Migration681GiantLanguageToJotun extends base_1.MigrationBase{replaceGiant({value}){const giantIndex=value.indexOf("giant");-1!==giantIndex&&value.splice(giantIndex,1,"jotun")}async updateActor(actorSource){"character"!==actorSource.type&&"npc"!==actorSource.type||this.replaceGiant(actorSource.data.traits.languages)}async updateItem(itemSource){"ancestry"===itemSource.type&&this.replaceGiant(itemSource.data.additionalLanguages)}}exports.Migration681GiantLanguageToJotun=Migration681GiantLanguageToJotun,Migration681GiantLanguageToJotun.version=.681},97548:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration682BiographyFields=void 0;const base_1=__webpack_require__(54310);class Migration682BiographyFields extends base_1.MigrationBase{replaceBiographyData(old){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z;old.details.biography.public?(old.details.biography.appearance=old.details.biography.public,old.details.biography["-=public"]=null):null!==(_a=(_o=old.details.biography).appearance)&&void 0!==_a||(_o.appearance=""),old.details.biography.value?(old.details.biography.campaignNotes=old.details.biography.value,old.details.biography["-=value"]=null):null!==(_b=(_p=old.details.biography).campaignNotes)&&void 0!==_b||(_p.campaignNotes=""),"game"in globalThis||(delete old.details.biography.public,delete old.details.biography.value),null!==(_c=(_q=old.details.biography).backstory)&&void 0!==_c||(_q.backstory=""),null!==(_d=(_r=old.details.biography).birthPlace)&&void 0!==_d||(_r.birthPlace=""),null!==(_e=(_s=old.details.biography).attitude)&&void 0!==_e||(_s.attitude=""),null!==(_f=(_t=old.details.biography).beliefs)&&void 0!==_f||(_t.beliefs=""),null!==(_g=(_u=old.details.biography).likes)&&void 0!==_g||(_u.likes=""),null!==(_h=(_v=old.details.biography).dislikes)&&void 0!==_h||(_v.dislikes=""),null!==(_j=(_w=old.details.biography).catchphrases)&&void 0!==_j||(_w.catchphrases=""),null!==(_k=(_x=old.details.biography).allies)&&void 0!==_k||(_x.allies=""),null!==(_l=(_y=old.details.biography).enemies)&&void 0!==_l||(_y.enemies=""),null!==(_m=(_z=old.details.biography).organaizations)&&void 0!==_m||(_z.organaizations="")}async updateActor(actorSource){"character"===actorSource.type&&this.replaceBiographyData(actorSource.data)}}exports.Migration682BiographyFields=Migration682BiographyFields,Migration682BiographyFields.version=.682},9581:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration683FlavorTextToPublicNotes=void 0;const base_1=__webpack_require__(54310);class Migration683FlavorTextToPublicNotes extends base_1.MigrationBase{replaceFlavorTextData(old){var _a,_b,_c,_d,_e,_f;old.details.flavorText?(old.details.publicNotes=old.details.flavorText,old.details["-=flavorText"]=null):null!==(_a=(_d=old.details).publicNotes)&&void 0!==_a||(_d.publicNotes=""),"game"in globalThis||delete old.details.flavorText,null!==(_b=(_e=old.details).blurb)&&void 0!==_b||(_e.blurb=""),null!==(_c=(_f=old.details).privateNotes)&&void 0!==_c||(_f.privateNotes="")}async updateActor(actorSource){"npc"===actorSource.type&&this.replaceFlavorTextData(actorSource.data)}}exports.Migration683FlavorTextToPublicNotes=Migration683FlavorTextToPublicNotes,Migration683FlavorTextToPublicNotes.version=.683},10852:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration684RationsToConsumable=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration684RationsToConsumable extends base_1.MigrationBase{constructor(){super(...arguments),this.rationsSourceId="Compendium.pf2e.equipment-srd.L9ZV076913otGtiB",this.rationsPromise=fromUuid(this.rationsSourceId)}isConsumable(obj){return!!obj&&"consumable"===obj.type&&obj.data instanceof Object}isOldRations(itemSource){var _a;return"equipment"===(null==itemSource?void 0:itemSource.type)&&(null===(_a=itemSource.flags.core)||void 0===_a?void 0:_a.sourceId)===this.rationsSourceId}getRationRefs(itemRefs){return Object.values(itemRefs).reduce(((rationRefs,itemRef)=>(itemRef.isContainer&&itemRef.items?rationRefs.push(...this.getRationRefs(itemRef.items)):"pf2e.equipment-srd"===itemRef.pack&&"L9ZV076913otGtiB"===itemRef.id&&rationRefs.push(itemRef),rationRefs)),[])}async updateActor(actorSource){var _a;const oldRations=actorSource.items.filter((item=>this.isOldRations(item))),rations=null===(_a=await this.rationsPromise)||void 0===_a?void 0:_a.toObject();if(!rations||!this.isConsumable(rations))throw(0,_util_1.ErrorPF2e)("Unexpected error acquiring compendium item");for(const oldRation of oldRations){const newRation=deepClone(rations);newRation.folder=oldRation.folder,newRation.sort=oldRation.sort,newRation.data.containerId.value=oldRation.data.containerId.value,newRation.data.quantity.value=Math.ceil(oldRation.data.quantity.value/7),actorSource.items.findSplice((item=>item===oldRation),newRation)}}async updateItem(itemSource){if("kit"!==itemSource.type)return;const rationRefs=this.getRationRefs(itemSource.data.items);for(const rationRef of rationRefs)rationRef.quantity=Math.ceil(rationRef.quantity/7)}}exports.Migration684RationsToConsumable=Migration684RationsToConsumable,Migration684RationsToConsumable.version=.684},26921:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration685FixMeleeUsageTraits=void 0;const base_1=__webpack_require__(54310);class Migration685FixMeleeUsageTraits extends base_1.MigrationBase{async updateItem(itemSource){if("weapon"===itemSource.type){const systemData=itemSource.data;systemData.meleeUsage&&!Array.isArray(systemData.meleeUsage.traits)&&(systemData.meleeUsage.traits=systemData.meleeUsage.traits.value)}}}exports.Migration685FixMeleeUsageTraits=Migration685FixMeleeUsageTraits,Migration685FixMeleeUsageTraits.version=.685},77882:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration686HeroPointsToResources=void 0;const base_1=__webpack_require__(54310);class Migration686HeroPointsToResources extends base_1.MigrationBase{async updateActor(actorSource){if("character"!==actorSource.type)return;const systemSource=actorSource.data;if(systemSource.attributes.heroPoints){systemSource.resources.heroPoints={value:systemSource.attributes.heroPoints.rank},systemSource.attributes["-=heroPoints"]=null,"game"in globalThis||delete systemSource.attributes.heroPoints}}}exports.Migration686HeroPointsToResources=Migration686HeroPointsToResources,Migration686HeroPointsToResources.version=.686},1802:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration687FamiliarityAEsToREs=void 0;const base_1=__webpack_require__(54310);class Migration687FamiliarityAEsToREs extends base_1.MigrationBase{isFamiliarityAE(data){return"object"==typeof data&&null!==data&&("string"==typeof(obj=data).trait&&"string"==typeof obj.category);var obj}toRuleElement(sameAs,aeValue){const aeData=(()=>{try{const parsed=JSON.parse(aeValue);return this.isFamiliarityAE(parsed)?parsed:null}catch(error){return console.warn(error),null}})();return aeData&&{key:"LinkedProficiency",slug:`${aeData.category}-${aeData.trait}-weapons`,predicate:{all:[`weapon:trait:${aeData.trait}`,`weapon:category:${aeData.category}`]},sameAs}}async updateActor(actorSource){actorSource.effects=[]}async updateItem(itemSource){for(const effect of[...itemSource.effects])for(const change of effect.changes.filter((change=>change.key.startsWith("data.martial.")))){const linkTo=change.key.replace(/^data\.martial\.|\.familiarity$/g,""),reData=this.toRuleElement(linkTo,change.value);reData&&itemSource.data.rules.push(reData)}itemSource.effects=[]}}exports.Migration687FamiliarityAEsToREs=Migration687FamiliarityAEsToREs,Migration687FamiliarityAEsToREs.version=.687},80450:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration688ClampSpellLevel=void 0;const base_1=__webpack_require__(54310);class Migration688ClampSpellLevel extends base_1.MigrationBase{async updateItem(itemSource){"spell"===itemSource.type&&(itemSource.data.level.value=Math.min(Math.max(itemSource.data.level.value,1),10))}}exports.Migration688ClampSpellLevel=Migration688ClampSpellLevel,Migration688ClampSpellLevel.version=.688},68850:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration689EncumberanceActiveEffects=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration689EncumberanceActiveEffects extends base_1.MigrationBase{async updateItem(itemSource){var _a;const systemData=itemSource.data,slug=null!==(_a=systemData.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name),amountToIncreaseBy="feat"===itemSource.type&&"hefty-hauler"===slug?2:"feat"===itemSource.type&&"hardy-traveler"===slug||"equipment"===itemSource.type&&"lifting-belt"===slug?1:0;if(0===amountToIncreaseBy)return;if(systemData.rules.some((x=>"ActiveEffectLike"===x.key)))return;const rules=[{key:"ActiveEffectLike",path:"data.attributes.bonusEncumbranceBulk",mode:"add",value:amountToIncreaseBy},{key:"ActiveEffectLike",path:"data.attributes.bonusLimitBulk",mode:"add",value:amountToIncreaseBy}];for(const rule of rules)systemData.rules.push(rule)}}exports.Migration689EncumberanceActiveEffects=Migration689EncumberanceActiveEffects,Migration689EncumberanceActiveEffects.version=.689},21715:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration690InitiativeTiebreakItems=void 0;const base_1=__webpack_require__(54310);class Migration690InitiativeTiebreakItems extends base_1.MigrationBase{constructor(){super(...arguments),this.itemSlugs=["ambush-awareness","elven-instincts","pilgrims-token"],this.rule={key:"ActiveEffectLike",path:"data.attributes.initiative.tiebreakPriority",mode:"override",value:0}}async updateItem(itemSource){var _a;!this.itemSlugs.includes(null!==(_a=itemSource.data.slug)&&void 0!==_a?_a:"")||itemSource.data.rules.some((rule=>"ActiveEffectLike"===rule.key))||"pilgrims-token"===itemSource.data.slug&&"equipment"!==itemSource.type||itemSource.data.rules.push(this.rule)}}exports.Migration690InitiativeTiebreakItems=Migration690InitiativeTiebreakItems,Migration690InitiativeTiebreakItems.version=.69},2741:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration691WeaponRangeAbilityCategoryGroup=void 0;const values_1=__webpack_require__(2528),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration691WeaponRangeAbilityCategoryGroup extends base_1.MigrationBase{isOldGroupData(group){return group instanceof Object&&"value"in group&&("string"==typeof group.value||null===group.value)}isOldRangeData(range){return range instanceof Object&&"value"in range&&"string"==typeof range.value}async updateItem(itemSource){if("weapon"===itemSource.type){const systemData=itemSource.data;systemData.category=(systemData.weaponType?systemData.weaponType.value:systemData.category)||"simple",systemData.weaponType&&(systemData["-=weaponType"]=null,"game"in globalThis||delete systemData.weaponType),systemData.group=(this.isOldGroupData(systemData.group)?systemData.group.value:systemData.group)||null;const hasOldRangeData=this.isOldRangeData(systemData.range);if(systemData.range=hasOldRangeData?Number(systemData.range.value)||null:systemData.range,hasOldRangeData&&systemData.ability&&("str"!==systemData.ability.value||(0,_util_1.tupleHasValue)(values_1.RANGED_WEAPON_GROUPS,systemData.group)||(systemData.range=null),delete systemData.ability,systemData["-=ability"]=null),(0,_util_1.tupleHasValue)(values_1.RANGED_WEAPON_GROUPS,systemData.group)){const thrownIndex=systemData.traits.value.findIndex((trait=>/^thrown-\d+/.test(trait)));-1!==thrownIndex&&(systemData.traits.value[thrownIndex]="thrown",systemData.reload.value="-")}"falchion"===systemData.baseItem?systemData.group="sword":"orc-knuckle-dagger"===systemData.baseItem&&(systemData.group="knife")}const strikeRules=itemSource.data.rules.filter((rule=>rule.key.endsWith("Strike")));for(const rule of strikeRules)rule.key="Strike",rule.range=Number(rule.range)||null,delete rule.ability}}exports.Migration691WeaponRangeAbilityCategoryGroup=Migration691WeaponRangeAbilityCategoryGroup,Migration691WeaponRangeAbilityCategoryGroup.version=.691},64046:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration692CraftingEntryFeatReplacement=void 0;const _item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration692CraftingEntryFeatReplacement extends base_1.MigrationBase{constructor(){super(...arguments),this.requiresFlush=!0,this.slugToPromise=new Map([["advanced-alchemy",fromUuid("Compendium.pf2e.classfeatures.Pe0zmIqyTBc2Td0I")],["field-discovery-bomber",fromUuid("Compendium.pf2e.classfeatures.8QAFgy9U8PxEa7Dw")],["field-discovery-chirurgeon",fromUuid("Compendium.pf2e.classfeatures.qC0Iz6SlG2i9gv6g")],["field-discovery-mutagenist",fromUuid("Compendium.pf2e.classfeatures.V4Jt7eDnJBLv5bDj")],["field-discovery-toxicologist",fromUuid("Compendium.pf2e.classfeatures.6zo2PJGYoig7nFpR")],["infused-reagents",fromUuid("Compendium.pf2e.classfeatures.wySB9VHOW1v3TX1L")],["alchemist-dedication",fromUuid("Compendium.pf2e.feats-srd.CJMkxlxHiHZQYDCz")],["deeper-dabbler",fromUuid("Compendium.pf2e.feats-srd.PTXZ2C3AV8tZf0iX")],["efficient-alchemy-paragon",fromUuid("Compendium.pf2e.feats-srd.2FBZ0apnmZ7b61ct")],["expert-alchemy",fromUuid("Compendium.pf2e.feats-srd.soHLtpMM9h3AE7PD")],["expert-fireworks-crafter",fromUuid("Compendium.pf2e.feats-srd.dDFQJem5K9Jzxgda")],["expert-herbalism",fromUuid("Compendium.pf2e.feats-srd.owJorCBZmUi5lIV0")],["expert-poisoner",fromUuid("Compendium.pf2e.feats-srd.VruIzuysxw4tY6rk")],["firework-technician-dedication",fromUuid("Compendium.pf2e.feats-srd.MVbNnjqQOK9d8Ki3")],["gadget-specialist",fromUuid("Compendium.pf2e.feats-srd.DQN7YC7s7T0pL6Aa")],["herbalist-dedication",fromUuid("Compendium.pf2e.feats-srd.5CRt5Dy9eLv5LpRF")],["master-alchemy",fromUuid("Compendium.pf2e.feats-srd.f6k9lIrIS4SfnCnG")],["munitions-crafter",fromUuid("Compendium.pf2e.feats-srd.lFVqejlf52cdYrZy")],["munitions-machinist",fromUuid("Compendium.pf2e.feats-srd.lh3STEvbGnP7jVMr")],["plentiful-snares",fromUuid("Compendium.pf2e.feats-srd.wGaxWwJhIXbMJft1")],["poisoner-dedication",fromUuid("Compendium.pf2e.feats-srd.y7DDs03GtDnmhxFp")],["snare-genius",fromUuid("Compendium.pf2e.feats-srd.8DIzXO1YpsU3DpJw")],["snare-specialist",fromUuid("Compendium.pf2e.feats-srd.0haS0qXR9xTYKoTG")],["snarecrafter-dedication",fromUuid("Compendium.pf2e.feats-srd.4MUbwilvb9dI0X59")],["talisman-dabbler-dedication",fromUuid("Compendium.pf2e.feats-srd.1t5479E6bdvFs4E7")],["ubiquitous-gadgets",fromUuid("Compendium.pf2e.feats-srd.ny0nfGTDUE4p8TtO")],["ubiquitous-snares",fromUuid("Compendium.pf2e.feats-srd.bX2WI5k0afqPpCfm")]])}replaceItem({items,current,replacement}){if(!(replacement instanceof _item_1.ItemPF2e))throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving compendium item");const newSource=replacement.toObject();"feat"===current.type&&"feat"===newSource.type&&(newSource.data.location=current.data.location),items.splice(items.indexOf(current),1,newSource)}async updateActor(actorSource){"character"===actorSource.type&&this.slugToPromise.forEach((async(promise,slug)=>{const current=actorSource.items.find((itemSource=>"feat"===itemSource.type&&itemSource.data.slug===slug));current&&this.replaceItem({items:actorSource.items,current,replacement:await promise})}))}}exports.Migration692CraftingEntryFeatReplacement=Migration692CraftingEntryFeatReplacement,Migration692CraftingEntryFeatReplacement.version=.692},87780:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration693ArmorCategoryGroup=void 0;const base_1=__webpack_require__(54310);class Migration693ArmorCategoryGroup extends base_1.MigrationBase{isOldGroupData(group){return group instanceof Object&&"value"in group&&("string"==typeof group.value||null===group.value)}async updateItem(itemSource){if("armor"!==itemSource.type)return;const systemData=itemSource.data;systemData.category=(systemData.armorType?systemData.armorType.value:systemData.category)||"simple",systemData.armorType&&(systemData["-=armorType"]=null,"game"in globalThis||delete systemData.armorType),systemData.group=(this.isOldGroupData(systemData.group)?systemData.group.value:systemData.group)||null}}exports.Migration693ArmorCategoryGroup=Migration693ArmorCategoryGroup,Migration693ArmorCategoryGroup.version=.693},35149:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration694RetireSystemTokenSettings=void 0;const base_1=__webpack_require__(54310);class Migration694RetireSystemTokenSettings extends base_1.MigrationBase{async migrate(){const systemNameHover=Number(game.settings.storage.get("world").getItem("pf2e.defaultTokenSettingsName"))||CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER,systemBarHover=Number(game.settings.storage.get("world").getItem("pf2e.defaultTokenSettingsBar"))||CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER,coreTokenDefaults=game.settings.get("core","defaultToken");coreTokenDefaults.displayName=systemNameHover,coreTokenDefaults.displayBars=systemBarHover}}exports.Migration694RetireSystemTokenSettings=Migration694RetireSystemTokenSettings,Migration694RetireSystemTokenSettings.version=.694},14887:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration695SummonToSummoned=void 0;const base_1=__webpack_require__(54310);class Migration695SummonToSummoned extends base_1.MigrationBase{async updateItem(itemSource){var _a;const traits=itemSource.data.traits;if(traits)if("action"===itemSource.type)null!==(_a=traits.custom)&&void 0!==_a||(traits.custom=""),"summon"===traits.custom.toLowerCase()&&(traits.custom="",traits.value=Array.from(new Set([...traits.value,"summon"])).sort());else{const index=traits.value.indexOf("summon");-1!==index&&(traits.value[index]="summoned")}}}exports.Migration695SummonToSummoned=Migration695SummonToSummoned,Migration695SummonToSummoned.version=.695},55269:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration696FlatAbilityModifiers=void 0;const values_1=__webpack_require__(35089),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration696FlatAbilityModifiers extends base_1.MigrationBase{constructor(){super(...arguments),this.abilityModPattern=/@abilities\.([a-z]{3})\.mod\b/,this.abbreviationMap=new Map(values_1.ABILITY_ABBREVIATIONS.map((a=>[`PF2E.Ability${(0,_util_1.sluggify)(a,{camel:"bactrian"})}`,a])))}async updateItem(itemSource){var _a,_b,_c,_d;const rules=itemSource.data.rules;for(const rule of rules)if(rule.key.endsWith("FlatModifier")&&"ability"===rule.type&&!(0,_util_1.tupleHasValue)(values_1.ABILITY_ABBREVIATIONS,rule.ability)){const abilityFromValue=null!==(_b=null===(_a=this.abilityModPattern.exec(String(rule.value)))||void 0===_a?void 0:_a[1])&&void 0!==_b?_b:null;rule.ability=null!==(_d=null!=abilityFromValue?abilityFromValue:this.abbreviationMap.get(null!==(_c=rule.label)&&void 0!==_c?_c:""))&&void 0!==_d?_d:"str","string"==typeof rule.value&&rule.value.startsWith("@")&&rule.value.endsWith(".mod")&&delete rule.value}"thief-racket"!==itemSource.data.slug||rules.some((rule=>"dex"===rule.ability))||rules.unshift({ability:"dex",key:"FlatModifier",predicate:{all:["weapon:melee","weapon:trait:finesse"],not:["weapon:category:unarmed"]},selector:"damage",type:"ability"})}}exports.Migration696FlatAbilityModifiers=Migration696FlatAbilityModifiers,Migration696FlatAbilityModifiers.version=.696},5299:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration697WeaponReachTrait=void 0;const base_1=__webpack_require__(54310);class Migration697WeaponReachTrait extends base_1.MigrationBase{async updateItem(itemSource){if("weapon"===itemSource.type){const traits=itemSource.data.traits.value,numericReach=traits.find((t=>/^reach-\d+$/.test(t)));numericReach&&traits.splice(traits.indexOf(numericReach),1,"reach")}}}exports.Migration697WeaponReachTrait=Migration697WeaponReachTrait,Migration697WeaponReachTrait.version=.697},27981:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.MigrationRunnerBase=void 0;const luxon_1=__webpack_require__(70411);class MigrationRunnerBase{constructor(migrations=[]){this.migrations=migrations.sort(((a,b)=>a.version-b.version))}needsMigration(currentVersion){return currentVersion<this.constructor.LATEST_SCHEMA_VERSION}diffCollection(orig,updated){const ret={inserted:[],deleted:[],updated:[]},origSources=new Map;for(const source of orig)origSources.set(source._id,source);for(const source of updated){const origSource=origSources.get(source._id);origSource?(JSON.stringify(origSource)!==JSON.stringify(source)&&ret.updated.push(source),origSources.delete(source._id)):ret.inserted.push(source)}for(const source of origSources.values())ret.deleted.push(source._id);return ret}async getUpdatedItem(item,migrations){var e_1,_a;const current=deepClone(item);try{for(var migrations_1_1,migrations_1=__asyncValues(migrations);!(migrations_1_1=await migrations_1.next()).done;){const migration=migrations_1_1.value;try{await migration.updateItem(current),"consumable"===current.type&&current.data.spell.data&&await migration.updateItem(current.data.spell.data)}catch(err){console.error(err)}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{migrations_1_1&&!migrations_1_1.done&&(_a=migrations_1.return)&&await _a.call(migrations_1)}finally{if(e_1)throw e_1.error}}return migrations.length>0&&this.updateSchemaRecord(current.data.schema,migrations.slice(-1)[0]),current}async getUpdatedActor(actor,migrations){var e_2,_a,e_3,_b,_c,_d,_e,_f;const currentActor=deepClone(actor);try{for(var migrations_2_1,migrations_2=__asyncValues(migrations);!(migrations_2_1=await migrations_2.next()).done;){const migration=migrations_2_1.value;try{await migration.updateActor(currentActor);try{for(var _h,_g=(e_3=void 0,__asyncValues(currentActor.items));!(_h=await _g.next()).done;){const currentItem=_h.value;await migration.updateItem(currentItem,currentActor),"consumable"===currentItem.type&&currentItem.data.spell.data&&await migration.updateItem(currentItem.data.spell.data,currentActor)}}catch(e_3_1){e_3={error:e_3_1}}finally{try{_h&&!_h.done&&(_b=_g.return)&&await _b.call(_g)}finally{if(e_3)throw e_3.error}}}catch(err){console.error(err)}}}catch(e_2_1){e_2={error:e_2_1}}finally{try{migrations_2_1&&!migrations_2_1.done&&(_a=migrations_2.return)&&await _a.call(migrations_2)}finally{if(e_2)throw e_2.error}}if("game"in globalThis){const latestMigration=migrations.slice(-1)[0];null!==(_c=(_e=currentActor.data).schema)&&void 0!==_c||(_e.schema={version:null,lastMigration:null}),this.updateSchemaRecord(currentActor.data.schema,latestMigration);for(const itemSource of currentActor.items)null!==(_d=(_f=itemSource.data).schema)&&void 0!==_d||(_f.schema={version:null,lastMigration:null}),this.updateSchemaRecord(itemSource.data.schema,latestMigration)}return currentActor}updateSchemaRecord(schema,latestMigration){if(!("game"in globalThis)||!latestMigration)return;const fromVersion="number"==typeof schema.version?schema.version:null;schema.version=latestMigration.version,schema.lastMigration={datetime:luxon_1.DateTime.now().toISO(),version:{schema:fromVersion,foundry:"game"in globalThis?game.data.version:void 0,system:"game"in globalThis?game.system.data.version:void 0}}}async getUpdatedMacro(macroSource,migrations){var _a;const current=deepClone(macroSource);for(const migration of migrations)try{await(null===(_a=migration.updateMacro)||void 0===_a?void 0:_a.call(migration,current))}catch(err){console.error(err)}return current}async getUpdatedTable(tableSource,migrations){var _a;const current=deepClone(tableSource);for(const migration of migrations)try{await(null===(_a=migration.updateTable)||void 0===_a?void 0:_a.call(migration,current))}catch(err){console.error(err)}return current}async getUpdatedToken(token,migrations){var _a;const current=token.toObject();for(const migration of migrations)try{await(null===(_a=migration.updateToken)||void 0===_a?void 0:_a.call(migration,current,token.actor,token.scene))}catch(err){console.error(err)}return current}async getUpdatedUser(userData,migrations){var _a;const current=deepClone(userData);for(const migration of migrations)try{await(null===(_a=migration.updateUser)||void 0===_a?void 0:_a.call(migration,current))}catch(err){console.error(err)}return current}}exports.MigrationRunnerBase=MigrationRunnerBase,MigrationRunnerBase.LATEST_SCHEMA_VERSION=.697,MigrationRunnerBase.MINIMUM_SAFE_VERSION=.618,MigrationRunnerBase.RECOMMENDED_SAFE_VERSION=.634},46842:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.MigrationRunner=void 0;const base_1=__webpack_require__(27981);class MigrationRunner extends base_1.MigrationRunnerBase{needsMigration(){return super.needsMigration(game.settings.get("pf2e","worldSchemaVersion"))}static async ensureSchemaVersion(document,migrations,{preCreate=!0}={}){const currentVersion=this.LATEST_SCHEMA_VERSION;if(!document.sourceId&&preCreate&&(document.data.update({"data.schema.version":currentVersion}),"items"in document))for(const item of document.items)null===item.schemaVersion&&item.data.update({"data.schema.version":currentVersion});if((Number(document.schemaVersion)||0)<currentVersion){const runner=new this(migrations),source=document.data._source,updated=await(async()=>{try{return"items"in source?await runner.getUpdatedActor(source,runner.migrations):await runner.getUpdatedItem(source,runner.migrations)}catch(_a){return null}})();updated&&document.data.update(updated)}}async migrateWorldDocuments(collection,migrations){var e_1,_a;const DocumentClass=collection.documentClass,updateGroup=[];try{for(var collection_1_1,collection_1=__asyncValues(collection);!(collection_1_1=await collection_1.next()).done;){const document=collection_1_1.value;if(50===updateGroup.length)try{await DocumentClass.updateDocuments(updateGroup,{noHook:!0})}catch(error){console.error(error)}finally{updateGroup.length=0}const updated="items"in document?await this.migrateWorldActor(migrations,document):await this.migrateWorldItem(migrations,document);updated&&updateGroup.push(updated)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{collection_1_1&&!collection_1_1.done&&(_a=collection_1.return)&&await _a.call(collection_1)}finally{if(e_1)throw e_1.error}}if(updateGroup.length>0)try{await DocumentClass.updateDocuments(updateGroup,{noHook:!0})}catch(error){console.error(error)}}async migrateWorldItem(migrations,item){var _a;const baseItem=item.toObject(),updatedItem=await(()=>{try{return this.getUpdatedItem(baseItem,migrations)}catch(error){return console.error(error),null}})();if(!updatedItem)return null;const baseAEs=[...baseItem.effects],updatedAEs=[...updatedItem.effects],aeDiff=this.diffCollection(baseAEs,updatedAEs);if(aeDiff.deleted.length>0)try{const finalDeleted=aeDiff.deleted.filter((deletedId=>item.effects.some((effect=>effect.id===deletedId))));await item.deleteEmbeddedDocuments("ActiveEffect",finalDeleted,{noHook:!0})}catch(error){console.error(error)}return updatedItem.effects=(null===(_a=item.actor)||void 0===_a?void 0:_a.isToken)?updatedAEs:aeDiff.updated,updatedItem}async migrateWorldActor(migrations,actor){var e_2,_a;const baseActor=actor.toObject(),updatedActor=await(()=>{try{return this.getUpdatedActor(baseActor,migrations)}catch(error){return console.error(error),null}})();if(!updatedActor)return null;const baseItems=[...baseActor.items],baseAEs=[...baseActor.effects],updatedItems=[...updatedActor.items],updatedAEs=[...updatedActor.effects],itemDiff=this.diffCollection(baseItems,updatedItems);if(itemDiff.deleted.length>0)try{const finalDeleted=itemDiff.deleted.filter((deletedId=>actor.items.some((item=>item.id===deletedId))));await actor.deleteEmbeddedDocuments("Item",finalDeleted,{noHook:!0})}catch(error){console.warn(error)}const aeDiff=this.diffCollection(baseAEs,updatedAEs);if(aeDiff.deleted.length>0)try{const finalDeleted=aeDiff.deleted.filter((deletedId=>actor.effects.some((effect=>effect.id===deletedId))));await actor.deleteEmbeddedDocuments("ActiveEffect",finalDeleted,{noHook:!0})}catch(error){console.warn(error)}if(itemDiff.inserted.length>0)try{await actor.createEmbeddedDocuments("Item",itemDiff.inserted,{noHook:!0})}catch(error){console.warn(error)}try{for(var updatedItems_1_1,updatedItems_1=__asyncValues(updatedItems);!(updatedItems_1_1=await updatedItems_1.next()).done;){const updated=updatedItems_1_1.value,original=baseActor.items.find((item=>item._id===updated._id));if(!original)continue;if(this.diffCollection(original.effects,updated.effects).deleted.length>0)try{await Item.updateDocuments([updated],{parent:actor,diff:!1,recursive:!1})}catch(error){console.warn(error)}}}catch(e_2_1){e_2={error:e_2_1}}finally{try{updatedItems_1_1&&!updatedItems_1_1.done&&(_a=updatedItems_1.return)&&await _a.call(updatedItems_1)}finally{if(e_2)throw e_2.error}}return updatedActor.items=actor.isToken?updatedItems:itemDiff.updated,updatedActor}async migrateWorldMacro(migrations,macro){if(migrations.some((migration=>!!migration.updateMacro)))try{const updatedMacro=await this.getUpdatedMacro(macro.toObject(),migrations),changes=diffObject(macro.toObject(),updatedMacro);isObjectEmpty(changes)||await macro.update(changes,{noHook:!0})}catch(error){console.warn(error)}}async migrateWorldTable(migrations,table){if(migrations.some((migration=>!!migration.updateTable)))try{const updatedMacro=await this.getUpdatedTable(table.toObject(),migrations),changes=diffObject(table.toObject(),updatedMacro);isObjectEmpty(changes)||table.update(changes,{noHook:!0})}catch(error){console.warn(error)}}async migrateSceneToken(migrations,token){if(migrations.some((migration=>!!migration.updateToken)))try{const updatedToken=await this.getUpdatedToken(token,migrations),changes=diffObject(token.toObject(),updatedToken);isObjectEmpty(changes)||await token.update(changes,{noHook:!0})}catch(error){console.error(error)}}async migrateUser(migrations,user){if(migrations.some((migration=>!!migration.updateUser)))try{const baseUser=user.toObject(),updatedUser=await this.getUpdatedUser(baseUser,migrations),changes=diffObject(user.toObject(),updatedUser);isObjectEmpty(changes)||await user.update(changes,{noHook:!0})}catch(error){console.error(error)}}async runMigrations(migrations){var e_3,_a,e_4,_b,e_5,_c;if(0===migrations.length)return;await this.migrateWorldDocuments(game.actors,migrations),await this.migrateWorldDocuments(game.items,migrations);const promises=[];for(const macro of game.macros)promises.push(this.migrateWorldMacro(migrations,macro));for(const table of game.tables)promises.push(this.migrateWorldTable(migrations,table));const packsToRelock=await this.runPackMigrations(migrations,promises);for(const user of game.users)promises.push(this.migrateUser(migrations,user));for(const migration of migrations)migration.migrate&&promises.push(migration.migrate());await Promise.allSettled(promises);try{for(var packsToRelock_1_1,packsToRelock_1=__asyncValues(packsToRelock);!(packsToRelock_1_1=await packsToRelock_1.next()).done;){const pack=packsToRelock_1_1.value;await pack.configure({locked:!0})}}catch(e_3_1){e_3={error:e_3_1}}finally{try{packsToRelock_1_1&&!packsToRelock_1_1.done&&(_a=packsToRelock_1.return)&&await _a.call(packsToRelock_1)}finally{if(e_3)throw e_3.error}}try{for(var _e,_d=__asyncValues(game.scenes.contents);!(_e=await _d.next()).done;){const scene=_e.value;try{for(var _g,_f=(e_5=void 0,__asyncValues(scene.tokens));!(_g=await _f.next()).done;){const token=_g.value,actor=token.actor;if(actor&&(await this.migrateSceneToken(migrations,token),actor.isToken)){const updated=await this.migrateWorldActor(migrations,actor);if(updated)try{await actor.update(updated)}catch(error){console.warn(error)}}}}catch(e_5_1){e_5={error:e_5_1}}finally{try{_g&&!_g.done&&(_c=_f.return)&&await _c.call(_f)}finally{if(e_5)throw e_5.error}}}}catch(e_4_1){e_4={error:e_4_1}}finally{try{_e&&!_e.done&&(_b=_d.return)&&await _b.call(_d)}finally{if(e_4)throw e_4.error}}}async runPackMigrations(migrations,promises){var e_6,_a,e_7,_b,e_8,_c,e_9,_d,e_10,_e;const worldPacks=game.packs.filter((pack=>"world"===pack.metadata.package)),packsToRelock=worldPacks.filter((pack=>pack.locked));try{for(var packsToRelock_2_1,packsToRelock_2=__asyncValues(packsToRelock);!(packsToRelock_2_1=await packsToRelock_2.next()).done;){const pack=packsToRelock_2_1.value;await pack.configure({locked:!1})}}catch(e_6_1){e_6={error:e_6_1}}finally{try{packsToRelock_2_1&&!packsToRelock_2_1.done&&(_a=packsToRelock_2.return)&&await _a.call(packsToRelock_2)}finally{if(e_6)throw e_6.error}}const actorPacks=worldPacks.filter((pack=>"Actor"===pack.documentName));try{for(var actorPacks_1_1,actorPacks_1=__asyncValues(actorPacks);!(actorPacks_1_1=await actorPacks_1.next()).done;){const pack=actorPacks_1_1.value;for(const actor of await pack.getDocuments())promises.push(this.migrateWorldActor(migrations,actor))}}catch(e_7_1){e_7={error:e_7_1}}finally{try{actorPacks_1_1&&!actorPacks_1_1.done&&(_b=actorPacks_1.return)&&await _b.call(actorPacks_1)}finally{if(e_7)throw e_7.error}}const itemPacks=worldPacks.filter((pack=>"Item"===pack.documentName));try{for(var itemPacks_1_1,itemPacks_1=__asyncValues(itemPacks);!(itemPacks_1_1=await itemPacks_1.next()).done;){const pack=itemPacks_1_1.value;for(const item of await pack.getDocuments())promises.push(this.migrateWorldItem(migrations,item))}}catch(e_8_1){e_8={error:e_8_1}}finally{try{itemPacks_1_1&&!itemPacks_1_1.done&&(_c=itemPacks_1.return)&&await _c.call(itemPacks_1)}finally{if(e_8)throw e_8.error}}const macroPacks=worldPacks.filter((pack=>"Macro"===pack.documentName));try{for(var macroPacks_1_1,macroPacks_1=__asyncValues(macroPacks);!(macroPacks_1_1=await macroPacks_1.next()).done;){const pack=macroPacks_1_1.value;for(const macro of await pack.getDocuments())promises.push(this.migrateWorldMacro(migrations,macro))}}catch(e_9_1){e_9={error:e_9_1}}finally{try{macroPacks_1_1&&!macroPacks_1_1.done&&(_d=macroPacks_1.return)&&await _d.call(macroPacks_1)}finally{if(e_9)throw e_9.error}}const tablePacks=worldPacks.filter((pack=>"RollTable"===pack.documentName));try{for(var tablePacks_1_1,tablePacks_1=__asyncValues(tablePacks);!(tablePacks_1_1=await tablePacks_1.next()).done;){const pack=tablePacks_1_1.value;for(const table of await pack.getDocuments())promises.push(this.migrateWorldTable(migrations,table))}}catch(e_10_1){e_10={error:e_10_1}}finally{try{tablePacks_1_1&&!tablePacks_1_1.done&&(_e=tablePacks_1.return)&&await _e.call(tablePacks_1)}finally{if(e_10)throw e_10.error}}return packsToRelock}async runMigration(force=!1){var e_11,_a;const schemaVersion={latest:MigrationRunner.LATEST_SCHEMA_VERSION,current:game.settings.get("pf2e","worldSchemaVersion")},systemVersion=game.system.data.version;ui.notifications.info(game.i18n.format("PF2E.Migrations.Starting",{version:systemVersion}),{permanent:!0});const migrationsToRun=force?this.migrations:this.migrations.filter((x=>schemaVersion.current<x.version)),migrationPhases=[[]];for(const migration of migrationsToRun)migrationPhases[migrationPhases.length-1].push(migration),migration.requiresFlush&&migrationPhases.push([]);try{for(var migrationPhases_1_1,migrationPhases_1=__asyncValues(migrationPhases);!(migrationPhases_1_1=await migrationPhases_1.next()).done;){const migrationPhase=migrationPhases_1_1.value;migrationPhase.length>0&&await this.runMigrations(migrationPhase)}}catch(e_11_1){e_11={error:e_11_1}}finally{try{migrationPhases_1_1&&!migrationPhases_1_1.done&&(_a=migrationPhases_1.return)&&await _a.call(migrationPhases_1)}finally{if(e_11)throw e_11.error}}await game.settings.set("pf2e","worldSchemaVersion",schemaVersion.latest)}}exports.MigrationRunner=MigrationRunner},48569:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.setWorldSchemaVersion=void 0;const runner_1=__webpack_require__(46842);exports.setWorldSchemaVersion=async function(){const storedSchemaVersion=game.settings.storage.get("world").getItem("pf2e.worldSchemaVersion");if(game.user.hasRole(CONST.USER_ROLES.GAMEMASTER)&&!storedSchemaVersion){const minimumVersion=runner_1.MigrationRunner.RECOMMENDED_SAFE_VERSION,currentVersion=0===game.actors.size?game.settings.get("pf2e","worldSchemaVersion"):Math.max(Math.min(...new Set(game.actors.map((actor=>{var _a;return null!==(_a=actor.schemaVersion)&&void 0!==_a?_a:minimumVersion})))),minimumVersion);await game.settings.set("pf2e","worldSchemaVersion",currentVersion)}}},27324:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DamageDicePF2e=exports.DiceModifierPF2e=exports.CheckModifier=exports.StatisticModifier=exports.ProficiencyModifier=exports.LEGENDARY=exports.MASTER=exports.EXPERT=exports.TRAINED=exports.UNTRAINED=exports.AbilityModifier=exports.ModifierPF2e=exports.MODIFIER_TYPES=exports.MODIFIER_TYPE=exports.ensureProficiencyOption=exports.PROFICIENCY_RANK_OPTION=void 0;const damage_1=__webpack_require__(24171),predication_1=__webpack_require__(538),util_1=__webpack_require__(6945);exports.PROFICIENCY_RANK_OPTION=Object.freeze(["proficiency:untrained","proficiency:trained","proficiency:expert","proficiency:master","proficiency:legendary"]),exports.ensureProficiencyOption=function(options,proficiencyRank){proficiencyRank>=0&&!options.some((option=>option.toLowerCase().startsWith("proficiency:")))&&options.push(exports.PROFICIENCY_RANK_OPTION[proficiencyRank])},exports.MODIFIER_TYPE=Object.freeze({ABILITY:"ability",PROFICIENCY:"proficiency",CIRCUMSTANCE:"circumstance",ITEM:"item",POTENCY:"potency",STATUS:"status",UNTYPED:"untyped"}),exports.MODIFIER_TYPES=["ability","circumstance","item","potency","proficiency","status","untyped"];class ModifierPF2e{constructor(name,modifier,type,enabled=!0,ignored=!1,source,notes){this.predicate=new predication_1.PredicatePF2e;this.name=name,this.modifier=modifier,this.type=(type=>Object.values(exports.MODIFIER_TYPE).some((modifierType=>type===modifierType)))(type)?type:"untyped",this.enabled=enabled,this.ignored=ignored,this.custom=!1,this.source=source,this.notes=notes}static fromObject(data){var _a,_b,_c;if(data instanceof ModifierPF2e)return data.clone();const modifier=new ModifierPF2e(data.name,null!==(_a=data.modifier)&&void 0!==_a?_a:0,null!==(_b=data.type)&&void 0!==_b?_b:"untyped",data.enabled,data.ignored,data.source,data.notes);return modifier.custom=null!==(_c=data.custom)&&void 0!==_c&&_c,modifier.predicate=data.predicate instanceof predication_1.PredicatePF2e?Object.create(data.predicate):new predication_1.PredicatePF2e(data.predicate),data.damageCategory&&(modifier.damageCategory=data.damageCategory),data.damageType&&(modifier.damageType=data.damageType),modifier}clone(options={}){const clone=new ModifierPF2e(this.name,this.modifier,this.type,this.enabled,this.ignored,this.source,this.notes);return clone.predicate=deepClone(this.predicate),clone.custom=this.custom,clone.ignored=this.ignored,clone.damageType=this.damageType,clone.damageCategory=this.damageCategory,clone.critical=this.critical,clone.traits=deepClone(this.traits),options.test&&clone.test(options.test),clone}test(options){this.ignored=!this.predicate.test(options)}}exports.ModifierPF2e=ModifierPF2e,exports.AbilityModifier={fromScore:(ability,score)=>{const modifier=new ModifierPF2e(`PF2E.Ability${(0,util_1.sluggify)(ability,{camel:"bactrian"})}`,Math.floor((score-10)/2),exports.MODIFIER_TYPE.ABILITY);return modifier.ability=ability,modifier}},exports.UNTRAINED=Object.freeze({atLevel:_level=>{var _a;const modifier=null!==(_a=game.settings.get("pf2e","proficiencyUntrainedModifier"))&&void 0!==_a?_a:0;return new ModifierPF2e("PF2E.ProficiencyLevel0",modifier,exports.MODIFIER_TYPE.PROFICIENCY)}}),exports.TRAINED=Object.freeze({atLevel:level=>{var _a,_b;const rule=null!==(_a=game.settings.get("pf2e","proficiencyVariant"))&&void 0!==_a?_a:"ProficiencyWithLevel";let modifier=null!==(_b=game.settings.get("pf2e","proficiencyTrainedModifier"))&&void 0!==_b?_b:2;return"ProficiencyWithLevel"===rule&&(modifier+=level),new ModifierPF2e("PF2E.ProficiencyLevel1",modifier,exports.MODIFIER_TYPE.PROFICIENCY)}}),exports.EXPERT=Object.freeze({atLevel:level=>{var _a,_b;const rule=null!==(_a=game.settings.get("pf2e","proficiencyVariant"))&&void 0!==_a?_a:"ProficiencyWithLevel";let modifier=null!==(_b=game.settings.get("pf2e","proficiencyExpertModifier"))&&void 0!==_b?_b:4;return"ProficiencyWithLevel"===rule&&(modifier+=level),new ModifierPF2e("PF2E.ProficiencyLevel2",modifier,exports.MODIFIER_TYPE.PROFICIENCY)}}),exports.MASTER=Object.freeze({atLevel:level=>{var _a,_b;const rule=null!==(_a=game.settings.get("pf2e","proficiencyVariant"))&&void 0!==_a?_a:"ProficiencyWithLevel";let modifier=null!==(_b=game.settings.get("pf2e","proficiencyMasterModifier"))&&void 0!==_b?_b:6;return"ProficiencyWithLevel"===rule&&(modifier+=level),new ModifierPF2e("PF2E.ProficiencyLevel3",modifier,exports.MODIFIER_TYPE.PROFICIENCY)}}),exports.LEGENDARY=Object.freeze({atLevel:level=>{var _a,_b;const rule=null!==(_a=game.settings.get("pf2e","proficiencyVariant"))&&void 0!==_a?_a:"ProficiencyWithLevel";let modifier=null!==(_b=game.settings.get("pf2e","proficiencyLegendaryModifier"))&&void 0!==_b?_b:8;return"ProficiencyWithLevel"===rule&&(modifier+=level),new ModifierPF2e("PF2E.ProficiencyLevel4",modifier,exports.MODIFIER_TYPE.PROFICIENCY)}}),exports.ProficiencyModifier=Object.freeze({fromLevelAndRank:(level,rank)=>{switch(rank||0){case 0:return exports.UNTRAINED.atLevel(level);case 1:return exports.TRAINED.atLevel(level);case 2:return exports.EXPERT.atLevel(level);case 3:return exports.MASTER.atLevel(level);case 4:return exports.LEGENDARY.atLevel(level);default:return rank>=5?exports.LEGENDARY.atLevel(level):exports.UNTRAINED.atLevel(level)}}});const HIGHER_BONUS=(a,b)=>a.modifier>=b.modifier,LOWER_PENALTY=(a,b)=>a.modifier<=b.modifier;function applyStacking(best,modifier,isBetter){const existing=best[modifier.type];return void 0===existing?(modifier.enabled=!0,best[modifier.type]=modifier,modifier.modifier):isBetter(modifier,existing)?(existing.enabled=!1,modifier.enabled=!0,best[modifier.type]=modifier,modifier.modifier-existing.modifier):(modifier.enabled=!1,0)}class StatisticModifier{constructor(name,modifiers){this.breakdown="",this.name=name,this._modifiers=null!=modifiers?modifiers:[];{const seen=[];this._modifiers.filter((m=>{const found=void 0!==seen.find((o=>o.name===m.name));return found&&"ability"!==m.type||seen.push(m),found})),this._modifiers=seen}this.applyStackingRules()}get modifiers(){return Object.freeze([...this._modifiers])}push(modifier){return void 0===this._modifiers.find((o=>o.name===modifier.name))&&(this._modifiers.push(modifier),this.applyStackingRules()),this._modifiers.length}unshift(modifier){return void 0===this._modifiers.find((o=>o.name===modifier.name))&&(this._modifiers.unshift(modifier),this.applyStackingRules()),this._modifiers.length}delete(modifierName){const toDelete="object"==typeof modifierName?modifierName:this._modifiers.find((modifier=>modifier.name===modifierName)),wasDeleted=!(!toDelete||!this._modifiers.includes(toDelete))&&!!this._modifiers.findSplice((modifier=>modifier===toDelete));return wasDeleted&&this.applyStackingRules(),wasDeleted}applyStackingRules(){this.totalModifier=function(modifiers){let total=0;const highestBonus={},lowestPenalty={},abilityModifiers=modifiers.filter((m=>m.type===exports.MODIFIER_TYPE.ABILITY&&!m.ignored)),bestAbility=abilityModifiers.reduce(((best,modifier)=>null===best||modifier.modifier>best.modifier?modifier:best),null);for(const modifier of abilityModifiers)modifier.ignored=modifier!==bestAbility;for(const modifier of modifiers)modifier.ignored?modifier.enabled=!1:modifier.type!==exports.MODIFIER_TYPE.UNTYPED?modifier.modifier<0?total+=applyStacking(lowestPenalty,modifier,LOWER_PENALTY):total+=applyStacking(highestBonus,modifier,HIGHER_BONUS):(modifier.enabled=!0,total+=modifier.modifier);return total}(this._modifiers)}}exports.StatisticModifier=StatisticModifier;exports.CheckModifier=class extends StatisticModifier{constructor(name,statistic,modifiers=[]){super(name,statistic.modifiers.map((modifier=>modifier.clone())).concat(modifiers))}};class DiceModifierPF2e{constructor(param){var _a,_b,_c,_d;if(!param.name)throw(0,util_1.ErrorPF2e)("Name is mandatory");this.name=param.name,this.label=param.label,this.diceNumber=null!==(_a=param.diceNumber)&&void 0!==_a?_a:0,this.dieSize=param.dieSize,this.critical=param.critical,this.damageType=param.damageType,this.category=param.category,this.traits=null!==(_b=param.traits)&&void 0!==_b?_b:[],this.override=param.override,this.custom=null!==(_c=param.custom)&&void 0!==_c&&_c,this.damageType&&(null!==(_d=this.category)&&void 0!==_d||(this.category=damage_1.DamageCategory.fromDamageType(this.damageType))),this.predicate=new predication_1.PredicatePF2e(param.predicate),this.enabled=predication_1.PredicatePF2e.test(this.predicate),this.ignored=!this.enabled}}exports.DiceModifierPF2e=DiceModifierPF2e;exports.DamageDicePF2e=class extends DiceModifierPF2e{constructor(params){const predicate=params.predicate instanceof predication_1.PredicatePF2e?params.predicate:new predication_1.PredicatePF2e(params.predicate);if(super(Object.assign(Object.assign({},params),{predicate})),!params.selector)throw(0,util_1.ErrorPF2e)("Selector is mandatory");this.selector=params.selector}}},46379:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RollNotePF2e=void 0;exports.RollNotePF2e=class{constructor(selector,text,predicate,outcome=[]){this.selector=selector,this.text=text,this.predicate=predicate,this.outcome=outcome}}},25306:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.identifyCreature=void 0;const dc_1=__webpack_require__(84372),util_1=__webpack_require__(6945),identifySkills=new Map;function toKnowledgeDC(dc,rarity,loreAdjustment="normal"){const rarityAdjustment=(0,dc_1.rarityToDCAdjustment)(rarity),start=(0,dc_1.combineDCAdjustments)(rarityAdjustment,loreAdjustment),progression=(0,dc_1.createDifficultyScale)(dc,start);return{dc:(0,dc_1.adjustDC)(dc,start),progression,start}}identifySkills.set("aberration",["occ"]),identifySkills.set("animal",["nat"]),identifySkills.set("astral",["occ"]),identifySkills.set("beast",["arc","nat"]),identifySkills.set("celestial",["rel"]),identifySkills.set("construct",["arc","cra"]),identifySkills.set("dragon",["arc"]),identifySkills.set("elemental",["arc","nat"]),identifySkills.set("ethereal",["occ"]),identifySkills.set("fey",["nat"]),identifySkills.set("fiend",["rel"]),identifySkills.set("fungus",["nat"]),identifySkills.set("humanoid",["soc"]),identifySkills.set("monitor",["rel"]),identifySkills.set("ooze",["occ"]),identifySkills.set("plant",["nat"]),identifySkills.set("spirit",["occ"]),identifySkills.set("undead",["rel"]),exports.identifyCreature=function(creature,{proficiencyWithoutLevel=!1}={}){var _a,_b,_c;const rarity=null!==(_a=creature.data.traits.rarity.value)&&void 0!==_a?_a:"common",level=null!==(_c=(0,util_1.toNumber)(null===(_b=creature.data.details.level)||void 0===_b?void 0:_b.value))&&void 0!==_c?_c:0,dc=(0,dc_1.calculateDC)(level,{proficiencyWithoutLevel}),traits=creature.data.traits.traits.value,skills=new Set(traits.flatMap((trait=>{var _a;return null!==(_a=identifySkills.get(trait))&&void 0!==_a?_a:[]})));return{specificLoreDC:toKnowledgeDC(dc,rarity,"very easy"),unspecificLoreDC:toKnowledgeDC(dc,rarity,"easy"),skill:toKnowledgeDC(dc,rarity,"normal"),skills}}},22501:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RulesElementPrompt=void 0;const predication_1=__webpack_require__(538);class RulesElementPrompt extends Application{constructor(data){var _a;super(),this.selection=null,this.choices=[],this.item=data.item,this.predicate=null!==(_a=data.predicate)&&void 0!==_a?_a:new predication_1.PredicatePF2e,this.options.title=this.item.name}get actor(){return this.item.actor}getChoices(){var _a;return null!==(_a=this.choices.filter((choice=>{var _a;return this.predicate.test(null!==(_a=choice.domain)&&void 0!==_a?_a:[])})))&&void 0!==_a?_a:[]}static get defaultOptions(){const options=super.defaultOptions;return options.width=350,options.resizable=!1,options.height="auto",options}async resolveSelection(){return this.choices=this.getChoices(),0===this.choices.length?(await this.close({force:!0}),null):(this.render(!0),new Promise((resolve=>{this.resolve=resolve})))}getData(){return{choices:this.choices}}activateListeners($html){$html.find("a[data-choice], button[data-choice]").on("click",(event=>{var _a;this.selection=null!==(_a=this.getSelection(event))&&void 0!==_a?_a:null,this.close()}))}async close({force=!1}={}){var _a;this.selection||(force?ui.notifications.warn(game.i18n.format("PF2E.UI.RuleElements.Prompt.NoValidOptions",{actor:this.actor.name,item:this.item.name})):ui.notifications.warn(game.i18n.format("PF2E.UI.RuleElements.Prompt.NoSelectionMade",{item:this.item.name}))),null===(_a=this.resolve)||void 0===_a||_a.call(this,this.selection),await super.close({force})}}exports.RulesElementPrompt=RulesElementPrompt},17:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AutomaticBonusProgression=void 0;const modifiers_1=__webpack_require__(27324);exports.AutomaticBonusProgression=class{static concatModifiers(level,synthetics){if("noABP"===game.settings.get("pf2e","automaticBonusVariant"))return;const values=this.abpValues(level),ac=values.ac,perception=values.perception,save=values.save;if(save>0&&(synthetics.statisticsModifiers["saving-throw"]=(synthetics.statisticsModifiers["saving-throw"]||[]).concat(new modifiers_1.ModifierPF2e(game.i18n.localize("PF2E.AutomaticBonusProgression.savePotency"),save,modifiers_1.MODIFIER_TYPE.POTENCY))),ac>0&&(synthetics.statisticsModifiers.ac=(synthetics.statisticsModifiers.ac||[]).concat(new modifiers_1.ModifierPF2e(game.i18n.localize("PF2E.AutomaticBonusProgression.defensePotency"),ac,modifiers_1.MODIFIER_TYPE.POTENCY))),perception>0&&(synthetics.statisticsModifiers.perception=(synthetics.statisticsModifiers.perception||[]).concat(new modifiers_1.ModifierPF2e(game.i18n.localize("PF2E.AutomaticBonusProgression.perceptionPotency"),perception,modifiers_1.MODIFIER_TYPE.POTENCY))),"ABPRulesAsWritten"===game.settings.get("pf2e","automaticBonusVariant")){const values=this.abpValues(level),attack=values.attack,damage=values.damage;attack>0&&(synthetics.statisticsModifiers["mundane-attack"]=(synthetics.statisticsModifiers["mundane-attack"]||[]).concat(new modifiers_1.ModifierPF2e(game.i18n.localize("PF2E.AutomaticBonusProgression.attackPotency"),attack,modifiers_1.MODIFIER_TYPE.POTENCY))),damage>0&&(synthetics.damageDice.damage=(synthetics.damageDice.damage||[]).concat(new modifiers_1.DamageDicePF2e({name:game.i18n.localize("PF2E.AutomaticBonusProgression.devastatingAttacks"),selector:"damage",diceNumber:damage})))}if("ABPFundamentalPotency"===game.settings.get("pf2e","automaticBonusVariant")){const values=this.abpValues(level),attack=values.attack,damage=values.damage;if(damage>0){const s={label:game.i18n.localize("PF2E.AutomaticBonusProgression.devastatingAttacks"),bonus:damage};synthetics.striking["mundane-damage"]=(synthetics.striking["mundane-damage"]||[]).concat(s)}if(attack>0){const potency={label:game.i18n.localize("PF2E.AutomaticBonusProgression.attackPotency"),bonus:attack};synthetics.weaponPotency["mundane-attack"]=(synthetics.weaponPotency["mundane-attack"]||[]).concat(potency)}}}static abpValues(level){let attack,damage,ac,perception,save;return attack=level>=2&&level<10?1:level>=10&&level<16?2:level>=16?3:0,damage=level>=4&&level<12?1:level>=12&&level<19?2:level>=19?3:0,ac=level>=5&&level<11?1:level>=11&&level<18?2:level>=18?3:0,perception=level>=7&&level<13?1:level>=13&&level<19?2:level>=19?3:0,save=level>=8&&level<14?1:level>=14&&level<20?2:level>=20?3:0,{attack,damage,ac,perception,save}}}},55057:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorTraitsRuleElement=void 0;const rule_element_1=__webpack_require__(18667);class ActorTraitsRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){var _a,_b,_c,_d;null!==(_a=data.add)&&void 0!==_a||(data.add=[]),null!==(_b=data.remove)&&void 0!==_b||(data.remove=[]),(null===(_c=data.add)||void 0===_c?void 0:_c.length)||(null===(_d=data.remove)||void 0===_d?void 0:_d.length)||(console.warn("PF2E | Actor traits rule element requires at least a non-empty add or remove field"),data.ignored=!0),super(data,item)}onBeforePrepareData(){if(this.ignored)return;const traits=this.actor.data.data.traits.traits.value,newTraits=this.data.add.filter((trait=>!traits.includes(trait)));for(const trait of newTraits)traits.push(trait),this.actor.rollOptions.all[`self:trait:${trait}`]=!0;for(const toRemove of this.data.remove)traits.findSplice((trait=>trait===toRemove)),this.actor.rollOptions.all[`self:trait:${toRemove}`]=!1}}exports.ActorTraitsRuleElement=ActorTraitsRuleElement},88568:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AdjustDegreeOfSuccessRuleElement=void 0;const rule_element_1=__webpack_require__(18667),values_1=__webpack_require__(35089),_util_1=__webpack_require__(6945);class AdjustDegreeOfSuccessRuleElement extends rule_element_1.RuleElementPF2e{onAfterPrepareData(){var _a,_b,_c,_d,_e,_f;const selector=this.resolveInjectedProperties(this.data.selector),adjustment=this.data.adjustment;if(selector&&adjustment&&"object"==typeof adjustment){this.isAdjustmentData(adjustment)||console.warn("PF2E | Degree of success adjustment does not have the correct format.",adjustment);const completeAdjustment={modifiers:adjustment};this.data.predicate&&(completeAdjustment.predicate=this.data.predicate);const skill=this.skillAbbreviationFromString(selector),save=(0,_util_1.tupleHasValue)(values_1.SAVE_TYPES,selector)?selector:void 0,actorData=this.actor.data;"saving-throw"===selector||save?"saving-throw"===selector?values_1.SAVE_TYPES.forEach((save=>{var _a,_b;null!==(_a=(_b=actorData.data.saves[save]).adjustments)&&void 0!==_a||(_b.adjustments=[]),actorData.data.saves[save].adjustments.push(completeAdjustment)})):save&&(null!==(_a=(_d=actorData.data.saves[save]).adjustments)&&void 0!==_a||(_d.adjustments=[]),actorData.data.saves[save].adjustments.push(completeAdjustment)):"skill-check"===selector||void 0!==skill?"skill-check"===selector?Object.keys(actorData.data.skills).forEach((key=>{var _a,_b;const skill=key;null!==(_a=(_b=actorData.data.skills[skill]).adjustments)&&void 0!==_a||(_b.adjustments=[]),actorData.data.skills[skill].adjustments.push(completeAdjustment)})):skill&&(null!==(_b=(_e=actorData.data.skills[skill]).adjustments)&&void 0!==_b||(_e.adjustments=[]),actorData.data.skills[skill].adjustments.push(completeAdjustment)):"perception-check"===selector?(null!==(_c=(_f=actorData.data.attributes.perception).adjustments)&&void 0!==_c||(_f.adjustments=[]),actorData.data.attributes.perception.adjustments.push(completeAdjustment)):"attack-roll"===selector?actorData.data.actions.forEach((action=>{var _a;null!==(_a=action.adjustments)&&void 0!==_a||(action.adjustments=[]),action.adjustments.push(completeAdjustment)})):console.warn(`PF2E | Degree of success adjustment for selector '${selector}' is not implemented.`)}else console.warn("PF2E | Degree of success adjustment requires a selector field, a type field and an adjustment object.")}skillAbbreviationFromString(skill){for(const key of values_1.SKILL_ABBREVIATIONS)if(values_1.SKILL_DICTIONARY[key]===skill)return key}isAdjustmentData(adjustment){const adjusts=["criticalFailure","failure","success","criticalSuccess","all"],modifiers=["one-degree-better","one-degree-worse"];for(const[key,value]of Object.entries(adjustment))if(!adjusts.includes(key)||!modifiers.includes(value))return!1;return!0}}exports.AdjustDegreeOfSuccessRuleElement=AdjustDegreeOfSuccessRuleElement},42413:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AELikeRuleElement=void 0;const _item_1=__webpack_require__(10843),rule_element_1=__webpack_require__(18667);class AELikeRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){var _a,_b;if(null!==(_a=(data=deepClone(data)).priority)&&void 0!==_a||(data.priority="string"==typeof data.mode&&AELikeRuleElement.CHANGE_MODES.includes(data.mode)?10*AELikeRuleElement.CHANGE_MODES.indexOf(data.mode)+10:NaN),null!==(_b=data.phase)&&void 0!==_b||(data.phase="applyAEs"),super(data,item),Number.isNaN(this.priority))return void(this.ignored=!0);const actor=item.actor,pathIsValid="string"==typeof this.path&&[this.path,this.path.replace(/\.\w+$/,""),this.path.replace(/\.?\w+\.\w+$/,"")].some((path=>void 0!==typeof getProperty(actor.data,path)));pathIsValid||this.warn("path");const valueIsValid=["number","string","boolean","object"].includes(typeof this.value);valueIsValid||this.warn("value"),pathIsValid&&valueIsValid||(this.ignored=!0)}get path(){return this.data.path}get mode(){return this.data.mode}get value(){return this.data.value}onApplyActiveEffects(){this.ignored||"applyAEs"!==this.data.phase||this.applyAELike()}onBeforePrepareData(){this.ignored||"beforeDerived"!==this.data.phase||this.applyAELike()}onAfterPrepareData(){this.ignored||"afterDerived"!==this.data.phase||this.applyAELike()}applyAELike(){const{predicate}=this.data;if(predicate&&!predicate.test(this.actor.getRollOptions(["all"])))return;if(this.data.path=this.resolveInjectedProperties(this.data.path),/\bundefined\b/.test(this.path))return;const change=this.resolveValue(this.data.value),current=getProperty(this.actor.data,this.path);switch(this.mode){case"multiply":{if("number"!=typeof change||"number"!=typeof current&&void 0!==current)return this.warn("path");const newValue=(null!=current?current:0)*change;setProperty(this.actor.data,this.path,newValue),this.logChange(change);break}case"add":{if("number"!=typeof change||"number"!=typeof current&&null!=current)return this.warn("path");const newValue=(null!=current?current:0)+change;setProperty(this.actor.data,this.path,newValue),this.logChange(change);break}case"downgrade":{if("number"!=typeof change||"number"!=typeof current&&void 0!==current)return this.warn("path");const newValue=Math.min(null!=current?current:0,change);setProperty(this.actor.data,this.path,newValue),this.logChange(change);break}case"upgrade":{if("number"!=typeof change||"number"!=typeof current&&void 0!==current)return this.warn("path");const newValue=Math.max(null!=current?current:0,change);setProperty(this.actor.data,this.path,newValue),this.logChange(change);break}case"override":{const currentValue=getProperty(this.actor.data,this.path);typeof change!=typeof currentValue&&void 0!==currentValue||(setProperty(this.actor.data,this.path,change),"string"==typeof change&&this.logChange(change))}}}logChange(value){var _a,_b,_c,_d;const{item,mode}=this;if("string"==typeof value&&"override"!==mode)return;const level=item instanceof _item_1.FeatPF2e?Number(null===(_b=/-(\d+)$/.exec(null!==(_a=item.data.data.location)&&void 0!==_a?_a:""))||void 0===_b?void 0:_b[1])||item.level:"level"in item&&"number"==typeof item.level?item.level:null,{autoChanges}=this.actor.data.data;(null!==(_c=autoChanges[_d=this.path])&&void 0!==_c?_c:autoChanges[_d]=[]).push({mode,level,value,source:this.item.name})}warn(path){const item=this.item;console.warn(`PF2e System | "${path}" property on RuleElement from item ${item.name} (${item.uuid}) is invalid`)}}exports.AELikeRuleElement=AELikeRuleElement,AELikeRuleElement.CHANGE_MODES=["multiply","add","downgrade","upgrade","override"]},7565:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseSpeedRuleElement=void 0;const rule_element_1=__webpack_require__(18667),_util_1=__webpack_require__(6945),values_1=__webpack_require__(35089);class BaseSpeedRuleElement extends rule_element_1.RuleElementPF2e{onBeforePrepareData(){var _a,_b;const value=this.resolveValue(this.data.value),speedType=null!==(_b=null===(_a=this.data.selector)||void 0===_a?void 0:_a.trim().replace(/-speed$/,""))&&void 0!==_b?_b:"land";if(!((0,_util_1.tupleHasValue)(values_1.MOVEMENT_TYPES,speedType)&&"number"==typeof value&&value>0))return void console.warn("PF2E | Base speed requires a positive value field");const speeds=this.actor.data.data.attributes.speed,otherSpeeds=speeds.otherSpeeds,existingOther=otherSpeeds.find((speed=>speed.type===speedType));if("land"===speedType){speeds.value=Math.max(Number(speeds.value),value)}else if(existingOther)existingOther.value=Math.max(Number(existingOther.value),value);else{const newSpeed={label:game.i18n.localize(`PF2E.SpeedTypes${speedType.titleCase()}`),type:speedType,value};otherSpeeds.push(newSpeed)}}}exports.BaseSpeedRuleElement=BaseSpeedRuleElement,BaseSpeedRuleElement.validActorTypes=["character","familiar","npc"]},94063:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BattleFormRuleElement=void 0;const sense_1=__webpack_require__(82280),values_1=__webpack_require__(35089),data_1=__webpack_require__(39530),modifiers_1=__webpack_require__(27324),rule_element_1=__webpack_require__(18667),predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945),creature_size_1=__webpack_require__(91524),immunity_1=__webpack_require__(22921),resistance_1=__webpack_require__(24200),weakness_1=__webpack_require__(12352),sense_2=__webpack_require__(41452),strike_1=__webpack_require__(27519),temphp_1=__webpack_require__(81103);class BattleFormRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){var _a;super(data,item),this.initialize(this.data),this.overrides=this.resolveValue(null!==(_a=this.data.value)&&void 0!==_a?_a:{},this.data.overrides),this.modifierLabel=this.label.replace(/^[^:]+:\s*|\s*\([^)]+\)$/g,"")}initialize(data){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v;if(this.ignored)return;const{value}=data;if(!(data.overrides instanceof Object&&(value instanceof Object||void 0===value)))return console.warn("PF2e System | Battle Form rule element failed to validate"),void(this.ignored=!0);null!==(_a=data.canCast)&&void 0!==_a||(data.canCast=!1),null!==(_b=data.canSpeak)&&void 0!==_b||(data.canSpeak=!1),null!==(_c=data.hasHands)&&void 0!==_c||(data.hasHands=!1),null!==(_d=data.ownUnarmed)&&void 0!==_d||(data.ownUnarmed=!1);const overrides=null!==(_e=data.overrides)&&void 0!==_e?_e:data.overrides={};null!==(_f=overrides.tempHP)&&void 0!==_f||(overrides.tempHP=null),null!==(_g=overrides.traits)&&void 0!==_g||(overrides.traits=[]),null!==(_h=overrides.senses)&&void 0!==_h||(overrides.senses={}),null!==(_j=overrides.size)&&void 0!==_j||(overrides.size=null),null!==(_k=overrides.speeds)&&void 0!==_k||(overrides.speeds={}),overrides.armorClass=mergeObject({modifier:0,ignoreCheckPenalty:!0,ignoreSpeedPenalty:!0},null!==(_l=overrides.armorClass)&&void 0!==_l?_l:{});const skills=null!==(_m=overrides.skills)&&void 0!==_m?_m:overrides.skills={};for(const skillData of Object.values(skills))null!==(_o=skillData.ownIfHigher)&&void 0!==_o||(skillData.ownIfHigher=!0);const strikes=null!==(_p=overrides.strikes)&&void 0!==_p?_p:overrides.strikes={};for(const[key,strikeData]of Object.entries(strikes))strikeData.label=game.i18n.localize(strikeData.label),null!==(_q=strikeData.img)&&void 0!==_q||(strikeData.img=null!==(_r=BattleFormRuleElement.defaultIcons[key])&&void 0!==_r?_r:this.item.img),null!==(_s=strikeData.ownIfHigher)&&void 0!==_s||(strikeData.ownIfHigher=!0);null!==(_t=overrides.immunities)&&void 0!==_t||(overrides.immunities=[]),null!==(_u=overrides.weaknesses)&&void 0!==_u||(overrides.weaknesses=[]),null!==(_v=overrides.resistances)&&void 0!==_v||(overrides.resistances=[]),this.actor.data.flags.pf2e.disableABP=!0}onCreate(actorUpdates){if(this.ignored)return;const tempHP=this.overrides.tempHP;tempHP&&new temphp_1.TempHPRuleElement({key:"TempHP",label:this.data.label,value:tempHP},this.item).onCreate(actorUpdates)}onBeforePrepareData(synthetics){var _a,_b;if(this.ignored)return;const{rollOptions}=this.actor;if(rollOptions.all.polymorph)return console.warn("PF2e System | You are already under the effect of a polymorph effect"),void(this.ignored=!0);this.setRollOptions(),this.prepareSenses(synthetics);for(const trait of this.overrides.traits){const currentTraits=this.actor.data.data.traits.traits;currentTraits.value.includes(trait)||currentTraits.value.push(trait)}if(this.overrides.armorClass.ignoreSpeedPenalty){(null!==(_a=(_b=this.actor.rollOptions).speed)&&void 0!==_a?_a:_b.speed={})["armor:ignore-speed-penalty"]=!0}}onAfterPrepareData(synthetics){this.ignored||(this.prepareAC(),this.prepareSize(),this.prepareSkills(),this.prepareSpeeds(synthetics),this.prepareStrikes(synthetics),this.prepareIWR())}onDelete(actorUpdates){if(this.ignored)return;const tempHP=this.overrides.tempHP;tempHP&&new temphp_1.TempHPRuleElement({key:"TempHP",label:this.data.label,value:tempHP},this.item).onDelete(actorUpdates)}setRollOptions(){var _a;const{rollOptions}=this.actor;if(rollOptions.all.polymorph=!0,rollOptions.all["battle-form"]=!0,rollOptions.all["armor:ignore-check-penalty"]=this.overrides.armorClass.ignoreCheckPenalty,rollOptions.all["armor:ignore-speed-penalty"]=this.overrides.armorClass.ignoreSpeedPenalty,this.overrides.armorClass.ignoreSpeedPenalty){(null!==(_a=rollOptions.speed)&&void 0!==_a?_a:rollOptions.speed={})["armor:ignore-speed-penalty"]=!0}for(const key of values_1.SKILL_ABBREVIATIONS){if(!(key in this.overrides.skills))continue;const longForm=values_1.SKILL_DICTIONARY[key];rollOptions.all[`battle-form:${longForm}`]=!0}}prepareAC(){var _a;const overrides=this.overrides,armorClass=this.actor.data.data.attributes.ac;if(!(null!==(_a=this.resolveValue(overrides.armorClass.modifier,armorClass.totalModifier))&&void 0!==_a?_a:0))return;this.suppressModifiers(armorClass);const newModifier=this.resolveValue(overrides.armorClass.modifier);armorClass.unshift(new modifiers_1.ModifierPF2e(this.modifierLabel,newModifier,"untyped")),armorClass.value=armorClass.totalModifier}prepareSenses(synthetics){var _a;for(const senseType of sense_1.SENSE_TYPES){const newSense=this.overrides.senses[senseType];if(!newSense)continue;null!==(_a=newSense.acuity)&&void 0!==_a||(newSense.acuity="precise");const ruleData=Object.assign({key:"Sense",selector:senseType,force:!0},newSense);new sense_2.SenseRuleElement(ruleData,this.item).onBeforePrepareData(synthetics)}}prepareSize(){if(!this.overrides.size)return;const ruleData={key:"CreatureSize",label:this.label,value:this.overrides.size};new creature_size_1.CreatureSizeRuleElement(ruleData,this.item).onBeforePrepareData()}prepareSpeeds(synthetics){const{attributes}=this.actor.data.data,currentSpeeds=attributes.speed;for(const movementType of values_1.MOVEMENT_TYPES){const speedOverride=this.overrides.speeds[movementType];if("number"==typeof speedOverride)if("land"===movementType){const landSpeed=attributes.speed;this.suppressModifiers(attributes.speed),attributes.speed.totalModifier=landSpeed.total=speedOverride+landSpeed.totalModifier;const label=game.i18n.format("PF2E.SpeedBaseLabel",{type:game.i18n.localize("PF2E.SpeedTypesLand")});attributes.speed.breakdown=[`${label} ${speedOverride}`].concat(landSpeed.modifiers.filter((m=>m.enabled)).map((modifier=>`${game.i18n.localize(modifier.name)} ${modifier.modifier<0?"":"+"}${modifier.modifier}`))).join(", ")}else{const{otherSpeeds}=currentSpeeds,label=game.i18n.localize(CONFIG.PF2E.speedTypes[movementType]);otherSpeeds.findSplice((speed=>speed.type===movementType)),otherSpeeds.push({type:movementType,label,value:String(speedOverride)});const newSpeed=this.actor.prepareSpeed(movementType,synthetics);this.suppressModifiers(newSpeed),newSpeed.totalModifier=newSpeed.total=speedOverride+newSpeed.totalModifier,newSpeed.breakdown=[`${label} ${speedOverride}`].concat(newSpeed.modifiers.filter((modifier=>modifier.enabled)).map((modifier=>{const sign=modifier.modifier<0?"":"+",value=modifier.modifier;return`${this.modifierLabel} ${sign}${value}`}))).join(", "),otherSpeeds.findSplice((speed=>speed.type===movementType)),otherSpeeds.push(newSpeed)}}}prepareSkills(){for(const key of values_1.SKILL_ABBREVIATIONS){const newSkill=this.overrides.skills[key];if(!newSkill)continue;const currentSkill=this.actor.data.data.skills[key];if(currentSkill.totalModifier>newSkill.modifier&&newSkill.ownIfHigher)continue;const newModifier=this.resolveValue(newSkill.modifier);this.suppressModifiers(currentSkill),currentSkill.unshift(new modifiers_1.ModifierPF2e(this.modifierLabel,newModifier,"untyped")),currentSkill.value=currentSkill.totalModifier}}prepareStrikes(synthetics){var _a;const ruleData=Object.entries(this.overrides.strikes).map((([slug,strikeData])=>{var _a;return{key:"Strike",label:null!==(_a=strikeData.label)&&void 0!==_a?_a:`PF2E.BattleForm.Attack.${(0,_util_1.sluggify)(slug,{camel:"bactrian"})}`,slug,img:strikeData.img,category:strikeData.category,group:strikeData.group,baseItem:strikeData.baseType,options:[slug],damage:{base:strikeData.damage},range:null,traits:strikeData.traits}}));if(this.data.ownUnarmed)synthetics.strikes=synthetics.strikes.filter((weapon=>"unarmed"===weapon.category)),this.actor.rollOptions.all["battle-form:own-attack-modifier"]=!0;else{synthetics.strikes.length=0;for(const striking of Object.values(synthetics.striking).flat()){(null!==(_a=striking.predicate)&&void 0!==_a?_a:striking.predicate=new predication_1.PredicatePF2e).not.push("battle-form")}}for(const datum of ruleData)datum.traits.includes("magical")||datum.traits.push("magical"),new strike_1.StrikeRuleElement(datum,this.item).onBeforePrepareData(synthetics);this.actor.data.data.actions=this.data.ownUnarmed?this.actor.data.data.actions.filter((action=>action.traits.some((trait=>"unarmed"===trait.name)))):synthetics.strikes.map((weapon=>this.actor.prepareStrike(weapon,{categories:[...data_1.WEAPON_CATEGORIES],synthetics})));for(const action of this.actor.data.data.actions){const strike=this.overrides.strikes[action.slug];if(this.data.ownUnarmed||!(strike.modifier>=action.totalModifier)&&strike.ownIfHigher)this.actor.rollOptions.all["battle-form:own-attack-modifier"]=!0;else{this.suppressModifiers(action),this.suppressNotes(Object.entries(synthetics.rollNotes).flatMap((([key,note])=>/\bdamage\b/.test(key)?note:[])));const baseModifier=this.resolveValue(strike.modifier);action.unshift(new modifiers_1.ModifierPF2e(this.modifierLabel,baseModifier,"untyped"));const title=game.i18n.localize("PF2E.RuleElement.Strike"),sign=action.totalModifier<0?"":"+";action.variants[0].label=`${title} ${sign}${action.totalModifier}`}}}prepareIWR(){for(const immunity of this.overrides.immunities)new immunity_1.ImmunityRuleElement(Object.assign({key:"Immunity"},immunity),this.item).onBeforePrepareData();for(const weakness of this.overrides.weaknesses)new weakness_1.WeaknessRuleElement(Object.assign(Object.assign({key:"Weakness"},weakness),{override:!0}),this.item).onBeforePrepareData();for(const resistance of this.overrides.resistances)new resistance_1.ResistanceRuleElement(Object.assign(Object.assign({key:"Resistance"},resistance),{override:!0}),this.item).onBeforePrepareData()}suppressModifiers(statistic){for(const modifier of statistic.modifiers)modifier.ignored||(!["status","circumstance"].includes(modifier.type)&&modifier.modifier>=0||"ability"===modifier.type)&&(modifier.predicate.not.push("battle-form"),modifier.ignored=!0);statistic.applyStackingRules()}suppressNotes(notes){var _a,_b;for(const note of notes)(null===(_b=null===(_a=note.predicate)||void 0===_a?void 0:_a.all)||void 0===_b?void 0:_b.includes("battle-form"))||(note.predicate=note.predicate instanceof predication_1.PredicatePF2e?note.predicate:new predication_1.PredicatePF2e(note.predicate),note.predicate.not.push("battle-form"))}applyDamageExclusion(modifiers){var _a,_b,_c,_d,_e,_f,_g;if(!this.data.ownUnarmed)for(const modifier of modifiers){if(null===(_b=null===(_a=modifier.predicate)||void 0===_a?void 0:_a.not)||void 0===_b?void 0:_b.includes("battle-form"))continue;const isNumericBonus=modifier instanceof modifiers_1.ModifierPF2e&&modifier.modifier>=0,isExtraDice=modifier instanceof modifiers_1.DiceModifierPF2e,isStatusOrCircumstance=["status","circumstance"].includes(null!==(_c=modifier.type)&&void 0!==_c?_c:"untyped"),isBattleFormModifier=!(!(null===(_e=null===(_d=modifier.predicate)||void 0===_d?void 0:_d.any)||void 0===_e?void 0:_e.includes("battle-form"))&&!(null===(_g=null===(_f=modifier.predicate)||void 0===_f?void 0:_f.all)||void 0===_g?void 0:_g.includes("battle-form")));!isNumericBonus&&!isExtraDice||isStatusOrCircumstance||isBattleFormModifier||modifier.predicate.not.push("battle-form")}}}exports.BattleFormRuleElement=BattleFormRuleElement,BattleFormRuleElement.validActorTypes=["character"],BattleFormRuleElement.defaultIcons=["antler","beak","body","bone-shard","branch","claw","cube-face","fangs","fire-mote","fist","foot","foreleg","gust","horn","jaws","lighting-lash","mandibles","piercing-hymn","pincer","pseudopod","rock","stinger","tail","talon","tendril","tentacle","tongue","vine","water-spout","wave","wing"].reduce(((accumulated,strike)=>{const path=`systems/pf2e/icons/unarmed-attacks/${strike}.webp`;return Object.assign(Object.assign({},accumulated),{[strike]:path})}),{})},92543:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChoiceSetPrompt=void 0;const prompt_1=__webpack_require__(22501);class ChoiceSetPrompt extends prompt_1.RulesElementPrompt{constructor(data){super(data),this.choices=data.choices}static get defaultOptions(){const options=super.defaultOptions;return options.width=250,options.id="choice-set-prompt",options}get template(){return"systems/pf2e/templates/system/rules-elements/choice-set-prompt.html"}getSelection(event){var _a,_b;const selection=null!==(_a=$(event.currentTarget).attr("data-choice"))&&void 0!==_a?_a:"";return null!==(_b=this.choices.find((choice=>choice.value===selection)))&&void 0!==_b?_b:null}activateListeners($html){super.activateListeners($html),$html.find("select").on("change",(event=>{const $select=$(event.target);$html.find("button[data-choice]").attr({"data-choice":$select.val()})}))}}exports.ChoiceSetPrompt=ChoiceSetPrompt},92769:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChoiceSetRuleElement=void 0;const rule_element_1=__webpack_require__(18667),_util_1=__webpack_require__(6945),prompt_1=__webpack_require__(92543);class ChoiceSetRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){if(super(data,item),this.setDefaultFlag(this.data),"string"!=typeof this.data.flag||this.data.selection&&"string"!=typeof this.data.selection)this.ignored=!0;else if("string"==typeof this.data.selection)item.data.flags.pf2e.rulesSelections[this.data.flag]=this.data.selection;else for(const ruleData of this.item.data.data.rules)ruleData.ignored=!0}async preCreate(source){this.setDefaultFlag(source);const selection=await new prompt_1.ChoiceSetPrompt({predicate:this.data.predicate,item:this.item,choices:this.inflateChoices()}).resolveSelection();if(selection){source.selection=selection.value;const effectName=this.item.data._source.name,label=game.i18n.localize(selection.label);this.item.data._source.name=`${effectName} (${label})`}else source.ignored=!0}setDefaultFlag(source=this.data){var _a,_b;null!==(_a=source.flag)&&void 0!==_a||(source.flag=(0,_util_1.sluggify)(null!==(_b=this.item.slug)&&void 0!==_b?_b:this.item.name,{camel:"dromedary"}))}inflateChoices(){const choices=Array.isArray(this.data.choices)?this.data.choices:Object.entries(getProperty(CONFIG.PF2E,this.data.choices)).map((([value,label])=>({value,label:"string"==typeof label?label:""})));try{return choices.map((choice=>({value:choice.value,label:game.i18n.localize(choice.label)}))).sort(((a,b)=>a.label.localeCompare(b.label)))}catch(_a){return[]}}}exports.ChoiceSetRuleElement=ChoiceSetRuleElement},88759:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CraftingEntryRuleElement=void 0;const rule_element_1=__webpack_require__(18667);class CraftingEntryRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){data.selector||(console.warn("PF2E | Crafting entry rule element requires a a non-empty selector field"),data.ignored=!0),data.name||(console.warn("PF2E | Crafting entry rule element requires a a non-empty name field"),data.ignored=!0),super(data,item)}onCreate(actorUpdates){const selector=this.resolveValue(this.data.selector),data={actorPreparedFormulas:[],selector,name:this.data.name,isAlchemical:this.data.isAlchemical,isDailyPrep:this.data.isDailyPrep,isPrepared:this.data.isPrepared,requiredTraits:this.data.requiredTraits,maxItemLevel:this.data.maxItemLevel,maxSlots:this.data.maxSlots};mergeObject(actorUpdates,{[`data.crafting.entries.${selector}`]:data})}onDelete(actorUpdates){actorUpdates[`data.crafting.entries.-=${this.resolveValue(this.data.selector)}`]=null}}exports.CraftingEntryRuleElement=CraftingEntryRuleElement,CraftingEntryRuleElement.validActorTypes=["character"]},26746:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CraftingFormulaRuleElement=void 0;const rule_element_1=__webpack_require__(18667);class CraftingFormulaRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){"string"==typeof data.uuid&&/^(?:Compendium|Item)\..*[a-z0-9]{16}$/i.test(data.uuid)||(console.warn(`PF2e System | Crafting formula rule element on ${item.name} (${item.uuid}) has a malformed UUID`),data.ignored=!0),super(data,item)}onBeforePrepareData(){this.ignored||this.actor.data.data.crafting.formulas.push({uuid:this.data.uuid})}}exports.CraftingFormulaRuleElement=CraftingFormulaRuleElement,CraftingFormulaRuleElement.validActorTypes=["character"]},91524:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CreatureSizeRuleElement=void 0;const size_1=__webpack_require__(43270),data_1=__webpack_require__(52769),_util_1=__webpack_require__(6945),rule_element_1=__webpack_require__(18667);class CreatureSizeRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){var _a;null!==(_a=data.resizeEquipment)&&void 0!==_a||(data.resizeEquipment=!1),super(data,item)}incrementSize(size){switch(size){case"tiny":return"sm";case"sm":return"med";case"lg":return"huge";default:return"grg"}}onBeforePrepareData(){var _a;if(this.ignored)return;const value=this.resolveValue();if("string"!=typeof value&&"number"!=typeof value)return void console.warn(`PF2E System | CreatureSize Rule Element on actor ${this.actor.id} (${this.actor.name})`,"has a non-string, non-numeric value");const size=null!==(_a=CreatureSizeRuleElement.wordToAbbreviation[value])&&void 0!==_a?_a:value;if(1===value)this.actor.data.data.traits.size.increment();else if(-1===value)this.actor.data.data.traits.size.decrement();else{if(!(0,_util_1.tupleHasValue)(data_1.SIZES,size)){const validValues=Array.from(new Set(Object.entries(CreatureSizeRuleElement.wordToAbbreviation).flat())).join('", "');return void console.warn(`PF2E System | CreatureSize Rule Element on actor ${this.actor.id} (${this.actor.name})`,`has an invalid value: must be one of "${validValues}", +1, or -1`)}this.actor.data.data.traits.size=new size_1.ActorSizePF2e({value:size})}if(this.data.resizeEquipment)for(const item of this.actor.physicalItems)item.data.data.size.value=this.incrementSize(item.size)}}exports.CreatureSizeRuleElement=CreatureSizeRuleElement,CreatureSizeRuleElement.validActorTypes=["character","npc","familiar"],CreatureSizeRuleElement.wordToAbbreviation={tiny:"tiny",small:"sm",medium:"med",large:"lg",huge:"huge",gargantuan:"grg"}},51736:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DamageDiceRuleElement=void 0;const rule_element_1=__webpack_require__(18667),modifiers_1=__webpack_require__(27324);class DamageDiceRuleElement extends rule_element_1.RuleElementPF2e{onBeforePrepareData({damageDice}){var _a;const value=deepClone(this.data);if(delete value.key,this.data.value){const bracketed=this.resolveValue(this.data.value);mergeObject(value,bracketed,{inplace:!0,overwrite:!0}),delete value.value}const selector=this.resolveInjectedProperties(value.selector);if(value.name=(null!==(_a=this.data.name)&&void 0!==_a?_a:this.label).replace(/^[^:]+:\s*|\s*\([^)]+\)$/g,""),value.label=this.label,selector&&value.name&&value){const dice=new modifiers_1.DamageDicePF2e(value);damageDice[selector]=(damageDice[selector]||[]).concat(dice)}else console.warn("PF2E | Damage dice requires at least a selector field, and a label field or item name")}}exports.DamageDiceRuleElement=DamageDiceRuleElement},4515:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DexterityModifierCapRuleElement=void 0;const rule_element_1=__webpack_require__(18667);class DexterityModifierCapRuleElement extends rule_element_1.RuleElementPF2e{onBeforePrepareData(){if(this.ignored)return;const value=this.resolveValue(this.data.value);"number"==typeof value?this.actor.data.data.attributes.dexCap.push({value,source:this.label}):console.warn("PF2E | Dexterity modifier cap requires at least a label field or item name, and a value")}}exports.DexterityModifierCapRuleElement=DexterityModifierCapRuleElement,DexterityModifierCapRuleElement.validActorTypes=["character","npc"]},78155:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectTargetPrompt=void 0;const prompt_1=__webpack_require__(22501);class EffectTargetPrompt extends prompt_1.RulesElementPrompt{constructor(data){super(data),this.scope="armor"===data.scope||"weapon"===data.scope?data.scope:"weapon"}static get defaultOptions(){const options=super.defaultOptions;return options.id="effect-target-prompt",options}get template(){return"systems/pf2e/templates/system/rules-elements/effect-target-prompt.html"}getChoices(){return(()=>{switch(this.scope){case"armor":return this.actor.itemTypes.armor.filter((armor=>armor.isArmor)).map((armor=>({value:armor,label:armor.name,domain:armor.getItemRollOptions()})));case"weapon":return this.actor.itemTypes.weapon.map((weapon=>({value:weapon,label:weapon.name,domain:weapon.getItemRollOptions()})))}})().filter((choice=>this.predicate.test(choice.domain)))}getSelection(event){var _a;const itemId=$(event.currentTarget).attr("data-choice");return null!==(_a=this.choices.find((choice=>choice.value.id===itemId)))&&void 0!==_a?_a:null}}exports.EffectTargetPrompt=EffectTargetPrompt},57350:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectTargetRuleElement=void 0;const _item_1=__webpack_require__(10843),rule_element_1=__webpack_require__(18667),prompt_1=__webpack_require__(78155);class EffectTargetRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){var _a;null!==(_a=data.predicate)&&void 0!==_a||(data.predicate={all:["weapon:equipped"]}),super(data,item),"string"==typeof data.targetId&&item instanceof _item_1.EffectPF2e&&(item.data.data.target=data.targetId)}async preCreate(source){var _a;if(!(this.item instanceof _item_1.EffectPF2e))return;const selection=await new prompt_1.EffectTargetPrompt({predicate:this.data.predicate,scope:null!==(_a=this.data.scope)&&void 0!==_a?_a:"weapon",item:this.item}).resolveSelection();if(selection){source.targetId=selection.value.id;const effectName=this.item.data._source.name;this.item.data._source.name=`${effectName} (${selection.value.name})`}else source.ignored=!0}}exports.EffectTargetRuleElement=EffectTargetRuleElement},64510:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FixedProficiencyRuleElement=void 0;const rule_element_1=__webpack_require__(18667),values_1=__webpack_require__(35089),modifiers_1=__webpack_require__(27324),_util_1=__webpack_require__(6945),KNOWN_TARGETS={ac:{ability:"dex",shortform:"ac"}};class FixedProficiencyRuleElement extends rule_element_1.RuleElementPF2e{onBeforePrepareData({statisticsModifiers}){var _a,_b,_c,_d;const selector=this.resolveInjectedProperties(this.data.selector);let value=this.resolveValue(this.data.value);"ac"===selector&&(value-=10);const ability=this.data.ability&&String(this.data.ability).trim()||(null!==(_b=null===(_a=KNOWN_TARGETS[selector])||void 0===_a?void 0:_a.ability)&&void 0!==_b?_b:null===(_c=values_1.SKILL_EXPANDED[selector])||void 0===_c?void 0:_c.ability);if((0,_util_1.tupleHasValue)(values_1.ABILITY_ABBREVIATIONS,ability))if(value){const modifier=new modifiers_1.ModifierPF2e(null!==(_d=this.data.name)&&void 0!==_d?_d:this.label,value-this.actor.data.data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.PROFICIENCY);modifier.label=this.label,statisticsModifiers[selector]=(statisticsModifiers[selector]||[]).concat(modifier)}else console.warn("PF2E | Fixed modifier requires at least a non-zero value or formula field.");else console.warn("PF2E | Fixed modifier requires an ability field, or a known selector.")}onAfterPrepareData(){var _a,_b,_c;const selector=this.resolveInjectedProperties(this.data.selector),{data}=this.actor.data,skill=null!==(_b=null===(_a=values_1.SKILL_EXPANDED[selector])||void 0===_a?void 0:_a.shortform)&&void 0!==_b?_b:selector,target=null!==(_c=data.skills[skill])&&void 0!==_c?_c:(0,_util_1.objectHasKey)(data.attributes,skill)?data.attributes[skill]:null,force=this.data.force;if(target instanceof modifiers_1.StatisticModifier){for(const modifier of target.modifiers){[modifiers_1.MODIFIER_TYPE.ITEM,modifiers_1.MODIFIER_TYPE.UNTYPED].includes(modifier.type)&&modifier.modifier>0&&(modifier.ignored=!0),force&&modifier.type===modifiers_1.MODIFIER_TYPE.PROFICIENCY&&modifier.name!==this.label&&(modifier.ignored=!0)}target.applyStackingRules(),target.value=target.totalModifier+("ac"===skill?10:0)}}}exports.FixedProficiencyRuleElement=FixedProficiencyRuleElement,FixedProficiencyRuleElement.validActorTypes=["character","npc"]},37343:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FlatModifierRuleElement=void 0;const rule_element_1=__webpack_require__(18667),modifiers_1=__webpack_require__(27324),_util_1=__webpack_require__(6945),values_1=__webpack_require__(35089);class FlatModifierRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){var _a,_b;super(data,item);const modifierTypes=modifiers_1.MODIFIER_TYPES;if(null!==(_a=(_b=this.data).type)&&void 0!==_a||(_b.type=modifiers_1.MODIFIER_TYPE.UNTYPED),modifierTypes.includes(this.data.type)){if("ability"===this.data.type){if(!(0,_util_1.tupleHasValue)(values_1.ABILITY_ABBREVIATIONS,data.ability))return void this.failValidation('A flat modifier of type "ability" must also have an "ability" property with an ability abbreviation');this.data.name=CONFIG.PF2E.abilities[this.data.ability],this.data.value=`@abilities.${this.data.ability}.mod`}}else this.failValidation(`A flat modifier must have one of the following types: ${modifiers_1.MODIFIER_TYPES.join(", ")}`)}onBeforePrepareData({statisticsModifiers}){var _a,_b,_c;if(this.ignored)return;const selector=this.resolveInjectedProperties(this.data.selector),resolvedValue=this.resolveValue(this.data.value),value=Math.clamped(resolvedValue,null!==(_a=this.data.min)&&void 0!==_a?_a:resolvedValue,null!==(_b=this.data.max)&&void 0!==_b?_b:resolvedValue);if(selector&&value){const modifier=new modifiers_1.ModifierPF2e(null!==(_c=this.data.name)&&void 0!==_c?_c:this.label,value,this.data.type);modifier.label=this.label,"ability"===this.data.type&&(modifier.ability=this.data.ability),this.data.damageType&&(modifier.damageType=this.resolveInjectedProperties(this.data.damageType)),this.data.damageCategory&&(modifier.damageCategory=this.data.damageCategory),this.data.predicate&&(modifier.predicate=this.data.predicate),statisticsModifiers[selector]=(statisticsModifiers[selector]||[]).concat(modifier)}else 0===value||CONFIG.debug.ruleElement&&console.warn("PF2E | Flat modifier requires at least a selector field, a label field or item name, and a value field",this.data,this.item,this.actor.data)}}exports.FlatModifierRuleElement=FlatModifierRuleElement,FlatModifierRuleElement.validActorTypes=["character","familiar","npc"]},36669:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.IWRRuleElement=void 0;const rule_element_1=__webpack_require__(18667);class IWRRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){"string"!=typeof data.type&&(data.ignored=!0),super(data,item)}validate(value){return this.data.type in this.dictionary&&"number"==typeof value&&value>0&&(!this.data.except||"string"==typeof this.data.except)}onBeforePrepareData(){if(this.ignored)return;const value=this.resolveValue();if(!this.validate(value)||"string"!=typeof this.data.type||!(this.data.type in this.dictionary))return void(this.ignored=!0);const iwrElement=this.getIWR(value);iwrElement&&this.property.push(iwrElement)}}exports.IWRRuleElement=IWRRuleElement},22921:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ImmunityRuleElement=void 0;const base_1=__webpack_require__(36669);class ImmunityRuleElement extends base_1.IWRRuleElement{constructor(){super(...arguments),this.dictionary=CONFIG.PF2E.immunityTypes}get property(){return this.actor.data.data.traits.di.value}validate(){return this.data.type in this.dictionary}getIWR(){return this.data.type}}exports.ImmunityRuleElement=ImmunityRuleElement},24200:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ResistanceRuleElement=void 0;const base_1=__webpack_require__(36669);class ResistanceRuleElement extends base_1.IWRRuleElement{constructor(){super(...arguments),this.dictionary=CONFIG.PF2E.resistanceTypes}get property(){return this.actor.data.data.traits.dr}getIWR(value){const resistances=this.property,current=resistances.find((resistance=>resistance.type===this.data.type));if(current){if(!this.data.override)return current.value=Math.max(current.value,value),null;resistances.splice(resistances.indexOf(current),1)}return{label:this.dictionary[this.data.type],type:this.data.type,value,exceptions:this.data.except}}}exports.ResistanceRuleElement=ResistanceRuleElement},12352:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaknessRuleElement=void 0;const base_1=__webpack_require__(36669);class WeaknessRuleElement extends base_1.IWRRuleElement{constructor(){super(...arguments),this.dictionary=CONFIG.PF2E.weaknessTypes}get property(){return this.actor.data.data.traits.dv}getIWR(value){const weaknesses=this.property,current=weaknesses.find((weakness=>weakness.type===this.data.type));if(current){if(!this.data.override)return current.value=Math.max(current.value,value),null;weaknesses.splice(weaknesses.indexOf(current),1)}return{label:this.dictionary[this.data.type],type:this.data.type,value,exceptions:this.data.except}}}exports.WeaknessRuleElement=WeaknessRuleElement},66681:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LinkedProficiencyRuleElement=void 0;const data_1=__webpack_require__(52769),predication_1=__webpack_require__(538),rule_element_1=__webpack_require__(18667);class LinkedProficiencyRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){super(data,item),this.dataIsValid(this.data)||(console.warn(`LinkedProficiency rules element on item ${item.name} (${item.uuid}) failed to validate`),this.ignored=!0)}dataIsValid(data){const validRanks=data_1.PROFICIENCY_RANKS.filter((rank=>"untrained"!==rank));return"string"==typeof data.slug&&!!data.predicate&&new predication_1.PredicatePF2e(data.predicate).isValid&&"string"==typeof data.sameAs&&data.sameAs in CONFIG.PF2E.weaponCategories&&(!data.maxRank||"string"==typeof data.maxRank&&validRanks.includes(data.maxRank))}onBeforePrepareData(){if(this.ignored)return;const attackProficiencies=this.actor.data.data.martial;if(!attackProficiencies[this.data.sameAs]){const{item}=this;return console.warn(`PF2e System | Linked proficiency rules element on item "${item.name}" (${item.uuid}) `,`aborted: category "${this.data.sameAs}" not found`),void(this.ignored=!0)}attackProficiencies[this.data.slug]={predicate:this.data.predicate,sameAs:this.data.sameAs,maxRank:this.data.maxRank,rank:0,value:0,breakdown:""}}}exports.LinkedProficiencyRuleElement=LinkedProficiencyRuleElement,LinkedProficiencyRuleElement.validActorTypes=["character"]},48449:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LoseHitPointsRuleElement=void 0;const _actor_1=__webpack_require__(85530),rule_element_1=__webpack_require__(18667);class LoseHitPointsRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){super(data,item);const actorIsCreature=this.actor instanceof _actor_1.CreaturePF2e,valueIsValid="number"==typeof data.value||"string"==typeof data.value;actorIsCreature&&valueIsValid||(this.ignored=!0)}onCreate(actorUpdates){if(this.ignored)return;const value=Math.abs(this.resolveValue());if("number"==typeof value){const currentHP=this.actor.data._source.data.attributes.hp.value;actorUpdates["data.attributes.hp.value"]=Math.max(currentHP-value,0)}}}exports.LoseHitPointsRuleElement=LoseHitPointsRuleElement},75425:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MultipleAttackPenaltyRuleElement=void 0;const rule_element_1=__webpack_require__(18667);class MultipleAttackPenaltyRuleElement extends rule_element_1.RuleElementPF2e{onBeforePrepareData({multipleAttackPenalties}){const selector=this.resolveInjectedProperties(this.data.selector),label=this.resolveInjectedProperties(this.label),value=this.resolveValue(this.data.value);if(selector&&label&&value){const map={label,penalty:value};this.data.predicate&&(map.predicate=this.data.predicate),multipleAttackPenalties[selector]=(multipleAttackPenalties[selector]||[]).concat(map)}else console.warn("PF2E | Multiple attack penalty requires at least a selector field and a non-empty value field")}}exports.MultipleAttackPenaltyRuleElement=MultipleAttackPenaltyRuleElement},58881:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RollNoteRuleElement=void 0;const rule_element_1=__webpack_require__(18667),notes_1=__webpack_require__(46379),check_degree_of_success_1=__webpack_require__(40093);class RollNoteRuleElement extends rule_element_1.RuleElementPF2e{onBeforePrepareData({rollNotes}){const selector=this.resolveInjectedProperties(this.data.selector),text=this.resolveInjectedProperties(this.resolveValue(this.data.text,"",{evaluate:!1}));if(selector&&text){const note=new notes_1.RollNotePF2e(selector,text);this.data.predicate&&(note.predicate=this.data.predicate),Array.isArray(this.data.outcome)&&(note.outcome=this.data.outcome.filter((outcome=>check_degree_of_success_1.DegreeOfSuccessText.some((degree=>degree===outcome))))),rollNotes[selector]=(rollNotes[selector]||[]).concat(note)}else console.warn("PF2E | Roll note requires at least a selector field and a non-empty text field")}}exports.RollNoteRuleElement=RollNoteRuleElement},31406:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RollOptionRuleElement=void 0;const ae_like_1=__webpack_require__(42413);class RollOptionRuleElement extends ae_like_1.AELikeRuleElement{constructor(data,item){var _a;data.mode="override",null!==(_a=data.value)&&void 0!==_a||(data.value=!0),data.path=`flags.pf2e.rollOptions.${data.domain}.${data.option}`,super(data,item),this.validate(data,"domain"),this.validate(data,"option")}validate(data,key){const paramValue=data[key];if("string"!=typeof paramValue||!/^[-:a-z0-9]+$/.test(paramValue)||!/[a-z]/.test(paramValue)){const item=this.item;console.warn(`PF2e System | "${key}" property on RuleElement from item ${item.name} (${item.uuid}) must be a `,"string consisting of only lowercase letters, numbers, and hyphens"),this.ignored=!0}}}exports.RollOptionRuleElement=RollOptionRuleElement},41452:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SenseRuleElement=void 0;const rule_element_1=__webpack_require__(18667),sense_1=__webpack_require__(82280);class SenseRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){var _a,_b,_c,_d,_e;null!==(_a=data.force)&&void 0!==_a||(data.force=!1),null!==(_b=data.range)&&void 0!==_b||(data.range=""),null!==(_c=data.acuity)&&void 0!==_c||(data.acuity="precise");const defaultLabels=CONFIG.PF2E.senses;null!==(_d=data.label)&&void 0!==_d||(data.label=defaultLabels[null!==(_e=data.selector)&&void 0!==_e?_e:""]),super(data,item)}onBeforePrepareData(synthetics){var _a;if(this.ignored)return;const range=this.resolveValue(this.data.range,"");if(this.data.selector){const newSense=new sense_1.CreatureSensePF2e({type:this.data.selector,acuity:this.data.acuity,value:String(range),source:this.item.name});synthetics.senses.push({sense:newSense,predicate:null!==(_a=this.data.predicate)&&void 0!==_a?_a:null,force:this.data.force})}else console.warn("PF2E | Sense requires at least a selector field and a label field or item name")}}exports.SenseRuleElement=SenseRuleElement,SenseRuleElement.validActorTypes=["character","familiar"]},27519:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.StrikeRuleElement=void 0;const _item_1=__webpack_require__(10843),rule_element_1=__webpack_require__(18667);class StrikeRuleElement extends rule_element_1.RuleElementPF2e{constructor(data,item){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l;data.range=Number(data.range)||null,super(data,item),null!==(_a=(_g=this.data).category)&&void 0!==_a||(_g.category="unarmed"),null!==(_b=(_h=this.data).group)&&void 0!==_b||(_h.group="brawling"),null!==(_c=(_j=this.data).baseType)&&void 0!==_c||(_j.baseType=null),null!==(_d=(_k=this.data).range)&&void 0!==_d||(_k.range=null),null!==(_e=(_l=this.data).traits)&&void 0!==_e||(_l.traits=[]),this.data.replaceAll=!(null===(_f=this.data.replaceAll)||void 0===_f||!_f),this.weapon=this.constructWeapon()}onBeforePrepareData({strikes}){(!this.data.predicate||(()=>{const rollOptions=this.actor.getRollOptions(["all","attack","attack-roll"]);return this.data.predicate.test(rollOptions)})())&&strikes.push(this.weapon)}onAfterPrepareData(){if(this.data.replaceAll&&"character"===this.actor.data.type){const systemData=this.actor.data.data;systemData.actions=systemData.actions.filter((action=>action.weapon===this.weapon))}}constructWeapon(){var _a,_b,_c,_d,_e;const source={_id:this.item.id,name:this.label,type:"weapon",img:null!==(_a=this.data.img)&&void 0!==_a?_a:this.item.img,data:{slug:null!==(_b=this.data.slug)&&void 0!==_b?_b:null,description:{value:""},category:this.data.category,group:this.data.group,baseItem:this.data.baseType,damage:null!==(_d=null===(_c=this.data.damage)||void 0===_c?void 0:_c.base)&&void 0!==_d?_d:{damageType:"bludgeoning",dice:1,die:"d4"},range:this.data.range,traits:{value:this.data.traits,rarity:{value:"common"},custom:""},options:{value:null!==(_e=this.data.options)&&void 0!==_e?_e:[]},equipped:{value:!0}}};return new _item_1.WeaponPF2e(source,{parent:this.actor,pf2e:{ready:!0}})}}exports.StrikeRuleElement=StrikeRuleElement,StrikeRuleElement.validActorTypes=["character","npc"]},79242:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.StrikingRuleElement=void 0;const rule_element_1=__webpack_require__(18667),runes_1=__webpack_require__(35847),_item_1=__webpack_require__(10843);class StrikingRuleElement extends rule_element_1.RuleElementPF2e{onBeforePrepareData({striking}){const selector=this.resolveInjectedProperties(this.data.selector),strikingValue="value"in this.data?this.data.value:this.item instanceof _item_1.WeaponPF2e?(0,runes_1.getStrikingDice)(this.item.data.data):0,value=this.resolveValue(strikingValue);if(selector&&"number"==typeof value){const additionalData={label:this.label,bonus:value};this.data.predicate&&(additionalData.predicate=this.data.predicate),striking[selector]=(striking[selector]||[]).concat(additionalData)}else console.warn("PF2E | Striking requires at least a selector field and a non-empty value field")}}exports.StrikingRuleElement=StrikingRuleElement,StrikingRuleElement.validActorTypes=["character","npc"]},81103:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TempHPRuleElement=void 0;const rule_element_1=__webpack_require__(18667);class TempHPRuleElement extends rule_element_1.RuleElementPF2e{onCreate(actorUpdates){const updatedActorData=mergeObject(this.actor.data,actorUpdates,{inplace:!1}),value=this.resolveValue(this.data.value);if("number"!=typeof value)return void console.warn("PF2E | Temporary HP requires a non-zero value field or a formula field");value>(Number(getProperty(updatedActorData,"data.attributes.hp.temp"))||0)&&mergeObject(actorUpdates,{"data.attributes.hp.temp":value,"data.attributes.hp.tempsource":this.item.id})}onDelete(actorUpdates){const updatedActorData=mergeObject(this.actor.data,actorUpdates,{inplace:!1});getProperty(updatedActorData,"data.attributes.hp.tempsource")===this.item.id&&(mergeObject(actorUpdates,{"data.attributes.hp.temp":0}),getProperty(actorUpdates,"data.attributes.hp")["-=tempsource"]=null)}}exports.TempHPRuleElement=TempHPRuleElement},20417:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TogglePropertyRuleElement=void 0;const rule_element_1=__webpack_require__(18667);class TogglePropertyRuleElement extends rule_element_1.RuleElementPF2e{onBeforePrepareData(){this.data.property?this.actor.data.data.toggles.actions.push({label:this.label,inputName:this.data.property,checked:getProperty(this.actor.data,this.data.property)}):console.warn("PF2E | Toggle flag requires at least a label field or item name, and a property field with the name of the property")}}exports.TogglePropertyRuleElement=TogglePropertyRuleElement,TogglePropertyRuleElement.validActorTypes=["character","npc"]},53853:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenEffectIconRuleElement=void 0;const rule_element_1=__webpack_require__(18667);class TokenEffectIconRuleElement extends rule_element_1.RuleElementPF2e{onAfterPrepareData(){const icon="string"==typeof this.data.value?this.data.value.trim():null;this.actor.data.data.tokenEffects.push(new rule_element_1.TokenEffect(icon||this.item.img))}}exports.TokenEffectIconRuleElement=TokenEffectIconRuleElement},1506:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenImageRuleElement=void 0;const rule_element_1=__webpack_require__(18667);class TokenImageRuleElement extends rule_element_1.RuleElementPF2e{onAfterPrepareData(){const value=this.data.value;value?mergeObject(this.actor.overrides,{token:{img:value}}):console.warn("PF2e System | Token Image requires a non-empty value field")}}exports.TokenImageRuleElement=TokenImageRuleElement},4236:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaponPotencyRuleElement=void 0;const rule_element_1=__webpack_require__(18667),_item_1=__webpack_require__(10843);class WeaponPotencyRuleElement extends rule_element_1.RuleElementPF2e{onBeforePrepareData({weaponPotency}){var _a;if(this.ignored)return;const selector=this.resolveInjectedProperties(this.data.selector),{item}=this,potencyValue=null!==(_a=this.data.value)&&void 0!==_a?_a:item instanceof _item_1.WeaponPF2e?item.data.data.potencyRune.value:0,value=this.resolveValue(potencyValue);if(selector&&"number"==typeof value){const potency={label:this.label,bonus:value};this.data.predicate&&(potency.predicate=this.data.predicate),weaponPotency[selector]=(weaponPotency[selector]||[]).concat(potency)}else console.warn("PF2E | Weapon potency requires at least a selector field and a non-empty value field")}}exports.WeaponPotencyRuleElement=WeaponPotencyRuleElement,WeaponPotencyRuleElement.validActorTypes=["character","npc"]},12404:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RecoveryCheckDCRuleElement=void 0;const rule_element_1=__webpack_require__(18667);class RecoveryCheckDCRuleElement extends rule_element_1.RuleElementPF2e{onBeforePrepareData(){const slug=this.data.slug||this.item.slug;if(slug){const actorData=this.actor.data;let recoveryModifier=getProperty(actorData.data.attributes,"dying.recoveryMod")||0;const synergizers=getProperty(actorData.data.attributes,"dying.synergizers")||[];synergizers.includes(slug)||synergizers.push(slug);const toughness=synergizers.includes("toughness"),mountainsStoutness=synergizers.includes("mountains-stoutness")||synergizers.includes("mountainsStoutness"),defyDeath=synergizers.includes("defy-death")||synergizers.includes("defyDeath");toughness&&mountainsStoutness?recoveryModifier=-4:toughness&&defyDeath?recoveryModifier=-2:(toughness||mountainsStoutness||defyDeath)&&(recoveryModifier=-1),setProperty(actorData.data.attributes,"dying.recoveryMod",recoveryModifier),setProperty(actorData.data.attributes,"dying.synergizers",synergizers)}else console.warn("PF2E | Recovery check DC requires at least a slug field or item slug")}}exports.RecoveryCheckDCRuleElement=RecoveryCheckDCRuleElement,RecoveryCheckDCRuleElement.validActorTypes=["character","npc"]},18667:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RuleElementPF2e=exports.TokenEffect=void 0;const _item_1=__webpack_require__(10843),predication_1=__webpack_require__(538);exports.TokenEffect=class{constructor(icon,overlay=!1,tint){this.data={disabled:!1,icon:"",tint:""},this.isTemporary=!0,this.flags={},this.data.icon=icon,tint&&(this.data.tint=tint),this.flags.core={overlay}}getFlag(scope,flag){var _a;return null===(_a=this.flags[scope])||void 0===_a?void 0:_a[flag]}};class RuleElementPF2e{constructor(data,item){var _a,_b,_c;this.item=item,data.key=data.key.replace(/^PF2E\.RuleElement\./,""),data=deepClone(data);if(!this.constructor.validActorTypes.includes(item.actor.data.type)){const ruleName=game.i18n.localize(`PF2E.RuleElement.${data.key}`),actorType=game.i18n.localize(`ACTOR.Type${item.actor.type.titleCase()}`);console.warn(`PF2e System | A ${ruleName} rules element may not be applied to a ${actorType}`),data.ignored=!0}item instanceof _item_1.PhysicalItemPF2e&&(null!==(_a=data.requiresInvestment)&&void 0!==_a||(data.requiresInvestment=null!==item.isInvested)),this.data=Object.assign(Object.assign({priority:100},data),{predicate:data.predicate?new predication_1.PredicatePF2e(data.predicate):void 0,label:game.i18n.localize(null!==(_b=data.label)&&void 0!==_b?_b:item.name),ignored:null!==(_c=data.ignored)&&void 0!==_c&&_c})}get key(){return this.data.key}get actor(){return this.item.actor}get label(){return this.data.label}get priority(){return this.data.priority}get ignored(){if(this.data.ignored)return!0;const{item}=this;return game.settings.get("pf2e","automation.effectExpiration")&&item instanceof _item_1.EffectPF2e&&item.isExpired?this.data.ignored=!0:item instanceof _item_1.PhysicalItemPF2e?this.data.ignored=!item.isEquipped||!1===item.isInvested&&!!this.data.requiresInvestment:this.data.ignored=!1}set ignored(value){this.data.ignored=value}failValidation(message){const{name,uuid}=this.item;console.warn(`PF2e System | Rules element on item ${name} (${uuid}) failed to validate: ${message}`),this.ignored=!0}resolveInjectedProperties(source=""){if(!source.includes("{"))return source;const objects={actor:this.actor,item:this.item,rule:this};return source.replace(/{(actor|item|rule)\|(.*?)}/g,((_match,key,prop)=>{var _a,_b;const value=getProperty(null!==(_b=null===(_a=objects[key])||void 0===_a?void 0:_a.data)&&void 0!==_b?_b:this.item.data,prop);if(void 0===value){const{item}=this;console.warn(`Failed to resolve injected property on rule element from item "${item.name}" (${item.uuid})`)}return value}))}resolveValue(valueData=this.data.value,defaultValue=0,{evaluate=!0}={}){var _a,_b,_c,_d;let value=null!==(_a=null!=valueData?valueData:defaultValue)&&void 0!==_a?_a:null;if(this.isBracketedValue(valueData)){const bracketNumber=(()=>{if(!(null==valueData?void 0:valueData.field))return this.actor.level;const field=String(valueData.field),separator=field.indexOf("|");switch(field.substring(0,separator)){case"actor":return Number(getProperty(this.actor.data,field.substring(separator+1)))||0;case"item":return Number(getProperty(this.item.data,field.substring(separator+1)))||0;case"rule":return Number(getProperty(this.data,field.substring(separator+1)))||0;default:return Number(getProperty(this.actor.data,field.substring(0)))||0}})(),brackets=null!==(_b=null==valueData?void 0:valueData.brackets)&&void 0!==_b?_b:[],bracketFallthrough=(()=>{switch(typeof defaultValue){case"number":case"boolean":case"object":return defaultValue;case"string":return Number.isNaN(Number(defaultValue))?defaultValue:Number(defaultValue);default:return null}})();value=null!==(_d=null===(_c=brackets.find((bracket=>{var _a,_b;const start=null!==(_a=bracket.start)&&void 0!==_a?_a:0,end=null!==(_b=bracket.end)&&void 0!==_b?_b:1/0;return start<=bracketNumber&&end>=bracketNumber})))||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:bracketFallthrough}return value instanceof Object&&defaultValue instanceof Object?mergeObject(defaultValue,value,{inplace:!1}):"string"==typeof value&&value.includes("@")&&evaluate?(formula=>{try{return Roll.safeEval(formula)}catch(_a){const{item}=this;return console.warn(`PF2e System | Unable to evaluate formula in Rule Element on item "${item.name}" (${item.uuid})`),0}})(Roll.replaceFormulaData(value,Object.assign(Object.assign({},this.actor.data.data),{item:this.item.data.data}))):value}isBracketedValue(value){return value instanceof Object&&"brackets"in value&&Array.isArray(value.brackets)}}exports.RuleElementPF2e=RuleElementPF2e,RuleElementPF2e.validActorTypes=["character","npc","familiar","hazard","loot","vehicle"]},40478:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RuleElements=exports.RuleElementPF2e=void 0;const rule_element_1=__webpack_require__(18667);Object.defineProperty(exports,"RuleElementPF2e",{enumerable:!0,get:function(){return rule_element_1.RuleElementPF2e}});const flat_modifier_1=__webpack_require__(37343),fixed_proficiency_1=__webpack_require__(64510),temphp_1=__webpack_require__(81103),dexterity_modifier_cap_1=__webpack_require__(4515),damage_dice_1=__webpack_require__(51736),toggle_property_1=__webpack_require__(20417),token_image_1=__webpack_require__(1506),base_speed_1=__webpack_require__(7565),sense_1=__webpack_require__(41452),token_effect_icon_1=__webpack_require__(53853),strike_1=__webpack_require__(27519),roll_note_1=__webpack_require__(58881),weapon_potency_1=__webpack_require__(4236),striking_1=__webpack_require__(79242),multiple_attack_penalty_1=__webpack_require__(75425),actor_traits_1=__webpack_require__(55057),recovery_check_dc_1=__webpack_require__(12404),adjust_degree_of_success_1=__webpack_require__(88568),ae_like_1=__webpack_require__(42413),lose_hit_points_1=__webpack_require__(48449),creature_size_1=__webpack_require__(91524),rule_element_2=__webpack_require__(94063),immunity_1=__webpack_require__(22921),weakness_1=__webpack_require__(12352),resistance_1=__webpack_require__(24200),roll_option_1=__webpack_require__(31406),rule_element_3=__webpack_require__(57350),crafting_formula_1=__webpack_require__(26746),crafting_entry_1=__webpack_require__(88759),rule_element_4=__webpack_require__(92769),linked_proficiency_1=__webpack_require__(66681);class RuleElements{static fromOwnedItem(item){var _a,_b;const rules=[];for(const data of item.data.data.rules){const key=data.key.replace(/^PF2E\.RuleElement\./,""),REConstructor=null!==(_b=null!==(_a=this.custom[key])&&void 0!==_a?_a:this.custom[data.key])&&void 0!==_b?_b:this.builtin[key];if(REConstructor){const rule=(()=>{try{return new REConstructor(data,item)}catch(error){return console.warn(`PF2e System | Failed to construct rule element ${data.key}`),console.warn(error),null}})();rule&&rules.push(rule)}else"NewRuleElement"!==data.key&&console.warn(`PF2e System | Unrecognized rule element ${data.key}`)}return rules}}exports.RuleElements=RuleElements,RuleElements.builtin=Object.freeze({ActiveEffectLike:ae_like_1.AELikeRuleElement,ActorTraits:actor_traits_1.ActorTraitsRuleElement,AdjustDegreeOfSuccess:adjust_degree_of_success_1.AdjustDegreeOfSuccessRuleElement,BaseSpeed:base_speed_1.BaseSpeedRuleElement,BattleForm:rule_element_2.BattleFormRuleElement,ChoiceSet:rule_element_4.ChoiceSetRuleElement,CraftingEntry:crafting_entry_1.CraftingEntryRuleElement,CraftingFormula:crafting_formula_1.CraftingFormulaRuleElement,CreatureSize:creature_size_1.CreatureSizeRuleElement,DamageDice:damage_dice_1.DamageDiceRuleElement,DexterityModifierCap:dexterity_modifier_cap_1.DexterityModifierCapRuleElement,EffectTarget:rule_element_3.EffectTargetRuleElement,FixedProficiency:fixed_proficiency_1.FixedProficiencyRuleElement,FlatModifier:flat_modifier_1.FlatModifierRuleElement,Immunity:immunity_1.ImmunityRuleElement,LinkedProficiency:linked_proficiency_1.LinkedProficiencyRuleElement,LoseHitPoints:lose_hit_points_1.LoseHitPointsRuleElement,MultipleAttackPenalty:multiple_attack_penalty_1.MultipleAttackPenaltyRuleElement,Note:roll_note_1.RollNoteRuleElement,RecoveryCheckDC:recovery_check_dc_1.RecoveryCheckDCRuleElement,Resistance:resistance_1.ResistanceRuleElement,RollOption:roll_option_1.RollOptionRuleElement,TempHP:temphp_1.TempHPRuleElement,ToggleProperty:toggle_property_1.TogglePropertyRuleElement,TokenEffectIcon:token_effect_icon_1.TokenEffectIconRuleElement,TokenImage:token_image_1.TokenImageRuleElement,Sense:sense_1.SenseRuleElement,Strike:strike_1.StrikeRuleElement,Striking:striking_1.StrikingRuleElement,Weakness:weakness_1.WeaknessRuleElement,WeaponPotency:weapon_potency_1.WeaponPotencyRuleElement}),RuleElements.custom={}},89163:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AmbientLightDocumentPF2e=void 0;class AmbientLightDocumentPF2e extends AmbientLightDocument{get isDarkness(){return this.object.source.isDarkness}_onCreate(data,options,userId){super._onCreate(data,options,userId),canvas.darkvision.draw()}_onUpdate(changed,options,userId){super._onUpdate(changed,options,userId),canvas.darkvision.draw()}_onDelete(options,userId){super._onDelete(options,userId),canvas.darkvision.draw()}}exports.AmbientLightDocumentPF2e=AmbientLightDocumentPF2e},54096:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LightLevels=void 0,function(LightLevels){LightLevels[LightLevels.DARKNESS=.25]="DARKNESS",LightLevels[LightLevels.DIM_LIGHT=.75]="DIM_LIGHT",LightLevels[LightLevels.BRIGHT_LIGHT=1]="BRIGHT_LIGHT"}(exports.LightLevels||(exports.LightLevels={}))},96724:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ScenePF2e=void 0;const data_1=__webpack_require__(54096);class ScenePF2e extends Scene{prepareBaseData(){var _a,_b,_c,_d,_e;super.prepareBaseData(),(null===(_a=canvas.sight)||void 0===_a?void 0:_a.rulesBasedVision)&&(this.data.globalLightThreshold=1-data_1.LightLevels.DARKNESS,this.data.globalLight=!0),null!==(_b=(_d=this.data.flags).pf2e)&&void 0!==_b||(_d.pf2e={syncDarkness:"default"}),null!==(_c=(_e=this.data.flags.pf2e).syncDarkness)&&void 0!==_c||(_e.syncDarkness="default")}get lightLevel(){return 1-this.data.darkness}_onUpdate(changed,options,userId){super._onUpdate(changed,options,userId),["img","width","height","padding"].some((key=>key in changed))&&canvas.darkvision.draw()}}exports.ScenePF2e=ScenePF2e},12789:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MeasuredTemplateDocumentPF2e=exports.TokenDocumentPF2e=exports.TokenConfigPF2e=exports.TileDocumentPF2e=exports.AmbientLightDocumentPF2e=exports.ScenePF2e=void 0;var document_1=__webpack_require__(96724);Object.defineProperty(exports,"ScenePF2e",{enumerable:!0,get:function(){return document_1.ScenePF2e}});var ambient_light_document_1=__webpack_require__(89163);Object.defineProperty(exports,"AmbientLightDocumentPF2e",{enumerable:!0,get:function(){return ambient_light_document_1.AmbientLightDocumentPF2e}});var tile_document_1=__webpack_require__(29695);Object.defineProperty(exports,"TileDocumentPF2e",{enumerable:!0,get:function(){return tile_document_1.TileDocumentPF2e}});var token_document_1=__webpack_require__(53574);Object.defineProperty(exports,"TokenConfigPF2e",{enumerable:!0,get:function(){return token_document_1.TokenConfigPF2e}}),Object.defineProperty(exports,"TokenDocumentPF2e",{enumerable:!0,get:function(){return token_document_1.TokenDocumentPF2e}});var measured_template_document_1=__webpack_require__(85504);Object.defineProperty(exports,"MeasuredTemplateDocumentPF2e",{enumerable:!0,get:function(){return measured_template_document_1.MeasuredTemplateDocumentPF2e}})},85504:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MeasuredTemplateDocumentPF2e=void 0;class MeasuredTemplateDocumentPF2e extends MeasuredTemplateDocument{}exports.MeasuredTemplateDocumentPF2e=MeasuredTemplateDocumentPF2e},77664:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SceneConfigPF2e=void 0;const _util_1=__webpack_require__(6945);class SceneConfigPF2e extends SceneConfig{activateListeners($html){if(super.activateListeners($html),game.settings.get("pf2e","automation.rulesBasedVision")){const $globalLightSettings=$html.find('input[name^="globalLight"]').prop({disabled:!0});$html.find('input[name="hasGlobalThreshold"]').prop({disabled:!0}),$globalLightSettings.siblings(".range-value").addClass("disabled");const $managedBy=$("<strong>").addClass("managed-by-rbv").html(" ".concat(game.i18n.localize("PF2E.SETTINGS.Automation.RulesBasedVision.ManagedBy")));$managedBy.find("a").on("click",(()=>{const menu=game.settings.menus.get("pf2e.automation");if(!menu)throw(0,_util_1.ErrorPF2e)("Automation Settings application not found");(new menu.type).render(!0)})),$globalLightSettings.closest(".form-group").find("p.notes").append($managedBy)}}}exports.SceneConfigPF2e=SceneConfigPF2e},29695:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TileDocumentPF2e=void 0;class TileDocumentPF2e extends TileDocument{_onCreate(data,options,userId){super._onCreate(data,options,userId),canvas.darkvision.draw()}_onUpdate(changed,options,userId){super._onUpdate(changed,options,userId),canvas.darkvision.draw()}_onDelete(options,userId){super._onDelete(options,userId),canvas.darkvision.draw()}}exports.TileDocumentPF2e=TileDocumentPF2e},87330:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0})},59931:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenDocumentPF2e=void 0;const data_1=__webpack_require__(73204),_actor_1=__webpack_require__(85530),scene_1=__webpack_require__(12789),data_2=__webpack_require__(54096),chat_message_1=__webpack_require__(40405);class TokenDocumentPF2e extends TokenDocument{get scene(){return this.parent}_initialize(){super._initialize(),this.initialized=!0}get emitsDarkness(){return this.data.brightLight<0}get hasLowLightVision(){return canvas.sight.rulesBasedVision&&this.actor instanceof _actor_1.CreaturePF2e&&this.actor.hasLowLightVision}get hasDarkvision(){return canvas.sight.rulesBasedVision&&this.actor instanceof _actor_1.CreaturePF2e&&this.actor.hasDarkvision}get linkToActorSize(){return this.data.flags.pf2e.linkToActorSize}get playersCanSeeName(){var _a,_b;const anyoneCanSee=[CONST.TOKEN_DISPLAY_MODES.ALWAYS,CONST.TOKEN_DISPLAY_MODES.HOVER],nameDisplayMode=null!==(_a=this.data.displayName)&&void 0!==_a?_a:0;return anyoneCanSee.includes(nameDisplayMode)||!!(null===(_b=this.actor)||void 0===_b?void 0:_b.hasPlayerOwner)}prepareData({fromActor=!1}={}){super.prepareData(),fromActor&&this.initialized&&this.rendered&&(this.object.isControlled&&canvas.lighting.setPerceivedLightLevel({defer:!1}),this.object.redraw())}prepareBaseData(){var _a,_b,_c,_d,_e,_f;if(super.prepareBaseData(),!this.initialized||!this.actor)return;const linkDefault=!["hazard","loot"].includes(null!==(_a=this.actor.type)&&void 0!==_a?_a:"");null!==(_b=(_e=this.data.flags).pf2e)&&void 0!==_b||(_e.pf2e={linkToActorSize:linkDefault}),null!==(_c=(_f=this.data.flags.pf2e).linkToActorSize)&&void 0!==_c||(_f.linkToActorSize=linkDefault),(null===(_d=canvas.sight)||void 0===_d?void 0:_d.rulesBasedVision)&&(this.data.brightSight=0,this.data.dimSight=0,this.data.sightAngle=360)}prepareDerivedData(){var _a;if(super.prepareDerivedData(),!(this.initialized&&this.actor&&canvas.scene))return;if(mergeObject(this.data,null!==(_a=this.actor.overrides.token)&&void 0!==_a?_a:{},{insertKeys:!1}),this.prepareSize(),!canvas.sight.rulesBasedVision)return;const lightLevel=canvas.scene.lightLevel,hasDarkvision=this.hasDarkvision&&this.actor.visionLevel!==data_1.VisionLevels.BLINDED,perceivedBrightness={[data_1.VisionLevels.BLINDED]:0,[data_1.VisionLevels.NORMAL]:lightLevel,[data_1.VisionLevels.LOWLIGHT]:lightLevel>data_2.LightLevels.DARKNESS?1:lightLevel,[data_1.VisionLevels.DARKVISION]:1}[this.actor.visionLevel];this.data.brightSight=perceivedBrightness>lightLevel||hasDarkvision?1e3:0}prepareSize(){if(!this.actor||!this.linkToActorSize)return;const size={tiny:.5,sm:1,med:1,lg:2,huge:3,grg:Math.max(this.data.width,4)}[this.actor.size];if(this.actor instanceof _actor_1.VehiclePF2e){const{width,height}=this.actor.getTokenDimensions();this.data.width=width,this.data.height=height}else this.data.width=this.data.height=size,this.data.scale=game.settings.get("pf2e","tokens.autoscale")?"sm"===this.actor.size?.8:1:this.data.scale}async setInitiative({initiative,sendMessage=!0}){var _a,_b,_c;if(!game.combat)return void ui.notifications.error("PF2E.Encounter.NoActiveEncounter");const currentId=null===(_a=game.combat.combatant)||void 0===_a?void 0:_a.id;this.combatant&&game.combat.combatants.has(this.combatant.id)?await game.combat.setInitiative(this.combatant.id,initiative):await game.combat.createEmbeddedDocuments("Combatant",[{tokenId:this.id,initiative}]),await this.update({turn:game.combat.turns.findIndex((c=>c.id===currentId))}),sendMessage&&await chat_message_1.ChatMessagePF2e.createDocuments([{speaker:{scene:null===(_b=this.scene)||void 0===_b?void 0:_b.id,token:this.id},whisper:(null===(_c=this.actor)||void 0===_c?void 0:_c.hasPlayerOwner)?[]:game.users.contents.flatMap((user=>user.isGM?user.id:[])),content:game.i18n.format("PF2E.InitativeIsNow",{name:this.name,value:initiative})}])}static async updateDocuments(updates=[],context={}){const scene=context.parent;return scene instanceof scene_1.ScenePF2e&&(updates=updates.filter((data=>{var _a;if(game.user.isGM||"string"!=typeof data._id)return!0;const tokenDoc=scene.tokens.get(data._id);return!!(null===(_a=null==tokenDoc?void 0:tokenDoc.actor)||void 0===_a?void 0:_a.isOwner)}))),super.updateDocuments(updates,context)}_onCreate(data,options,userId){super._onCreate(data,options,userId),this.actor instanceof _actor_1.LootPF2e&&this.actor.toggleTokenHiding()}_onUpdate(changed,options,userId){var _a;super._onUpdate(changed,options,userId),this.actor instanceof _actor_1.NPCPF2e&&"number"==typeof changed.disposition&&game.userId===userId&&this.actor.updateAttitudeFromDisposition(changed.disposition),canvas.darkvision.refresh({drawMask:!0}),ui.combat.viewed&&ui.combat.viewed===(null===(_a=this.combatant)||void 0===_a?void 0:_a.encounter)&&ui.combat.render()}}exports.TokenDocumentPF2e=TokenDocumentPF2e},53574:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenDocumentPF2e=exports.TokenDataPF2e=exports.TokenConfigPF2e=void 0;var sheet_1=__webpack_require__(70285);Object.defineProperty(exports,"TokenConfigPF2e",{enumerable:!0,get:function(){return sheet_1.TokenConfigPF2e}});var data_1=__webpack_require__(87330);Object.defineProperty(exports,"TokenDataPF2e",{enumerable:!0,get:function(){return data_1.TokenDataPF2e}});var document_1=__webpack_require__(59931);Object.defineProperty(exports,"TokenDocumentPF2e",{enumerable:!0,get:function(){return document_1.TokenDocumentPF2e}})},70285:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenConfigPF2e=void 0;const _actor_1=__webpack_require__(85530),_util_1=__webpack_require__(6945);class TokenConfigPF2e extends TokenConfig{get template(){return"systems/pf2e/templates/scene/token-config.html"}get dimensionsFromActorSize(){var _a,_b;return{tiny:.5,sm:1,med:1,lg:2,huge:3,grg:4}[null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.size)&&void 0!==_b?_b:"med"]}activateListeners($html){var _a,_b;const $linkToActorSize=$html.find('input[name="flags.pf2e.linkToActorSize"]');$linkToActorSize.prop("checked")&&this.disableScale($html),$linkToActorSize.on("change",(event=>{const $sizeInputs=$(event.currentTarget).closest("fieldset").find('input[type="number"], input[type="range"]'),newSetting=$linkToActorSize.prop("checked");if($sizeInputs.prop("disabled",newSetting),game.settings.get("pf2e","tokens.autoscale")&&!0===newSetting){if(this.actor instanceof _actor_1.VehiclePF2e){const{dimensions}=this.actor,width=Math.max(Math.round(dimensions.width/5),1),length=Math.max(Math.round(dimensions.length/5),1);$sizeInputs.filter('[name="width"]').val(width),$sizeInputs.filter('[name="height"]').val(length)}else $sizeInputs.filter('[name="width"], [name="height"]').val(this.dimensionsFromActorSize);this.disableScale($html)}else{const source=this.token.data._source;$sizeInputs.filter('[name="width"]').val(source.width),$sizeInputs.filter('[name="height"]').val(source.height),$sizeInputs.filter('[name="scale"]').val(source.scale),this.enableScale($html)}}));const $visionInputs=$html.find(["dimSight","brightSight","sightAngle"].map((selector=>`input[name="${selector}"]`)).join(", "));this.token.data.vision||$visionInputs.prop({disabled:!0}),$html.find('input[name="vision"]').on("change",(event=>{$visionInputs.prop({disabled:!event.currentTarget.checked})}));if(game.settings.get("pf2e","automation.rulesBasedVision")&&["character","familiar"].includes(null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.type)&&void 0!==_b?_b:""))for(const selector of["dimSight","brightSight","sightAngle"]){const $input=$html.find(`input[name="${selector}"]`);if("brightSight"===selector){const $managedBy=$("<p>").html(game.i18n.localize("PF2E.SETTINGS.Automation.RulesBasedVision.ManagedBy"));$input.replaceWith($managedBy),$managedBy.closest(".form-group").addClass("managed-by-rbv"),$managedBy.find("a").on("click",(()=>{const menu=game.settings.menus.get("pf2e.automation");if(!menu)throw(0,_util_1.ErrorPF2e)("Automation Settings application not found");(new menu.type).render(!0)}))}else $input.remove()}super.activateListeners($html)}disableScale($html){var _a;if(!game.settings.get("pf2e","tokens.autoscale"))return;const $scale=$html.find(".form-group.scale");$scale.addClass("children-disabled");const constrainedScale="sm"===(null===(_a=this.actor)||void 0===_a?void 0:_a.size)?.8:1;$scale.find('input[type="range"]').prop({disabled:!0}).val(constrainedScale),$scale.find(".range-value").text(constrainedScale)}enableScale($html){const $scale=$html.find(".form-group.scale");$scale.removeClass("children-disabled"),$scale.find('input[type="range"]').prop({disabled:!1});const $range=$scale.find('input[type="range"]');$scale.find(".range-value").text(String($range.val()))}async _updateObject(event,formData){if(!0===formData["flags.pf2e.linkToActorSize"])if(this.actor instanceof _actor_1.VehiclePF2e){const{dimensions}=this.actor,width=Math.max(Math.round(dimensions.width/5),1),length=Math.max(Math.round(dimensions.length/5),1);formData.width=width,formData.height=length}else formData.width=formData.height=this.dimensionsFromActorSize;return super._updateObject(event,formData)}}exports.TokenConfigPF2e=TokenConfigPF2e},47903:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.balance=void 0;const actions_1=__webpack_require__(54022);exports.balance=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"acrobatics");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Balance.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:balance"],extraOptions:["action:balance"],traits:["move"],checkType,event:options.event,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Balance","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Balance","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Balance","failure"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Balance","criticalFailure")]})}},75982:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.maneuverInFlight=void 0;const actions_1=__webpack_require__(54022);exports.maneuverInFlight=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"acrobatics");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.ManeuverInFlight.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:maneuver-in-flight"],extraOptions:["action:maneuver-in-flight"],traits:["move"],checkType,event:options.event,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.ManeuverInFlight","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.ManeuverInFlight","failure"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.ManeuverInFlight","criticalFailure")]})}},22958:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.squeeze=void 0;const actions_1=__webpack_require__(54022);exports.squeeze=function(options){var _a;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"acrobatics");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.Squeeze.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:squeeze"],extraOptions:["action:squeeze"],traits:["exploration","move"],checkType,event:options.event,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Squeeze","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Squeeze","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Squeeze","criticalFailure")]})}},51675:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.tumbleThrough=void 0;const actions_1=__webpack_require__(54022);exports.tumbleThrough=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"acrobatics");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.TumbleThrough.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:tumble-through"],extraOptions:["action:tumble-through"],traits:["move"],checkType,event:options.event,difficultyClassStatistic:target=>target.reflex,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.TumbleThrough","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.TumbleThrough","failure")]})}},54022:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActionsPF2e=void 0;const _actor_1=__webpack_require__(85530),values_1=__webpack_require__(35089),modifiers_1=__webpack_require__(27324),rolls_1=__webpack_require__(87525),notes_1=__webpack_require__(46379),seek_1=__webpack_require__(83770),sense_motive_1=__webpack_require__(36274),balance_1=__webpack_require__(47903),maneuver_in_flight_1=__webpack_require__(75982),squeeze_1=__webpack_require__(22958),tumble_through_1=__webpack_require__(51675),climb_1=__webpack_require__(85818),disarm_1=__webpack_require__(49623),force_open_1=__webpack_require__(3836),grapple_1=__webpack_require__(84052),high_jump_1=__webpack_require__(19668),long_jump_1=__webpack_require__(39813),shove_1=__webpack_require__(35047),swim_1=__webpack_require__(89843),trip_1=__webpack_require__(4102),whirling_throw_1=__webpack_require__(79351),craft_1=__webpack_require__(46472),create_a_diversion_1=__webpack_require__(19347),feint_1=__webpack_require__(13445),impersonate_1=__webpack_require__(28827),lie_1=__webpack_require__(47415),bon_mot_1=__webpack_require__(45242),gather_information_1=__webpack_require__(60219),make_an_impression_1=__webpack_require__(29516),request_1=__webpack_require__(4903),coerce_1=__webpack_require__(95703),demoralize_1=__webpack_require__(36549),hide_1=__webpack_require__(91409),sneak_1=__webpack_require__(11309),pick_a_lock_1=__webpack_require__(68296),predication_1=__webpack_require__(538);exports.ActionsPF2e=class{static exposeActions(actions){actions.seek=seek_1.seek,actions.senseMotive=sense_motive_1.senseMotive,actions.balance=balance_1.balance,actions.maneuverInFlight=maneuver_in_flight_1.maneuverInFlight,actions.squeeze=squeeze_1.squeeze,actions.tumbleThrough=tumble_through_1.tumbleThrough,actions.climb=climb_1.climb,actions.disarm=disarm_1.disarm,actions.forceOpen=force_open_1.forceOpen,actions.grapple=grapple_1.grapple,actions.highJump=high_jump_1.highJump,actions.longJump=long_jump_1.longJump,actions.shove=shove_1.shove,actions.swim=swim_1.swim,actions.trip=trip_1.trip,actions.whirlingThrow=whirling_throw_1.whirlingThrow,actions.craft=craft_1.craft,actions.createADiversion=create_a_diversion_1.createADiversion,actions.feint=feint_1.feint,actions.impersonate=impersonate_1.impersonate,actions.lie=lie_1.lie,actions.bonMot=bon_mot_1.bonMot,actions.gatherInformation=gather_information_1.gatherInformation,actions.makeAnImpression=make_an_impression_1.makeAnImpression,actions.request=request_1.request,actions.coerce=coerce_1.coerce,actions.demoralize=demoralize_1.demoralize,actions.hide=hide_1.hide,actions.sneak=sneak_1.sneak,actions.pickALock=pick_a_lock_1.pickALock}static resolveStat(stat){var _a,_b;switch(stat){case"perception":return{checkType:"perception-check",property:"data.data.attributes.perception",stat,subtitle:"PF2E.ActionsCheck.perception"};default:return{checkType:"skill-check",property:`data.data.skills.${null!==(_b=null===(_a=values_1.SKILL_EXPANDED[stat])||void 0===_a?void 0:_a.shortform)&&void 0!==_b?_b:stat}`,stat,subtitle:`PF2E.ActionsCheck.${stat}`}}}static note(selector,translationPrefix,outcome,translationKey){const visibility=game.settings.get("pf2e","metagame.showResults"),translated=game.i18n.localize(null!=translationKey?translationKey:`${translationPrefix}.Notes.${outcome}`);return new notes_1.RollNotePF2e(selector,`<p class="compact-text">${translated}</p>`,new predication_1.PredicatePF2e,"all"===visibility?[outcome]:[])}static async simpleRollActionCheck(options){const rollers=[];Array.isArray(options.actors)?rollers.push(...options.actors):options.actors?rollers.push(options.actors):canvas.tokens.controlled.length?rollers.push(...canvas.tokens.controlled.map((token=>token.actor))):game.user.character&&rollers.push(game.user.character);const target=Array.from(game.user.targets).filter((token=>token.actor instanceof _actor_1.CreaturePF2e))[0];rollers.length?rollers.forEach((actor=>{var _a,_b,_c;let flavor="";options.actionGlyph&&(flavor+=`<span class="pf2-icon">${options.actionGlyph}</span> `),flavor+=`<b>${game.i18n.localize(options.title)}</b>`,flavor+=` <p class="compact-text">(${game.i18n.localize(options.subtitle)})</p>`;const stat=getProperty(actor,options.statName),check=new modifiers_1.CheckModifier(flavor,stat,null!==(_a=options.modifiers)&&void 0!==_a?_a:[]),finalOptions=actor.getRollOptions(options.rollOptions).concat(options.extraOptions).concat(options.traits);{const conditions=actor.itemTypes.condition.filter((condition=>condition.fromSystem));finalOptions.push(...conditions.map((item=>`self:${item.data.data.hud.statusName}`)))}(0,modifiers_1.ensureProficiencyOption)(finalOptions,null!==(_b=stat.rank)&&void 0!==_b?_b:-1);const dc=(()=>{var _a,_b,_c,_d,_e;if(options.difficultyClass)return options.difficultyClass;if(target&&target.actor instanceof _actor_1.CreaturePF2e){const targetOptions=[],conditions=target.actor.itemTypes.condition.filter((condition=>condition.fromSystem));targetOptions.push(...conditions.map((item=>`target:${item.data.data.hud.statusName}`)));const targetTraits=(null!==(_a=target.actor.data.data.traits.traits.custom)&&void 0!==_a?_a:"").split(/[;,\\|]/).map((value=>value.trim())).concat(null!==(_b=target.actor.data.data.traits.traits.value)&&void 0!==_b?_b:[]).filter((value=>!!value)).map((trait=>`target:${trait}`));targetOptions.push(...targetTraits);const dc=null===(_d=null===(_c=options.difficultyClassStatistic)||void 0===_c?void 0:_c.call(options,target.actor))||void 0===_d?void 0:_d.dc({options:finalOptions.concat(targetOptions)});if(dc)return{label:game.i18n.format(dc.labelKey,{creature:target.name,dc:"{dc}"}),value:dc.value,adjustments:null!==(_e=stat.adjustments)&&void 0!==_e?_e:[]}}})(),actionTraits=CONFIG.PF2E.featTraits,traitObjects=options.traits.map((trait=>{var _a;return{name:trait,label:null!==(_a=actionTraits[trait])&&void 0!==_a?_a:trait}}));rolls_1.CheckPF2e.roll(check,{actor,createMessage:options.createMessage,dc,type:options.checkType,options:finalOptions,notes:(null!==(_c=stat.notes)&&void 0!==_c?_c:[]).concat(options.extraNotes?options.extraNotes(options.statName):[]),traits:traitObjects,title:`${game.i18n.localize(options.title)} - ${game.i18n.localize(options.subtitle)}`},options.event,((roll,outcome,message)=>{var _a;null===(_a=options.callback)||void 0===_a||_a.call(options,{actor,message,outcome,roll})}))})):ui.notifications.warn(game.i18n.localize("PF2E.ActionsWarning.NoActor"))}}},85818:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.climb=void 0;const actions_1=__webpack_require__(54022);exports.climb=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Climb.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:climb"],extraOptions:["action:climb"],traits:["move"],checkType,event:options.event,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Climb","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Climb","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Climb","criticalFailure")]})}},49623:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.disarm=void 0;const actions_1=__webpack_require__(54022);exports.disarm=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Disarm.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:disarm"],extraOptions:["action:disarm"],traits:["attack"],checkType,event:options.event,difficultyClassStatistic:target=>target.reflex,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Disarm","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Disarm","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Disarm","criticalFailure")]})}},3836:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.forceOpen=void 0;const actions_1=__webpack_require__(54022);exports.forceOpen=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.ForceOpen.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:force-open"],extraOptions:["action:force-open"],traits:["attack"],checkType,event:options.event,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.ForceOpen","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.ForceOpen","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.ForceOpen","criticalFailure")]})}},84052:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.grapple=void 0;const actions_1=__webpack_require__(54022);exports.grapple=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Grapple.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:grapple"],extraOptions:["action:grapple"],traits:["attack"],checkType,event:options.event,difficultyClassStatistic:target=>target.fortitude,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Grapple","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Grapple","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Grapple","failure"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Grapple","criticalFailure")]})}},19668:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.highJump=void 0;const actions_1=__webpack_require__(54022);exports.highJump=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"D",title:"PF2E.Actions.HighJump.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:stride","action:leap","action:high-jump"],extraOptions:["action:stride","action:leap","action:high-jump"],traits:["move"],checkType,event:options.event,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.HighJump","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.HighJump","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.HighJump","failure"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.HighJump","criticalFailure")]})}},39813:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.longJump=void 0;const actions_1=__webpack_require__(54022);exports.longJump=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"D",title:"PF2E.Actions.LongJump.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:stride","action:leap","action:long-jump"],extraOptions:["action:stride","action:leap","action:long-jump"],traits:["move"],checkType,event:options.event,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.LongJump","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.LongJump","failure"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.LongJump","criticalFailure")]})}},35047:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.shove=void 0;const actions_1=__webpack_require__(54022);exports.shove=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Shove.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:shove"],extraOptions:["action:shove"],traits:["attack"],checkType,event:options.event,difficultyClassStatistic:target=>target.fortitude,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Shove","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Shove","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Shove","criticalFailure")]})}},89843:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.swim=void 0;const actions_1=__webpack_require__(54022);exports.swim=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Swim.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:swim"],extraOptions:["action:swim"],traits:["move"],checkType,event:options.event,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Swim","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Swim","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Swim","criticalFailure")]})}},4102:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.trip=void 0;const actions_1=__webpack_require__(54022);exports.trip=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Trip.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:trip"],extraOptions:["action:trip"],traits:["attack"],checkType,event:options.event,difficultyClassStatistic:target=>target.reflex,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Trip","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Trip","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Trip","criticalFailure")]})}},79351:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.whirlingThrow=void 0;const actions_1=__webpack_require__(54022),modifiers_1=__webpack_require__(27324),_actor_1=__webpack_require__(85530);exports.whirlingThrow=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics"),actor=canvas.tokens.controlled.map((token=>token.actor))[0],target=Array.from(game.user.targets).filter((token=>token.actor instanceof _actor_1.CreaturePF2e))[0].actor;if(options.modifiers||(options.modifiers=[]),target instanceof _actor_1.CreaturePF2e&&actor instanceof _actor_1.CreaturePF2e){const actorSize=actor.data.data.traits.size,targetSize=target.data.data.traits.size,sizeModifier=new modifiers_1.ModifierPF2e("Size Modifier",function(actorSize,targetSize){const sizeDifference=actorSize.difference(targetSize);return Math.clamped(2*sizeDifference,-4,4)}(actorSize,targetSize),modifiers_1.MODIFIER_TYPE.CIRCUMSTANCE);sizeModifier.modifier&&options.modifiers.push(sizeModifier)}actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.WhirlingThrow.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:whirling-throw"],extraOptions:["action:whirling-throw"],traits:["monk"],checkType,event:options.event,difficultyClassStatistic:target=>target.fortitude,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.WhirlingThrow","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.WhirlingThrow","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.WhirlingThrow","failure"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.WhirlingThrow","criticalFailure")]})}},83770:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.seek=void 0;const actions_1=__webpack_require__(54022);exports.seek=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"perception");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Seek.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:seek"],extraOptions:["action:seek"],traits:["concentrate","secret"],checkType,event:options.event,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Seek","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Seek","success")]})}},36274:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.senseMotive=void 0;const actions_1=__webpack_require__(54022);exports.senseMotive=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"perception");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.SenseMotive.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:sense-motive"],extraOptions:["action:sense-motive"],traits:["concentrate","secret"],checkType,event:options.event,difficultyClassStatistic:target=>target.deception,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.SenseMotive","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.SenseMotive","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.SenseMotive","failure"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.SenseMotive","criticalFailure")]})}},46472:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.craft=void 0;const actions_1=__webpack_require__(54022),_item_1=__webpack_require__(10843),dc_1=__webpack_require__(84372);var ChatMessageData=foundry.data.ChatMessageData;const helpers_1=__webpack_require__(67285);class SelectItemDialog extends Application{constructor(resolve){super({classes:["select-craft-item-dialog"],template:"systems/pf2e/templates/system/actions/craft-target-item.html",title:"PF2E.Actions.Craft.SelectItemDialog.Title",width:270}),this.resolve=resolve,this.item=null}async getData(){const data=await super.getData();return data.item=this.item,data}activateListeners(html){super.activateListeners(html),html.on("drop",(async event=>{var _a,_b;const json=null===(_b=null===(_a=event.originalEvent)||void 0===_a?void 0:_a.dataTransfer)||void 0===_b?void 0:_b.getData("text/plain");if(!(null==json?void 0:json.startsWith("{"))||!json.endsWith("}"))return;const data=JSON.parse(json),item=await(async()=>"Item"===data.type&&data.pack&&data.id?await fromUuid(`Compendium.${data.pack}.${data.id}`):"Item"===data.type&&data.id?await fromUuid(`Item.${data.id}`):null)();item instanceof _item_1.PhysicalItemPF2e?(this.item=item,this.render()):ui.notifications.error(game.i18n.localize("PF2E.Actions.Craft.Error.ItemReferenceMismatch"))})),html.find("[data-event-handler=craft]").on("click",(()=>{this.close()})),html.find("[data-event-handler=cancel]").on("click",(()=>{this.item=null,this.close()}))}close(options){return this.resolve(this.item),super.close(options)}static async getItem(){return new Promise((resolve=>{new SelectItemDialog(resolve).render(!0)}))}}exports.craft=async function(options){var _a,_b,_c,_d;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"crafting"),item=null!==(_b=options.item)&&void 0!==_b?_b:options.uuid?await fromUuid(options.uuid):await SelectItemDialog.getItem();if(!item)return void console.warn("PF2e System | No item selected to craft: aborting");if(!(item instanceof _item_1.PhysicalItemPF2e))return void ui.notifications.warn(game.i18n.format("PF2E.Actions.Craft.Warning.NotPhysicalItem",{item:item.name}));const quantity=null!==(_c=options.quantity)&&void 0!==_c?_c:1,proficiencyWithoutLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant"),dc=null!==(_d=options.dc)&&void 0!==_d?_d:{value:(0,dc_1.calculateDC)(item.level,{proficiencyWithoutLevel}),visibility:"all"};actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.Craft.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:craft"],extraOptions:["action:craft"],traits:["downtime","manipulate"],checkType,event:options.event,difficultyClass:dc,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Craft","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Craft","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Craft","failure"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Craft","criticalFailure")],createMessage:!1,callback:async result=>{if(result.message instanceof ChatMessageData){const flavor=await(async()=>{var _a;return["criticalSuccess","success","criticalFailure"].includes(null!==(_a=result.outcome)&&void 0!==_a?_a:"")?await(0,helpers_1.renderCraftingInline)(item,result.roll,quantity,result.actor):""})();flavor&&result.message.update({flavor:result.message.flavor+flavor}),ChatMessage.create(result.message)}else console.error("PF2E | Unable to amend chat message with craft result.",result.message)}})}},19347:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createADiversion=void 0;const actions_1=__webpack_require__(54022);exports.createADiversion=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"deception");let title="PF2E.Actions.CreateADiversion.";const traits=["mental"];switch(options.variant){case"distracting-words":title+="DistractingWords",traits.push("auditory","linguistic");break;case"gesture":title+="Gesture",traits.push("manipulate");break;case"trick":title+="Trick",traits.push("manipulate");break;default:{const msg=game.i18n.format("PF2E.ActionsWarning.DeceptionUnknownVariant",{variant:options.variant});return void ui.notifications.error(msg)}}actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title,subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:create-a-diversion"],extraOptions:["action:create-a-diversion",options.variant],traits:traits.sort(),checkType,event:options.event,difficultyClassStatistic:target=>target.perception,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.CreateADiversion","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.CreateADiversion","failure")]})}},13445:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.feint=void 0;const actions_1=__webpack_require__(54022);exports.feint=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"deception");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Feint.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:feint"],extraOptions:["action:feint"],traits:["mental"],checkType,event:options.event,difficultyClassStatistic:target=>target.perception,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Feint","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Feint","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Feint","criticalFailure")]})}},28827:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.impersonate=void 0;const actions_1=__webpack_require__(54022);exports.impersonate=function(options){var _a;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"deception");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.Impersonate.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:impersonate"],extraOptions:["action:impersonate"],traits:["concentrate","exploration","manipulate","secret"],checkType,event:options.event,difficultyClassStatistic:target=>target.perception,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Impersonate","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Impersonate","failure"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Impersonate","criticalFailure")]})}},47415:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.lie=void 0;const actions_1=__webpack_require__(54022);exports.lie=function(options){var _a;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"deception");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.Lie.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:lie"],extraOptions:["action:lie"],traits:["auditory","concentrate","linguistic","mental","secret"],checkType,event:options.event,difficultyClassStatistic:target=>target.perception,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Lie","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Lie","failure")]})}},45242:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.bonMot=void 0;const actions_1=__webpack_require__(54022);exports.bonMot=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"diplomacy");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.BonMot.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:bon-mot"],extraOptions:["action:bon-mot"],traits:["auditory","concentrate","emotion","linguistic","mental"],checkType,event:options.event,difficultyClassStatistic:target=>target.will,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.BonMot","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.BonMot","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.BonMot","criticalFailure")]})}},60219:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.gatherInformation=void 0;const actions_1=__webpack_require__(54022);exports.gatherInformation=function(options){var _a;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"diplomacy");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.GatherInformation.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:gather-information"],extraOptions:["action:gather-information"],traits:["exploration","secret"],checkType,event:options.event,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.GatherInformation","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.GatherInformation","criticalFailure")]})}},29516:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.makeAnImpression=void 0;const actions_1=__webpack_require__(54022);exports.makeAnImpression=function(options){var _a;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"diplomacy");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.MakeAnImpression.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:make-an-impression"],extraOptions:["action:make-an-impression"],traits:["auditory","concentrate","exploration","linguistic","mental"],checkType,event:options.event,difficultyClassStatistic:target=>target.will,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.MakeAnImpression","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.MakeAnImpression","failure"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.MakeAnImpression","criticalFailure")]})}},4903:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.request=void 0;const actions_1=__webpack_require__(54022);exports.request=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"diplomacy");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Request.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:request"],extraOptions:["action:request"],traits:["auditory","concentrate","linguistic","mental"],checkType,event:options.event,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Request","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Request","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Request","failure"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Request","criticalFailure")]})}},95703:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.coerce=void 0;const actions_1=__webpack_require__(54022);exports.coerce=function(options){var _a;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"intimidation");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.Coerce.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:coerce"],extraOptions:["action:coerce"],traits:["auditory","concentrate","emotion","exploration","linguistic","mental"],checkType,event:options.event,difficultyClassStatistic:target=>target.will,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Coerce","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Coerce","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Coerce","failure"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Coerce","criticalFailure")]})}},36549:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.demoralize=void 0;const actions_1=__webpack_require__(54022);exports.demoralize=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"intimidation");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Demoralize.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:demoralize"],extraOptions:["action:demoralize"],traits:["auditory","concentrate","emotion","fear","mental"],checkType,event:options.event,difficultyClassStatistic:target=>target.will,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Demoralize","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Demoralize","success")]})}},91409:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.hide=void 0;const actions_1=__webpack_require__(54022);exports.hide=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"stealth");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Hide.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:hide"],extraOptions:["action:hide"],traits:["secret"],checkType,event:options.event,difficultyClassStatistic:target=>target.perception,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Hide","success")]})}},11309:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.sneak=void 0;const actions_1=__webpack_require__(54022);exports.sneak=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"stealth");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Sneak.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:sneak"],extraOptions:["action:sneak"],traits:["move","secret"],checkType,event:options.event,difficultyClassStatistic:target=>target.perception,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Sneak","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Sneak","failure"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.Sneak","criticalFailure")]})}},68296:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.pickALock=void 0;const actions_1=__webpack_require__(54022);exports.pickALock=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"thievery");actions_1.ActionsPF2e.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"D",title:"PF2E.Actions.PickALock.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:pick-a-lock"],extraOptions:["action:pick-a-lock"],traits:["manipulate"],checkType,event:options.event,extraNotes:selector=>[actions_1.ActionsPF2e.note(selector,"PF2E.Actions.PickALock","criticalSuccess"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.PickALock","success"),actions_1.ActionsPF2e.note(selector,"PF2E.Actions.PickALock","criticalFailure")]})}},40093:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getDegreeOfSuccess=exports.DegreeOfSuccessText=void 0;const degree_of_success_1=__webpack_require__(7859),PREFIXES=Object.freeze({all:-1,criticalFailure:degree_of_success_1.DegreeOfSuccess.CRITICAL_FAILURE,failure:degree_of_success_1.DegreeOfSuccess.FAILURE,success:degree_of_success_1.DegreeOfSuccess.SUCCESS,criticalSuccess:degree_of_success_1.DegreeOfSuccess.CRITICAL_SUCCESS}),ADJUSTMENTS=Object.freeze({"two-degrees-better":degree_of_success_1.DegreeAdjustment.INCREASE_BY_TWO,"one-degree-better":degree_of_success_1.DegreeAdjustment.INCREASE,"one-degree-worse":degree_of_success_1.DegreeAdjustment.LOWER,"two-degrees-worse":degree_of_success_1.DegreeAdjustment.LOWER_BY_TWO});exports.DegreeOfSuccessText=["criticalFailure","failure","success","criticalSuccess"],exports.getDegreeOfSuccess=function(roll,checkDC){var _a,_b,_c;const dieRoll={dieValue:null!==(_a=Number(roll.terms[0].total))&&void 0!==_a?_a:0,modifier:null!==(_b=roll.data.totalModifier)&&void 0!==_b?_b:0},unadjusted=(0,degree_of_success_1.calculateDegreeOfSuccess)(dieRoll,checkDC.value);let value=unadjusted;const degreeAdjustment=function(value,modifiers){for(const degree of["all","criticalFailure","failure","success","criticalSuccess"]){const checkDC=modifiers[degree];if(!checkDC)continue;const condition=PREFIXES[degree],adjustment=ADJUSTMENTS[checkDC];if(!(value===degree_of_success_1.DegreeOfSuccess.CRITICAL_SUCCESS&&adjustment===degree_of_success_1.DegreeAdjustment.INCREASE||value===degree_of_success_1.DegreeOfSuccess.CRITICAL_FAILURE&&adjustment===degree_of_success_1.DegreeAdjustment.LOWER)){if(condition===PREFIXES.all)return adjustment;if(value===condition)return adjustment}}return}(value,null!==(_c=checkDC.modifiers)&&void 0!==_c?_c:{});return void 0!==degreeAdjustment&&(value=(0,degree_of_success_1.adjustDegreeOfSuccess)(degreeAdjustment,value)),{unadjusted,value,degreeAdjustment}}},87252:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CheckModifiersDialog=void 0;const modifiers_1=__webpack_require__(27324),localize_1=__webpack_require__(41332);class CheckModifiersDialog extends Application{constructor(check,resolve,context){var _a;super({title:(null==context?void 0:context.title)||check.name,template:"systems/pf2e/templates/chat/check-modifiers-dialog.html",classes:["dice-checks","dialog"],popOut:!0,width:380,height:"auto"}),this.isResolved=!1,this.check=check,this.context=null!=context?context:{},this.resolve=resolve,this.context.secret?this.context.rollMode="blindroll":this.context.rollMode=null!==(_a=game.settings.get("core","rollMode"))&&void 0!==_a?_a:"roll"}getData(){const fortune="fortune"===this.context.fate,misfortune="misfortune"===this.context.fate,none=fortune===misfortune;return{appId:this.id,check:this.check,rollModes:CONFIG.Dice.rollModes,rollMode:this.context.rollMode,showRollDialogs:game.user.settings.showRollDialogs,fortune,none,misfortune}}activateListeners(html){html.find(".roll").on("click",(_event=>{this.context.fate=html.find("input[type=radio][name=fate]:checked").val(),this.resolve(!0),this.isResolved=!0,this.close()})),html.find(".modifier-container").on("click","input[type=checkbox]",(event=>{const index=Number(event.currentTarget.getAttribute("data-modifier-index"));this.check.modifiers[index].ignored=event.currentTarget.checked,this.check.applyStackingRules(),this.render()})),html.find(".add-modifier-panel").on("click",".add-modifier",(event=>this.onAddModifier(event))),html.find("[name=rollmode]").on("change",(event=>this.onChangeRollMode(event)));const $tooltip=html.closest(`#${this.id}`).find("a.header-button.settings").attr({"data-tooltip-content":`#${this.id}-settings`}).tooltipster({animation:"fade",trigger:"click",arrow:!1,contentAsHTML:!0,debug:!1,interactive:!0,side:["top"],theme:"crb-hover",minWidth:165});html.find(".settings-list input.quick-rolls-submit").on("change",(async event=>{const $checkbox=$(event.delegateTarget);await game.user.setFlag("pf2e","settings.showRollDialogs",$checkbox[0].checked),$tooltip.tooltipster("close")}))}async close(options){this.isResolved||this.resolve(!1),super.close(options)}onAddModifier(event){const parent=$(event.currentTarget).parents(".add-modifier-panel"),value=Number(parent.find(".add-modifier-value").val()),type=`${parent.find(".add-modifier-type").val()}`;let name=`${parent.find(".add-modifier-name").val()}`;const errors=[];Number.isNaN(value)?errors.push("Modifier value must be a number."):0===value&&errors.push("Modifier value must not be zero."),type&&type.trim().length||errors.push("Modifier type is required."),name&&name.trim()||(name=game.i18n.localize(value<0?`PF2E.PenaltyLabel.${type}`:`PF2E.BonusLabel.${type}`)),errors.length>0?ui.notifications.error(errors.join(" ")):(this.check.push(new modifiers_1.ModifierPF2e(name,value,type)),this.render())}onChangeRollMode(event){var _a;this.context.rollMode=null!==(_a=$(event.currentTarget).val())&&void 0!==_a?_a:"roll"}_getHeaderButtons(){const buttons=super._getHeaderButtons();return[{label:localize_1.LocalizePF2e.translations.PF2E.SETTINGS.Settings,class:"settings",icon:"fas fa-cog",onclick:()=>null},...buttons]}}exports.CheckModifiersDialog=CheckModifiersDialog},71881:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FlattenedCondition=exports.ConditionReference=exports.ConditionManager=void 0;var manager_1=__webpack_require__(2500);Object.defineProperty(exports,"ConditionManager",{enumerable:!0,get:function(){return manager_1.ConditionManager}});var types_1=__webpack_require__(34953);Object.defineProperty(exports,"ConditionReference",{enumerable:!0,get:function(){return types_1.ConditionReference}}),Object.defineProperty(exports,"FlattenedCondition",{enumerable:!0,get:function(){return types_1.FlattenedCondition}})},2500:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConditionManager=void 0;const modifiers_1=__webpack_require__(27324),status_effects_1=__webpack_require__(34191),data_1=__webpack_require__(39103),_item_1=__webpack_require__(10843),_actor_1=__webpack_require__(85530),_util_1=__webpack_require__(6945);class ConditionManager{static get conditions(){return new Map(this._conditions.entries())}static get conditionsNames(){return[...this._conditions.keys()]}static get statusNames(){return[...this._conditionStatusNames.keys()]}static async init(){var _a,_b;const content=null!==(_b=await(null===(_a=game.packs.get("pf2e.conditionitems"))||void 0===_a?void 0:_a.getDocuments()))&&void 0!==_b?_b:[];for(const condition of content)this._conditions.set(condition.slug,condition.data),this._conditionStatusNames.set(condition.data.data.hud.statusName,condition.data);Object.freeze(ConditionManager._conditions),Object.freeze(ConditionManager._conditionStatusNames)}static getCondition(conditionKey){var _a;conditionKey=(0,_util_1.sluggify)(conditionKey);const condition=null===(_a=ConditionManager._conditions.get(conditionKey))||void 0===_a?void 0:_a.toObject();if(!condition)throw(0,_util_1.ErrorPF2e)("Unexpected failure looking up condition");return new data_1.ConditionData(condition)}static getConditionByStatusName(statusName){const conditionData=this._conditionStatusNames.get(statusName);return conditionData&&new data_1.ConditionData(conditionData.toObject())}static processValuedCondition(conditions,updates){let appliedCondition;return conditions.forEach((condition=>{var _a,_b,_c;if(void 0===appliedCondition||Number(condition.data.value.value)>Number(appliedCondition.data.value.value)){if(!condition.data.active){const update=null!==(_a=updates.get(condition._id))&&void 0!==_a?_a:condition.toObject();update.data.active=!0,updates.set(update._id,update)}if(appliedCondition)if(appliedCondition.data.active){const update=null!==(_b=updates.get(appliedCondition._id))&&void 0!==_b?_b:condition.toObject();update.data.active=!1,updates.set(update._id,update)}else updates.delete(appliedCondition._id);appliedCondition=condition}else if(condition.data.active){const update=null!==(_c=updates.get(condition._id))&&void 0!==_c?_c:condition.toObject();update.data.active=!1,updates.set(update._id,update)}this.clearOverrides(condition,updates)})),appliedCondition}static processToggleCondition(conditions,updates){let appliedCondition;return conditions.forEach((condition=>{var _a,_b;if(void 0===appliedCondition&&(appliedCondition=condition),condition._id!==appliedCondition._id||condition.data.active){if(condition._id!==appliedCondition._id&&condition.data.active){const update=null!==(_b=updates.get(condition._id))&&void 0!==_b?_b:condition.toObject();update.data.active=!1,updates.set(update._id,update)}}else{const update=null!==(_a=updates.get(condition._id))&&void 0!==_a?_a:condition.toObject();update.data.active=!0,updates.set(update._id,update)}this.clearOverrides(condition,updates)})),appliedCondition}static clearOverrides(condition,updates){var _a,_b;if(condition.data.references.overrides.length){const update=null!==(_a=updates.get(condition._id))&&void 0!==_a?_a:condition.toObject();update.data.references.overrides.splice(0,update.data.references.overriddenBy.length),updates.set(update._id,update)}if(condition.data.references.overriddenBy.length){const update=null!==(_b=updates.get(condition._id))&&void 0!==_b?_b:condition.toObject();update.data.references.overriddenBy.splice(0,update.data.references.overriddenBy.length),updates.set(update._id,update)}}static processOverride(overridden,overrider,updates){var _a,_b,_c;if(overridden.data.active){const update=null!==(_a=updates.get(overridden._id))&&void 0!==_a?_a:duplicate(overridden);update.data.active=!1,updates.set(update._id,update)}if(!overridden.data.references.overriddenBy.some((i=>i.id===overrider._id))){const update=null!==(_b=updates.get(overridden._id))&&void 0!==_b?_b:duplicate(overridden);update.data.references.overriddenBy.push({id:overrider._id,type:"condition"}),updates.set(update._id,update)}if(!overrider.data.references.overrides.some((i=>i.id===overridden._id))){const update=null!==(_c=updates.get(overrider._id))&&void 0!==_c?_c:duplicate(overrider);update.data.references.overrides.push({id:overridden._id,type:"condition"}),updates.set(update._id,update)}}static async processConditions(actorOrToken){var _a,_b,_c;const actor=actorOrToken instanceof _actor_1.ActorPF2e?actorOrToken:actorOrToken.actor,conditions=null!==(_a=null==actor?void 0:actor.itemTypes.condition.filter((condition=>condition.fromSystem)).map((condition=>condition.data)))&&void 0!==_a?_a:[],updates=new Map,appliedConditions=new Map,baseList=new Set,overriding=[];conditions.forEach((condition=>{if(!baseList.has(condition.data.base)){const base=condition.data.base;baseList.add(base);const list=conditions.filter((c=>c.data.base===base));let appliedCondition;appliedCondition=ConditionManager.getCondition(base).data.value.isValued?this.processValuedCondition(list,updates):this.processToggleCondition(list,updates),appliedConditions.set(base,appliedCondition),appliedCondition.data.overrides.length&&overriding.push(base)}})),overriding.forEach((base=>{var _a,_b,_c,_d;const overrider=null!==(_c=updates.get(null!==(_b=null===(_a=appliedConditions.get(base))||void 0===_a?void 0:_a._id)&&void 0!==_b?_b:""))&&void 0!==_c?_c:null===(_d=appliedConditions.get(base))||void 0===_d?void 0:_d.toObject();null==overrider||overrider.data.overrides.forEach((overriddenBase=>{appliedConditions.has(overriddenBase)&&(appliedConditions.delete(overriddenBase),conditions.filter((conditionData=>conditionData.data.base===overriddenBase)).forEach((conditionData=>{var _a;const overridden=null!==(_a=updates.get(conditionData._id))&&void 0!==_a?_a:conditionData.toObject();this.processOverride(overridden,overrider,updates)})))}))})),updates.size&&await(null==actor?void 0:actor.updateEmbeddedDocuments("Item",Array.from(updates.values())));const hudElement=null===(_b=canvas.tokens.hud)||void 0===_b?void 0:_b.element,tokens=null!==(_c=null==actor?void 0:actor.getActiveTokens().filter((token=>token.hasActiveHUD)))&&void 0!==_c?_c:[];actor&&hudElement&&tokens.length>0&&await status_effects_1.StatusEffects.updateHUD(hudElement,actor)}static getModifiersFromConditions(conditions){var _a,_b,_c;const conditionModifiers=new Map;for(const condition of conditions)for(const modifier of condition.data.modifiers)conditionModifiers.has(modifier.group)||conditionModifiers.set(modifier.group,[]),condition.data.value.isValued?null===(_a=conditionModifiers.get(modifier.group))||void 0===_a||_a.push(new modifiers_1.ModifierPF2e(condition.name,-condition.data.value.value,modifier.type)):null===(_b=conditionModifiers.get(modifier.group))||void 0===_b||_b.push(new modifiers_1.ModifierPF2e(condition.name,null!==(_c=modifier.value)&&void 0!==_c?_c:0,modifier.type));return conditionModifiers}static async addConditionToToken(name,actorOrToken){const actor=actorOrToken instanceof _actor_1.ActorPF2e?actorOrToken:actorOrToken.actor,conditionSource="string"==typeof name?this.getCondition(name).toObject():name;if(actor){const condition=await this.createConditions(conditionSource,actor);return condition&&this.processConditions(actor),condition}return null}static async addConditionToActor(name,actor){return this.addConditionToToken(name,actor)}static async createConditions(source,actor){var _a;if(actor.itemTypes.condition.some((existing=>{var _a;return existing.data.data.base===source.data.base&&!(null===(_a=source.data.references.parent)||void 0===_a?void 0:_a.id)})))return null;source._id=randomID(16);const sources=[source,...this.createAdditionallyAppliedConditions(source)];return actor.isToken?await actor.update({items:[...actor.toObject().items,...sources]},{keepId:!0}):await _item_1.ItemPF2e.createDocuments(sources,{parent:actor,keepId:!0}),null!==(_a=actor.itemTypes.condition.find((condition=>condition.id===source._id)))&&void 0!==_a?_a:null}static createAdditionallyAppliedConditions(baseCondition){const conditionsToCreate=[];return baseCondition.data.alsoApplies.linked.forEach((linkedCondition=>{const conditionSource=this.getCondition(linkedCondition.condition).toObject();linkedCondition.value&&(conditionSource.data.value.value=linkedCondition.value),conditionSource._id=randomID(16),conditionSource.data.references.parent={id:baseCondition._id,type:"condition"},baseCondition.data.references.children.push({id:conditionSource._id,type:"condition"}),conditionSource.data.sources.hud=baseCondition.data.sources.hud,conditionsToCreate.push(conditionSource),conditionsToCreate.push(...this.createAdditionallyAppliedConditions(conditionSource))})),baseCondition.data.alsoApplies.unlinked.forEach((unlinkedCondition=>{const conditionSource=this.getCondition(unlinkedCondition.condition).toObject();unlinkedCondition.value&&(conditionSource.name=`${conditionSource.name} ${conditionSource.data.value.value}`,conditionSource.data.value.value=unlinkedCondition.value),conditionSource._id=randomID(16),conditionSource.data.sources.hud=baseCondition.data.sources.hud,conditionsToCreate.push(conditionSource),conditionsToCreate.push(...this.createAdditionallyAppliedConditions(conditionSource))})),conditionsToCreate}static async removeConditionFromToken(itemId,actorOrToken){itemId=itemId instanceof Array?itemId:[itemId];const actor=actorOrToken instanceof _actor_1.ActorPF2e?actorOrToken:actorOrToken.actor;if(actor){(await this.deleteConditions(itemId,actor)).length>0&&this.processConditions(actor)}}static async removeConditionFromActor(itemId,actor){return this.removeConditionFromToken(itemId,actor)}static async deleteConditions(itemIds,actor){var _a;const list=[],stack=[...itemIds];for(;stack.length;){const id=null!==(_a=stack.pop())&&void 0!==_a?_a:"",condition=actor.items.get(id);condition instanceof _item_1.ConditionPF2e&&(list.push(id),condition.data.data.references.children.forEach((child=>stack.push(child.id))))}return _item_1.ConditionPF2e.deleteDocuments(list,{parent:actor})}static async updateConditionValue(itemId,actorOrToken,value){const actor=actorOrToken instanceof _actor_1.ActorPF2e?actorOrToken:actorOrToken.actor,condition=null==actor?void 0:actor.items.get(itemId);condition instanceof _item_1.ConditionPF2e&&actor&&(0===value?await this.deleteConditions([itemId],actor):(await condition.update({"data.value.value":value}),console.debug(`PF2e System | Setting condition '${condition.name}' to ${value}.`)),await this.processConditions(actor))}static getFlattenedConditions(items){const conditions=new Map;return items.sort(this.sortCondition).forEach((condition=>{var _a,_b;const name=condition.value?`${condition.name} ${condition.value}`:condition.name,flattened=null!==(_a=conditions.get(name))&&void 0!==_a?_a:{id:condition.id,active:condition.isActive,name,value:condition.value,description:condition.description,img:condition.img,references:!1,locked:!1,parents:[],children:[],overrides:[],overriddenBy:[],immunityFrom:[]};conditions.set(name,flattened);const conditionData=condition.data;if(conditionData.data.references.parent){const refCondition=items.find((other=>{var _a;return other.id===(null===(_a=conditionData.data.references.parent)||void 0===_a?void 0:_a.id)}));if(refCondition){const ref={id:conditionData.data.references.parent,name:refCondition.name,base:refCondition.slug,text:""};refCondition.value&&(ref.name=`${ref.name} ${refCondition.value}`);const compendiumLink=null===(_b=refCondition.sourceId)||void 0===_b?void 0:_b.replace(/^Compendium\./,"");ref.text=compendiumLink?`@Compendium[${compendiumLink}]`:"",flattened.references=!0,flattened.locked=!0,flattened.parents.push(ref)}}conditionData.data.references.children.forEach((item=>{var _a;const refCondition=items.find((other=>other.id===item.id));if(refCondition){const ref={id:conditionData.data.references.parent,name:refCondition.name,base:refCondition.slug,text:""};refCondition.value&&(ref.name=`${ref.name} ${refCondition.value}`);const compendiumLink=null===(_a=refCondition.sourceId)||void 0===_a?void 0:_a.replace(/^Compendium\./,"");ref.text=compendiumLink?`@Compendium[${compendiumLink}]`:"",flattened.references=!0,flattened.children.push(ref)}})),conditionData.data.references.overrides.forEach((item=>{var _a;const refCondition=items.find((other=>other.id===item.id));if(refCondition){const ref={id:conditionData.data.references.parent,name:refCondition.name,base:refCondition.slug,text:""};refCondition.value&&(ref.name=`${ref.name} ${refCondition.value}`);const compendiumLink=null===(_a=refCondition.sourceId)||void 0===_a?void 0:_a.replace(/^Compendium\./,"");ref.text=compendiumLink?`@Compendium[${compendiumLink}]`:"",flattened.references=!0,flattened.overrides.push(ref)}})),conditionData.data.references.overriddenBy.forEach((item=>{var _a;const refCondition=items.find((other=>other.id===item.id));if(refCondition){const ref={id:conditionData.data.references.parent,name:refCondition.name,base:refCondition.slug,text:""};refCondition.value&&(ref.name=`${ref.name} ${refCondition.value}`);const compendiumLink=null===(_a=refCondition.sourceId)||void 0===_a?void 0:_a.replace(/^Compendium\./,"");ref.text=compendiumLink?`@Compendium[${compendiumLink}]`:"",flattened.references=!0,flattened.overriddenBy.push(ref)}})),conditionData.data.references.immunityFrom.forEach((item=>{var _a;const refCondition=items.find((other=>other.id===item.id));if(refCondition){const ref={id:conditionData.data.references.parent,name:refCondition.name,base:refCondition.slug,text:""};refCondition.value&&(ref.name=`${ref.name} ${refCondition.value}`);const compendiumLink=null===(_a=refCondition.sourceId)||void 0===_a?void 0:_a.replace(/^Compendium\./,"");ref.text=compendiumLink?`@Compendium[${compendiumLink}]`:"",flattened.references=!0,flattened.immunityFrom.push(ref)}}))})),Array.from(conditions.values())}static sortCondition(conditionA,conditionB){return conditionA.slug===conditionB.slug?conditionA.slug===conditionB.slug?conditionA.value&&conditionB.value?conditionB.value-conditionA.value:0:conditionA.slug.localeCompare(conditionB.slug):conditionA.isActive&&!conditionB.isActive?-1:!conditionA.isActive&&conditionB.isActive?1:0}}exports.ConditionManager=ConditionManager,ConditionManager._conditions=new Map,ConditionManager._conditionStatusNames=new Map},34953:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0})},24277:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DamageRollModifiersDialog=void 0;const modifiers_1=__webpack_require__(27324),chat_message_1=__webpack_require__(40405);class DamageRollModifiersDialog extends Application{constructor(damage,context,callback){super({title:damage.name,template:"systems/pf2e/templates/chat/check-modifiers-dialog.html",classes:["dice-checks","dialog"],popOut:!0,width:380}),this.damage=damage,this.context=context,this.callback=callback}static roll(damage,context,callback){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;const ctx=null!=context?context:{},outcome=null!==(_a=ctx.outcome)&&void 0!==_a?_a:"success";ctx.rollMode=null!==(_d=null!==(_c=null!==(_b=ctx.rollMode)&&void 0!==_b?_b:ctx.secret?"blindroll":void 0)&&void 0!==_c?_c:game.settings.get("core","rollMode"))&&void 0!==_d?_d:"roll";let damageBaseModifier="";damage.base.modifier&&(damageBaseModifier=damage.base.modifier>0?` + ${damage.base.modifier}`:` - ${Math.abs(damage.base.modifier)}`);const outcomeLabel=game.i18n.localize(`PF2E.CheckOutcome.${outcome}`);let flavor=`<b>${damage.name}</b> (${outcomeLabel})`;if(damage.traits){const strikeTraits=Object.assign(Object.assign({},CONFIG.PF2E.npcAttackTraits),{attack:"PF2E.TraitAttack"}),traitDescriptions=CONFIG.PF2E.traitsDescriptions;flavor+=`<div class="tags">${damage.traits.map((trait=>{var _a;return{value:trait,label:game.i18n.localize(null!==(_a=strikeTraits[trait])&&void 0!==_a?_a:"")}})).sort(((a,b)=>a.label.localeCompare(b.label))).map((trait=>{var _a;const description=null!==(_a=traitDescriptions[trait.value])&&void 0!==_a?_a:"";return`<span class="tag" data-trait="${trait.value}" data-description="${description}">${trait.label}</span>`})).join("")}</div><hr>`}flavor+=`<div class="tags">${`<span class="damage-tag damage-tag-base">${game.i18n.localize("Base")} ${damage.base.diceNumber}${damage.base.dieSize}${damageBaseModifier} ${damage.base.damageType}</span>`}${[].concat(damage.diceModifiers.filter((m=>0!==m.diceNumber))).concat(damage.numericModifiers).filter((m=>m.enabled)).filter((m=>!m.critical||"criticalSuccess"===outcome)).map((m=>{var _a;return`<span class="damage-tag damage-tag-modifier">${game.i18n.localize(null!==(_a=m.label)&&void 0!==_a?_a:m.name)}${m instanceof modifiers_1.ModifierPF2e?` ${m.modifier<0?"":"+"}${m.modifier}`:""}${m.damageType&&m.damageType!==damage.base.damageType?` ${m.damageType}`:""}</span>`})).join("")}</div>`;flavor+=`${(null!==(_e=damage.notes)&&void 0!==_e?_e:[]).filter((note=>0===note.outcome.length||note.outcome.includes(outcome))).map((note=>game.pf2e.TextEditor.enrichHTML(note.text))).join("<br />")}`;const formula=duplicate(damage.formula[outcome]);if(!formula)return void ui.notifications.error(game.i18n.format("PF2E.UI.noDamageInfoForOutcome",{outcome}));const rollData={outcome,rollMode:null!==(_f=ctx.rollMode)&&void 0!==_f?_f:"roll",traits:null!==(_g=damage.traits)&&void 0!==_g?_g:[],types:{},total:0,diceResults:{},baseDamageDice:damage.effectDice},rolls=[];let content=`\n    <div class="dice-roll">\n        <div class="dice-result">\n            <div class="dice-formula">${formula.formula}</div>\n            <div class="dice-tooltip" style="display: none;">`;for(const[damageType,categories]of Object.entries(formula.partials)){content+=`<div class="damage-type ${damageType}">`,content+=`<h3 class="flexrow"><span>${damageType}</span><i class="fa fa-${DamageRollModifiersDialog.getDamageTypeIcon(damageType)}"></i></h3>`,rollData.diceResults[damageType]={};for(const[damageCategory,partial]of Object.entries(categories)){const roll=new Roll(partial,formula.data).evaluate({async:!1});rolls.push(roll);const damageValue=null!==(_h=rollData.types[damageType])&&void 0!==_h?_h:{};damageValue[damageCategory]=roll.total,rollData.types[damageType]=damageValue,rollData.total+=roll.total,rollData.diceResults[damageType][damageCategory]=[];const dice=roll.dice.flatMap((d=>d.results.map((r=>(rollData.diceResults[damageType][damageCategory].push(r.result),`<li class="roll die d${d.faces}">${r.result}</li>`))))).join("\n");content+=`\n            <section class="tooltip-part">\n                <div class="dice">\n                    <header class="part-header flexrow">\n                        <span class="part-formula">${partial}</span>\n                        <span class="part-flavor">${damageCategory}</span>\n                        <span class="part-total">${roll.total}</span>\n                    </header>\n                    <ol class="dice-rolls">${dice}</ol>\n                </div>\n            </section>\n            `}content+="</div>"}rollData.total=Math.max(rollData.total,1),content+=`</div><h4 class="dice-total"><span id="value">${rollData.total}</span></h4></div></div>`;const roll=(()=>{if(1===rolls.length)return rolls[0];const pool=PoolTerm.fromRolls(rolls);delete pool.toJSON().rolls;return Roll.fromData({formula:pool.formula,terms:[pool]})})(),speaker={actor:ctx.actor},item=null!==(_j=context.item)&&void 0!==_j?_j:null,origin=item?{uuid:item.uuid,type:item.data.type}:null;chat_message_1.ChatMessagePF2e.create({type:CONST.CHAT_MESSAGE_TYPES.ROLL,speaker:chat_message_1.ChatMessagePF2e.getSpeaker(speaker),flavor,content:content.trim(),roll,sound:"sounds/dice.wav",flags:{core:{canPopout:!0},pf2e:{damageRoll:rollData,origin,preformatted:"both"}}},{rollMode:null!==(_k=ctx.rollMode)&&void 0!==_k?_k:"roll"}),Hooks.call(`${game.system.id}.damageRoll`,rollData),callback&&callback(rollData)}getData(){return{damage:this.damage}}static getDamageTypeIcon(damageType){var _a;return null!==(_a=DamageRollModifiersDialog.DAMAGE_TYPE_ICONS[damageType])&&void 0!==_a?_a:damageType}}exports.DamageRollModifiersDialog=DamageRollModifiersDialog,DamageRollModifiersDialog.DAMAGE_TYPE_ICONS=Object.freeze({acid:"vial",bludgeoning:"hammer",chaotic:"dizzy",cold:"snowflake",electricity:"bolt",evil:"crow",fire:"fire",force:"hand-sparkles",good:"dove",lawful:"balance-scale",mental:"brain",negative:"skull",piercing:"bow-arrow",poison:"spider",positive:"sun",slashing:"swords",sonic:"volume-up"})},76907:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DamageChatCard=void 0;const damage_1=__webpack_require__(24171);function getTermParts(term,flavor){const parts=(term.flavor||flavor||"untyped").split(",").map((part=>part.trim().toLowerCase())),type=parts[parts.length-1],base=damage_1.DamageCategory.fromDamageType(type),categories=parts.filter((c=>c!==type));return categories.includes(base)||categories.push(base),{parts,type,base,categories}}function ensureDamageCategory(types,categories,base,type,multiplier){var _a,_b,_c;const set=categories.map((c=>c.toLowerCase())).join("-"),t=null!==(_a=types[type])&&void 0!==_a?_a:types[type]={},m=null!==(_b=t[set])&&void 0!==_b?_b:t[set]={},category=null!==(_c=m[multiplier])&&void 0!==_c?_c:m[multiplier]={categories:[],dice:{},formula:"",label:"",modifier:0,results:{},total:0};return category.categories=categories,category.label=categories.filter((c=>c!==base)).join(" ")||base,category}function applyDiceResult(category,dice,multiplier){var _a,_b,_c;const faces=function(faces){return`d${faces}`}(dice.faces);category.dice[faces]=(null!==(_a=category.dice[faces])&&void 0!==_a?_a:0)+dice.number,category.results[faces]=(null!==(_b=category.results[faces])&&void 0!==_b?_b:[]).concat(dice.results.map((d=>d.result))),category.total+=(null!==(_c=dice.total)&&void 0!==_c?_c:0)*multiplier}function applyModifier(category,modifier,multiplier){var _a;null!==(_a=category.modifier)&&void 0!==_a||(category.modifier=0),category.modifier+=modifier*multiplier,category.total+=modifier*multiplier}function processRollTerms(types,terms,notes,flavor){var _a,_b,_c;let operator,operand=null;for(const term of terms){const{parts,type,base,categories}=getTermParts(term,flavor);if(term instanceof OperatorTerm){if(["+","-"].includes(term.operator)){const category=ensureDamageCategory(types,categories,base,type,1);if(operand instanceof Die)applyDiceResult(category,operand,1),operand=null;else if(operand instanceof NumericTerm){applyModifier(category,"-"===term.operator?-operand.number:+operand.number,1),operand=null}}operator=term}else if(term instanceof Die)if(["*","/"].includes(null!==(_a=null==operator?void 0:operator.operator)&&void 0!==_a?_a:"")&&operand instanceof NumericTerm){const multiplier="/"===(null==operator?void 0:operator.operator)?1/operand.number:operand.number;applyDiceResult(ensureDamageCategory(types,categories,base,type,multiplier),term,multiplier),operand=null,operator=null}else operand=term;else if(term instanceof NumericTerm){if(["*","/"].includes(null!==(_b=null==operator?void 0:operator.operator)&&void 0!==_b?_b:"")&&operand instanceof Die){const multiplier="/"===(null==operator?void 0:operator.operator)?1/term.number:term.number;applyDiceResult(ensureDamageCategory(types,categories,base,type,multiplier),operand,multiplier),operand=null}else if(["+","-"].includes(null!==(_c=null==operator?void 0:operator.operator)&&void 0!==_c?_c:"")){const multiplier=1,modifier="-"===(null==operator?void 0:operator.operator)?-term.number:term.number;applyModifier(ensureDamageCategory(types,categories,base,type,multiplier),modifier,multiplier),operand=null}else operand=term;operator=null}else if(term instanceof PoolTerm){operator?operator=null:operand=term;for(const roll of term.rolls)processRollTerms(types,roll.terms,notes,parts.join(","))}}if(operand){const{type,base,categories}=getTermParts(operand,flavor),multiplier=1,category=ensureDamageCategory(types,categories,base,type,multiplier);operand instanceof Die?applyDiceResult(category,operand,multiplier):operand instanceof NumericTerm&&applyModifier(category,operand.number,multiplier)}}const UNPARSEABLE_ROLL_SYNTAX=[...__webpack_require__(52769).MATH_FUNCTION_NAMES];exports.DamageChatCard={preformat:async message=>{var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r;const data=message.data._source,preformatted=data.flags.pf2e.preformatted;if("both"===preformatted)return;if(!message.isDamageRoll)return;const originalFormula=message.roll._formula;if(UNPARSEABLE_ROLL_SYNTAX.some((f=>originalFormula.includes(f))))return void console.warn("PF2E | Unable to safely parse roll formulas containing math functions, skipping formatting of roll with formula:",originalFormula);const originalFlavor=null===(_a=data.flavor)||void 0===_a?void 0:_a.trim();if(null!==(_b=data.flags.pf2e.suppressFormatting)&&void 0!==_b?_b:null==originalFlavor?void 0:originalFlavor.includes("suppress-formatting"))return;const context={suppress:{splashInlineRolls:!(null===(_d=null!==(_c=data.flags.pf2e.suppressSplashInlineRoll)&&void 0!==_c?_c:null==originalFlavor?void 0:originalFlavor.includes("suppress-splash-inline-roll"))||void 0===_d||!_d),persistentNotes:!(null===(_f=null!==(_e=data.flags.pf2e.suppressPersistentNotes)&&void 0!==_e?_e:null==originalFlavor?void 0:originalFlavor.includes("suppress-persistent-notes"))||void 0===_f||!_f)}},notes=[],processed={};processRollTerms(processed,message.roll.terms,notes);const types=function(processed,notes,context){var _a,_b,_c,_d,_e,_f,_g,_h,_j;const types={},splash=[];for(const[type,categories]of Object.entries(processed)){const breakdownType=null!==(_a=types[type])&&void 0!==_a?_a:types[type]={};for(const[set,multipliers]of Object.entries(categories)){const category=null!==(_b=breakdownType[set])&&void 0!==_b?_b:{};null!==(_c=category.formula)&&void 0!==_c||(category.formula=""),null!==(_d=category.modifier)&&void 0!==_d||(category.modifier=0),null!==(_e=category.results)&&void 0!==_e||(category.results={}),null!==(_f=category.total)&&void 0!==_f||(category.total=0),category.type=type;const sorted=Object.entries(multipliers).sort((([a,_aa],[b,_bb])=>a.localeCompare(b))).reverse();for(const[multiplier,sourceCategory]of sorted){if("0"===multiplier)continue;let formula=Object.entries(sourceCategory.dice).map((([faces,number])=>`${number}${faces}`)).join("+");sourceCategory.modifier&&(formula+=sourceCategory.modifier<0||!formula?`${sourceCategory.modifier}`:`+${sourceCategory.modifier}`),category.formula&&(category.formula+=" + "),category.formula+="1"===multiplier?formula:`${multiplier} × (${formula})`,null!==(_g=category.categories)&&void 0!==_g||(category.categories=sourceCategory.categories),null!==(_h=category.label)&&void 0!==_h||(category.label=sourceCategory.label),category.modifier+=sourceCategory.modifier;for(const[damageDie,results]of Object.entries(sourceCategory.results)){const dds=damageDie;category.results[dds]=(null!==(_j=category.results[dds])&&void 0!==_j?_j:[]).concat(results)}category.total+=sourceCategory.total,category.categories.includes("splash")&&splash.push(category)}if(category.categories.includes("persistent")&&!context.suppress.persistentNotes){const base=damage_1.DamageCategory.fromDamageType(category.type),formula=category.formula,categories=category.categories.filter((c=>c!==base)).concat(category.type).join(","),label=category.categories.filter((c=>c!==base)).concat(category.type).join(" "),suppress='&lt;code style="display:none;"&gt;suppress-persistent-notes&lt;/code&gt;';notes.push(`[[/roll {${formula}}[${categories}] # ${label} ${suppress}]]{${formula} ${label}}`)}else breakdownType[set]=category}}if(splash.length&&!context.suppress.splashInlineRolls){const splashRoll=splash.map((s=>{const base=damage_1.DamageCategory.fromDamageType(s.type),categories=s.categories.filter((c=>c!==base)).concat(s.type).join(",");return`{${s.formula}}[${categories}]`})).join(" + "),splashLabel=splash.map((s=>{const base=damage_1.DamageCategory.fromDamageType(s.type),label=s.categories.filter((c=>c!==base)).concat(s.type).join(" ");return`${s.formula} ${label}`})).join(" + ");notes.push(`<p class="compact-text">[[/roll ${splashRoll} # Splash Damage &lt;code style="display:none;"&gt;suppress-splash-inline-roll&lt;/code&gt;]]{${splashLabel}}</p>`)}return types}(processed,notes,context);if(["both","flavor"].includes(null!=preformatted?preformatted:""));else{const flavor=await renderTemplate("systems/pf2e/templates/chat/damage/damage-card-flavor.html",{breakdown:null!==(_h=null===(_g=message.data.flags.pf2e)||void 0===_g?void 0:_g.breakdown)&&void 0!==_h?_h:[],dataset:{traits:{weapon:CONFIG.PF2E.weaponTraits}},flavor:null!==(_l=null!==(_k=null===(_j=message.data.flags.pf2e)||void 0===_j?void 0:_j.flavor)&&void 0!==_k?_k:originalFlavor)&&void 0!==_l?_l:"",notes:null!==(_o=null===(_m=message.data.flags.pf2e)||void 0===_m?void 0:_m.notes)&&void 0!==_o?_o:notes,outcome:null===(_p=message.data.flags.pf2e)||void 0===_p?void 0:_p.outcome,traits:null!==(_r=null===(_q=message.data.flags.pf2e)||void 0===_q?void 0:_q.traits)&&void 0!==_r?_r:[]});data.flavor=null==flavor?void 0:flavor.trim()}if(["both","content"].includes(null!=preformatted?preformatted:""));else{Object.entries(types).forEach((([type,categories])=>{(!categories||0===Object.keys(categories).length||!Object.values(categories).find((category=>0!==category.modifier||Object.keys(category.results).length>0)))&&delete types[type]}));const formula=Object.entries(types).map((([type,categories])=>{const base=damage_1.DamageCategory.fromDamageType(type);return Object.values(categories).map((result=>{const categories=result.categories.filter((c=>c!==base)).join(" ");return`${result.formula} ${categories} ${type}`})).join(" + ")})).join(" + ")||game.i18n.localize("PF2E.Damage.NoDamageFormulaLabel"),total=Object.values(types).flatMap((categories=>Object.values(categories))).reduce(((accumulator,current)=>accumulator+current.total),0),content=await renderTemplate("systems/pf2e/templates/chat/damage/damage-card-content.html",{damage:{formula,notes,total,types}});if(data.content=content.trim(),!context.suppress.persistentNotes){const roll=message.roll,stripPersistentDamageTerms=terms=>{const copy=terms.filter((term=>{var _a;return!(null===(_a=term.flavor)||void 0===_a?void 0:_a.includes("persistent"))}));return copy.filter((term=>term instanceof PoolTerm)).forEach((term=>{term.terms=stripPersistentDamageTerms(term.terms)})),copy};roll.terms=stripPersistentDamageTerms(roll.terms),roll._formula=formula,roll._total=total,data.roll=JSON.stringify(roll)}}data.flags.pf2e.preformatted="both"}}},24171:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES=exports.BASE_DAMAGE_TYPES_TO_CATEGORIES=exports.DamageCategory=void 0;const util_1=__webpack_require__(6945);exports.DamageCategory=Object.freeze({PHYSICAL:"physical",ENERGY:"energy",ALIGNMENT:"alignment",fromDamageType:damageType=>exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES[damageType]||exports.BASE_DAMAGE_TYPES_TO_CATEGORIES[damageType]||damageType,addCustomDamageType:(category,type)=>{exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES[type]=category},removeCustomDamageType:type=>delete exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES[type],allCategories:()=>new Set(Object.values(exports.BASE_DAMAGE_TYPES_TO_CATEGORIES).concat(Object.values(exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES))),baseCategories:()=>new Set(Object.values(exports.BASE_DAMAGE_TYPES_TO_CATEGORIES)),customCategories:()=>{const result=new Set(Object.values(exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES));for(const base of exports.DamageCategory.baseCategories())result.delete(base);return result},currentTypeMappings:()=>(0,util_1.combineObjects)(exports.BASE_DAMAGE_TYPES_TO_CATEGORIES,exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES,((_first,second)=>second)),toDamageTypes:category=>{const types=Object.entries(exports.DamageCategory.currentTypeMappings()).filter((([_key,value])=>value===category)).map((([key])=>key));return new Set(types)},clearCustom:()=>Object.keys(exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES).forEach((key=>{delete exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES[key]}))}),exports.BASE_DAMAGE_TYPES_TO_CATEGORIES=Object.freeze({bludgeoning:exports.DamageCategory.PHYSICAL,piercing:exports.DamageCategory.PHYSICAL,slashing:exports.DamageCategory.PHYSICAL,acid:exports.DamageCategory.ENERGY,cold:exports.DamageCategory.ENERGY,electricity:exports.DamageCategory.ENERGY,fire:exports.DamageCategory.ENERGY,sonic:exports.DamageCategory.ENERGY,positive:exports.DamageCategory.ENERGY,negative:exports.DamageCategory.ENERGY,force:exports.DamageCategory.ENERGY,chaotic:exports.DamageCategory.ALIGNMENT,evil:exports.DamageCategory.ALIGNMENT,good:exports.DamageCategory.ALIGNMENT,lawful:exports.DamageCategory.ALIGNMENT}),exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES={}},11678:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaponDamagePF2e=void 0;const runes_1=__webpack_require__(35847),modifiers_1=__webpack_require__(27324),damage_1=__webpack_require__(24171),_actor_1=__webpack_require__(85530),predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945);function isNonPhysicalDamage(damageType){return void 0!==damageType&&""!==damageType&&damage_1.DamageCategory.fromDamageType(damageType)!==damage_1.DamageCategory.PHYSICAL}class WeaponDamagePF2e{static calculateStrikeNPC(weapon,actor,traits=[],statisticsModifiers,damageDice,proficiencyRank=0,options=[],rollNotes){var _a,_b,_c,_d;damageDice=duplicate(damageDice),weapon.data.range||(weapon.data.range=Number(null===(_a=traits.find((trait=>/^(?:range|thrown)-/.test(trait.name))))||void 0===_a?void 0:_a.name.replace(/\D/g,""))||null),weapon.data.damage=null!==(_b=weapon.data.damage)&&void 0!==_b?_b:{};const damageRolls=Array.isArray(weapon.data.damageRolls)?weapon.data.damageRolls:Object.values(weapon.data.damageRolls);let parsedBaseDamage=!1;for(const dmg of damageRolls){let dice=null,die=null,modifier=0;const parts=dmg.damage.split("");let digits="",operator=null;for(const part of parts)"d"===part?(dice=Number(digits),digits=""):"+-".includes(part)?(operator?"-"===operator?modifier-=Number(digits):"+"===operator&&(modifier+=Number(digits)):die=`d${digits}`,digits="",operator=part):Number.isNaN(Number(part))||(digits+=part);if(dice&&!die?die=`d${digits}`:"-"===operator?modifier-=Number(digits):modifier+=Number(digits),parsedBaseDamage){if(dice&&die){const dd=null!==(_c=damageDice.damage)&&void 0!==_c?_c:[];dd.push({selector:"damage",name:"Base",diceNumber:dice,dieSize:die,damageType:dmg.damageType}),damageDice.damage=dd}if(modifier){const modifiers=null!==(_d=statisticsModifiers.damage)&&void 0!==_d?_d:[],dm=new modifiers_1.ModifierPF2e("Base",modifier,"untyped");dm.damageType=dmg.damageType,modifiers.push(dm),statisticsModifiers.damage=modifiers}}else{weapon.data.damage.dice=dice||0,weapon.data.damage.die=die||"";const strengthMod=actor.data.data.abilities.str.mod;null===weapon.data.range||traits.some((trait=>/^thrown(?:-\d{1,2})?/.test(trait.name)))?modifier-=strengthMod:traits.some((trait=>"propulsive"===trait.name))&&(modifier-=strengthMod<0?-strengthMod:Math.round(strengthMod/2)),weapon.data.damage.modifier=modifier,weapon.data.damage.damageType=dmg.damageType,parsedBaseDamage=!0}}return WeaponDamagePF2e.calculate(weapon,actor,traits,statisticsModifiers,damageDice,proficiencyRank,options,rollNotes,null,{})}static calculate(weapon,actor,traits=[],statisticsModifiers,damageDice,proficiencyRank=-1,options=[],rollNotes,weaponPotency,striking){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r;let effectDice=null!==(_a=weapon.data.damage.dice)&&void 0!==_a?_a:1;const diceModifiers=[],numericModifiers=[];let baseDamageDie=weapon.data.damage.die,baseDamageType=weapon.data.damage.damageType;options=traits.filter((trait=>!trait.toggle)).map((t=>t.name)).concat(options),proficiencyRank>=0&&options.push(modifiers_1.PROFICIENCY_RANK_OPTION[proficiencyRank]);const actorData=actor.data,isMelee=null===weapon.data.range,strengthModToDamage=isMelee||traits.some((trait=>/^thrown(?:-\d{1,2})?/.test(trait.name)));{options.push(isMelee?"melee":"ranged");const strengthModValue=actorData.data.abilities.str.mod,modifierValue=strengthModToDamage?strengthModValue:traits.some((t=>"propulsive"===t.name))?strengthModValue<0?strengthModValue:Math.floor(strengthModValue/2):null;if("number"==typeof modifierValue){const strModifier=new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities.str,modifierValue,modifiers_1.MODIFIER_TYPE.ABILITY);strModifier.ability="str",numericModifiers.push(strModifier)}}const modifiersAndSelectors=numericModifiers.concat(null!==(_b=statisticsModifiers.damage)&&void 0!==_b?_b:[]).filter((m=>"ability"===m.type)).flatMap((modifier=>{const selectors=WeaponDamagePF2e.getSelectors(weapon,modifier.ability,proficiencyRank);return modifier.predicate.test(options)?{modifier,selectors}:[]})),{selectors}=modifiersAndSelectors.length>0?modifiersAndSelectors.reduce(((best,candidate)=>candidate.modifier.modifier>best.modifier.modifier?candidate:best)):{selectors:WeaponDamagePF2e.getSelectors(weapon,null,proficiencyRank)};traits.some((trait=>"kickback"===trait.name))&&(actor instanceof _actor_1.NPCPF2e&&(weapon.data.damage.modifier-=1),numericModifiers.push(new modifiers_1.ModifierPF2e(CONFIG.PF2E.weaponTraits.kickback,1,modifiers_1.MODIFIER_TYPE.UNTYPED)));const twoHandTrait=traits.find((t=>t.name.toLowerCase().startsWith("two-hand-")&&"toggled-on"===t.cssClass));twoHandTrait&&options.some((o=>o===twoHandTrait.rollOption))&&(baseDamageDie=twoHandTrait.name.substring(twoHandTrait.name.lastIndexOf("-")+1));const versatileTrait=traits.find((t=>t.name.toLowerCase().startsWith("versatile-")&&"toggled-on"===t.cssClass));if(versatileTrait&&options.some((o=>o===versatileTrait.rollOption))){baseDamageType={b:"bludgeoning",p:"piercing",s:"slashing",fire:"fire",positive:"positive"}[versatileTrait.name.substring(versatileTrait.name.lastIndexOf("-")+1)]}const normalDice=null!==(_d=null===(_c=weapon.data.property1)||void 0===_c?void 0:_c.dice)&&void 0!==_d?_d:0;if(normalDice>0){const damageType=null!==(_f=null===(_e=weapon.data.property1)||void 0===_e?void 0:_e.damageType)&&void 0!==_f?_f:baseDamageType;diceModifiers.push(new modifiers_1.DiceModifierPF2e({name:"PF2E.WeaponCustomDamageLabel",diceNumber:normalDice,dieSize:null===(_h=null===(_g=weapon.data)||void 0===_g?void 0:_g.property1)||void 0===_h?void 0:_h.die,damageType,traits:isNonPhysicalDamage(damageType)?[damageType]:[]}))}const critDice=null!==(_k=null===(_j=weapon.data.property1)||void 0===_j?void 0:_j.critDice)&&void 0!==_k?_k:0;if(critDice>0){const damageType=null!==(_l=weapon.data.property1.critDamageType)&&void 0!==_l?_l:baseDamageType;diceModifiers.push(new modifiers_1.DiceModifierPF2e({name:"PF2E.WeaponCustomDamageLabel",diceNumber:critDice,dieSize:weapon.data.property1.critDie,damageType,critical:!0,traits:isNonPhysicalDamage(damageType)?[damageType]:[]}))}const potency=null!==(_m=null==weaponPotency?void 0:weaponPotency.bonus)&&void 0!==_m?_m:0;let strikingDice=0;{const strikingList=[];selectors.forEach((key=>{var _a;(null!==(_a=striking[key])&&void 0!==_a?_a:[]).filter((wp=>predication_1.PredicatePF2e.test(wp.predicate,options))).forEach((wp=>strikingList.push(wp)))}));const strikingRune="weapon"===weapon.type?(0,runes_1.getStrikingDice)(weapon.data):null;if(strikingRune&&strikingList.push({label:"PF2E.StrikingRuneLabel",bonus:strikingRune}),strikingList.length>0){const s=strikingList.reduce(((highest,current)=>highest.bonus>current.bonus?highest:current),strikingList[0]);effectDice+=s.bonus,strikingDice=s.bonus,diceModifiers.push(new modifiers_1.DiceModifierPF2e({name:s.label,diceNumber:s.bonus,traits:["magical"]}))}}if((0,runes_1.getPropertyRuneModifiers)(weapon).forEach((modifier=>diceModifiers.push(modifier))),(0,runes_1.hasGhostTouchRune)(weapon)&&diceModifiers.push(new modifiers_1.DiceModifierPF2e({name:"PF2E.WeaponPropertyRuneGhostTouch",traits:["ghostTouch"]})),traits.some((t=>"backstabber"===t.name))&&options.includes("target:flatFooted")){const modifier=new modifiers_1.ModifierPF2e(CONFIG.PF2E.weaponTraits.backstabber,potency>2?2:1,modifiers_1.MODIFIER_TYPE.UNTYPED);modifier.damageCategory="precision",numericModifiers.push(modifier)}const weaponTraits=CONFIG.PF2E.weaponTraits;traits.filter((t=>t.name.startsWith("deadly-"))).forEach((t=>{const deadly=t.name.substring(t.name.indexOf("-")+1),diceNumber=deadly.match(/\d+d\d+/)?parseInt(deadly.substring(0,deadly.indexOf("d")),10):strikingDice>1?strikingDice:1;diceModifiers.push(new modifiers_1.DiceModifierPF2e({name:weaponTraits[t.name],diceNumber,dieSize:deadly.substring(deadly.indexOf("d")),critical:!0}))})),traits.filter((t=>t.name.startsWith("fatal-d"))).forEach((t=>{const dieSize=t.name.substring(t.name.indexOf("-")+1);diceModifiers.push(new modifiers_1.DiceModifierPF2e({name:weaponTraits[t.name],diceNumber:1,dieSize,critical:!0,enabled:!0,override:{dieSize}}))}));const weaponSpecializationDamage=proficiencyRank>1?proficiencyRank:0;if(weaponSpecializationDamage>0){const has=(slug,name)=>actor.items.some((item=>{var _a;return"feat"===item.type&&((null===(_a=item.slug)||void 0===_a?void 0:_a.startsWith(slug))||item.name.startsWith(name))}));has("greater-weapon-specialization","Greater Weapon Specialization")?numericModifiers.push(new modifiers_1.ModifierPF2e("PF2E.GreaterWeaponSpecialization",2*weaponSpecializationDamage,modifiers_1.MODIFIER_TYPE.UNTYPED)):has("weapon-specialization","Weapon Specialization")&&numericModifiers.push(new modifiers_1.ModifierPF2e("PF2E.WeaponSpecialization",weaponSpecializationDamage,modifiers_1.MODIFIER_TYPE.UNTYPED))}const splashDamage=Number(null===(_o=weapon.data.splashDamage)||void 0===_o?void 0:_o.value)||0;if(splashDamage>0){const modifier=new modifiers_1.ModifierPF2e("PF2E.WeaponSplashDamageLabel",splashDamage,modifiers_1.MODIFIER_TYPE.UNTYPED);modifier.damageCategory="splash",modifier.damageType=weapon.data.damage.damageType,numericModifiers.push(modifier)}const bonusDamage=Number(null===(_p=weapon.data.bonusDamage)||void 0===_p?void 0:_p.value)||0;bonusDamage>0&&numericModifiers.push(new modifiers_1.ModifierPF2e("PF2E.WeaponBonusDamageLabel",bonusDamage,modifiers_1.MODIFIER_TYPE.UNTYPED));const notes=[];selectors.forEach((key=>{var _a,_b,_c;const modifiers=(null!==(_a=statisticsModifiers[key])&&void 0!==_a?_a:[]).map((modifier=>{var _a,_b;return null!==(_b=null===(_a=modifier.clone)||void 0===_a?void 0:_a.call(modifier))&&void 0!==_b?_b:duplicate(modifier)}));for(const modifier of modifiers){const predicate=modifier.predicate instanceof predication_1.PredicatePF2e?modifier.predicate:new predication_1.PredicatePF2e(null!==(_b=modifier.predicate)&&void 0!==_b?_b:{});modifier.ignored=!predicate.test(options),numericModifiers.push(modifier)}(null!==(_c=rollNotes[key])&&void 0!==_c?_c:[]).map((note=>duplicate(note))).filter((note=>predication_1.PredicatePF2e.test(note.predicate,options))).forEach((note=>notes.push(note)))}));const damage={name:`${game.i18n.localize("PF2E.DamageRoll")}: ${weapon.name}`,base:{diceNumber:weapon.data.damage.dice,dieSize:baseDamageDie,modifier:weapon.data.damage.modifier,category:damage_1.DamageCategory.fromDamageType(baseDamageType),damageType:baseDamageType,traits:[]},effectDice,diceModifiers,numericModifiers,traits:(null!=traits?traits:[]).map((t=>t.name)),formula:{}};{const stats=[];stats.push(`${(0,_util_1.sluggify)(weapon.name)}-damage`);const baseItem=null!==(_r=CONFIG.PF2E.equivalentWeapons[null!==(_q=weapon.data.baseItem)&&void 0!==_q?_q:""])&&void 0!==_r?_r:weapon.data.baseItem;baseItem&&!stats.includes(`${baseItem}-damage`)&&stats.push(`${baseItem}-damage`),stats.concat([`${weapon._id}-damage`,"damage"]).forEach((key=>{(damageDice[key]||[]).map((d=>new modifiers_1.DamageDicePF2e(d))).forEach((d=>{d.enabled=d.predicate.test(options),diceModifiers.push(d)}))}))}diceModifiers.forEach((d=>{var _a;d.name=game.i18n.localize(d.name),d.diceNumber>0&&d.dieSize?d.name+=` +${d.diceNumber}${d.dieSize}`:d.diceNumber>0?d.name+=` +${d.diceNumber}${damage.base.dieSize}`:d.dieSize&&(d.name+=` ${d.dieSize}`),d.category&&(d.diceNumber>0||d.dieSize)&&(!d.damageType||d.damageType===damage.base.damageType&&d.category!==damage.base.category)&&(d.name+=` ${d.category}`),d.label=d.name,d.enabled=new predication_1.PredicatePF2e(null!==(_a=d.predicate)&&void 0!==_a?_a:{}).test(options),d.ignored=!d.enabled})),this.excludeDamage(actor,numericModifiers,options),this.excludeDamage(actor,diceModifiers,options);for(const[key,modifiers]of Object.entries(statisticsModifiers))key.endsWith("damage")&&this.excludeDamage(actor,modifiers,options);return damage.formula.success=this.getFormula(damage,!1),damage.formula.criticalSuccess=this.getFormula(damage,!0),damage.notes=notes,damage}static getFormula(damage,critical){var _a,_b;const base=duplicate(damage.base),diceModifiers=damage.diceModifiers;diceModifiers.filter((dm=>dm.enabled)).filter((dm=>dm.override)).forEach((dm=>{var _a,_b,_c,_d,_e,_f,_g,_h;critical&&dm.critical?(base.dieSize=null!==(_b=null===(_a=dm.override)||void 0===_a?void 0:_a.dieSize)&&void 0!==_b?_b:base.dieSize,base.damageType=null!==(_d=null===(_c=dm.override)||void 0===_c?void 0:_c.damageType)&&void 0!==_d?_d:base.damageType):dm.critical||(base.dieSize=null!==(_f=null===(_e=dm.override)||void 0===_e?void 0:_e.dieSize)&&void 0!==_f?_f:base.dieSize,base.damageType=null!==(_h=null===(_g=dm.override)||void 0===_g?void 0:_g.damageType)&&void 0!==_h?_h:base.damageType)}));const dicePool={},critPool={};dicePool[base.damageType]={base:!0,categories:{[null!==(_a=base.category)&&void 0!==_a?_a:damage_1.DamageCategory.fromDamageType(base.damageType)]:{dice:{[base.dieSize]:base.diceNumber},modifier:null!==(_b=base.modifier)&&void 0!==_b?_b:0}}},diceModifiers.filter((dm=>dm.enabled)).filter((dm=>!dm.critical||critical)).forEach((dm=>{var _a,_b,_c,_d,_e,_f;critical&&dm.critical?(dm.diceNumber&&this.addDice(critPool,null!==(_a=dm.damageType)&&void 0!==_a?_a:base.damageType,dm.category,null!==(_b=dm.dieSize)&&void 0!==_b?_b:base.dieSize,dm.diceNumber),(null!==(_c=dm.traits)&&void 0!==_c?_c:[]).forEach((t=>{damage.traits.includes(t)||damage.traits.push(t)}))):dm.critical||(dm.diceNumber&&this.addDice(dicePool,null!==(_d=dm.damageType)&&void 0!==_d?_d:base.damageType,dm.category,null!==(_e=dm.dieSize)&&void 0!==_e?_e:base.dieSize,dm.diceNumber),(null!==(_f=dm.traits)&&void 0!==_f?_f:[]).forEach((t=>{damage.traits.includes(t)||damage.traits.push(t)})))}));{const modifiers=[];damage.numericModifiers.filter((nm=>nm.enabled&&(!nm.critical||critical))).forEach((nm=>{critical&&"splash"===nm.damageCategory||(critical&&nm.critical?modifiers.push(nm):nm.critical||modifiers.push(nm))})),Object.entries(modifiers.reduce(((accumulator,current)=>{var _a,_b;const dmg=null!==(_a=current.damageType)&&void 0!==_a?_a:base.damageType;return accumulator[dmg]=(null!==(_b=accumulator[dmg])&&void 0!==_b?_b:[]).concat(current),accumulator}),{})).map((([damageType,damageTypeModifiers])=>new modifiers_1.StatisticModifier(`${damageType}-damage-stacking-rules`,damageTypeModifiers).modifiers)).flatMap((nm=>nm)).filter((nm=>nm.enabled)).filter((nm=>!nm.critical||critical)).forEach((nm=>{var _a,_b,_c,_d,_e;const damageType=null!==(_a=nm.damageType)&&void 0!==_a?_a:base.damageType;let pool=dicePool[damageType];pool||(pool={categories:{}},dicePool[damageType]=pool);let category=pool.categories[null!==(_b=nm.damageCategory)&&void 0!==_b?_b:damage_1.DamageCategory.fromDamageType(damageType)];category||(category={},pool.categories[null!==(_c=nm.damageCategory)&&void 0!==_c?_c:damage_1.DamageCategory.fromDamageType(damageType)]=category),category.modifier=(null!==(_d=category.modifier)&&void 0!==_d?_d:0)+nm.modifier,(null!==(_e=nm.traits)&&void 0!==_e?_e:[]).filter((t=>!damage.traits.includes(t))).forEach((t=>{damage.traits.push(t)}))}))}const partials={};let formula=this.buildFormula(dicePool,partials);if(critical){formula=this.doubleFormula(formula);const splashDamage=damage.numericModifiers.find((modifier=>modifier.enabled&&"splash"===modifier.damageCategory));splashDamage&&(formula+=` + ${splashDamage.modifier}`);for(const[damageType,categories]of Object.entries(partials))for(const[damageCategory,f]of Object.entries(categories))partials[damageType][damageCategory]=this.doubleFormula(f),(null==splashDamage?void 0:splashDamage.damageType)===damageType&&(partials[damageType][damageCategory]+=` + ${splashDamage.modifier}`);const critFormula=this.buildFormula(critPool,partials);critFormula&&(formula+=` + ${critFormula}`)}return{formula,partials,data:{effectiveDamageDice:damage.effectDice}}}static addDice(pool,damageType,category,dieSize,count){var _a;pool[damageType]=pool[damageType]||{categories:{}};const damagePool=pool[damageType];damagePool.categories[null!=category?category:damage_1.DamageCategory.fromDamageType(damageType)]=damagePool.categories[null!=category?category:damage_1.DamageCategory.fromDamageType(damageType)]||{};const damageCategory=damagePool.categories[null!=category?category:damage_1.DamageCategory.fromDamageType(damageType)];return damageCategory.dice=damageCategory.dice||{},damageCategory.dice[dieSize]=(null!==(_a=damageCategory.dice[dieSize])&&void 0!==_a?_a:0)+count,pool}static buildFormula(pool,partials={}){var _a,_b;const parts=[];let minValue=0;for(const[type,cats]of Object.entries(pool))for(const[category,info]of Object.entries(cats.categories)){const p=[];for(const[dieSize,count]of Object.entries(null!==(_a=info.dice)&&void 0!==_a?_a:{}))minValue+=count,parts.push(`${count}${dieSize}`),p.push(`${count}${dieSize}`);info.modifier&&(minValue+=info.modifier,parts.push(info.modifier.toString()),p.push(info.modifier.toString())),partials[type]=null!==(_b=partials[type])&&void 0!==_b?_b:{};let formula=partials[type][category],offset=0;formula||(formula=p[0],offset=1),partials[type][category]=[formula].concat(p.slice(offset).flatMap((part=>part.startsWith("-")?["-",part.substring(1)]:["+",part]))).join(" ")}if(0===parts.length)return"";const formula=[parts[0]].concat(parts.slice(1).flatMap((part=>part.startsWith("-")?["-",part.substring(1)]:["+",part]))).join(" ");return minValue<=0?`{${formula}, 1}kh`:formula}static excludeDamage(actor,modifiers,options){var _a,_b;const notIgnored=modifiers.filter((modifier=>!modifier.ignored));for(const rule of actor.rules)null===(_a=rule.applyDamageExclusion)||void 0===_a||_a.call(rule,notIgnored);for(const modifier of notIgnored)modifier.ignored=!new predication_1.PredicatePF2e(null!==(_b=modifier.predicate)&&void 0!==_b?_b:{}).test(options)}static doubleFormula(formula){if("doubledamage"===game.settings.get("pf2e","critRule"))return`2 * (${formula})`;return new Roll(formula).alter(2,0,{multiplyNumeric:!0}).formula}static getSelectors(weapon,ability,proficiencyRank){var _a,_b;const selectors=[];if(weapon.data.group&&selectors.push(`${weapon.data.group.toLowerCase()}-weapon-group-damage`),ability&&selectors.push(`${ability}-damage`),proficiencyRank>=0){const proficiencies=["untrained","trained","expert","master","legendary"];selectors.push(`${proficiencies[proficiencyRank]}-damage`)}const baseType=null!==(_b=CONFIG.PF2E.equivalentWeapons[null!==(_a=weapon.data.baseItem)&&void 0!==_a?_a:""])&&void 0!==_b?_b:weapon.data.baseItem;return selectors.push(`${(0,_util_1.sluggify)(weapon.name)}-damage`),baseType&&!selectors.includes(`${baseType}-damage`)&&selectors.push(`${baseType}-damage`),selectors.concat([`${weapon._id}-damage`,"mundane-damage","damage"])}}exports.WeaponDamagePF2e=WeaponDamagePF2e},42621:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectTracker=void 0;const creature_1=__webpack_require__(30653);exports.EffectTracker=class{constructor(){this.trackedEffects=[]}insert(effect,duration){var _a,_b,_c,_d;if(0===this.trackedEffects.length)this.trackedEffects.push(effect);else{for(let index=0;index<this.trackedEffects.length;index++){const other=this.trackedEffects[index],remaining=other.remainingDuration.remaining;if(duration.remaining>remaining);else{if(remaining>duration.remaining)return void this.trackedEffects.splice(index,0,effect);if((null!==(_a=effect.data.data.start.initiative)&&void 0!==_a?_a:0)>(null!==(_b=other.data.data.start.initiative)&&void 0!==_b?_b:0));else{if((null!==(_c=other.data.data.start.initiative)&&void 0!==_c?_c:0)>(null!==(_d=effect.data.data.start.initiative)&&void 0!==_d?_d:0))return void this.trackedEffects.splice(index,0,effect);if("turn-start"===other.data.data.duration.expiry&&"turn-end"===effect.data.data.duration.expiry)return void this.trackedEffects.splice(index,0,effect)}}}this.trackedEffects.push(effect)}}register(effect){const index=this.trackedEffects.findIndex((e=>e.id===effect.id));if("unlimited"===effect.data.data.duration.unit)return effect.data.data.expired=!1,void(index>=0&&index<this.trackedEffects.length&&this.trackedEffects.splice(index,1));const duration=effect.remainingDuration;if(effect.data.data.expired=duration.expired,0===this.trackedEffects.length||index<0)this.insert(effect,duration);else{const existing=this.trackedEffects[index];duration.remaining!==existing.remainingDuration.remaining&&(this.trackedEffects.splice(index,1),this.insert(effect,duration))}}unregister(toRemove){this.trackedEffects=this.trackedEffects.filter((effect=>effect!==toRemove))}async refresh(){var e_1,_a;const expired=[];for(const effect of this.trackedEffects){const duration=effect.remainingDuration;if(effect.data.data.expired!==duration.expired)expired.push(effect);else if(!duration.expired)break}const updatedActors=expired.map((effect=>effect.actor)).reduce(((actors,actor)=>(!actor.isToken&&actors.some((other=>!other.isToken&&other.id===actor.id))||actors.push(actor),actors)),[]);try{for(var updatedActors_1_1,updatedActors_1=__asyncValues(updatedActors);!(updatedActors_1_1=await updatedActors_1.next()).done;){const actor=updatedActors_1_1.value;actor.prepareData(),actor.sheet.render(!1),actor instanceof creature_1.CreaturePF2e&&actor.redrawTokenEffects()}}catch(e_1_1){e_1={error:e_1_1}}finally{try{updatedActors_1_1&&!updatedActors_1_1.done&&(_a=updatedActors_1.return)&&await _a.call(updatedActors_1)}finally{if(e_1)throw e_1.error}}}async removeExpired(actor){var e_2,_a;const expired=[];for(let index=0;index<this.trackedEffects.length;index++){const effect=this.trackedEffects[index];if(actor&&effect.actor!==actor)continue;if(!effect.remainingDuration.expired)break;expired.push(effect)}const owners=actor?[actor]:[...new Set(expired.map((effect=>effect.actor)))].filter((owner=>game.actors.has(owner.id)));try{for(var owners_1_1,owners_1=__asyncValues(owners);!(owners_1_1=await owners_1.next()).done;){const owner=owners_1_1.value;await owner.deleteEmbeddedDocuments("Item",expired.flatMap((effect=>owner.items.has(effect.id)?effect.id:[])))}}catch(e_2_1){e_2={error:e_2_1}}finally{try{owners_1_1&&!owners_1_1.done&&(_a=owners_1.return)&&await _a.call(owners_1)}finally{if(e_2)throw e_2.error}}}}},19330:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorImporter=void 0;const _actor_1=__webpack_require__(85530),manager_1=__webpack_require__(88297),_util_1=__webpack_require__(6945);exports.ActorImporter=class{static async addAncestry(character,ancestry,options){if(!(character instanceof _actor_1.CharacterPF2e))throw(0,_util_1.ErrorPF2e)("Invalid Actor type. Ancestry items can only be added to characters.");return"string"==typeof ancestry&&(ancestry=await manager_1.AncestryBackgroundClassManager.getItemSource("pf2e.ancestries",ancestry)),manager_1.AncestryBackgroundClassManager.addABCItem(ancestry,character,options)}static async addBackground(character,background,options){if(!(character instanceof _actor_1.CharacterPF2e))throw(0,_util_1.ErrorPF2e)("Invalid Actor type. Background items can only be added to characters.");return"string"==typeof background&&(background=await manager_1.AncestryBackgroundClassManager.getItemSource("pf2e.backgrounds",background)),manager_1.AncestryBackgroundClassManager.addABCItem(background,character,options)}static async addClass(character,cls,options){if(!(character instanceof _actor_1.CharacterPF2e))throw(0,_util_1.ErrorPF2e)("Invalid Actor type. Class items can only be added to characters.");return"string"==typeof cls&&(cls=await manager_1.AncestryBackgroundClassManager.getItemSource("pf2e.classes",cls)),manager_1.AncestryBackgroundClassManager.addABCItem(cls,character,options)}}},41332:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LocalizePF2e=void 0;const _util_1=__webpack_require__(6945);class LocalizePF2e{static get translations(){if(!this.ready)throw(0,_util_1.ErrorPF2e)("LocalizePF2e instantiated too early");return void 0===this._translations&&(this._translations=mergeObject(game.i18n._fallback,game.i18n.translations,{enforceTypes:!0})),this._translations}}exports.LocalizePF2e=LocalizePF2e,LocalizePF2e.ready=!1},78921:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const canvas_1=__webpack_require__(85336),scene_1=__webpack_require__(12789);TemplateLayer.prototype._onDragLeftStart=function(event){PlaceablesLayer.prototype._onDragLeftStart.call(this,event);const tool=game.activeTool,origin=event.data.origin,pos=canvas.grid.getSnappedPosition(origin.x,origin.y,2);origin.x=pos.x,origin.y=pos.y;const data={user:game.user.id,t:tool,x:pos.x,y:pos.y,distance:canvas.dimensions.distance,direction:0,fillColor:game.user.data.color||"#FF0000"};"cone"===tool?data.angle=90:"ray"===tool&&(data.width=canvas.dimensions.distance);const template=new canvas_1.MeasuredTemplatePF2e(new scene_1.MeasuredTemplateDocumentPF2e(data,{parent:canvas.scene}));event.data.preview=this.preview.addChild(template),template.draw()},TemplateLayer.prototype._onDragLeftMove=function(event){if(PlaceablesLayer.prototype._onDragLeftMove.call(this,event),event.data.createState>=1){const dest=event.data.destination,{x,y}=canvas.grid.getSnappedPosition(dest.x,dest.y,2);dest.x=x,dest.y=y;const template=event.data.preview,ray=new Ray(event.data.origin,event.data.destination),ratio=canvas.dimensions.size/canvas.dimensions.distance;if(["cone","circle"].includes(template.data.t)){const direction=ray.angle;template.data.direction=Math.toDegrees(Math.floor((direction+.125*Math.PI)/(.25*Math.PI))*(.25*Math.PI));const distance=Math.max(ray.distance/ratio,canvas.dimensions.distance);template.data.distance=Math.floor(distance/canvas.dimensions.distance)*canvas.dimensions.distance}else template.data.direction=Math.toDegrees(ray.angle),template.data.distance=ray.distance/ratio;template.refresh(),event.data.createState=2}}},538:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PredicatePF2e=void 0;class PredicatePF2e{constructor(param={all:[],any:[],not:[]}){var _a,_b,_c;this.all=deepClone(null!==(_a=param.all)&&void 0!==_a?_a:[]),this.any=deepClone(null!==(_b=param.any)&&void 0!==_b?_b:[]),this.not=deepClone(null!==(_c=param.not)&&void 0!==_c?_c:[]),this.isValid=this.validate()}static test(predicate={},options=[]){return predicate instanceof PredicatePF2e?predicate.test(options):new PredicatePF2e(predicate).test(options)}validate(){return["all","any","not"].every((operator=>Array.isArray(this[operator])&&this[operator].every((statement=>class{static validate(statement){return this.isStatement(statement)}static isStatement(statement){return statement instanceof Object?this.isCompound(statement):"string"==typeof statement&&this.isAtomic(statement)}static isAtomic(statement){return"string"==typeof statement&&statement.length>0}static isCompound(statement){return this.isAnd(statement)||this.isOr(statement)||this.isNor(statement)||this.isNot(statement)||this.isIf(statement)}static isAnd(statement){return 1===Object.keys(statement).length&&Array.isArray(statement.and)&&statement.and.every((subProp=>this.isStatement(subProp)))}static isOr(statement){return 1===Object.keys(statement).length&&Array.isArray(statement.or)&&statement.or.every((subProp=>this.isStatement(subProp)))}static isNor(statement){return 1===Object.keys(statement).length&&Array.isArray(statement.nor)&&statement.nor.every((subProp=>this.isStatement(subProp)))}static isNot(statement){return 1===Object.keys(statement).length&&!!statement.not&&this.isStatement(statement.not)}static isIf(statement){return 2===Object.keys(statement).length&&this.isStatement(statement.if)&&this.isStatement(statement.then)}}.validate(statement)))))}test(options=[]){if(!this.isValid)return console.error("PF2e System | The provided predicate set is malformed."),!1;const domain=new Set(options),{all,any,not}=this;return all.every((p=>this.isTrue(p,domain)))&&!not.some((p=>this.isTrue(p,domain)))&&(0===any.length||any.some((p=>this.isTrue(p,domain))))}isTrue(statement,domain){return"string"==typeof statement&&domain.has(statement)||"string"!=typeof statement&&this.testCompound(statement,domain)}testCompound(statement,domain){return"and"in statement&&statement.and.every((subProp=>this.isTrue(subProp,domain)))||"or"in statement&&statement.or.some((subProp=>this.isTrue(subProp,domain)))||"nor"in statement&&!statement.nor.some((subProp=>this.isTrue(subProp,domain)))||"not"in statement&&!this.isTrue(statement.not,domain)||"if"in statement&&!(this.isTrue(statement.if,domain)&&!this.isTrue(statement.then,domain))}}exports.PredicatePF2e=PredicatePF2e},87525:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DamageRollPF2e=exports.CheckPF2e=void 0;const check_modifiers_dialog_1=__webpack_require__(87252),_actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),damage_roll_modifiers_dialog_1=__webpack_require__(24277),modifiers_1=__webpack_require__(27324),check_degree_of_success_1=__webpack_require__(40093),degree_of_success_1=__webpack_require__(7859),chat_message_1=__webpack_require__(40405),_util_1=__webpack_require__(6945),_scene_1=__webpack_require__(12789),user_1=__webpack_require__(81781),predication_1=__webpack_require__(538);class CheckPF2e{static async roll(check,context={},event,callback){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o;if((null===(_a=context.options)||void 0===_a?void 0:_a.length)&&!context.isReroll&&(context.isReroll=!1,check.modifiers.forEach((modifier=>{modifier.ignored=!predication_1.PredicatePF2e.test(modifier.predicate,context.options)})),check.applyStackingRules(),context.options.map((o=>o.toLowerCase())).includes("secret")&&(context.secret=!0)),context){const visible=note=>{var _a;return predication_1.PredicatePF2e.test(note.predicate,null!==(_a=context.options)&&void 0!==_a?_a:[])};if(context.notes=(null!==(_b=context.notes)&&void 0!==_b?_b:[]).filter(visible),context.dc){const{adjustments}=context.dc;adjustments&&adjustments.forEach((adjustment=>{var _a,_b,_c;(!adjustment.predicate||predication_1.PredicatePF2e.test(adjustment.predicate,null!==(_a=context.options)&&void 0!==_a?_a:[]))&&(null!==(_b=(_c=context.dc).modifiers)&&void 0!==_b||(_c.modifiers={}),mergeObject(context.dc.modifiers,adjustment.modifiers))}))}}((null==event?void 0:event.ctrlKey)||(null==event?void 0:event.metaKey))&&(context.secret=!0);if(!game.user.getFlag("pf2e","settings.showRollDialogs")===(null==event?void 0:event.shiftKey)&&!context.skipDialog){const dialogClosed=new Promise((resolve=>{new check_modifiers_dialog_1.CheckModifiersDialog(check,resolve,context).render(!0)}));if(!await dialogClosed)return null}const options=[],ctx=context;let dice="1d20";null!==(_c=ctx.fate)&&void 0!==_c||(ctx.fate="none"),"misfortune"===ctx.fate?(dice="2d20kl",options.push("PF2E.TraitMisfortune")):"fortune"===ctx.fate&&(dice="2d20kh",options.push("PF2E.TraitFortune"));const speaker={};ctx.actor instanceof _actor_1.ActorPF2e&&(speaker.actor=ctx.actor,ctx.actor=ctx.actor.id),ctx.token instanceof _scene_1.TokenDocumentPF2e&&(ctx.token=ctx.token.id),ctx.user instanceof user_1.UserPF2e&&(ctx.user=ctx.user.id);const item=context.item;delete context.item,ctx.rollMode=null!==(_f=null!==(_e=null!==(_d=ctx.rollMode)&&void 0!==_d?_d:ctx.secret?"blindroll":void 0)&&void 0!==_e?_e:game.settings.get("core","rollMode"))&&void 0!==_f?_f:"roll";const modifierBreakdown=check.modifiers.filter((m=>m.enabled)).map((m=>{var _a;return`<span class="tag tag_alt">${game.i18n.localize(null!==(_a=m.label)&&void 0!==_a?_a:m.name)} ${m.modifier<0?"":"+"}${m.modifier}</span>`})).join(""),optionBreakdown=options.map((o=>`<span class="tag tag_secondary">${game.i18n.localize(o)}</span>`)).join(""),totalModifierPart=0===check.totalModifier?"":`+${check.totalModifier}`,roll=await new Roll(`${dice}${totalModifierPart}`,check).evaluate({async:!0});let flavor=`<strong>${check.name}</strong>`;if("spell-attack-roll"===ctx.type&&(null===(_g=game.modules.get("pf2qr"))||void 0===_g?void 0:_g.active)&&(flavor=flavor.replace(/^<strong>/,'<strong data-pf2qr-hint="Attack Roll">')),ctx.dc){const degreeOfSuccess=(0,check_degree_of_success_1.getDegreeOfSuccess)(roll,ctx.dc),degreeOfSuccessText=check_degree_of_success_1.DegreeOfSuccessText[degreeOfSuccess.value];ctx.outcome=degreeOfSuccessText,roll.data.degreeOfSuccess=degreeOfSuccess.value;"string"==typeof ctx.dc.label&&Number.isInteger(ctx.dc.value)&&!ctx.dc.label.includes("{dc}")&&ctx.dc.label&&(ctx.dc.label=`${ctx.dc.label.trim()}: {dc}`);const dcLabel=game.i18n.format(null!==(_h=ctx.dc.label)&&void 0!==_h?_h:"PF2E.DCLabel",{dc:ctx.dc.value}),showDC=null!==(_j=ctx.dc.visibility)&&void 0!==_j?_j:game.settings.get("pf2e","metagame.showDC");flavor+=`<div data-visibility="${showDC}"><b>${dcLabel}</b></div>`;const adjustment=(()=>{switch(degreeOfSuccess.degreeAdjustment){case degree_of_success_1.DegreeAdjustment.INCREASE_BY_TWO:return game.i18n.localize("PF2E.TwoDegreesBetter");case degree_of_success_1.DegreeAdjustment.INCREASE:return game.i18n.localize("PF2E.OneDegreeBetter");case degree_of_success_1.DegreeAdjustment.LOWER:return game.i18n.localize("PF2E.OneDegreeWorse");case degree_of_success_1.DegreeAdjustment.LOWER_BY_TWO:return game.i18n.localize("PF2E.TwoDegreesWorse");default:return null}})(),adjustmentLabel=adjustment?` (${adjustment})`:"";ctx.unadjustedOutcome=check_degree_of_success_1.DegreeOfSuccessText[degreeOfSuccess.unadjusted];const resultLabel=game.i18n.localize("PF2E.ResultLabel"),degreeLabel=game.i18n.localize(`PF2E.${null!==(_k=ctx.dc.scope)&&void 0!==_k?_k:"CheckOutcome"}.${degreeOfSuccessText}`),showResult=null!==(_l=ctx.dc.visibility)&&void 0!==_l?_l:game.settings.get("pf2e","metagame.showResults"),offsetLabel=(()=>{var _a;return game.i18n.format("PF2E.ResultOffset",{offset:new Intl.NumberFormat(game.i18n.lang,{maximumFractionDigits:0,signDisplay:"always",useGrouping:!1}).format(roll.total-(null!==(_a=ctx.dc.value)&&void 0!==_a?_a:0))})})();flavor+=`<div data-visibility="${showResult}" class="degree-of-success">`,flavor+=`<b>${resultLabel}: <span class="${degreeOfSuccessText}">${degreeLabel} `,flavor+=showResult===showDC?offsetLabel:`<span data-visibility=${showDC}>${offsetLabel}</span>`,flavor+=`</span></b> ${adjustmentLabel}`,flavor+="</div>"}const notes=(null!==(_m=ctx.notes)&&void 0!==_m?_m:[]).filter((note=>!ctx.dc||0===note.outcome.length||!(!ctx.outcome||!ctx.unadjustedOutcome||!note.outcome.includes(ctx.outcome)&&!note.outcome.includes(ctx.unadjustedOutcome)))).map((note=>game.pf2e.TextEditor.enrichHTML(note.text))).join("<br />");if(ctx.traits){flavor+=`<div class="tags">\n${ctx.traits.map((trait=>(trait.label=game.i18n.localize(trait.label),trait))).sort(((a,b)=>a.label.localeCompare(b.label))).map((trait=>{const $trait=$("<span>").addClass("tag").attr({"data-trait":trait.name}).text(trait.label);return trait.description&&$trait.attr({"data-description":trait.description}),$trait.prop("outerHTML")})).join("")}\n${(()=>{var _a;if(item instanceof _item_1.WeaponPF2e&&item.isRanged){return[`<span class="tag tag_secondary">${game.i18n.format("PF2E.Item.Weapon.RangeIncrementN",{range:null!==(_a=item.range)&&void 0!==_a?_a:10})}</span>`]}return[]})().join("")}</div><hr />`}flavor+=`<div class="tags">${modifierBreakdown}${optionBreakdown}</div>${notes}`,ctx.options&&ctx.options.indexOf("incapacitation")>-1&&(flavor+=`<p class="compact-text"><strong>${game.i18n.localize("PF2E.TraitIncapacitation")}:</strong> `,flavor+=`${game.i18n.localize("PF2E.TraitDescriptionIncapacitationShort")}</p>`);const origin=item?{uuid:item.uuid,type:item.type}:null,message=await roll.toMessage({speaker:ChatMessage.getSpeaker(speaker),flavor,flags:{core:{canPopout:!0},pf2e:{canReroll:!["fortune","misfortune"].includes(ctx.fate),context,unsafe:flavor,modifierName:check.name,modifiers:check.modifiers,origin}}},{rollMode:null!==(_o=ctx.rollMode)&&void 0!==_o?_o:"roll",create:void 0===ctx.createMessage||ctx.createMessage});return callback&&await callback(roll,ctx.outcome,message),roll}static async rerollFromMessage(message,{heroPoint=!1,keep="new"}={}){var _a,_b,_c;if(!message.isAuthor&&!game.user.isGM)return void ui.notifications.error(game.i18n.localize("PF2E.RerollMenu.ErrorCantDelete"));const actor=game.actors.get(null!==(_a=message.data.speaker.actor)&&void 0!==_a?_a:"");let rerollFlavor=game.i18n.localize(`PF2E.RerollMenu.MessageKeep.${keep}`);if(heroPoint){if(!(actor instanceof _actor_1.CharacterPF2e))return void ui.notifications.error(game.i18n.localize("PF2E.RerollMenu.ErrorNoActor"));{const heroPointCount=actor.heroPoints.value;if(!heroPointCount)return void ui.notifications.warn(game.i18n.format("PF2E.RerollMenu.WarnNoHeroPoint",{name:actor.name}));await actor.update({"data.resources.heroPoints.value":Math.clamped(heroPointCount-1,0,3)}),rerollFlavor=game.i18n.format("PF2E.RerollMenu.MessageHeroPoint",{name:actor.name})}}const flags=duplicate(message.data.flags.pf2e),modifiers=(null!==(_b=flags.modifiers)&&void 0!==_b?_b:[]).map((modifier=>modifiers_1.ModifierPF2e.fromObject(modifier))),check=new modifiers_1.StatisticModifier(null!==(_c=flags.modifierName)&&void 0!==_c?_c:"",modifiers),context=flags.context;context&&(context.createMessage=!1,context.skipDialog=!0,context.isReroll=!0,await CheckPF2e.roll(check,context,void 0,(async(newRoll,_degreeOfSuccess,newMessage)=>{var _a,_b;if(!(newRoll instanceof Roll))return;const oldRoll=message.roll;let keepRoll=newRoll,[oldRollClass,newRollClass]=["pf2e-reroll-discard",""];("best"===keep&&oldRoll.total>newRoll.total||"worst"===keep&&oldRoll.total<newRoll.total)&&([oldRollClass,newRollClass]=[newRollClass,oldRollClass],keepRoll=oldRoll);const renders_old=await CheckPF2e.renderReroll(oldRoll),renders_new=await CheckPF2e.renderReroll(newRoll),rerollIcon=(0,_util_1.fontAwesomeIcon)(heroPoint?"hospital-symbol":"dice");rerollIcon.classList.add("pf2e-reroll-indicator"),rerollIcon.setAttribute("title",rerollFlavor),await message.delete({render:!1});const newFlavor=null!==(_a=newMessage instanceof chat_message_1.ChatMessagePF2e?newMessage.data.flavor:newMessage.flavor)&&void 0!==_a?_a:"";await keepRoll.toMessage({content:`<div class="${oldRollClass}">${renders_old}</div><div class="pf2e-reroll-second ${newRollClass}">${renders_new}</div>`,flavor:`${rerollIcon.outerHTML}${newFlavor}`,speaker:message.data.speaker,flags:{pf2e:flags}},{rollMode:null!==(_b=null==context?void 0:context.rollMode)&&void 0!==_b?_b:"roll"})})))}static async renderReroll(roll){let rollHtml=await roll.render();if(0===roll.dice.length)return rollHtml;const die=roll.dice[0];return 20===die.total?rollHtml=CheckPF2e.insertNatOneAndNatTwentyIntoRollTemplate(rollHtml,"success"):1===die.total&&(rollHtml=CheckPF2e.insertNatOneAndNatTwentyIntoRollTemplate(rollHtml,"failure")),rollHtml}static insertNatOneAndNatTwentyIntoRollTemplate(rollHtml,classToInsert){const locationOfDiceRoll=rollHtml.search("dice-total"),partBeforeClass=rollHtml.substr(0,locationOfDiceRoll),partAfterClass=rollHtml.substr(locationOfDiceRoll,rollHtml.length);return partBeforeClass.concat(classToInsert," ",partAfterClass)}}exports.CheckPF2e=CheckPF2e;exports.DamageRollPF2e=class{static roll(damage,context={},_event,callback){var _a;context.options&&(null===(_a=context.options)||void 0===_a?void 0:_a.length)>0&&context.options.map((o=>o.toLowerCase())).includes("secret")&&(context.secret=!0),damage_roll_modifiers_dialog_1.DamageRollModifiersDialog.roll(damage,context,callback)}}},47612:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AutomationSettings=void 0;const menu_1=__webpack_require__(69593);class AutomationSettings extends menu_1.SettingsMenuPF2e{static get settings(){return{rulesBasedVision:{name:CONFIG.PF2E.SETTINGS.automation.rulesBasedVision.name,hint:CONFIG.PF2E.SETTINGS.automation.rulesBasedVision.hint,default:!0,type:Boolean,onChange:()=>{window.location.reload()}},effectExpiration:{name:CONFIG.PF2E.SETTINGS.automation.effectExpiration.name,hint:CONFIG.PF2E.SETTINGS.automation.effectExpiration.hint,default:!0,type:Boolean,onChange:()=>{game.actors.forEach((actor=>{actor.prepareData(),actor.sheet.render(!1),actor.getActiveTokens().forEach((token=>token.drawEffects()))}))}},lootableNPCs:{name:CONFIG.PF2E.SETTINGS.automation.lootableNPCs.name,hint:CONFIG.PF2E.SETTINGS.automation.lootableNPCs.hint,default:!1,type:Boolean},experimentalDamageFormatting:{name:CONFIG.PF2E.SETTINGS.automation.experimentalDamageFormatting.name,hint:CONFIG.PF2E.SETTINGS.automation.experimentalDamageFormatting.hint,default:!1,type:Boolean}}}}exports.AutomationSettings=AutomationSettings,AutomationSettings.namespace="automation",AutomationSettings.SETTINGS=["rulesBasedVision","effectExpiration","lootableNPCs","experimentalDamageFormatting"]},15759:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.prepareCleanup=void 0;const base_1=__webpack_require__(54310),_util_1=__webpack_require__(6945),base_2=__webpack_require__(27981);exports.prepareCleanup=function(listKey,deletions){var _a;return new((_a=class extends base_1.MigrationBase{async updateActor(actorData){if("character"===actorData.type||"npc"===actorData.type)switch(listKey){case"creatureTraits":{const traits=actorData.data.traits.traits;traits.value=traits.value.filter((trait=>!deletions.includes(trait)));break}case"languages":{const languages=actorData.data.traits.languages;languages.value=languages.value.filter((language=>!deletions.includes(language)));break}case"weaponCategories":if("character"===actorData.type)for(const key of deletions)(0,_util_1.objectHasKey)(actorData.data.martial,key)&&(delete actorData.data.martial[key],actorData.data.martial[`-=${key}`]=null);break;case"weaponGroups":if("character"===actorData.type){const proficiencyKeys=deletions.map((deletion=>`weapon-group-${deletion}`));for(const key of proficiencyKeys)delete actorData.data.martial[key],actorData.data.martial[`-=${key}`]=null}break;case"baseWeapons":if("character"===actorData.type){const proficiencyKeys=deletions.map((deletion=>`weapon-base-${deletion}`));for(const key of proficiencyKeys)delete actorData.data.martial[key],actorData.data.martial[`-=${key}`]=null}break;case"weaponTraits":{const weaponsAndAttacks=actorData.items.filter((item=>["melee","weapon"].includes(item.type)));for(const itemSource of weaponsAndAttacks){const traits=itemSource.data.traits.value;for(const deleted of deletions)traits.findSplice((trait=>trait===deleted))}}}}async updateItem(itemData){var _a,_b,_c;switch(listKey){case"creatureTraits":if(itemData.data.traits){const traits=itemData.data.traits;traits.value=traits.value.filter((trait=>!deletions.includes(trait)))}break;case"featTraits":if("feat"===itemData.type){const traits=itemData.data.traits;traits.value=traits.value.filter((trait=>!deletions.includes(trait)))}break;case"magicSchools":if("spell"===itemData.type){const school=itemData.data.school;school.value=deletions.includes(null!==(_a=school.value)&&void 0!==_a?_a:"")?"evocation":school.value}break;case"spellTraits":if("spell"===itemData.type){const traits=itemData.data.traits;traits.value=traits.value.filter((trait=>!deletions.includes(trait)))}break;case"weaponCategories":if("weapon"===itemData.type){const systemData=itemData.data;systemData.category=deletions.includes(null!==(_b=systemData.category)&&void 0!==_b?_b:"")?"simple":systemData.category}break;case"weaponGroups":if("weapon"===itemData.type){const systemData=itemData.data;systemData.group=deletions.includes(null!==(_c=systemData.group)&&void 0!==_c?_c:"")?null:systemData.group}break;case"baseWeapons":if("weapon"===itemData.type){const base=itemData.data.baseItem;itemData.data.baseItem=deletions.includes(null!=base?base:"")?null:base}}}}).version=base_2.MigrationRunnerBase.LATEST_SCHEMA_VERSION,_a)}},44028:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isHomebrewFlag=void 0;const _util_1=__webpack_require__(6945),_1=__webpack_require__(27608);exports.isHomebrewFlag=function(flag){const entries=Object.entries(flag),settings=_1.HomebrewElements.SETTINGS;return entries.length>0&&entries.every((([key,value])=>settings.includes(key)&&("string"==typeof value||(0,_util_1.isObject)(value)&&Object.entries(value).every((([_hbKey,hbLabel])=>{return"string"==typeof hbLabel||(0,_util_1.isObject)(hbLabel)&&("string"==typeof(obj=hbLabel).label&&"string"==typeof obj.description);var obj})))))}},27608:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(62401),exports)},62401:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.HomebrewElements=void 0;const menu_1=__webpack_require__(69593),tagify_1=__importDefault(__webpack_require__(88537)),cleanup_migration_1=__webpack_require__(15759),localize_1=__webpack_require__(41332),runner_1=__webpack_require__(46842);__webpack_require__(34889);const _util_1=__webpack_require__(6945),base_1=__webpack_require__(22222),helpers_1=__webpack_require__(44028);class HomebrewElements extends menu_1.SettingsMenuPF2e{constructor(){super(...arguments),this.initialRefresh=!0,this.secondaryRecords={weaponTraits:["npcAttackTraits"],equipmentTraits:["armorTraits","consumableTraits"]}}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/settings/homebrew.html"})}static get settings(){return this.SETTINGS.map((key=>({key,value:{name:CONFIG.PF2E.SETTINGS.homebrew[key].name,hint:CONFIG.PF2E.SETTINGS.homebrew[key].hint,default:[],type:Object}}))).reduce(((settings,setting)=>mergeObject(settings,{[setting.key]:setting.value})),{})}getData(){const data=super.getData();for(const setting of data.settings)setting.value=JSON.stringify(setting.value);return data}activateListeners($form){super.activateListeners($form),$form.find('button[name="reset"]').on("click",(()=>{this.render()}));for(const key of HomebrewElements.SETTINGS){const $input=$form.find(`input[name="${key}"]`);new tagify_1.default($input[0],{editTags:1,hooks:{beforeRemoveTag:tags=>{const translations=localize_1.LocalizePF2e.translations.PF2E.SETTINGS.Homebrew.ConfirmDelete,response=(async()=>{const content=game.i18n.format(translations.Message,{element:tags[0].data.value});return await Dialog.confirm({title:translations.Title,content:`<p>${content}</p>`})})();return(async()=>await response?Promise.resolve():Promise.reject())()}}})}}async _onSubmit(event,{updateData=null,preventClose=!1,preventRender=!1}={}){return $(this.form).find("tags ~ input").each(((_i,input)=>{""===input.value&&(input.value="[]")})),super._onSubmit(event,{updateData,preventClose,preventRender})}async _updateObject(_event,data){const cleanupTasks=HomebrewElements.SETTINGS.map((key=>{var _a;for(const tag of data[key])null!==(_a=tag.id)&&void 0!==_a||(tag.id=`hb_${(0,_util_1.sluggify)(tag.value)}`);return this.processDeletions(key,data[key])})).filter((task=>!!task));(new runner_1.MigrationRunner).runMigrations(cleanupTasks),await super._updateObject(_event,data),this.refreshTags()}processDeletions(listKey,newTagList){const oldTagList=game.settings.get("pf2e",`homebrew.${listKey}`),newIDList=newTagList.map((tag=>tag.id)),deletions=oldTagList.flatMap((oldTag=>newIDList.includes(oldTag.id)?[]:oldTag.id)),coreElements="baseWeapons"===listKey?localize_1.LocalizePF2e.translations.PF2E.Weapon.Base:CONFIG.PF2E[listKey];for(const id of deletions)if(delete coreElements[id],(0,_util_1.objectHasKey)(this.secondaryRecords,listKey))for(const recordKey of this.secondaryRecords[listKey]){delete CONFIG.PF2E[recordKey][id]}return game.user.isGM&&deletions.length>0?(0,cleanup_migration_1.prepareCleanup)(listKey,deletions):null}refreshTags(){for(const listKey of HomebrewElements.SETTINGS){const settingsKey=`homebrew.${listKey}`,elements=game.settings.get("pf2e",settingsKey);this.updateConfigRecords(elements,listKey)}if(this.initialRefresh)this.initialRefresh=!1;else{const sheets=Object.values(ui.windows).filter((app=>app instanceof ActorSheet||app instanceof base_1.ItemSheetPF2e));for(const sheet of sheets)sheet.render(!1)}}registerModuleTags(){var _a,_b,_c;const activeModules=[...game.modules.entries()].filter((([_key,foundryModule])=>foundryModule.active));for(const[key,foundryModule]of activeModules){const homebrew=null===(_b=null===(_a=foundryModule.data.flags)||void 0===_a?void 0:_a[key])||void 0===_b?void 0:_b["pf2e-homebrew"];if((0,_util_1.isObject)(homebrew)&&(0,helpers_1.isHomebrewFlag)(homebrew))for(const recordKey of HomebrewElements.SETTINGS){const elements=null!==(_c=homebrew[recordKey])&&void 0!==_c?_c:{},tags=Object.entries(elements).map((([id,value])=>({id:`hb_${id}`,value:"string"==typeof value?value:value.label})));this.updateConfigRecords(tags,recordKey);for(const[key,value]of Object.entries(elements))if("object"==typeof value){const hbKey=`hb_${key}`;CONFIG.PF2E.traitsDescriptions[hbKey]=value.description}}}}getConfigRecord(recordKey){return"baseWeapons"===recordKey?localize_1.LocalizePF2e.translations.PF2E.Weapon.Base:CONFIG.PF2E[recordKey]}updateConfigRecords(elements,listKey){const coreElements=this.getConfigRecord(listKey);for(const element of elements)if(coreElements[element.id]=element.value,(0,_util_1.objectHasKey)(this.secondaryRecords,listKey))for(const recordKey of this.secondaryRecords[listKey]){CONFIG.PF2E[recordKey][element.id]=element.value}}}exports.HomebrewElements=HomebrewElements,HomebrewElements.namespace="homebrew",HomebrewElements.SETTINGS=["creatureTraits","featTraits","languages","magicSchools","spellTraits","weaponCategories","weaponGroups","baseWeapons","weaponTraits","equipmentTraits"]},93896:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerSettings=void 0;const variant_rules_1=__webpack_require__(88431),world_clock_1=__webpack_require__(85439),homebrew_1=__webpack_require__(27608),status_effects_1=__webpack_require__(34191),_util_1=__webpack_require__(6945),runner_1=__webpack_require__(46842),automation_1=__webpack_require__(47612),sheet_1=__webpack_require__(46047),metagame_1=__webpack_require__(85814);exports.registerSettings=function(){game.settings.register("pf2e","tokens.autoscale",{name:"PF2E.SETTINGS.Tokens.Autoscale.Name",hint:"PF2E.SETTINGS.Tokens.Autoscale.Hint",scope:"world",config:!0,default:!0,type:Boolean}),game.settings.register("pf2e","ignoreCoinBulk",{name:"PF2E.SETTINGS.IgnoreCoinBulk.Name",hint:"PF2E.SETTINGS.IgnoreCoinBulk.Hint",scope:"world",config:!1,default:!1,type:Boolean}),game.settings.register("pf2e","identifyMagicNotMatchingTraditionModifier",{name:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Name",hint:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Hint",choices:{0:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Choices.0",2:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Choices.2",5:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Choices.5",10:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Choices.10"},type:Number,default:5,scope:"world",config:!0}),game.settings.register("pf2e","critRule",{name:"PF2E.SETTINGS.CritRule.Name",hint:"PF2E.SETTINGS.CritRule.Hint",scope:"world",config:!0,default:"doubledamage",type:String,choices:{doubledamage:"PF2E.SETTINGS.CritRule.Choices.Doubledamage",doubledice:"PF2E.SETTINGS.CritRule.Choices.Doubledice"}}),game.settings.register("pf2e","compendiumBrowserPacks",{name:"PF2E.SETTINGS.CompendiumBrowserPacks.Name",hint:"PF2E.SETTINGS.CompendiumBrowserPacks.Hint",default:"{}",type:String,scope:"world",onChange:()=>{game.pf2e.compendiumBrowser.loadSettings()}}),game.settings.register("pf2e","pfsSheetTab",{name:"PF2E.SETTINGS.PFSSheetTab.Name",hint:"PF2E.SETTINGS.PFSSheetTab.Hint",scope:"world",config:!0,default:!0,type:Boolean,onChange:()=>{const sheets=game.actors.filter((actor=>"character"===actor.type)).flatMap((actor=>Object.values(actor.apps)));for(const sheet of sheets)sheet.render()}}),game.settings.register("pf2e","journalEntryTheme",{name:"PF2E.SETTINGS.JournalEntryTheme.Name",hint:"PF2E.SETTINGS.JournalEntryTheme.Hint",scope:"world",config:!0,default:"pf2eTheme",type:String,choices:{pf2eTheme:"PF2E.SETTINGS.JournalEntryTheme.PF2E",foundry:"PF2E.SETTINGS.JournalEntryTheme.Foundry"},onChange:()=>{const sheets=Object.values(ui.windows).filter((app=>app instanceof sheet_1.JournalSheetPF2e));for(const sheet of sheets)sheet.element.toggleClass("pf2e"),sheet.render(!1)}}),game.settings.register("pf2e","enabledRulesUI",{name:"PF2E.SETTINGS.EnabledRulesUI.Name",hint:"PF2E.SETTINGS.EnabledRulesUI.Hint",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("pf2e","critFumbleButtons",{name:game.i18n.localize("PF2E.SETTINGS.critFumbleCardButtons.name"),hint:game.i18n.localize("PF2E.SETTINGS.critFumbleCardButtons.hint"),scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>{window.location.reload()}}),game.settings.register("pf2e","drawCritFumble",{name:game.i18n.localize("PF2E.SETTINGS.critFumbleCards.name"),hint:game.i18n.localize("PF2E.SETTINGS.critFumbleCards.hint"),scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>{window.location.reload()}});const iconChoices={blackWhite:"PF2E.SETTINGS.statusEffectType.blackWhite",default:"PF2E.SETTINGS.statusEffectType.default",legacy:"PF2E.SETTINGS.statusEffectType.legacy"};game.settings.register("pf2e","statusEffectType",{name:"PF2E.SETTINGS.statusEffectType.name",hint:"PF2E.SETTINGS.statusEffectType.hint",scope:"world",config:!0,default:"blackWhite",type:String,choices:iconChoices,onChange:(iconType="")=>{(0,_util_1.objectHasKey)(iconChoices,iconType)&&status_effects_1.StatusEffects.migrateStatusEffectUrls(iconType)}}),game.settings.register("pf2e","deathIcon",{name:"PF2E.Settings.DeathIcon.Name",hint:"PF2E.Settings.DeathIcon.Hint",scope:"world",config:!1,default:"icons/svg/skull.svg",type:String,onChange:choice=>{choice&&(CONFIG.controlIcons.defeated=choice)}}),game.settings.register("pf2e","statusEffectShowCombatMessage",{name:"PF2E.SETTINGS.statusEffectShowCombatMessage.name",hint:"PF2E.SETTINGS.statusEffectShowCombatMessage.hint",scope:"client",config:!0,default:!0,type:Boolean}),game.settings.register("pf2e","seenUnionAnnouncement",{name:"PF2E.UnitedPaizoWorkers.Title",scope:"client",config:!1,default:!1,type:Boolean}),game.settings.registerMenu("pf2e","automation",{name:"PF2E.SETTINGS.Automation.Name",label:"PF2E.SETTINGS.Automation.Label",hint:"PF2E.SETTINGS.Automation.Hint",icon:"fas fa-robot",type:automation_1.AutomationSettings,restricted:!0}),game.settings.register("pf2e","automation.actorsDeadAtZero",{name:CONFIG.PF2E.SETTINGS.automation.actorsDeadAtZero.name,scope:"world",config:!1,default:"npcsOnly",type:String}),automation_1.AutomationSettings.registerSettings(),game.settings.registerMenu("pf2e","metagame",{name:"PF2E.SETTINGS.Metagame.Name",label:"PF2E.SETTINGS.Metagame.Label",hint:"PF2E.SETTINGS.Metagame.Hint",icon:"fas fa-brain",type:metagame_1.MetagameSettings,restricted:!0}),metagame_1.MetagameSettings.registerSettings(),game.settings.registerMenu("pf2e","variantRules",{name:"PF2E.SETTINGS.Variant.Name",label:"PF2E.SETTINGS.Variant.Label",hint:"PF2E.SETTINGS.Variant.Hint",icon:"fas fa-book",type:variant_rules_1.VariantRulesSettings,restricted:!0}),variant_rules_1.VariantRulesSettings.registerSettings(),game.settings.registerMenu("pf2e","homebrew",{name:"PF2E.SETTINGS.Homebrew.Name",label:"PF2E.SETTINGS.Homebrew.Label",hint:"PF2E.SETTINGS.Homebrew.Hint",icon:"fas fa-beer",type:homebrew_1.HomebrewElements,restricted:!0}),homebrew_1.HomebrewElements.registerSettings(),game.settings.registerMenu("pf2e","worldClock",{name:game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.name),label:game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.label),hint:game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.hint),icon:"far fa-clock",type:world_clock_1.WorldClockSettings,restricted:!0}),world_clock_1.WorldClockSettings.registerSettings(),game.settings.register("pf2e","RAI.TreatWoundsAltSkills",{name:"PF2E.SETTINGS.RAI.TreatWoundsAltSkills.Name",hint:"PF2E.SETTINGS.RAI.TreatWoundsAltSkills.Hint",scope:"world",config:!0,default:!0,type:Boolean}),game.settings.register("pf2e","worldSchemaVersion",{name:"PF2E.SETTINGS.WorldSchemaVersion.Name",hint:"PF2E.SETTINGS.WorldSchemaVersion.Hint",scope:"world",config:!0,default:runner_1.MigrationRunner.LATEST_SCHEMA_VERSION,type:Number})}},69593:function(__unused_webpack_module,exports){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SettingsMenuPF2e=void 0;class SettingsMenuPF2e extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.classes.push("settings-menu"),mergeObject(options,{title:`PF2E.SETTINGS.${this.namespace.titleCase()}.Name`,id:`${this.namespace}-settings`,template:"systems/pf2e/templates/system/settings/menu.html",width:550,height:"auto",closeOnSubmit:!0})}get namespace(){return this.constructor.namespace}static get settings(){return{}}static registerSettings(){const settings=this.settings;for(const setting of this.SETTINGS)game.settings.register("pf2e",`${this.namespace}.${setting}`,Object.assign(Object.assign({},settings[setting]),{scope:"world",config:!1}))}getData(){const settings=this.constructor.settings,templateData=Object.entries(settings).map((([key,setting])=>{const value=game.settings.get("pf2e",`${this.namespace}.${key}`);return Object.assign(Object.assign({},setting),{key,value,isSelect:!!setting.choices,isCheckbox:setting.type===Boolean})}));return mergeObject(super.getData(),{settings:templateData,instructions:`PF2E.SETTINGS.${this.namespace.titleCase()}.Hint`})}async _updateObject(_event,data){var e_1,_a;try{for(var _c,_b=__asyncValues(this.constructor.SETTINGS);!(_c=await _b.next()).done;){const key=_c.value,settingKey=`${this.namespace}.${key}`;await game.settings.set("pf2e",settingKey,data[key])}}catch(e_1_1){e_1={error:e_1_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_1)throw e_1.error}}}}exports.SettingsMenuPF2e=SettingsMenuPF2e},85814:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.MetagameSettings=void 0;const menu_1=__webpack_require__(69593);class MetagameSettings extends menu_1.SettingsMenuPF2e{static get settings(){return{showDC:{name:"PF2E.SETTINGS.Metagame.ShowDC.Name",hint:"PF2E.SETTINGS.Metagame.ShowDC.Hint",default:"gm",type:String,choices:{none:"PF2E.SETTINGS.Metagame.ShowDC.None",gm:"PF2E.SETTINGS.Metagame.ShowDC.Gm",owner:"PF2E.SETTINGS.Metagame.ShowDC.Owner",all:"PF2E.SETTINGS.Metagame.ShowDC.All"}},showResults:{name:"PF2E.SETTINGS.Metagame.ShowResults.Name",hint:"PF2E.SETTINGS.Metagame.ShowResults.Hint",default:"gm",type:String,choices:{none:"PF2E.SETTINGS.Metagame.ShowResults.None",gm:"PF2E.SETTINGS.Metagame.ShowResults.Gm",owner:"PF2E.SETTINGS.Metagame.ShowResults.Owner",all:"PF2E.SETTINGS.Metagame.ShowResults.All"}},tokenSetsNameVisibility:{name:"PF2E.SETTINGS.Metagame.TokenSetsNameVisibility.Name",hint:"PF2E.SETTINGS.Metagame.TokenSetsNameVisibility.Hint",default:!1,type:Boolean,onChange:async()=>{var e_1,_a,_b;await ui.combat.render();const renderedMessages=document.querySelectorAll("#chat-log > li");try{for(var _d,_c=__asyncValues(Array.from(renderedMessages));!(_d=await _c.next()).done;){const rendered=_d.value,message=game.messages.get(null!==(_b=null==rendered?void 0:rendered.dataset.messageId)&&void 0!==_b?_b:"");message&&await ui.chat.updateMessage(message)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{_d&&!_d.done&&(_a=_c.return)&&await _a.call(_c)}finally{if(e_1)throw e_1.error}}}},secretDamage:{name:"PF2E.SETTINGS.Metagame.SecretDamage.Name",hint:"PF2E.SETTINGS.Metagame.SecretDamage.Hint",default:!1,type:Boolean},secretCondition:{name:"PF2E.SETTINGS.Metagame.SecretCondition.Name",hint:"PF2E.SETTINGS.Metagame.SecretCondition.Hint",default:!1,type:Boolean},partyVision:{name:"PF2E.SETTINGS.Metagame.PartyVision.Name",hint:"PF2E.SETTINGS.Metagame.PartyVision.Hint",default:!1,type:Boolean}}}}exports.MetagameSettings=MetagameSettings,MetagameSettings.namespace="metagame",MetagameSettings.SETTINGS=["showDC","showResults","tokenSetsNameVisibility","secretDamage","secretCondition","partyVision"]},88431:function(__unused_webpack_module,exports){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.VariantRulesSettings=void 0;const SETTINGS={staminaVariant:{name:"PF2E.SETTINGS.Variant.Stamina.Name",hint:"PF2E.SETTINGS.Variant.Stamina.Hint",scope:"world",config:!1,default:0,type:Number,choices:{0:"PF2E.SETTINGS.Variant.Stamina.Choices.0",1:"PF2E.SETTINGS.Variant.Stamina.Choices.1"}},ancestryParagonVariant:{name:"PF2E.SETTINGS.Variant.AncestryParagon.Name",hint:"PF2E.SETTINGS.Variant.AncestryParagon.Hint",scope:"world",config:!1,default:0,type:Boolean},freeArchetypeVariant:{name:"PF2E.SETTINGS.Variant.FreeArchetype.Name",hint:"PF2E.SETTINGS.Variant.FreeArchetype.Hint",scope:"world",config:!1,default:0,type:Boolean},dualClassVariant:{name:"PF2E.SETTINGS.Variant.DualClass.Name",hint:"PF2E.SETTINGS.Variant.DualClass.Hint",scope:"world",config:!1,default:0,type:Boolean},automaticBonusVariant:{name:"PF2E.SETTINGS.Variant.AutomaticBonus.Name",hint:"PF2E.SETTINGS.Variant.AutomaticBonus.Hint",scope:"world",config:!1,default:"noABP",type:String,choices:{noABP:"PF2E.SETTINGS.Variant.AutomaticBonus.Choices.noABP",ABPRulesAsWritten:"PF2E.SETTINGS.Variant.AutomaticBonus.Choices.ABPRulesAsWritten",ABPFundamentalPotency:"PF2E.SETTINGS.Variant.AutomaticBonus.Choices.ABPFundamentalPotency"}},proficiencyVariant:{name:"PF2E.SETTINGS.Variant.Proficiency.Name",hint:"PF2E.SETTINGS.Variant.Proficiency.Hint",scope:"world",config:!1,default:"ProficiencyWithLevel",type:String,choices:{ProficiencyWithLevel:"PF2E.SETTINGS.Variant.Proficiency.Choices.ProficiencyWithLevel",ProficiencyWithoutLevel:"PF2E.SETTINGS.Variant.Proficiency.Choices.ProficiencyWithoutLevel"}},proficiencyUntrainedModifier:{name:"PF2E.SETTINGS.Variant.UntrainedModifier.Name",hint:"PF2E.SETTINGS.Variant.UntrainedModifier.Hint",scope:"world",config:!1,default:0,type:Number},proficiencyTrainedModifier:{name:"PF2E.SETTINGS.Variant.TrainedModifier.Name",hint:"PF2E.SETTINGS.Variant.TrainedModifier.Hint",scope:"world",config:!1,default:2,type:Number},proficiencyExpertModifier:{name:"PF2E.SETTINGS.Variant.ExpertModifier.Name",hint:"PF2E.SETTINGS.Variant.ExpertModifier.Hint",scope:"world",config:!1,default:4,type:Number},proficiencyMasterModifier:{name:"PF2E.SETTINGS.Variant.MasterModifier.Name",hint:"PF2E.SETTINGS.Variant.MasterModifier.Hint",scope:"world",config:!1,default:6,type:Number},proficiencyLegendaryModifier:{name:"PF2E.SETTINGS.Variant.LegendaryModifier.Name",hint:"PF2E.SETTINGS.Variant.LegendaryModifier.Hint",scope:"world",config:!1,default:8,type:Number}};class VariantRulesSettings extends FormApplication{static get defaultOptions(){return mergeObject(super.defaultOptions,{title:"PF2E.SETTINGS.Variant.Title",id:"variant-rules-settings",template:"systems/pf2e/templates/system/settings/variant-rules-settings.html",width:550,height:"auto",closeOnSubmit:!0})}getData(){const data={};for(const[k,v]of Object.entries(SETTINGS))data[k]={value:game.settings.get("pf2e",k),setting:v};return data}static registerSettings(){for(const[k,v]of Object.entries(SETTINGS))game.settings.register("pf2e",k,v)}activateListeners(html){super.activateListeners(html),html.find('button[name="reset"]').on("click",(event=>this.onResetDefaults(event)))}async onResetDefaults(event){var e_1,_a;event.preventDefault();try{for(var _c,_b=__asyncValues(Object.entries(SETTINGS));!(_c=await _b.next()).done;){const[k,v]=_c.value;await game.settings.set("pf2e",k,null==v?void 0:v.default)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_1)throw e_1.error}}return this.render()}async _onSubmit(event,options={}){return event.preventDefault(),super._onSubmit(event,options)}async _updateObject(_event,data){var e_2,_a;try{for(var _c,_b=__asyncValues(Object.keys(SETTINGS));!(_c=await _b.next()).done;){const key=_c.value;game.settings.set("pf2e",key,data[key])}}catch(e_2_1){e_2={error:e_2_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_2)throw e_2.error}}}}exports.VariantRulesSettings=VariantRulesSettings},85439:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorldClockSettings=void 0;const luxon_1=__webpack_require__(70411),localize_1=__webpack_require__(41332);class WorldClockSettings extends FormApplication{static get defaultOptions(){return mergeObject(super.defaultOptions,{title:CONFIG.PF2E.SETTINGS.worldClock.name,id:"world-clock-settings",template:"systems/pf2e/templates/system/settings/world-clock/index.html",width:550,height:"auto",closeOnSubmit:!0})}getData(){const worldDefault=game.settings.get("pf2e","worldClock.syncDarkness")?game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.enabled):game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.disabled),sceneSetting=["syncDarknessScene",{name:CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.name,hint:CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.hint,default:"default",type:String,choices:{enabled:CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.enabled,disabled:CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.disabled,default:game.i18n.format(CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.default,{worldDefault})}}],settings=[...Object.entries(WorldClockSettings.settings).filter((([key])=>"worldCreatedOn"!==key)),sceneSetting].map((([key,setting])=>{const value=(()=>{var _a;if("syncDarknessScene"===key)return null===(_a=canvas.scene)||void 0===_a?void 0:_a.data.flags.pf2e.syncDarkness;const rawValue=game.settings.get("pf2e",`worldClock.${key}`);return"worldCreatedOn"===key&&"string"==typeof rawValue?luxon_1.DateTime.fromISO(rawValue).toFormat("yyyy-MM-dd'T'HH:mm"):rawValue})();return Object.assign(Object.assign({},setting),{key,value,isSelect:"choices"in setting,isCheckbox:setting.type===Boolean,isDateTime:setting.type===String&&!("choices"in setting)})}));return mergeObject(super.getData(),{settings})}static registerSettings(){game.settings.register("pf2e","worldClock.dateTheme",this.settings.dateTheme),game.settings.register("pf2e","worldClock.timeConvention",this.settings.timeConvention),game.settings.register("pf2e","worldClock.playersCanView",this.settings.playersCanView),game.settings.register("pf2e","worldClock.syncDarkness",this.settings.syncDarkness),game.settings.register("pf2e","worldClock.worldCreatedOn",this.settings.worldCreatedOn),game.settings.register("pf2e","worldClock.showClockButton",this.settings.showClockButton)}activateListeners($html){super.activateListeners($html);const translations=localize_1.LocalizePF2e.translations.PF2E.SETTINGS.WorldClock,title=translations.ResetWorldTime.Name;$html.find("button.reset-world-time").on("click",(async()=>{const template=await renderTemplate("systems/pf2e/templates/system/settings/world-clock/confirm-reset.html");Dialog.confirm({title,content:template,yes:()=>{game.time.advance(-1*game.time.worldTime),this.close()},defaultYes:!1})})),$html.find('input[name="syncDarkness"]').on("change",(event=>{const worldDefault=$(event.currentTarget)[0].checked?translations.SyncDarknessScene.Enabled:translations.SyncDarknessScene.Disabled;$html.find('select[name="syncDarknessScene"] > option[value="default"]').text(game.i18n.format(translations.SyncDarknessScene.Default,{worldDefault}))}))}async _updateObject(_event,data){var e_1,_a,_b,_c;const keys=["dateTheme","timeConvention","playersCanView","syncDarkness","showClockButton"];try{for(var keys_1_1,keys_1=__asyncValues(keys);!(keys_1_1=await keys_1.next()).done;){const key=keys_1_1.value,settingKey=`worldClock.${key}`,newValue="worldCreatedOn"===key?luxon_1.DateTime.fromISO(data[key]).toUTC():data[key];await game.settings.set("pf2e",settingKey,newValue)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{keys_1_1&&!keys_1_1.done&&(_a=keys_1.return)&&await _a.call(keys_1)}finally{if(e_1)throw e_1.error}}await(null===(_b=canvas.scene)||void 0===_b?void 0:_b.setFlag("pf2e","syncDarkness",null!==(_c=data.syncDarknessScene)&&void 0!==_c?_c:"default")),delete data.syncDarknessScene,game.pf2e.worldClock.render(!1)}static get settings(){return{dateTheme:{name:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.name,hint:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.hint,scope:"world",config:!1,default:"AR",type:String,choices:{AR:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.AR,AD:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.AD,CE:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.CE}},timeConvention:{name:CONFIG.PF2E.SETTINGS.worldClock.timeConvention.name,hint:CONFIG.PF2E.SETTINGS.worldClock.timeConvention.hint,scope:"world",config:!1,default:24,type:Number,choices:{24:CONFIG.PF2E.SETTINGS.worldClock.timeConvention.twentyFour,12:CONFIG.PF2E.SETTINGS.worldClock.timeConvention.twelve}},showClockButton:{name:CONFIG.PF2E.SETTINGS.worldClock.showClockButton.name,hint:CONFIG.PF2E.SETTINGS.worldClock.showClockButton.hint,scope:"world",config:!1,default:!0,type:Boolean,onChange:()=>{game.settings.set("pf2e","worldClock.playersCanView",game.settings.get("pf2e","worldClock.showClockButton"))}},playersCanView:{name:CONFIG.PF2E.SETTINGS.worldClock.playersCanView.name,hint:CONFIG.PF2E.SETTINGS.worldClock.playersCanView.hint,scope:"world",config:!1,default:!1,type:Boolean},syncDarkness:{name:CONFIG.PF2E.SETTINGS.worldClock.syncDarkness.name,hint:CONFIG.PF2E.SETTINGS.worldClock.syncDarkness.hint,scope:"world",config:!1,default:!1,type:Boolean},worldCreatedOn:{name:CONFIG.PF2E.SETTINGS.worldClock.worldCreatedOn.name,hint:CONFIG.PF2E.SETTINGS.worldClock.worldCreatedOn.hint,scope:"world",config:!1,default:luxon_1.DateTime.utc().toISO(),type:String}}}}exports.WorldClockSettings=WorldClockSettings},78214:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0})},77486:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Statistic=void 0;const modifiers_1=__webpack_require__(27324),rolls_1=__webpack_require__(87525),_actor_1=__webpack_require__(85530),predication_1=__webpack_require__(538);__exportStar(__webpack_require__(78214),exports);class Statistic{constructor(actor,data){this.actor=actor,this.data=data}static from(actor,stat,name,label,type){return new Statistic(actor,{name,check:{adjustments:stat.adjustments,label,type},dc:{},modifiers:[...stat.modifiers],notes:stat.notes})}get check(){var _a,_b,_c;const data=this.data,check=data.check;if(!check)return;const modifiers=(null!==(_a=data.modifiers)&&void 0!==_a?_a:[]).concat(null!==(_b=check.modifiers)&&void 0!==_b?_b:[]),stat=new modifiers_1.StatisticModifier(data.name,modifiers),name=game.i18n.localize(null!==(_c=check.label)&&void 0!==_c?_c:data.name);return{modifiers,roll:(args={})=>{var _a,_b,_c,_d;const actor=this.actor,rollContext=(()=>{if(actor instanceof _actor_1.CreaturePF2e&&["attack-roll","spell-attack-roll"].includes(check.type)){const domains=[];return"spell-attack-roll"===check.type&&domains.push("spell-attack-roll"),actor.createAttackRollContext({domains})}return null})();args.dc&&check.adjustments&&check.adjustments.length&&(null!==(_a=(_d=args.dc).adjustments)&&void 0!==_a||(_d.adjustments=[]),args.dc.adjustments.push(...check.adjustments));const context={actor,dc:null!==(_b=args.dc)&&void 0!==_b?_b:null==rollContext?void 0:rollContext.dc,notes:data.notes,options:args.options,item:null!==(_c=args.item)&&void 0!==_c?_c:null,type:check.type};rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(name,stat,args.modifiers),context,args.event,args.callback)},withOptions:options=>{const check=new modifiers_1.CheckModifier(name,stat);return check.modifiers.forEach((modifier=>{var _a;modifier.ignored=!predication_1.PredicatePF2e.test(modifier.predicate,null!==(_a=null==options?void 0:options.options)&&void 0!==_a?_a:[])})),check.applyStackingRules(),{value:check.totalModifier,breakdown:check.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", ")}},value:stat.totalModifier,get breakdown(){return modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", ")}}}dc(options){var _a,_b,_c,_d;const data=this.data;if(!data.dc)return;const modifiers=(null!==(_a=data.modifiers)&&void 0!==_a?_a:[]).concat(null!==(_b=data.dc.modifiers)&&void 0!==_b?_b:[]).map((modifier=>duplicate(modifier)));return modifiers.forEach((modifier=>{var _a;modifier.ignored=!predication_1.PredicatePF2e.test(modifier.predicate,null!==(_a=null==options?void 0:options.options)&&void 0!==_a?_a:[])})),{labelKey:null!==(_c=data.dc.labelKey)&&void 0!==_c?_c:`PF2E.CreatureStatisticDC.${data.name}`,value:(null!==(_d=data.dc.base)&&void 0!==_d?_d:10)+new modifiers_1.StatisticModifier(data.name,modifiers).totalModifier,get breakdown(){return[game.i18n.localize("PF2E.DCBase")].concat(modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", ")}}}getChatData(options={}){const checkObject=this.check,check=null==checkObject?void 0:checkObject.withOptions({options:options.options}),dcData=this.dc({options:options.options});return{check,dc:dcData?{value:dcData.value,breakdown:dcData.breakdown}:void 0}}}exports.Statistic=Statistic},21047:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TextEditorPF2e=void 0;const enrich_content_1=__webpack_require__(29557),user_visibility_1=__webpack_require__(96498);class TextEditorPF2e extends TextEditor{static enrichHTML(content,options){content=enrich_content_1.EnrichContent.enrichString(content,options),content=super.enrichHTML(content,options);const $html=$("<div/>");$html.html(content),user_visibility_1.UserVisibility.process($html);const rollData=null==options?void 0:options.rollData;return rollData&&$html.find("a.inline-roll").each(((_idx,element)=>{const formula=element.dataset.formula;formula&&(element.dataset.formula=Roll.replaceFormulaData(formula,rollData))})),$html.html()}}exports.TextEditorPF2e=TextEditorPF2e},66538:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TagSelectorBase=void 0;class TagSelectorBase extends FormApplication{constructor(object,options={}){var _a;super(object,options),this.objectProperty="",this.flat=null!==(_a=options.flat)&&void 0!==_a&&_a,this.choices=this.getChoices()}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"trait-selector",classes:["pf2e"],width:"auto",height:700})}getChoices(){const choices=this.configTypes.reduce(((types,key)=>mergeObject(types,CONFIG.PF2E[key])),{});return this.sortChoices(choices)}sortChoices(choices){return Object.entries(choices).map((([key,value])=>[key,game.i18n.localize(value)])).sort((([_keyA,valueA],[_keyB,valueB])=>valueA.localeCompare(valueB))).reduce(((accumulated,[key,value])=>mergeObject(accumulated,{[key]:value})),{})}}exports.TagSelectorBase=TagSelectorBase},39161:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TagSelectorBasic=void 0;const base_1=__webpack_require__(66538);function isValuesList(value){return!(!value||"object"!=typeof value||!("value"in value))}class TagSelectorBasic extends base_1.TagSelectorBase{constructor(object,options){var _a,_b;super(object,options),this.searchString="",this.filterTimeout=null,this.objectProperty=options.objectProperty,this.allowCustom=null===(_a=options.allowCustom)||void 0===_a||_a,options.customChoices&&(mergeObject(this.choices,options.customChoices),this.choices=this.sortChoices(this.choices)),this.options.title=null!==(_b=options.title)&&void 0!==_b?_b:"PF2E.TraitsLabel"}get configTypes(){var _a;return null!==(_a=this.options.configTypes)&&void 0!==_a?_a:[]}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/trait-selector/basic.html",height:710})}getData(){const{chosen,custom,flat,disabled}=(()=>{const document=this.object,sourceProperty=getProperty(document.toObject(),this.objectProperty),preparedProperty=getProperty(document.data,this.objectProperty);if(Array.isArray(preparedProperty)){const manuallyChosen=Array.isArray(sourceProperty)?sourceProperty.map((prop=>String(prop))):[],automaticallyChosen=preparedProperty.filter((tag=>!manuallyChosen.includes(tag)));return{chosen:Array.from(new Set([...manuallyChosen,...automaticallyChosen])),custom:null,flat:!0,disabled:automaticallyChosen}}if(isValuesList(preparedProperty)&&isValuesList(sourceProperty)){const manuallyChosen=sourceProperty.value.map((prop=>prop.toString())),custom=this.allowCustom?sourceProperty.custom:null,automaticallyChosen=preparedProperty.value.filter((tag=>!manuallyChosen.includes(tag)));return{chosen:Array.from(new Set([...manuallyChosen,...automaticallyChosen])),custom,flat:!1,disabled:automaticallyChosen}}return{chosen:[],custom:null,flat:this.flat,disabled:[]}})(),choices=Object.keys(this.choices).reduce(((accumulated,type)=>(accumulated[type]={label:this.choices[type],selected:chosen.includes(type),disabled:disabled.includes(type)},accumulated)),{});return Object.assign(Object.assign({},super.getData()),{choices,allowCustom:this.allowCustom&&!flat,custom,flat})}activateListeners($html){super.activateListeners($html),$html.find('input[id="search"]').on("keyup",(event=>this.onFilterResults(event))),this.searchString&&this.search(this.searchString)}async _updateObject(event,formData){const{flat}=event.target?$(event.target).data():{flat:!1},value=this.getUpdateData(formData);this.allowCustom&&"string"==typeof formData.custom?await this.object.update({[this.objectProperty]:{value,custom:formData.custom}}):flat?await this.object.update({[this.objectProperty]:value}):await this.object.update({[`${this.objectProperty}.value`]:value})}getUpdateData(formData){const optionsAreNumeric=Object.keys(formData).every((tag=>Number.isInteger(Number(tag)))),selections=Object.entries(formData).flatMap((([tag,selected])=>selected?tag:[])).filter((tag=>"custom"!==tag));return optionsAreNumeric?selections.map((tag=>Number(tag))):selections}search(searchString){const query=new RegExp(RegExp.escape(searchString),"i");this.element.find("li.trait-item").each(((_i,li)=>{var _a;const name=null!==(_a=li.getElementsByClassName("trait-label")[0].textContent)&&void 0!==_a?_a:"";li.style.display=query.test(name)?"flex":"none"})),this.searchString=searchString}onFilterResults(event){event.preventDefault();const input=event.currentTarget;this.filterTimeout&&(clearTimeout(this.filterTimeout),this.filterTimeout=null),this.filterTimeout=window.setTimeout((()=>this.search(input.value)),100)}}exports.TagSelectorBasic=TagSelectorBasic},17145:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SELECTABLE_TAG_FIELDS=exports.TAG_SELECTOR_TYPES=exports.TagSelectorOptions=exports.WeaknessSelector=exports.SpeedSelector=exports.SenseSelector=exports.ResistanceSelector=exports.TagSelectorBasic=exports.BasicConstructorOptions=void 0;var basic_1=__webpack_require__(39161);Object.defineProperty(exports,"BasicConstructorOptions",{enumerable:!0,get:function(){return basic_1.BasicConstructorOptions}}),Object.defineProperty(exports,"TagSelectorBasic",{enumerable:!0,get:function(){return basic_1.TagSelectorBasic}});var resistances_1=__webpack_require__(14457);Object.defineProperty(exports,"ResistanceSelector",{enumerable:!0,get:function(){return resistances_1.ResistanceSelector}});var senses_1=__webpack_require__(17963);Object.defineProperty(exports,"SenseSelector",{enumerable:!0,get:function(){return senses_1.SenseSelector}});var speeds_1=__webpack_require__(54395);Object.defineProperty(exports,"SpeedSelector",{enumerable:!0,get:function(){return speeds_1.SpeedSelector}});var weaknesses_1=__webpack_require__(77811);Object.defineProperty(exports,"WeaknessSelector",{enumerable:!0,get:function(){return weaknesses_1.WeaknessSelector}});var base_1=__webpack_require__(66538);Object.defineProperty(exports,"TagSelectorOptions",{enumerable:!0,get:function(){return base_1.TagSelectorOptions}}),exports.TAG_SELECTOR_TYPES=["basic","resistances","senses","speed-types","weaknesses"],exports.SELECTABLE_TAG_FIELDS=["abilities","actionTraits","skills","martialSkills","currencies","saves","armorTraits","preciousMaterialGrades","armorPotencyRunes","armorResiliencyRunes","armorPropertyRunes","weaponPotencyRunes","weaponStrikingRunes","weaponPropertyRunes","rarityTraits","damageTypes","damageCategories","weaponDamage","healingTypes","weaponCategories","weaponGroups","baseWeaponTypes","consumableTraits","weaponDescriptions","weaponTraits","otherWeaponTags","traitsDescriptions","weaponHands","equipmentTraits","itemBonuses","damageDie","weaponMAP","weaponReload","armorTypes","armorGroups","consumableTypes","magicTraditions","preparationType","spellTraits","featTraits","areaTypes","areaSizes","classTraits","ancestryTraits","alignments","skillList","spellComponents","spellTypes","magicTraditions","spellLevels","featTypes","actionTypes","actionsNumber","actionCategories","proficiencyLevels","actorSizes","bulkTypes","conditionTypes","immunityTypes","resistanceTypes","weaknessTypes","languages","creatureTraits","monsterTraits","attackEffects","hazardTraits","attributes","speedTypes","senses","preciousMaterials","prerequisitePlaceholders","ancestryItemTraits","levels","dcAdjustments","npcAttackTraits","vehicleTraits"]},14457:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ResistanceSelector=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(66538);class ResistanceSelector extends base_1.TagSelectorBase{constructor(){super(...arguments),this.objectProperty="data.traits.dr"}static get defaultOptions(){return Object.assign(Object.assign({},super.defaultOptions),{id:"trait-selector",classes:["pf2e"],template:"systems/pf2e/templates/system/trait-selector/resistances.html",title:"PF2E.ResistancesLabel",width:"auto",height:700})}get actor(){return this.object}get configTypes(){return["resistanceTypes"]}getData(){const actorSource=this.actor.toObject();if("familiar"===actorSource.type)throw(0,_util_1.ErrorPF2e)("Resistances cannot be saved to familiar data");const data=super.getData();"npc"!==actorSource.type&&"hazard"!==actorSource.type||(data.hasExceptions=!0);const choices={},resistances=actorSource.data.traits.dr;return Object.entries(this.choices).forEach((([type,label])=>{var _a,_b;const resistance=resistances.find((resistance=>resistance.type===type));choices[type]={label,selected:!!resistance,value:null!==(_a=null==resistance?void 0:resistance.value)&&void 0!==_a?_a:0,exceptions:null!==(_b=null==resistance?void 0:resistance.exceptions)&&void 0!==_b?_b:""}})),data.choices=choices,data}activateListeners($html){super.activateListeners($html),$html.find("input[id^=input_value]").on("focusin",(event=>{$(event.currentTarget).prev().prev().prop("checked",!0)})).on("focusout",(event=>{const input=$(event.currentTarget);input.val()||input.prev().prev().prop("checked",!1)}))}async _updateObject(_event,formData){const update=this.getUpdateData(formData);update&&this.actor.update({[this.objectProperty]:update})}getUpdateData(formData){var _a;const choices=[];for(const[k,v]of Object.entries(formData))if(v.length>1&&v[0]&&Number.isInteger(Number(v[1]))&&""!==v[1]){const exceptions=null!==(_a=v[2])&&void 0!==_a?_a:"";choices.push({type:k,value:Number(v[1]),exceptions})}return choices}}exports.ResistanceSelector=ResistanceSelector},17963:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SenseSelector=void 0;const index_1=__webpack_require__(85530),base_1=__webpack_require__(66538);class SenseSelector extends base_1.TagSelectorBase{constructor(){super(...arguments),this.objectProperty="data.traits.senses"}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/trait-selector/senses.html",title:"PF2E.Sense.Label"})}get configTypes(){return["senses"]}getData(){const data=super.getData();this.object instanceof index_1.NPCPF2e&&(data.hasExceptions=!0);const choices={},senses=getProperty(this.object.data,this.objectProperty);return Object.entries(this.choices).forEach((([type,label])=>{var _a,_b;const sense=senses.find((sense=>sense.type===type));choices[type]={acuity:null!==(_a=null==sense?void 0:sense.acuity)&&void 0!==_a?_a:"precise",disabled:(null==sense?void 0:sense.source)?"disabled":"",label,selected:void 0!==sense,value:null!==(_b=null==sense?void 0:sense.value)&&void 0!==_b?_b:""}})),data.choices=choices,data.senseAcuity=CONFIG.PF2E.senseAcuity,data}activateListeners($html){super.activateListeners($html),$html.find("input[id^=input_value]").on("focusin",(event=>{$(event.currentTarget).prev().prev().prop("checked",!0)})).on("focusout",(event=>{const input=$(event.currentTarget);input.val()||input.prev().prev().prop("checked",!1)}))}async _updateObject(_event,formData){const update=this.getUpdateData(formData);update&&this.object.update({[this.objectProperty]:update})}getUpdateData(formData){return Object.entries(formData).filter((entry=>!0===entry[1]||Array.isArray(entry[1])&&!0===entry[1][0])).map((([type,values])=>{if(!0===values)return{type};if(Number(values[2])){return{type,acuity:values[1],value:Number(values[2])}}return{type,acuity:values[1]}}))}}exports.SenseSelector=SenseSelector},54395:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpeedSelector=void 0;const _actor_1=__webpack_require__(85530),base_1=__webpack_require__(66538);class SpeedSelector extends base_1.TagSelectorBase{constructor(){super(...arguments),this.objectProperty="data.attributes.speed.otherSpeeds"}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/trait-selector/speed-types.html",title:"PF2E.SpeedTypes"})}get configTypes(){return["speedTypes"]}getData(){var _a;const data=super.getData();this.object instanceof _actor_1.NPCPF2e&&(data.hasExceptions=!0);const choices={},speeds=getProperty(this.object.data,this.objectProperty),speedLabels=CONFIG.PF2E.speedTypes;for(const[type]of Object.entries(this.choices)){const speed=speeds.find((res=>res.type===type));choices[type]={selected:!!speed,label:game.i18n.localize(speedLabels[type]),value:null!==(_a=null==speed?void 0:speed.value)&&void 0!==_a?_a:""}}return data.choices=choices,data}activateListeners($html){super.activateListeners($html),$html.find("input[id^=input_value]").on("focusin",(event=>{$(event.currentTarget).prev().prev().prop("checked",!0)})).on("focusout",(event=>{const input=$(event.currentTarget);input.val()||input.prev().prev().prop("checked",!1)}))}async _updateObject(_event,formData){const update=this.getUpdateData(formData);update&&this.object.update({[this.objectProperty]:update})}getUpdateData(formData){const choices=[];for(const[k,v]of Object.entries(formData))v.length>1&&Array.isArray(v)&&v[0]&&!Number.isNaN(Number(v[1]))&&v[1]&&choices.push({type:k,value:v[1]});return choices}}exports.SpeedSelector=SpeedSelector},77811:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaknessSelector=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(66538);class WeaknessSelector extends base_1.TagSelectorBase{constructor(){super(...arguments),this.objectProperty="data.traits.dv"}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/trait-selector/weaknesses.html",title:"PF2E.WeaknessesLabel"})}get actor(){return this.object}get configTypes(){return["weaknessTypes"]}getData(){const data=super.getData(),actorSource=this.actor.toObject();if("npc"===actorSource.type)data.hasExceptions=!0;else if("familiar"===actorSource.type)throw(0,_util_1.ErrorPF2e)("Weaknesses cannot be saved to familiar data");const choices={},weaknesses=actorSource.data.traits.dv;return Object.entries(this.choices).forEach((([type,label])=>{var _a;const current=weaknesses.find((weakness=>weakness.type===type));choices[type]={label,selected:!!current,value:null!==(_a=null==current?void 0:current.value)&&void 0!==_a?_a:0}})),data.choices=choices,data}activateListeners($html){super.activateListeners($html),$html.find("input[id^=input_value]").on("focusin",(event=>{$(event.currentTarget).prev().prev().prop("checked",!0)})).on("focusout",(event=>{const input=$(event.currentTarget);input.val()||input.prev().prev().prop("checked",!1)}))}async _updateObject(_event,formData){const update=this.getUpdateData(formData);this.actor.update({[this.objectProperty]:update})}getUpdateData(formData){const choices=[];for(const[k,v]of Object.entries(formData))v.length>1&&v[0]&&Number.isInteger(Number(v[1]))&&""!==v[1]&&choices.push({type:k,value:Number(v[1])});return choices}}exports.WeaknessSelector=WeaknessSelector},54295:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.animateDarkness=void 0;const luxon_1=__webpack_require__(70411),dayInSeconds=luxon_1.Duration.fromObject({hours:24}).as("seconds");function darknessLevelAtTime(time){const secondsElapsed=time.diff(time.startOf("day")).as("seconds"),radians=2*Math.PI*(secondsElapsed/dayInSeconds),lightnessLevel=-1*Math.cos(radians),rad18degrees=Math.toRadians(18);return 1-(lightnessLevel>0?1:lightnessLevel<-rad18degrees?0:Math.sin((lightnessLevel+rad18degrees)/rad18degrees*Math.PI/2))}async function runAnimation(transition){if(!canvas.lighting||canvas.lighting.darknessLevel===transition.target)return;const duration=Math.min(Math.trunc(100*transition.duration)/100,6e3);await canvas.lighting.animateDarkness(transition.target,{duration}),game.user.isGM&&await canvas.scene.update({darkness:transition.target})}exports.animateDarkness=async function(timeDiff){var e_1,_a;if(!this.syncDarkness)return;const newTime=this.worldTime,oldTime=newTime.minus({seconds:timeDiff}),fullInterval=luxon_1.Interval.fromDateTimes(oldTime,newTime);if(!fullInterval.isValid)return void await runAnimation({target:darknessLevelAtTime(newTime),duration:100,interval:fullInterval});const compactInterval=(()=>{if(fullInterval.length("hours")>24){const adjustedOldTime=newTime.minus({hours:24});return luxon_1.Interval.fromDateTimes(adjustedOldTime,newTime)}return fullInterval})(),transitionTimes=[4.75,18].map((hour=>compactInterval.start.set({hour,minute:0,second:0}))).concat([4.75,18].map((hour=>compactInterval.end.set({hour,minute:0,second:0})))).filter((dateTime=>compactInterval.contains(dateTime))).concat([compactInterval.start,compactInterval.end]).sort(((dtA,dtB)=>dtA<dtB?-1:dtA>dtB?1:0)),transitions=transitionTimes.reduce(((pairs,dateTime)=>{const index=transitionTimes.indexOf(dateTime);if(0===index)return[];return[...pairs,[transitionTimes[index-1],dateTime]]}),[]).map((pair=>luxon_1.Interval.fromDateTimes(pair[0],pair[1]))).filter((interval=>interval.length()>0)).map((interval=>function(interval,compactInterval){const currentDarkness=canvas.lighting.darknessLevel,targetDarkness=darknessLevelAtTime(interval.end);return{target:targetDarkness,duration:(.5*Math.abs((null!=currentDarkness?currentDarkness:targetDarkness)-targetDarkness)+compactInterval.length("seconds")/dayInSeconds)/2*6e3,interval}}(interval,compactInterval)));try{for(var transitions_1_1,transitions_1=__asyncValues(transitions);!(transitions_1_1=await transitions_1.next()).done;){const transition=transitions_1_1.value;await runAnimation(transition)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{transitions_1_1&&!transitions_1_1.done&&(_a=transitions_1.return)&&await _a.call(transitions_1)}finally{if(e_1)throw e_1.error}}}},34665:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorldClock=void 0;const luxon_1=__webpack_require__(70411),animate_darkness_1=__webpack_require__(54295),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945);class WorldClock extends Application{constructor(){var _a;super(),this.translations=localize_1.LocalizePF2e.translations.PF2E.WorldClock,this.ctrlKeyDown=!1,this.animateDarkness=animate_darkness_1.animateDarkness;const settingValue=game.settings.get("pf2e","worldClock.worldCreatedOn"),defaultValue=null===(_a=game.settings.settings.get("pf2e.worldClock.worldCreatedOn"))||void 0===_a?void 0:_a.default;"string"==typeof settingValue&&settingValue===defaultValue?game.settings.set("pf2e","worldClock.worldCreatedOn",settingValue):luxon_1.DateTime.fromISO(settingValue).isValid||game.settings.set("pf2e","worldClock.worldCreatedOn",defaultValue)}get dateTheme(){return game.settings.get("pf2e","worldClock.dateTheme")}get timeConvention(){const setting=game.settings.get("pf2e","worldClock.timeConvention");if(24!==setting&&12!==setting)throw Error("PF2e System | Unrecognized time convention");return setting}get syncDarkness(){var _a,_b;const sceneSetting=null!==(_b=null===(_a=canvas.scene)||void 0===_a?void 0:_a.getFlag("pf2e","syncDarkness"))&&void 0!==_b?_b:"default";return{enabled:!0,disabled:!1,default:game.settings.get("pf2e","worldClock.syncDarkness")}[sceneSetting]}get worldCreatedOn(){const yearOffset=(()=>{switch(this.dateTheme){case"AR":return CONFIG.PF2E.worldClock.AR.yearOffset;case"AD":return CONFIG.PF2E.worldClock.AD.yearOffset;default:return 0}})(),value=game.settings.get("pf2e","worldClock.worldCreatedOn");return luxon_1.DateTime.fromISO(value).plus({years:yearOffset}).toUTC()}get worldTime(){return this.worldCreatedOn.plus({seconds:game.time.worldTime})}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"world-clock",width:400,template:"systems/pf2e/templates/system/world-clock.html",title:"PF2E.WorldClock.Title"})}get era(){switch(this.dateTheme){case"AR":return this.translations.AR.Era;case"AD":return this.worldTime.toFormat("G");default:return""}}get year(){return this.worldTime.year}get month(){switch(this.dateTheme){case"AR":return this.translations.AR.Months[this.worldTime.setLocale("en-US").monthLong];default:return this.worldTime.monthLong}}get weekday(){switch(this.dateTheme){case"AR":return this.translations.AR.Weekdays[this.worldTime.setLocale("en-US").weekdayLong];default:return this.worldTime.weekdayLong}}getData(options){const date="CE"===this.dateTheme?this.worldTime.toLocaleString(luxon_1.DateTime.DATE_HUGE):game.i18n.format(this.translations.Date,{era:this.era,year:this.year,month:this.month,day:(0,_util_1.ordinal)(this.worldTime.day),weekday:this.weekday}),time=24===this.timeConvention?this.worldTime.toFormat("HH:mm:ss"):this.worldTime.toLocaleString(luxon_1.DateTime.TIME_WITH_SECONDS),sign=this.ctrlKeyDown?"-":"+";return{date,time,options,user:game.user,sign}}_getHeaderButtons(){return(game.user.isGM?[{label:"PF2E.SETTINGS.Settings",class:"configure-settings",icon:"fas fa-cog",onclick:()=>{const menu=game.settings.menus.get("pf2e.worldClock");if(void 0===menu)throw Error("PF2e System | World Clock Settings application not found");(new menu.type).render(!0)}}]:[]).concat(...super._getHeaderButtons())}activateListeners($html){super.activateListeners($html),$html.find("button[data-advance-time]").on("click",(event=>{var _a;const $button=$(event.currentTarget),increment=Number(null!==(_a=$button.data("advanceTime"))&&void 0!==_a?_a:0);0!==increment&&game.time.advance(increment)})),$html.find('button[name="advance"], button[name="retract"]').on("click",(event=>{const value=$html.find('input[type=number][name="diff-value"]').val(),unit=$html.find('select[name="diff-unit"]').val(),increment=("advance"===$(event.currentTarget).attr("name")?1:-1)*Number(value)*Number(unit);game.time.advance(increment)}));for(const eventName of["keydown.pf2e.world-clock","keyup.pf2e.world-clock"])$(document).off(eventName),$(document).on(eventName,(event=>{if(!event.ctrlKey&&!this.ctrlKeyDown)return;const retractTime="keydown"===event.type;this.ctrlKeyDown=retractTime;const $buttons=$html.find("button[data-advance-time]");$buttons.each(((_index,button)=>{const $button=$(button);$button.attr("data-advance-time",-1*Number($button.attr("data-advance-time")))})),$buttons.find(".sign").text(retractTime?"-":"+");const{Advance,Retract}=this.translations.Button;$html.find('button[name="advance"], button[name="retract"]').attr("name",retractTime?"retract":"advance").text(game.i18n.localize(retractTime?Retract:Advance))}))}async close(options){$(document).off("keydown.pf2e.world-clock").off("keyup.pf2e.world-clock"),await super.close(options)}}exports.WorldClock=WorldClock},20323:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.loadPF2ETemplates=void 0,exports.loadPF2ETemplates=function(){return loadTemplates(["systems/pf2e/templates/system/effects-panel.html","systems/pf2e/templates/system/world-clock.html","systems/pf2e/templates/actors/character/partials/modifiers-tooltip.html","systems/pf2e/templates/actors/character/partials/traits.html","systems/pf2e/templates/actors/character/partials/background.html","systems/pf2e/templates/actors/character/partials/abilities.html","systems/pf2e/templates/actors/character/partials/header.html","systems/pf2e/templates/actors/character/sidebar/armor-class.html","systems/pf2e/templates/actors/character/sidebar/class-dc.html","systems/pf2e/templates/actors/character/sidebar/health.html","systems/pf2e/templates/actors/character/sidebar/stamina.html","systems/pf2e/templates/actors/character/sidebar/resistances.html","systems/pf2e/templates/actors/character/sidebar/perception.html","systems/pf2e/templates/actors/character/sidebar/initiative.html","systems/pf2e/templates/actors/character/sidebar/saves.html","systems/pf2e/templates/actors/character/tabs/general.html","systems/pf2e/templates/actors/character/tabs/actions.html","systems/pf2e/templates/actors/character/tabs/biography.html","systems/pf2e/templates/actors/character/tabs/effects.html","systems/pf2e/templates/actors/character/tabs/feats.html","systems/pf2e/templates/actors/character/tabs/inventory.html","systems/pf2e/templates/actors/character/tabs/pfs.html","systems/pf2e/templates/actors/character/tabs/proficiencies.html","systems/pf2e/templates/actors/character/tabs/spellcasting.html","systems/pf2e/templates/actors/character/tabs/crafting.html","systems/pf2e/templates/actors/partials/item-line.html","systems/pf2e/templates/actors/crafting-entry-alchemical.html","systems/pf2e/templates/actors/crafting-entry-list.html","systems/pf2e/templates/actors/spellcasting-spell-list.html","systems/pf2e/templates/actors/character/partials/proficiencylevels-dropdown.html","systems/pf2e/templates/actors/character/icons/d20.html","systems/pf2e/templates/actors/character/icons/plus.html","systems/pf2e/templates/actors/npc/tabs/main.html","systems/pf2e/templates/actors/npc/tabs/inventory.html","systems/pf2e/templates/actors/npc/tabs/spells.html","systems/pf2e/templates/actors/npc/tabs/notes.html","systems/pf2e/templates/actors/npc/partials/header.html","systems/pf2e/templates/actors/npc/partials/sidebar.html","systems/pf2e/templates/actors/npc/partials/action.html","systems/pf2e/templates/actors/npc/partials/attack.html","systems/pf2e/templates/actors/npc/partials/item.html","systems/pf2e/templates/items/rules-panel.html","systems/pf2e/templates/items/action-details.html","systems/pf2e/templates/items/action-sidebar.html","systems/pf2e/templates/items/ancestry-details.html","systems/pf2e/templates/items/ancestry-sidebar.html","systems/pf2e/templates/items/armor-details.html","systems/pf2e/templates/items/armor-sidebar.html","systems/pf2e/templates/items/background-details.html","systems/pf2e/templates/items/background-sidebar.html","systems/pf2e/templates/items/backpack-details.html","systems/pf2e/templates/items/backpack-sidebar.html","systems/pf2e/templates/items/book-details.html","systems/pf2e/templates/items/book-sidebar.html","systems/pf2e/templates/items/treasure-sidebar.html","systems/pf2e/templates/items/class-details.html","systems/pf2e/templates/items/consumable-details.html","systems/pf2e/templates/items/consumable-sidebar.html","systems/pf2e/templates/items/condition-details.html","systems/pf2e/templates/items/condition-sidebar.html","systems/pf2e/templates/items/deity-details.html","systems/pf2e/templates/items/deity-sidebar.html","systems/pf2e/templates/items/effect-sidebar.html","systems/pf2e/templates/items/equipment-details.html","systems/pf2e/templates/items/equipment-sidebar.html","systems/pf2e/templates/items/feat-details.html","systems/pf2e/templates/items/feat-sidebar.html","systems/pf2e/templates/items/formula-sidebar.html","systems/pf2e/templates/items/kit-details.html","systems/pf2e/templates/items/kit-sidebar.html","systems/pf2e/templates/items/lore-details.html","systems/pf2e/templates/items/lore-sidebar.html","systems/pf2e/templates/items/mystify-panel.html","systems/pf2e/templates/items/spell-details.html","systems/pf2e/templates/items/spell-sidebar.html","systems/pf2e/templates/items/melee-details.html","systems/pf2e/templates/items/weapon-details.html","systems/pf2e/templates/items/weapon-sidebar.html","systems/pf2e/templates/items/activation-panel.html","systems/pf2e/templates/actors/loot/inventory.html","systems/pf2e/templates/actors/loot/sidebar.html","systems/pf2e/templates/actors/vehicle/vehicle-sheet.html","systems/pf2e/templates/actors/vehicle/vehicle-header.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-health.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-armorclass.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-saves.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-resistances.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-details.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-actions.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-inventory.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-description.html","systems/pf2e/templates/packs/action-browser.html","systems/pf2e/templates/packs/bestiary-browser.html","systems/pf2e/templates/packs/inventory-browser.html","systems/pf2e/templates/packs/feat-browser.html","systems/pf2e/templates/packs/hazard-browser.html","systems/pf2e/templates/packs/spell-browser.html","systems/pf2e/templates/packs/browser-settings.html"])}},20381:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UserPF2e=void 0;const player_config_1=__webpack_require__(56815);class UserPF2e extends User{prepareData(){super.prepareData(),canvas.ready&&canvas.tokens.controlled.length>0&&game.pf2e.effectPanel.refresh()}prepareBaseData(){super.prepareBaseData(),this.data.flags=mergeObject({pf2e:{settings:deepClone(player_config_1.PlayerConfigPF2e.defaultSettings)}},this.data.flags)}get settings(){return deepClone(this.data.flags.pf2e.settings)}_onUpdate(changed,options,userId){var _a,_b,_c;super._onUpdate(changed,options,userId);(null===(_c=null===(_b=null===(_a=changed.flags)||void 0===_a?void 0:_a.pf2e)||void 0===_b?void 0:_b.settings)||void 0===_c?void 0:_c.darkvisionFilter)&&game.user.id===this.id&&canvas.darkvision.draw()}}exports.UserPF2e=UserPF2e},81781:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UserPF2e=void 0;var document_1=__webpack_require__(20381);Object.defineProperty(exports,"UserPF2e",{enumerable:!0,get:function(){return document_1.UserPF2e}})},56815:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PlayerConfigPF2e=void 0;const USER_SETTINGS_KEYS=["uiTheme","showEffectPanel","showRollDialogs","darkvisionFilter"];class PlayerConfigPF2e extends FormApplication{constructor(){super(),this.settings=game.user.settings}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"pf2e-player-config-panel",title:"PF2e Player Settings",template:"systems/pf2e/templates/user/player-config.html",classes:["sheet"],width:500,height:"auto",resizable:!1})}getData(){return Object.assign(Object.assign(Object.assign({},super.getData()),this.settings),{developMode:!1})}static activateColorScheme(){var _a;console.debug("PF2e System | Activating Player Configured color scheme");const cssLink=`<link id="pf2e-color-scheme" href="systems/pf2e/styles/user/color-scheme-${null!==(_a=game.user.getFlag("pf2e","settings.uiTheme"))&&void 0!==_a?_a:PlayerConfigPF2e.defaultSettings.uiTheme}.css" rel="stylesheet" type="text/css">`;$("head").append(cssLink)}static hookOnRenderSettings(){Hooks.on("renderSettings",((_app,html)=>{const configButton=$(`<button id="pf2e-player-config" data-action="pf2e-player-config">\n                    <i class="fas fa-cogs"></i> ${PlayerConfigPF2e.defaultOptions.title}\n                 </button>`);html.find("#settings-game").prepend(configButton),configButton.on("click",(()=>{(new PlayerConfigPF2e).render(!0)}))}))}async _updateObject(_event,formData){const settings=USER_SETTINGS_KEYS.reduce(((currentSettings,key)=>{var _a;return currentSettings[key]=null!==(_a=formData[key])&&void 0!==_a?_a:this.settings[key],currentSettings}),this.settings);await game.user.setFlag("pf2e","settings",settings),$("link#pf2e-color-scheme").attr({href:`systems/pf2e/styles/user/color-scheme-${formData.uiTheme}.css`})}}exports.PlayerConfigPF2e=PlayerConfigPF2e,PlayerConfigPF2e.defaultSettings={uiTheme:"blue",showEffectPanel:!0,showRollDialogs:!0,darkvisionFilter:!1}},30417:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const hooks_1=__webpack_require__(57399);__webpack_require__(78921);__webpack_require__(7478);__webpack_require__(44958),hooks_1.HooksPF2e.listen()},31565:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.prepareMinions=void 0;const index_1=__webpack_require__(85530);exports.prepareMinions=function(master){const familiars=game.actors.filter((actor=>{var _a;return actor instanceof index_1.FamiliarPF2e&&(!master||(null===(_a=actor.data.data.master)||void 0===_a?void 0:_a.id)===master.id)}));for(const familiar of familiars)familiar.prepareData()}},34191:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.StatusEffects=void 0;const localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),token_1=__webpack_require__(756),encounter_1=__webpack_require__(49938);class StatusEffects{static setIconTheme(){const iconTheme=game.settings.get("pf2e","statusEffectType");CONFIG.PF2E.statusEffects.lastIconType=iconTheme,CONFIG.PF2E.statusEffects.effectsIconFolder=StatusEffects.SETTINGOPTIONS.iconTypes[iconTheme].effectsIconFolder,CONFIG.PF2E.statusEffects.effectsIconFileType=StatusEffects.SETTINGOPTIONS.iconTypes[iconTheme].effectsIconFileType,CONFIG.PF2E.statusEffects.foundryStatusEffects=CONFIG.statusEffects}static init(){CONFIG.PF2E.statusEffects.overruledByModule||(console.log("PF2e System | Initializing Status Effects Module"),this.hookIntoFoundry(),this.updateStatusIcons())}static get conditions(){return localize_1.LocalizePF2e.translations.PF2E.condition}static get SETTINGOPTIONS(){return{iconTypes:{default:{effectsIconFolder:"systems/pf2e/icons/conditions/",effectsIconFileType:"webp"},blackWhite:{effectsIconFolder:"systems/pf2e/icons/conditions-2/",effectsIconFileType:"webp"},legacy:{effectsIconFolder:"systems/pf2e/icons/conditions-3/",effectsIconFileType:"webp"}}}}static hookIntoFoundry(){if(Hooks.on("renderTokenHUD",((_app,html,data)=>{StatusEffects.hookOnRenderTokenHUD(html,data)})),Hooks.on("clearTokenHUD",((tokenHUD,token)=>{tokenHUD instanceof TokenHUD&&token instanceof token_1.TokenPF2e&&tokenHUD._state===TokenHUD.RENDER_STATES.NONE&&!0===(null==token?void 0:token.statusEffectChanged)&&(token.statusEffectChanged=!1,StatusEffects._createChatMessage(token))})),game.user.isGM&&game.settings.get("pf2e","statusEffectShowCombatMessage")){let lastTokenId="";Hooks.on("updateCombat",(combat=>{if(!(combat instanceof encounter_1.EncounterPF2e))return;const combatant=combat.combatant,token=null==combatant?void 0:combatant.token;token&&token.id!==lastTokenId&&(null==combat?void 0:combat.started)&&"number"==typeof(null==combatant?void 0:combatant.initiative)&&!combatant.data.defeated&&(lastTokenId=token.id,this._createChatMessage(token.object,combatant.hidden)),(null==combat?void 0:combat.started)||""===lastTokenId||(lastTokenId="")}))}}static setPF2eStatusEffectControls(html,token){const effects=html.find(".status-effects");effects.on("click",".pf2e-effect-control",this.setStatusValue.bind(token)).on("contextmenu",".pf2e-effect-control",this.setStatusValue.bind(token)).on("mouseover mouseout",".pf2e-effect-control",this.showStatusLabel),effects.off("click",".effect-control").on("click",".effect-control",this.toggleStatus.bind(token)),effects.off("contextmenu",".effect-control").on("contextmenu",".effect-control",this.toggleStatus.bind(token)).on("mouseover mouseout",".effect-control",this.showStatusLabel)}static updateStatusIcons(){CONFIG.statusEffects=Array.from(game.pf2e.ConditionManager.conditions.values()).filter((condition=>!["attitudes","detection"].includes(condition.data.group))).sort(((conditionA,conditionB)=>conditionA.name.localeCompare(conditionB.name))).map((condition=>`${CONFIG.PF2E.statusEffects.effectsIconFolder}${condition.data.slug}.${CONFIG.PF2E.statusEffects.effectsIconFileType}`)),CONFIG.statusEffects.push(CONFIG.controlIcons.defeated)}static async hookOnRenderTokenHUD(html,tokenData){var _a,_b,_c;const token=canvas.tokens.get(tokenData._id);if(!token)throw(0,_util_1.ErrorPF2e)(`StatusEffects | Could not find token with id: ${tokenData._id}`);const $statusIcons=html.find("img.effect-control"),affectingConditions=null!==(_b=null===(_a=token.actor)||void 0===_a?void 0:_a.itemTypes.condition.filter((condition=>condition.fromSystem&&condition.isActive&&condition.isInHUD)))&&void 0!==_b?_b:[];html.find("div.status-effects").append('<div class="status-effect-summary"></div>'),this.setPF2eStatusEffectControls(html,token);for(const icon of $statusIcons){const $icon=$(icon),iconPath=null!==(_c=$icon.attr("src"))&&void 0!==_c?_c:"";if(iconPath.includes(CONFIG.PF2E.statusEffects.effectsIconFolder)){const slug=this.getSlugFromImg(iconPath),conditionData=game.pf2e.ConditionManager.getCondition(slug);if(!conditionData)continue;$icon.attr("data-effect",slug),$icon.attr("data-condition",conditionData.name);const affecting=affectingConditions.find((condition=>condition.slug===slug));if(conditionData.data.value.isValued){$icon.removeClass("effect-control").addClass("pf2e-effect-control"),$icon.wrap("<div class='pf2e-effect-img-container'></div>");const $value=$("<div class='pf2e-effect-value' style='display:none'>0</div>");$icon.parent().append($value),affecting&&($icon.attr("data-value",affecting.value),"number"==typeof affecting.value&&$($value).removeAttr("style").text(affecting.value))}$icon.hasClass("active")&&!affecting?$icon.removeClass("active"):!$icon.hasClass("active")&&affecting&&$icon.addClass("active")}else iconPath===CONFIG.controlIcons.defeated&&$icon.attr({"data-condition":game.i18n.localize("PF2E.Actor.Dead")})}}static async updateHUD(html,actor){const $statusIcons=html.find("img.effect-control, img.pf2e-effect-control"),appliedConditions=actor.itemTypes.condition.filter((condition=>condition.fromSystem&&condition.isActive&&condition.isInHUD));for(const icon of $statusIcons){const $icon=$(icon),conditionSlug=$icon.attr("data-effect"),conditionName=$icon.attr("data-condition");if(conditionSlug&&conditionName){const applied=appliedConditions.find((condition=>condition.slug===conditionSlug)),conditionBase=game.pf2e.ConditionManager.getCondition(conditionSlug);if(null==conditionBase?void 0:conditionBase.data.value.isValued){const $value=$icon.siblings("div.pf2e-effect-value").first();$icon.hasClass("active")?applied&&applied.isActive&&null!==applied.value?null!==applied.value&&$value.text(applied.value):($icon.removeClass("active"),$value.attr("style","display:none").text("0")):(null==applied?void 0:applied.isActive)&&"number"==typeof applied.value&&($icon.addClass("active"),$value.removeAttr("style").text(applied.value))}else $icon.hasClass("active")?applied&&applied.isActive||$icon.removeClass("active"):(null==applied?void 0:applied.isActive)&&$icon.addClass("active")}}}static showStatusLabel(event){const $toggle=$(event.currentTarget),statusDescr=$("div.status-effect-summary"),label=$toggle.attr("data-condition");label&&statusDescr.text(label).toggleClass("active")}static async setStatusValue(event){if(event.preventDefault(),event.stopImmediatePropagation(),event.shiftKey)return void await StatusEffects.onToggleOverlay(event,this);const $icon=$(event.currentTarget),slug=$icon.attr("data-effect"),{actor}=this;if(!actor||!slug)return;const condition=actor.itemTypes.condition.find((condition=>condition.fromSystem&&condition.slug===slug&&condition.isInHUD&&!condition.data.data.references.parent));if("contextmenu"===event.type)if(event.ctrlKey){this.statusEffectChanged=!0;const conditionIds=actor.itemTypes.condition.filter((condition=>condition.fromSystem&&condition.slug===slug)).map((condition=>condition.id));await game.pf2e.ConditionManager.removeConditionFromToken(conditionIds,this)}else(null==condition?void 0:condition.value)&&(this.statusEffectChanged=!0,await game.pf2e.ConditionManager.updateConditionValue(condition.id,this,condition.value-1),this.data.actorLink&&StatusEffects.updateHUD($icon.parent().parent(),actor));else if("click"===event.type)if(this.statusEffectChanged=!0,"number"==typeof(null==condition?void 0:condition.value))await game.pf2e.ConditionManager.updateConditionValue(condition.id,this,condition.value+1),this.data.actorLink&&StatusEffects.updateHUD($icon.parent().parent(),actor);else{const newCondition=game.pf2e.ConditionManager.getCondition(slug).toObject();newCondition.data.sources.hud=!0,await game.pf2e.ConditionManager.addConditionToToken(newCondition,this)}}static async toggleStatus(event){var _a,_b;event.preventDefault(),event.stopImmediatePropagation();const $target=$(event.currentTarget),slug=null!==(_a=$target.attr("data-effect"))&&void 0!==_a?_a:"",src=null!==(_b=$target.attr("src"))&&void 0!==_b?_b:"";if(event.shiftKey||src===CONFIG.controlIcons.defeated)return StatusEffects.onToggleOverlay(event,this);const{actor}=this,condition=null==actor?void 0:actor.itemTypes.condition.find((condition=>condition.slug===slug&&condition.isInHUD&&!condition.data.data.references.parent)),conditionIds=[];if("contextmenu"===event.type)event.ctrlKey?null==actor||actor.itemTypes.condition.filter((condition=>condition.fromSystem&&condition.data.data.base===slug)).forEach((condition=>conditionIds.push(condition.id))):condition&&conditionIds.push(condition.id),conditionIds.length>0?(this.statusEffectChanged=!0,await game.pf2e.ConditionManager.removeConditionFromToken(conditionIds,this)):this.data.effects.includes(src)&&await this.toggleEffect(src);else if("click"===event.type&&!condition&&slug){const newCondition=game.pf2e.ConditionManager.getCondition(slug).toObject();newCondition.data.sources.hud=!0,this.statusEffectChanged=!0,await game.pf2e.ConditionManager.addConditionToToken(newCondition,this)}}static async onToggleOverlay(event,token){var _a,_b;event.preventDefault();const $target=$(event.currentTarget),iconPath=null!==(_a=$(event.currentTarget).attr("src"))&&void 0!==_a?_a:"";if("click"===event.type&&token.data.overlayEffect===iconPath||"contextmenu"===event.type&&token.data.overlayEffect!==iconPath)return;const togglingDead=iconPath===CONFIG.controlIcons.defeated;token.combatant&&togglingDead?await token.combatant.toggleDefeated():(await token.toggleEffect(iconPath,{overlay:!0}),$target.siblings().removeClass("overlay"),$target.toggleClass("overlay")),await(null===(_b=token.layer.hud)||void 0===_b?void 0:_b.render())}static _createChatMessage(token,whisper=!1){var _a,_b,_c;let statusEffectList="";const conditions=null!==(_b=null===(_a=token.actor)||void 0===_a?void 0:_a.itemTypes.condition.filter((condition=>condition.fromSystem&&condition.data.data.active)))&&void 0!==_b?_b:[];for(const condition of conditions){const conditionInfo=StatusEffects.conditions[condition.slug],summary="summary"in conditionInfo?conditionInfo.summary:"";statusEffectList+=`\n                <li><img src="${CONFIG.PF2E.statusEffects.effectsIconFolder+condition.data.data.hud.statusName}.${CONFIG.PF2E.statusEffects.effectsIconFileType}" title="${summary}">\n                    <span class="statuseffect-li">\n                        <span class="statuseffect-li-text">${condition.name} ${condition.data.data.value.isValued?condition.data.data.value.value:""}</span>\n                        <div class="statuseffect-rules"><h2>${condition.name}</h2>${condition.data.data.description.value}</div>\n                    </span>\n                </li>`}if(""===statusEffectList)return;const message=`\n            <div class="dice-roll">\n                <div class="dice-result">\n                    <div class="dice-total statuseffect-message">\n                        <ul>${statusEffectList}</ul>\n                    </div>\n                </div>\n            </div>\n        `,chatData={user:game.user.id,speaker:{alias:game.i18n.format("PF2E.StatusEffects",{name:token.name})},content:message,type:CONST.CHAT_MESSAGE_TYPES.OTHER};(!(null===(_c=token.actor)||void 0===_c?void 0:_c.hasPlayerOwner)&&game.settings.get("pf2e","metagame.secretCondition")||whisper)&&(chatData.whisper=ChatMessage.getWhisperRecipients("GM")),ChatMessage.create(chatData)}static async migrateStatusEffectUrls(chosenSetting){if(CONFIG.PF2E.statusEffects.overruledByModule)return console.log("PF2e System | The PF2eStatusEffect icons are overruled by a module"),void ui.notifications.error("Changing this setting has no effect, as the icon types are overruled by a module.",{permanent:!0});console.debug("PF2e System | Changing status effect icon types");const iconType=StatusEffects.SETTINGOPTIONS.iconTypes[chosenSetting],lastIconType=StatusEffects.SETTINGOPTIONS.iconTypes[CONFIG.PF2E.statusEffects.lastIconType],promises=[];for(const scene of game.scenes){const tokenUpdates=[];for(const token of scene.data.tokens){const tokenData=token.data,update=tokenData.toObject(!1);for(const url of tokenData.effects)if(url.includes(lastIconType.effectsIconFolder)){const statusName=this.getSlugFromImg(url),newUrl=`${iconType.effectsIconFolder+statusName}.${iconType.effectsIconFileType}`;console.log(`PF2e System | Migrating effect ${statusName} of Token ${tokenData.name} on scene ${scene.data.name} | '${url}' to '${newUrl}'`);const index=update.effects.indexOf(url);index>-1&&update.effects.splice(index,1,newUrl)}tokenUpdates.push(update)}promises.push(scene.updateEmbeddedDocuments("Token",tokenUpdates))}await Promise.all(promises),CONFIG.PF2E.statusEffects.effectsIconFolder=iconType.effectsIconFolder,CONFIG.PF2E.statusEffects.effectsIconFileType=iconType.effectsIconFileType,CONFIG.PF2E.statusEffects.lastIconType=chosenSetting,StatusEffects.updateStatusIcons()}static async setStatus(token,effects=[]){var e_1,_a,_b,_c,_d,_e;console.warn("PF2e System | This method is deprecated. It will be removed by the release of Foundry V9.");try{for(var _g,_f=__asyncValues(Object.values(effects));!(_g=await _f.next()).done;){const status=_g.value,slug=(0,_util_1.sluggify)(status.name),value=status.value,source=status.source?status.source:"PF2eStatusEffects.setStatus",condition=game.pf2e.ConditionManager.getCondition(slug);if(!condition){console.error(`PF2e System | "${slug}" is not a vaild condition!`);continue}const effect=null===(_e=null===(_d=null===(_c=null===(_b=null==token?void 0:token.actor)||void 0===_b?void 0:_b.itemTypes)||void 0===_c?void 0:_c.condition)||void 0===_d?void 0:_d.find((condition=>condition.data.data.source.value===source&&condition.data.data.hud.statusName===slug)))||void 0===_e?void 0:_e.data;if("string"==typeof value&&condition.data.value.isValued){if(effect){let newValue=0;if(newValue=value.startsWith("+")||value.startsWith("-")?Number(effect.data.value.value)+Number(value):Number(value),Number.isNaN(newValue)){console.log(`PF2e System | '${value}' is not a number!`);continue}await game.pf2e.ConditionManager.updateConditionValue(effect._id,token,newValue)}else if(Number(value)>0){const conditionData=condition.toObject();conditionData.data.source.value=source,conditionData.data.value.value=Number(value),await game.pf2e.ConditionManager.addConditionToToken(conditionData,token)}}else if(!value){if(condition.data.value.isValued){console.log(`PF2e System | '${slug}' must have a value.`);continue}if(void 0!==effect&&status.toggle)await game.pf2e.ConditionManager.removeConditionFromToken([effect._id],token);else if(void 0===effect){const conditionData=condition.toObject();conditionData.data.source.value=source,await game.pf2e.ConditionManager.addConditionToToken(conditionData,token)}}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{_g&&!_g.done&&(_a=_f.return)&&await _a.call(_f)}finally{if(e_1)throw e_1.error}}this._createChatMessage(token)}static getSlugFromImg(url){return url.substring(url.lastIndexOf("/")+1,url.length-CONFIG.PF2E.statusEffects.effectsIconFileType.length-1)}}exports.StatusEffects=StatusEffects},51846:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2ECONFIG=void 0;const _item_1=__webpack_require__(10843),_actor_1=__webpack_require__(85530),runes_1=__webpack_require__(35847),_util_1=__webpack_require__(6945),values_1=__webpack_require__(67189),en_json_1=__importDefault(__webpack_require__(67515)),ancestryTraits={aasimar:"PF2E.TraitAasimar",aberration:"PF2E.TraitAberration",anadi:"PF2E.TraitAnadi",android:"PF2E.TraitAndroid",aphorite:"PF2E.TraitAphorite",automaton:"PF2E.TraitAutomaton",azarketi:"PF2E.TraitAzarketi",beastkin:"PF2E.TraitBeastkin",catfolk:"PF2E.TraitCatfolk",changeling:"PF2E.TraitChangeling",conrasu:"PF2E.TraitConrasu",dhampir:"PF2E.TraitDhampir",duskwalker:"PF2E.TraitDuskwalker",dwarf:"PF2E.TraitDwarf",elf:"PF2E.TraitElf",fetchling:"PF2E.TraitFetchling",fleshwarp:"PF2E.TraitFleshwarp",ganzi:"PF2E.TraitGanzi",geniekin:"PF2E.TraitGeniekin",gnoll:"PF2E.TraitGnoll",gnome:"PF2E.TraitGnome",goblin:"PF2E.TraitGoblin",goloma:"PF2E.TraitGoloma",grippli:"PF2E.TraitGrippli","half-elf":"PF2E.TraitHalfElf",halfling:"PF2E.TraitHalfling","half-orc":"PF2E.TraitHalfOrc",human:"PF2E.TraitHuman",hobgoblin:"PF2E.TraitHobgoblin",kitsune:"PF2E.TraitKitsune",kobold:"PF2E.TraitKobold",ifrit:"PF2E.TraitIfrit",leshy:"PF2E.TraitLeshy",lizardfolk:"PF2E.TraitLizardfolk",orc:"PF2E.TraitOrc",oread:"PF2E.TraitOread",poppet:"PF2E.TraitPoppet",ratfolk:"PF2E.TraitRatfolk",shisk:"PF2E.TraitShisk",shoony:"PF2E.TraitShoony",sprite:"PF2E.TraitSprite",strix:"PF2E.TraitStrix",suli:"PF2E.TraitSuli",sylph:"PF2E.TraitSylph",tengu:"PF2E.TraitTengu",tiefling:"PF2E.TraitTiefling",undine:"PF2E.TraitUndine"},ancestryItemTraits=Object.assign(Object.assign({},ancestryTraits),{amphibious:"PF2E.TraitAmphibious",fey:"PF2E.TraitFey",fungus:"PF2E.TraitFungus",humanoid:"PF2E.TraitHumanoid",plant:"PF2E.TraitPlant"}),classTraits={alchemist:"PF2E.TraitAlchemist",barbarian:"PF2E.TraitBarbarian",bard:"PF2E.TraitBard",champion:"PF2E.TraitChampion",cleric:"PF2E.TraitCleric",druid:"PF2E.TraitDruid",fighter:"PF2E.TraitFighter",gunslinger:"PF2E.TraitGunslinger",inventor:"PF2E.TraitInventor",investigator:"PF2E.TraitInvestigator",magus:"PF2E.TraitMagus",monk:"PF2E.TraitMonk",oracle:"PF2E.TraitOracle",ranger:"PF2E.TraitRanger",rogue:"PF2E.TraitRogue",sorcerer:"PF2E.TraitSorcerer",summoner:"PF2E.TraitSummoner",swashbuckler:"PF2E.TraitSwashbuckler",witch:"PF2E.TraitWitch",wizard:"PF2E.TraitWizard"},damageCategories={alignment:"PF2E.Alignment",adamantine:"PF2E.PreciousMaterialAdamantine",coldiron:"PF2E.PreciousMaterialColdIron",darkwood:"PF2E.PreciousMaterialDarkwood",energy:"PF2E.TraitEnergy",ghostTouch:"PF2E.WeaponPropertyRuneGhostTouch",mithral:"PF2E.PreciousMaterialMithral",orichalcum:"PF2E.PreciousMaterialOrichalcum",physical:"PF2E.TraitPhysical",precision:"PF2E.TraitPrecision",salt:"PF2E.TraitSalt","salt-water":"PF2E.TraitSaltWater",silver:"PF2E.PreciousMaterialSilver",warpglass:"PF2E.PreciousMaterialWarpglass"},alignmentTraits={chaotic:"PF2E.TraitChaotic",evil:"PF2E.TraitEvil",good:"PF2E.TraitGood",lawful:"PF2E.TraitLawful"},elementalTraits={air:"PF2E.TraitAir",earth:"PF2E.TraitEarth",fire:"PF2E.TraitFire",water:"PF2E.TraitWater"},energyDamageTypes={acid:"PF2E.TraitAcid",cold:"PF2E.TraitCold",electricity:"PF2E.TraitElectricity",fire:"PF2E.TraitFire",force:"PF2E.TraitForce",negative:"PF2E.TraitNegative",positive:"PF2E.TraitPositive",sonic:"PF2E.TraitSonic"},damageTypes=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},alignmentTraits),elementalTraits),energyDamageTypes),{bleed:"PF2E.TraitBleed",bludgeoning:"PF2E.TraitBludgeoning",piercing:"PF2E.TraitPiercing",slashing:"PF2E.TraitSlashing"}),{mental:"PF2E.TraitMental",poison:"PF2E.TraitPoison",untyped:"PF2E.TraitUntyped"}),damageTraits=Object.assign(Object.assign(Object.assign(Object.assign({},alignmentTraits),elementalTraits),energyDamageTypes),{light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",mental:"PF2E.TraitMental",nonlethal:"PF2E.TraitNonlethal",plant:"PF2E.TraitPlant",radiation:"PF2E.TraitRadiation"}),conditionTypes={blinded:"PF2E.ConditionTypeBlinded",broken:"PF2E.ConditionTypeBroken",clumsy:"PF2E.ConditionTypeClumsy",concealed:"PF2E.ConditionTypeConcealed",confused:"PF2E.ConditionTypeConfused",controlled:"PF2E.ConditionTypeControlled",dazzled:"PF2E.ConditionTypeDazzled",deafened:"PF2E.ConditionTypeDeafened",doomed:"PF2E.ConditionTypeDoomed",drained:"PF2E.ConditionTypeDrained",dying:"PF2E.ConditionTypeDying",encumbered:"PF2E.ConditionTypeEncumbered",enfeebled:"PF2E.ConditionTypeEnfeebled",fascinated:"PF2E.ConditionTypeFascinated",fatigued:"PF2E.ConditionTypeFatigued","flat-footed":"PF2E.ConditionTypeFlatFooted",fleeing:"PF2E.ConditionTypeFleeing",friendly:"PF2E.ConditionTypeFriendly",frightened:"PF2E.ConditionTypeFrightened",grabbed:"PF2E.ConditionTypeGrabbed",helpful:"PF2E.ConditionTypeHelpful",hidden:"PF2E.ConditionTypeHidden",hostile:"PF2E.ConditionTypeHostile",immobilized:"PF2E.ConditionTypeImmobilized",indifferent:"PF2E.ConditionTypeIndifferent",invisible:"PF2E.ConditionTypeInvisible",observed:"PF2E.ConditionTypeObserved",paralyzed:"PF2E.ConditionTypeParalyzed","persistent-damage":"PF2E.ConditionTypePersistent",petrified:"PF2E.ConditionTypePetrified",prone:"PF2E.ConditionTypeProne",quickened:"PF2E.ConditionTypeQuickened",restrained:"PF2E.ConditionTypeRestrained",sickened:"PF2E.ConditionTypeSickened",slowed:"PF2E.ConditionTypeSlowed",stunned:"PF2E.ConditionTypeStunned",stupefied:"PF2E.ConditionTypeStupefied",unconscious:"PF2E.ConditionTypeUnconscious",undetected:"PF2E.ConditionTypeUndetected",unfriendly:"PF2E.ConditionTypeUnfriendly",unnoticed:"PF2E.ConditionTypeUnnoticed",wounded:"PF2E.ConditionTypeWounded"},magicSchools={abjuration:"PF2E.TraitAbjuration",conjuration:"PF2E.TraitConjuration",divination:"PF2E.TraitDivination",enchantment:"PF2E.TraitEnchantment",evocation:"PF2E.TraitEvocation",illusion:"PF2E.TraitIllusion",necromancy:"PF2E.TraitNecromancy",transmutation:"PF2E.TraitTransmutation"},immunityTypes=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},conditionTypes),damageCategories),damageTraits),damageTypes),magicSchools),{"area-damage":"PF2E.TraitAreaDamage",auditory:"PF2E.TraitAuditory",confusion:"PF2E.TraitConfusion","critical-hits":"PF2E.TraitCriticalHits",curse:"PF2E.TraitCurse",detection:"PF2E.TraitDetection","death-effects":"PF2E.TraitDeathEffects",disease:"PF2E.TraitDisease",emotion:"PF2E.TraitEmotion","fear-effects":"PF2E.TraitFearEffects",ghostTouch:"PF2E.WeaponPropertyRuneGhostTouch",healing:"PF2E.TraitHealing",inhaled:"PF2E.TraitInhaled",light:"PF2E.TraitLight",magical:"PF2E.TraitMagical","nonlethal-attacks":"PF2E.TraitNonlethalAttacks","nonmagical-attacks":"PF2E.TraitNonmagicalAttacks","object-immunities":"PF2E.TraitObjectImmunities",olfactory:"PF2E.TraitOlfactory",polymorph:"PF2E.TraitPolymorph",possession:"PF2E.TraitPossession",scrying:"PF2E.TraitScrying",sleep:"PF2E.TraitSleep",spellDeflection:"PF2E.TraitSpellDeflection","swarm-attacks":"PF2E.TraitSwarmAttacks","swarm-mind":"PF2E.TraitSwarmMind",trip:"PF2E.TraitTrip",unarmed:"PF2E.TraitUnarmed",visual:"PF2E.TraitVisual"}),weaknessTypes=Object.assign(Object.assign(Object.assign(Object.assign({},damageCategories),damageTraits),damageTypes),{"area-damage":"PF2E.TraitAreaDamage",axe:"PF2E.TraitAxeVulnerability","critical-hits":"PF2E.TraitCriticalHits",emotion:"PF2E.TraitEmotion","nonlethal-attacks":"PF2E.TraitNonlethalAttacks","persistent-damage":"PF2E.ConditionTypePersistent","salt-water":"PF2E.TraitSaltWater","splash-damage":"PF2E.TraitSplashDamage","vampire-weaknesses":"PF2E.TraitVampireWeaknesses",vorpal:"PF2E.WeaponPropertyRuneVorpal","vorpal-fear":"PF2E.TraitVorpalFear",unarmed:"PF2E.TraitUnarmed",weapons:"PF2E.TraitWeapons"}),resistanceTypes=Object.assign(Object.assign(Object.assign(Object.assign({},damageCategories),damageTraits),damageTypes),{all:"PF2E.TraitAll","area-damage":"PF2E.TraitAreaDamage","critical-hits":"PF2E.TraitCriticalHits","nonlethal-attacks":"PF2E.TraitNonlethalAttacks","persistent-damage":"PF2E.ConditionTypePersistent","protean anatomy":"PF2E.TraitProteanAnatomy",unarmed:"PF2E.TraitUnarmed",vorpal:"PF2E.WeaponPropertyRuneVorpal",weapons:"PF2E.TraitWeapons"}),magicTraditions={arcane:"PF2E.TraitArcane",divine:"PF2E.TraitDivine",occult:"PF2E.TraitOccult",primal:"PF2E.TraitPrimal"},baseWeaponTypes=Object.keys(en_json_1.default.PF2E.Weapon.Base).reduce(((map,slug)=>Object.assign(Object.assign({},map),{[slug]:`PF2E.Weapon.Base.${slug}`})),{}),rangeDescriptions=values_1.RANGE_TRAITS.reduce(((descriptions,trait)=>mergeObject(descriptions,{[trait]:"PF2E.TraitDescriptionRange"})),{}),traitsDescriptions=Object.assign(Object.assign({common:"PF2E.TraitDescriptionCommon",uncommon:"PF2E.TraitDescriptionUncommon",rare:"PF2E.TraitDescriptionRare",unique:"PF2E.TraitDescriptionUnique",aberration:"PF2E.TraitDescriptionAberration",agile:"PF2E.TraitDescriptionAgile",aasimar:"PF2E.TraitDescriptionAasimar",aeon:"PF2E.TraitDescriptionAeon",aesir:"PF2E.TraitDescriptionAesir",agathion:"PF2E.TraitDescriptionAgathion",amphibious:"PF2E.TraitDescriptionAmphibious",anadi:"PF2E.TraitDescriptionAnadi",android:"PF2E.TraitDescriptionAndroid",artifact:"PF2E.TraitDescriptionArtifact",attached:"PF2E.TraitDescriptionAttached","attached-to-shield":"PF2E.TraitDescriptionAttached","attached-to-crossbow-or-firearm":"PF2E.TraitDescriptionAttached",backstabber:"PF2E.TraitDescriptionBackstabber",backswing:"PF2E.TraitDescriptionBackswing",bomb:"PF2E.TraitDescriptionBomb",brutal:"PF2E.TraitDescriptionBrutal","capacity-3":"PF2E.TraitDescriptionCapacity","capacity-4":"PF2E.TraitDescriptionCapacity","capacity-5":"PF2E.TraitDescriptionCapacity",class:"PF2E.TraitDescriptionClass",climbing:"PF2E.TraitDescriptionClimbing",clockwork:"PF2E.TraitDescriptionClockwork",cobbled:"PF2E.TraitDescriptionCobbled",concealable:"PF2E.TraitDescriptionConcealable",concussive:"PF2E.TraitDescriptionConcussive",contingency:"PF2E.TraitDescriptionContingency","critical-fusion":"PF2E.TraitDescriptionCriticalFusion","deadly-d6":"PF2E.TraitDescriptionDeadly","deadly-d8":"PF2E.TraitDescriptionDeadly","deadly-2d8":"PF2E.TraitDescriptionDeadly","deadly-3d8":"PF2E.TraitDescriptionDeadly","deadly-4d8":"PF2E.TraitDescriptionDeadly","deadly-d10":"PF2E.TraitDescriptionDeadly","deadly-2d10":"PF2E.TraitDescriptionDeadly","deadly-3d10":"PF2E.TraitDescriptionDeadly","deadly-4d10":"PF2E.TraitDescriptionDeadly","deadly-d12":"PF2E.TraitDescriptionDeadly","deadly-2d12":"PF2E.TraitDescriptionDeadly","deadly-3d12":"PF2E.TraitDescriptionDeadly","deadly-4d12":"PF2E.TraitDescriptionDeadly",disarm:"PF2E.TraitDescriptionDisarm","double-barrel":"TraitDescriptionDoubleBarrel",duskwalker:"PF2E.TraitDescriptionDuskwalker",dwarf:"PF2E.TraitDescriptionDwarf",elf:"PF2E.TraitDescriptionElf","fatal-aim-d10":"PF2E.TraitDescriptionFatalAim","fatal-aim-d12":"PF2E.TraitDescriptionFatalAim","fatal-d8":"PF2E.TraitDescriptionFatal","fatal-d10":"PF2E.TraitDescriptionFatal","fatal-d12":"PF2E.TraitDescriptionFatal",finesse:"PF2E.TraitDescriptionFinesse",forceful:"PF2E.TraitDescriptionForceful","free-hand":"PF2E.TraitDescriptionFreeHand",fungus:"PF2E.TraitDescriptionFungus",genie:"PF2E.TraitDescriptionGenie",geniekin:"PF2E.TraitDescriptionGeniekin",gnome:"PF2E.TraitDescriptionGnome",gnoll:"PF2E.TraitDescriptionGnoll",goblin:"PF2E.TraitDescriptionGoblin",goloma:"PF2E.TraitDescriptionGoloma",grapple:"PF2E.TraitDescriptionGrapple",grippli:"PF2E.TraitDescriptionGrippli",grimoire:"PF2E.TraitDescriptionGrimoire",halfling:"PF2E.TraitDescriptionHalfling",hampering:"PF2E.TraitDescriptionHampering",hobgoblin:"PF2E.TraitDescriptionHobgoblin",humanoid:"PF2E.TraitDescriptionHumanoid",incarnate:"PF2E.TraitDescriptionIncarnate","jousting-d6":"PF2E.TraitDescriptionJoustingD6",magus:"PF2E.TraitDescriptionMagus",mindless:"PF2E.TraitDescriptionMindless",modular:"PF2E.TraitDescriptionModular",nonlethal:"PF2E.TraitDescriptionNonlethal",olfactory:"PF2E.TraitDescrpitionOlfactory",orc:"PF2E.TraitDescriptionOrc",parry:"PF2E.TraitDescriptionParry",plant:"PF2E.TraitDescriptionPlant",propulsive:"PF2E.TraitDescriptionPropulsive"},rangeDescriptions),{"ranged-trip":"PF2E.TraitDescriptionRangedTrip",reach:"PF2E.TraitDescriptionReach","reach-0":"PF2E.TraitDescriptionReach","reach-10":"PF2E.TraitDescriptionReach","reach-15":"PF2E.TraitDescriptionReach","reach-20":"PF2E.TraitDescriptionReach","reach-25":"PF2E.TraitDescriptionReach","reach-30":"PF2E.TraitDescriptionReach","reach-40":"PF2E.TraitDescriptionReach","reach-50":"PF2E.TraitDescriptionReach","reach-60":"PF2E.TraitDescriptionReach","reach-100":"PF2E.TraitDescriptionReach",resonant:"PF2E.TraitDescriptionResonant",repeating:"PF2E.TraitDescriptionRepeating",saggorak:"PF2E.TraitDescriptionSaggorak",shove:"PF2E.TraitDescriptionShove",spellshot:"PF2E.TraitNoDescription",sweep:"PF2E.TraitDescriptionSweep",tethered:"PF2E.TraitDescriptionTethered",thrown:"PF2E.TraitDescriptionThrown","thrown-10":"PF2E.TraitDescriptionThrown","thrown-15":"PF2E.TraitDescriptionThrown","thrown-20":"PF2E.TraitDescriptionThrown","thrown-25":"PF2E.TraitDescriptionThrown","thrown-30":"PF2E.TraitDescriptionThrown","thrown-40":"PF2E.TraitDescriptionThrown","thrown-50":"PF2E.TraitDescriptionThrown","thrown-60":"PF2E.TraitDescriptionThrown","thrown-100":"PF2E.TraitDescriptionThrown",time:"PF2E.TraitDescriptionTime",trip:"PF2E.TraitDescriptionTrip",twin:"PF2E.TraitDescriptionTwin","two-hand-d6":"PF2E.TraitDescriptionTwoHand","two-hand-d8":"PF2E.TraitDescriptionTwoHand","two-hand-d10":"PF2E.TraitDescriptionTwoHand","two-hand-d12":"PF2E.TraitDescriptionTwoHand",unarmed:"PF2E.TraitDescriptionUnarmed",undine:"PF2E.TraitDescriptionUndine","versatile-b":"PF2E.TraitDescriptionVersatile","versatile-p":"PF2E.TraitDescriptionVersatile","versatile-positive":"PF2E.TraitDescriptionVersatile","versatile-fire":"PF2E.TraitDescriptionVersatile","versatile-s":"PF2E.TraitDescriptionVersatile","volley-20":"PF2E.TraitDescriptionVolley","volley-30":"PF2E.TraitDescriptionVolley","volley-50":"PF2E.TraitDescriptionVolley",attack:"PF2E.TraitDescriptionAttack",consumable:"PF2E.TraitDescriptionConsumable",death:"PF2E.TraitDescriptionDeath",disease:"PF2E.TraitDescriptionDisease",downtime:"PF2E.TraitDescriptionDowntime",drug:"PF2E.TraitDescriptionDrug",environement:"PF2E.TraitDescriptionEnvironement",extradimensional:"PF2E.TraitDescriptionExtradimensional",focused:"PF2E.TraitDescriptionFocused",fortune:"PF2E.TraitDescriptionFortune",general:"PF2E.TraitDescriptionGeneral",haunt:"PF2E.TraitDescriptionHaunt",healing:"PF2E.TraitDescriptionHealing",ifrit:"PF2E.TraitDescriptionIfrit",incorporeal:"PF2E.TraitDescriptionIncorporeal",infused:"PF2E.TraitDescriptionInfused",injection:"PF2E.TraitDescriptionInjection",intelligent:"PF2E.TraitDescriptionIntelligent",invested:"PF2E.TraitDescriptionInvested",kickback:"PF2E.TraitDescriptionKickback",kitsune:"TraitDescriptionKitsune",kobold:"TraitDescriptionKobold",leshy:"PF2E.TraitDescriptionLeshy",light:"PF2E.TraitDescriptionLight",linguistic:"PF2E.TraitDescriptionLinguistic",lizardfolk:"PF2E.TraitDescriptionLizardfolk",litany:"PF2E.TraitDescriptionLitany",mechanical:"PF2E.TraitDescriptionMechanical",mental:"PF2E.TraitDescriptionMental",minion:"PF2E.TraitDescriptionMinion",misfortune:"PF2E.TraitDescriptionMisfortune",move:"PF2E.TraitDescriptionMove",poppet:"PF2E.TraitDescriptionPoppet",possession:"PF2E.TraitDescriptionPossession",precious:"PF2E.TraitDescriptionPrecious",prediction:"PF2E.TraitDescriptionPrediction",reload:"PF2E.TraitDescriptionReload","reload-0":"PF2E.TraitDescriptionReload","reload-1":"PF2E.TraitDescriptionReload","reload-1-min":"PF2E.TraitDescriptionReload","reload-2":"PF2E.TraitDescriptionReload",revelation:"PF2E.TraitDescriptionRevelation","scatter-5":"PF2E.TraitDescriptionScatter","scatter-10":"PF2E.TraitDescriptionScatter","scatter-15":"PF2E.TraitDescriptionScatter",scrying:"PF2E.TraitDescriptionScrying",shadow:"PF2E.TraitDescriptionShadow",shisk:"PF2E.TraitDescriptionShisk",shoony:"PF2E.TraitDescriptionShoony",skill:"PF2E.TraitDescriptionSkill",sleep:"PF2E.TraitDescriptionSleep",splash:"PF2E.TraitDescriptionSplash","splash-10":"PF2E.TraitDescriptionSplash10",sprite:"PF2E.TraitDescriptionSprite",structure:"PF2E.TraitDescriptionStructure",summoned:"PF2E.TraitDescriptionSummoned",tattoo:"PF2E.TraitDescriptionTattoo",teleportation:"PF2E.TraitDescriptionTeleportation",trap:"PF2E.TraitDescriptionTrap",virulent:"PF2E.TraitDescriptionVirulent","half-elf":"PF2E.TraitDescriptionHalfElf","half-orc":"PF2E.TraitDescriptionHalfOrc",human:"PF2E.TraitDescriptionHuman",manipulate:"PF2E.TraitDescriptionManipulate",additive1:"PF2E.TraitDescriptionAdditive",additive2:"PF2E.TraitDescriptionAdditive",additive3:"PF2E.TraitDescriptionAdditive",alchemical:"PF2E.TraitDescriptionAlchemical",aphorite:"PF2E.TraitDescriptionAphorite",archetype:"PF2E.TraitDescriptionArchetype",auditory:"PF2E.TraitDescriptionAuditory",aura:"PF2E.TraitDescriptionAura",automaton:"PF2E.TraitDescriptionAutomaton",azarketi:"PF2E.TraitDescriptionAzarketi",beastkin:"PF2E.TraitDescriptionBeastkin",cantrip:"PF2E.TraitDescriptionCantrip",catfolk:"PF2E.TraitDescriptionCatfolk",changeling:"PF2E.TraitDescriptionChangeling",combination:"PF2E.TraitDescriptionCombination",companion:"PF2E.TraitDescriptionCompanion",composition:"PF2E.TraitDescriptionComposition",concentrate:"PF2E.TraitDescriptionConcentrate",conrasu:"PF2E.TraitDescriptionConrasu",consecration:"PF2E.TraitDescriptionConsecration",contact:"PF2E.TraitDescriptionContact",curse:"PF2E.TraitDescriptionCurse",cursed:"PF2E.TraitDescriptionCursed",darkness:"PF2E.TraitDescriptionDarkness",dedication:"PF2E.TraitDescriptionDedication",detection:"PF2E.TraitDescriptionDetection",dhampir:"PF2E.TraitDescriptionDhampir",emotion:"PF2E.TraitDescriptionEmotion",exploration:"PF2E.TraitDescriptionExploration",fear:"PF2E.TraitDescriptionFear",fetchling:"PF2E.TraitDescriptionFetchling",fleshwarp:"PF2E.TraitDescriptionFleshwarp",flourish:"PF2E.TraitDescriptionFlourish",ganzi:"PF2E.TraitDescriptionGanzi",gadget:"PF2E.TraitDescriptionGadget",incapacitation:"PF2E.TraitDescriptionIncapacitation",magical:"PF2E.TraitDescriptionMagical",metamagic:"PF2E.TraitDescriptionMetamagic",modification:"PF2E.TraitDescriptionModification",morph:"PF2E.TraitDescriptionMorph",multiclass:"PF2E.TraitDescriptionMulticlass",oath:"PF2E.TraitDescriptionOath",open:"PF2E.TraitDescriptionOpen",oread:"PF2E.TraitDescriptionOread",polymorph:"PF2E.TraitDescriptionPolymorph",press:"PF2E.TraitDescriptionPress",rage:"PF2E.TraitDescriptionRage",ratfolk:"PF2E.TraitDescriptionRatfolk",secret:"PF2E.TraitDescriptionSecret",stance:"PF2E.TraitDescriptionStance",staff:"PF2E.TraitDescriptionStaff",strix:"PF2E.TraitDescriptionStrix",suli:"PF2E.TraitDescriptionSuli",sylph:"PF2E.TraitDescriptionSylph",tengu:"PF2E.TraitDescriptionTengu",tiefling:"PF2E.TraitDescriptionTiefling",visual:"PF2E.TraitDescriptionVisual",chaotic:"PF2E.TraitDescriptionChaotic",evil:"PF2E.TraitDescriptionEvil",good:"PF2E.TraitDescriptionGood",lawful:"PF2E.TraitDescriptionLawful",arcane:"PF2E.TraitDescriptionArcane",divine:"PF2E.TraitDescriptionDivine",occult:"PF2E.TraitDescriptionOccult",primal:"PF2E.TraitDescriptionPrimal",air:"PF2E.TraitDescriptionAir",earth:"PF2E.TraitDescriptionEarth",fire:"PF2E.TraitDescriptionFire",water:"PF2E.TraitDescriptionWater",abjuration:"PF2E.TraitDescriptionAbjuration",conjuration:"PF2E.TraitDescriptionConjuration",divination:"PF2E.TraitDescriptionDivination",enchantment:"PF2E.TraitDescriptionEnchantment",evocation:"PF2E.TraitDescriptionEvocation",illusion:"PF2E.TraitDescriptionIllusion",necromancy:"PF2E.TraitDescriptionNecromancy",transmutation:"PF2E.TraitDescriptionTransmutation",acid:"PF2E.TraitDescriptionAcid",cold:"PF2E.TraitDescriptionCold",electricity:"PF2E.TraitDescriptionElectricity",force:"PF2E.TraitDescriptionForce",positive:"PF2E.TraitDescriptionPositive",sonic:"PF2E.TraitDescriptionSonic",negative:"PF2E.TraitDescriptionNegative",complex:"PF2E.TraitDescriptionComplex",alchemist:"PF2E.TraitDescriptionAlchemist",barbarian:"PF2E.TraitDescriptionBarbarian",bard:"PF2E.TraitDescriptionBard",champion:"PF2E.TraitDescriptionChampion",cleric:"PF2E.TraitDescriptionCleric",druid:"PF2E.TraitDescriptionDruid",fighter:"PF2E.TraitDescriptionFighter",gunslinger:"PF2E.TraitDescriptionGunslinger",inventor:"PF2E.TraitDescriptionInventor",investigator:"PF2E.TraitDescriptionInvestigator",monk:"PF2E.TraitDescriptionMonk",oracle:"PF2E.TraitDescriptionOracle",ranger:"PF2E.TraitDescriptionRanger",rogue:"PF2E.TraitDescriptionRogue",sorcerer:"PF2E.TraitDescriptionSorcerer",summoner:"PF2E.TraitDescriptionSummoner",swashbuckler:"PF2E.TraitDescriptionSwashbuckler",witch:"PF2E.TraitDescriptionWitch",wizard:"PF2E.TraitDescriptionWizard",bulwark:"PF2E.TraitDescriptionBulwark",comfort:"PF2E.TraitDescriptionComfort",flexible:"PF2E.TraitDescriptionFlexible",noisy:"PF2E.TraitDescriptionNoisy",ingested:"PF2E.TraitDescriptionIngested",inhaled:"PF2E.TraitDescriptionInhaled",injury:"PF2E.TraitDescriptionInjury",poison:"PF2E.TraitDescriptionPoison",finisher:"PF2E.TraitDescriptionFinisher",cursebound:"PF2E.TraitDescriptionCursebound",hex:"PF2E.TraitDescriptionHex",eidolon:"PF2E.TraitDescriptionEidolon",adjustment:"PF2E.TraitDescriptionAdjustment",apex:"PF2E.TraitDescriptionApex",catalyst:"PF2E.TraitDescriptionCatalyst",contract:"PF2E.TraitDescriptionContract",elixir:"PF2E.TraitDescriptionElixir",fey:"PF2E.TraitDescriptionFey",fulu:"PF2E.TraitDescriptionFulu",mounted:"PF2E.TraitDescriptionMounted",mutagen:"PF2E.TraitDescriptionMutagen",oil:"PF2E.TraitDescriptionOil",portable:"PF2E.TraitDescriptionPortable",potion:"PF2E.TraitDescriptionPotion",scroll:"PF2E.TraitDescriptionScroll",snare:"PF2E.TraitDescriptionSnare",spellheart:"PF2E.TraitDescriptionSpellheart",steam:"PF2E.TraitDescriptionSteam",talisman:"PF2E.TraitDescriptionTalisman","true-name":"PF2E.TraitDescriptionTrueName",wand:"PF2E.TraitDescriptionWand"}),creatureTraits=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},alignmentTraits),ancestryItemTraits),elementalTraits),energyDamageTypes),{aberration:"PF2E.TraitAberration",aeon:"PF2E.TraitAeon",aesir:"PF2E.TraitAesir",agathion:"PF2E.TraitAgathion",alchemical:"PF2E.TraitAlchemical",anugobu:"PF2E.TraitAnugobu",angel:"PF2E.TraitAngel",animal:"PF2E.TraitAnimal",aquatic:"PF2E.TraitAquatic",arcane:"PF2E.TraitArcane",archon:"PF2E.TraitArchon",astral:"PF2E.TraitAstral",asura:"PF2E.TraitAsura",azata:"PF2E.TraitAzata",beast:"PF2E.TraitBeast",boggard:"PF2E.TraitBoggard",caligni:"PF2E.TraitCaligni",celestial:"PF2E.TraitCelestial","charau-ka":"PF2E.TraitCharauKa",clockwork:"PF2E.TraitClockwork",couatl:"PF2E.TraitCouatl",construct:"PF2E.TraitConstruct",daemon:"PF2E.TraitDaemon",demon:"PF2E.TraitDemon",dero:"PF2E.TraitDero",devil:"PF2E.TraitDevil",div:"PF2E.TraitDiv",divine:"PF2E.TraitDivine",dinosaur:"PF2E.TraitDinosaur",dragon:"PF2E.TraitDragon",dream:"PF2E.TraitDream",drow:"PF2E.TraitDrow",duergar:"PF2E.TraitDuergar",duskwalker:"PF2E.TraitDuskwalker",eidolon:"PF2E.TraitEidolon",elemental:"PF2E.TraitElemental",ethereal:"PF2E.TraitEthereal",evocation:"PF2E.TraitEvocation",fiend:"PF2E.TraitFiend",formian:"PF2E.TraitFormian",fungus:"PF2E.TraitFungus",genie:"PF2E.TraitGenie",ghoran:"PF2E.TraitGhoran",ghost:"PF2E.TraitGhost",ghoul:"PF2E.TraitGhoul",giant:"PF2E.TraitGiant",golem:"PF2E.TraitGolem",gremlin:"PF2E.TraitGremlin",grioth:"PF2E.TraitGrioth",grippli:"PF2E.TraitGrippli",hag:"PF2E.TraitHag",hantu:"PF2E.TraitHantu",herald:"PF2E.TraitHerald",humanoid:"PF2E.TraitHumanoid",ifrit:"PF2E.TraitIfrit",ikeshti:"PF2E.TraitIkeshti",illusion:"PF2E.TraitIllusion",incorporeal:"PF2E.TraitIncorporeal",inevitable:"PF2E.TraitInevitable",kami:"PF2E.TraitKami",kovintus:"PF2E.TraitKovintus",light:"PF2E.TraitLight",locathah:"PF2E.TraitLocathah",mental:"PF2E.TraitMental",merfolk:"PF2E.TraitMerfolk",mindless:"PF2E.TraitMindless",minion:"PF2E.TraitMinion",monitor:"PF2E.TraitMonitor",mortic:"PF2E.TraitMortic",mummy:"PF2E.TraitMummy",munavri:"PF2E.TraitMunavri",mutant:"PF2E.TraitMutant",nagaji:"PF2E.TraitNagaji",nymph:"PF2E.TraitNymph",oni:"PF2E.TraitOni",ooze:"PF2E.TraitOoze",orc:"PF2E.TraitOrc",oread:"PF2E.TraitOread",paaridar:"PF2E.TraitPaaridar",petitioner:"PF2E.TraitPetitioner",phantom:"PF2E.TraitPhantom",protean:"PF2E.TraitProtean",psychopomp:"PF2E.TraitPsychopomp",qlippoth:"PF2E.TraitQlippoth",rakshasa:"PF2E.TraitRakshasa",sahkil:"PF2E.TraitSahkil",samsaran:"PF2E.TraitSamsaran","sea devil":"PF2E.TraitSeaDevil",seugathi:"PF2E.TraitSeugathi",serpentfolk:"PF2E.TraitSerpentfolk",shabti:"PF2E.TraitShabti",shadow:"PF2E.TraitShadow",shobhad:"PF2E.TraitShobhad",siktempora:"PF2E.TraitSiktempora",skeleton:"PF2E.TraitSkeleton",skelm:"PF2E.TraitSkelm",skulk:"PF2E.TraitSkulk",soulbound:"PF2E.TraitSoulbound",spirit:"PF2E.TraitSpirit",spriggan:"PF2E.TraitSpriggan",stheno:"PF2E.TraitStheno",swarm:"PF2E.TraitSwarm",sylph:"PF2E.TraitSylph",tane:"PF2E.TraitTane",tanggal:"PF2E.TraitTanggal",tengu:"PF2E.TraitTengu",time:"PF2E.TraitTime",titan:"PF2E.TraitTitan",troll:"PF2E.TraitTroll",troop:"PF2E.TraitTroop",undead:"PF2E.TraitUndead",undine:"PF2E.TraitUndine",urdefhan:"PF2E.TraitUrdefhan",vampire:"PF2E.TraitVampire",vanara:"PF2E.TraitVanara",velstrac:"PF2E.TraitVelstrac",vishkanya:"PF2E.TraitVishkanya",wayang:"PF2E.TraitWayang",werecreature:"PF2E.TraitWerecreature",wight:"PF2E.TraitWight",wraith:"PF2E.TraitWraith",wyrwood:"PF2E.TraitWyrwood",xulgath:"PF2E.TraitXulgath",zombie:"PF2E.TraitZombie"}),spellOtherTraits={attack:"PF2E.TraitAttack",auditory:"PF2E.TraitAuditory",aura:"PF2E.TraitAura",cantrip:"PF2E.TraitCantrip",composition:"PF2E.TraitComposition",concentrate:"PF2E.TraitConcentrate",consecration:"PF2E.TraitConsecration",contingency:"PF2E.TraitContingency",curse:"PF2E.TraitCurse",cursebound:"PF2E.TraitCursebound",darkness:"PF2E.TraitDarkness",death:"PF2E.TraitDeath",detection:"PF2E.TraitDetection",disease:"PF2E.TraitDisease",eidolon:"PF2E.TraitEidolon",emotion:"PF2E.TraitEmotion",extradimensional:"PF2E.TraitExtradimensional",fear:"PF2E.TraitFear",fortune:"PF2E.TraitFortune",fungus:"PF2E.TraitFungus",healing:"PF2E.TraitHealing",hex:"PF2E.TraitHex",incapacitation:"PF2E.TraitIncapacitation",incarnate:"PF2E.TraitIncarnate",inhaled:"PF2E.TraitInhaled",light:"PF2E.TraitLight",linguistic:"PF2E.TraitLinguistic",litany:"PF2E.TraitLitany",metamagic:"PF2E.TraitMetamagic",mindless:"PF2E.TraitMindless",misfortune:"PF2E.TraitMisfortune",morph:"PF2E.TraitMorph",move:"PF2E.TraitMove",nonlethal:"PF2E.TraitNonlethal",olfactory:"PF2E.TraitOlfactory",plant:"PF2E.TraitPlant",poison:"PF2E.TraitPoison",polymorph:"PF2E.TraitPolymorph",possession:"PF2E.TraitPossession",prediction:"PF2E.TraitPrediction",revelation:"PF2E.TraitRevelation",scrying:"PF2E.TraitScrying",shadow:"PF2E.TraitShadow",sleep:"PF2E.TraitSleep",stance:"PF2E.TraitStance",summoned:"PF2E.TraitSummoned",teleportation:"PF2E.TraitTeleportation","true-name":"PF2E.TraitTrueName",visual:"PF2E.TraitVisual"},spellTraits=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},alignmentTraits),classTraits),damageTraits),elementalTraits),spellOtherTraits),consumableTraits=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},damageTraits),elementalTraits),magicSchools),magicTraditions),{air:"PF2E.TraitAir",alchemical:"PF2E.TraitAlchemical",auditory:"PF2E.TraitAuditory",aura:"PF2E.TraitAura",catalyst:"PF2E.TraitCatalyst",clockwork:"PF2E.TraitClockwork",consumable:"PF2E.TraitConsumable",contact:"PF2E.TraitContact",drug:"PF2E.TraitDrug",elixir:"PF2E.TraitElixir",emotion:"PF2E.TraitEmotion",fear:"PF2E.TraitFear",fey:"PF2E.TraitFey",fortune:"PF2E.TraitFortune",fulu:"PF2E.TraitFulu",gadget:"PF2E.TraitGadget",healing:"PF2E.TraitHealing",incapacitation:"PF2E.TraitIncapacitation",infused:"PF2E.TraitInfused",ingested:"PF2E.TraitIngested",inhaled:"PF2E.TraitInhaled",injury:"PF2E.TraitInjury",kobold:"PF2E.TraitKobold",light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",mechanical:"PF2E.TraitMechanical",misfortune:"PF2E.TraitMisfortune",morph:"PF2E.TraitMorph",mutagen:"PF2E.TraitMutagen",olfactory:"PF2E.TraitOlfactory",oil:"PF2E.TraitOil",polymorph:"PF2E.TraitPolymorph",poison:"PF2E.TraitPoison",potion:"PF2E.TraitPotion",precious:"PF2E.TraitPrecious",scroll:"PF2E.TraitScroll",scrying:"PF2E.TraitScrying",sleep:"PF2E.TraitSleep",snare:"PF2E.TraitSnare",splash:"PF2E.TraitSplash",structure:"PF2E.TraitStructure",talisman:"PF2E.TraitTalisman",teleportation:"PF2E.TraitTeleportation",trap:"PF2E.TraitTrap",wand:"PF2E.TraitWand",virulent:"PF2E.TraitVirulent",visual:"PF2E.TraitVisual"}),featTraits=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},ancestryTraits),classTraits),damageTraits),magicSchools),magicTraditions),spellTraits),{move:"PF2E.TraitMove",manipulate:"PF2E.TraitManipulate",concentrate:"PF2E.TraitConcentrate",rage:"PF2E.TraitRage",general:"PF2E.TraitGeneral",skill:"PF2E.TraitSkill",fortune:"PF2E.TraitFortune",downtime:"PF2E.TraitDowntime",time:"PF2E.TraitTime",secret:"PF2E.TraitSecret",additive1:"PF2E.TraitAdditive1",additive2:"PF2E.TraitAdditive2",additive3:"PF2E.TraitAdditive3",archetype:"PF2E.TraitArchetype",auditory:"PF2E.TraitAuditory",dedication:"PF2E.TraitDedication",detection:"PF2E.TraitDetection",emotion:"PF2E.TraitEmotion",evolution:"PF2E.TraitEvolution",exploration:"PF2E.TraitExploration",fear:"PF2E.TraitFear",flourish:"PF2E.TraitFlourish",injury:"PF2E.TraitInjury",metamagic:"PF2E.TraitMetamagic",multiclass:"PF2E.TraitMulticlass",oath:"PF2E.TraitOath",open:"PF2E.TraitOpen","pervasive-magic":"PF2E.TraitPervasiveMagic",poison:"PF2E.TraitPoison",press:"PF2E.TraitPress",spellshot:"PF2E.TraitSpellshot",stance:"PF2E.TraitStance",stamina:"PF2E.TraitStamina","true-name":"PF2E.TraitTrueName",alchemical:"PF2E.TraitAlchemical",interact:"PF2E.TraitInteract",aura:"PF2E.TraitAura",olfactory:"PF2E.TraitOlfactory",finisher:"PF2E.TraitFinisher",lineage:"PF2E.TraitLineage",vigilante:"PF2E.TraitVigilante",heritage:"PF2E.TraitHeritage","versatile heritage":"PF2E.TraitVersatileHeritage",virulent:"PF2E.TraitVirulent",tandem:"PF2E.TraitTandem",class:"PF2E.Class",modification:"PF2E.TraitModification",unstable:"PF2E.TraitUnstable",reckless:"PF2E.TraitReckless"}),meleeWeaponGroups={axe:"PF2E.WeaponGroupAxe",brawling:"PF2E.WeaponGroupBrawling",club:"PF2E.WeaponGroupClub",flail:"PF2E.WeaponGroupFlail",hammer:"PF2E.WeaponGroupHammer",knife:"PF2E.WeaponGroupKnife",pick:"PF2E.WeaponGroupPick",polearm:"PF2E.WeaponGroupPolearm",shield:"PF2E.WeaponGroupShield",spear:"PF2E.WeaponGroupSpear",sword:"PF2E.WeaponGroupSword"},rangedWeaponGroups={bomb:"PF2E.WeaponGroupBomb",bow:"PF2E.WeaponGroupBow",dart:"PF2E.WeaponGroupDart",firearm:"PF2E.WeaponGroupFirearm",sling:"PF2E.WeaponGroupSling"},weaponGroups=Object.assign(Object.assign({},meleeWeaponGroups),rangedWeaponGroups),weaponTraits=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},alignmentTraits),ancestryTraits),elementalTraits),energyDamageTypes),magicSchools),magicTraditions),{alchemical:"PF2E.TraitAlchemical",agile:"PF2E.TraitAgile",artifact:"PF2E.TraitArtifact","attached-to-shield":"PF2E.TraitAttachedToShield","attached-to-crossbow-or-firearm":"PF2E.TraitAttachedToCrossbowOrFirearm",auditory:"PF2E.TraitAuditory",backstabber:"PF2E.TraitBackstabber",backswing:"PF2E.TraitBackswing",bomb:"PF2E.TraitBomb","capacity-3":"PF2E.TraitCapacity3","capacity-4":"PF2E.TraitCapacity4","capacity-5":"PF2E.TraitCapacity5",climbing:"PF2E.TraitClimbing",clockwork:"PF2E.TraitClockwork",cobbled:"PF2E.TraitCobbled",combination:"PF2E.TraitCombination",concealable:"PF2E.TraitConcealable",concentrate:"PF2E.TraitConcentrate",concussive:"PF2E.TraitConcussive",consumable:"PF2E.TraitConsumable","critical-fusion":"PF2E.TraitCriticalFusion",cursed:"PF2E.TraitCursed","deadly-d6":"PF2E.TraitDeadlyD6","deadly-d8":"PF2E.TraitDeadlyD8","deadly-2d8":"PF2E.TraitDeadly2D8","deadly-3d8":"PF2E.TraitDeadly3D8","deadly-4d8":"PF2E.TraitDeadly4D8","deadly-d10":"PF2E.TraitDeadlyD10","deadly-2d10":"PF2E.TraitDeadly2D10","deadly-3d10":"PF2E.TraitDeadly3D10","deadly-4d10":"PF2E.TraitDeadly4D10","deadly-d12":"PF2E.TraitDeadlyD12","deadly-2d12":"PF2E.TraitDeadly2D12","deadly-3d12":"PF2E.TraitDeadly3D12","deadly-4d12":"PF2E.TraitDeadly4D12",death:"PF2E.TraitDeath",disarm:"PF2E.TraitDisarm",disease:"PF2E.TraitDisease","double-barrel":"PF2E.TraitDoubleBarrel",emotion:"PF2E.TraitEmotion","fatal-aim-d10":"PF2E.TraitFatalAimD10","fatal-aim-d12":"PF2E.TraitFatalAimD12","fatal-d8":"PF2E.TraitFatalD8","fatal-d10":"PF2E.TraitFatalD10","fatal-d12":"PF2E.TraitFatalD12",fear:"PF2E.TraitFear",finesse:"PF2E.TraitFinesse",forceful:"PF2E.TraitForceful",fortune:"PF2E.TraitFortune","free-hand":"PF2E.TraitFreeHand",fungus:"PF2E.TraitFungus",good:"PF2E.TraitGood",grapple:"PF2E.TraitGrapple",hampering:"PF2E.TraitHampering",healing:"PF2E.TraitHealing",infused:"PF2E.TraitInfused",injection:"PF2E.TraitInjection",intelligent:"PF2E.TraitIntelligent",invested:"PF2E.TraitInvested","jousting-d6":"PF2E.TraitJoustingD6",kickback:"PF2E.TraitKickback",light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",mental:"PF2E.TraitMental",modular:"PF2E.TraitModular",monk:"PF2E.TraitMonk",nonlethal:"PF2E.TraitNonlethal",olfactory:"PF2E.TraitOlfactory",parry:"PF2E.TraitParry",poison:"PF2E.TraitPoison",propulsive:"PF2E.TraitPropulsive","ranged-trip":"PF2E.TraitRangedTrip",reach:"PF2E.TraitReach",repeating:"PF2E.TraitRepeating",resonant:"PF2E.TraitResonant",saggorak:"PF2E.TraitSaggorak","scatter-5":"PF2E.TraitScatter5","scatter-10":"PF2E.TraitScatter10","scatter-15":"PF2E.TraitScatter15",shadow:"PF2E.TraitShadow",shove:"PF2E.TraitShove",staff:"PF2E.TraitStaff",splash:"PF2E.TraitSplash",sweep:"PF2E.TraitSweep",teleportation:"PF2E.TraitTeleportation",tethered:"PF2E.TraitTethered",thrown:"PF2E.TraitThrown","thrown-10":"PF2E.TraitThrown10","thrown-15":"PF2E.TraitThrown15","thrown-20":"PF2E.TraitThrown20","thrown-30":"PF2E.TraitThrown30","thrown-40":"PF2E.TraitThrown40","thrown-60":"PF2E.TraitThrown60","thrown-100":"PF2E.TraitThrown100",time:"PF2E.TraitTime",trip:"PF2E.TraitTrip",twin:"PF2E.TraitTwin","two-hand-d6":"PF2E.TraitTwoHandD6","two-hand-d8":"PF2E.TraitTwoHandD8","two-hand-d10":"PF2E.TraitTwoHandD10","two-hand-d12":"PF2E.TraitTwoHandD12",unarmed:"PF2E.TraitUnarmed","versatile-s":"PF2E.TraitVersatileS","versatile-p":"PF2E.TraitVersatileP","versatile-positive":"PF2E.TraitVersatilePositive","versatile-fire":"PF2E.TraitVersatileFire","versatile-b":"PF2E.TraitVersatileB","volley-20":"PF2E.TraitVolley20","volley-30":"PF2E.TraitVolley30","volley-50":"PF2E.TraitVolley50"}),rangeTraits=values_1.RANGE_TRAITS.reduce(((descriptions,trait)=>mergeObject(descriptions,{[trait]:`PF2E.Trait${(0,_util_1.sluggify)(trait,{camel:"bactrian"})}`})),{}),npcAttackTraits=Object.assign(Object.assign(Object.assign(Object.assign({},weaponTraits),{brutal:"PF2E.TraitBrutal"}),rangeTraits),{"reach-0":"PF2E.TraitReach0","reach-10":"PF2E.TraitReach10","reach-15":"PF2E.TraitReach15","reach-20":"PF2E.TraitReach20","reach-25":"PF2E.TraitReach25","reach-30":"PF2E.TraitReach30","reach-40":"PF2E.TraitReach40","reach-50":"PF2E.TraitReach50","reach-60":"PF2E.TraitReach60","reach-100":"PF2E.TraitReach100","reload-0":"PF2E.TraitReload0","reload-1":"PF2E.TraitReload1","reload-2":"PF2E.TraitReload2","reload-1-min":"PF2E.TraitReload1Min"}),actionTraits=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},featTraits),consumableTraits),spellTraits),npcAttackTraits),{summon:"PF2E.TraitSummon"}),weaponPropertyRunes=Object.assign({},Object.entries(runes_1.WEAPON_PROPERTY_RUNES).reduce(((accumulated,[slug,rune])=>Object.assign(Object.assign({},accumulated),{[slug]:rune.name})),{}));exports.PF2ECONFIG={chatDamageButtonShieldToggle:!1,statusEffects:{overruledByModule:!1,lastIconType:"default",effectsIconFolder:"systems/pf2e/icons/conditions/",effectsIconFileType:"webp",keepFoundryStatusEffects:!0,foundryStatusEffects:[]},levels:{1:"PF2E.Level1",2:"PF2E.Level2",3:"PF2E.Level3",4:"PF2E.Level4",5:"PF2E.Level5",6:"PF2E.Level6",7:"PF2E.Level7",8:"PF2E.Level8",9:"PF2E.Level9",10:"PF2E.Level10",11:"PF2E.Level11",12:"PF2E.Level12",13:"PF2E.Level13",14:"PF2E.Level14",15:"PF2E.Level15",16:"PF2E.Level16",17:"PF2E.Level17",18:"PF2E.Level18",19:"PF2E.Level19",20:"PF2E.Level20"},abilities:{str:"PF2E.AbilityStr",dex:"PF2E.AbilityDex",con:"PF2E.AbilityCon",int:"PF2E.AbilityInt",wis:"PF2E.AbilityWis",cha:"PF2E.AbilityCha"},attributes:{perception:"PF2E.PerceptionLabel",stealth:"PF2E.StealthLabel",initiative:"PF2E.PerceptionLabel"},dcAdjustments:{"incredibly easy":"PF2E.DCAdjustmentIncrediblyEasy","very easy":"PF2E.DCAdjustmentVeryEasy",easy:"PF2E.DCAdjustmentEasy",normal:"PF2E.DCAdjustmentNormal",hard:"PF2E.DCAdjustmentHard","very hard":"PF2E.DCAdjustmentVeryHard","incredibly hard":"PF2E.DCAdjustmentIncrediblyHard"},skills:{acr:"PF2E.SkillAcr",arc:"PF2E.SkillArc",ath:"PF2E.SkillAth",cra:"PF2E.SkillCra",dec:"PF2E.SkillDec",dip:"PF2E.SkillDip",itm:"PF2E.SkillItm",med:"PF2E.SkillMed",nat:"PF2E.SkillNat",occ:"PF2E.SkillOcc",prf:"PF2E.SkillPrf",rel:"PF2E.SkillRel",soc:"PF2E.SkillSoc",ste:"PF2E.SkillSte",sur:"PF2E.SkillSur",thi:"PF2E.SkillThi"},martialSkills:{unarmored:"PF2E.MartialUnarmored",light:"PF2E.MartialLight",medium:"PF2E.MartialMedium",heavy:"PF2E.MartialHeavy",simple:"PF2E.MartialSimple",martial:"PF2E.MartialMartial",advanced:"PF2E.MartialAdvanced",unarmed:"PF2E.MartialUnarmed"},saves:{fortitude:"PF2E.SavesFortitude",reflex:"PF2E.SavesReflex",will:"PF2E.SavesWill"},savingThrowDefaultAbilities:{fortitude:"con",reflex:"dex",will:"wis"},currencies:{pp:"PF2E.CurrencyPP",gp:"PF2E.CurrencyGP",sp:"PF2E.CurrencySP",cp:"PF2E.CurrencyCP"},preciousMaterialGrades:{low:"PF2E.PreciousMaterialLowGrade",standard:"PF2E.PreciousMaterialStandardGrade",high:"PF2E.PreciousMaterialHighGrade"},preciousMaterials:{adamantine:"PF2E.PreciousMaterialAdamantine",coldIron:"PF2E.PreciousMaterialColdIron",darkwood:"PF2E.PreciousMaterialDarkwood",dragonhide:"PF2E.PreciousMaterialDragonhide",mithral:"PF2E.PreciousMaterialMithral",orichalcum:"PF2E.PreciousMaterialOrichalcum",silver:"PF2E.PreciousMaterialSilver",sovereignSteel:"PF2E.PreciousMaterialSovereignSteel",warpglass:"PF2E.PreciousMaterialWarpglass"},armorPotencyRunes:{1:"PF2E.ArmorPotencyRune1",2:"PF2E.ArmorPotencyRune2",3:"PF2E.ArmorPotencyRune3",4:"PF2E.ArmorPotencyRune4"},armorResiliencyRunes:{resilient:"PF2E.ArmorResilientRune",greaterResilient:"PF2E.ArmorGreaterResilientRune",majorResilient:"PF2E.ArmorMajorResilientRune"},armorPropertyRunes:{ready:"PF2E.ArmorPropertyRuneReady",slick:"PF2E.ArmorPropertyRuneSlick",shadow:"PF2E.ArmorPropertyRuneShadow",glamered:"PF2E.ArmorPropertyRuneGlamered",acidResistant:"PF2E.ArmorPropertyRuneAcidResistant",coldResistant:"PF2E.ArmorPropertyRuneColdResistant",electricityResistant:"PF2E.ArmorPropertyRuneElectricityResistant",fireResistant:"PF2E.ArmorPropertyRuneFireResistant",greaterSlick:"PF2E.ArmorPropertyRuneGreaterSlick",invisibility:"PF2E.ArmorPropertyRuneInvisibility",sinisterKnight:"PF2E.ArmorPropertyRuneSinisterKnight",greaterReady:"PF2E.ArmorPropertyRuneGreaterReady",greaterShadow:"PF2E.ArmorPropertyRuneGreaterShadow",greaterInvisibility:"PF2E.ArmorPropertyRuneGreaterInvisibility",greaterAcidResistant:"PF2E.ArmorPropertyRuneGreaterAcidResistant",greaterColdResistant:"PF2E.ArmorPropertyRuneGreaterColdResistant",greaterElectricityResistant:"PF2E.ArmorPropertyRuneGreaterElectricityResistant",greaterFireResistant:"PF2E.ArmorPropertyRuneGreaterFireResistant",fortification:"PF2E.ArmorPropertyRuneFortification",winged:"PF2E.ArmorPropertyRuneWinged",rockBraced:"PF2E.ArmorPropertyRuneRockBraced",soaring:"PF2E.ArmorPropertyRuneSoaring",antimagic:"PF2E.ArmorPropertyRuneAntimagic",majorSlick:"PF2E.ArmorPropertyRuneMajorSlick",ethereal:"PF2E.ArmorPropertyRuneEthereal",majorShadow:"PF2E.ArmorPropertyRuneMajorShadow",greaterFortification:"PF2E.ArmorPropertyRuneGreaterFortification",greaterWinged:"PF2E.ArmorPropertyRuneGreaterWinged",deathless:"PF2E.ArmorPropertyRuneDeathless",dread:"PF2E.ArmorPropertyRuneDread",bitter:"PF2E.ArmorPropertyRuneBitter",stanching:"PF2E.ArmorPropertyRuneStanching",greaterStanching:"PF2E.ArmorPropertyRuneGreaterStanching",majorStanching:"PF2E.ArmorPropertyRuneMajorStanching",trueStanching:"PF2E.ArmorPropertyRuneTrueStanching",implacable:"PF2E.ArmorPropertyRuneImplacable"},accessoryPropertyRunes:{called:"PF2E.AccessoryPropertyRuneCalled",dragonsBreath:"PF2E.AccessoryPropertyRuneDragonsBreath",paired:"PF2E.AccessoryPropertyRunePaired",greaterPaired:"PF2E.AccessoryPropertyRuneGreaterPaired",majorPaired:"PF2E.AccessoryPropertyRuneMajorPaired",presentable:"PF2E.AccessoryPropertyRunePresentable",snagging:"PF2E.AccessoryPropertyRuneSnagging",softLanding:"PF2E.AccessoryPropertyRuneSoftLanding",spellBastion:"PF2E.AccessoryPropertyRuneSpellBastion",windCatcher:"PF2E.AccessoryPropertyRuneWindCatcher",greaterWindCatcher:"PF2E.AccessoryPropertyRuneGreaterWindCatcher"},weaponPotencyRunes:{1:"PF2E.WeaponPotencyRune1",2:"PF2E.WeaponPotencyRune2",3:"PF2E.WeaponPotencyRune3",4:"PF2E.WeaponPotencyRune4"},weaponStrikingRunes:{striking:"PF2E.ArmorStrikingRune",greaterStriking:"PF2E.ArmorGreaterStrikingRune",majorStriking:"PF2E.ArmorMajorStrikingRune"},weaponPropertyRunes,damageTraits,damageTypes,damageSubtypes:{persistent:"PF2E.ConditionTypePersistentShort",splash:"PF2E.TraitSplash"},damageCategories,resistanceTypes,stackGroups:{arrows:"PF2E.StackGroupArrows",bolts:"PF2E.StackGroupBolts",slingBullets:"PF2E.StackGroupSlingBullets",blowgunDarts:"PF2E.StackGroupBlowgunDarts",woodenTaws:"PF2E.StackGroupWoodenTaws",rounds5:"PF2E.StackGroupRounds5",rounds10:"PF2E.StackGroupRounds10",rations:"PF2E.StackGroupRations",coins:"PF2E.StackGroupCoins",gems:"PF2E.StackGroupGems",sacks:"PF2E.StackGroupSacks"},weaknessTypes,weaponDamage:{bludgeoning:"PF2E.TraitBludgeoning",piercing:"PF2E.TraitPiercing",slashing:"PF2E.TraitSlashing",modular:"PF2E.TraitModular"},healingTypes:{healing:"PF2E.TraitHealing",temphp:"PF2E.HealingTypeTemporaryHealing"},weaponCategories:{simple:"PF2E.WeaponTypeSimple",martial:"PF2E.WeaponTypeMartial",advanced:"PF2E.WeaponTypeAdvanced",unarmed:"PF2E.WeaponTypeUnarmed"},weaponGroups,meleeWeaponGroups,rangedWeaponGroups,baseWeaponTypes,equivalentWeapons:{"composite-longbow":"longbow","composite-shortbow":"shortbow","big-boom-gun":"hand-cannon","spoon-gun":"hand-cannon"},weaponDescriptions:{club:"PF2E.WeaponDescriptionClub",knife:"PF2E.WeaponDescriptionKnife",brawling:"PF2E.WeaponDescriptionBrawling",spear:"PF2E.WeaponDescriptionSpear",sword:"PF2E.WeaponDescriptionSword",axe:"PF2E.WeaponDescriptionAxe",flail:"PF2E.WeaponDescriptionFlail",polearm:"PF2E.WeaponDescriptionPolearm",pick:"PF2E.WeaponDescriptionPick",hammer:"PF2E.WeaponDescriptionHammer",shield:"PF2E.WeaponDescriptionShield",dart:"PF2E.WeaponDescriptionDart",bow:"PF2E.WeaponDescriptionBow",sling:"PF2E.WeaponDescriptionSling",bomb:"PF2E.WeaponDescriptionBomb"},usageTraits:{"held-in-one-hand":"PF2E.TraitHeldOneHand","held-in-two-hands":"PF2E.TraitHeldTwoHands","affixed-to-armor":"PF2E.TraitAffixedToArmor","affixed-to-armor-or-travelers-clothing":"PF2E.TraitAffixedToArmorOrTravelersClothing","affixed-to-armor-or-a-weapon":"PF2E.TraitAffixedToArmorOrAWeapon","affixed-to-headgear":"PF2E.TraitAffixedToHeadgear","affixed-to-weapon":"PF2E.TraitAffixedToWeapon","affixed-to-a-ranged-weapon":"PF2E.TraitAffixedToARangedWeapon","affixed-to-a-shield":"PF2E.TraitAffixedToAShield","affixed-to-crossbow-or-firearm":"PF2E.TraitAffixededToCrossbowOrFirearm","affixed-to-firearm":"PF2E.TraitAffixededToFirearm","affixed-to-firearm-with-a-reload-of-1":"PF2E.TraitAffixededToFirearmWithAReloadOf1","affixed-to-firearm-with-the-kickback-trait":"PF2E.TraitAffixededToFirearmWithTheKickbackTrait","affixed-to-a-two-handed-firearm-or-crossbow":"PF2E.TraitAffixededToATwoHandedFirearmOrCrossbow","applied-to-a-wind-powered-vehicle":"PF2E.TraitAppliedToAWindPoweredVehicle","applied-to-any-item-of-light-or-negligible-bulk":"PF2E.TraitAppliedToAnyItemOfLightOrNegligibleBulk","applied-to-any-visible-article-of-clothing":"PF2E.TraitAppliedToAnyVisibleArticleOfClothing","applied-to-belt-cape-cloak-or-scarf":"PF2E.TraitAppliedToBeltCapeCloakOrScarf","applied-to-boots-cape-cloak-or-umbrella":"PF2E.TraitAppliedToBootsCapeCloakOrUmbrella","applied-to-dueling-cape-or-shield":"PF2E.TraitAppliedToDuelingCapeOrShield","applied-to-shield":"PF2E.TraitAppliedToShield","attached-to-crossbow-or-firearm":"PF2E.TraitAttachedToCrossbowOrFirearm","attached-to-crossbow-or-firearm-scope":"PF2E.TraitAttachedToCrossbowOrFirearmScope","attached-to-crossbow-or-firearm-firing-mechanism":"PF2E.TraitAttachedToCrossbowOrFirearmFiringMechanism","attached-to-firearm":"PF2E.TraitAttachedToFirearm","attached-to-firearm-scope":"PF2E.TraitAttachedToFirearmScope","attached-to-a-thrown-weapon":"PF2E.TraitAttachedToAThrownWeapon",bonded:"PF2E.TraitBonded","each-rune-applied-to-a-separate-item-that-has-pockets":"PF2E.TraitEachRuneAppliedToASeparateItemThatHasPockets","tattooed-on-the-body":"PF2E.TraitTattooedOnTheBody",worn:"PF2E.TraitWorn",wornamulet:"PF2E.TraitWornAmulet","worn-and-attached-to-two-weapons":"PF2E.TraitWornAndAttachedToTwoWeapons","worn-under-armor":"PF2E.TraitWornUnderArmor",wornanklets:"PF2E.TraitWornAnklets",wornarmbands:"PF2E.TraitWornArmbands",wornbackpack:"PF2E.TraitWornBackpack",wornbarding:"PF2E.TraitWornBarding",wornbelt:"PF2E.TraitWornBelt",wornbeltpouch:"PF2E.TraitWornBeltPouch",wornbracers:"PF2E.TraitWornBracers",wornbracelet:"PF2E.TraitWornBracelet",worncloak:"PF2E.TraitWornCloak",worncirclet:"PF2E.TraitWornCirclet",wornclothing:"PF2E.TraitWornClothing",worncollar:"PF2E.TraitWornCollar",worncrown:"PF2E.TraitWornCrown",wornepaulet:"PF2E.TraitWornEpaulet",worneyepiece:"PF2E.TraitWornEyepiece",worngarment:"PF2E.TraitWornGarment",worngloves:"PF2E.TraitWornGloves",wornheadwear:"PF2E.TraitWornHeadwear",wornmask:"PF2E.TraitWornMask",wornnecklace:"PF2E.TraitWornNecklace",wornonbelt:"PF2E.TraitWornOnBelt",wornring:"PF2E.TraitWornRing",wornshoes:"PF2E.TraitWornShoes",wornhorseshoes:"PF2E.TraitWornHorseshoes",wornsaddle:"PF2E.TraitWornSaddle","etched-onto-armor":"PF2E.TraitEtchedOntoArmor","etched-onto-med-heavy-armor":"PF2E.TraitEtchedOntoMedHeavyArmor","etched-onto-a-weapon":"PF2E.TraitEtchedOntoAWeapon",wornwrist:"PF2E.TraitWornOnWrists","etched-onto-thrown-weapon":"PF2E.TraitEtchedOntoAThrownWeapon","etched-onto-melee-weapon":"PF2E.TraitEtchedOntoAMeleeWeapon","etched-onto-clan-dagger":"PF2E.TraitEtchedOntoAClanDagger","etched-onto-lm-nonmetal-armor":"PF2E.TraitEtchedOntoLightMedNMArmor","sewn-into-clothing":"PF2E.TraitSewnIntoClothing"},rarityTraits:{common:"PF2E.TraitCommon",uncommon:"PF2E.TraitUncommon",rare:"PF2E.TraitRare",unique:"PF2E.TraitUnique"},magicTraditions,spellOtherTraits,magicSchools,classTraits,ancestryTraits,ancestryItemTraits,weaponTraits,otherWeaponTags:{crossbow:"PF2E.Weapon.Base.crossbow","ghost-touch":"PF2E.WeaponPropertyRuneGhostTouch"},armorTraits:Object.assign(Object.assign(Object.assign({},magicSchools),magicTraditions),{air:"PF2E.TraitAir",apex:"PF2E.TraitApex",artifact:"PF2E.TraitArtifact",auditory:"PF2E.TraitAuditory",bulwark:"PF2E.TraitBulwark",clockwork:"PF2E.TraitClockwork",comfort:"PF2E.TraitComfort",cursed:"PF2E.TraitCursed",evil:"PF2E.TraitEvil",extradimensional:"PF2E.TraitExtradimensional",focused:"PF2E.TraitFocused",force:"PF2E.TraitForce",flexible:"PF2E.TraitFlexible",good:"PF2E.TraitGood",intelligent:"PF2E.TraitIntelligent",invested:"PF2E.TraitInvested",light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",noisy:"PF2E.TraitNoisy",water:"PF2E.TraitWater"}),equipmentTraits:Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},alignmentTraits),ancestryTraits),elementalTraits),energyDamageTypes),magicSchools),magicTraditions),{adjustment:"PF2E.TraitAdjustment",alchemical:"PF2E.TraitAlchemical",apex:"PF2E.TraitApex",artifact:"PF2E.TraitArtifact",auditory:"PF2E.TraitAuditory",aura:"PF2E.TraitAura",clockwork:"PF2E.TraitClockwork",companion:"PF2E.TraitCompanion",contract:"PF2E.TraitContract",cursed:"PF2E.TraitCursed",darkness:"PF2E.TraitDarkness",death:"PF2E.TraitDeath",detection:"PF2E.TraitDetection",eidolon:"PF2E.TraitEidolon",emotion:"PF2E.TraitEmotion",extradimensional:"PF2E.TraitExtradimensional",fear:"PF2E.TraitFear",focused:"PF2E.TraitFocused",fortune:"PF2E.TraitFortune",fulu:"PF2E.TraitFulu",gadget:"PF2E.TraitGadget",grimoire:"PF2E.TraitGrimoire",healing:"PF2E.TraitHealing",infused:"PF2E.TraitInfused",intelligent:"PF2E.TraitIntelligent",invested:"PF2E.TraitInvested",light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",mental:"PF2E.TraitMental",misfortune:"PF2E.TraitMisfortune",mounted:"PF2E.TraitMounted",nonlethal:"PF2E.TraitNonlethal",plant:"PF2E.TraitPlant",poison:"PF2E.TraitPoison",portable:"PF2E.TraitPortable",precious:"PF2E.TraitPrecious",revelation:"PF2E.TraitRevelation",saggorak:"PF2E.TraitSaggorak",scrying:"PF2E.TraitScrying",sleep:"PF2E.TraitSleep",spellheart:"PF2E.TraitSpellheart",staff:"PF2E.TraitStaff",steam:"PF2E.TraitSteam",structure:"PF2E.TraitStructure",tattoo:"PF2E.TraitTattoo",teleportation:"PF2E.TraitTeleportation",visual:"PF2E.TraitVisual",wand:"PF2E.TraitWand"}),actionTraits,consumableTraits,spellTraits,featTraits,creatureTraits,monsterTraits:creatureTraits,npcAttackTraits,hazardTraits:Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},damageTraits),magicSchools),magicTraditions),magicTraditions),{aquatic:"PF2E.TraitAquatic",alchemical:"PF2E.TraitAlchemical",auditory:"PF2E.TraitAuditory",clockwork:"PF2E.TraitClockwork",consumable:"PF2E.TraitConsumable",curse:"PF2E.TraitCurse",environmental:"PF2E.TraitEnvironmental",fungus:"PF2E.TraitFungus",haunt:"PF2E.TraitHaunt",inhaled:"PF2E.TraitInhaled",kaiju:"PF2E.TraitKaiju",magical:"PF2E.TraitMagical",mechanical:"PF2E.TraitMechanical",steam:"PF2E.TraitSteam",summoned:"PF2E.TraitSummoned",trap:"PF2E.TraitTrap",virulent:"PF2E.TraitVirulent"}),vehicleTraits:{magical:"PF2E.TraitMagical"},traitsDescriptions,weaponHands:{1:"PF2E.WeaponHands1","1+":"PF2E.WeaponHands1Plus",2:"PF2E.WeaponHands2"},itemBonuses:{"-2":"PF2E.ItemBonusMinus2",0:"PF2E.ItemBonus0",1:"PF2E.ItemBonus1",2:"PF2E.ItemBonus2",3:"PF2E.ItemBonus3"},damageDice:{0:"0",1:"1",2:"2",3:"3",4:"4"},damageDie:{d4:"PF2E.DamageDieD4",d6:"PF2E.DamageDieD6",d8:"PF2E.DamageDieD8",d10:"PF2E.DamageDieD10",d12:"PF2E.DamageDieD12"},weaponMAP:{1:"-1/-2",2:"-2/-4",3:"-3/-6",4:"-4/-8",5:"-5/-10"},weaponReload:{"-":"-",0:"0",1:"1",2:"2",3:"3",30:"1 min"},armorTypes:{unarmored:"PF2E.ArmorTypeUnarmored",light:"PF2E.ArmorTypeLight",medium:"PF2E.ArmorTypeMedium",heavy:"PF2E.ArmorTypeHeavy",shield:"PF2E.ArmorTypeShield"},armorGroups:{composite:"PF2E.ArmorGroupComposite",chain:"PF2E.ArmorGroupChain",cloth:"PF2E.ArmorGroupCloth",leather:"PF2E.ArmorGroupLeather",plate:"PF2E.ArmorGroupPlate"},consumableTypes:{ammo:"PF2E.ConsumableTypeAmmo",catalyst:"PF2E.TraitCatalyst",drug:"PF2E.ConsumableTypeDrug",elixir:"PF2E.ConsumableTypeElixir",fulu:"PF2E.TraitFulu",gadget:"PF2E.TraitGadget",oil:"PF2E.ConsumableTypeOil",other:"PF2E.ConsumableTypeOther",mutagen:"PF2E.ConsumableTypeMutagen",poison:"PF2E.ConsumableTypePoison",potion:"PF2E.ConsumableTypePotion",scroll:"PF2E.ConsumableTypeScroll",snare:"PF2E.ConsumableTypeSnare",talisman:"PF2E.ConsumableTypeTalisman",tool:"PF2E.ConsumableTypeTool",wand:"PF2E.ConsumableTypeWand"},preparationType:{prepared:"PF2E.PreparationTypePrepared",spontaneous:"PF2E.PreparationTypeSpontaneous",innate:"PF2E.PreparationTypeInnate",focus:"PF2E.SpellCategoryFocus",ritual:"PF2E.SpellCategoryRitual"},areaTypes:{burst:"PF2E.AreaTypeBurst",cone:"PF2E.AreaTypeCone",emanation:"PF2E.AreaTypeEmanation",line:"PF2E.AreaTypeLine"},areaSizes:{5:"PF2E.AreaSize5",10:"PF2E.AreaSize10",15:"PF2E.AreaSize15",20:"PF2E.AreaSize20",30:"PF2E.AreaSize30",40:"PF2E.AreaSize40",45:"PF2E.AreaSize45",50:"PF2E.AreaSize50",60:"PF2E.AreaSize60",75:"PF2E.AreaSize75",80:"PF2E.AreaSize80",90:"PF2E.AreaSize90",100:"PF2E.AreaSize100",120:"PF2E.AreaSize120"},alignments:{LG:"PF2E.AlignmentLG",NG:"PF2E.AlignmentNG",CG:"PF2E.AlignmentCG",LN:"PF2E.AlignmentLN",N:"PF2E.AlignmentN",CN:"PF2E.AlignmentCN",LE:"PF2E.AlignmentLE",NE:"PF2E.AlignmentNE",CE:"PF2E.AlignmentCE"},attitude:{hostile:"PF2E.Attitudes.Hostile",unfriendly:"PF2E.Attitudes.Unfriendly",indifferent:"PF2E.Attitudes.Indifferent",friendly:"PF2E.Attitudes.Friendly",helpful:"PF2E.Attitudes.Helpful"},skillList:{acrobatics:"PF2E.SkillAcrobatics",arcana:"PF2E.SkillArcana",athletics:"PF2E.SkillAthletics",crafting:"PF2E.SkillCrafting",deception:"PF2E.SkillDeception",diplomacy:"PF2E.SkillDiplomacy",intimidation:"PF2E.SkillIntimidation",medicine:"PF2E.SkillMedicine",nature:"PF2E.SkillNature",occultism:"PF2E.SkillOccultism",performance:"PF2E.SkillPerformance",religion:"PF2E.SkillReligion",society:"PF2E.SkillSociety",stealth:"PF2E.SkillStealth",survival:"PF2E.SkillSurvival",thievery:"PF2E.SkillThievery",lore:"PF2E.SkillLore"},spellComponents:{V:"PF2E.SpellComponentV",S:"PF2E.SpellComponentS",M:"PF2E.SpellComponentM",F:"PF2E.SpellComponentF"},spellCategories:{spell:"PF2E.SpellCategorySpell",focus:"PF2E.SpellCategoryFocus",ritual:"PF2E.SpellCategoryRitual"},spellTypes:{attack:"PF2E.SpellTypeAttack",save:"PF2E.SpellTypeSave",heal:"PF2E.SpellTypeHeal",utility:"PF2E.SpellTypeUtility"},spellLevels:{1:"PF2E.SpellLevel1",2:"PF2E.SpellLevel2",3:"PF2E.SpellLevel3",4:"PF2E.SpellLevel4",5:"PF2E.SpellLevel5",6:"PF2E.SpellLevel6",7:"PF2E.SpellLevel7",8:"PF2E.SpellLevel8",9:"PF2E.SpellLevel9",10:"PF2E.SpellLevel10"},featTypes:{ancestry:"PF2E.FeatTypeAncestry",ancestryfeature:"PF2E.FeatTypeAncestryfeature",class:"PF2E.FeatTypeClass",classfeature:"PF2E.FeatTypeClassfeature",heritage:"PF2E.FeatTypeHeritage",skill:"PF2E.FeatTypeSkill",general:"PF2E.FeatTypeGeneral",archetype:"PF2E.FeatTypeArchetype",bonus:"PF2E.FeatTypeBonus",pfsboon:"PF2E.FeatPFSBoonHeader",deityboon:"PF2E.FeatDeityBoonHeader",curse:"PF2E.FeatCurseHeader"},actionTypes:{action:"PF2E.ActionTypeAction",reaction:"PF2E.ActionTypeReaction",free:"PF2E.ActionTypeFree",passive:"PF2E.ActionTypePassive"},actionsNumber:{1:"PF2E.ActionNumber1",2:"PF2E.ActionNumber2",3:"PF2E.ActionNumber3"},actionCategories:{interaction:"PF2E.ActionCategoryInteraction",defensive:"PF2E.ActionCategoryDefensive",offensive:"PF2E.ActionCategoryOffensive"},frequencies:{PT1M:"PF2E.Duration.PT1M",PT10M:"PF2E.Duration.PT10M",PT1H:"PF2E.Duration.PT1H",PT24H:"PF2E.Duration.PT24H",day:"PF2E.Duration.day",P1W:"PF2E.Duration.P1W"},proficiencyLevels:["PF2E.ProficiencyLevel0","PF2E.ProficiencyLevel1","PF2E.ProficiencyLevel2","PF2E.ProficiencyLevel3","PF2E.ProficiencyLevel4"],actorSizes:{tiny:"PF2E.ActorSizeTiny",sm:"PF2E.ActorSizeSmall",med:"PF2E.ActorSizeMedium",lg:"PF2E.ActorSizeLarge",huge:"PF2E.ActorSizeHuge",grg:"PF2E.ActorSizeGargantuan"},actorTypes:{character:"ACTOR.TypeCharacter",familiar:"ACTOR.TypeFamiliar",hazard:"ACTOR.TypeHazard",loot:"ACTOR.TypeLoot",npc:"ACTOR.TypeNpc",vehicle:"ACTOR.TypeVehicle"},speedTypes:{swim:"PF2E.SpeedTypesSwim",climb:"PF2E.SpeedTypesClimb",fly:"PF2E.SpeedTypesFly",burrow:"PF2E.SpeedTypesBurrow"},prerequisitePlaceholders:{prerequisite1:"PF2E.Prerequisite1",prerequisite2:"PF2E.Prerequisite2",prerequisite3:"PF2E.Prerequisite3",prerequisite4:"PF2E.Prerequisite4",prerequisite5:"PF2E.Prerequisite5"},senses:{darkvision:"PF2E.SensesDarkvision",echolocation:"PF2E.SensesEcholocation",greaterDarkvision:"PF2E.SensesGreaterDarkvision",lifesense:"PF2E.SensesLifesense",lowLightVision:"PF2E.SensesLowLightVision",motionsense:"PF2E.SensesMotionsense",scent:"PF2E.SensesScent",tremorsense:"PF2E.SensesTremorsense",wavesense:"PF2E.SensesWavesense"},senseAcuity:{imprecise:"PF2E.Sense.Acuity.Imprecise",precise:"PF2E.Sense.Acuity.Precise",vague:"PF2E.Sense.Acuity.Vague"},bulkTypes:{L:"PF2E.BulkTypeLight",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9",10:"10",11:"11",12:"12",13:"13",14:"14",15:"15",16:"16",17:"17",18:"18",19:"19",20:"20",21:"21",22:"22",23:"23",24:"24",25:"25",26:"26",27:"27",28:"28",29:"29",30:"30",31:"31",32:"32",33:"33",34:"34",35:"35",36:"36",37:"37",38:"38",39:"39",40:"40",41:"41",42:"42",43:"43",44:"44",45:"45",46:"46",47:"47",48:"48",49:"49",50:"50"},conditionTypes,pfsFactions:{EA:"PF2E.PFS.Factions.EA",GA:"PF2E.PFS.Factions.GA",HH:"PF2E.PFS.Factions.HH",VS:"PF2E.PFS.Factions.VS",RO:"PF2E.PFS.Factions.RO",VW:"PF2E.PFS.Factions.VW"},pfsSchools:{none:"PF2E.PFS.School.None",scrolls:"PF2E.PFS.School.Scrolls",spells:"PF2E.PFS.School.Spells",swords:"PF2E.PFS.School.Swords"},immunityTypes,languages:{common:"PF2E.LanguageCommon",draconic:"PF2E.LanguageDraconic",dwarven:"PF2E.LanguageDwarven",elven:"PF2E.LanguageElven",gnomish:"PF2E.LanguageGnomish",goblin:"PF2E.LanguageGoblin",halfling:"PF2E.LanguageHalfling",jotun:"PF2E.LanguageJotun",orcish:"PF2E.LanguageOrcish",sylvan:"PF2E.LanguageSylvan",undercommon:"PF2E.LanguageUndercommon",ysoki:"PF2E.LanguageYsoki",abyssal:"PF2E.LanguageAbyssal",adlet:"PF2E.LanguageAdlet",aklo:"PF2E.LanguageAklo",akitonian:"PF2E.LanguageAkitonian",alghollthu:"PF2E.LanguageAlghollthu",amurrun:"PF2E.LanguageAmurrun",anadi:"PF2E.LanguageAnadi",anugobu:"PF2E.LanguageAnugobu",arcadian:"PF2E.LanguageArcadian",aquan:"PF2E.LanguageAquan",arboreal:"PF2E.LanguageArboreal",auran:"PF2E.LanguageAuran",boggard:"PF2E.LanguageBoggard",calda:"PF2E.LanguageCalda",caligni:"PF2E.LanguageCaligni",celestial:"PF2E.LanguageCelestial",cyclops:"PF2E.LanguageCyclops",daemonic:"PF2E.LanguageDaemonic",destrachan:"PF2E.LanguageDestrachan",dziriak:"PF2E.LanguageDziriak",ekujae:"PF2E.LanguageEkujae",erutaki:"PF2E.LanguageErutaki",formian:"PF2E.LanguageFormian",garundi:"PF2E.LanguageGarundi",girtablilu:"PF2E.LanguageGirtablilu",gnoll:"PF2E.LanguageGnoll",goloma:"PF2E.LanguageGoloma",grippli:"PF2E.LanguageGrippli",hallit:"PF2E.LanguageHallit",ignan:"PF2E.LanguageIgnan",ikeshti:"PF2E.LanguageIkeshti",infernal:"PF2E.LanguageInfernal",iruxi:"PF2E.LanguageIruxi",jistkan:"PF2E.LanguageJistkan",jyoti:"PF2E.LanguageJyoti",kaava:"PF2E.LanguageKaava",kibwani:"PF2E.LanguageKibwani",kitsune:"PF2E.LanguageKitsune",kelish:"PF2E.LanguageKelish",lirgeni:"PF2E.LanguageLirgeni",mahwek:"PF2E.LanguageMahwek",minaten:"PF2E.LanguageMinaten",mwangi:"PF2E.LanguageMwangi",mzunu:"PF2E.LanguageMzunu",nagaji:"PF2E.LanguageNagaji",necril:"PF2E.LanguageNecril",ocotan:"PF2E.LanguageOcotan",osiriani:"PF2E.LanguageOsiriani",protean:"PF2E.LanguageProtean",rasu:"PF2E.LanguageRasu",requian:"PF2E.LanguageRequian",russian:"PF2E.LanguageRussian",senzar:"PF2E.LanguageSenzar",shadowtongue:"PF2E.LanguageShadowtongue",shobhad:"PF2E.LanguageShobhad",shisk:"PF2E.LanguageShisk",shoanti:"PF2E.LanguageShoanti",shoony:"PF2E.LanguageShoony",skald:"PF2E.LanguageSkald",sphinx:"PF2E.LanguageSphinx",strix:"PF2E.LanguageStrix",taldane:"PF2E.LanguageTaldane",tengu:"PF2E.LanguageTengu",terran:"PF2E.LanguageTerran",thassilonian:"PF2E.LanguageThassilonian",tien:"PF2E.LanguageTien",utopian:"PF2E.LanguageUtopian",vanara:"PF2E.LanguageVanara",varisian:"PF2E.LanguageVarisian",varki:"PF2E.LanguageVarki",vishkanyan:"PF2E.LanguageVishkanyan",vudrani:"PF2E.LanguageVudrani",wyrwood:"PF2E.LanguageWyrwood",xanmba:"PF2E.LanguageXanmba",androffan:"PF2E.LanguageAndroffan",azlanti:"PF2E.LanguageAzlanti",grioth:"PF2E.LanguageGrioth",kovintal:"PF2E.LanguageKovintal",migo:"PF2E.LanguageMiGo",munavri:"PF2E.LanguageMunavri",samsaran:"PF2E.LanguageSamsaran",sasquatch:"PF2E.LanguageSasquatch",shae:"PF2E.LanguageShae",yithian:"PF2E.LanguageYithian",druidic:"PF2E.LanguageDruidic"},attackEffects:{grab:"PF2E.AttackEffectGrab","improved-grab":"PF2E.AttackEffectImprovedGrab",constrict:"PF2E.AttackEffectConstrict","greater-constrict":"PF2E.AttackEffectGreaterConstrict",knockdown:"PF2E.AttackEffectKnockdown","improved-knockdown":"PF2E.AttackEffectImprovedKnockdown",push:"PF2E.AttackEffectPush","improved-push":"PF2E.AttackEffectImprovedPush",trip:"PF2E.AttackEffectTrip"},worldClock:{AR:{yearOffset:2700},IC:{yearOffset:5200},AD:{yearOffset:-95},CE:{yearOffset:0}},runes:{weapon:{property:Object.assign({},runes_1.WEAPON_PROPERTY_RUNES)}},monsterAbilities:()=>({"All-Around Vision":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>This monster can see in all directions simultaneously, and therefore can\'t be flanked.'},"Aquatic Ambush":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br><b>Requirements</b> The monster is hiding in water and a creature that hasn\'t detected it is within the listed number of feet. <b>Effect</b> The monster moves up to its swim Speed + 10 feet toward the triggering creature, traveling on water and on land. Once the creature is in reach, the monster makes a Strike against it. The creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=16">flat-footed</a> against this Strike.'},"Attack of Opportunity":{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br><b>Trigger</b> A creature within the monster\'s reach uses a manipulate action or a move action, makes a ranged attack, or leaves a square during a move action it\'s using. <b>Effect</b> The monster attempts a melee Strike against the triggering creature. If the attack is a critical hit and the trigger was a manipulate action, the monster disrupts that action. This Strike doesn\'t count toward the monster\'s multiple attack penalty, and its multiple attack penalty doesn\'t apply to this Strike.'},"At-Will Spells":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>The monster can cast its at-will spells any number of times without using up spell slots.'},Aura:{actionType:"passive",actionCost:1,description:"<b>Source</b> <a href=\"https://paizo.com/products/btq01y0m?Pathfinder-Bestiary\" target=\"_blank\" class=\"external-link\"><i>Bestiary pg. 342</i></a><br>A monster's aura automatically affects everything within a specified emanation around that monster. The monster doesn't need to spend actions on the aura; rather, the aura's effects are applied at specific times, such as when a creature ends its turn in the aura or when creatures enter the aura.<br><br> If an aura does nothing but deal damage, its entry lists only the radius, damage, and saving throw. Such auras deal this damage to a creature when the creature enters the aura and when a creature starts its turn in the aura. A creature can take damage from the aura only once per round.<br><br> The GM might determine that a monster's aura doesn't affect its own allies. For example, a creature might be immune to a monster's frightful presence if they have been around each other for a long time."},Buck:{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>Most monsters that serve as mounts can attempt to\nbuck off unwanted or annoying riders, but most mounts\nwill not use this reaction against a trusted creature unless\nthe mounts are spooked or mistreated. <b>Trigger</b> A creature\nMounts or uses the Command an Animal action while riding\nthe monster. <b>Effect</b> The triggering creature must succeed\nat a Reflex saving throw against the listed DC or fall off the\ncreature and land prone. If the save is a critical failure, the\ntriggering creature also takes 1d6 bludgeoning damage in\naddition to the normal damage for the fall.'},"Catch Rock":{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br><b>Requirements</b> The monster must have a free hand but can Release anything it\'s holding as part of this reaction. <b>Trigger</b> The monster is targeted with a thrown rock Strike or a rock would fall on the monster. <b>Effect</b> The monster gains a +4 circumstance bonus to its AC against the triggering attack or to any defense against the falling rock. If the attack misses or the monster successfully defends against the falling rock, the monster catches the rock, takes no damage, and is now holding the rock.'},"Change Shape":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=32">concentrate</a>, [magical tradition], <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=127">polymorph</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=157">transmutation</a>) The monster changes its shape indefinitely. It can use this action again to return to its natural shape or adopt a new shape. Unless otherwise noted, a monster cannot use Change Shape to appear as a specific individual. Using Change Shape counts as creating a disguise for the Impersonate use of Deception. The monster\'s transformation automatically defeats Perception DCs to determine whether the creature is a member of the ancestry or creature type into which it transformed, and it gains a +4 status bonus to its Deception DC to prevent others from seeing through its disguise. Change Shape abilities specify what shapes the monster can adopt. The monster doesn\'t gain any special abilities of the new shape, only its physical form. For example, in each shape, it replaces its normal Speeds and Strikes, and might potentially change its senses or size. Any changes are listed in its stat block.'},"Constant Spells":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>A constant spell affects the monster without the monster needing to cast it, and its duration is unlimited. If a constant spell gets counteracted, the monster can reactivate it by spending the normal spellcasting actions the spellrequires.'},Constrict:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>The monster deals the listed amount of damage to any number of creatures grabbed or restrained by it. Each of those creatures can attempt a basic Fortitude save with the listed DC.'},Coven:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=47">divination</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=106">mental</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=120">occult</a>) This monster can form a coven with two or more other creatures who also have the coven ability. This involves performing an 8-hour ceremony with all prospective coven members. After the coven is formed, each of its members gains elite adjustments (page 6), adjusting their levels accordingly. Coven members can sense other members\' locations and conditions by spending a single action, which has the concentrate trait, and can sense what another coven member is sensing as a two-action activity, which has the concentrate trait as well.<br><br> Covens also grant spells and rituals to their members, but these can be cast only in cooperation between three coven members who are all within 30 feet of one another. A coven member can contribute to a coven spell with a single-action spellcasting activity that has a single verbal component. If two coven members have contributed these actions within the last round, a third member can cast a coven spell on her turn by spending the normal spellcasting actions. A coven can cast its coven spells an unlimited number of times but can cast only one coven spell each round. All covens grant the 8th-level <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=17">baleful polymorph</a></i> spell and all the following spells, which the coven can cast at any level up to 5th: <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=15">augury</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=34">charm</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=39">clairaudience</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=40">clairvoyance</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=90">dream message</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=159">illusory disguise</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=161">illusory scene</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=239">prying eye</a></i>, and <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=329">talking corpse</a></i>. Individual creatures with the coven ability also grant additional spells to any coven they join. A coven can also cast the <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Rituals.aspx?ID=9">control weather</a></i> ritual, with a DC of 23 instead of the standard DC.<br><br> If a coven member leaving the coven or the death of a coven member brings the coven below three members, the remaining members keep their elite adjustments for 24 hours, but without enough members to contribute the necessary actions, they can\'t cast coven spells.'},Darkvision:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>A monster with darkvision can see perfectly well in areas of darkness and dim light, though such vision is in black and white only. Some forms of magical darkness, such as a 4th-level <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=59">darkness</a></i> spell, block normal darkvision. A monster with greater darkvision, however, can see through even these forms of magical darkness.'},Disease:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>When a creature is exposed to a monster\'s disease, it attempts a Fortitude save or succumbs to the disease. The level of a disease is the level of the monster in icting the disease. The disease follows the <a style="text-decoration:underline" href="https://2e.aonprd.com/Rules.aspx?ID=361">rules for afflictions</a>.'},Engulf:{actionType:"action",actionCost:2,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster Strides up to double its Speed and can move through the spaces of any creatures in its path. Any creature of the monster\'s size or smaller whose space the monster moves through can attempt a Reflex save with the listed DC to avoid being engulfed. A creature unable to act automatically critically fails this save. If a creature succeeds at its save, it can choose to be either pushed aside (out of the monster\'s path) or pushed in front of the monster to the end of the monster\'s movement. The monster can attempt to Engulf the same creature only once in a single use of Engulf. The monster can contain as many creatures as can fit in its space.<br><br> A creature that fails its save is pulled into the monster\'s body. It is grabbed, is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=35">slowed 1</a>, and has to hold its breath or start suffocating. The creature takes the listed amount of damage when first engulfed and at the end of each of its turns while it\'s engulfed. An engulfed creature can get free by Escaping against the listed escape DC. An engulfed creature can attack the monster engulfing it, but only with unarmed attacks or with weapons of light Bulk or less. The engulfing creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=16">flat-footed</a> against the attack. If the monster takes piercing or slashing damage equaling or exceeding the listed Rupture value from a single attack or spell, the engulfed creature cuts itself free. A creature that gets free by either method can immediately breathe and exits the swallowing monster\'s space.<br><br> If the monster dies, all creatures it has engulfed are automatically released as the monster\'s form loses cohesion.'},"Fast Healing":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>A monster with this ability regains the given number of Hit Points each round at the beginning of its turn.'},Ferocity:{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br><b>Trigger</b> The monster is reduced to 0 HP. <b>Effect</b> The monster avoids being knocked out and remains at 1 HP, but its <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=42">wounded</a> value increases by 1. When it is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=42">wounded 3</a>, it can no longer use this ability.'},"Frightful Presence":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=206">aura</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=60">emotion</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=68">fear</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=106">mental</a>) A creature that first enters the area must attempt a Will save. Regardless of the result of the saving throw, the creature is temporarily immune to this monster\'s Frightful Presence for 1 minute.<br><br> <b>Critical Success</b> The creature is unaffected by the presence.<br> <b>Success</b> The creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=19">frightened 1</a>.<br> <b>Failure</b> The creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=19">frightened 2</a>.<br> <b>Critical Failure</b> The creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=19">frightened 4</a>.'},Grab:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br><b>Requirements</b> The monster\'s last action was a success with a Strike that lists Grab in its damage entry, or it has a creature grabbed using this action. <b>Effect</b> The monster automatically Grabs the target until the end of the monster\'s next turn. The creature is grabbed by whichever body part the monster attacked with, and that body part can\'t be used to Strike creatures until the grab is ended.<br><br> Using Grab extends the duration of the monster\'s Grab until the end of its next turn for all creatures grabbed by it. A grabbed creature can use the <a style="text-decoration:underline" href="https://2e.aonprd.com/Actions.aspx?ID=79">Escape</a> action to get out of the grab, and the Grab ends for a grabbed creatures if the monster moves away from it.'},"Greater Constrict":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster deals the listed amount of damage to any number of creatures grabbed or restrained by it. Each of those creatures can attempt a basic Fortitude save with the listed DC. A creature that fails this save falls <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=38">unconscious</a>, and a creature that succeeds is then temporarily immune to falling <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=38">unconscious</a> from Greater Constrict for 1 minute.'},"Improved Grab":{actionType:"free",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster can use Grab as a free action triggered by a hit with its initial attack. A monster with Improved Grab still needs to spend an action to extend the duration for creatures it already has grabbed.'},"Improved Knockdown":{actionType:"free",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster can use Knockdown as a free action triggered by a hit with its initial attack.'},"Improved Push":{actionType:"free",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster can use Push as a free action triggered by a hit with its initial attack.'},Knockdown:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br><b>Requirements</b> The monster\'s last action was a success with a Strike that lists Knockdown in its damage entry. <b>Effect</b> The monster knocks the target prone.'},Lifesense:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>Lifesense allows a monster to sense the vital essence of living and undead creatures within the listed range. The sense can distinguish between the positive energy animating living creatures and the negative energy animating undead creatures, much as sight distinguishes colors.'},"Light Blindness":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>When first exposed to bright light, the monster is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=1">blinded</a> until the end of its next turn. After this exposure, light doesn\'t blind the monster again until after it spends 1 hour in darkness. However, as long as the monster is in an area of bright light, it\'s <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=7">dazzled</a>.'},"Low-Light Vision":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster can see in dim light as though it were bright light, so it ignores the <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=4">concealed</a> condition due to dim light.'},Poison:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>When a creature is exposed to a monster\'s poison, it attempts a Fortitude save to avoid becoming poisoned. The level of a poison is the level of the monster inflicting the poison. The poison follows the <a style="text-decoration:underline" href="https://2e.aonprd.com/Rules.aspx?ID=361">rules for afflictions</a>.'},Push:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br><b>Requirements</b> The monster\'s last action was a success with a Strike that lists Push in its damage entry. <b>Effect</b> The monster automatically knocks the target away from the monster. Unless otherwise noted in the ability description, the creature is pushed 5 feet. If the attack was a critical hit, this distance is doubled.'},Regeneration:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>This monster regains the listed number of Hit Points each round at the beginning of its turn. Its <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=11">dying</a> condition never increases beyond <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=11">dying 3</a> as long as its regeneration is active. However, if it takes damage of a type listed in the regeneration entry, its regeneration deactivates until the end of its next turn. Deactivate the regeneration before applying any damage of a listed type, since that damage might kill the monster by bringing it to <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=11">dying 4</a>.'},Rend:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>A Rend entry lists a Strike the monster has. <b>Requirements</b> The monster hit the same enemy with two consecutive Strikes of the listed type in the same round. <b>Effect</b> The monster automatically deals that Strike\'s damage again to the enemy.'},"Retributive Strike":{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br><b>Trigger</b> An enemy damages the monster\'s ally, and both are within 15 feet of the monster. <b>Effect</b> The ally gains resistance to all damage against the triggering damage equal to 2 + the monster\'s level. If the foe is within reach, the monster makes a melee Strike against it.'},Scent:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>Scent involves sensing creatures or objects by smell, and is usually a vague sense. The range is listed in the ability, and it functions only if the creature or object being detected emits an aroma (for instance, incorporeal creatures usually do not exude an aroma).<br><br> If a creature emits a heavy aroma or is upwind, the GM can double or even triple the range of scent abilities used to detect that creature, and the GM can reduce the range if a creature is downwind.'},"Shield Block":{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br><b>Trigger</b> The monster has its shield raised and takes damage from a physical attack. <b>Effect</b> The monster snaps its shield into place to deflect a blow. The shield prevents the monster from taking an amount of damage up to the shield\'s Hardness. The monster and the shield each take any remaining damage, possibly breaking or destroying the shield.'},"Sneak Attack":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>When the monster Strikes a creature that has the <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=16">flat-footed</a> condition with an <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=170">agile</a> or <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=179">finesse</a> melee weapon, an <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=170">agile</a> or <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=179">finesse</a> unarmed attack, or a ranged weapon attack, it also deals the listed precision damage. For a ranged attack with a thrown weapon, that weapon must also be an <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=170">agile</a> or <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=179">finesse</a> weapon.'},"Swallow Whole":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=15">attack</a>) The monster attempts to swallow a creature of the listed size or smaller that it has grabbed in its jaws or mouth. If a swallowed creature is of the maximum size listed, the monster can\'t use Swallow Whole again. If the creature is smaller than the maximum, the monster can usually swallow more creatures; the GM determines the maximum. The monster attempts an <a style="text-decoration:underline" href="https://2e.aonprd.com/Skills.aspx?ID=3">Athletics</a> check opposed by the grabbed creature\'s Reflex DC. If it succeeds, it swallows the creature. The monster\'s mouth or jaws no longer grab a creature it has swallowed, so the monster is free to use them to Strike or Grab once again. The monster can\'t attack creatures it has swallowed.<br><br> A swallowed creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=20">grabbed</a>, is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=35">slowed 1</a>, and has to hold its breath or start suffocating. The swallowed creature takes the listed amount of damage when first swallowed and at the end of each of its turns while it\'s swallowed. If the victim Escapes this ability\'s grabbed condition, it exits through the monster\'s mouth. This frees any other creature grabbed in the monster\'s mouth or jaws. A swallowed creature can attack the monster that has swallowed it, but only with unarmed attacks or with weapons of light Bulk or less. The engulfing creature is flat-footed against the attack. If the monster takes piercing or slashing damage equaling or exceeding the listed Rupture value from a single attack or spell, the engulfed creature cuts itself free. A creature that gets free by either Escaping or cutting itself free can immediately breathe and exits the swallowing monster\'s space.<br><br> If the monster dies, a swallowed creature can be freed by creatures adjacent to the corpse if they spend a combined total of 3 actions cutting the monster open with a weapon or unarmed attack that deals piercing or slashing damage.'},"Swarm Mind":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>This monster doesn\'t have a single mind (typically because it\'s a swarm of smaller creatures), and is immune to mental effects that target only a specific number of creatures. It is still subject to mental effects that affect all creatures in an area.'},Telepathy:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=206">aura</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=47">divination</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=103">magical</a>) A monster with telepathy can communicate mentally with any creatures within the listed radius, as long as they share a language. This doesn\'t give any special access to their thoughts, and communicates no more information than normal speech would.'},"Throw Rock":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>The monster picks up a rock within reach or retrieves a stowed rock and throws it, making a ranged Strike.'},Trample:{actionType:"action",actionCost:3,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>The monster Strides up to double its Speed and can move through the spaces of creatures of the listed size, Trampling each creature whose space it enters. The monster can attempt to Trample the same creature only once in a single use of Trample. The monster deals the damage of the listed Strike, but trampled creatures can attempt a basic Reflex save at the listed DC (no damage on a critical success, half damage on a success, double damage on a critical failure).'},Tremorsense:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>Tremorsense allows a monster to feel the vibrations through a solid surface caused by movement. It is an imprecise sense with a limited range (listed in the ability). Tremorsense functions only if the monster is on the same surface as the subject, and only if the subject is moving along (or burrowing through) the surface.'},Wavesense:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>This sense allows a monster to feel vibrations caused by movement through a liquid. It\'s an imprecise sense with a limited range (listed in the ability). Wavesense functions only if monster and the subject are in the same body of liquid, and only if the subject is moving through the liquid.'}}),SETTINGS:{automation:{rulesBasedVision:{name:"PF2E.SETTINGS.Automation.RulesBasedVision.Name",hint:"PF2E.SETTINGS.Automation.RulesBasedVision.Hint"},effectExpiration:{name:"PF2E.SETTINGS.Automation.EffectExpiration.Name",hint:"PF2E.SETTINGS.Automation.EffectExpiration.Hint"},actorsDeadAtZero:{name:"PF2E.SETTINGS.Automation.ActorsDeadAtZero.Name",hint:"PF2E.SETTINGS.Automation.ActorsDeadAtZero.Hint",neither:"PF2E.SETTINGS.Automation.ActorsDeadAtZero.Neither",npcsOnly:"PF2E.SETTINGS.Automation.ActorsDeadAtZero.NPCsOnly",pcsOnly:"PF2E.SETTINGS.Automation.ActorsDeadAtZero.PCsOnly",both:"PF2E.SETTINGS.Automation.ActorsDeadAtZero.Both"},lootableNPCs:{name:"PF2E.SETTINGS.Automation.LootableNPCs.Name",hint:"PF2E.SETTINGS.Automation.LootableNPCs.Hint"},experimentalDamageFormatting:{name:"PF2E.SETTINGS.Automation.ExperimentalDamageFormatting.Name",hint:"PF2E.SETTINGS.Automation.ExperimentalDamageFormatting.Hint"}},homebrew:{creatureTraits:{name:"PF2E.SETTINGS.Homebrew.CreatureTraits.Name",hint:"PF2E.SETTINGS.Homebrew.CreatureTraits.Hint"},featTraits:{name:"PF2E.SETTINGS.Homebrew.FeatTraits.Name",hint:"PF2E.SETTINGS.Homebrew.FeatTraits.Hint"},languages:{name:"PF2E.SETTINGS.Homebrew.Languages.Name",hint:"PF2E.SETTINGS.Homebrew.Languages.Hint"},magicSchools:{name:"PF2E.SETTINGS.Homebrew.MagicSchools.Name",hint:"PF2E.SETTINGS.Homebrew.MagicSchools.Hint"},spellTraits:{name:"PF2E.SETTINGS.Homebrew.SpellTraits.Name",hint:"PF2E.SETTINGS.Homebrew.SpellTraits.Hint"},weaponCategories:{name:"PF2E.SETTINGS.Homebrew.WeaponCategories.Name",hint:"PF2E.SETTINGS.Homebrew.WeaponCategories.Hint"},weaponGroups:{name:"PF2E.SETTINGS.Homebrew.WeaponGroups.Name",hint:"PF2E.SETTINGS.Homebrew.WeaponGroups.Hint"},baseWeapons:{name:"PF2E.SETTINGS.Homebrew.BaseWeapons.Name",hint:"PF2E.SETTINGS.Homebrew.BaseWeapons.Hint"},weaponTraits:{name:"PF2E.SETTINGS.Homebrew.WeaponTraits.Name",hint:"PF2E.SETTINGS.Homebrew.WeaponTraits.Hint"},equipmentTraits:{name:"PF2E.SETTINGS.Homebrew.EquipmentTraits.Name",hint:"PF2E.SETTINGS.Homebrew.EquipmentTraits.Hint"}},worldClock:{name:"PF2E.SETTINGS.WorldClock.Name",label:"PF2E.SETTINGS.WorldClock.Label",hint:"PF2E.SETTINGS.WorldClock.Hint",dateTheme:{name:"PF2E.SETTINGS.WorldClock.DateTheme.Name",hint:"PF2E.SETTINGS.WorldClock.DateTheme.Hint",AR:"PF2E.SETTINGS.WorldClock.DateTheme.AR",AD:"PF2E.SETTINGS.WorldClock.DateTheme.AD",CE:"PF2E.SETTINGS.WorldClock.DateTheme.CE"},timeConvention:{name:"PF2E.SETTINGS.WorldClock.TimeConvention.Name",hint:"PF2E.SETTINGS.WorldClock.TimeConvention.Hint",twentyFour:"PF2E.SETTINGS.WorldClock.TimeConvention.TwentyFour",twelve:"PF2E.SETTINGS.WorldClock.TimeConvention.Twelve"},showClockButton:{name:"PF2E.SETTINGS.WorldClock.ShowClockButton.Name",hint:"PF2E.SETTINGS.WorldClock.ShowClockButton.Hint"},playersCanView:{name:"PF2E.SETTINGS.WorldClock.PlayersCanView.Name",hint:"PF2E.SETTINGS.WorldClock.PlayersCanView.Hint"},syncDarkness:{name:"PF2E.SETTINGS.WorldClock.SyncDarkness.Name",hint:"PF2E.SETTINGS.WorldClock.SyncDarkness.Hint"},syncDarknessScene:{name:"PF2E.SETTINGS.WorldClock.SyncDarknessScene.Name",hint:"PF2E.SETTINGS.WorldClock.SyncDarknessScene.Hint",enabled:"PF2E.SETTINGS.WorldClock.SyncDarknessScene.Enabled",disabled:"PF2E.SETTINGS.WorldClock.SyncDarknessScene.Disabled",default:"PF2E.SETTINGS.WorldClock.SyncDarknessScene.Default"},worldCreatedOn:{name:"PF2E.SETTINGS.WorldClock.WorldCreatedOn.Name",hint:"PF2E.SETTINGS.WorldClock.WorldCreatedOn.Hint"}}},Actor:{documentClasses:{character:_actor_1.CharacterPF2e,npc:_actor_1.NPCPF2e,hazard:_actor_1.HazardPF2e,loot:_actor_1.LootPF2e,familiar:_actor_1.FamiliarPF2e,vehicle:_actor_1.VehiclePF2e}},Item:{documentClasses:{backpack:_item_1.ContainerPF2e,formula:_item_1.FormulaPF2e,treasure:_item_1.TreasurePF2e,weapon:_item_1.WeaponPF2e,armor:_item_1.ArmorPF2e,deity:_item_1.DeityPF2e,kit:_item_1.KitPF2e,melee:_item_1.MeleePF2e,consumable:_item_1.ConsumablePF2e,equipment:_item_1.EquipmentPF2e,effect:_item_1.EffectPF2e,ancestry:_item_1.AncestryPF2e,background:_item_1.BackgroundPF2e,book:_item_1.BookPF2e,class:_item_1.ClassPF2e,feat:_item_1.FeatPF2e,lore:_item_1.LorePF2e,martial:_item_1.MartialPF2e,action:_item_1.ActionPF2e,spell:_item_1.SpellPF2e,spellcastingEntry:_item_1.SpellcastingEntryPF2e,condition:_item_1.ConditionPF2e}}}},18235:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DicePF2e=void 0;const _item_1=__webpack_require__(10843);exports.DicePF2e=class{static async d20Roll({event,item=null,parts,data,template,title,speaker,flavor,onClose,dialogOptions,rollMode,rollType=""}){rollMode=rollMode||game.settings.get("core","rollMode");const userSettingQuickD20Roll=!game.user.getFlag("pf2e","settings.showRollDialogs"),_roll=(rollParts,adv,form)=>{let flav=flavor instanceof Function?flavor(rollParts,data):title;1===adv?(rollParts[0]=["2d20kh"],flav=game.i18n.format("PF2E.Roll.MisfortuneTitle",{title})):-1===adv&&(rollParts[0]=["2d20kl"],flav=game.i18n.format("PF2E.Roll.MisfortuneTitle",{title})),form&&(data.itemBonus=form.find('[name="itemBonus"]').val()),data.itemBonus&&0!==data.itemBonus||-1===rollParts.indexOf("@itemBonus")||rollParts.splice(rollParts.indexOf("@itemBonus"),1),form&&(data.statusBonus=form.find('[name="statusBonus"]').val()),data.statusBonus&&0!==data.statusBonus||-1===rollParts.indexOf("@statusBonus")||rollParts.splice(rollParts.indexOf("@statusBonus"),1),form&&(data.circumstanceBonus=form.find('[name="circumstanceBonus"]').val()),data.circumstanceBonus&&0!==data.circumstanceBonus||-1===rollParts.indexOf("@circumstanceBonus")||rollParts.splice(rollParts.indexOf("@circumstanceBonus"),1);const roll=new Roll(rollParts.join("+"),data).roll({async:!1}),origin=item?{uuid:item.uuid,type:item.type}:null;return roll.toMessage({speaker,flavor:flav,flags:{pf2e:{context:{type:rollType},origin}}},{rollMode:form?form.find('[name="rollMode"]').val():rollMode}),roll};if(parts=["1d20"].concat(parts),userSettingQuickD20Roll&&!event.altKey&&!event.ctrlKey&&!event.metaKey&&!event.shiftKey||!userSettingQuickD20Roll&&event.shiftKey)return _roll(parts,0);if(event.ctrlKey||event.metaKey)return rollMode="blindroll",_roll(parts,0);if(event.shiftKey||!userSettingQuickD20Roll){-1===parts.indexOf("@circumstanceBonus")&&(parts=parts.concat(["@circumstanceBonus"])),-1===parts.indexOf("@itemBonus")&&(parts=parts.concat(["@itemBonus"])),-1===parts.indexOf("@statusBonus")&&(parts=parts.concat(["@statusBonus"])),template=template||"systems/pf2e/templates/chat/roll-dialog.html";const dialogData={data,rollMode,formula:parts.join(" + "),rollModes:CONFIG.Dice.rollModes},content=await renderTemplate(template,dialogData);let roll;return new Promise((resolve=>{new Dialog({title,content,buttons:{advantage:{label:game.i18n.localize("PF2E.Roll.Fortune"),callback:html=>{roll=_roll(parts,1,html)}},normal:{label:game.i18n.localize("PF2E.Roll.Normal"),callback:html=>{roll=_roll(parts,0,html)}},disadvantage:{label:game.i18n.localize("PF2E.Roll.Misfortune"),callback:html=>{roll=_roll(parts,-1,html)}}},default:game.i18n.localize("PF2E.Roll.Normal"),close:html=>{onClose&&onClose(html,parts,data),resolve(roll)}},dialogOptions).render(!0)}))}return _roll(parts,0)}static damageRoll({event,item=null,partsCritOnly=[],parts,data,template="",title,speaker,flavor,critical=!1,onClose,dialogOptions,combineTerms=!1}){const rollMode=game.settings.get("core","rollMode"),userSettingQuickD20Roll=!game.user.getFlag("pf2e","settings.showRollDialogs");let rolled=!1;const _roll=(rollParts,crit,form)=>{form&&(data.itemBonus=form.find('[name="itemBonus"]').val(),data.statusBonus=form.find('[name="statusBonus"]').val(),data.circumstanceBonus=form.find('[name="circumstanceBonus"]').val());for(const key of["itemBonus","statusBonus","circumstanceBonus"])if(!data[key]||0===data[key]){let index;const part=`@${key}`;index=rollParts.indexOf(part),-1!==index&&rollParts.splice(index,1),index=partsCritOnly.indexOf(part),-1!==index&&partsCritOnly.splice(index,1)}const rule=game.settings.get("pf2e","critRule"),formula=Roll.replaceFormulaData(rollParts.join("+"),data),baseRoll=combineTerms?this.combineTerms(formula):new Roll(formula);if(crit){if("doubledamage"===rule)rollParts=[`(${baseRoll.formula}) * 2`];else{rollParts=[new Roll(baseRoll.formula,data).alter(2,0,{multiplyNumeric:!0}).formula]}rollParts=rollParts.concat(partsCritOnly)}else rollParts=[baseRoll.formula];const roll=new Roll(rollParts.join("+"),data),flav=flavor instanceof Function?flavor(rollParts,data):title,traits=item instanceof _item_1.SpellPF2e?this.getTraitMarkup(item):"",origin=item?{uuid:item.uuid,type:item.type}:null;return roll.toMessage({speaker,flavor:`${flav}\n${traits}`,flags:{pf2e:{origin}}},{rollMode:form?form.find('[name="rollMode"]').val():rollMode}),rolled=!0,roll};if(userSettingQuickD20Roll&&!event.shiftKey&&!event.ctrlKey&&!event.metaKey)return _roll(parts,event.altKey||critical);if(!userSettingQuickD20Roll&&(event.shiftKey||event.ctrlKey||event.metaKey))return _roll(parts,event.altKey||critical);parts.includes("@circumstanceBonus")||parts.push("@circumstanceBonus"),parts.includes("@itemBonus")||parts.push("@itemBonus"),parts.includes("@statusBonus")||parts.push("@statusBonus"),template=template||"systems/pf2e/templates/chat/roll-dialog.html";const dialogData={data,rollMode,formula:parts.join(" + "),rollModes:CONFIG.Dice.rollModes};let roll;return new Promise((resolve=>{renderTemplate(template,dialogData).then((content=>{new Dialog({title,content,buttons:{critical:{condition:critical,label:game.i18n.localize("PF2E.Roll.CriticalHit"),callback:html=>{roll=_roll(parts,!0,html)}},normal:{label:critical?game.i18n.localize("PF2E.Roll.Normal"):game.i18n.localize("PF2E.Roll.Roll"),callback:html=>{roll=_roll(parts,!1,html)}}},default:game.i18n.localize("PF2E.Roll.Normal"),close:html=>{onClose&&onClose(html,parts,data),resolve(!!rolled&&roll)}},dialogOptions).render(!0)}))}))}static combineTerms(formula){const roll=new Roll(formula);if(!roll.terms.every((term=>" + "===term.expression||term instanceof Die||term instanceof NumericTerm)))return roll;const diceByFaces=roll.terms.filter((term=>term instanceof Die)).reduce(((counts,die)=>{var _a;return counts[die.faces]=(null!==(_a=counts[die.faces])&&void 0!==_a?_a:0)+die.number,counts}),{}),stringTerms=[4,6,8,10,12,20].reduce(((terms,faces)=>"number"==typeof diceByFaces[faces]?[...terms,`${diceByFaces[faces]}d${faces}`]:terms),[]),constant=roll.terms.filter((term=>term instanceof NumericTerm)).reduce(((runningTotal,term)=>runningTotal+term.number),0);return new Roll([...stringTerms,constant].filter((term=>0!==term)).join("+"))}alter(add,multiply){var _a,_b;const rgx=new RegExp(DiceTerm.REGEXP,"g");if(this._rolled)throw new Error("You may not alter a Roll which has already been rolled");return this.terms=null===(_a=this.terms)||void 0===_a?void 0:_a.map((t=>t.replace(rgx,((_match,nd,d,mods)=>`${nd=nd*(multiply||1)+(add||0)}d${d}${mods=mods||""}`)))),this._formula=null===(_b=this.terms)||void 0===_b?void 0:_b.join(" "),this}static getTraitMarkup(spell){const allSpellTraits=Object.assign(Object.assign(Object.assign({},CONFIG.PF2E.magicSchools),CONFIG.PF2E.magicTraditions),CONFIG.PF2E.spellTraits),traitDescriptions=CONFIG.PF2E.traitsDescriptions;return[...spell.traits].map((trait=>{var _a;return{value:trait,label:game.i18n.localize(allSpellTraits[trait]),description:null!==(_a=traitDescriptions[trait])&&void 0!==_a?_a:""}})).sort(((a,b)=>a.label.localeCompare(b.label))).map((trait=>$("<span>").addClass("tag").attr({"data-trait":trait.value,"data-description":trait.description}).text(trait.label))).reduce((($traits,$trait)=>$traits.append($trait)),$("<div>").addClass("item-properties").addClass("tags")).prop("outerHTML")}}},91105:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerHandlebarsHelpers=void 0;const util_1=__webpack_require__(6945);exports.registerHandlebarsHelpers=function(){Handlebars.registerHelper("pad",((value,length,character)=>`${value}`.padStart(length,character))),Handlebars.registerHelper("add",((a,b)=>a+b)),Handlebars.registerHelper("if_all",((...args)=>{const opts=args.pop();let{fn}=opts;for(let i=0;i<args.length;++i)if(!args[i]){fn=opts.inverse;break}return fn()})),Handlebars.registerHelper("any",((...args)=>{const opts=args.pop();return args.some((v=>!!v))?opts:opts.inverse})),Handlebars.registerHelper("disabled",(condition=>condition?"disabled":"")),Handlebars.registerHelper("coalesce",((...args)=>{var _a;return null!==(_a=args.find((arg=>null!=arg)))&&void 0!==_a?_a:null})),Handlebars.registerHelper("lower",(str=>String.prototype.toLowerCase.call(null!=str?str:""))),Handlebars.registerHelper("multiply",((a,b)=>a*b)),Handlebars.registerHelper("percentage",((value,max)=>100*value/max)),Handlebars.registerHelper("strip_tags",(value=>function(input,allowed){allowed=(`${allowed||""}`.toLowerCase().match(/<[a-z][a-z0-9]*>/g)||[]).join("");const tags=/<\/?([a-z0-9]*)\b[^>]*>?/gi,commentsAndPhpTags=/<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;let before,after=(phpValue=>{if("string"==typeof phpValue)return phpValue;switch(typeof phpValue){case"boolean":return phpValue?"1":"";case"number":return Number.isNaN(phpValue)?"NAN":phpValue===1/0?(phpValue<0?"-":"")+"INF":`${phpValue}`;case"undefined":return"";case"object":return Array.isArray(phpValue)?"Array":null!==phpValue?"Object":"";case"function":default:throw new Error("Unsupported value type")}})(input);after="<"===after.substring(after.length-1)?after.substring(0,after.length-1):after;do{if(before=after,after=before.replace(commentsAndPhpTags,"").replace(tags,(($0,$1)=>allowed.indexOf(`<${$1.toLowerCase()}>`)>-1?$0:"")),before===after)return after}while(before!==after);return""}(String(value)))),Handlebars.registerHelper("enrichHTML",(html=>game.pf2e.TextEditor.enrichHTML(html))),Handlebars.registerHelper("json",(html=>JSON.stringify(html))),Handlebars.registerHelper("actionGlyph",((value,options)=>{const glyph=(0,util_1.getActionGlyph)(null!=value?value:"");return glyph?`<span class="activity-icon">${glyph}</span>`:(null==options?void 0:options.hash.fallback)?Handlebars.escapeExpression(value):null})),Handlebars.registerHelper("concat",(function(...params){return"object"==typeof params[params.length-1]&&params.pop(),params.join("")})),Handlebars.registerHelper("times",(function(count,block){const results=new Array;for(let i=0;i<count;i++)results.push(block.fn(i));return results.join("")})),Handlebars.registerHelper("developMode",(function(body){return""}))}},11669:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CanvasInit=void 0;const MonkeyPatch=__importStar(__webpack_require__(41019));exports.CanvasInit={listen:()=>{Hooks.on("canvasInit",(async canvas=>{SquareGrid.prototype.measureDistances=function(segments,options={}){if(!options.gridSpaces)return BaseGrid.prototype.measureDistances.call(this,segments,options);let nDiagonal=0;const d=canvas.dimensions;return segments.map((s=>{const r=s.ray,nx=Math.abs(Math.ceil(r.dx/d.size)),ny=Math.abs(Math.ceil(r.dy/d.size)),nd=Math.min(nx,ny),ns=Math.abs(ny-nx);nDiagonal+=nd;const nd10=Math.floor(nDiagonal/2)-Math.floor((nDiagonal-nd)/2);return(2*nd10+(nd-nd10)+ns)*canvas.dimensions.distance}))},MonkeyPatch.patchTokenClasses()}))}}},46851:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CanvasReady=void 0;const set_as_initiative_1=__webpack_require__(938);exports.CanvasReady={listen:()=>{Hooks.once("canvasReady",(async()=>{await game.pf2e.ConditionManager.init(),game.pf2e.StatusEffects.init();for(const li of $("#chat-log").children("li"))set_as_initiative_1.SetAsInitiative.listen($(li))})),Hooks.on("canvasReady",(()=>{var _a;if((null===(_a=game.user.getFlag("pf2e","settings.showEffectPanel"))||void 0===_a||_a)&&game.pf2e.effectPanel.render(!0),canvas.scene){const tokens=canvas.scene.tokens.map((tokenDoc=>tokenDoc.object));for(const token of tokens)token.redraw();canvas.darkvision.draw()}}))}}},82154:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CloseCombatTrackerConfig=void 0,exports.CloseCombatTrackerConfig={listen:()=>{Hooks.on("closeCombatTrackerConfig",(async(_app,$html)=>{const newIcon=String($html.find('input[name="deathIcon"]').val()).trim();newIcon&&newIcon!==game.settings.get("pf2e","deathIcon")&&await game.settings.set("pf2e","deathIcon",newIcon);const currentDeadAtZero=game.settings.get("pf2e","automation.actorsDeadAtZero"),newDeadAtZero=String($html.find('select[name="actorsDeadAtZero"]').val());currentDeadAtZero!==newDeadAtZero&&await game.settings.set("pf2e","automation.actorsDeadAtZero",newDeadAtZero)}))}}},45359:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CloseWorldClockSettings=void 0,exports.CloseWorldClockSettings={listen:()=>{Hooks.on("closeWorldClockSettings",(()=>{game.user.isGM&&game.socket.emit("system.pf2e",{request:"refreshSceneControls",data:{layer:"TokenLayer"}})}))}}},12535:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DropCanvasData=void 0;const base_1=__webpack_require__(11291);exports.DropCanvasData={listen:()=>{Hooks.on("dropCanvasData",(async(canvas,data)=>{const target=canvas.tokens.placeables.find((token=>{var _a,_b,_c,_d;const maximumX=null!==(_b=token.x+(null===(_a=token.hitArea)||void 0===_a?void 0:_a.right))&&void 0!==_b?_b:0,maximumY=null!==(_d=token.y+(null===(_c=token.hitArea)||void 0===_c?void 0:_c.bottom))&&void 0!==_d?_d:0;return data.x>=token.x&&data.y>=token.y&&data.x<=maximumX&&data.y<=maximumY})),actor=null==target?void 0:target.actor;return!actor||"Item"!==data.type||!!(["character","npc","loot","vehicle"].includes(actor.type)&&actor.sheet instanceof base_1.ActorSheetPF2e)&&(await actor.sheet.onDropItem(data),!0)}))}}},55291:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GetSceneControlButtons=void 0,exports.GetSceneControlButtons={listen:()=>{Hooks.on("getSceneControlButtons",(controls=>{var _a,_b;const tokenTools=null===(_a=controls.find((c=>"token"===c.name)))||void 0===_a?void 0:_a.tools;null==tokenTools||tokenTools.push({name:"worldclock",title:"CONTROLS.WorldClock",icon:"fas fa-clock",visible:game.settings.get("pf2e","worldClock.showClockButton")&&(game.user.isGM||game.settings.get("pf2e","worldClock.playersCanView")),onClick:()=>{game.pf2e.worldClock.rendered?game.pf2e.worldClock.close({force:!0}):game.pf2e.worldClock.render(!0)}});const lightingTools=null===(_b=controls.find((c=>"lighting"===c.name)))||void 0===_b?void 0:_b.tools,dayTool=null==lightingTools?void 0:lightingTools.find((tool=>"day"===tool.name));lightingTools&&dayTool&&lightingTools.splice(null==lightingTools?void 0:lightingTools.indexOf(dayTool),0,{name:"darkness-adjuster",title:"CONTROLS.AdjustSceneDarkness",icon:"fas fa-adjust",visible:game.user.isGM&&game.settings.get("pf2e","automation.rulesBasedVision")})}))}}},68339:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.HotbarDrop=void 0;const hotbar_1=__webpack_require__(22247),index_1=__webpack_require__(10843);exports.HotbarDrop={listen:()=>{Hooks.on("hotbarDrop",(async(_bar,data,slot)=>{const slotInt=Number(slot);let item;if("Item"===data.type&&data.id&&"string"==typeof data.id){const pack=data.pack,prefix=pack&&"string"==typeof pack?`Compendium.${pack}`:"Item";item=await fromUuid(`${prefix}.${data.id}`)}if(item instanceof index_1.EffectPF2e)(0,hotbar_1.createToggleEffectMacro)(data.pack,item,slotInt);else{if("Item"===data.type)return(0,hotbar_1.createItemMacro)(data.data,slotInt),!1;if("Action"===data.type)return(0,hotbar_1.createActionMacro)(data.index,data.actorId,slotInt),!1;"Skill"===data.type?(0,hotbar_1.createSkillMacro)(data.skill,data.skillName,data.actorId,slotInt):"Toggle"===data.type&&(0,hotbar_1.createTogglePropertyMacro)(data.property,data.label,data.actorId,slotInt)}return!0}))}}},57399:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.HooksPF2e=void 0;const canvas_init_1=__webpack_require__(11669),canvas_ready_1=__webpack_require__(46851),close_combat_tracker_config_1=__webpack_require__(82154),close_world_clock_settings_1=__webpack_require__(45359),drop_canvas_data_1=__webpack_require__(12535),get_scene_control_buttons_1=__webpack_require__(55291),hotbar_drop_1=__webpack_require__(68339),init_1=__webpack_require__(6318),lighting_refresh_1=__webpack_require__(68743),ready_1=__webpack_require__(41558),render_actor_directory_1=__webpack_require__(83671),render_combat_tracker_config_1=__webpack_require__(41471),render_dialog_1=__webpack_require__(11287),render_scene_controls_1=__webpack_require__(76100),render_settings_1=__webpack_require__(37870),setup_1=__webpack_require__(14869),update_world_time_1=__webpack_require__(98488);exports.HooksPF2e={listen(){const listeners=[canvas_init_1.CanvasInit,canvas_ready_1.CanvasReady,close_combat_tracker_config_1.CloseCombatTrackerConfig,close_world_clock_settings_1.CloseWorldClockSettings,drop_canvas_data_1.DropCanvasData,get_scene_control_buttons_1.GetSceneControlButtons,init_1.Init,hotbar_drop_1.HotbarDrop,lighting_refresh_1.LightingRefresh,ready_1.Ready,render_actor_directory_1.RenderActorDirectory,render_scene_controls_1.RenderSceneControls,render_combat_tracker_config_1.RenderCombatTrackerConfig,render_dialog_1.RenderDialog,render_settings_1.RenderSettings,setup_1.Setup,update_world_time_1.UpdateWorldTime];for(const Listener of listeners)Listener.listen()}}},6318:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Init=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),values_1=__webpack_require__(67189),active_effect_1=__webpack_require__(2680),fog_exploration_1=__webpack_require__(12462),canvas_1=__webpack_require__(85336),ui_1=__webpack_require__(8320),chat_message_1=__webpack_require__(40405),encounter_1=__webpack_require__(49938),folder_1=__webpack_require__(75064),handlebars_1=__webpack_require__(91105),macro_1=__webpack_require__(49151),scene_1=__webpack_require__(12789),sheet_1=__webpack_require__(77664),settings_1=__webpack_require__(93896),templates_1=__webpack_require__(20323),player_config_1=__webpack_require__(56815),config_1=__webpack_require__(51846),user_1=__webpack_require__(81781),sheet_2=__webpack_require__(46047);exports.Init={listen:()=>{Hooks.once("init",(()=>{var _a,_b,_c;console.log("PF2e System | Initializing Pathfinder 2nd Edition System"),CONFIG.PF2E=config_1.PF2ECONFIG,null!==(_a=(_c=CONFIG.debug).ruleElement)&&void 0!==_a||(_c.ruleElement=!1),CONFIG.Item.documentClass=_item_1.ItemPF2e,CONFIG.ActiveEffect.documentClass=active_effect_1.ActiveEffectPF2e,CONFIG.Actor.documentClass=_actor_1.ActorPF2e,CONFIG.ChatMessage.documentClass=chat_message_1.ChatMessagePF2e,CONFIG.Combat.documentClass=encounter_1.EncounterPF2e,CONFIG.Combatant.documentClass=encounter_1.CombatantPF2e,CONFIG.FogExploration.documentClass=fog_exploration_1.FogExplorationPF2e,CONFIG.Folder.documentClass=folder_1.FolderPF2e,CONFIG.JournalEntry.sheetClass=sheet_2.JournalSheetPF2e,CONFIG.Macro.documentClass=macro_1.MacroPF2e,CONFIG.Scene.documentClass=scene_1.ScenePF2e,CONFIG.Scene.sheetClass=sheet_1.SceneConfigPF2e,CONFIG.User.documentClass=user_1.UserPF2e,CONFIG.AmbientLight.documentClass=scene_1.AmbientLightDocumentPF2e,CONFIG.AmbientLight.layerClass=canvas_1.LightingLayerPF2e,CONFIG.AmbientLight.objectClass=canvas_1.AmbientLightPF2e,CONFIG.MeasuredTemplate.documentClass=scene_1.MeasuredTemplateDocumentPF2e,CONFIG.MeasuredTemplate.objectClass=canvas_1.MeasuredTemplatePF2e,CONFIG.Tile.documentClass=scene_1.TileDocumentPF2e,CONFIG.Token.documentClass=scene_1.TokenDocumentPF2e,CONFIG.Token.objectClass=canvas_1.TokenPF2e,CONFIG.Token.sheetClass=scene_1.TokenConfigPF2e,CONFIG.Canvas.layers.darkvision=canvas_1.DarkvisionLayerPF2e,CONFIG.Canvas.layers.lighting=canvas_1.LightingLayerPF2e,CONFIG.Canvas.layers.sight=canvas_1.SightLayerPF2e,CONFIG.Canvas.layers.templates=canvas_1.TemplateLayerPF2e,CONFIG.Canvas.lightLevels.dim=.25,CONFIG.Canvas.darknessColor=PIXI.utils.rgb2hex([.25,.25,.4]),CONFIG.Canvas.exploredColor=PIXI.utils.rgb2hex([.6,.6,.6]),CONFIG.time.roundTime=6,CONFIG.Combat.initiative.decimals=0,CONFIG.ui.combat=ui_1.EncounterTrackerPF2e,CONFIG.ui.chat=ui_1.ChatLogPF2e,CONFIG.ui.compendium=ui_1.CompendiumDirectoryPF2e,CONFIG.TinyMCE.extended_valid_elements="pf2-action[action|glyph]",CONFIG.TinyMCE.content_css=CONFIG.TinyMCE.content_css.concat("systems/pf2e/styles/main.css"),CONFIG.TinyMCE.style_formats=(null!==(_b=CONFIG.TinyMCE.style_formats)&&void 0!==_b?_b:[]).concat({title:"PF2E",items:[{title:"Icons A D T F R",inline:"span",classes:["pf2-icon"],wrapper:!0},{title:"Inline Header",block:"h4",classes:"inline-header"},{title:"Info Block",block:"section",classes:"info",wrapper:!0,exact:!0,merge_siblings:!1},{title:"Stat Block",block:"section",classes:"statblock",wrapper:!0,exact:!0,merge_siblings:!1},{title:"Trait",block:"section",classes:"traits",wrapper:!0},{title:"Written Note",block:"p",classes:"message"},{title:"GM Text Block",block:"div",wrapper:!0,attributes:{"data-visibility":"gm"}},{title:"GM Text Inline",inline:"span",attributes:{"data-visibility":"gm"}}]});const schema=foundry.data.TokenData.schema;schema.displayName.default=schema.displayBars.default=CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER,player_config_1.PlayerConfigPF2e.hookOnRenderSettings(),values_1.MystifiedTraits.compile(),(0,settings_1.registerSettings)(),(0,templates_1.loadPF2ETemplates)(),(0,handlebars_1.registerHandlebarsHelpers)()}))}}},68743:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LightingRefresh=void 0;const scene_darkness_adjuster_1=__webpack_require__(39940);exports.LightingRefresh={listen:()=>{Hooks.on("lightingRefresh",(()=>{const layer=canvas.lighting;layer.noRefreshHooks||scene_darkness_adjuster_1.SceneDarknessAdjuster.instance.onLightingRefresh(layer.darknessLevel)}))}}},41558:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Ready=void 0;const socket_1=__webpack_require__(33684),player_config_1=__webpack_require__(56815),prepare_minions_1=__webpack_require__(31565),runner_1=__webpack_require__(46842),migration_1=__webpack_require__(63051),actions_1=__webpack_require__(54022),set_world_schema_version_1=__webpack_require__(48569),world_clock_1=__webpack_require__(34665),compendium_browser_1=__webpack_require__(79472),dragstart_handler_1=__webpack_require__(61529),license_viewer_1=__webpack_require__(86513),migration_summary_1=__webpack_require__(96735),app_1=__webpack_require__(40851);exports.Ready={listen:()=>{Hooks.once("ready",(()=>{console.log("PF2e System | Readying Pathfinder 2nd Edition System"),console.debug("PF2e System | Build mode: production"),game.pf2e.compendiumBrowser=new compendium_browser_1.CompendiumBrowser,game.pf2e.licenseViewer=new license_viewer_1.LicenseViewer;const currentVersion=game.settings.get("pf2e","worldSchemaVersion");(0,set_world_schema_version_1.setWorldSchemaVersion)().then((async()=>{if(game.user.hasRole(CONST.USER_ROLES.GAMEMASTER)){const migrationRunner=new runner_1.MigrationRunner(migration_1.Migrations.constructFromVersion(currentVersion));migrationRunner.needsMigration()&&(currentVersion&&currentVersion<runner_1.MigrationRunner.MINIMUM_SAFE_VERSION&&ui.notifications.error("Your PF2E system data is from too old a Foundry version and cannot be reliably migrated to the latest version. The process will be attempted, but errors may occur.",{permanent:!0}),await migrationRunner.runMigration(),(new migration_summary_1.MigrationSummary).render(!0))}})),actions_1.ActionsPF2e.exposeActions(game.pf2e.actions),player_config_1.PlayerConfigPF2e.activateColorScheme(),(0,prepare_minions_1.prepareMinions)(),(0,socket_1.activateSocketListener)(),(0,dragstart_handler_1.extendDragData)(),game.pf2e.effectTracker.refresh(),game.pf2e.worldClock=new world_clock_1.WorldClock,game.system.entityTypes.Item.sort(((typeA,typeB)=>{var _a,_b;return game.i18n.localize(null!==(_a=CONFIG.Item.typeLabels[typeA])&&void 0!==_a?_a:"").localeCompare(game.i18n.localize(null!==(_b=CONFIG.Item.typeLabels[typeB])&&void 0!==_b?_b:""))})),game.pf2e.upwViewer=new app_1.UnitedPaizoWorkers,game.settings.get("pf2e","seenUnionAnnouncement")||game.settings.set("pf2e","seenUnionAnnouncement",!0).then((()=>{game.pf2e.upwViewer.render(!0)})),Hooks.callAll("pf2e.systemReady")}))}}},83671:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderActorDirectory=void 0,exports.RenderActorDirectory={listen:()=>{Hooks.on("renderActorDirectory",(async()=>{game.ready&&game.pf2e.compendiumBrowser.injectActorDirectory()}))}}},41471:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderCombatTrackerConfig=void 0,exports.RenderCombatTrackerConfig={listen:()=>{Hooks.on("renderCombatTrackerConfig",(async(app,$html)=>{$("#combat-config").css({height:""});const $formGroups=$html.find(".form-group"),$iconFormGroup=$formGroups.last().clone();$iconFormGroup.find("label").text(game.i18n.localize("PF2E.SETTINGS.DeathIcon.Name")),$iconFormGroup.find("p.notes").text(game.i18n.localize("PF2E.SETTINGS.DeathIcon.Hint"));const replacement=await renderTemplate("systems/pf2e/templates/system/ui/combat-tracker-config.html",{value:game.settings.get("pf2e","deathIcon")});$iconFormGroup.find("input").replaceWith(replacement);const $deadAtZeroFormGroup=$formGroups.first().clone();$deadAtZeroFormGroup.find("label").text(game.i18n.localize("PF2E.SETTINGS.Automation.ActorsDeadAtZero.Name")),$deadAtZeroFormGroup.find("p.notes").text(game.i18n.localize("PF2E.SETTINGS.Automation.ActorsDeadAtZero.Hint"));const options=["neither","npcsOnly"].map((value=>$("<option>").val(value).text(game.i18n.localize(CONFIG.PF2E.SETTINGS.automation.actorsDeadAtZero[value])).prop("outerHTML"))).join("");$deadAtZeroFormGroup.find("select").attr({name:"actorsDeadAtZero"}).html(options).val(game.settings.get("pf2e","automation.actorsDeadAtZero")),$formGroups.last().after($iconFormGroup,$deadAtZeroFormGroup),app.activateListeners($html)}))}}},11287:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderDialog=void 0;const inline_roll_links_1=__webpack_require__(27542);exports.RenderDialog={listen:()=>{Hooks.on("renderDialog",(dialog=>{inline_roll_links_1.InlineRollsLinks.listen(dialog.element)}))}}},76100:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderSceneControls=void 0;const scene_darkness_adjuster_1=__webpack_require__(39940);exports.RenderSceneControls={listen:()=>{Hooks.on("renderSceneControls",(controls=>{const adjuster=scene_darkness_adjuster_1.SceneDarknessAdjuster.instance;"darkness-adjuster"!==controls.activeTool||adjuster.rendered?"darkness-adjuster"!==controls.activeTool&&adjuster.rendered&&$("#darkness-adjuster").fadeOut((()=>{adjuster.close({force:!0})})):adjuster.render(!0,{scene:canvas.scene}).then((()=>{$("#darkness-adjuster").hide().fadeIn()}))}))}}},37870:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderSettings=void 0;const migration_summary_1=__webpack_require__(96735),_util_1=__webpack_require__(6945);exports.RenderSettings={listen:()=>{Hooks.on("renderSettings",(async(_app,$html)=>{const $systemRow=$html.find("#game-details > li.system"),$guideLog=$systemRow.clone().empty().removeClass("system").addClass("system-info"),links_guide={url:"https://gitlab.com/hooking/foundry-vtt---pathfinder-2e/-/wikis/Getting-Started-Guide/Getting-Started",label:game.i18n.localize("PF2E.SETTINGS.Sidebar.Guide")},links_changelog={url:"https://gitlab.com/hooking/foundry-vtt---pathfinder-2e/-/blob/release-0.8.x/CHANGELOG.md",label:game.i18n.localize("PF2E.SETTINGS.Sidebar.Changelog")},links_discord={url:"https://discord.gg/SajryVzCyf",label:game.i18n.localize("PF2E.SETTINGS.Sidebar.Discord")};$guideLog.append(`<a href="${links_guide.url}">${links_guide.label}</a>`,`<a href="${links_changelog.url}">${links_changelog.label}</a>`,`<a href="${links_discord.url}">${links_discord.label}</a>`),$systemRow.after($guideLog);const $license=$("<div>").attr({id:"pf2e-license"}),$licenseButton=$('<button type="button">').append((0,_util_1.fontAwesomeIcon)("balance-scale"),game.i18n.localize("PF2E.LicenseViewer.Label")).on("click",(()=>game.pf2e.licenseViewer.render(!0)));if($license.append($licenseButton),game.user.hasRole("GAMEMASTER")){const $troubleshooting=$("<div>").attr({id:"pf2e-troubleshooting"}),$shootButton=$('<button type="button">').append((0,_util_1.fontAwesomeIcon)("wrench"),game.i18n.localize("PF2E.Migrations.Troubleshooting")).on("click",(()=>new migration_summary_1.MigrationSummary({troubleshoot:!0}).render(!0)));$troubleshooting.append($shootButton),$("#settings-documentation").after("<h2>Pathfinder 2e</h2>",$license,$troubleshooting)}}))}}},14869:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Setup=void 0;const localize_1=__webpack_require__(41332),register_sheets_1=__webpack_require__(89714),xp_1=__webpack_require__(44706),travel_speed_sheet_1=__webpack_require__(20017),hotbar_1=__webpack_require__(22247),raise_a_shield_1=__webpack_require__(67590),rest_for_the_night_1=__webpack_require__(27397),steel_your_resolve_1=__webpack_require__(41233),encouraging_words_1=__webpack_require__(26325),earn_income_1=__webpack_require__(67184),dice_1=__webpack_require__(18235),modifiers_1=__webpack_require__(27324),rolls_1=__webpack_require__(87525),rules_1=__webpack_require__(40478),conditions_1=__webpack_require__(71881),status_effects_1=__webpack_require__(34191),effects_panel_1=__webpack_require__(78614),effect_tracker_1=__webpack_require__(42621),remigrate_1=__webpack_require__(59431),actor_importer_1=__webpack_require__(19330),homebrew_1=__webpack_require__(27608),text_editor_1=__webpack_require__(21047);exports.Setup={listen:()=>{Hooks.once("setup",(()=>{localize_1.LocalizePF2e.ready=!0,(0,register_sheets_1.registerSheets)(),Object.defineProperty(globalThis.game,"pf2e",{value:{}}),game.pf2e.actions={earnIncome:earn_income_1.earnIncome,raiseAShield:raise_a_shield_1.raiseAShield,restForTheNight:rest_for_the_night_1.restForTheNight,steelYourResolve:steel_your_resolve_1.steelYourResolve,encouragingWords:encouraging_words_1.encouragingWords},game.pf2e.importer={actor:actor_importer_1.ActorImporter},game.pf2e.rollItemMacro=hotbar_1.rollItemMacro,game.pf2e.rollActionMacro=hotbar_1.rollActionMacro,game.pf2e.gm={calculateXP:xp_1.calculateXP,launchTravelSheet:travel_speed_sheet_1.launchTravelSheet},game.pf2e.system={remigrate:remigrate_1.remigrate},game.pf2e.Dice=dice_1.DicePF2e,game.pf2e.StatusEffects=status_effects_1.StatusEffects,game.pf2e.ConditionManager=conditions_1.ConditionManager,game.pf2e.ModifierType=modifiers_1.MODIFIER_TYPE,game.pf2e.Modifier=modifiers_1.ModifierPF2e,game.pf2e.AbilityModifier=modifiers_1.AbilityModifier,game.pf2e.ProficiencyModifier=modifiers_1.ProficiencyModifier,game.pf2e.StatisticModifier=modifiers_1.StatisticModifier,game.pf2e.CheckModifier=modifiers_1.CheckModifier,game.pf2e.Check=rolls_1.CheckPF2e,game.pf2e.RuleElements=rules_1.RuleElements,game.pf2e.RuleElement=rules_1.RuleElementPF2e,game.pf2e.effectPanel=new effects_panel_1.EffectsPanel,game.pf2e.effectTracker=new effect_tracker_1.EffectTracker,CONFIG.controlIcons.defeated=game.settings.get("pf2e","deathIcon"),game.pf2e.StatusEffects.setIconTheme(),game.pf2e.TextEditor=text_editor_1.TextEditorPF2e;const homebrew=new homebrew_1.HomebrewElements;homebrew.refreshTags(),homebrew.registerModuleTags()}))}}},98488:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UpdateWorldTime=void 0,exports.UpdateWorldTime={listen:()=>{Hooks.on("updateWorldTime",(async(_total,diff)=>{game.pf2e.effectPanel.refresh(),await game.pf2e.effectTracker.refresh();const worldClock=game.pf2e.worldClock;setTimeout((()=>worldClock.render(!1)),1),await worldClock.animateDarkness(diff)}))}}},67184:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.earnIncome=exports.multiplyIncome=exports.getIncomeForLevel=void 0;const dc_1=__webpack_require__(84372),degree_of_success_1=__webpack_require__(7859);function buildRewards(...rewards){var _a,_b,_c;const[trained,expert,master,legendary]=rewards;return{trained,expert:null!=expert?expert:trained,master:null!==(_a=null!=master?master:expert)&&void 0!==_a?_a:trained,legendary:null!==(_c=null!==(_b=null!=legendary?legendary:master)&&void 0!==_b?_b:expert)&&void 0!==_c?_c:trained}}const earnIncomeTable={0:{failure:{cp:1},rewards:buildRewards({cp:5})},1:{failure:{cp:2},rewards:buildRewards({sp:2})},2:{failure:{cp:4},rewards:buildRewards({sp:3})},3:{failure:{cp:8},rewards:buildRewards({sp:5})},4:{failure:{sp:1},rewards:buildRewards({sp:7},{sp:8})},5:{failure:{sp:2},rewards:buildRewards({sp:9},{gp:1})},6:{failure:{sp:3},rewards:buildRewards({gp:1,sp:5},{gp:2})},7:{failure:{sp:4},rewards:buildRewards({gp:2},{gp:2,sp:5})},8:{failure:{sp:5},rewards:buildRewards({gp:2,sp:5},{gp:3})},9:{failure:{sp:6},rewards:buildRewards({gp:3},{gp:4})},10:{failure:{sp:7},rewards:buildRewards({gp:4},{gp:5},{gp:6})},11:{failure:{sp:8},rewards:buildRewards({gp:5},{gp:6},{gp:8})},12:{failure:{sp:9},rewards:buildRewards({gp:6},{gp:8},{gp:10})},13:{failure:{gp:1},rewards:buildRewards({gp:7},{gp:10},{gp:15})},14:{failure:{gp:1,sp:5},rewards:buildRewards({gp:8},{gp:15},{gp:20})},15:{failure:{gp:2},rewards:buildRewards({gp:10},{gp:20},{gp:28})},16:{failure:{gp:2,sp:5},rewards:buildRewards({gp:13},{gp:25},{gp:36},{gp:40})},17:{failure:{gp:3},rewards:buildRewards({gp:15},{gp:30},{gp:45},{gp:55})},18:{failure:{gp:4},rewards:buildRewards({gp:20},{gp:45},{gp:70},{gp:90})},19:{failure:{gp:6},rewards:buildRewards({gp:30},{gp:60},{gp:100},{gp:130})},20:{failure:{gp:8},rewards:buildRewards({gp:40},{gp:75},{gp:150},{gp:200})},21:{failure:{},rewards:buildRewards({gp:50},{gp:90},{gp:175},{gp:300})}};function getIncomeForLevel(level){return earnIncomeTable[Math.clamped(level,0,21)]}function multiplyIncome(income,factor){const result={};for(const[key,value]of Object.entries(income))result[key]=value*factor;return result}exports.getIncomeForLevel=getIncomeForLevel,exports.multiplyIncome=multiplyIncome,exports.earnIncome=function(level,days,roll,proficiency,earnIncomeOptions,dcOptions){const dc=(0,dc_1.calculateDC)(level,dcOptions),degreeOfSuccess=(0,degree_of_success_1.calculateDegreeOfSuccess)(roll,dc),result={rewards:{},degreeOfSuccess};return degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.CRITICAL_SUCCESS?result.rewards=getIncomeForLevel(level+1).rewards[proficiency]:degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.SUCCESS?result.rewards=getIncomeForLevel(level).rewards[proficiency]:degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.FAILURE&&(result.rewards=getIncomeForLevel(level).failure),function(result,earnIncomeOptions,level,proficiency){earnIncomeOptions.useLoreAsExperiencedProfessional&&(result.degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.CRITICAL_FAILURE?(result.degreeOfSuccess=degree_of_success_1.DegreeOfSuccess.FAILURE,result.rewards=getIncomeForLevel(level).failure):result.degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.FAILURE&&"trained"!==proficiency&&(result.rewards=multiplyIncome(result.rewards,2)))}(result,earnIncomeOptions,level,proficiency),{rewards:{perDay:result.rewards,combined:multiplyIncome(result.rewards,days)},degreeOfSuccess:result.degreeOfSuccess,daysSpentWorking:days,level,dc,roll:roll.modifier+roll.dieValue}}},26325:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.encouragingWords=void 0;const character_1=__webpack_require__(886),localize_1=__webpack_require__(41332);exports.encouragingWords=function(options){const translations=localize_1.LocalizePF2e.translations.PF2E.Actions.EncouragingWords,actors=Array.isArray(options.actors)?options.actors:[options.actors],actor=actors[0];if(actors.length>1||!(actor instanceof character_1.CharacterPF2e))return void ui.notifications.error(translations.BadArgs);const encouragingWordsMacro=async(DC,bonus,dip)=>{const options=actor.getRollOptions(["all","skill-check","diplomacy"]);options.push(translations.Title),options.push("action:encourage-words");const dc={value:DC};dip.roll({dc,options,callback:roll=>{let healFormula,successLabel;const bonusString=bonus>0?`+ ${bonus}`:"";if(3===roll.data.degreeOfSuccess?(healFormula=`2d8${bonusString}`,successLabel=translations.CritSuccess):2===roll.data.degreeOfSuccess?(healFormula=`1d8${bonusString}`,successLabel=translations.Success):1===roll.data.degreeOfSuccess?successLabel=translations.Failure:0===roll.data.degreeOfSuccess&&(healFormula="1d8",successLabel=translations.CritFailure),void 0!==healFormula){const healRoll=new Roll(healFormula).roll(),rollType=roll.data.degreeOfSuccess>1?translations.Recovery:translations.Damage;ChatMessage.create({user:game.user.id,type:CONST.CHAT_MESSAGE_TYPES.ROLL,flavor:`<strong>${rollType} ${translations.Title}</strong> (${successLabel})`,roll:healRoll,speaker:ChatMessage.getSpeaker()})}}})},applyChanges=$html=>{if(void 0===actor)ui.notifications.warn(translations.BadArgs);else{const{dip}=actor.data.data.skills,{name}=actor,mod=Number($html.find('[name="modifier"]').val())||0,requestedProf=Number($html.find('[name="dc-type"]').val())||1;let usedProf=0;usedProf=requestedProf<=dip.rank?requestedProf:dip.rank;(0,[()=>ui.notifications.warn(game.i18n.format(translations.NotTrained,{name})),()=>encouragingWordsMacro(15+mod,0,dip),()=>encouragingWordsMacro(20+mod,5,dip),()=>encouragingWordsMacro(30+mod,15,dip),()=>encouragingWordsMacro(40+mod,25,dip)][usedProf])()}};if(void 0===actor)ui.notifications.warn(translations.BadArgs);else{new Dialog({title:translations.Title,content:`\n\t<div>${translations.ContentMain}</div>\n\t<hr/>\n\t<form>\n\t<div class="form-group">\n\t<label>${translations.ContentLabel1}</label>\n\t<select id="dc-type" name="dc-type">\n\t<option value="1">${translations.ContentOption1}</option>\n\t<option value="2">${translations.ContentOption2}</option>\n\t<option value="3">${translations.ContentOption3}</option>\n\t<option value="4">${translations.ContentOption4}</option>\n\t</select>\n\t</div>\n\t</form>\n\t<form>\n\t<div class="form-group">\n\t<label>${translations.ContentLabel2}</label>\n\t<input id="modifier" name="modifier" type="number"/>\n\t</div>\n\t</form>\n\t`,buttons:{yes:{icon:'<i class="fas fa-hand-holding-dipical"></i>',label:translations.Title,callback:applyChanges},no:{icon:'<i class="fas fa-times"></i>',label:translations.Cancel}},default:"yes"}).render(!0)}}},22247:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createToggleEffectMacro=exports.createTogglePropertyMacro=exports.createSkillMacro=exports.rollActionMacro=exports.createActionMacro=exports.rollItemMacro=exports.createItemMacro=void 0;const macro_1=__webpack_require__(49151),chat_message_1=__webpack_require__(40405),values_1=__webpack_require__(35089);exports.createItemMacro=async function(item,slot){var _a;const command=`game.pf2e.rollItemMacro("${item._id}");`,macro=null!==(_a=game.macros.find((macro=>macro.name===item.name&&macro.data.command===command)))&&void 0!==_a?_a:await macro_1.MacroPF2e.create({command,name:item.name,type:"script",img:item.img,flags:{"pf2e.itemMacro":!0}},{renderSheet:!1});game.user.assignHotbarMacro(null!=macro?macro:null,slot)},exports.rollItemMacro=function(itemId){var _a,_b,_c,_d,_e;const speaker=ChatMessage.getSpeaker(),actor=null!==(_c=null===(_b=canvas.tokens.get(null!==(_a=speaker.token)&&void 0!==_a?_a:""))||void 0===_b?void 0:_b.actor)&&void 0!==_c?_c:game.actors.get(null!==(_d=speaker.actor)&&void 0!==_d?_d:""),item=null===(_e=null==actor?void 0:actor.items)||void 0===_e?void 0:_e.get(itemId);return item?item.toChat():ui.notifications.warn(`Your controlled Actor does not have an item with ID ${itemId}`)},exports.createActionMacro=async function(actionIndex,actorId,slot){var _a;const action=game.actors.get(actorId).data.data.actions[actionIndex],macroName=`${game.i18n.localize("PF2E.WeaponStrikeLabel")}: ${action.name}`,command=`game.pf2e.rollActionMacro('${actorId}', ${actionIndex}, ${JSON.stringify(action.name)})`,actionMacro=null!==(_a=game.macros.find((macro=>macro.name===macroName&&macro.data.command===command)))&&void 0!==_a?_a:await macro_1.MacroPF2e.create({command,name:macroName,type:"script",img:action.imageUrl,flags:{"pf2e.actionMacro":!0}},{renderSheet:!1});game.user.assignHotbarMacro(null!=actionMacro?actionMacro:null,slot)},exports.rollActionMacro=async function(actorId,actionIndex,actionName){var _a;const actor=game.actors.get(actorId);if(actor){const action=actor.data.data.actions[actionIndex];if(action&&action.name===actionName){if("strike"===action.type){const templateData={actor,strike:action,strikeIndex:actionIndex,strikeDescription:game.pf2e.TextEditor.enrichHTML(game.i18n.localize(action.description))},messageContent=await renderTemplate("systems/pf2e/templates/chat/strike-card.html",templateData),chatData={user:game.user.id,speaker:{actor:actor.id,token:null===(_a=actor.token)||void 0===_a?void 0:_a.id,alias:actor.name},content:messageContent,type:CONST.CHAT_MESSAGE_TYPES.OTHER,flags:{core:{canPopout:!0}}},rollMode=game.settings.get("core","rollMode");["gmroll","blindroll"].includes(rollMode)&&(chatData.whisper=ChatMessage.getWhisperRecipients("GM").map((u=>u.id))),"blindroll"===rollMode&&(chatData.blind=!0),chat_message_1.ChatMessagePF2e.create(chatData)}}else ui.notifications.error(game.i18n.localize("PF2E.MacroActionNoActionError"))}else ui.notifications.error(game.i18n.localize("PF2E.MacroActionNoActorError"))},exports.createSkillMacro=async function(skill,skillName,actorId,slot){var _a,_b;const command=`\nconst a = game.actors.get('${actorId}');\nif (a) {\n    const opts = a.getRollOptions(['all', 'skill-check', '${null!==(_a=values_1.SKILL_DICTIONARY[skill])&&void 0!==_a?_a:skill}']);\n    a.data.data.skills['${skill}']?.roll(event, opts);\n} else {\n    ui.notifications.error(game.i18n.localize('PF2E.MacroActionNoActorError'));\n}`,macroName=game.i18n.format("PF2E.SkillCheckWithName",{skillName}),skillMacro=null!==(_b=game.macros.find((macro=>macro.name===macroName&&macro.data.command===command)))&&void 0!==_b?_b:await macro_1.MacroPF2e.create({command,name:macroName,type:"script",img:"icons/svg/d20-grey.svg",flags:{"pf2e.skillMacro":!0}},{renderSheet:!1});game.user.assignHotbarMacro(null!=skillMacro?skillMacro:null,slot)},exports.createTogglePropertyMacro=async function(property,label,actorId,slot){var _a;const command=`const a = game.actors.get('${actorId}');\nif (a) {\n    const value = getProperty(a, 'data.${property}');\n    a.update({'${property}': !value});\n} else {\n    ui.notifications.error(game.i18n.localize('PF2E.MacroActionNoActorError'));\n}`,macroName=game.i18n.format("PF2E.ToggleWithName",{property:label}),toggleMacro=null!==(_a=game.macros.find((macro=>macro.name===macroName&&macro.data.command===command)))&&void 0!==_a?_a:await macro_1.MacroPF2e.create({command,name:macroName,type:"script",img:"icons/svg/d20-grey.svg",flags:{"pf2e.skillMacro":!0}},{renderSheet:!1});game.user.assignHotbarMacro(null!=toggleMacro?toggleMacro:null,slot)},exports.createToggleEffectMacro=async function(pack,effect,slot){var _a;const command=`\nconst actors = canvas.tokens.controlled.flatMap((token) => token.actor ?? []);\nif (!actors.length && game.user.character) {\n    actors.push(game.user.character);\n}\nconst ITEM_UUID = '${pack?`Compendium.${pack}`:"Item"}.${effect.id}'; // ${effect.data.name}\nconst source = (await fromUuid(ITEM_UUID)).toObject();\nsource.flags.core ??= {};\nsource.flags.core.sourceId = ITEM_UUID;\nfor await (const actor of actors) {\n    const existing = actor.itemTypes.effect.find((effect) => effect.getFlag('core', 'sourceId') === ITEM_UUID);\n    if (existing) {\n        await existing.delete();\n    } else {\n        await actor.createEmbeddedDocuments('Item', [source]);\n    }\n}\n`,toggleMacro=null!==(_a=game.macros.contents.find((macro=>macro.name===effect.data.name&&macro.data.command===command)))&&void 0!==_a?_a:await macro_1.MacroPF2e.create({command,name:effect.data.name,type:"script",img:effect.data.img},{renderSheet:!1});game.user.assignHotbarMacro(null!=toggleMacro?toggleMacro:null,slot)}},67590:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.raiseAShield=void 0;const character_1=__webpack_require__(886),npc_1=__webpack_require__(78382),effect_1=__webpack_require__(57785),chat_message_1=__webpack_require__(40405),_util_1=__webpack_require__(6945),localize_1=__webpack_require__(41332),ITEM_UUID="Compendium.pf2e.equipment-effects.2YgXoHvJfrDHucMr",TEMPLATES_flavor="./systems/pf2e/templates/chat/action/flavor.html",TEMPLATES_content="./systems/pf2e/templates/chat/action/content.html";exports.raiseAShield=async function(options){var _a,_b;const translations=localize_1.LocalizePF2e.translations.PF2E.Actions.RaiseAShield,actors=Array.isArray(options.actors)?options.actors:[options.actors],actor=actors[0];if(actors.length>1||!(actor instanceof character_1.CharacterPF2e||actor instanceof npc_1.NPCPF2e))return void ui.notifications.error(translations.BadArgs);const shield=actor.heldShield,speaker=chat_message_1.ChatMessagePF2e.getSpeaker({actor});if(await(async()=>{const existingEffect=actor.itemTypes.effect.find((effect=>effect.getFlag("core","sourceId")===ITEM_UUID));if(existingEffect)return await existingEffect.delete(),!1;if(!1===(null==shield?void 0:shield.isBroken)){const effect=await fromUuid(ITEM_UUID);if(!(effect instanceof effect_1.EffectPF2e))throw(0,_util_1.ErrorPF2e)("Raise a Shield effect not found");const effectSource=effect.toObject();effectSource.img=shield.img;return effectSource.data.rules.find((rule=>"ac"===rule.selector&&["PF2E.RuleElement.FlatModifier","FlatModifier"].includes(rule.key))).value=shield.acBonus,await actor.createEmbeddedDocuments("Item",[effectSource]),!0}return(null==shield?void 0:shield.isBroken)?(ui.notifications.warn(game.i18n.format(translations.ShieldIsBroken,{actor:speaker.alias,shield:shield.name})),!1):(ui.notifications.warn(game.i18n.format(translations.NoShieldEquipped,{actor:speaker.alias})),!1)})()){const combatActor=(null===(_a=game.combat)||void 0===_a?void 0:_a.active)&&(null===(_b=game.combat.combatant)||void 0===_b?void 0:_b.actor)||null,[actionType,glyph]=combatActor&&combatActor!==actor?["Reaction","R"]:["SingleAction","1"],title=translations[`${actionType}Title`],content=await renderTemplate(TEMPLATES_content,{imgPath:shield.img,message:game.i18n.format(translations.Content,{actor:speaker.alias})}),flavor=await renderTemplate(TEMPLATES_flavor,{action:{title,typeNumber:glyph}});await chat_message_1.ChatMessagePF2e.create({type:CONST.CHAT_MESSAGE_TYPES.EMOTE,speaker,flavor,content})}}},27397:function(__unused_webpack_module,exports){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.restForTheNight=void 0,exports.restForTheNight=async function(options){var e_1,_a,_b,_c,_d;const actors=Array.isArray(options.actors)?options.actors:[options.actors],characters=actors.filter((actor=>"character"===(null==actor?void 0:actor.data.type)));if(0!==actors.length){if(await Dialog.confirm({title:"Rest",content:"<p>Rest for the night?</p>",defaultYes:!0}))for(const actor of characters){const abilities=actor.data.data.abilities,attributes=actor.attributes,reagents=actor.data.data.resources.crafting.infusedReagents,conModifier=abilities.con.mod,level=actor.level,maxRestored=Math.max(conModifier,1)*level*actor.hitPoints.recoveryMultiplier,hpLost=attributes.hp.max-attributes.hp.value,hpRestored=hpLost>=maxRestored?maxRestored:hpLost;attributes.hp.value+=hpRestored;const RECOVERABLE_CONDITIONS=["doomed","drained","fatigued"],conditionChanges={doomed:null,drained:null,fatigued:null};actor.hasCondition("fatigued")&&(actor.decreaseCondition("fatigued"),conditionChanges.fatigued="removed");try{for(var _f,_e=(e_1=void 0,__asyncValues(["doomed","drained"]));!(_f=await _e.next()).done;){const slug=_f.value,condition=actor.getCondition(slug);if(!condition)continue;const newValue=(null!==(_b=condition.value)&&void 0!==_b?_b:1)-1;await actor.decreaseCondition(slug),conditionChanges[slug]=0===newValue?"removed":"reduced"}}catch(e_1_1){e_1={error:e_1_1}}finally{try{_f&&!_f.done&&(_a=_e.return)&&await _a.call(_e)}finally{if(e_1)throw e_1.error}}const updateData=actor.itemTypes.consumable.filter((item=>"wand"===item.consumableType&&item.charges.current<item.charges.max)).map((wand=>({_id:wand.id,"data.charges.value":1}))),wandRecharged=updateData.length>0,restoreReagents=(null==reagents?void 0:reagents.max)&&reagents.value<reagents.max;reagents&&restoreReagents&&(reagents.value=reagents.max,actor.update({"data.resources.crafting.infusedReagents.value":reagents.value}));const actorName=null!==(_d=null===(_c=actor.getActiveTokens()[0])||void 0===_c?void 0:_c.name)&&void 0!==_d?_d:actor.name,messages=[`${actorName} awakens well-rested.`],spellcastingRecharge=actor.spellcasting.recharge();updateData.push(...spellcastingRecharge.itemUpdates);const restoredList=[];if(!!game.settings.get("pf2e","staminaVariant")){const stamina=attributes.sp;stamina.value<stamina.max&&(stamina.value=stamina.max,restoredList.push("Stamina"));const resolve=attributes.resolve;resolve.value<resolve.max&&(resolve.value=resolve.max,restoredList.push("Resolve"))}(hpRestored>0||restoredList.length>0||spellcastingRecharge.actorUpdates)&&actor.update(Object.assign({"data.attributes":attributes},spellcastingRecharge.actorUpdates)),updateData.length>0&&actor.updateEmbeddedDocuments("Item",updateData);const temporaryItems=actor.physicalItems.filter((item=>item.data.isTemporary));temporaryItems.length&&temporaryItems.forEach((async item=>await item.delete())),hpRestored>0&&messages.push(`${hpRestored} hit points restored.`),wandRecharged&&messages.push("Wands recharged."),spellcastingRecharge.actorUpdates&&messages.push("Focus points restored."),spellcastingRecharge.itemUpdates.length&&messages.push("All spell slots restored."),restoreReagents&&messages.push("Infused Reagents restored."),temporaryItems.length&&messages.push("Temporary items removed.");const restoredString=0===restoredList.length?"":1===restoredList.length?`${restoredList[0]}`:2===restoredList.length?`${restoredList.join(" and ")}`:`${restoredList.slice(0,-1).join(", ")}, and ${restoredList.slice(-1)[0]}`;messages.push(restoredList.length>0?`${restoredString} fully restored.`:null);const removedConditions=RECOVERABLE_CONDITIONS.filter((key=>"removed"===conditionChanges[key])).map((key=>key.capitalize())),removedString=0===removedConditions.length?"":1===removedConditions.length?`${removedConditions[0]}`:2===removedConditions.length?`${removedConditions.join(" or ")}`:`${restoredList.slice(0,-1).join(", ")}, or ${restoredList.slice(-1)[0]}`;messages.push(removedConditions.length>0?`No longer ${removedString}.`:null);const reducedConditions=RECOVERABLE_CONDITIONS.filter((key=>"reduced"===conditionChanges[key])).map((key=>key.capitalize())),reducedString=0===reducedConditions.length?"":1===reducedConditions.length?`${reducedConditions[0]} condition`:`${reducedConditions.join(" and ")} conditions`;return messages.push(reducedConditions.length>0?`${reducedString} reduced by 1.`:null),ChatMessage.create({user:game.user.id,content:messages.join(" "),speaker:{alias:actorName}})}}else ui.notifications.warn("Select at least one token representing a character.")}},41233:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.steelYourResolve=void 0;const character_1=__webpack_require__(886),localize_1=__webpack_require__(41332);exports.steelYourResolve=function(options){const translations=localize_1.LocalizePF2e.translations.PF2E.Actions.SteelYourResolve,actors=Array.isArray(options.actors)?options.actors:[options.actors],actor=actors[0];if(actors.length>1||!(actor instanceof character_1.CharacterPF2e))return void ui.notifications.error(translations.BadArgs);const toChat=(alias,content)=>{ChatMessage.create({user:game.user.id,content,speaker:{alias}})},title=translations.Title,content=translations.Content;game.settings.get("pf2e","staminaVariant")?Dialog.confirm({title,content,yes:()=>{const{resolve,sp}=actor.data.data.attributes,spRatio=`${sp.value}/${sp.max}`,recoverStamina=game.i18n.format(translations.RecoverStamina,{name:actor.name,ratio:spRatio}),noStamina=game.i18n.format(translations.NoStamina,{name:actor.name});if(resolve.value>0){toChat(actor.name,recoverStamina);const newSP=sp.value+Math.floor(sp.max/2);actor.update({"data.attributes.sp.value":Math.min(newSP,sp.max),"data.attributes.resolve.value":resolve.value-1})}else toChat(actor.name,noStamina)},defaultYes:!0}):ui.notifications.error(translations.StaminaNotEnabled)}},20017:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.launchTravelSheet=void 0;const travel_speed_1=__webpack_require__(5595),_util_1=__webpack_require__(6945);class TravelSpeedSheet extends FormApplication{constructor(){super(...arguments),this.formData=void 0}static get defaultOptions(){const options=super.defaultOptions;return options.id="travel-duration",options.classes=["travel-duration"],options.title=game.i18n.localize("PF2E.TravelSpeed.Title"),options.template="systems/pf2e/templates/gm/travel/travel-speed-sheet.html",options.width="auto",options.submitOnChange=!0,options.closeOnSubmit=!1,options}async _updateObject(_event,formData){const data=expandObject(formData);data.actors=function(data){return Object.entries(data).sort((([a],[b])=>parseInt(a)-parseInt(b))).map((([_,a])=>a))}(data.actors),this.formData=data,this.render(!0)}actorFormToSheetData(actor,data){return{requiresDetectionMode:"Search"===data.explorationActivity||"DetectMagic"===data.explorationActivity,detectionMode:data.detectionMode,explorationActivity:data.explorationActivity,explorationSpeed:parseFloat((0,travel_speed_1.calculateNormalizedCharacterSpeed)(data.speed,parseExplorationActivity(data.explorationActivity),parseDetectionModeData(data.detectionMode),parseExplorationOptions(actor)).toFixed(2)),speed:data.speed,name:actor.name}}getInitialActorData(actor){return this.actorFormToSheetData(actor,{detectionMode:"before",explorationActivity:"Search",speed:actor.data.data.attributes.speed.total})}formToSheetData(actors,data){const journey=[{terrainSlowdown:{difficult:data.difficultTerrainSlowdown,greaterDifficult:data.greaterDifficultTerrainSlowdown,normal:data.normalTerrainSlowdown},terrain:parseTerrainData(data.terrain),distance:{value:data.distance,unit:parseDistanceUnit(data.distanceUnit)}}],actorFormData=(0,_util_1.zip)(actors,data.actors,((actor,actorData)=>this.actorFormToSheetData(actor,actorData))),partySpeedInFeet=Math.min(...actorFormData.map((data=>data.explorationSpeed))),velocity=(0,travel_speed_1.speedToVelocity)(partySpeedInFeet);return{travelDuration:(0,travel_speed_1.calculateTravelDuration)({journey,hoursPerDay:data.hoursPerDay,velocity,hustleDurationInMinutes:data.hustleMinutes}),distance:data.distance,actors:actorFormData,normalTerrainSlowdown:data.normalTerrainSlowdown,difficultTerrainSlowdown:data.difficultTerrainSlowdown,greaterDifficultTerrainSlowdown:data.greaterDifficultTerrainSlowdown,distanceUnit:data.distanceUnit,terrain:data.terrain,partySpeedInFeet,hustleMinutes:data.hustleMinutes,hoursPerDay:data.hoursPerDay}}getInitialFormData(actors){return this.formToSheetData(actors,{actors:actors.map((actor=>this.getInitialActorData(actor))),terrain:"normal",distanceUnit:"miles",normalTerrainSlowdown:{denominator:1,numerator:1},difficultTerrainSlowdown:{denominator:1,numerator:2},greaterDifficultTerrainSlowdown:{denominator:1,numerator:3},distance:1,hustleMinutes:getHustleMinutes(actors),hoursPerDay:8})}getData(){const sheetData=super.getData();let data;return data=void 0===this.formData?this.getInitialFormData(this.options.actors):this.formToSheetData(this.options.actors,this.formData),Object.assign(sheetData,data),sheetData}}function parseDistanceUnit(unit){return"feet"===unit?travel_speed_1.LengthUnit.FEET:travel_speed_1.LengthUnit.MILES}function parseTerrainData(terrain){return"normal"===terrain?travel_speed_1.Terrain.NORMAL:"difficult"===terrain?travel_speed_1.Terrain.DIFFICULT:travel_speed_1.Terrain.GREATER_DIFFICULT}function parseDetectionModeData(detectionMode){return"none"===detectionMode?travel_speed_1.DetectionMode.NONE:"before"===detectionMode?travel_speed_1.DetectionMode.DETECT_BEFORE_WALKING_INTO_IT:travel_speed_1.DetectionMode.DETECT_EVERYTHING}function parseExplorationActivity(activity){return"AvoidNotice"===activity?travel_speed_1.ExplorationActivities.AVOID_NOTICE:"Defend"===activity?travel_speed_1.ExplorationActivities.DEFEND:"DetectMagic"===activity?travel_speed_1.ExplorationActivities.DETECT_MAGIC:"Scout"===activity?travel_speed_1.ExplorationActivities.SCOUT:"Search"===activity?travel_speed_1.ExplorationActivities.SEARCH:"None"===activity?travel_speed_1.ExplorationActivities.NONE:travel_speed_1.ExplorationActivities.HALF_SPEED}function getHustleMinutes(actors){return Math.min(...actors.map((actor=>10*Math.max(1,actor.data.data.abilities.con.mod))))}function hasFeat(actor,slug){return actor.itemTypes.feat.some((feat=>feat.slug===slug))}function parseExplorationOptions(actor){return{practicedDefender:hasFeat(actor,"practiced-defender"),swiftSneak:hasFeat(actor,"swift-sneak"),legendarySneak:hasFeat(actor,"legendary-sneak"),expeditiousSearch:hasFeat(actor,"expeditious-search"),expeditiousSearchLegendary:hasFeat(actor,"expeditious-search")&&4===actor.attributes.perception.rank}}exports.launchTravelSheet=function(actors){new TravelSpeedSheet({},{actors}).render(!0)}},5595:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateTravelDuration=exports.Terrain=exports.speedToVelocity=exports.TimeUnit=exports.LengthUnit=exports.calculateNormalizedCharacterSpeed=exports.DetectionMode=exports.ExplorationActivities=void 0;const _util_1=__webpack_require__(6945);var ExplorationActivities,DetectionMode,LengthUnit;!function(ExplorationActivities){ExplorationActivities[ExplorationActivities.NONE=0]="NONE",ExplorationActivities[ExplorationActivities.HALF_SPEED=1]="HALF_SPEED",ExplorationActivities[ExplorationActivities.AVOID_NOTICE=2]="AVOID_NOTICE",ExplorationActivities[ExplorationActivities.DEFEND=3]="DEFEND",ExplorationActivities[ExplorationActivities.DETECT_MAGIC=4]="DETECT_MAGIC",ExplorationActivities[ExplorationActivities.SCOUT=5]="SCOUT",ExplorationActivities[ExplorationActivities.SEARCH=6]="SEARCH"}(ExplorationActivities=exports.ExplorationActivities||(exports.ExplorationActivities={})),function(DetectionMode){DetectionMode[DetectionMode.NONE=0]="NONE",DetectionMode[DetectionMode.DETECT_EVERYTHING=1]="DETECT_EVERYTHING",DetectionMode[DetectionMode.DETECT_BEFORE_WALKING_INTO_IT=2]="DETECT_BEFORE_WALKING_INTO_IT"}(DetectionMode=exports.DetectionMode||(exports.DetectionMode={})),exports.calculateNormalizedCharacterSpeed=function(defaultSpeedInFeet,activity,detectionMode,explorationOptions){return Math.max(5,function(defaultSpeedInFeet,activity,detectionMode,explorationOptions){const halvedSpeed=defaultSpeedInFeet/2;if(function(activity,explorationOptions){return activity===ExplorationActivities.AVOID_NOTICE&&(explorationOptions.legendarySneak||explorationOptions.swiftSneak)}(activity,explorationOptions)||function(activity,explorationOptions){return activity===ExplorationActivities.DEFEND&&explorationOptions.practicedDefender}(activity,explorationOptions))return defaultSpeedInFeet;if(activity===ExplorationActivities.SEARCH){let searchSpeedFactor=1;return explorationOptions.expeditiousSearchLegendary?searchSpeedFactor=4:explorationOptions.expeditiousSearch&&(searchSpeedFactor=2),detectionMode===DetectionMode.DETECT_EVERYTHING?Math.min(halvedSpeed,30*searchSpeedFactor):detectionMode===DetectionMode.DETECT_BEFORE_WALKING_INTO_IT?Math.min(halvedSpeed,15*searchSpeedFactor):halvedSpeed}return activity===ExplorationActivities.DETECT_MAGIC?detectionMode===DetectionMode.DETECT_EVERYTHING?Math.min(halvedSpeed,30):detectionMode===DetectionMode.DETECT_BEFORE_WALKING_INTO_IT?Math.min(halvedSpeed,15):halvedSpeed:activity===ExplorationActivities.NONE?defaultSpeedInFeet:halvedSpeed}(defaultSpeedInFeet,activity,detectionMode,explorationOptions))},function(LengthUnit){LengthUnit[LengthUnit.MILES=0]="MILES",LengthUnit[LengthUnit.FEET=1]="FEET"}(LengthUnit=exports.LengthUnit||(exports.LengthUnit={}));function toFeet(distance){return distance.unit===LengthUnit.MILES?6e3*distance.value:distance.value}var TimeUnit,Terrain;function toFeetPerMinute(velocity){return velocity.time===TimeUnit.MINUTE?toFeet(velocity.distance):toFeetPerMinute({distance:{unit:velocity.distance.unit,value:velocity.distance.value/60},time:TimeUnit.MINUTE})}function increaseDistanceByTerrain(trip){const feet=toFeet(trip.distance);return trip.terrain===Terrain.DIFFICULT?feet*trip.terrainSlowdown.difficult.numerator/trip.terrainSlowdown.difficult.denominator:trip.terrain===Terrain.GREATER_DIFFICULT?feet*trip.terrainSlowdown.greaterDifficult.numerator/trip.terrainSlowdown.greaterDifficult.denominator:feet*trip.terrainSlowdown.normal.numerator/trip.terrainSlowdown.normal.denominator}!function(TimeUnit){TimeUnit[TimeUnit.MINUTE=0]="MINUTE",TimeUnit[TimeUnit.HOUR=1]="HOUR"}(TimeUnit=exports.TimeUnit||(exports.TimeUnit={})),exports.speedToVelocity=function(speedInFeet){return{distance:{unit:LengthUnit.FEET,value:10*speedInFeet},time:TimeUnit.MINUTE}},function(Terrain){Terrain[Terrain.NORMAL=0]="NORMAL",Terrain[Terrain.DIFFICULT=1]="DIFFICULT",Terrain[Terrain.GREATER_DIFFICULT=2]="GREATER_DIFFICULT"}(Terrain=exports.Terrain||(exports.Terrain={}));exports.calculateTravelDuration=function({journey,velocity,hustleDurationInMinutes=0,hoursPerDay=8}){return function({distanceInFeet,feetPerMinute,hustleDurationInMinutes,hoursPerDay=8}){const minutesPerDay=60*hoursPerDay,minutesPerWeek=7*minutesPerDay,hustleDuration=Math.min(hustleDurationInMinutes,minutesPerDay),averageSpeed=(2*feetPerMinute*hustleDuration+feetPerMinute*(minutesPerDay-hustleDuration))/minutesPerDay,totalMinutes=Math.round(distanceInFeet/averageSpeed),weeks=Math.floor(totalMinutes/minutesPerWeek),days=Math.floor((totalMinutes-weeks*minutesPerWeek)/minutesPerDay),remainingMinutesMovingAtDoubleSpeed=(distanceInFeet-weeks*minutesPerWeek*averageSpeed-days*minutesPerDay*averageSpeed)/(2*feetPerMinute),remainingMinutesSpentHustling=Math.min(remainingMinutesMovingAtDoubleSpeed,hustleDurationInMinutes)+2*Math.max(0,remainingMinutesMovingAtDoubleSpeed-hustleDurationInMinutes),hours=Math.floor(remainingMinutesSpentHustling/60);return{weeks,days,hours,minutes:Math.round(remainingMinutesSpentHustling-60*hours)}}({distanceInFeet:(0,_util_1.sum)(journey.map(increaseDistanceByTerrain)),feetPerMinute:toFeetPerMinute(velocity),hustleDurationInMinutes,hoursPerDay})}},44706:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateXP=void 0;const xpVariantCreatureDifferences=new Map;xpVariantCreatureDifferences.set(-7,9),xpVariantCreatureDifferences.set(-6,12),xpVariantCreatureDifferences.set(-5,14),xpVariantCreatureDifferences.set(-4,18),xpVariantCreatureDifferences.set(-3,21),xpVariantCreatureDifferences.set(-2,26),xpVariantCreatureDifferences.set(-1,32),xpVariantCreatureDifferences.set(0,40),xpVariantCreatureDifferences.set(1,48),xpVariantCreatureDifferences.set(2,60),xpVariantCreatureDifferences.set(3,72),xpVariantCreatureDifferences.set(4,90),xpVariantCreatureDifferences.set(5,108),xpVariantCreatureDifferences.set(6,135),xpVariantCreatureDifferences.set(7,160);const xpCreatureDifferences=new Map;xpCreatureDifferences.set(-4,10),xpCreatureDifferences.set(-3,15),xpCreatureDifferences.set(-2,20),xpCreatureDifferences.set(-1,30),xpCreatureDifferences.set(0,40),xpCreatureDifferences.set(1,60),xpCreatureDifferences.set(2,80),xpCreatureDifferences.set(3,120),xpCreatureDifferences.set(4,160);const xpSimpleHazardDifferences=new Map;function getXPFromMap(partyLevel,entityLevel,values){var _a;const difference=entityLevel+1-(partyLevel+1),range=Math.floor(values.size/2),boundedDifference=Math.clamped(difference,0-range,range);return null!==(_a=values.get(boundedDifference))&&void 0!==_a?_a:0}function calculateCreatureXP(partyLevel,npcLevel,dcOptions){return dcOptions.proficiencyWithoutLevel?getXPFromMap(partyLevel,npcLevel,xpVariantCreatureDifferences):getXPFromMap(partyLevel,npcLevel,xpCreatureDifferences)}function generateEncounterBudgets(partySize){const budget=20*partySize;return{trivial:Math.floor(.5*budget),low:Math.floor(.75*budget),moderate:budget,severe:Math.floor(1.5*budget),extreme:Math.floor(2*budget)}}xpSimpleHazardDifferences.set(-4,2),xpSimpleHazardDifferences.set(-3,3),xpSimpleHazardDifferences.set(-2,4),xpSimpleHazardDifferences.set(-1,6),xpSimpleHazardDifferences.set(0,8),xpSimpleHazardDifferences.set(1,12),xpSimpleHazardDifferences.set(2,16),xpSimpleHazardDifferences.set(3,24),xpSimpleHazardDifferences.set(4,32);const rewardEncounterBudgets=generateEncounterBudgets(4);exports.calculateXP=function(partyLevel,partySize,npcLevels,hazards,dcOptions){const totalXP=npcLevels.map((level=>calculateCreatureXP(partyLevel,level,dcOptions))).reduce(((a,b)=>a+b),0)+hazards.map((hazard=>function(partyLevel,hazard,dcOptions){return hazard.isComplex?calculateCreatureXP(partyLevel,hazard.level,dcOptions):getXPFromMap(partyLevel,hazard.level,xpSimpleHazardDifferences)}(partyLevel,hazard,dcOptions))).reduce(((a,b)=>a+b),0),encounterBudgets=generateEncounterBudgets(partySize),rating=(challenge=totalXP)<=(budgets=encounterBudgets).trivial?"trivial":challenge<=budgets.low?"low":challenge<=budgets.moderate?"moderate":challenge<=budgets.severe?"severe":"extreme";var challenge,budgets;const ratingXP=rewardEncounterBudgets[rating];return{partyLevel,partySize,totalXP,encounterBudgets,rating,ratingXP,xpPerPlayer:Math.floor(totalXP/partySize*4)}}},89714:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerSheets=void 0;const sheet_1=__webpack_require__(39481),legacy_sheet_1=__webpack_require__(55820),sheet_2=__webpack_require__(71366),sheet_3=__webpack_require__(13945),sheet_4=__webpack_require__(58693),sheet_5=__webpack_require__(46949),sheet_6=__webpack_require__(46014),sheet_7=__webpack_require__(89536),base_1=__webpack_require__(22222),sheet_8=__webpack_require__(81714),sheet_9=__webpack_require__(71950),sheet_10=__webpack_require__(69401),sheet_11=__webpack_require__(46840),sheet_12=__webpack_require__(30988),localize_1=__webpack_require__(41332),sheet_13=__webpack_require__(38719),sheet_14=__webpack_require__(44225),values_1=__webpack_require__(67189),sheet_15=__webpack_require__(9053),sheet_16=__webpack_require__(25531),sheet_17=__webpack_require__(59401),sheet_18=__webpack_require__(11880),sheet_19=__webpack_require__(93942);exports.registerSheets=function(){const translations=localize_1.LocalizePF2e.translations.PF2E,sheetLabel=translations.SheetLabel,sheetLabelOld=translations.SheetLabelOld;Actors.unregisterSheet("core",ActorSheet);const localizeType=type=>{const entityType=type in CONFIG.PF2E.Actor.documentClasses?"ACTOR":"ITEM",camelized=type[0].toUpperCase()+type.slice(1).toLowerCase();return game.i18n.localize(`${entityType}.Type${camelized}`)};Actors.registerSheet("pf2e",sheet_1.CharacterSheetPF2e,{types:["character"],label:game.i18n.format(sheetLabel,{type:localizeType("character")}),makeDefault:!0}),Actors.registerSheet("pf2e",legacy_sheet_1.NPCLegacySheetPF2e,{types:["npc"],label:game.i18n.format(sheetLabelOld,{type:localizeType("npc")}),makeDefault:!1}),Actors.registerSheet("pf2e",sheet_7.NPCSheetPF2e,{types:["npc"],label:game.i18n.format(sheetLabel,{type:localizeType("npc")}),makeDefault:!0}),Actors.registerSheet("pf2e",sheet_3.HazardSheetPF2e,{types:["hazard"],label:game.i18n.format(sheetLabel,{type:localizeType("hazard")}),makeDefault:!0}),Actors.registerSheet("pf2e",sheet_4.LootSheetPF2e,{types:["loot"],label:game.i18n.format(sheetLabel,{type:localizeType("loot")}),makeDefault:!0}),Actors.registerSheet("pf2e",sheet_5.FamiliarSheetPF2e,{types:["familiar"],label:game.i18n.format(sheetLabel,{type:localizeType("familiar")}),makeDefault:!0}),Actors.registerSheet("pf2e",sheet_6.VehicleSheetPF2e,{types:["vehicle"],label:game.i18n.format(sheetLabel,{type:localizeType("vehicle")}),makeDefault:!0}),Items.unregisterSheet("core",ItemSheet);const itemTypes=["condition","lore","martial","melee","spellcastingEntry"];for(const itemType of itemTypes)Items.registerSheet("pf2e",base_1.ItemSheetPF2e,{types:[itemType],label:game.i18n.format(sheetLabel,{type:localizeType(itemType)}),makeDefault:!0});const sheetEntries=[["action",sheet_2.ActionSheetPF2e],["ancestry",sheet_9.AncestrySheetPF2e],["background",sheet_10.BackgroundSheetPF2e],["book",sheet_17.BookSheetPF2e],["class",sheet_11.ClassSheetPF2e],["deity",sheet_18.DeitySheetPF2e],["feat",sheet_14.FeatSheetPF2e],["effect",sheet_16.EffectSheetPF2e],["spell",sheet_12.SpellSheetPF2e],["kit",sheet_8.KitSheetPF2e],["weapon",sheet_15.WeaponSheetPF2e],["armor",sheet_19.ArmorSheetPF2e]];for(const[type,Sheet]of sheetEntries)Items.registerSheet("pf2e",Sheet,{types:[type],label:game.i18n.format(sheetLabel,{type:localizeType(type)}),makeDefault:!0});for(const itemType of values_1.PHYSICAL_ITEM_TYPES)sheetEntries.some((([type,_sheet])=>itemType===type))||Items.registerSheet("pf2e",sheet_13.PhysicalItemSheetPF2e,{types:[itemType],label:game.i18n.format(sheetLabel,{type:localizeType(itemType)}),makeDefault:!0})}},33684:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.activateSocketListener=void 0;const item_transfer_1=__webpack_require__(46485);exports.activateSocketListener=function(){game.socket.on("system.pf2e",(async(...[message,userId])=>{var _a;const sender=game.users.get(userId,{strict:!0});switch(message.request){case"itemTransfer":if(game.user.isGM){console.debug(`PF2e System | Received item-transfer request from ${sender.name}`);const data=message.data;new item_transfer_1.ItemTransfer(data.source,data.target,data.quantity,data.containerId).enact(sender)}break;case"refreshSceneControls":game.user.isGM||message.data.layer!==(null===(_a=ui.controls.control)||void 0===_a?void 0:_a.layer)||(console.debug("PF2e System | Refreshing Scene Controls"),ui.controls.initialize({layer:message.data.layer}));break;default:throw Error(`PF2e System | Received unrecognized socket emission: ${message.request}`)}}))}},61529:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.extendDragData=void 0;const _util_1=__webpack_require__(6945);exports.extendDragData=function(){$("body").on("dragstart","a.entity-link",(event=>{var _a,_b,_c,_d,_e;const dataTransfer=null===(_a=null==event?void 0:event.originalEvent)||void 0===_a?void 0:_a.dataTransfer;if(!dataTransfer)return;const data=JSON.parse(dataTransfer.getData("text/plain"));if("Item"!==data.type)return;const match=(null!==(_d=null===(_c=null===(_b=null==event?void 0:event.currentTarget)||void 0===_b?void 0:_b.innerText)||void 0===_c?void 0:_c.trim())&&void 0!==_d?_d:"").match(/[0-9]+/);null!==match&&(data.value=Number(match[0]));const containerElement=event.target.closest("[data-spell-lvl]"),spellLevel=null!==(_e=(0,_util_1.toNumber)(null==containerElement?void 0:containerElement.dataset.spellLvl))&&void 0!==_e?_e:null;null!==spellLevel&&spellLevel>=0&&(data.level=spellLevel),dataTransfer.setData("text/plain",JSON.stringify(data))}))}},59431:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.remigrate=void 0;const runner_1=__webpack_require__(46842),migration_1=__webpack_require__(63051),localize_1=__webpack_require__(41332);exports.remigrate=async function(schemaVersions){if(!game.ready)return void ui.notifications.warn(game.i18n.localize("PF2E.Migrations.WorldNotReady"));const translations=localize_1.LocalizePF2e.translations.PF2E.Migrations;if(game.user.role!==CONST.USER_ROLES.GAMEMASTER)return void ui.notifications.error(game.i18n.localize(translations.OnlyGMCanUse));const range="number"==typeof schemaVersions?{from:schemaVersions,to:schemaVersions}:schemaVersions,migrations=migration_1.Migrations.constructRange(range.from,range.to);if(0===migrations.length||range.from<runner_1.MigrationRunner.RECOMMENDED_SAFE_VERSION)return void ui.notifications.error(game.i18n.format(translations.OutsideSchemaRange,{minimum:runner_1.MigrationRunner.RECOMMENDED_SAFE_VERSION,maximum:runner_1.MigrationRunner.LATEST_SCHEMA_VERSION}));const runner=new runner_1.MigrationRunner(migrations);await runner.runMigration(!0)}},29557:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EnrichContent=void 0;const _util_1=__webpack_require__(6945);exports.EnrichContent={getParams:data=>{const error="Wrong notation for params - use [type1:value1|type2:value2|...]",parameters=new Map,paramStrings=data.trim().split("|");if(!Array.isArray(paramStrings))return error;for(const param of paramStrings){const paramComponents=param.trim().split(":");if(2!==paramComponents.length)return error;parameters.set(paramComponents[0].trim(),paramComponents[1].trim())}return parameters},enrichString:(data,options)=>{const itemData=(()=>{if((null==options?void 0:options.rollData)&&(0,_util_1.isObject)(options.rollData)){const rollData=options.rollData;return(0,_util_1.isObject)(rollData.item)?rollData.item:void 0}})(),rgx=new RegExp(`@(${["Localize","Template"].join("|")})\\[([^\\]]+)\\](?:{([^}]+)})?`,"g");return data.replace(rgx,((match,inlineType,paramString,buttonLabel)=>{switch(inlineType){case"Localize":return exports.EnrichContent.enrichString(game.i18n.localize(paramString),options);case"Template":return exports.EnrichContent.createTemplate(paramString,buttonLabel,itemData)}return match}))},createTemplate(paramString,label,itemData){var _a;const rawParams=exports.EnrichContent.getParams(paramString);if("string"==typeof rawParams)return rawParams;const params=Object.fromEntries(rawParams);if(!params.type)return"Error in @Template: type parameter is mandatory";if(!params.distance)return"Error in @Template: distance parameter is mandatory";if(!["cone","emanation","burst","line"].includes(params.type))return`Error in @Template: type ${params.type} is not supported`;if(isNaN(+params.distance))return`Error in @Template: dimension ${params.distance} is not a number`;if(params.width&&isNaN(+params.width))return`Error in @Template: width ${params.width} is not a number`;if(!params.traits&&(params.traits="",null==itemData?void 0:itemData.traits)){let traits=itemData.traits.value.join(",");""!==itemData.traits.custom&&(traits=traits.concat(`, ${itemData.traits.custom}`)),params.traits=traits}const html=document.createElement("span");return html.innerHTML=null!=label?label:game.i18n.format("PF2E.InlineButtons.TemplateLabel",{type:params.type,unit:params.distance}),html.setAttribute("data-pf2-effect-area",params.type),html.setAttribute("data-pf2-distance",params.distance),""!==params.traits&&html.setAttribute("data-pf2-traits",params.traits),"line"===params.type&&html.setAttribute("data-pf2-width",null!==(_a=params.width)&&void 0!==_a?_a:"5"),html.outerHTML}}},27542:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.InlineRollsLinks=void 0;const _actor_1=__webpack_require__(85530),values_1=__webpack_require__(35089),ghost_measured_template_1=__webpack_require__(15252),statistic_1=__webpack_require__(77486),dc_1=__webpack_require__(84372);function resolveActors(){const actors=[];return canvas.tokens.controlled.length?actors.push(...canvas.tokens.controlled.map((token=>token.actor))):game.user.character&&actors.push(game.user.character),actors}const inlineSelector=["action","check","effect-area","flat-check","perception-check","repost","saving-throw","skill-check"].map((keyword=>`[data-pf2-${keyword}]`)).join(",");exports.InlineRollsLinks={injectDCText:$links=>{$links.each(((_idx,link)=>{var _a,_b,_c,_d;const dc=Number(null!==(_b=null===(_a=link.dataset.pf2Dc)||void 0===_a?void 0:_a.trim())&&void 0!==_b?_b:""),role=null!==(_d=null===(_c=link.dataset.pf2ShowDc)||void 0===_c?void 0:_c.trim())&&void 0!==_d?_d:"";if((["all","owner"].includes(role)||"gm"===role&&game.user.isGM)&&dc>0){const text=link.innerHTML;link.innerHTML=game.i18n.format("PF2E.DCWithValue",{dc,text})}}))},injectRepostElement:$links=>{$links.each(((_idx,link)=>{if(game.user.isGM&&!link.querySelector("[data-pf2-repost]")){const child=document.createElement("i");child.classList.add("fas"),child.classList.add("fa-comment-alt"),child.setAttribute("data-pf2-repost",""),child.setAttribute("title",game.i18n.localize("PF2E.Repost")),link.appendChild(child)}}))},listen:$html=>{const $links=$html.find("span").filter(inlineSelector);exports.InlineRollsLinks.injectDCText($links),exports.InlineRollsLinks.injectRepostElement($links);$html.find("i.fas.fa-comment-alt").filter(inlineSelector).filter("[data-pf2-repost]").on("click",(event=>{exports.InlineRollsLinks.repostAction(event.target.parentElement),event.stopPropagation()})),$links.filter("[data-pf2-action]").on("click",(event=>{var _a,_b;const $target=$(event.currentTarget),{pf2Action,pf2Glyph,pf2Variant}=null!==(_b=null===(_a=$target[0])||void 0===_a?void 0:_a.dataset)&&void 0!==_b?_b:{},action=game.pf2e.actions[null!=pf2Action?pf2Action:""];pf2Action&&action?action({event,glyph:pf2Glyph,variant:pf2Variant}):console.warn(`PF2e System | Skip executing unknown action '${pf2Action}'`)})),$links.filter("[data-pf2-check]").on("click",(event=>{var _a,_b;const{pf2Check,pf2Dc,pf2Traits,pf2Label,pf2Adjustment}=event.currentTarget.dataset,actors=resolveActors();if(0!==actors.length)switch(pf2Check){case"perception":actors.forEach((actor=>{if(actor instanceof _actor_1.CreaturePF2e){const perceptionCheck=actor.data.data.attributes.perception;if(perceptionCheck){const dc=Number.isInteger(Number(pf2Dc))?{label:pf2Label,value:Number(pf2Dc)}:void 0,options=actor.getRollOptions(["all","perception"]);if(pf2Traits){const traits=pf2Traits.split(",").map((trait=>trait.trim())).filter((trait=>!!trait));options.push(...traits)}perceptionCheck.roll({event,options,dc})}else console.warn(`PF2e System | Skip rolling perception for '${actor}'`)}}));break;case"flat":actors.forEach((actor=>{if(actor instanceof _actor_1.CreaturePF2e){const flatCheck=new statistic_1.Statistic(actor,{name:"",modifiers:[],check:{type:"flat-check"}});if(flatCheck){const dc=Number.isInteger(Number(pf2Dc))?{label:pf2Label,value:Number(pf2Dc)}:void 0,options=actor.getRollOptions(["all","flat-check"]);if(pf2Traits){const traits=pf2Traits.split(",").map((trait=>trait.trim())).filter((trait=>!!trait));options.push(...traits)}flatCheck.check.roll({event,options,dc,modifiers:[]})}else console.warn(`PF2e System | Skip rolling flat check for '${actor}'`)}}));break;case"will":case"fortitude":case"reflex":actors.forEach((actor=>{const savingThrow=actor.data.data.saves[null!=pf2Check?pf2Check:""];if(pf2Check&&savingThrow){const dc=Number.isInteger(Number(pf2Dc))?{label:pf2Label,value:Number(pf2Dc)}:void 0,options=actor.getRollOptions(["all","saving-throw",pf2Check]);if(pf2Traits){const traits=pf2Traits.split(",").map((trait=>trait.trim())).filter((trait=>!!trait));options.push(...traits)}savingThrow.roll({event,options,dc})}else console.warn(`PF2e System | Skip rolling unknown saving throw '${pf2Check}'`)}));break;default:{const skillActors=actors.filter((actor=>"skills"in actor.data.data)),skill=null!==(_b=null===(_a=values_1.SKILL_EXPANDED[pf2Check])||void 0===_a?void 0:_a.shortform)&&void 0!==_b?_b:pf2Check;for(const actor of skillActors){const skillCheck=actor.data.data.skills[null!=skill?skill:""];if(skill&&skillCheck){const dcValue="@self.level"===pf2Dc?(()=>{const proficiencyWithoutLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant"),level=actor.level,adjustment=Number(pf2Adjustment)||0;return(0,dc_1.calculateDC)(level,{proficiencyWithoutLevel})+adjustment})():Number(pf2Dc),dc=dcValue>0?{label:pf2Label,value:dcValue}:null,options=actor.getRollOptions(["all","skill-check",skill]);if(pf2Traits){const traits=pf2Traits.split(",").map((trait=>trait.trim())).filter((trait=>!!trait));options.push(...traits)}skillCheck.roll({event,options,dc})}else console.warn(`PF2e System | Skip rolling unknown skill check or untrained lore '${skill}'`)}}}else ui.notifications.error(game.i18n.localize("PF2E.UI.errorTargetToken"))})),$links.filter("[data-pf2-saving-throw]").on("click",(event=>{var _a;console.debug('Deprecation warning | data-pf2-saving-throw is deprecated, use data-pf2-check="savename" instead.');const actors=resolveActors();if(actors.length){const{pf2SavingThrow,pf2Dc,pf2Traits,pf2Label}=null!==(_a=event.currentTarget.dataset)&&void 0!==_a?_a:{};actors.forEach((actor=>{const savingThrow=actor.data.data.saves[null!=pf2SavingThrow?pf2SavingThrow:""];if(pf2SavingThrow&&savingThrow){const dc=Number.isInteger(Number(pf2Dc))?{label:pf2Label,value:Number(pf2Dc)}:void 0,options=actor.getRollOptions(["all","saving-throw",pf2SavingThrow]);if(pf2Traits){const traits=pf2Traits.split(",").map((trait=>trait.trim())).filter((trait=>!!trait));options.push(...traits)}savingThrow.roll({event,options,dc})}else console.warn(`PF2e System | Skip rolling unknown saving throw '${pf2SavingThrow}'`)}))}})),$links.filter("[data-pf2-skill-check]").on("click",(event=>{var _a,_b;console.debug('Deprecation notice | data-pf2-skill-check is deprecated, use data-pf2-check="skillname" instead.');const actors=resolveActors();if(actors.length){const{pf2SkillCheck,pf2Dc,pf2Traits,pf2Label}=event.currentTarget.dataset,skill=null!==(_b=null===(_a=values_1.SKILL_EXPANDED[pf2SkillCheck])||void 0===_a?void 0:_a.shortform)&&void 0!==_b?_b:pf2SkillCheck,skillActors=actors.filter((actor=>"skills"in actor.data.data));for(const actor of skillActors){const skillCheck=actor.data.data.skills[null!=skill?skill:""];if(skill&&skillCheck){const dc=Number.isInteger(Number(pf2Dc))?{label:pf2Label,value:Number(pf2Dc)}:void 0,options=actor.getRollOptions(["all","skill-check",skill]);if(pf2Traits){const traits=pf2Traits.split(",").map((trait=>trait.trim())).filter((trait=>!!trait));options.push(...traits)}skillCheck.roll({event,options,dc})}else console.warn(`PF2e System | Skip rolling unknown skill check or untrained lore '${skill}'`)}}})),$links.filter("[data-pf2-perception-check]").on("click",(event=>{console.debug('Deprecation warning | data-pf2-perception is deprecated, use data-pf2-check="perception" instead.');const actors=resolveActors();if(actors.length){const{pf2Dc,pf2Traits,pf2Label}=event.currentTarget.dataset;actors.forEach((actor=>{if(actor instanceof _actor_1.CreaturePF2e){const perceptionCheck=actor.data.data.attributes.perception;if(perceptionCheck){const dc=Number.isInteger(Number(pf2Dc))?{label:pf2Label,value:Number(pf2Dc)}:void 0,options=actor.getRollOptions(["all","perception"]);if(pf2Traits){const traits=pf2Traits.split(",").map((trait=>trait.trim())).filter((trait=>!!trait));options.push(...traits)}perceptionCheck.roll({event,options,dc})}else console.warn(`PF2e System | Skip rolling perception for '${actor}'`)}}))}})),$links.filter("[data-pf2-flat-check]").on("click",(event=>{console.debug('Deprecation warning | data-pf2-flat-check is deprecated, use data-pf2-check="flat" instead.');const actors=resolveActors();if(actors.length){const{pf2Dc,pf2Traits,pf2Label}=event.currentTarget.dataset;actors.forEach((actor=>{if(actor instanceof _actor_1.CreaturePF2e){const flatCheck=new statistic_1.Statistic(actor,{name:"",modifiers:[],check:{type:"flat-check"}});if(flatCheck){const dc=Number.isInteger(Number(pf2Dc))?{label:pf2Label,value:Number(pf2Dc)}:void 0,options=actor.getRollOptions(["all","flat-check"]);if(pf2Traits){const traits=pf2Traits.split(",").map((trait=>trait.trim())).filter((trait=>!!trait));options.push(...traits)}flatCheck.check.roll({event,options,dc,modifiers:[]})}else console.warn(`PF2e System | Skip rolling flat check for '${actor}'`)}}))}})),$links.filter("[data-pf2-effect-area]").on("click",(event=>{const{pf2EffectArea,pf2Distance,pf2TemplateData="{}",pf2Traits,pf2Width}=event.currentTarget.dataset,templateConversion={burst:"circle",emanation:"circle",line:"ray",cone:"cone",rect:"rect"};if("string"==typeof pf2EffectArea){const templateData=JSON.parse(pf2TemplateData);templateData.t=templateConversion[pf2EffectArea],templateData.user=game.user.id,templateData.distance||(templateData.distance=Number(pf2Distance)),"ray"===templateData.t&&(templateData.width||(templateData.width=pf2Width?Number(pf2Width):canvas.dimensions.distance)),"cone"===templateData.t&&(templateData.angle||(templateData.angle=90)),templateData.fillColor||(templateData.fillColor=game.user.color),pf2Traits&&(templateData.flags={pf2e:{origin:{traits:pf2Traits.split(",")}}});const measuredTemplateDoc=new MeasuredTemplateDocument(templateData,{parent:canvas.scene});new ghost_measured_template_1.GhostTemplate(measuredTemplateDoc).drawPreview()}else console.warn("PF2e System | Could not create template'")}))},repostAction:target=>{var _a,_b,_c,_d;if((null==target?void 0:target.matches('[data-pf2-action]:not([data-pf2-action=""]), [data-pf2-action]:not([data-pf2-action=""]) *'))||(null==target?void 0:target.matches('[data-pf2-saving-throw]:not([data-pf2-saving-throw=""]), [data-pf2-saving-throw]:not([data-pf2-saving-throw=""]) *'))||(null==target?void 0:target.matches('[data-pf2-skill-check]:not([data-pf2-skill-check=""]), [data-pf2-skill-check]:not([data-pf2-skill-check=""]) *'))||(null==target?void 0:target.matches("[data-pf2-perception-check], [data-pf2-perception-check] *"))||(null==target?void 0:target.matches("[data-pf2-flat-check], [data-pf2-flat-check] *"))||(null==target?void 0:target.matches("[data-pf2-check], [data-pf2-check] *"))){const flavor=null!==(_b=null===(_a=target.attributes.getNamedItem("data-pf2-repost-flavor"))||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"";target.setAttributeNS(null,"data-pf2-show-dc",null!==(_d=null===(_c=target.attributes.getNamedItem("data-pf2-repost-show-dc"))||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:"gm");const regexDC=new RegExp(game.i18n.localize("PF2E.DCWithValue").replace(/\{dc\}/g,"\\d+").replace(/\{text\}/g,"(.*)")),newInnerHTML=target.innerHTML.replace(/<[^>]+data-pf2-repost(="")?[^>]*>[^<]*<\s*\/[^>]+>/gi,"").replace(regexDC,"$1"),replaced=target.outerHTML.replace(target.innerHTML,newInnerHTML);ChatMessage.create({content:`${flavor||""} ${replaced}`.trim()})}}}},96498:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UserVisibility=void 0,exports.UserVisibility={process:($html,{message,actor}={})=>{var _a,_b;if($html.find('[data-visibility="none"]').remove(),game.user.isGM||$html.find('[data-visibility="gm"]').remove(),actor){const hasOwnership=(null==actor?void 0:actor.isOwner)||game.user.isGM;hasOwnership||$html.find('[data-visibility="owner"]').remove(),$html.find("[data-pf2-dc][data-pf2-show-dc]").each(((_idx,elem)=>{const dc=elem.dataset.pf2Dc.trim(),role=elem.dataset.pf2ShowDc.trim();("all"===role||"gm"===role&&game.user.isGM||"owner"===role&&hasOwnership)&&(elem.innerHTML=game.i18n.format("PF2E.DCWithValue",{dc,text:elem.innerHTML}),elem.removeAttribute("data-pf2-show-dc"))})),$html.find("[data-owner-title]").each(((_idx,elem)=>{if(hasOwnership){const value=elem.dataset.ownerTitle;elem.setAttribute("title",value)}else elem.removeAttribute("data-owner-title")}))}const tokenSetsNameVisibility=game.settings.get("pf2e","metagame.tokenSetsNameVisibility");if((null==message?void 0:message.token)&&tokenSetsNameVisibility){const $sender=$html.find("h4.message-sender"),nameToHide=message.token.name.trim();!message.token.playersCanSeeName&&$sender.text().trim()===nameToHide&&(game.user.isGM?$sender.attr({"data-visibility":"gm"}):$sender.text(null!==(_b=null===(_a=message.user)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:"Gamemaster"))}}}},41019:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.patchTokenClasses=void 0,exports.patchTokenClasses=function(){TokenHUD.prototype.clear=function(){BasePlaceableHUD.prototype.clear.call(this),Hooks.call("clearTokenHUD",this,this.object)}}},16539:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.fromUUIDs=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),_scene_1=__webpack_require__(12789),misc_1=__webpack_require__(68129);exports.fromUUIDs=async function(uuids){const lookups=uuids.reduce(((partialLookups,uuid)=>{var _a,_b,_c;const parts=uuid.split(".");switch(parts[0]){case"Compendium":{const[scope,packId,id]=parts.slice(1);if(!(scope&&packId&&id))throw(0,misc_1.ErrorPF2e)(`Unable to parse UUID: ${uuid}`);(null!==(_a=(_b=partialLookups.pack)[_c=`${scope}.${packId}`])&&void 0!==_a?_a:_b[_c]=[]).push(id);break}case"Actor":/\bItem\b/.test(uuid)?partialLookups.item.push(uuid):partialLookups.actor.push(uuid);break;case"Item":partialLookups.item.push(uuid);break;case"Scene":partialLookups.scene.push(uuid)}return partialLookups}),{actor:[],item:[],pack:{},scene:[]}),actors=[],items=[];if(lookups.actor.length>0?actors.push(...(await Promise.all(lookups.actor.map((uuid=>fromUuid(uuid))))).filter((document=>document instanceof _actor_1.ActorPF2e))):lookups.item.length>0&&items.push(...(await Promise.all(lookups.item.map((uuid=>fromUuid(uuid))))).filter((document=>document instanceof _item_1.ItemPF2e))),lookups.scene.length>0&&actors.push(...(await Promise.all(lookups.scene.map((uuid=>fromUuid(uuid))))).filter((document=>document instanceof _scene_1.TokenDocumentPF2e)).flatMap((tokenDoc=>{var _a;return null!==(_a=tokenDoc.actor)&&void 0!==_a?_a:[]}))),Object.keys(lookups.pack).length>0)for(const packId of Object.keys(lookups.pack)){const pack=game.packs.get(packId);if(!pack){console.warn(`PF2e System | Pack with id not found: ${packId}`);continue}const ids=lookups.pack[packId],cacheHits=[];for(const cached of ids.flatMap((id=>{var _a;return null!==(_a=pack.get(id))&&void 0!==_a?_a:[]})))cached instanceof _actor_1.ActorPF2e?(actors.push(cached),cacheHits.push(cached.id)):cached instanceof _item_1.ItemPF2e&&(items.push(cached),cacheHits.push(cached.id));const cacheMisses=ids.filter((id=>!cacheHits.includes(id)));if(0===cacheMisses.length)continue;const fromServer=await pack.getDocuments({_id:{$in:cacheMisses}});for(const uncached of fromServer)uncached instanceof _actor_1.ActorPF2e?actors.push(uncached):uncached instanceof _item_1.ItemPF2e&&items.push(uncached)}return actors.length>0?actors:items}},6945:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(68129),exports)},68129:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isObject=exports.fontAwesomeIcon=exports.ordinal=exports.ErrorPF2e=exports.getActionGlyph=exports.getActionIcon=exports.sluggify=exports.tupleHasValue=exports.objectHasKey=exports.applyNTimes=exports.zip=exports.sum=exports.addSign=exports.add=exports.toNumber=exports.isBlank=exports.combineMaps=exports.combineObjects=exports.padArray=exports.groupBy=void 0;const localize_1=__webpack_require__(41332);exports.groupBy=function(array,criterion){const result=new Map;for(const elem of array){const key=criterion(elem),group=result.get(key);group?group.push(elem):result.set(key,[elem])}return result},exports.padArray=function(array,requiredLength,padWith){const result=[...array];for(let i=array.length;i<requiredLength;i+=1)result.push(padWith);return result},exports.combineObjects=function(first,second,mergeFunction){const combinedKeys=new Set([...Object.keys(first),...Object.keys(second)]),combinedObject={};for(const name of combinedKeys)name in first&&name in second?combinedObject[name]=mergeFunction(first[name],second[name]):name in first?combinedObject[name]=first[name]:name in second&&(combinedObject[name]=second[name]);return combinedObject},exports.combineMaps=function(first,second,mergeFunction){const combinedKeys=new Set([...first.keys(),...second.keys()]),combinedMap=new Map;for(const name of combinedKeys)first.has(name)&&second.has(name)?combinedMap.set(name,mergeFunction(first.get(name),second.get(name))):first.has(name)?combinedMap.set(name,first.get(name)):second.has(name)&&combinedMap.set(name,second.get(name));return combinedMap},exports.isBlank=function(text){return null==text||""===text.trim()},exports.toNumber=function(value){if(null==value||"number"==typeof value)return value;const result=parseInt(value,10);return Number.isNaN(result)?void 0:result},exports.add=function(x,y){return x+y},exports.addSign=function(number){return number<0?`${number}`:number>0?`+${number}`:"0"},exports.sum=function(values){return values.reduce(((a,b)=>a+b),0)},exports.zip=function(a,b,zipFunction){return a.length>b.length?b.map(((elem,index)=>zipFunction(a[index],elem))):a.map(((elem,index)=>zipFunction(elem,b[index])))},exports.applyNTimes=function(func,times,start){let result=start;for(let i=0;i<times;i+=1)result=func(result);return result},exports.objectHasKey=function(obj,key){return("string"==typeof key||"number"==typeof key)&&key in obj},exports.tupleHasValue=function(array,value){return array.includes(value)},exports.sluggify=function sluggify(label,{camel=null}={}){switch(camel){case null:return label.replace(/([a-z])([A-Z])\B/g,"$1-$2").toLowerCase().replace(/'/g,"").replace(/[^a-z0-9]+/gi," ").trim().replace(/[-\s]+/g,"-");case"bactrian":{const dromedary=sluggify(label,{camel:"dromedary"});return dromedary.charAt(0).toUpperCase()+dromedary.slice(1)}case"dromedary":return label.replace(/[^-\w\s]/g,"").replace(/[-_]+/g," ").replace(/(?:^\w|[A-Z]|\b\w)/g,((part,index)=>0===index?part.toLowerCase():part.toUpperCase())).replace(/\s+/g,"");default:throw ErrorPF2e("I don't think that's a real camel.")}};const actionImgMap={1:"systems/pf2e/icons/actions/OneAction.webp",2:"systems/pf2e/icons/actions/TwoActions.webp",3:"systems/pf2e/icons/actions/ThreeActions.webp","1 or 2":"systems/pf2e/icons/actions/OneTwoActions.webp","1 to 3":"systems/pf2e/icons/actions/OneThreeActions.webp","2 or 3":"systems/pf2e/icons/actions/TwoThreeActions.webp",free:"systems/pf2e/icons/actions/FreeAction.webp",reaction:"systems/pf2e/icons/actions/Reaction.webp",passive:"systems/pf2e/icons/actions/Passive.webp"};exports.getActionIcon=function(action,fallback="systems/pf2e/icons/default-icons/mystery-man.svg"){var _a;if(null===action)return actionImgMap.passive;const value="object"!=typeof action?action:"action"===action.type?action.value:action.type,sanitized=String(null!=value?value:"").toLowerCase().trim();return null!==(_a=actionImgMap[sanitized])&&void 0!==_a?_a:fallback};const actionGlyphMap={1:"A",2:"D",3:"T","1 or 2":"A/D","1 to 3":"A - T","2 or 3":"D/T",free:"F",reaction:"R"};function ErrorPF2e(message){return Error(`PF2e System | ${message}`)}exports.getActionGlyph=function(action){var _a;if(!action)return"";const value="object"!=typeof action?action:"action"===action.type?action.value:action.type,sanitized=String(null!=value?value:"").toLowerCase().trim();return null!==(_a=actionGlyphMap[sanitized])&&void 0!==_a?_a:""},exports.ErrorPF2e=ErrorPF2e,exports.ordinal=function(value){const suffix=localize_1.LocalizePF2e.translations.PF2E.OrdinalSuffixes[new Intl.PluralRules(game.i18n.lang,{type:"ordinal"}).select(value)];return game.i18n.format("PF2E.OrdinalNumber",{value,suffix})},exports.fontAwesomeIcon=function(glyph,style="solid"){const styleClass="regular"===style?"far":"fas",glyphClass=glyph.startsWith("fa-")?glyph:`fa-${glyph}`,icon=document.createElement("i");return icon.classList.add(styleClass,glyphClass),icon},exports.isObject=function(value){return"object"==typeof value&&null!==value}},67515:module=>{"use strict";module.exports=JSON.parse('{"ACTOR":{"TypeAnimalCompanion":"Animal Companion","TypeCharacter":"Player Character","TypeEidolon":"Eidolon","TypeFamiliar":"Familiar","TypeHazard":"Hazard","TypeLoot":"Loot","TypeNpc":"Non-Player Character","TypeVehicle":"Vehicle"},"ITEM":{"TypeAction":"Action","TypeAncestry":"Ancestry","TypeArmor":"Armor","TypeBackpack":"Container","TypeBackground":"Background","TypeBook":"Book","TypeClass":"Class","TypeCondition":"Condition","TypeConsumable":"Consumable","TypeDeity":"Deity","TypeEffect":"Effect","TypeEquipment":"Equipment","TypeFeat":"Feat","TypeKit":"Kit","TypeLore":"Lore Skill","TypeMartial":"Armor and Weapon Proficiency","TypeMelee":"NPC Strike","TypeSpell":"Spell","TypeSpellcastingentry":"Spellcasting Entry","TypeTreasure":"Treasure","TypeWeapon":"Weapon"},"COMBAT":{"Begin":"Begin Encounter","CombatantNotInScene":"The participant {name} is not present in your currently viewed scene.","CombatantRemove":"Remove Participant","CombatantStatus":"Participant Status","CombatantUpdate":"Update Participant","Settings":"Encounter Tracker Settings","End":"End Encounter","EndConfirmation":"End this encounter and empty the turn tracker?","EndTitle":"End Encounter?","NoneActive":"There is no active Encounter in your currently viewed Scene.","NoneRemaining":"There are no participants remaining in this Encounter that are not defeated.","ResourceHint":"Choose an attribute to track for each participant.","SkipDefeatedHint":"Automatically bypass participants marked as defeated?","UnknownCombatant":"Unknown Participant"},"COMPENDIUM":{"ImportAllHint":"All of the content from this Compendium pack will be imported into your World to a Folder, which you may name. <p class=\\"notes\\"><strong>WARNING</strong>: It is strongly recommended that this <span style=\\"text-decoration: underline\\">not</span> be done with larger compendia. Doing so has no benefit and will adversely impact loading this world for both yourself and your players.</p>","Search":"Search Compendia"},"CONTROLS":{"AdjustSceneDarkness":"Adjust Scene Darkness","EffectPanel":"Effects Panel","WorldClock":"World Clock"},"SIDEBAR":{"TabCombat":"Encounter Tracker"},"PF2E":{"AbilityBoost":"Ability Boost","AbilityBoostLevels":"Ability Boost Levels","AbilityCha":"Charisma","AbilityCon":"Constitution","AbilityDex":"Dexterity","AbilityFlaw":"Flaw","AbilityInt":"Intelligence","AbilityModifierLabel":"Ability Modifier","AbilityScoresHeader":"Ability Scores","AbilityFree":"Free","AbilityId":{"cha":"Cha","con":"Con","dex":"Dex","int":"Int","str":"Str","wis":"Wis"},"AbilityStr":"Strength","AbilityCheck":{"str":"Strength Check","dex":"Dexterity Check","con":"Constitution Check","int":"Intelligence Check","wis":"Wisdom Check","cha":"Charisma Check"},"AbilityTitle":"Ability","AbilityWis":"Wisdom","AccessoryPropertyRuneCalled":"Called","AccessoryPropertyRuneDragonsBreath":"Dragon\'s Breath","AccessoryPropertyRuneGreaterPaired":"Greater Paired","AccessoryPropertyRuneGreaterWindCatcher":"Greater Wind-Catcher","AccessoryPropertyRuneMajorPaired":"Major Paired","AccessoryPropertyRunePaired":"Paired","AccessoryPropertyRunePresentable":"Presentable","AccessoryPropertyRuneSnagging":"Snagging","AccessoryPropertyRuneSoftLanding":"Soft-Landing","AccessoryPropertyRuneSpellBastion":"Spell-Bastion","AccessoryPropertyRuneWindCatcher":"Wind-Catcher","ActionActionTypeLabel":"Action Type","ActionActionsLabel":"Actions","ActionBrowserSearchHint":"You can search for name or custom attributes. Possible searchable attributes are:<br> source, spellType, level, school, components, materials, target, range, time, duration, damage, damageType, save, concentration, ritual, ability and classes. <br>Example: \'fire, damage:d6\' to show all spells that have fire in their name and a d6 in the damage","ActionCategoryDefensive":"Defensive","ActionCategoryInteraction":"Interaction","ActionCategoryLabel":"Action Category","ActionCategoryOffensive":"Offensive","ActionNumber1":"One","ActionNumber2":"Two","ActionNumber3":"Three","ActionSkillRequirementLabel":"Requirement","ActionTypeAction":"Action","ActionTypeSingle":"Single Action","ActionTypeFree":"Free Action","ActionTypePassive":"Passive","ActionTypeReaction":"Reaction","ActionWeaponLabel":"Associated Weapon","Actions":{"Balance":{"Notes":{"criticalSuccess":"<b>Critical Success</b> You move up to your Speed.","success":"<b>Success</b> You move up to your Speed, treating it as difficult terrain (every 5 feet costs 10 feet of movement).","failure":"<b>Failure</b> You must remain stationary to keep your balance (wasting the action) or you fall. If you fall, your turn ends.","criticalFailure":"<b>Critical Failure</b> You fall and your turn ends."},"Title":"Balance"},"BonMot":{"Notes":{"criticalSuccess":"<b>Critical Success</b> The target is distracted and takes a –3 status penalty to Perception and Will saves for 1 minute. The target can end the effect early with a retort to your Bon Mot. This can either be a single action that has the concentrate trait or an appropriate skill action to frame their retort. The GM determines which skill actions qualify, though they must take at least 1 action. Typically, the retort needs to use a linguistic Charisma-based skill action. @Compendium[pf2e.feat-effects.CtrZFI3RV0yPNzTv]{Effect: Bon Mot (Critical Success)}","success":"<b>Success</b> The target is distracted and takes a –2 status penalty to Perception and Will saves for 1 minute. The target can end the effect early with a retort to your Bon Mot. This can either be a single action that has the concentrate trait or an appropriate skill action to frame their retort. The GM determines which skill actions qualify, though they must take at least 1 action. Typically, the retort needs to use a linguistic Charisma-based skill action. @Compendium[pf2e.feat-effects.GoSls6SKCFmSoDxT]{Effect: Bon Mot}","criticalFailure":"<b>Critical Failure</b> Your quip is atrocious. You take the same penalty an enemy would take had you succeeded. This ends after 1 minute or if you issue another Bon Mot and succeed. @Compendium[pf2e.feat-effects.GoSls6SKCFmSoDxT]{Effect: Bon Mot}"},"Title":"Bon Mot"},"Climb":{"Notes":{"criticalSuccess":"<b>Critical Success</b> You move up, across, or safely down the incline for 5 feet plus 5 feet per 20 feet of your land Speed (a total of 10 feet for most PCs).","success":"<b>Success</b> You move up, across, or safely down the incline for 5 feet per 20 feet of your land Speed (a total of 5 feet for most PCs, minimum 5 feet if your Speed is below 20 feet).","criticalFailure":"<b>Critical Failure</b> You fall. If you began the climb on stable ground, you fall and land @Compendium[pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}."},"Title":"Climb"},"Coerce":{"Notes":{"criticalSuccess":"<b>Critical Success</b> The target gives you the information you seek or agrees to follow your directives so long as they aren\'t likely to harm the target in any way. The target continues to comply for an amount of time determined by the GM but not exceeding 1 day, at which point the target becomes unfriendly (if they weren\'t already unfriendly or hostile). However, the target is too scared of you to retaliate—at least in the short term.","success":"<b>Success</b> As critical success, but once the target becomes unfriendly, they might decide to act against you—for example, by reporting you to the authorities or assisting your enemies.","failure":"<b>Failure</b> The target doesn\'t do what you say, and if they were not already unfriendly or hostile, they become unfriendly.","criticalFailure":"<b>Critical Failure</b> The target refuses to comply, becomes hostile if they weren\'t already, and can\'t be Coerced by you for at least 1 week."},"Title":"Coerce"},"Craft":{"SelectItemDialog":{"CancelButtonLabel":"Cancel","CraftButtonLabel":"Craft","DropItemZoneLabel":"Drag item here...","Title":"Select item to Craft"},"SelectSpellDialog":{"CraftButtonLabel":"Craft","Title":"Select Spell"},"Error":{"ItemReferenceMismatch":"Only accepts physical items for Craft from a compendium or the world\'s Item Directory."},"Notes":{"criticalSuccess":"<b>Critical Success</b> Your attempt is successful. Each additional day spent Crafting reduces the materials needed to complete the item by an amount based on your level + 1 and your proficiency rank in Crafting.","success":"<b>Success</b> Your attempt is successful. Each additional day spent Crafting reduces the materials needed to complete the item by an amount based on your level and your proficiency rank.","failure":"<b>Failure</b> You fail to complete the item. You can salvage the raw materials you supplied for their full value. If you want to try again, you must start over.","criticalFailure":"<b>Critical Failure</b> You fail to complete the item. You ruin 10% of the raw materials you supplied, but you can salvage the rest. If you want to try again, you must start over."},"Title":"Craft","Warning":{"NotPhysicalItem":"Specified item {item} is not a physical item.","MissingItem":"Unable to Craft unknown item with ID {uuid}.","CantAddItem":"Could not add items","InsufficientCoins":"Insufficient coins"},"Details":{"Discount":"Discount Per Day:","DaysForNoCost":"Days until no Additional Cost:","PayMaterials":"Pay {cost} Material Costs and Craft","PayFull":"Pay {cost} Full Costs and Craft","LostMaterials":"Lose {cost} of Materials"},"Information":{"PayAndReceive":"{actorName} pays {cost} crafting costs and receives {quantity}x {itemName}.","ReceiveItem":"{actorName} receives {quantity}x {itemName}.","LoseMaterials":"{actorName} loses {cost} of materials."}},"CreateADiversion":{"DistractingWords":"Create a Diversion - Distracting Words","Gesture":"Create a Diversion - Gesture","Notes":{"success":"<b>Success</b> You become @Compendium[pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} to each creature whose Perception DC is less than or equal to your result. (The hidden condition allows you to @Compendium[pf2e.actionspf2e.VMozDqMMuK5kpoX4]{Sneak} away.) This lasts until the end of your turn or until you do anything except Step or use the @Compendium[pf2e.actionspf2e.XMcnh4cSI32tljXa]{Hide} or the @Compendium[pf2e.actionspf2e.VMozDqMMuK5kpoX4]{Sneak} action of the Stealth skill. If you Strike a creature, the creature remains @Compendium[pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} against that attack, and you then become @Compendium[pf2e.conditionitems.1wQY3JYyhMYeeV2G]{Observed}. If you do anything else, you become @Compendium[pf2e.conditionitems.1wQY3JYyhMYeeV2G]{Observed} just before you act unless the GM determines otherwise.","failure":"<b>Failure</b> You don\'t divert the attention of any creatures whose Perception DC exceeds your result, and those creatures are aware you were trying to trick them."},"Trick":"Create a Diversion - Trick"},"Demoralize":{"Notes":{"criticalSuccess":"<b>Critical Success</b> The target becomes @Compendium[pf2e.conditionitems.Frightened]{Frightened 2}.","success":"<b>Success</b> The target becomes @Compendium[pf2e.conditionitems.Frightened]{Frightened 1}."},"Title":"Demoralize"},"Disarm":{"Notes":{"criticalSuccess":"<b>Critical Success</b> You knock the item out of the opponent\'s grasp. It falls to the ground in the opponent\'s space.","success":"<b>Success</b> You weaken your opponent\'s grasp on the item. Until the start of that creature\'s turn, attempts to Disarm the opponent of that item gain a +2 circumstance bonus, and the target takes a –2 circumstance penalty to attacks with the item or other checks requiring a firm grasp on the item.","criticalFailure":"<b>Critical Failure</b> You lose your balance and become @Compendium[pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} until the start of your next turn."},"Title":"Disarm"},"EncouragingWords":{"Title":"Encouraging Words","ContentMain":"Select a target DC. Remember that you can\'t attempt a heal above your proficiency. Attempting to do so will downgrade the DC and amount healed to the highest you\'re capable of.","ContentLabel1":"Diplomacy DC:","ContentLabel2":"DC Modifier:","ContentOption1":"Trained DC 15","ContentOption2":"Expert DC 20, +5 Stamina","ContentOption3":"Master DC 30, +15 Stamina","ContentOption4":"Legendary DC 40, +25 Stamina","BadArgs":"This action must be performed with exactly one character or NPC.","NotTrained":"{name} is not trained in Diplomacy and doesn\'t know how to use Encouraging Words.","StaminaNotEnabled":"The Stamina variant is not enabled.","CritSuccess":"Critical Success","Success":"Success","Failure":"Failure","CritFailure":"Critical Failure","Recovery":"Stamina Recovery","Damage":"Damage","Cancel":"Cancel"},"Feint":{"Notes":{"criticalSuccess":"<b>Critical Success</b> You throw your enemy\'s defenses against you entirely off. The target is @Compendium[pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} against melee attacks that you attempt against it until the end of your next turn.","success":"<b>Success</b> Your foe is fooled, but only momentarily. The target is @Compendium[pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} against the next melee attack that you attempt against it before the end of your current turn.","criticalFailure":"<b>Critical Failure</b> Your feint backfires. You are @Compendium[pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} against melee attacks the target attempts against you until the end of your next turn."},"Title":"Feint"},"ForceOpen":{"Notes":{"criticalSuccess":"<b>Critical Success</b> You open the door, window, container, or gate and can avoid damaging it in the process.","success":"<b>Success</b> You break the door, window, container, or gate open, and the door, window, container, or gate gains the @Compendium[pf2e.conditionitems.6dNUvdb1dhToNDj3]{Broken} condition. If it\'s especially sturdy, the GM might have it take damage but not be broken.","criticalFailure":"<b>Critical Failure</b> Your attempt jams the door, window, container, or gate shut, imposing a –2 circumstance penalty on future attempts to Force it Open."},"Title":"Force Open"},"GatherInformation":{"Notes":{"success":"<b>Success</b> You collect information about the individual or topic. The GM determines the specifics.","criticalFailure":"<b>Critical Failure</b> You collect incorrect information about the individual or topic."},"Title":"Gather Information"},"Grapple":{"Notes":{"criticalSuccess":"<b>Critical Success</b> Your opponent is @Compendium[pf2e.conditionitems.VcDeM8A5oI6VqhbM]{Restrained} until the end of your next turn unless you move or your opponent @Compendium[pf2e.actionspf2e.SkZAQRkLLkmBQNB9]{Escapes}.","success":"<b>Success</b> Your opponent is @Compendium[pf2e.conditionitems.kWc1fhmv9LBiTuei]{Grabbed} until the end of your next turn unless you move or your opponent @Compendium[pf2e.actionspf2e.SkZAQRkLLkmBQNB9]{Escapes}.","failure":"<b>Failure</b> You fail to grab your opponent. If you already had the opponent @Compendium[pf2e.conditionitems.kWc1fhmv9LBiTuei]{Grabbed} or @Compendium[pf2e.conditionitems.VcDeM8A5oI6VqhbM]{Restrained} using a Grapple, those conditions on that creature end.","criticalFailure":"<b>Critical Failure</b> If you already had the opponent @Compendium[pf2e.conditionitems.kWc1fhmv9LBiTuei]{Grabbed} or @Compendium[pf2e.conditionitems.VcDeM8A5oI6VqhbM]{Restrained}, it breaks free. Your target can either grab you, as if it succeeded at using the @Compendium[pf2e.actionspf2e.PMbdMWc2QroouFGD]{Grapple} action against you, or force you to fall and land @Compendium[pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}."},"Title":"Grapple"},"Hide":{"Notes":{"success":"<b>Success</b> If the creature could see you, you\'re now @Compendium[pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} from it instead of observed. If you were @Compendium[pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} from or @Compendium[pf2e.conditionitems.VRSef5y1LmL2Hkjf]{Undetected} by the creature, you retain that condition."},"Title":"Hide"},"HighJump":{"Notes":{"criticalSuccess":"<b>Critical Success</b> Increase the maximum vertical distance to 8 feet, or increase the maximum vertical distance to 5 feet and maximum horizontal distance to 10 feet.","success":"<b>Success</b> Increase the maximum vertical distance to 5 feet.","failure":"<b>Failure</b> You @Compendium[pf2e.actionspf2e.d5I6018Mci2SWokk]{Leap} normally.","criticalFailure":"<b>Critical Failure</b> You don\'t @Compendium[pf2e.actionspf2e.d5I6018Mci2SWokk]{Leap} at all, and instead you fall @Compendium[pf2e.conditionitems.j91X7x0XSomq8d60]{Prone} in your space."},"Title":"High Jump"},"Impersonate":{"Notes":{"success":"<b>Success</b> You trick the creature into thinking you\'re the person you\'re disguised as. You might have to attempt a new check if your behavior changes.","failure":"<b>Failure</b> The creature can tell you\'re not who you claim to be.","criticalFailure":"<b>Critical Failure</b> The creature can tell you\'re not who you claim to be, and it recognizes you if it would know you without a disguise."},"Title":"Impersonate"},"Lie":{"Notes":{"success":"<b>Success</b> The target believes your lie.","failure":"<b>Failure</b> The target doesn\'t believe your lie and gains a +4 circumstance bonus against your attempts to Lie for the duration of your conversation. The target is also more likely to be suspicious of you in the future."},"Title":"Lie"},"LongJump":{"Notes":{"success":"<b>Success</b> Increase the maximum horizontal distance you @Compendium[pf2e.actionspf2e.d5I6018Mci2SWokk]{Leap} to the desired distance.","failure":"<b>Failure</b> You @Compendium[pf2e.actionspf2e.d5I6018Mci2SWokk]{Leap} normally.","criticalFailure":"<b>Critical Failure</b> You @Compendium[pf2e.actionspf2e.d5I6018Mci2SWokk]{Leap} normally, but then fall and land @Compendium[pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}."},"Title":"Long Jump"},"MakeAnImpression":{"Notes":{"criticalSuccess":"<b>Critical Success</b> The target\'s attitude toward you improves by two steps.","success":"<b>Success</b> The target\'s attitude toward you improves by one step.","criticalFailure":"<b>Critical Failure</b> The target\'s attitude toward you decreases by one step."},"Title":"Make an Impression"},"ManeuverInFlight":{"Notes":{"success":"<b>Success</b> You succeed at the maneuver.","failure":"<b>Failure</b> Your maneuver fails. The GM chooses if you simply can\'t move or if some other detrimental effect happens. The outcome should be appropriate for the maneuver you attempted (for instance, being blown off course if you were trying to fly against a strong wind).","criticalFailure":"<b>Critical Failure</b> As failure, but the consequence is more dire."},"Title":"Maneuver in Flight"},"PickALock":{"Notes":{"criticalSuccess":"<b>Critical Success</b> You unlock the lock, or you achieve two successes toward opening a complex lock. You leave no trace of your tampering.","success":"<b>Success</b> You open the lock, or you achieve one success toward opening a complex lock.","criticalFailure":"<b>Critical Failure</b> You break your tools. Fixing them requires using Crafting to @Compendium[pf2e.actionspf2e.bT3skovyLUtP22ME]{Repair} them or else swapping in replacement picks (costing 3 sp, or 3 gp for infiltrator thieves\' tools)."},"Title":"Pick a Lock"},"RaiseAShield":{"SingleActionTitle":"Raise a Shield","ReactionTitle":"Reactive Shield","Content":"{actor} raises their shield.","BadArgs":"This action must be performed with exactly one character or NPC.","NoShieldEquipped":"{actor} must have a shield equipped.","ShieldIsBroken":"{actor}\'s {shield} is broken."},"Request":{"Notes":{"criticalSuccess":"<b>Critical Success</b> The target agrees to your request without qualifications.","success":"<b>Success</b> The target agrees to your request, but they might demand added provisions or alterations to the request.","failure":"<b>Failure</b> The target refuses the request, though they might propose an alternative that is less extreme.","criticalFailure":"<b>Critical Failure</b> Not only does the target refuse the request, but their attitude toward you decreases by one step due to the temerity of the request."},"Title":"Request"},"Seek":{"Notes":{"criticalSuccess":"<b>Critical Success</b> If you were searching for creatures, any @Compendium[pf2e.conditionitems.VRSef5y1LmL2Hkjf]{Undetected} or @Compendium[pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} creature you critically succeeded against becomes @Compendium[pf2e.conditionitems.1wQY3JYyhMYeeV2G]{Observed} by you. If you were searching for an object, you learn its location.","success":"<b>Success</b> If you were searching for creatures, any @Compendium[pf2e.conditionitems.VRSef5y1LmL2Hkjf]{Undetected} creature you succeeded against becomes @Compendium[pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} from you instead of @Compendium[pf2e.conditionitems.VRSef5y1LmL2Hkjf]{Undetected}, and any @Compendium[pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} creature you succeeded against becomes @Compendium[pf2e.conditionitems.1wQY3JYyhMYeeV2G]{Observed} by you. If you were searching for an object, you learn its location or get a clue to its whereabouts, as determined by the GM."},"Title":"Seek"},"SenseMotive":{"Notes":{"criticalSuccess":"<b>Critical Success</b> You determine the creature\'s true intentions and get a solid idea of any mental magic affecting it.","success":"<b>Success</b> You can tell whether the creature is behaving normally, but you don\'t know its exact intentions or what magic might be affecting it.","failure":"<b>Failure</b> You detect what a deceptive creature wants you to believe. If they\'re not being deceptive, you believe they\'re behaving normally.","criticalFailure":"<b>Critical Failure</b> You get a false sense of the creature\'s intentions."},"Title":"Sense Motive"},"ShieldBlock":{"SelectAShield":"Select a shield"},"Shove":{"Notes":{"criticalSuccess":"<b>Critical Success</b> You push your opponent up to 10 feet away from you. You can Stride after it, but you must move the same distance and in the same direction.","success":"<b>Success</b> You push your opponent back 5 feet. You can Stride after it, but you must move the same distance and in the same direction.","criticalFailure":"<b>Critical Failure</b> You lose your balance, fall, and land @Compendium[pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}."},"Title":"Shove"},"Sneak":{"Notes":{"success":"<b>Success</b> You\'re undetected by the creature during your movement and remain undetected by the creature at the end of it.","failure":"<b>Failure</b> A telltale sound or other sign gives your position away, though you still remain unseen. You\'re hidden from the creature throughout your movement and remain so","criticalFailure":"<b>Critical Failure</b> You\'re spotted! You\'re observed by the creature throughout your movement and remain so. If you\'re invisible and were hidden from the creature, instead of being observed you\'re hidden throughout your movement and remain so."},"Title":"Sneak"},"Squeeze":{"Notes":{"criticalSuccess":"<b>Critical Success</b> You squeeze through the tight space in 1 minute per 10 feet of squeezing.","success":"<b>Success</b> You squeeze through in 1 minute per 5 feet.","criticalFailure":"<b>Critical Failure</b> You become stuck in the tight space. While you\'re stuck, you can spend 1 minute attempting another Acrobatics check at the same DC. Any result on that check other than a critical failure causes you to become unstuck."},"Title":"Squeeze"},"SteelYourResolve":{"Title":"Steel Your Resolve","Content":"Spend a resolve point and regain stamina?","BadArgs":"This action must be performed with exactly one character or NPC.","StaminaNotEnabled":"The Stamina variant is not enabled.","NoStamina":"{name} is tired and needs to go to bed! No resolve points remaining.","RecoverStamina":"{name} has {ratio} SP and spends a resolve point, recovering half their maximum Stamina."},"Swim":{"Notes":{"criticalSuccess":"<b>Critical Success</b> You move through the water 10 feet, plus 5 feet per 20 feet of your land Speed (a total of 15 feet for most PCs).","success":"<b>Success</b> You move through the water 5 feet, plus 5 feet per 20 feet of your land Speed (a total of 10 feet for most PCs).","criticalFailure":"<b>Critical Failure</b> You make no progress, and if you\'re holding your breath, you lose 1 round of air."},"Title":"Swim"},"Trip":{"Notes":{"criticalSuccess":"<b>Critical Success</b> The target falls and lands @Compendium[pf2e.conditionitems.j91X7x0XSomq8d60]{Prone} and takes [[/r 1d6[bludgeoning] # Bludgeoning damage]]{1d6} bludgeoning damage.","success":"<b>Success</b> The target falls and lands @Compendium[pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}.","criticalFailure":"<b>Critical Failure</b> You lose your balance and fall and land @Compendium[pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}."},"Title":"Trip"},"TumbleThrough":{"Notes":{"success":"<b>Success</b> You move through the enemy\'s space, treating the squares in its space as difficult terrain (every 5 feet costs 10 feet of movement). If you don\'t have enough Speed to move all the way through its space, you get the same effect as a failure.","failure":"<b>Failure</b> Your movement ends, and you trigger reactions as if you had moved out of the square you started in."},"Title":"Tumble Through"},"WhirlingThrow":{"Notes":{"criticalSuccess":"<b>Critical Success</b> You throw the creature the desired distance and it lands @Compendium[pf2e.conditionitems.Prone]{Prone}.","success":"<b>Success</b> You throw the creature the desired distance.","failure":"<b>Failure</b> You don\'t throw the creature.","criticalFailure":"<b>Critical Failure</b> You don\'t throw the creature, and it\'s no longer @Compendium[pf2e.conditionitems.Grabbed]{Grabbed} or @Compendium[pf2e.conditionitems.Restrained]{Restrained} by you."},"Title":"Whirling Throw"}},"ActionsCheck":{"acrobatics":"Acrobatics Skill Check","arcana":"Arcana Skill Check","athletics":"Athletics Skill Check","crafting":"Crafting Skill Check","deception":"Deception Skill Check","diplomacy":"Diplomacy Skill Check","intimidation":"Intimidation Skill Check","medicine":"Medicine Skill Check","nature":"Nature Skill Check","occultism":"Occultism Skill Check","perception":"Perception Check","performance":"Performance Skill Check","religion":"Religion Skill Check","society":"Society Skill Check","stealth":"Stealth Skill Check","survival":"Survival Skill Check","thievery":"Thievery Skill Check"},"ActionsWarning":{"DeceptionUnknownVariant":"Unknown variant \'{variant}\' used for Deception, use either distracting words, gesture, or trick.","NoActor":"Select at least one token before rolling, or assign a default character."},"ActionsActionsHeader":"Actions","ActionsFreeActionsHeader":"Free Actions","ActionsReactionsHeader":"Reactions","ActiveEffects":{"Label":"Active Effects","Duration":{"Label":"Duration","Permanent":"Permanent","Second":"{quantity} second","Round":"{quantity} round","Turn":"{quantity} turn","Seconds":"{quantity} seconds","Rounds":"{quantity} rounds","Turns":"{quantity} turns"},"Controls":{"Label":"Controls","Disable":"Disable","Enable":"Enable","Edit":"Edit","Delete":"Delete"},"EnableAutomation":"Enable Automation","DisableAutomation":"Disable Automation"},"Actor":{"Character":{"AncestryClass":"{ancestry} {class}"},"Dead":"Dead","Hazard":{"Level":"Hazard {level}"},"NPC":{"IsLootableOnDeathLabel":"Make this NPC lootable on death"},"Plural":"Actors"},"ActorSizeGargantuan":"Gargantuan","ActorSizeHuge":"Huge","ActorSizeLarge":"Large","ActorSizeMedium":"Medium","ActorSizeSmall":"Small","ActorSizeTiny":"Tiny","AdamantineStrikes":"Adamantine Strikes","AddCoinsCombineStacksLabel":"Combine Stacks","AddCoinsTitle":"Add Coins","AddCombatProficiency":{"Title":"Add Combat Proficiency","Message":"Select a weapon group or base weapon"},"AddModifierTitle":"Add Modifier","RemoveModifierTitle":"Remove Modifier","AddShortLabel":"Add","AddSpellTitle":"Add Spell","AddSpellcastingEntryTitle":"Add Spellcasting Entry","AdditionalSkills":"Additional Skills","AdditionalLanguagePlusInt":"(plus Intelligence)","Age":"Age","AgeTitle":"The age of your character","Alignment":"Alignment","AlignmentCE":"Chaotic Evil","AlignmentCG":"Chaotic Good","AlignmentCN":"Chaotic Neutral","AlignmentLE":"Lawful Evil","AlignmentLG":"Lawful Good","AlignmentLN":"Lawful Neutral","AlignmentN":"Neutral","AlignmentNE":"Neutral Evil","AlignmentNG":"Neutral Good","AlignmentTitle":"Your alignment","AllSavesLabel":"All Saves","Ancestry":"Ancestry","AncestryFeatures":"Ancestry Features","AncestryHP":"Ancestry HP","AncestryTitle":"Your character\'s ancestry","AncestryFeatLevels":"Ancestry Feat Levels","AreaLabel":"Area","AreaSize10":"10 Foot","AreaSize100":"100 Foot","AreaSize120":"120 Foot","AreaSize15":"15 Foot","AreaSize20":"20 Foot","AreaSize30":"30 Foot","AreaSize40":"40 Foot","AreaSize45":"45 Foot","AreaSize5":"5 Foot","AreaSize50":"50 Foot","AreaSize60":"60 Foot","AreaSize75":"75 Foot","AreaSize80":"80 Foot","AreaSize90":"90 Foot","AreaTypeBurst":"Burst","AreaTypeCone":"Cone","AreaTypeEmanation":"Emanation","AreaTypeLine":"Line","ArmorArmorLabel":"AC Bonus","ArmorArmorTypeLabel":"Category","ArmorBaseLabel":"Base","ArmorCheckLabel":"Check Penalty","ArmorCheckPenalty":"Armor Check Penalty","ArmorClassBase":"Base Armor Class 10","ArmorClassLabel":"Armor Class","ArmorClassShortLabel":"AC","ArmorDexLabel":"Dex Modifier Cap","ArmorEquippedLabel":"Equipped","ArmorGreaterResilientRune":"Greater Resilient","ArmorGreaterStrikingRune":"Greater Striking","ArmorGroupChain":"Chain","ArmorGroupCloth":"Cloth","ArmorGroupComposite":"Composite","ArmorGroupLabel":"Group","ArmorGroupLeather":"Leather","ArmorGroupPlate":"Plate","ArmorMajorResilientRune":"Major Resilient","ArmorMajorStrikingRune":"Major Striking","ArmorPotencyRune1":"Armor Potency (+1)","ArmorPotencyRune2":"Armor Potency (+2)","ArmorPotencyRune3":"Armor Potency (+3)","ArmorPotencyRune4":"Armor Potency (+4)","ArmorPropertyRuneAcidResistant":"Acid-Resistant","ArmorPropertyRuneAntimagic":"Antimagic","ArmorPropertyRuneBitter":"Bitter","ArmorPropertyRuneColdResistant":"Cold-Resistant","ArmorPropertyRuneDeathless":"Deathless","ArmorPropertyRuneDread":"Dread","ArmorPropertyRuneElectricityResistant":"Electricity-Resistant","ArmorPropertyRuneEthereal":"Ethereal","ArmorPropertyRuneFireResistant":"Fire-Resistant","ArmorPropertyRuneFortification":"Fortification","ArmorPropertyRuneGlamered":"Glamered","ArmorPropertyRuneGreaterAcidResistant":"Greater Acid-Resistant","ArmorPropertyRuneGreaterColdResistant":"Greater Cold-Resistant","ArmorPropertyRuneGreaterElectricityResistant":"Greater Electricity-Resistant","ArmorPropertyRuneGreaterFireResistant":"Greater Fire-Resistant","ArmorPropertyRuneGreaterFortification":"Greater Fortification","ArmorPropertyRuneGreaterInvisibility":"Greater Invisibility","ArmorPropertyRuneGreaterReady":"Greater Ready","ArmorPropertyRuneGreaterWinged":"Greater Winged","ArmorPropertyRuneGreaterShadow":"Greater Shadow","ArmorPropertyRuneGreaterSlick":"Greater Slick","ArmorPropertyRuneGreaterStanching":"Greater Stanching","ArmorPropertyRuneImplacable":"Implacable","ArmorPropertyRuneInvisibility":"Invisibility","ArmorPropertyRuneMajorShadow":"Major Shadow","ArmorPropertyRuneMajorSlick":"Major Slick","ArmorPropertyRuneMajorStanching":"Major Stanching","ArmorPropertyRuneReady":"Ready","ArmorPropertyRuneRockBraced":"Rock-Braced","ArmorPropertyRuneShadow":"Shadow","ArmorPropertyRuneSinisterKnight":"Sinister Knight","ArmorPropertyRuneSlick":"Slick","ArmorPropertyRuneSoaring":"Soaring","ArmorPropertyRuneStanching":"Stanching","ArmorPropertyRuneTrueStanching":"True Stanching","ArmorPropertyRuneWinged":"Winged","ArmorResilientRune":"Resilient","ArmorSpeedLabel":"Speed Penalty","ArmorStrengthLabel":"Strength Threshold","ArmorStrengthRequiredLabel":"Strength required","ArmorStrikingRune":"Striking","ArmorTypeHeavy":"Heavy Armor","ArmorTypeLight":"Light Armor","ArmorTypeMedium":"Medium Armor","ArmorTypeShield":"Shield","ArmorTypeUnarmored":"Unarmored","AttackEffectConstrict":"Constrict","AttackEffectGrab":"Grab","AttackEffectGreaterConstrict":"Improved Constrict","AttackEffectImprovedGrab":"Improved Grab","AttackEffectImprovedKnockdown":"Improved Knockdown","AttackEffectImprovedPush":"Improved Push","AttackEffectKnockdown":"Knockdown","AttackEffectPush":"Push","AttackEffectTrip":"Trip","AttackLabel":"Attack","AttackOutcome":{"criticalSuccess":"Critical Hit","success":"Hit","failure":"Miss","criticalFailure":"Critical Miss"},"AttitudeLabel":"Attitude","Attitudes":{"Hostile":"Hostile","Unfriendly":"Unfriendly","Indifferent":"Indifferent","Friendly":"Friendly","Helpful":"Helpful"},"AutomaticBonusProgression":{"attackPotency":"Attack Potency","defensePotency":"Defense Potency","devastatingAttacks":"Devastating Attacks","perceptionPotency":"Perception Potency","savePotency":"Save Potency"},"Background":"Background","BackgroundSkillFeats":"Skill Feats","BackgroundTitle":"Your character\'s background","BaseModifier":"Base Modifier","BaseWeapons":"Base Weapons","BattleForm":{"Attack":{"Antler":"Antler","Beak":"Beak","Beard":"Beard","Body":"Body","BoneShard":"Bone Shard","Boot":"Boot","Branch":"Branch","CubeFace":"Cube Face","Fangs":"Fangs","FireMote":"Fire Mote","Foot":"Foot","Foreleg":"Foreleg","Gust":"Gust","Hoof":"Hoof","Horn":"Horn","HolyMace":"Holy Mace","Leaf":"Leaf","Leg":"Leg","LightingLash":"Lightning Lash","Mandibles":"Mandibles","Moonbeam":"Moonbeam","PiercingHymn":"Piercing Hymn","Pincer":"Pincer","Pseudopod":"Pseudopod","Rock":"Rock","Stinger":"Stinger","Sunbeam":"Sunbeam","Tail":"Tail","Talon":"Talon","Tendril":"Tendril","Tentacle":"Tentacle","TentacleArm":"Tentacle Arm","Tongue":"Tongue","Vine":"Vine","Wave":"Wave","WaterSpout":"Water Spout","Wing":"Wing"}},"BestiaryBrowserSearchHint":"You can search for name or custom attributes. Possible searchable attributes are:<br> source, spellType, level, school, components, materials, target, range, time, duration, damage, damageType, save, concentration, ritual, ability and classes. <br>Example: \'fire, damage:d6\' to show all spells that have fire in their name and a d6 in the damage","Biography":"Biography","BiographyAllies":"Allies","BiographyAlliesTitle":"Your character\'s allies","BiographyAppearance":"Appearance","BiographyAppearanceTitle":"What your character looks like","BiographyAttitude":"Attitude","BiographyAttitudeTitle":"What your character behaves like","BiographyBackStory":"Backstory","BiographyBackStoryTitle":"Your character\'s story","BiographyBeliefs":"Beliefs","BiographyBeliefsTitle":"What your character believes","BiographyBirthPlace":"Birth Place","BiographyBirthPlaceTitle":"Where your character was born","BiographyCampaignNotesHeader":"Campaign Notes","BiographyCampaignNotes":"Notes","BiographyCampaignNotesTitle":"Anything you want","BiographyCatchphrases":"Catchphrases","BiographyCatchphrasesTitle":"Your character\'s catchphrases","BiographyDislikes":"Dislikes","BiographyDislikesTitle":"What your character dislikes","BiographyEnemies":"Enemies","BiographyEnemiesTitle":"Your character\'s enemies","BiographyLikes":"Likes","BiographyLikesTitle":"What your character likes","BiographyOrganizations":"Organizations","BiographyOrganizationsTitle":"Your character\'s organizations","BiographyPersonalityHeader":"Personality","BonusBulk":"Bonus Bulk Maximum","BonusBulkTitle":"Add or subtract from your bulk limit","BonusEncumbranceBulkLabel":"Add Encumbered Bulk","BonusLimitBulkLabel":"Add Max Bulk","BonusHPLabel":"Bonus HP","BonusHPperLevel":"Bonus HP per Level","BonusHPperLevelTitle":"Applies once for every level (CON mod is added separately)","BonusLabel":{"ability":"Ability Bonus","proficiency":"Proficiency Bonus","circumstance":"Circumstance Bonus","item":"Item Bonus","status":"Status Bonus","untyped":"Untyped Bonus"},"BonusSPLabel":"Bonus SP","BonusSPperLevel":"Bonus SP per Level","BonusSPperLevelTitle":"Applies once for every level (CON mod is added separately)","BrowserClearFilters":"Clear Filters","BrowserFilterAlignments":"Alignments","BrowserFilterAncestries":"Ancestries","BrowserFilterArmorFilters":"Armor Filters","BrowserFilterCastingTime":"Casting time","BrowserFilterCategory":"Feat Types","BrowserFilterClass":"Classes","BrowserFilterComplexity":"Hazard Complexities","BrowserFilterConsumable":"Consumable Type","BrowserFilterInventoryTypes":"Inventory Types","BrowserFilterLevels":"Levels","BrowserFilterProficiencyRequirements":"Proficiency Requirements","BrowserFilterSchools":"Schools","BrowserFilterRarities":"Rarities","BrowserFilterSizes":"Sizes","BrowserFilterSkills":"Skills","BrowserFilterSource":"Source","BrowserFilterSpellCategories":"Categories","BrowserFilterTraditions":"Traditions","BrowserFilterTraits":"Traits","BrowserFilterWeaponFilters":"Weapon Filters","BrowserFilterWeaponTraits":"Weapon Traits","BrowserSearchPlaceholder":"Search Text","BrowserSearchTitle":"Right click for guide","BrowserSortyByLabel":"Sort by","BrowserSortyByLevelLabel":"Level","BrowserSortyByPriceLabel":"Price","BrowserSortyByNameLabel":"Name","BulkCapacityLabel":"Holds Bulk Amount","BulkLabel":"Carried Bulk","BulkMaxLabel":"Max Bulk","BulkReductionLabel":"Reduce Bulk By","BulkShortLabel":"Bulk","BulkTypeLight":"Light","CapacityBarLabel":"Capacity","CastLabel":"Cast","CharacterDetails":"Character Details","CharacterLevelLabel":"Level","CharacterNamePlaceholder":"Character Name","CharacterTraits":"Character Traits","CharacterTraitsHeader":"Traits & Other Details","CheckOutcome":{"criticalSuccess":"Critical Success","success":"Success","failure":"Failure","criticalFailure":"Critical Failure"},"CircumstanceBonusShortLabel":"Circumstance","CircumstanceBonusTitle":"Circumstance Bonus","Class":"Class","ClassDCBase":"Base Class DC 10","ClassDCHeader":"Class DC","ClassDCLabel":"Class DC","ClassFeatLevels":"Class Feat Levels","ClassFeatures":"Class Features","ClassHP":"Class HP","ClassTitle":"Your character\'s class","ClickToSetInitiative":"Click to set initiative to selected token(s).","ClickToSetInitiativeContext":"Set as Initiative","CompendiumDirectory":{"Folders":{"bestiaries":"Bestiaries","bestiaries/campaign":"Campaign","bestiaries/rulebook":"Rulebook","bestiaries/pfs":"Pathfinder Society","bestiaries/other":"Other","character-building":"Character Building","character-building/feats":"Feats","effects":"Effects","equipment":"Equipment","pregenerated":"Pregenerated PCs"}},"CompendiumBrowser":{"AddedItem":"Added {item} to the selected actor(s).","AddedItemToCharacter":"Added {item} to {character}.","ProgressBar":{"LoadingPack":"Loading {pack}","LoadingComplete":"Loading complete"},"TabAction":"Actions","TabBestiary":"Bestiaries","TabEquipment":"Equipment","TabFeat":"Feats","TabHazard":"Hazards","TabSpell":"Spells","TabSettings":"Load Packs","TakeLabel":"Take Item","Title":"Compendium Browser"},"Condition":{"ActiveLabel":"Active","RemovableLabel":"Removable","PerpetualLabel":"Perpetual Condition","DurationTextLabel":"Duration","DurationNumberLabel":"Rounds","HasValueLabel":"Has Value","ValueLabel":"Value","ImmutableLabel":"Immutable","ImmutableTitle":"Value cannot be reduced."},"ConditionsLabel":"Conditions","ConditionTypeBlinded":"Blinded","ConditionTypeBroken":"Broken","ConditionTypeClumsy":"Clumsy","ConditionTypeConcealed":"Concealed","ConditionTypeConfused":"Confused","ConditionTypeControlled":"Controlled","ConditionTypeDazzled":"Dazzled","ConditionTypeDeafened":"Deafened","ConditionTypeDoomed":"Doomed","ConditionTypeDrained":"Drained","ConditionTypeDying":"Dying","ConditionTypeEncumbered":"Encumbered","ConditionTypeEnfeebled":"Enfeebled","ConditionTypeFascinated":"Fascinated","ConditionTypeFatigued":"Fatigued","ConditionTypeFlatFooted":"Flat-Footed","ConditionTypeFleeing":"Fleeing","ConditionTypeFriendly":"Friendly","ConditionTypeFrightened":"Frightened","ConditionTypeGrabbed":"Grabbed","ConditionTypeHelpful":"Helpful","ConditionTypeHidden":"Hidden","ConditionTypeHostile":"Hostile","ConditionTypeImmobilized":"Immobilized","ConditionTypeIndifferent":"Indifferent","ConditionTypeInvisible":"Invisible","ConditionTypeObserved":"Observed","ConditionTypeParalyzed":"Paralyzed","ConditionTypePersistent":"Persistent Damage","ConditionTypePersistentShort":"Persistent","ConditionTypePetrified":"Petrified","ConditionTypeProne":"Prone","ConditionTypeQuickened":"Quickened","ConditionTypeRestrained":"Restrained","ConditionTypeSickened":"Sickened","ConditionTypeSlowed":"Slowed","ConditionTypeStunned":"Stunned","ConditionTypeStupefied":"Stupefied","ConditionTypeUnconscious":"Unconscious","ConditionTypeUndetected":"Undetected","ConditionTypeUnfriendly":"Unfriendly","ConditionTypeUnnoticed":"Unnoticed","ConditionTypeWounded":"Wounded","ConsumableAutoDestroyLabel":"Auto Destroy","ConsumableAutoUseLabel":"Auto Use","ConsumableChargesLabel":"Charges","ConsumableConsumeLabel":"On Consume","ConsumableHeading":"Consumable","ConsumableNoChargesLabel":"No Charges","ConsumableTypeAmmo":"Ammunition","ConsumableTypeDrug":"Drug","ConsumableTypeElixir":"Elixir","ConsumableTypeLabel":"Consumable Type","ConsumableTypeMutagen":"Mutagen","ConsumableTypeOil":"Oil","ConsumableTypeOther":"Other","ConsumableTypePoison":"Poison","ConsumableTypePotion":"Potion","ConsumableTypeScroll":"Scroll","ConsumableTypeSnare":"Snare","ConsumableTypeTalisman":"Talisman","ConsumableTypeTool":"Tool","ConsumableTypeWand":"Wand","ConsumableUseLabel":"Use","ConsumableMessage":{"UseSingle":"Uses {name}","UseMulti":"Uses {name}, {current} remain","UseExhausted":"Exhausted {name}"},"ConsumableCompatibleLabel":"Compatible","ConsumableIncompatibleLabel":"Incompatible","CoreSkillsHeader":"Core Skills","Counteract":"Counteract","Counteractable":"Counteractable","CounteractDescription":{"Hint":"If you\'re counteracting an affliction, the DC is in the affliction\'s stat block. If it\'s a spell, use the caster\'s DC. The GM can also calculate a DC based on the target effect\'s level.","CritSuccess":"Counteract the target if its counteract level is {level} or less.","Success":"Counteract the target if its counteract level is {level} or less.","Failure":"Counteract the target if its counteract level is less than {level}.","CritFailure":"You fail to counteract the target."},"CraftingTab":{"Alchemical":{"AdvancedAlchemy":"Advanced Alchemy","AdvancedAlchemyLevel":"Advanced Alchemy Level:","InfusedReagents":"Infused Reagents:","ReagentCost":"Reagent Cost:","ToggleSignatureItem":"Toggle Signature Item","TotalCost":"Total Cost:"},"Alerts":{"CharacterLevel":"Item level exceeds character level.","ItemMissingTraits":"Item is not compatible with crafting entry trait requirements, must match one of: {traits}","MaxItemLevel":"Item level exceeds maximum item level for entry.","MissingReagents":"Insufficient infused reagents to complete daily crafting."},"CraftQuantityTitle":"Quantity","ExpendFormula":"Expend Formula","ToggleFreeCrafting":"Toggle Free Crafting","UndeletableTooltip":"This crafting formula is part of another item and cannot be individually deleted."},"CraftDCTitle":"DC","CraftItemTitle":"Craft","CreateActionTitle":"Create Action","CreateAttackTitle":"Create Attack","CreateFeatTitle":"Create Feat","CreateFormulaTitle":"Create Formula","CreateItemTitle":"Create Item","CreateLabelUniversal":"Create","CreateSkillTitle":"Create Skill","CreateSpellTitle":"Create Spell","CreatureStatisticDC":{"ac":"{creature} AC: {dc}","deception":"{creature} Deception DC: {dc}","fortitude":"{creature} Fortitude DC: {dc}","perception":"{creature} Perception DC: {dc}","reflex":"{creature} Reflex DC: {dc}","stealth":"{creature} Stealth DC: {dc}","will":"{creature} Will DC: {dc}"},"CritFailure":"<strong>Critical Failure</strong>","CritSuccess":"<strong>Critical Success</strong>","CriticalDamageLabel":"Critical","CriticalHitCardButtonTitle":"Draw a Critical Hit Card","CriticalFumbleCardButtonTitle":"Draw a Critical Fumble Card","CurrencyAbbreviations":{"cp":"cp","gp":"gp","pp":"pp","sp":"sp"},"CurrencyCP":"Copper","CurrencyGP":"Gold","CurrencyPP":"Platinum","CurrencySP":"Silver","CurrentHPTitle":"Your current hit points","CurrentHitPointsShortLabel":"Current HP","CurrentStaminaPointsShortLabel":"Current SP","CurrentStaminaTitle":"The amount of stamina points you have","Damage":{"NoDamageFormulaLabel":"No damage"},"DamageCategoriesLabel":"Damage Categories","DamageDieD10":"d10","DamageDieD12":"d12","DamageDieD4":"d4","DamageDieD6":"d6","DamageDieD8":"d8","DamageLabel":"Damage","DamageRoll":"Damage Roll","DCAdjustmentIncrediblyEasy":"incredibly easy","DCAdjustmentVeryEasy":"very easy","DCAdjustmentEasy":"easy","DCAdjustmentNormal":"normal","DCAdjustmentHard":"hard","DCAdjustmentVeryHard":"very hard","DCAdjustmentIncrediblyHard":"incredibly hard","DCBase":"Base DC 10","DCLabel":"DC: {dc}","DCWithValue":"DC {dc} {text}","DefencesLabel":"Defences","Deity":"Deity","DeityTitle":"Your deity","DeleteConditionQuestion":"Are you sure you want to delete {condition}?","DeleteConditionTitle":"Delete Condition","DeleteItemQuestion":"Are you sure you want to delete:","DeleteItemTitle":"Delete Item","DeleteShortLabel":"Delete","DeleteSpellcastEntryQuestion":"Are you sure you want to delete this spellcasting entry?","DeleteSpellcastEntryWarning":"WARNING: All spells in this spellcasting entry will also be deleted.","DenominationLabel":"Denomination","DetailsHeading":"Details","DragDropFeats":"Drag & Drop feats to add","Duration":{"PT1M":"minute","PT10M":"10 minutes","PT1H":"hour","PT24H":"24 hours","day":"day","P1W":"week"},"Encounter":{"Budget":{"EncounterBudget":"Encounter Budget","PartySize":"Party Size","PartyLevel":"Party Level","Threat":"Threat","Reward":"Reward","XPBudget":"XP Budget","XPNeeded":"XP Needed","Threats":{"trivial":"Trivial","low":"Low","moderate":"Moderate","severe":"Severe","extreme":"Extreme"}},"CreatureXPAndRole":{"CreatureXPAndRole":"Creature XP and Role","CreatureLevel":"Creature Level","SuggestedRole":"Suggested Role","CreatureLevels":{"0":"Any standard creature or low-threat boss","1":"Low- or moderate-threat boss","2":"Moderate- or severe-threat boss","3":"Severe- or extreme-threat boss","4":"Extreme-threat solo boss","-4":"Low-threat lackey","-3":"Low- or moderate-threat lackey","-2":"Any lackey or standard creature","-1":"Any standard creature"}},"ExcludingFromInitiative":"Excluding {type} {actor} from initiative.","HasNoInitiativeScore":"{actor} has no initiative score.","HideName":"Hide Name","NoActiveEncounter":"There is no active encounter.","NoTokenInScene":"{actor} has no token in the scene.","RevealName":"Reveal Name"},"EditHazardLabel":"Edit Hazard?","EditItemTitle":"Edit Item","EditLabel":"Edit?","EditNPCLabel":"Edit NPC?","EffectsLabel":"Effects","EffectPanel":{"AppliedBy":"Applied by: {condition-list}","Expired":"Expired","RemainingDuration":{"MultipleYears":"{years} years remaining","SingleYear":"1 year remaining","MultipleWeeks":"{weeks} weeks remaining","SingleWeek":"1 week remaining","MultipleDays":"{days} days remaining","MultipleHours":"{hours} hours remaining","MultipleMinutes":"{minutes} minutes remaining","MultipleRounds":"{rounds} rounds remaining","SingleRound":"1 round remaining","MultipleSeconds":"{seconds} seconds remaining","SingleSecond":"1 second remaining","ZeroRoundsExpireTurnEnd":"0 rounds remaining, expires end of initiative {initiative}","ZeroRoundsExpireTurnStart":"0 rounds remaining, expires start of initiative {initiative}"},"Sustained":"Sustained?","UnlimitedDuration":"Unlimited duration"},"EmptySlot":"Empty Slot","EquipmentEquippedLabel":"Equipped","EquippedBulkLabel":"Worn Bulk","EquippedSameBulkValue":"Same as Carried","ErrorMessage":{"ActorMustHaveToken":"Adding conditions to actors with no tokens is not currently supported.","CantMoveItemSource":"You are not allowed to move items from this character.","CantMoveItemDestination":"You are not allowed to move items to this character.","MinimumProfLevelSetByFeatures":"The selected proficiency is below proficiency set by features.","NotEnoughAmmo":"You don\'t have enough ammo to make this strike!","NoTokenSelected":"Select at least one token.","NoUpdatePermission":"You lack permission to update this actor."},"Ethnicity":"Ethnicity","ExpendSpellTitle":"Expend Spell","ExperimentalLabel":"Experimental","Failure":"<strong>Failure</strong>","FamiliarItemTypeError":"Only conditions and effects are currently supported by familiars.","FeatActionTypeLabel":"Action Type","FeatActionsLabel":"Number of Actions","FeatAncestryHeader":"Ancestry Feats","FeatArchetypeHeader":"Archetype Feats","FeatBackgroundShort":"BG","FeatBonusHeader":"Bonus Feats","FeatBrowserSearchHint":"You can search for name or custom attributes. Possible searchable attributes are:<br> source, spellType, level, school, components, materials, target, range, time, duration, damage, damageType, save, concentration, ritual, ability and classes. <br>Example: \'fire, damage:d6\' to show all spells that have fire in their name and a d6 in the damage","FeatClassHeader":"Class Feats","FeatDualClassHeader":"Dual Class Feats","FeatGeneralHeader":"General Feats","FeatPFSBoonHeader":"Society Boons","FeatDeityBoonHeader":"Deity Boons","FeatDeityboonHeader":"Deity Boons","FeatDeityBoonCursesHeader":"Deity Boons/Curses","FeatCurseHeader":"Curses","FeatLevelLabel":"Level","FeatPrereqLabel":"Prerequisites","FeatSkillHeader":"Skill Feats","FeatTypeAncestry":"Ancestry Feat","FeatTypeAncestryfeature":"Ancestry Feature","FeatTypeArchetype":"Archetype Feat","FeatTypeBonus":"Bonus Feat","FeatTypeClass":"Class Feat","FeatTypeClassfeature":"Class Feature","FeatTypeCurse":"Curse","FeatTypeDeityboon":"Deity Boon","FeatTypeGeneral":"General Feat","FeatTypeHeritage":"Heritage","FeatTypeLabel":"Feat Type","FeatTypePfsboon":"Society Boon","FeatTypeSkill":"Skill Feat","FeaturesAncestryHeader":"Ancestry Features","FeaturesClassHeader":"Class Features","Feet":"feet","FlatBonusHP":"Flat Bonus HP","FlatBonusHPTitle":"Adds a static number to your HP","FlatBonusHPperLevel":"Bonus HP / Lvl","FlatBonusSP":"Flat Bonus SP","FlatBonusSPTitle":"Adds a static number to your SP","FlatBonusSPperLevel":"Bonus SP / Lvl","FlatCheck":"Flat Check","Focus":{"label":"Focus Points","NotEnoughFocusPointsError":"You do not have enough focus points to cast this spell.","pointLabel":"Points","pointTitle":"Your remaining Focus Points","poolLabel":"Pool","poolTitle":"Your size of your Focus Pool","Outdated":"Old value of the focus pool as a reminder. Click to delete.","Previous":"Previous"},"Foot":"Foot","FormulaKnownTitle":"Known Formulas","FormulaListEmpty":"Empty (drag formula/item here)","FormulaPlaceholder":"Formula","FormulaSheet":{"DescriptionUnknown":"This formula is completely filled with drawings of small stick men, stains from some unknown liquid, non-sensical rhymes written in children\'s letters, and other seemingly random markings. It must have been made by goblins, and makes no sense to you.<hr><b>Note:</b> This formula is referencing a missing or invalid item.","NameEmpty":"Empty Formula","NamePrefix":"Formula of {name}","NameUnknown":"Unknown Formula"},"Frequency":{"per":"per"},"GenderPronoun":"Gender/Pronouns","GenderPronounTitle":"Your gender/pronouns","GeneralFeatLevels":"General Feat Levels","GreaterWeaponSpecialization":" Greater Weapon Specialization","HardnessLabel":"Hardness","HazardDescriptionLabel":"Description","HazardDescriptionTitle":"This explains what the hazard looks like and might include special rules","HazardDisableLabel":"Disable","HazardHardnessLabel":"Hardness","HazardHardnessTitle":"Hazard damage is reduced by this hardness value","HazardResetLabel":"Reset","HazardResetTitle":"If the hazard can be reset, that information is here","HazardRoutineLabel":"Routine","HazardRoutineTitle":"This section describes what a complex hazard does on each of its turns during an encounter; the number in parentheses after the word \\"Routine\\" indicates how many actions the hazard can use each turn. Simple hazards don\'t have this entry","HealingTypeTemporaryHealing":"Healing (Temporary)","Height":"Height","HeightTitle":"Your height","Heritage":"Heritage","HeritageTitle":"Your character\'s heritage","HeroPointsLabel":"Hero Points","HeroPointRatio":{"One":"1/{max} Hero Point","Many":"{value}/{max} Hero Points"},"HitPointsHeader":"Hit Points","HitPointsShortLabel":"HP","HitPointsDetailsLabel":"HP Details","HitPointsDetailsTitle":"Additional information related to Hit Points such as Fast Healing or Regeneration","ImageLabel":"Image","ImmunitiesLabel":"Immunities","InitiativeHeader":"Initiative bonus","InitativeIsNow":"{name}\'s Initiative is now {value}!","InitiativeLabel":"Initiative","InitiativeWithSkill":"Initiative: {skillName}","InlineButtons":{"TemplateLabel":"{unit}-foot {type}"},"InventoryArmorHeader":"Armor","InventoryBackpackHeader":"Containers","InventoryConsumablesHeader":"Consumables","InventoryEquipmentHeader":"Equipment","InventoryTreasureHeader":"Treasure","InventoryWeaponsHeader":"Weapons","InventroyBrowserSearchHint":"You can search for name or custom attributes. Possible searchable attributes are:<br> source, spellType, level, school, components, materials, target, range, time, duration, damage, damageType, save, concentration, ritual, ability and classes. <br>Example: \'fire, damage:d6\' to show all spells that have fire in their name and a d6 in the damage","InvestedLabel":"Invested","Item":{"Activation":{"Label":"Activation","Add":"Add Activation","Command":"command","CommandSheetLabel":"Command","Envision":"envision","EnvisionSheetLabel":"Envision","Interact":"Interact","Cast":"Cast a Spell"},"ABC":{"InvalidDrop":"{badType} cannot be dropped here (must be {goodType})"},"Ancestry":{"Vision":{"Label":"Vision","Normal":"Normal Vision"}},"Armor":{"Base":{"explorers-clothing":"Explorer\'s Clothing","padded-armor":"Padded Armor","leather-armor":"Leather Armor","studded-leather-armor":"Studded Leather Armor","chain-shirt":"Chain Shirt","hide-armor":"Hide Armor","scale-mail":"Scale Mail","chain-mail":"Chain Mail","breastplate":"Breastplate","splint-mail":"Splint Mail","half-plate":"Half Plate","full-plate":"Full Plate","hellknight-plate":"Hellknight Plate"}},"CannotAddType":"{type} items cannot be added to this actor.","Deity":{"Alignment":"Alignment","FollowerAlignments":"Follower Alignments","DivineAbility":"Divine Ability","DivineSkill":"Divine Skill","Edicts":"Edicts","Anathema":"Anathema","AreasOfConcern":"Areas of Concern","DivineFont":{"Label":"Divine Font","Harm":"Harm","Heal":"Heal"},"FavoredWeapon":"Favored Weapon","ClericSpells":"Cleric Spells"},"Effect":{"Sustained":"Sustained","Expiry":{"ExpiresOn":"Expires On","StartOfTurn":"Start of Turn","EndOfTurn":"End of Turn","EndOfCombat":"End of Combat"},"ShowTokenIcon":"Show token icon?"},"NameLabel":"Name","IconLabel":"Icon","SidebarSummary":"{type} Summary","Spells":{"PlaceMeasuredTemplate":"Place {size}-{unit} {shape}"},"Physical":{"LevelLabel":"Item {level}","PriceLabel":"Price: {price}"},"Plural":"Items","Weapon":{"FromMaterialAndRunes":"Precious materials and runes on this item have adjusted its {property} to {value}.","GeneratedName":{"Hint":"This is the name of the base weapon. For most weapons, the base is used to generate a fuller name, taking into account the material composition and/or runes. Giving this weapon a custom name or marking it as \\"specific\\" will prevent the generated name from appearing.","Potency":"+{potency} {base}","PotencyOneProperty":"+{potency} {property1} {base}","PotencyTwoProperties":"+{potency} {property1} {property2} {base}","PotencyThreeProperties":"+{potency} {property1} {property2} {base}","PotencyFourProperties":"+{potency} {property1} {property2} {property3} {property4} {base}","Material":"{material} {base}","PotencyMaterial":"+{potency} {material} {base}","PotencyOnePropertyMaterial":"+{potency} {property1} {material} {base}","PotencyTwoPropertiesMaterial":"+{potency} {property1} {property2} {material} {base}","PotencyThreePropertiesMaterial":"+{potency} {property1} {property2} {property3} {material} {base}","PotencyFourPropertiesMaterial":"+{potency} {property1} {property2} {property3} {property4} {material} {base}","PotencyStriking":"+{potency} {striking} {base}","PotencyStrikingMaterial":"+{potency} {striking} {material} {base}","PotencyStrikingOneProperty":"+{potency} {striking} {property1} {base}","PotencyStrikingOnePropertyMaterial":"+{potency} {striking} {property1} {material} {base}","PotencyStrikingTwoProperties":"+{potency} {striking} {property1} {property2} {base}","PotencyStrikingTwoPropertiesMaterial":"+{potency} {striking} {property1} {property2} {material} {base}","PotencyStrikingThreeProperties":"+{potency} {striking} {property1} {property2} {property3} {base}","PotencyStrikingThreePropertiesMaterial":"+{potency} {striking} {property1} {property2} {property3} {material} {base}","PotencyStrikingFourProperties":"+{potency} {striking} {property1} {property2} {property3} {property4} {base}","PotencyStrikingFourPropertiesMaterial":"+{potency} {striking} {property1} {property2} {property3} {property4} {material} {base}"},"HandsLabel":"Hands","MandatoryMelee":"This weapon has a trait that can only be used with melee weapons.","MaterialAndRunes":{"MaterialOption":"{type} ({grade})","Title":"Material Composition and Runes","Hint":"Precious material and runes allow for in-depth customization of a weapon. Besides improving its ability to harm enemies, they also affect the weapon\'s level, rarity, price, and name. To suppress a weapon\'s renaming, give it any custom name or mark it as a <i>specific magic weapon</i>."},"MeleeUsage":{"Label":"Melee Usage","Hint":"A combination weapon has a firearm form or usage and a melee weapon form or usage. Switching between the melee weapon usage and the firearm usage requires an Interact action. However, if your last action was a successful melee Strike against a foe using a combination weapon, you can make a firearm Strike with the combination weapon against that foe without fully switching to the firearm usage, firing the firearm just as you hit with the melee attack. In this case, the combination weapon returns to its melee usage after the firearm Strike.","StrikeLabel":{"Ranged":"Ranged Strike: {weapon}","Melee":"Melee Strike: {weapon}"}},"NoRangeMelee":"None (Melee)","OtherTags":{"Label":"Other Tags","Hint":"These are tags indicating classifications in 2nd Edition rules that lack explicit status/definition but are still yet heavily relied upon. Some may be automatically added when other properties are present."},"RangeIncrementN":"Range Increment {range} ft.","SpecificMagicWeapon":{"Label":"Specific Magic Weapon","Hint":"Marking this weapon as a <i>specific magic weapon</i> indicates that it does more than what its material composition and runes allow. The name, level, rarity, and price will no longer be overridden from a precious material or runes at the time of marking. Those material and runes will, however, serve as a baseline for level, rarity, and price adjustments from later upgrades."}}},"ItemBonus0":"0","ItemBonus1":"+1 Weapon Potency","ItemBonus2":"+2 Weapon Potency","ItemBonus3":"+3 Weapon Potency","ItemBonusLabel":"Item Bonus","ItemBonusMinus2":"Shoddy (-2)","ItemBonusShortLabel":"Item","ItemDescription":"Description","ItemDetails":"Details","ItemLevel":"{type} {level}","ItemMystified":"Mystified","ItemMystification":"Mystification","ItemNamePlaceholder":"Name","ItemNotSupportedOnActor":"Item not supported on actor","ItemRules":"Rules","ItemNewRuleElement":"New Rule Element","ItemNewSkillVariant":"New Skill Variant","ItemRemoveRuleElement":"Remove Rule Element","ItemTitle":"Item","ItemsLabel":"Items","JournalEntry":{"Plural":"Journal Entries"},"KeyAbility":"Key Ability Score","KeyAbilityLabel":"Key Ability","KitItems":"Items","KitWorldItem":"This item is not found in a Compendium and will not work in other worlds","LackCastConsumableCapability":"You lack the proficiency to use {name} and do not have the Trick Magic Item Feat","LanguageAbyssal":"Abyssal","LanguageAdlet":"Adlet","LanguageAkitonian":"Akitonian","LanguageAklo":"Aklo","LanguageAlghollthu":"Alghollthu","LanguageAmurrun":"Amurrun","LanguageAnadi":"Anadi","LanguageAndroffan":"Androffan","LanguageAnugobu":"Anugobu","LanguageAquan":"Aquan","LanguageArboreal":"Arboreal","LanguageArcadian":"Arcadian","LanguageAuran":"Auran","LanguageAzlanti":"Azlanti","LanguageBoggard":"Boggard","LanguageCalda":"Calda","LanguageCaligni":"Caligni","LanguageCelestial":"Celestial","LanguageDestrachan":"Destrachan","LanguageCommon":"Common","LanguageCyclops":"Cyclops","LanguageDaemonic":"Daemonic","LanguageDraconic":"Draconic","LanguageDruidic":"Druidic","LanguageDwarven":"Dwarven","LanguageDziriak":"D\'ziriak","LanguageFormian":"Formian","LanguageEkujae":"Ekujae shape-script","LanguageElven":"Elven","LanguageErutaki":"Erutaki","LanguageGarundi":"Garundi","LanguageGirtablilu":"Girtablilu","LanguageGnoll":"Gnoll","LanguageGnomish":"Gnomish","LanguageGoblin":"Goblin","LanguageGoloma":"Goloma","LanguageGrioth":"Grioth","LanguageGrippli":"Grippli","LanguageHalfling":"Halfling","LanguageHallit":"Hallit","LanguageIgnan":"Ignan","LanguageIkeshti":"Ikeshti","LanguageInfernal":"Infernal","LanguageIruxi":"Iruxi","LanguageJistkan":"Jistkan","LanguageJotun":"Jotun","LanguageJyoti":"Jyoti","LanguageKaava":"Kaava","LanguageKelish":"Kelish","LanguageKibwani":"Kibwani","LanguageKitsune":"Kitsune","LanguageKovintal":"Kovintal","LanguageLirgeni":"Lirgeni","LanguageMahwek":"Mahwek","LanguageMiGo":"Mi-Go","LanguageMinaten":"Minaten","LanguageMunavri":"Munavri","LanguageMwangi":"Mwangi","LanguageMzunu":"Mzunu","LanguageNagaji":"Nagaji","LanguageNecril":"Necril","LanguageOcotan":"Ocotan","LanguageOrcish":"Orcish","LanguageOsiriani":"Osiriani","LanguageProtean":"Protean","LanguageRasu":"Rasu","LanguageRequian":"Requian","LanguageRussian":"Russian","LanguageSamsaran":"Samsaran","LanguageSasquatch":"Sasquatch","LanguageSenzar":"Senzar","LanguageShadowtongue":"Shadowtongue","LanguageShae":"Shae","LanguageShisk":"Shisk","LanguageShoanti":"Shoanti","LanguageShobhad":"Shobhad","LanguageShoony":"Shoony","LanguageSkald":"Skald","LanguageSphinx":"Sphinx","LanguageStrix":"Strix","LanguageSylvan":"Sylvan","LanguageTaldane":"Taldane","LanguageTengu":"Tengu","LanguageTerran":"Terran","LanguageThassilonian":"Thassilonian","LanguageTien":"Tien","LanguageUndercommon":"Undercommon","LanguageUtopian":"Utopian","LanguageVanara":"Vanara","LanguageVarisian":"Varisian","LanguageVarki":"Varki","LanguageVishkanyan":"Vishkanyan","LanguageVudrani":"Vudrani","LanguageWyrwood":"Wyrwood","LanguageXanmba":"Xanmba","LanguageYithian":"Yithian","LanguageYsoki":"Ysoki","Languages":"Languages","LanguagesAdditional":"Additional Languages","LevelLabel":"Level","LevelN":"Level {level}","Level1":"Level 1","Level2":"Level 2","Level3":"Level 3","Level4":"Level 4","Level5":"Level 5","Level6":"Level 6","Level7":"Level 7","Level8":"Level 8","Level9":"Level 9","Level10":"Level 10","Level11":"Level 11","Level12":"Level 12","Level13":"Level 13","Level14":"Level 14","Level15":"Level 15","Level16":"Level 16","Level17":"Level 17","Level18":"Level 18","Level19":"Level 19","Level20":"Level 20","LicenseViewer":{"Label":"Legal Notice","LandingPageText":"Use the tabs above to read the legal information"},"Lore":"Lore","LoreProficiencyDisclaimer":"Informational only. Will not change the skill modifier.","LoreSkillsHeader":"Lore Skills","LoreSkillFormat":"{name} Lore","AddLoreSkill":"Add lore skill","NewLoreSkill":"New skill","Macro":{"Plural":"Macros"},"MacroActionNoActorError":"This actor no longer exists!","MacroActionNoActionError":"This action no longer exists!","MagicTraditionLabel":"Magic Tradition","MAPAbbreviationLabel":"MAP {penalty}","MartialAdvanced":"Advanced Weapons","MartialHeavy":"Heavy Armor","MartialLight":"Light Armor","MartialMartial":"Martial Weapons","MartialMedium":"Medium Armor","MartialSimple":"Simple Weapons","MartialSkillsHeader":"Weapon and Armor Proficiencies","MartialUnarmed":"Unarmed","MartialUnarmored":"Unarmored","MasterAbility":{"cha":"Master Charisma","con":"Master Constitution","dex":"Master Dexterity","int":"Master Intelligence","str":"Master Strength","wis":"Master Wisdom"},"MasterArmorClass":"Master Armor Class {base}","MasterLevel":"Master Level","MasterLevelHP":"Master Level","MasterSavingThrow":{"fortitude":"Master Fortitude","reflex":"Master Reflex","will":"Master Will"},"MaxHPTitle":"Your maximum hit points. This field is automatically calculated.","MaxHPTitleNPC":"Maximum hit points.","MaxHitPointsBaseLabel":"Base Max HP {base}","MaxHitPointsShortLabel":"Max HP","MaxStaminaPointsShortLabel":"Max SP","MaxStaminaTitle":"Your maximum stamina points","MaxHitPointsHeader":"Maximum Hit Points","MetalStrikes":"Metal Strikes","Migrations":{"Finished":"PF2E System Migration to version {version} completed!","Starting":"Applying PF2E System Migration to version {version}. Please be patient and do not close your game or shut down your server.","OnlyGMCanUse":"Only a gamemaster can use this tool.","WorldNotReady":"Game world not ready: try again in a few seconds.","OutsideSchemaRange":"The specified range is outside the system\'s schema version range (between {minimum} and {maximum}).","Summary":{"Documents":"Documents","HelpResources":"An unexpected error was encountered while migrating some actors or items. If you would like further assistance, feel free to report an issue at the <a href=\\"https://gitlab.com/hooking/foundry-vtt---pathfinder-2e/-/issues\\">system repository</a> or visit us on <a href=\\"https://discord.gg/SajryVzCyf\\">Discord</a> for community support.","Migrated":"Migrated","Remigrate":"Remigrate","Title":"Migration Summary","Total":"Total","Troubleshoot":{"Title":"System Troubleshooting","Hint":"Here you can run a remigration, which will attempt to automatically fix issues with actors and items."}},"Troubleshooting":"Troubleshooting"},"ModifierTitle":"Modifier","ModifiersTitle":"Modifiers","ModifierNamePlaceholder":"Name","ModifierTypeTitle":"[Type]","ModifierType":{"ability":"Ability","proficiency":"Proficiency","circumstance":"Circumstance","item":"Item","potency":"Potency","status":"Status","untyped":"Untyped"},"MultipleAttackPenalty":"Multiple Attack Penalty","MysticStrikes":"Mystical Strikes","Nationality":"Nationality","NPCAttackMelee":"Melee","NPCAttackRanged":"Ranged","NPCNotesLabel":"Notes/Conditions","NPCNotesTitle":"Write any notes for this NPC here.","NPCWeaponAddDamage":"Add Damage Part","NPCWeaponAttackEffect":"Additional Attack Effects","NPCWeaponAttackLabel":"Attack Modifier","NPCWeaponDamageLabel":"Damage Formula","NPCWeaponDamageTypeLabel":"Damage Type","NegligibleOption":"Negligible","NewLabel":"New","NewPlaceholders":{"Action":"New Action","Ancestry":"New Ancestry","Armor":"New Armor","Background":"New Background","Backpack":"New Container","Condition":"New Condition","Consumable":"New Consumable","Equipment":"New Equipment","Feat":"New Feat","Kit":"New Kit","Lore":"New Lore","Melee":"New Attack","Spell":"New Spell","SpellcastingEntry":"New Spellcasting Entry","Skill":"New Skill","Treasure":"New Treasure","Weapon":"New Weapon"},"NoAmmoLabel":"No Ammo","NoStackGroup":"Does not stack","NoneOption":"None","OneDegreeBetter":"one degree better","OneDegreeWorse":"one degree worse","TwoDegreesBetter":"two degrees better","TwoDegreesWorse":"two degrees worse","OpenActionBrowserTitle":"Open Action Browser","OpenFeatBrowserTitle":"Open Feat Browser","OpenInventoryBrowser":"Open Inventory Browser","OpenItemTitle":"Toggle Container Contents","OpenSpellBrowserTitle":"Open Spell Browser","OK":"OK","OrdinalNumber":"{value}{suffix}","OrdinalSuffixes":{"zero":"th","one":"st","two":"nd","few":"rd","other":"th","many":"th"},"OrphanedSpellsHeader":"Orphaned Spells (move to spellcasting entry above)","OverridesTitle":"Overrides","PenaltyLabel":{"ability":"Ability Penalty","proficiency":"Proficiency Penalty","circumstance":"Circumstance Penalty","item":"Item Penalty","status":"Status Penalty","untyped":"Untyped Penalty"},"PerceptionCheck":"Perception Check","PerceptionHeader":"Perception","PerceptionLabel":"Perception","PFS":{"CharacterNumber":"Character #","CurrentFaction":"Currently Slotted Faction","Fame":"Fame","LevelBump":"Level Bump","OrganizedPlayNumber":"Organized Play #","Reputation":"Reputation","Factions":{"EA":"Envoy\'s Alliance","GA":"Grand Archive","HH":"Horizon Hunters","VS":"Vigilant Seal","RO":"Radiant Oath","VW":"Verdant Wheel"},"School":{"None":"Field-Commissioned Agent","Scrolls":"Scrolls","Spells":"Spells","Swords":"Swords"}},"Playlist":{"Plural":"Playlists"},"PotencyRuneLabel":"Potency Rune","PreciousMaterialAdamantine":"Adamantine","PreciousMaterialColdIron":"Cold Iron","PreciousMaterialDarkwood":"Darkwood","PreciousMaterialDragonhide":"Dragonhide","PreciousMaterialGradeLabel":"Precious Material Grade","PreciousMaterialHighGrade":"High-Grade","PreciousMaterialLabel":"Precious Material","PreciousMaterialLowGrade":"Low-Grade","PreciousMaterialMithral":"Mithral","PreciousMaterialOrichalcum":"Orichalcum","PreciousMaterialSilver":"Silver","PreciousMaterialSovereignSteel":"Sovereign Steel","PreciousMaterialStandardGrade":"Standard-Grade","PreciousMaterialWarpglass":"Warpglass","PreparationTypeInnate":"Innate","PreparationTypePrepared":"Prepared","PreparationTypeSpontaneous":"Spontaneous","Prerequisite1":"Prerequisite 1","Prerequisite2":"Prerequisite 2","Prerequisite3":"Prerequisite 3","Prerequisite4":"Prerequisite 4","Prerequisite5":"Prerequisite 5","PriceLabel":"Price","ProficiencyLabel":"Proficiency","ProficiencyLevel0":"Untrained","ProficiencyLevel1":"Trained","ProficiencyLevel2":"Expert","ProficiencyLevel3":"Master","ProficiencyLevel4":"Legendary","ProficiencyRankLabel":"Prof","PropertyRuneLabel1":"Property Rune (1st)","PropertyRuneLabel2":"Property Rune (2nd)","PropertyRuneLabel3":"Property Rune (3rd)","PropertyRuneLabel4":"Property Rune (4th)","QuantityLabel":"Quantity","QuantityShortLabel":"Qty.","Rarity":"Rarity","Usage":"Usage","Reach":"Reach (feet)","RecallKnowledge":{"Label":"Recall Knowledge","Help":"You can attempt repeated Recall Knowledge actions to recall more information about a creature. These checks increase in difficulty as shown in the chart below. However, if you fail, or if no DC is listed, you can not attempt further Recall Knowledge checks against this creature.","Breakdown":"Attempts","BreakdownTitle":"Identify Creature Attempts","FirstAttempt":"1st DC","SecondAttempt":"2nd DC","ThirdAttempt":"3rd DC","FourthAttempt":"4th DC","FifthAttempt":"5th DC","SixthAttempt":"6th DC","SpecificLore":"Specific Lore","UnspecificLore":"Unspecific Lore","Skill":"Skill"},"Recovery":{"critFailure":"Increase your dying value by 2.","critSuccess":"Reduce your dying value by 2.","failure":"Increase your dying value by 1.","roll":"Click to roll your Recovery Check","rollingDescription":"Recovery Check versus a DC {dc} (dying {dying})","success":"Reduce your dying value by 1."},"RemoveCoinsByValueLabel":"Remove value, not specific type","RemoveCoinsTitle":"Remove Coins","RemoveCombatProficiency":{"Title":"Remove Combat Proficiency","Message":"Remove {proficiency} proficiency?"},"RemoveSpellcastingEntryTitle":"Remove Spellcasting Entry","Repost":"Post to Chat","RerollMenu":{"ErrorNoActor":"No actor is associated to the roll","ErrorCantDelete":"You are unable to delete the original roll.","HeroPoint":"Reroll using a Hero Point","KeepBest":"Reroll and keep the better result","KeepNew":"Reroll and keep the new result","KeepWorst":"Reroll and keep the worse result","MessageKeep":{"new":"Rerolled and kept the new result","best":"Rerolled and kept the better result","worst":"Rerolled and kept the worse result"},"MessageHeroPoint":"Rerolled using a Hero Point","WarnNoHeroPoint":"{name} has no Hero Points"},"ResiliencyRuneLabel":"Resilient Rune","ResistancesLabel":"Resistances","ResolvePointsShortLabel":"Resolve","ResolveTitle":"The amount of resolve points you have","ResultLabel":"Result","ResultOffset":"by {offset}","Roll":{"Modifier":"Modifier","Type":"Type","Fortune":"Fortune","FortuneTitle":"{title} Fortune","Misfortune":"Misfortune","MisfortuneTitle":"{title} Misfortune","None":"None","Roll":"Roll","Normal":"Normal","CriticalHit":"Critical Hit","Add":"Add","UntypedPenalty":"Untyped (penalty)"},"RollTable":{"Plural":"Rollable Tables"},"RollBonusPlaceholder":"e.g. +3 or +1d4","RollModeLabel":"Roll Mode","RuleElement":{"ActiveEffectLike":"ActiveEffect-Like","ActorTraits":"Actor Traits","AdjustDegreeOfSuccess":"Adjust Degree of Success","BaseSpeed":"Base Speed","BattleForm":"Battle Form","ChoiceSet":"Choice Set","CraftingEntry":"Crafting Entry","CraftingFormula":"Crafting Formula","CreatureSize":"Creature Size","EffectTarget":"Effect Target","DamageDice":"Damage Dice","DexterityModifierCap":"Dexterity Modifier Cap","FlatModifier":"Flat Modifier","FixedProficiency":"Fixed Proficiency","Immunity":"Immunity","LinkedProficiency":"Linked Proficiency","LoseHitPoints":"Lose Hit Points","MultipleAttackPenalty":"Multiple Attack Penalty","Note":"Note","Sense":"Sense","Strike":"Strike","Striking":"Striking","RecoveryCheckDC":"Recovery Check DC","Resistance":"Resistance","RollOption":"Roll Option","TempHP":"Temporary Hit Points","TempHPShortLabel":"Temp","ToggleProperty":"Toggle Property","TokenEffectIcon":"Token Effect Icon","TokenImage":"Token Image","TokenSize":"Token Size","Weakness":"Weakness","WeaponPotency":"Weapon Potency","NewRuleElement":"New Rule Element","Unrecognized":"Unrecognized Rule Element"},"Scene":{"Plural":"Scenes"},"SETTINGS":{"Settings":"Settings","Sidebar":{"Guide":"Guide","Changelog":"Changelog","Discord":"Discord"},"critFumbleCards":{"hint":"Automatically draw a critical hit or fumble card on appropriate rolls.","name":"Critical Hit and Fumble Cards"},"critFumbleCardButtons":{"hint":"Show critical hit and fumble card draw buttons on attack rolls.","name":"Critical Hit and Fumble Card Buttons"},"DeathIcon":{"Name":"Death Icon","Hint":"Set the overlay icon used to mark dead actors."},"JournalEntryTheme":{"Name":"Journal Entry Theme","Hint":"Set the style theme of journal entries in this world.","Foundry":"Foundry (Classic)","PF2E":"PF2e System"},"statusEffectKeepFoundry":{"hint":"Determines if you want to show the Foundry Icon set below the Pathfinder 2E icon set. This will trigger a reload.","name":"Status Icon Foundry Set"},"statusEffectShowCombatMessage":{"hint":"Show the status effects of the current combatant in chat each turn. If your game has more than one GM this setting should only be enabled for one of them.","name":"Show Status Effects in Combat"},"statusEffectType":{"blackWhite":"Black & white","default":"Full color","hint":"Determines which icon set is used for condition token effects. Thanks to errational#2007 for inspiration and Ediwir#7664 for the B&W tokens by Lorc@OpenGameArt.","legacy":"Legacy","name":"Condition Icon Set"},"Player":{"QuickRolls":{"DialogHint":"Always show this window before attempting checks."}},"User":{"EffectPanel":{"Name":"Show Effects Panel","Hint":"Show the Effects Panel when a token is selected."}},"WorldSchemaVersion":{"Name":"World Schema Version","Hint":"Records the schema version for documents in the PF2e system (don\'t modify this unless you know what you are doing)."},"DefaultTokenSettings":{"Name":"Default Prototype Token Settings","Hint":"Automatically set advised prototype token settings to newly created Actors."},"DefaultTokenSettingsName":{"Name":"Default Token Name display","Hint":"The setting for the default token\'s name display"},"DefaultTokenSettingsBar":{"Name":"Default Token Bar display","Hint":"The setting for the default token\'s bar display"},"IgnoreCoinBulk":{"Name":"Coins are weightless","Hint":"Toggle on to ignore currency weight."},"IdentifyMagicNotMatchingTraditionModifier":{"Name":"Identify Magic Skill Modifier","Hint":"Modifier to add to Identify Magic Skill DCs if the skill does not match the item\'s magic tradition","Choices":{"0":"0","2":"+2","5":"+5","10":"+10"}},"CritRule":{"Name":"Critical Damage Rule","Hint":"Use a different rule for doubling damage on a critical hit","Choices":{"Doubledamage":"Double the damage","Doubledice":"Double the number of dice"}},"CompendiumBrowserPacks":{"Name":"Compendium Browser Packs","Hint":"Settings to exclude packs from loading"},"EnabledRulesUI":{"Name":"Advanced Rule Element UI","Hint":"When enabled, show the advanced rule element UI on items. Be very careful with this, as it can break the actors and items if you are not sure what you are doing or make a mistake."},"PFSSheetTab":{"Name":"Pathfinder Society Sheet Tab","Hint":"Show the Pathfinder Society tab on character sheets."},"ResetChanges":"Reset Changes","Automation":{"Name":"Automation","Label":"Manage Automation","Hint":"Decide how much and what kinds of automation should apply to your game world.","RulesBasedVision":{"Name":"Rules-based vision","Hint":"Apply vision mechanics consistent with Pathfinder 2e rules. Enabling this setting will remove the ability to configure Unrestricted Global Vision as well as Token Sight radii.","ManagedBy":"Managed by <a>rules-based vision</a>."},"EffectExpiration":{"Name":"Effects auto-expire","Hint":"Effects automatically disable attached rule elements when the duration expires."},"ExperimentalDamageFormatting":{"Name":"Use experimental damage chat card formatting","Hint":"Parse damage roll data and decorate the resulting chat card with differently formatted roll formulas, damage types and categories, and roll notes for splash and persistent damage."},"ActorsDeadAtZero":{"Name":"NPCs dead at 0 HP","Hint":"Upon reaching zero hit points, NPCs are marked as dead.","Neither":"No","NPCsOnly":"Yes","PCsOnly":"PCs only","Both":"PCs and NPCs"},"LootableNPCs":{"Name":"NPCs are lootable","Hint":"Upon their demise, NPCs become lootable by players."}},"Homebrew":{"Name":"Homebrew Elements","Label":"Manage Homebrew Elements","Hint":"Add custom traits, languages, and other elements of a homebrew world.","Instructions":"These settings allow GMs to add traits, languages, and other elements to a homebrew world. To add such elements, simply type the desired terms in the appropriate fields, separated by commas or tab keystrokes. They will then appear in the appropriate places on actor and item sheets. To update a term, click it to make the desired changes.","ConfirmDelete":{"Title":"Delete Homebrew Element?","Message":"Delete Homebrew element <strong>{element}</strong>?"},"CreatureTraits":{"Name":"Creature Traits","Hint":"Traits that can be applied to any creature and some item types (e.g., Dragon, Gnome)"},"FeatTraits":{"Name":"Feat Traits","Hint":"Traits that can be applied to feats (e.g., Lineage, Monk) and actions"},"Languages":{"Name":"Languages","Hint":"Languages for characters to know or learn (e.g., Draconic, Gnomish)"},"MagicSchools":{"Name":"Magic Schools","Hint":"The magical schools to which all spells belong (e.g., Conjuration, Evocation)"},"SpellTraits":{"Name":"Spell Traits","Hint":" Traits that can be applied to any spell (e.g., Cursebound, Healing)"},"WeaponCategories":{"Name":"Weapon Categories","Hint":"The top level of Pathfinder 2e weapon taxonomy (e.g., Simple, Martial)"},"WeaponGroups":{"Name":"Weapon Groups","Hint":"The mid level of Pathfinder 2e weapon taxonomy (e.g, Crossbow, Sword)"},"BaseWeapons":{"Name":"Base Weapons","Hint":"The bottom level of Pathfinder 2e weapon taxonomy (e.g, Heavy Crossbow, Longsword)"},"WeaponTraits":{"Name":"Weapon Traits","Hint":"Traits applicable to weapons and NPC attacks"},"EquipmentTraits":{"Name":"Equipment Traits","Hint":"Traits applicable to equipment other than weapons"}},"Metagame":{"Name":"Metagame Information","Label":"Limit Metagame Information","Hint":"Limit what kinds of metagame information your players have access to.","TokenSetsNameVisibility":{"Name":"Tokens determine NPC name visibility","Hint":"If enabled, then for any NPC token whose nameplate isn\'t visible to players, its name will also be hidden from them in the encounter tracker and chat messages."},"PartyVision":{"Name":"Shared party vision","Hint":"If enabled, all players will mutually share token vision, regardless of permissions or token selection."},"SecretDamage":{"Name":"Hide damage taken message","Hint":"If enabled, only the GM will see the damage/healing taken messages that are generated by the damage chat cards for tokens not owned by a player."},"SecretCondition":{"Name":"Hide condition update message","Hint":"If enabled, only the GM will see the condition update and reminder messages that are generated for tokens not owned by a player."},"ShowDC":{"Name":"Show DCs on attacks and saves","Hint":"Decide who can see the DC of a check.","None":"None","Gm":"GM","Owner":"Owner","All":"All"},"ShowResults":{"Name":"Show results on attacks and saves","Hint":"Decide who can see the result of a check rolled from a chat card.","None":"None","Gm":"GM","Owner":"Owner","All":"All"}},"Tokens":{"Autoscale":{"Name":"Scale tokens according to size","Hint":"If enabled, tokens will be scaled to 1.0 or (if belonging to a small creature) 0.8"}},"WorldClock":{"Name":"World Clock","Label":"Configure World Clock","Hint":"Configure the appearance of the World Clock application.","DateTheme":{"Name":"Date Theme","Hint":"Set the theme of the World Clock application.","AR":"Golarion (Absalom Reckoning)","IC":"Golarion (Imperial Calendar)","AD":"Earth (Gregorian Calendar)","CE":"Unthemed (Gregorian Calendar)"},"TimeConvention":{"Name":"Time Convention","Hint":"Display either a 24-hour or 12-hour clock.","TwentyFour":"24-Hour","Twelve":"12-Hour"},"ShowClockButton":{"Name":"Show clock button","Hint":"Set whether to show the clock button at all (requires refresh)."},"PlayersCanView":{"Name":"Player Access","Hint":"Set whether players can view the World Clock."},"SyncDarkness":{"Name":"Synchronize Darkness (World Default)","Hint":"Set whether any scene\'s Darkness Level will reflect the time of day."},"SyncDarknessScene":{"Name":"Synchronize Darkness (Current Scene)","Hint":"Set whether this scene\'s Darkness Level will reflect the time of day.","Enabled":"Enabled","Disabled":"Disabled","Default":"World Default ({worldDefault})"},"ResetWorldTime":{"Name":"Reset World Date/Time","Button":"Reset","Hint":"Reset this world\'s time elapsed time to zero.","Confirm":{"Question":"Are you sure you want to reset this world\'s elapsed time?","Warning1":"Time-dependent game effects may be impacted.","Warning2":"This action cannot be undone."}},"DeferredToModule":"This setting is managed by the Calendar/Weather module."},"RAI":{"TreatWoundsAltSkills":{"Name":"Alternative Treat Wounds skills can roll against higher DCs.","Hint":"When enabled, characters with the Natural Medicine feat or Chirurgeon research field can roll against higher DCs."}},"Variant":{"Name":"Variant Rules","Label":"Toggle Variant Rules","Hint":"Enable and configure variant rules like Proficiency Without Level or the Stamina system.","Stamina":{"Title":"Stamina","Name":"Stamina Variant Rules","Hint":"Play with the stamina variant from Gamemastery Guide pg 200","Choices":{"0":"Do not use Stamina","1":"Use Stamina"}},"AncestryParagon":{"Title":"Ancestry Paragon","Name":"Ancestry Paragon Variant Rules","Hint":"Grant additional feat slots for the ancestry paragon variant from Gamemastery Guide pg 194"},"FreeArchetype":{"Title":"Free Archetype","Name":"Free Archetype Variant Rules","Hint":"Grant additional feat slots for the free archetype variant from Gamemastery Guide pg 194"},"DualClass":{"Title":"Dual Class","Name":"Dual Class Variant Rules","Hint":"Grant additional feat slots for the dual class variant from Gamemastery Guide pg 192. This variant only adds feat slots, and always adds a level 1 feat slot."},"AutomaticBonus":{"Title":"Automatic Bonus Progression","Name":"Automatic Bonus Variant Rules","Hint":"Reload Required: Support for Automatic Bonus Progression variant rules, except skills/apex ability.","Choices":{"noABP":"Use default rules","ABPRulesAsWritten":"Use variant rules as written","ABPFundamentalPotency":"Treat bonus progression as fundamental runes"}},"Proficiency":{"Title":"Proficiency without Level","Name":"Proficiency without Level Variant Rules","Hint":"Play with the proficiency without level variant from Gamemastery Guide pg 198.","Choices":{"ProficiencyWithLevel":"Use Default rules","ProficiencyWithoutLevel":"Use Variant rules"}},"UntrainedModifier":{"Name":"Untrained proficiency modifier","Hint":"Adjust to your liking to compliment the proficiency without level variant rules, recommended with variant rules is -2. Requires recalculation by reload or modifying a value per actor."},"TrainedModifier":{"Name":"Trained proficiency modifier","Hint":"Adjust to your liking to compliment the proficiency without level variant rules. Requires recalculation by reload or modifying a value per actor."},"ExpertModifier":{"Name":"Expert proficiency modifier","Hint":"Adjust to your liking to compliment the proficiency without level variant rules. Requires recalculation by reload or modifying a value per actor."},"MasterModifier":{"Name":"Master proficiency modifier","Hint":"Adjust to your liking to compliment the proficiency without level variant rules. Requires recalculation by reload or modifying a value per actor."},"LegendaryModifier":{"Name":"Legendary proficiency modifier","Hint":"Adjust to your liking to compliment the proficiency without level variant rules. Requires recalculation by reload or modifying a value per actor."},"Title":"Variant Rules Settings"}},"SaveDCLabel":"Save DC {dc} {type}","SaveDCLabelBasic":"Save DC {dc} basic {type}","SavesFortitude":"Fortitude","SavesFortitudeShort":"Fort","SavesHeader":"Saves","SavesReflex":"Reflex","SavesReflexShort":"Ref","SavesWill":"Will","SavesWillShort":"Will","SavingThrowWithName":"Saving Throw: {saveName}","ScoreTitle":"Score","ScrollFromSpell":"Scroll of {name} (Level {level})","ScrollWandPopup":{"10thLevelWand":"10th level wands don\'t exist","itemTypeLabel":"Consumable type: ","label":"Create a scroll or wand from the dropped spell","scroll":"Scroll","spellLevelLabel":"Heightened Level: ","submit":"Create item","title":"Create a scroll or wand","wand":"Wand"},"SellAllTreasureTitle":"Sell All Treasure","SellAllTreasureQuestion":"Convert all treasure items into coins","Senses":"Senses","SensesDarkvision":"Darkvision","SensesGreaterDarkvision":"Greater Darkvision","SensesLowLightVision":"Low-Light Vision","SensesEcholocation":"Echolocation","SensesLifesense":"Lifesense","SensesMotionsense":"Motionsense","SensesScent":"Scent","SensesTitle":"Your character\'s senses","SensesTremorsense":"Tremorsense","SensesWavesense":"Wavesense","Sense":{"Acuity":{"Label":"Acuity","Precise":"Precise","Imprecise":"Imprecise","Vague":"Vague"},"Label":"Senses","RangeLabel":"Range","NoRangeLimit":"No Limit","WithAcuity":"{sense} ({acuity})","WithAcuityAndRange":"{sense} ({acuity} {range} Ft)"},"SettingsColorBlue":"Bluegray","SettingsColorLabel":"UI Theme","SettingsColorNotes":"UI themes are most visible on the sidebar and chat cards.","SettingsColorOriginal":"Original","SettingsColorRed":"Darkred","SettingsColorFoundry-UI":"Work in Progress","SettingsQuickRollsLabel":"Show Roll Dialogs","SettingsQuickRollsNotes":"If disabled, dialogs to modify D20 rolls ad hoc will appear only a roll button is shift-clicked.","SettingsDataUriHighlightLabel":"Highlight images that use data: URI","SettingsDataUriHighlightNotes":"Images that use a data: URI are embedded in the character sheet. This has a negative performance impact on the character. If enabled, such images will be highlighted with a red border to make it easy to find and remove them.<br>This setting is only active for the current session.","SheetLabel":"{type} Sheet","SheetLabelDataEntry":"{type} Sheet (data entry)","SheetLabelNew":"{type} Sheet (preview)","SheetLabelOld":"{type} Sheet (legacy)","ShieldACBonusTitle":"The AC bonus of your shield (when you use the raise shield action)","ShieldBTLabel":"Broken","ShieldBrokenThresholdLabel":"Broken Threshold","ShieldBTShortLabel":"BT","ShieldBTTitle":"Your shield\'s Broken Threshold","ShieldCurrentLabel":"Shield HP","ShieldCurrentTitle":"Your shield\'s current Hit Points","ShieldHardnessLabel":"Hardness","ShieldHardnessShortLabel":"H","ShieldHardnessTitle":"Shield damage is reduced by this hardness value","ShieldLabel":"Shield","ShieldMaxLabel":"Max","ShieldMaxTitle":"Your shield\'s max Hit Points","SidebarAppearanceLabel":"Appearance","Size":"Size","SizeLabel":"Size","SkillAcr":"Acrobatics","SkillAcrobatics":"Acrobatics","SkillArc":"Arcana","SkillArcana":"Arcana","SkillAth":"Athletics","SkillAthletics":"Athletics","SkillCheckWithName":"Skill Check: {skillName}","SkillCra":"Crafting","SkillCrafting":"Crafting","SkillDec":"Deception","SkillDeception":"Deception","SkillDip":"Diplomacy","SkillDiplomacy":"Diplomacy","SkillIntimidation":"Intimidation","SkillItm":"Intimidation","SkillLabel":"Skill","SkillLore":"Lore","SkillMed":"Medicine","SkillMedicine":"Medicine","SkillNat":"Nature","SkillNature":"Nature","SkillOcc":"Occultism","SkillOccultism":"Occultism","SkillPerformance":"Performance","SkillPrf":"Performance","SkillRel":"Religion","SkillReligion":"Religion","SkillSoc":"Society","SkillSociety":"Society","SkillSte":"Stealth","SkillStealth":"Stealth","SkillSur":"Survival","SkillSurvival":"Survival","SkillThi":"Thievery","SkillThievery":"Thievery","SkillsLabel":"Skills","SkillPotencyHeader":"Skill Potencies","SkillFeatLevels":"Skill Feat Levels","SkillIncreaseLevels":"Skill Increase Levels","Source":{"AuthorLabel":"Author","AuthorPlaceholder":"Author","Label":"Source","SourcePlaceholder":"Book"},"SpecialLabel":"Special","SpecialSensesLabel":"Special Senses","SpecialSensesTitle":"Your character\'s special senses","Speed":"Speed","SpeedFeet":"Speed (feet)","SpeedBaseLabel":"Base {type} Speed","SpeedLabel":"{type} Speed","SpeedTitle":"Your character\'s speed","SpeedTypes":"Speed Types","SpeedTypesBurrow":"Burrow","SpeedTypesClimb":"Climb","SpeedTypesFly":"Fly","SpeedTypesLand":"Land","SpeedTypesSwim":"Swim","SpeedTypesTitle":"Alternative movement types","SpellAbilityLabel":"Spell Ability","SpellAbilityModLabel":"+ Mod","SpellArea":"Area: {areaSize} {areaUnit} {areaType}","SpellAttack":{"arcane":"Arcane Spell Attack","divine":"Divine Spell Attack","occult":"Occult Spell Attack","primal":"Primal Spell Attack","focus":"Focus Spell Attack"},"SpellAttackLabel":"Spell Attack","SpellBasicSaveOption":"Basic","SpellBrowserSearchHint":"You can search for name or custom attributes. Possible searchable attributes are:<br> source, spellType, level, school, components, materials, target, range, time, duration, damage, damageType, save, concentration, ritual, ability and classes. <br>Example: \'fire, damage:d6\' to show all spells that have fire in their name and a d6 in the damage","SpellCantripLabel":"Cantrip","SpellCastingFormat":"{preparationType} {traditionSpells}","SpellComponentF":"Focus","SpellComponentM":"Material","SpellComponentS":"Somatic","SpellComponentV":"Verbal","SpellComponentShortF":"F","SpellComponentShortM":"M","SpellComponentShortS":"S","SpellComponentShortV":"V","SpellComponentsLabel":"Components","SpellSlotEmpty":"Empty Slot (drag spell here)","SpellSlotNotEnoughError":"Cannot cast {name} at the {level}, not enough spell slots","SpellSlotExpendedError":"Cannot cast {name}, spell is already expended","SpellPrimaryCheckLabel":"Primary Check","SpellSecondaryChecksLabel":"Secondary Checks","SpellSecondaryCasters":"Secondary Casters","SpellConcentrationLabel":"Concentration","SpellCostLabel":"Cost","SpellDamageLabel":"Spell Damage","SpellDCBase":"Base Spell DC 10","SpellDurationLabel":"Duration","SpellFocusLabel":"Focus","SpellFlexibleLabel":"Flexible","SpellCollectionAdd":"Add to Spell Collection","SpellCollectionRemove":"Remove from Spell Collection","SpellLabel":"Spell","SpellLabelPlural":"Spells","SpellLevel1":"1st Level","SpellLevel10":"10th Level","SpellLevel2":"2nd Level","SpellLevel3":"3rd Level","SpellLevel4":"4th Level","SpellLevel5":"5th Level","SpellLevel6":"6th Level","SpellLevel7":"7th Level","SpellLevel8":"8th Level","SpellLevel9":"9th Level","SpellLevelLabel":"Spell Level","SpellLevelBase":"Base: {level}","SpellLevelHeightened":"Heightened: +{heightened}","SpellPreparedLabel":"Prepared","SpellRangeLabel":"Range","SpellRequirementsLabel":"Requirements","SpellRitualLabel":"Ritual","SpellSaveLabel":"Spell DC","SpellScalingInterval":{"Header":"Scaling (Interval)","Label":"Interval","Selection":"Heightened (+{interval})","Add":"Add Interval Scaling"},"SpellScalingLabel":"Scaling","SpellSchoolLabel":"School","SpellTargetLabel":"Targets","SpellTimeLabel":"Cast Time","SpellTraditionArcane":"Arcane","SpellTraditionDivine":"Divine","SpellTraditionOccult":"Occult","SpellTraditionPrimal":"Primal","SpellTraditionsLabel":"Traditions","SpellTypeAttack":"Spell Attack","SpellTypeFocus":"Focus","SpellTypeHeal":"Healing","SpellTypeRitual":"Ritual","SpellTypeLabel":"Spell Type","SpellTypeSave":"Saving Throw","SpellTypeUtility":"Utility","SpellCategorySpell":"Spell","SpellCategoryFocus":"Focus","SpellCategoryRitual":"Ritual","SpellCategoryFocusCantrip":"Focus Cantrip","SpellCategoryLabel":"Spell Category","SpellcastingTypeLabel":"Spellcasting Type","SpellsActionHeader":"Action","SpellsSchoolHeader":"School","StackGroupArrows":"Arrows","StackGroupRounds5":"Rounds (5)","StackGroupRounds10":"Rounds (10)","StackGroupBlowgunDarts":"Blowgun Darts","StackGroupBolts":"Bolts","StackGroupCoins":"Coins","StackGroupGems":"Gems","StackGroupLabel":"Stacks With","StackGroupRations":"Rations","StackGroupSacks":"Sacks","StackGroupSlingBullets":"Sling Bullets","StackGroupWoodenTaws":"Wooden Taws","StaminaPointsHeader":"Stamina Points","StaminaPointsShortLabel":"Stamina","StatusBonusShortLabel":"Status","StatusBonusTitle":"Status Bonus","StatusEffects":"{name}\'s status effects:","StealthLabel":"Stealth","StrikesLabel":"Strikes","Strike":{"Default":{"Description":"You attack with a weapon you&apos;re wielding or with an unarmed attack, targeting one creature within your reach (for a melee attack) or within range (for a ranged attack). Roll the attack roll for the weapon or unarmed attack you are using, and compare the result to the target creature&apos;s AC to determine the effect.","CriticalSuccess":"As success, but you deal double damage.","Success":"You deal damage according to the weapon or unarmed attack, including any modifiers, bonuses, and penalties you have to damage."},"Fist":{"Label":"Fist"},"Unarmed":{"Description":"You attack with an unarmed attack, targeting one creature within your reach. Roll the attack roll for the unarmed attack you are using, and compare the result to the target creature&apos;s AC to determine the effect.","Success":"You deal damage according to the unarmed attack, including any modifiers, bonuses, and penalties you have to damage."},"Melee":{"Description":"You attack with a weapon you&apos;re wielding, targeting one creature within your reach. Roll the attack roll for the weapon you are using, and compare the result to the target creature&apos;s AC to determine the effect.","Success":"You deal damage according to the weapon, including any modifiers, bonuses, and penalties you have to damage."},"Ranged":{"Description":"You attack with a weapon you&apos;re wielding, targeting one creature within range. Roll the attack roll for the weapon you are using, and compare the result to the target creature&apos;s AC to determine the effect.","Success":"You deal damage according to the weapon, including any modifiers, bonuses, and penalties you have to damage."},"Combined":{"Description":"You attack with a weapon you&apos;re wielding, targeting one creature within your reach (for a melee attack) or within range (for a ranged attack). Roll the attack roll for the weapon or unarmed attack you are using, and compare the result to the target creature&apos;s AC to determine the effect.","Success":"You deal damage according to the weapon, including any modifiers, bonuses, and penalties you have to damage."}},"StrikingRuneLabel":"Striking Rune","Success":"<strong>Success</strong>","TabActionsLabel":"Actions","TabActionsDowntimeLabel":"Downtime","TabActionsEncounterLabel":"Encounter","TabActionsExplorationLabel":"Exploration","TabCharacterLabel":"Character","TabCraftingLabel":"Crafting","TabDescriptionLabel":"Description","TabDetailsLabel":"Details","TabEffectsLabel":"Effects","TabFeatsLabel":"Feats","TabInventoryLabel":"Inventory","TabPathfinderSociety":"Pathfinder Society","TabSkillsLabel":"Proficiencies","TabSpellbookLabel":"Spellcasting","TargetFlatFootedLabel":"Enable abilities that require a flat-footed target","TempHPTitle":"The amount of temporary hit points you have","TempHitPointsShortLabel":"Temp HP","TemporaryItemToolTip":"This item is temporary and will expire after a duration or during daily preparations. It has no value and cannot be sold.","Time":{"Duration":"Duration","Unit":{"Seconds":"Seconds","Rounds":"Rounds","Minutes":"Minutes","Hours":"Hours","Days":"Days","Weeks":"Weeks","Unlimited":"Unlimited"}},"TogglesLabel":"Toggles","ToggleSignatureSpellTitle":"Toggle Signature Spell","ToggleSpellVisibilityLevelTitle":"Toggle a chapter of your Spellbook","ToggleSpellVisibilityTitle":"Toggle your Spellbook","ToggleSlotlessSpellLevelsTitle":"Toggle visibility of spell levels without slots in your Spellbook","ToggleUnreadyStrikes":"Toggle unequipped weapons","ToggleWithName":"Toggle: {property}","Token":{"Appearance":"Appearance","Size":{"Label":"Size","Dimensions":"Dimensions","LinkToActorSize":{"Label":"Link to Actor Size","Hint":"Keep this token\'s dimensions consistent with its actor\'s size category"}}},"TotalTreasure":"Total Treasure","TotalCoinage":"Total Coinage","TotalWealth":"Total Wealth","TraditionSpells":{"Arcane":"{tradition} Spells","Divine":"{tradition} Spells","Occult":"{tradition} Spells","Primal":"{tradition} Spells"},"TrainedSkillsLabel":"Trained Skills","Traits":"Traits","TraitAasimar":"Aasimar","TraitAberration":"Aberration","TraitAbjuration":"Abjuration","TraitAcid":"Acid","TraitAdditive1":"Additive 1","TraitAdditive2":"Additive 2","TraitAdditive3":"Additive 3","TraitAdjustment":"Adjustment","TraitAesir":"Aesir","TraitAeon":"Aeon","TraitAffixedToArmor":"Affixed to Armor","TraitAffixedToArmorOrAWeapon":"Affixed to Armor or a Weapon","TraitAffixedToArmorOrTravelersClothing":"Affixed to Armor or Travelers Clothing","TraitAffixededToCrossbowOrFirearm":"Affixed to Crossbow or Firearm","TraitAffixededToFirearm":"Affixed to Firearm","TraitAffixededToFirearmWithAReloadOf1":"Affixed to a Firearm With a Reload of 1","TraitAffixededToFirearmWithTheKickbackTrait":"Affixed to a Firearm With the Kickback Trait","TraitAffixedToHeadgear":"Affixed to Headgear","TraitAffixedToWeapon":"Affixed to a Weapon","TraitAffixedToARangedWeapon":"Affixed to a Ranged Weapon","TraitAffixedToAShield":"Affixed to a Shield","TraitAffixededToATwoHandedFirearmOrCrossbow":"Affixed to a Two-Handed Firearm or Crossbow","TraitAgathion":"Agathion","TraitAgile":"Agile","TraitAir":"Air","TraitAlchemical":"Alchemical","TraitAlchemist":"Alchemist","TraitAll":"All","TraitAmphibious":"Amphibious","TraitAnadi":"Anadi","TraitAndroid":"Android","TraitAngel":"Angel","TraitAnimal":"Animal","TraitAnugobu":"Anugobu","TraitApex":"Apex","TraitAphorite":"Aphorite","TraitAppliedToAWindPoweredVehicle":"Applied to a wind-powered vehicle","TraitAppliedToAnyItemOfLightOrNegligibleBulk":"Applied to any item of light or negligible Bulk","TraitAppliedToAnyVisibleArticleOfClothing":"Applied to any visible article of clothing","TraitAppliedToBeltCapeCloakOrScarf":"Applied to belt, cape, cloak, or scarf","TraitAppliedToBootsCapeCloakOrUmbrella":"Applied to boots, cape, cloak, or umbrella","TraitAppliedToDuelingCapeOrShield":"Applied to dueling cape or shield","TraitAppliedToShield":"Applied to shield","TraitAquatic":"Aquatic","TraitArcane":"Arcane","TraitArchetype":"Archetype","TraitArchon":"Archon","TraitAreaDamage":"Area Damage","TraitArtifact":"Artifact","TraitAstral":"Astral","TraitAsura":"Asura","TraitAttachedToShield":"Attached to Shield","TraitAttachedToCrossbowOrFirearm":"Attached to Crossbow or Firearm","TraitAttachedToCrossbowOrFirearmFiringMechanism":"Attached to Crossbow or Firearm (Firing Mechanism)","TraitAttachedToCrossbowOrFirearmScope":"Attached to Crossbow or Firearm (Scope)","TraitAttachedToFirearm":"Attached To Firearm","TraitAttachedToFirearmFiringMechanism":"Attached To Firearm (Firing Mechanism)","TraitAttachedToFirearmScope":"Attached To Firearm (Scope)","TraitAttachedToAThrownWeapon":"Attached to a Thrown Weapon","TraitAttack":"Attack","TraitAuditory":"Auditory","TraitAutomaton":"Automaton","TraitAura":"Aura","TraitAxeVulnerability":"Axe Vulnerability","TraitAzarketi":"Azarketi","TraitAzata":"Azata","TraitBackstabber":"Backstabber","TraitBackswing":"Backswing","TraitBarbarian":"Barbarian","TraitBard":"Bard","TraitBeast":"Beast","TraitBeastkin":"Beastkin","TraitBleed":"Bleed","TraitBludgeoning":"Bludgeoning","TraitBoggard":"Boggard","TraitBomb":"Bomb","TraitBrutal":"Brutal","TraitBulwark":"Bulwark","TraitCaligni":"Caligni","TraitCantrip":"Cantrip","TraitCapacity3":"Capacity 3","TraitCapacity4":"Capacity 4","TraitCapacity5":"Capacity 5","TraitCatalyst":"Catalyst","TraitCatfolk":"Catfolk","TraitCelestial":"Celestial","TraitChampion":"Champion","TraitChangeling":"Changeling","TraitChaotic":"Chaotic","TraitCharauKa":"Charau-ka","TraitCleric":"Cleric","TraitClimbing":"Climbing","TraitClockwork":"Clockwork","TraitCobbled":"Cobbled","TraitCold":"Cold","TraitColdiron":"Cold Iron","TraitCombination":"Combination","TraitComfort":"Comfort","TraitCommon":"Common","TraitComplex":"Complex","TraitCompanion":"Companion","TraitComposition":"Composition","TraitConcealable":"Concealable","TraitConcentrate":"Concentrate","TraitConcussive":"Concussive","TraitConfusion":"Confusion","TraitConjuration":"Conjuration","TraitConrasu":"Conrasu","TraitConstruct":"Construct","TraitConsecration":"Consecration","TraitConsumable":"Consumable","TraitContact":"Contact","TraitContingency":"Contingency","TraitContract":"Contract","TraitCouatl":"Couatl","TraitCriticalFusion":"Critical Fusion","TraitCriticalHits":"Critical Hits","TraitCurse":"Curse","TraitCursed":"Cursed","TraitCursebound":"Cursebound","TraitDaemon":"Daemon","TraitDarkness":"Darkness","TraitDeadlyD10":"Deadly d10","TraitDeadlyD12":"Deadly d12","TraitDeadlyD6":"Deadly d6","TraitDeadlyD8":"Deadly d8","TraitDeadly2D8":"Deadly 2d8","TraitDeadly2D10":"Deadly 2d10","TraitDeadly2D12":"Deadly 2d12","TraitDeadly3D8":"Deadly 3d8","TraitDeadly3D10":"Deadly 3d10","TraitDeadly3D12":"Deadly 3d12","TraitDeadly4D8":"Deadly 4d8","TraitDeadly4D10":"Deadly 4d10","TraitDeadly4D12":"Deadly 4d12","TraitDeath":"Death","TraitDeathEffects":"Death Effects","TraitDedication":"Dedication","TraitDemon":"Demon","TraitDero":"Dero","TraitDescriptionAasimar":"A creature with this trait is a member of the aasimar ancestry.","TraitDescriptionAbjuration":"Effects and magic items with this trait are associated with the abjuration school of magic, typically involving protection or wards.","TraitDescriptionAcid":"Effects with this trait deal acid damage. Creatures with this trait have a magical connection to acid.","TraitDescriptionAdditive":"Feats with the additive trait allow you to spend actions to add special substances to bombs or elixirs. You can add only one additive to a single alchemical item, and attempting to add another spoils the item. You can typically use actions with the additive trait only when you\'re creating an infused alchemical item, and some can be used only with the Quick Alchemy action. The additive trait is always followed by a level, such as additive 2. An additive adds its level to the level of the alchemical item you\'re modifying; the result is the new level of the mixture. The mixture\'s item level must be no higher than your advanced alchemy level","TraitDescriptionAeon":"These monitors are the self-styled defenders of reality. Traditional aeons have dualistic natures and forms, and they hold a dichotomy of interests, though axiomites and inevitables do not. Aeons other than axiomites and inevitables communicate via a strange telepathic hodgepodge of sensory sending called envisioning.","TraitDescriptionAesir":"Aesir are often-bellicose monitors of the chaotic planes, honing their skill in battle and preparing for a final confrontation at the end of the multiverse.","TraitDescriptionAgathion":"This family of animal-featured celestials is native to the plane of Nirvana. Most agathions are neutral good, have darkvision, and have a weakness to evil damage.","TraitDescriptionAgile":"The multiple attack penalty you take with this weapon on the second attack on your turn is -4 instead of -5, and -8 instead of -10 on the third and subsequent attacks in the turn.","TraitDescriptionAir":"Effects with the air trait either manipulate or conjure air. Those that manipulate air have no effect in a vacuum or an area without air. Creatures with this trait consist primarily of air or have a magical connection to that element.","TraitDescriptionAlchemical":"Alchemical items are powered by reactions of alchemical reagents. Alchemical items aren\'t magical and don\'t radiate a magical aura.","TraitDescriptionAlchemist":"This indicates abilities from the alchemist class.","TraitDescriptionAmphibious":"An amphibious creature can breathe in water and in air, even outside of its preferred environment, usually indefinitely but at least for hours. These creatures often have a swim Speed. Their bludgeoning and slashing unarmed Strikes don\'t take the usual –2 penalty for being underwater.","TraitDescriptionAnadi":"A reclusive people from Garund who resemble spiders and can assume human forms.","TraitDescriptionAnroid":"A synthetic humanoid ancestry created by artificial means. Most common in Numeria.","TraitDescriptionAphorite":"A type of planar scion descended from a being from Axis, the Plane of Law.","TraitDescriptionArcane":"This magic comes from the arcane tradition, which is built on logic and rationality. Anything with this trait is magical.","TraitDescriptionArchetype":"This feat belongs to an archetype.","TraitDescriptionAttached":"An attached weapon must be combined with another piece of gear to be used. The trait lists what type of item the weapon must be attached to. You must be wielding or wearing the item the weapon is attached to in order to attack with it. For example, shield spikes are attached to a shield, allowing you to attack with the spikes instead of a shield bash, but only if you\'re wielding the shield. An attached weapon is usually bolted onto or built into the item it\'s attached to, and typically an item can have only one weapon attached to it. An attached weapon can be affixed to an item with 10 minutes of work and a successful DC 10 Crafting check; this includes the time needed to remove the weapon from a previous item, if necessary. If an item is destroyed, its attached weapon can usually be salvaged.","TraitDescriptionAttack":"An ability with this trait involves an attack. For each attack you make beyond the first on your turn, you take a multiple attack penalty.","TraitDescriptionAuditory":"Auditory actions and effects rely on sound. An action with the auditory trait can be successfully performed only if the creature using the action can speak or otherwise produce the required sounds. A spell or effect with the auditory trait has its effect only if the target can hear it. This applies only to sound-based parts of the effect, as determined by the GM. This is different from a sonic effect, which still affects targets who can\'t hear it (such as deaf targets) as long as the effect itself makes sound.","TraitDescriptionAura":"An aura is an emanation that continually ebbs out from you, af ecting creatures within a certain radius. Aura can also refer to the magical signature of an item or a creature with a strong alignment.","TraitDescriptionAutomaton":"A creature with this trait is a member of the automaton ancestry.","TraitDescriptionAzarketi":"Amphibious humanoids who live among the seas of the Inner Sea region, said to have descended from the people of Azlant. Sometimes known as gillmen or Low Azlanti.","TraitDescriptionBackstabber":"When you hit a flat-footed creature, this weapon deals 1 precision damage in addition to its normal damage. The precision damage increases to 2 if the weapon is a +3 weapon.","TraitDescriptionBackswing":"You can use the momentum from a missed attack with this weapon to lead into your next attack. After missing with this weapon on your turn, you gain a +1 circumstance bonus to your next attack with this weapon before the end of your turn.","TraitDescriptionBarbarian":"This indicates abilities from the barbarian class.","TraitDescriptionBard":"This indicates abilities from the bard class.","TraitDescriptionBeastkin":"Humanoids that can partially or fully transform into animal forms.","TraitDescriptionBomb":"An alchemical bomb combines volatile alchemical components that explode when the bomb hits a creature or object. Most alchemical bombs deal damage, though some produce other effects.","TraitDescriptionBulwark":"The armor covers you so completely that it provides benefits against some damaging effects. On Reflex saves to avoid a damaging effect, such as a fireball, you add a +3 modifier instead of your Dexterity modifier.","TraitDescriptionBrutal":"A ranged attack with this trait uses its Strength modifier instead of Dexterity on the attack roll.","TraitDescriptionCantrip":"A spell you can cast at will that is automatically heightened to half your level rounded up.","TraitDescriptionCapacity":"Weapons that have the capacity trait typically have multiple barrels or chambers capable of containing a round of ammunition. Capacity is always accompanied by a number indicating the number of barrels or chambers. After a capacity weapon is fired, you can select the next loaded barrel or chamber as an Interact action that doesn\'t require a free hand. Each barrel or chamber can be reloaded after it\'s fired as a separate Interact action.","TraitDescriptionCatfolk":"A creature with this trait is a member of the catfolk ancestry.","TraitDescriptionChampion":"This indicates abilities from the champion class.","TraitDescriptionChangeling":"A creature with this trait is a member of the changeling ancestry.","TraitDescriptionChaotic":"Chaotic effects often manipulate energy from chaos-aligned Outer Planes and are anathema to lawful divine servants or divine servants of lawful deities. A creature with this trait is chaotic in alignment. An ability with this trait can be selected or used only by chaotic creatures.","TraitDescriptionClass":"Archetypes with the class trait fundamentally diverge from your class\'s specialties but still fit within the theme of your class. You can select a class archetype only if your class meets the criteria listed in the archetype\'s prerequisites. Class archetypes always alter or replace some of a class\'s static class features in addition to any new feats they offer. It might be possible to take a class archetype at 1st level if it alters or replaces some of the class\'s initial class features. The 1st-level ability is presented much like a class feature and includes the class archetype\'s prerequisites and rules on how it changes your class. If you select this ability, you must take that archetype\'s dedication feat at 2nd level, and you proceed normally afterward. You can never have more than one class archetype.","TraitDescriptionCleric":"This indicates abilities from the cleric class.","TraitDescriptionClockwork":"Clockworks are intricate, complex constructs that can be programmed to perform specific functions.","TraitDescriptionClimbing":"The hand wielding the weapon is available to Climb.","TraitDescriptionCobbled":"This firearm is cobbled together and likely to misfire. No matter how well you upkeep it, on a failed attack roll, the attack misses and you must roll a DC 5 flat check. If you fail this check, the weapon misfires.","TraitDescriptionCold":"Effects with this trait deal cold damage. Creatures with this trait have a connection to magical cold.","TraitDescriptionCombination":"This is a trait for weapons that combine the functionality of melee weapons and firearms in unique or unusual ways. A combination weapon has both a firearm form or usage and a melee weapon form or usage.","TraitDescriptionComfort":"The armor is so comfortable that you can rest normally while wearing it.","TraitDescriptionCommon":"Anything that doesn\'t list another rarity trait (uncommon, rare, or unique) automatically has the common trait. This rarity indicates that an ability, item, or spell is available to all players who meet the prerequisites for it. A creature of this rarity is generally known and can be summoned with the appropriate summon spell.","TraitDescriptionCompanion":"An item with this trait can be worn by an animal companion or similar creature. A companion can have up to two items invested.","TraitDescriptionComplex":"A hazard with this trait takes turns in an encounter.","TraitDescriptionComposition":"To cast a composition cantrip or focus spell, you usually use a type of Performance. If the spell includes a verbal component, you must use an auditory performance, and if it includes a somatic component, you must use a visual one. The spell gains all the traits of the performance you used. You can cast only one composition spell each turn, and you can have only one active at a time. If you cast a new composition spell, any ongoing effects from your previous composition spell end immediately.","TraitDescriptionConcealable":"This weapon is designed to be inconspicuous or easily concealed. You gain a +2 circumstance bonus to Stealth checks and DCs to hide or conceal a weapon with this trait.","TraitDescriptionConcentrate":"An action with this trait requires a degree of mental concentration and discipline.","TraitDescriptionConcussive":"These weapons smash as much as puncture. When determining a creature\'s resistance or immunity to damage from this weapon, use the weaker of the target\'s resistance or immunity to piercing or to bludgeoning. For instance, if the creature were immune to piercing and had no resistance or immunity to bludgeoning damage, it would take full damage from a concussive weapon. Resistance or immunity to all physical damage, or all damage, applies as normal.","TraitDescriptionConjuration":"Effects and magic items with this trait are associated with the conjuration school of magic, typically involving summoning, creation, teleportation, or moving things from place to place.","TraitDescriptionConrasu":"A people that are made of cosmic force given consciousness and housed within unique exoskeletons.","TraitDescriptionConsecration":"A consecration spell enhances an area for an extended period of time. A given area can have only a single consecration effect at a time. The new effect attempts to counteract any existing one in areas of overlap.ation","TraitDescriptionConsumable":"An item with this trait can be used only once. Unless stated otherwise, it\'s destroyed after activation. Consumable items include alchemical items and magical consumables such as scrolls and talismans. When a character creates consumable items, they can make them in batches of four.","TraitDescriptionContingency":"Spells with this trait grant you an action during the spell\'s effects, typically a reaction with a special trigger. They typically have a long duration, such as 24 hours. You can have only one spell with the contingency trait, or one contingency spell, active at a time. If you cast another spell with the contingency trait or contingency, the newer casting supersedes the older.","TraitDescriptionConstruct":"A construct is an artificial creature empowered by a force other than necromancy. Constructs are often mindless; they are immune to bleed damage, death effects, disease, healing, necromancy, nonlethal attacks, poison, and the doomed, drained, fatigued, paralyzed, sickened, and unconscious conditions; and they may have Hardness based on the materials used to construct their bodies. Constructs are not living creatures, nor are they undead. When reduced to 0 Hit Points, a construct creature is destroyed.","TraitDescriptionContact":"This poison is delivered by contact with the skin.","TraitDescriptionCriticalFusion":"Critical fusion is a new trait for combination weapons that grants you two additional options for the critical specialization effect when using the combination weapon\'s melee version to make a melee attack while the firearm is loaded. If you choose to use one of them, they replace the melee usage\'s normal critical specialization effect. First, you can discharge the firearm to create a loud bang and concussion, using the critical specialization effect for firearms instead of the melee weapon group\'s critical specialization effect. Second, you can choose to discharge the firearm to increase the critical hit\'s momentum or shoot the foe as you attack them in melee, dealing 2 additional damage per weapon damage die. Both of these options discharge the firearm, which typically means you have to reload it before firing it again.","TraitDescriptionCurse":"A curse is an effect that places some long-term affliction on a creature. Curses are always magical and are typically the result of a spell or trap.","TraitDescriptionCursed":"An item with this trait is cursed to cause trouble for its owner. A curse isn\'t detected when the item is identified, though a critical success reveals both the presence and exact nature of the curse. Cursed items can\'t be discarded once they\'ve been triggered or invested the first time. The item can be removed only if the curse is removed.","TraitDescriptionCursebound":"Spells with this trait increase the severity of your oracular curse when cast. Usually, only revelation spells have this trait. You can\'t cast a cursebound spell if you don\'t have an oracular curse.","TraitDescriptionDarkness":"Darkness effects extinguish non-magical light in the area, and can counteract less powerful magical light. You must usually target light magic with your darkness magic directly to counteract the light, but some darkness spells automatically attempt to counteract light.","TraitDescriptionDeadly":"On a critical hit, the weapon adds a weapon damage die of the listed size. Roll this after doubling the weapon\'s damage. This increases to two dice if the weapon has a greater striking rune and three dice if the weapon has a major striking rune. For instance, a rapier with a greater striking rune deals 2d8 extra piercing damage on a critical hit. An ability that changes the size of the weapon\'s normal damage dice doesn\'t change the size of its deadly die.","TraitDescriptionDeath":"An effect with the death trait kills you immediately if it reduces you to 0 HP. Some death effects can bring you closer to death or slay you outright without reducing you to 0 HP.","TraitDescriptionDedication":"You must select a feat with this trait to apply an archetype to your character.","TraitDescriptionDetection":"Effects with this trait attempt to determine the presence or location of a person, object, or aura.","TraitDescriptionDhampir":"A creature with this trait is a member of the dhampir ancestry.","TraitDescriptionDisarm":"You can use this weapon to Disarm with the Athletics skill even if you don\'t have a free hand. This uses the weapon\'s reach (if different from your own) and adds the weapon\'s item bonus to attack rolls (if any) as an item bonus to the Athletics check. If you critically fail a check to Disarm using the weapon, you can drop the weapon to take the effects of a failure instead of a critical failure. On a critical success, you still need a free hand if you want to take the item.","TraitDescriptionDisease":"An effect with this trait applies one or more diseases. A disease is typically an affliction.","TraitDescriptionDivination":"The divination school of magic typically involves obtaining or transferring information, or predicting events.","TraitDescriptionDivine":"This magic comes from the divine tradition, drawing power from deities or similar sources. Anything with this trait is magical.","TraitDescriptionDoubleBarrel":"This weapon has two barrels that are each loaded separately. You can fire both barrels of a double barrel weapon in a single Strike to increase the weapon damage die by one step. If the weapon has the fatal trait, this increases the fatal die by one step.","TraitDescriptionDowntime":"An activity with this trait takes a day or more, and can be used only during downtime.","TraitDescriptionDrug":"An item with this trait is a drug, a poison that conveys short-term benefits in addition to harmful side effects and long-term consequences. Each time a creature uses a given drug it must also attempt a saving throw against addiction to that drug.","TraitDescriptionDruid":"This indicates abilities from the druid class.","TraitDescriptionDuskwalker":"A creature with this trait has the duskwalker versatile heritage. Duskwalkers are planar scions infused with the supernatural energy of psychopomps. An ability with this trait can be used or selected only by duskwalkers.","TraitDescriptionDwarf":"A creature with this trait is a member of the dwarf ancestry. Dwarves are stout folk who often live underground and typically have darkvision. An ability with this trait can be used or selected only by dwarves. An item with this trait is created and used by dwarves.","TraitDescriptionEarth":"Effects with the earth trait either manipulate or conjure earth. Those that manipulate earth have no effect in an area without earth. Creatures with this trait consist primarily of earth or have a magical connection to that element.","TraitDescriptionElectricity":"Effects with this trait deal electricity damage. A creature with this trait has a magical connection to electricity.","TraitDescriptionElf":"A creature with this trait is a member of the elf ancestry. Elves are mysterious people with rich traditions of magic and scholarship who typically have low-light vision. An ability with this trait can be used or selected only by elves. A weapon with this trait is created and used by elves.","TraitDescriptionEmotion":"This effect alters a creature\'s emotions. Effects with this trait always have the mental trait as well. Creatures with special training or that have mechanical or artificial intelligence are immune to emotion effects.","TraitDescriptionEnchantment":"Effects and magic items with this trait are associated with the enchantment school of magic, typically involving mind control, emotion alteration, and other mental effects.","TraitDescriptionEnvironement":"A hazard with this trait is something dangerous that\'s part of the natural world, such as quicksand or harmful mold.","TraitDescriptionEvil":"Evil effects often manipulate energy from evil-aligned Outer Planes and are antithetical to good divine servants or divine servants of good deities. A creature with this trait is evil in alignment. An ability with this trait can be selected or used only by evil creatures.","TraitDescriptionEvocation":"Effects and magic items with this trait are associated with the evocation school of magic, typically involving energy and elemental forces.","TraitDescriptionExploration":"An activity with this trait takes more than a turn to use, and can usually be used only during exploration mode.","TraitDescriptionExtradimensional":"This effect or item creates an extradimensional space. An extradimensional effect placed inside another extradimensional space ceases to function until it is removed.","TraitDescriptionFatalAim":"It\'s possible to hold the stock of this weapon under one arm so you can fire it with a single hand, but if you use both hands, the weapon can make fatal attacks. When you wield the weapon in two hands, it gains the fatal trait with the listed damage die. Holding the weapon underarm stably enough to fire is significantly more complicated than just releasing one hand from the weapon, so switching between the two grips requires its own Interact action, not via Releasing or as part of reloading.","TraitDescriptionFatal":"The fatal trait includes a die size. On a critical hit, the weapon\'s damage die increases to that die size instead of the normal die size, and the weapon adds one additional damage die of the listed size.","TraitDescriptionFear":"Fear effects evoke the emotion of fear. Effects with this trait always have the mental and emotion traits as well.","TraitDescriptionFetchling":"A creature with this trait is a member of the fetchling ancestry. Fetchlings were once human, but generations of life on the Shadow Plane have transformed them.","TraitDescriptionFighter":"This indicates abilities from the fighter class.","TraitDescriptionFinesse":"You can use your Dexterity modifier instead of your Strength modifier on attack rolls using this melee weapon. You still use your Strength modifier when calculating damage.","TraitDescriptionFinisher":" Finishers are spectacular finishing moves. You can use a finisher only if you have panache, and you lose your panache immediately after performing a finisher. Once you use a finisher, you can\'t use actions that have the attack trait for the rest of your turn. Some finisher actions also grant an effect on a failure. If your finisher succeeds, you can choose to apply the failure effect instead.","TraitDescriptionFire":"Effects with the fire trait deal fire damage or either conjure or manipulate fire. Those that manipulate fire have no effect in an area without fire. Creatures with this trait consist primarily of fire or have a magical connection to that element.","TraitDescriptionFleshwarp":"A humanoid transformed so completely by outside forces that they are now a unique ancestry.","TraitDescriptionFlexible":"The armor is flexible enough that it doesn\'t hinder most actions. You don\'t apply its check penalty to Acrobatics or Athletics checks.","TraitDescriptionFlourish":"Flourish actions are actions that require too much exertion to perform a large number in a row. You can use only 1 action with the flourish trait per turn.","TraitDescriptionFocused":"An item with this trait can give you an additional Focus Point. This focus point is separate from your focus pool and doesn\'t count toward the cap on your focus pool. You can gain this benefit only if you have a focus pool, and there might be restrictions on how the point can be used. You can\'t gain more than 1 Focus Point per day from focused items.","TraitDescriptionForce":"Effects with this trait deal force damage or create objects made of pure magical force.","TraitDescriptionForceful":"This weapon becomes more dangerous as you build momentum. When you attack with it more than once on your turn, the second attack gains a circumstance bonus to damage equal to the number of weapon damage dice, and each subsequent attack gains a circumstance bonus to damage equal to double the number of weapon damage dice.","TraitDescriptionFortune":"A fortune effect beneficially alters how you roll your dice. You can never have more than one fortune effect alter a single roll. If multiple fortune effects would apply, you have to pick which to use. If a fortune effect and a misfortune effect would apply to the same roll, the two cancel each other out, and you roll normally.","TraitDescriptionFreeHand":"This weapon doesn\'t take up your hand, usually because it is built into your armor. A free-hand weapon can\'t be Disarmed. You can use the hand covered by your free-hand weapon to wield other items, perform manipulate actions, and so on. You can\'t attack with a free-hand weapon if you\'re wielding anything in that hand or otherwise using that hand. When you\'re not wielding anything and not otherwise using the hand, you can use abilities that require you to have a hand free as well as those that require you to be wielding a weapon in that hand. Each of your hands can have only one free-hand weapon on it.","TraitDescriptionGanzi":"A planar scion descended from a chaotic being of the Maelstrom, such as a protean.","TraitDescriptionGadget":"Gadgets are consumable technological inventions with innovative uses.","TraitDescriptionGenie":"The diverse families of genies hold positions of prominence on the Elemental Planes. They have powerful magical abilities.","TraitDescriptionGeniekin":"An umbrella term for planar scions descended from beings from the Elemental Planes.","TraitDescriptionGeneral":"A type of feat that any character can select, regardless of ancestry and class, as long as they meet the prerequisites. You can select a feat with this trait when your class grants a general feat.","TraitDescriptionGnoll":"Gnolls are humanoids that resemble hyenas.","TraitDescriptionGnome":"A creature with this trait is a member of the gnome ancestry. Gnomes are small people skilled at magic who seek out new experiences and usually have low-light vision. An ability with this trait can be used or selected only by gnomes. A weapon with this trait is created and used by gnomes.","TraitDescriptionGoblin":"A creature with this trait can come from multiple tribes of creatures, including goblins, hobgoblins, and bugbears. Goblins tend to have darkvision. An ability with this trait can be used or chosen only by goblins. A weapon with this trait is created and used by goblins.","TraitDescriptionGoloma":"Insular humanoids that bear countless eyes.","TraitDescriptionGood":"Good effects often manipulate energy from good-aligned Outer Planes and are antithetical to evil divine servants or divine servants of evil deities. A creature with this trait is good in alignment. An ability with this trait can be selected or used only by good creatures.","TraitDescriptionGrapple":"You can use this weapon to Grapple with the Athletics skill even if you don\'t have a free hand. This uses the weapon\'s reach (if different from your own) and adds the weapon\'s item bonus to attack rolls as an item bonus to the Athletics check. If you critically fail a check to Grapple using the weapon, you can drop the weapon to take the effects of a failure instead of a critical failure.","TraitDescriptionGrimoire":"Spellbooks are useful tools for any magic user to write down incantations and runes of power, but where most spellbooks are nothing more than ink on parchment, grimoires have absorbed the magic of the spells within—magic that knowledgeable spellcasters can use to augment their spells.","TraitDescriptionGrippli":"Gripplis are a family of frog-like humanoids","TraitDescriptionGunslinger":"This indicates abilities from the gunslinger class.","TraitDescriptionHalfElf":"A creature with this trait is part human and part elf. An ability with this trait can be used or selected only by half-elves.","TraitDescriptionHalfOrc":"A creature with this trait is part human and part orc. An ability with this trait can be used or selected only by half-orcs.","TraitDescriptionHalfling":"A creature with this trait is a member of the halfling ancestry. These small people are friendly wanderers considered to be lucky. An ability with this trait can be used or selected only by halflings. A weapon with this trait is created and used by halflings.","TraitDescriptionHampering":"A weapon with the hampering trait includes a disruptive limb or flange. You can use an Interact action to thrash the weapon in a square within the weapon\'s reach. That square becomes difficult terrain until you attack with the weapon, move, would otherwise stop thrashing it, or at the beginning of your next turn.","TraitDescriptionHaunt":"A hazard with this trait is a spiritual echo, often of someone with a tragic death. Putting a haunt to rest often involves resolving the haunt\'s unfinished business. A haunt that hasn\'t been properly put to rest always returns after a time.","TraitDescriptionHealing":"A healing effect restores a creature\'s body, typically by restoring Hit Points, but sometimes by removing diseases or other debilitating effects.","TraitDescriptionHex":"A hex is a type of focus spell a witch can cast.","TraitDescriptionHobgolin":"Hobgoblins are a sturdy, clever people with a propensity for militaristic order.","TraitDescriptionHuman":"A creature with this trait is a member of the human ancestry. Humans are a diverse array of people known for their adaptability. An ability with this trait can be used or selected only by humans.","TraitDescriptionHumanoid":"Humanoid creatures reason and act much like humans. They typically stand upright and have two arms and two legs.","TraitDescriptionIllusion":"Effects and magic items with this trait are associated with the illusion school of magic, typically involving false sensory stimuli.","TraitDescriptionIfrit":"A type of geniekin descended from a being from the Plane of Fire.","TraitDescriptionIncarnate":"A spell with the incarnate trait is similar in theme to spells that summon creatures, but it doesn\'t conjure a minion with the summoned trait. Instead, when summoned, the incarnate creature takes its Arrive action when you finish Casting the Spell. At the end of your next turn, the incarnate creature can either Step, Stride, or take the action for another movement type it has (such as Climb or Burrow), and then takes its Depart action. The spell then ends. The names of specific Arrive and Depart actions are listed in italics after the word “Arrive” or “Depart” respectively, along with any traits. A creature summoned by an incarnate spell acts in your interests, directs its effects away from you and your allies as much as possible, and might listen to your requests, but ultimately makes its own decisions. If the spell indicates that the incarnate makes a decision, the GM determines what the incarnate would do. It might even become more inclined to do precisely as you wish over multiple summonings. The incarnate is not fully a creature. It can\'t take any other actions, nor can it be targeted or harmed by Strikes, spells, or other effects unless they would be able to target or end a spell effect (such as dispel magic). It has a size for the purposes of determining its placement for effects, but it doesn\'t block movement. If applicable, its effects use your spell DCs and spell attack roll modifier.","TraitDescriptionIncapacitation":"An ability with this trait can take a character completely out of the fight or even kill them, and it\'s harder to use on a more powerful character. If a spell has the incapacitation trait, any creature of more than twice the spell\'s level treats the result of their check to prevent being incapacitated by the spell as one degree of success better, or the result of any check the spellcaster made to incapacitate them as one degree of success worse. If any other effect has the incapacitation trait, a creature of higher level than the item, creature, or hazard generating the effect gains the same benefits.","TraitDescriptionIncapacitationShort":"If the target level is higher than the ability level (or 2x spell level) treat the result as one degree better.","TraitDescriptionIncorporeal":"An incorporeal creature or object has no physical form. It can pass through solid objects, including walls. When inside an object, an incorporeal creature can\'t perceive, attack, or interact with anything outside the object, and if it starts its turn in an object, it is slowed 1. Corporeal creatures can pass through an incorporeal creature, but they can\'t end their movement in its space. An incorporeal creature can\'t attempt Strength-based checks against physical creatures or objects-only against incorporeal ones-unless those objects have the ghost touch property rune. Likewise, a corporeal creature can\'t attempt Strength-based checks against incorporeal creatures or objects. Incorporeal creatures usually have immunity to effects or conditions that require a physical body, like disease, poison, and precision damage. They usually have resistance against all damage (except force damage and damage from Strikes with the ghost touch property rune), with double the resistance against non-magical damage.","TraitDescriptionInfused":"You created an alchemical item with the infused trait using your infused reagents, and it has a limited time before it becomes inert. Any nonpermanent effects from your infused alchemical items, with the exception of afflictions such as slow-acting poisons, end when you make your daily preparations again.","TraitDescriptionIngested":"This poison is delivered when drunk or eaten.","TraitDescriptionInhaled":"This poison is delivered when breathed in.","TraitDescriptionInjection":"This weapon can be filled with an injury poison. Immediately after a successful attack with the weapon, you can inject the target with the loaded poison with a single Interact action. Refilling the weapon with a new substance requires three Interact actions, and uses both hands.","TraitDescriptionInjury":"This poison is delivered by damaging the recipient.","TraitDescriptionIntelligent":"An item with this trait is intelligent and has its own will and personality, as well as several statistics that most items don\'t have. Intelligent items can\'t be crafted by normal means, and they are always rare or unique.","TraitDescriptionInventor":"This indicates abilities from the inventor class.","TraitDescriptionInvested":"A character can wear only 10 magical items that have the invested trait. None of the magical effects of the item apply if the character hasn\'t invested it, nor can it be activated, though the character still gains any normal benefits from wearing the physical item (like a hat keeping rain off their head).","TraitDescriptionInvestigator":"This indicates abilities from the investigator class.","TraitDescriptionJoustingD6":"The weapon is suited for mounted combat with a harness or similar means. When mounted, if you moved at least 10 feet on the action before your attack, add a circumstance bonus to damage for that attack equal to the number of damage dice for the weapon. In addition, while mounted, you can wield the weapon in one hand, changing the damage die to the listed value.","TraitDescriptionKobold":"A creature with this trait is a member of the kobold ancestry.","TraitDescriptionKickback":"A kickback weapon is extra powerful and difficult to use due to its high recoil. A kickback weapon deals 1 additional damage with all attacks. Firing a kickback weapon gives a –2 circumstance penalty to the attack roll, but characters with 14 or more Strength ignore the penalty. Attaching a kickback weapon to a deployed bipod, tripod, or other stabilizer can lower or negate this penalty.","TraitDescriptionKitsune":"Shapeshifting humanoids whose true forms resemble foxes.","TraitDescriptionLawful":"Lawful effects often manipulate energy from law-aligned Outer Planes and are antithetical to chaotic divine servants or divine servants of chaotic deities. A creature with this trait is lawful in alignment. An ability with this trait can be selected or used by lawful creatures only.","TraitDescriptionLeshy":"A creature with this trait is a member of the leshy ancestry.","TraitDescriptionLight":"Light effects overcome non-magical darkness in the area, and can counteract magical darkness. You must usually target darkness magic with your light magic directly to counteract the darkness, but some light spells automatically attempt to counteract darkness.","TraitDescriptionLinguistic":"An effect with this trait depends on language comprehension. A linguistic effect that targets a creature works only if the target understands the language you are using.","TraitDescriptionLitany":"Litanies are special devotion spells, typically used by champions and requiring a single action, that usually give temporary immunity to further litanies.","TraitDescriptionLizardfolk":"These reptilian humanoids, also known as iruxi, are extremely adaptable and patient.","TraitDescriptionMagical":"Something with the magical trait is imbued with magical energies not tied to a specific tradition of magic. A magical item radiates a magic aura infused with its dominant school of magic. Some items or effects are closely tied to a particular tradition of magic. In these cases, the item has the arcane, divine, occult, or primal trait instead of the magical trait. Any of these traits indicate that the item is magical.","TraitDescriptionManipulate":"You must physically manipulate an item or make gestures to use an action with this trait. Creatures without a suitable appendage can\'t perform actions with this trait. Manipulate actions often trigger reactions.","TraitDescriptionMechanical":"A hazard with this trait is a constructed physical object.","TraitDescriptionMental":"A mental effect can alter the target\'s mind. It has no effect on an object or a mindless creature.","TraitDescriptionMetamagic":"Actions with the metamagic trait, usually from metamagic feats, tweak the properties of your spells. You must use a metamagic action directly before Casting the Spell you want to alter. If you use any action (including free actions and reactions) other than Cast a Spell directly after, you waste the benefits of the metamagic action. Any additional effects added by a metamagic action are part of the spell\'s effect, not of the metamagic action itself.","TraitDescriptionMindless":"A mindless creature has either programmed or rudimentary mental attributes. Most, if not all, of their mental ability modifiers are –5. They are immune to all mental effects.","TraitDescriptionMinion":"Minions are creatures that directly serve another creature. A creature with this trait can use only 2 actions per turn and can\'t use reactions. Your minion acts on your turn in combat, once per turn, when you spend an action to issue it commands. For an animal companion, you Command an Animal; for a minion that\'s a spell or magic item effect, like a summoned minion, you Sustain a Spell or Sustain an Activation; if not otherwise specified, you issue a verbal command, a single action with the auditory and concentrate traits. If given no commands, minions use no actions except to defend themselves or to escape obvious harm. If left unattended for long enough, typically 1 minute, mindless minions usually don\'t act, animals follow their instincts, and sapient minions act how they please.","TraitDescriptionMisfortune":"A misfortune effect detrimentally alters how you roll your dice. You can never have more than one misfortune effect alter a single roll. If multiple misfortune effects would apply, the GM decides which is worse and applies it. If a fortune effect and a misfortune effect would apply to the same roll, the two cancel each other out, and you roll normally.","TraitDescriptionModification":"A feat with this trait alters the construction of your innovation. If you have the reconfigure class feature, you can retrain such a feat more easily.","TraitDescriptionModular":"The weapon has multiple configurations that you can switch between using an Interact action. Typically, switching between configurations of a modular weapon allows it to deal different types of damage (listed in the trait, such as “modular B, P, or S”), though it\'s possible for a modular weapon\'s description to list more complicated configurations.","TraitDescriptionMonk":"Abilities with this trait are from the monk class. A weapon with this trait is primarily used by monks.","TraitDescriptionMonkWeapon":"Many monks learn to use these weapons.","TraitDescriptionMorph":"Effects that slightly alter a creature\'s form have the morph trait. Any Strikes specifically granted by a morph effect are magical. You can be affected by multiple morph spells at once, but if you morph the same body part more than once, the second morph effect attempts to counteract the first (in the same manner as two polymorph effects, described in that trait). Your morph effects might also end if you are polymorphed and the polymorph effect invalidates or overrides your morph effect. The GM determines which morph effects can be used together and which can\'t.","TraitDescriptionMounted":"Mounted siege weapons take up a certain size and space, and typically have statistics to allow them to be attacked. They\'re used for large-scale warfare.","TraitDescriptionMove":"An action with this trait involves moving from one space to another.","TraitDescriptionMulticlass":"Archetypes with the multiclass trait represent diversifying your training into another class\'s specialties. You can\'t select a multiclass archetype\'s dedication feat if you are a member of the class of the same name.","TraitDescriptionNecromancy":"Effects and magic items with this trait are associated with the necromancy school of magic, typically involving forces of life and death.","TraitDescriptionNegative":"Effects with this trait heal undead creatures with negative energy, deal negative damage to living creatures, or manipulate negative energy.","TraitDescriptionNoisy":"This armor is loud and likely to alert others to your presence when you\'re using the Avoid Notice exploration activity.","TraitDescriptionNone":"This trait has no description.","TraitDescriptionNonlethal":"Attacks with this weapon are nonlethal, and are used to knock creatures unconscious instead of kill them. You can use a nonlethal weapon to make a lethal attack with a -2 circumstance penalty.","TraitDescriptionOath":"Oaths add an additional tenet to your code. You can usually have only one feat with this trait.","TraitDescriptionOccult":"This magic comes from the occult tradition, calling upon bizarre and ephemeral mysteries. Anything with this trait is magical.","TraitDescriptionOlfactory":"An olfactory effect can affect only creatures that can smell it. This applies only to olfactory parts of the effect, as determined by the GM.","TraitDescriptionOpen":"These maneuvers work only as the first salvo on your turn. You can use an open only if you haven\'t used an action with the attack or open trait yet this turn.","TraitDescriptionOracle":"This indicates abilities from the oracle class.","TraitDescriptionOread":"A type of geniekin descended from a being from the Plane of Earth.","TraitDescriptionOrc":"A creature with this trait is a member of the orc ancestry. A weapon with this trait is a weapon which orcs craft and use.","TraitDescriptionParry":"This weapon can be used defensively to block attacks. While wielding this weapon, if your proficiency with it is trained or better, you can spend an Interact action to position your weapon defensively, gaining a +1 circumstance bonus to AC until the start of your next turn.","TraitDescriptionPoison":"An effect with this trait delivers a poison or deals poison damage. An item with this trait is poisonous and might cause an affliction.","TraitDescriptionPolymorph":"These effects transform the target into a new form. A target can\'t be under the effect of more than one polymorph effect at a time. If it comes under the effect of a second polymorph effect, the second polymorph effect attempts to counteract the first. If it succeeds, it takes effect, and if it fails, the spell has no effect on that target. Any Strikes specifically granted by a polymorph effect are magical. Unless otherwise stated, polymorph spells don\'t allow the target to take on the appearance of a specific individual creature, but rather just a generic creature of a general type or ancestry. If you take on a battle form with a polymorph spell, the special statistics can be adjusted only by circumstance bonuses, status bonuses, and penalties. Unless otherwise noted, the battle form prevents you from casting spells, speaking, and using most manipulate actions that require hands. (If there\'s doubt about whether you can use an action, the GM decides.) Your gear is absorbed into you; the constant abilities of your gear still function, but you can\'t activate any items.","TraitDescriptionPortable":"Portable siege weapons, such as battering rams, can be more easily carried and have a role in both warfare and smaller conflicts or exploration.","TraitDescriptionPoppet":"A creature with this trait is a member of the poppet ancestry.","TraitDescriptionPositive":"Effects with this trait heal living creatures with positive energy, deal positive energy damage to undead, or manipulate positive energy.","TraitDescriptionPossession":"Effects with this trait allow a creature to project its mind and spirit into a target. A creature immune to mental effects can\'t use a possession effect. While possessing a target, a possessor\'s true body is unconscious (and can\'t wake up normally), unless the possession effect allows the creature to physically enter the target. Whenever the target takes damage, the possessor takes half that amount of damage as mental damage. A possessor loses the benefits of any of its active spells or abilities that affect its physical body, though it gains the benefits of the target\'s active spells and abilities that affect their body. A possessor can use any of the target\'s abilities that are purely physical, and it can\'t use any of its own abilities except spells and purely mental abilities. The GM decides whether an ability is purely physical or purely mental. A possessor uses the target\'s attack modifier, AC, Fortitude save, Reflex save, Perception, and physical skills, and its own Will save, mental skills, spell attack roll, and spell DC; benefits of invested items apply where relevant (the possessor\'s invested items apply when using its own values, and the target\'s invested items apply when using the target\'s values). A possessor gains no benefit from casting spells that normally affect only the caster, since it isn\'t in its own body. The possessor must use its own actions to make the possessed creature act. If a possessor reaches 0 Hit Points through any combination of damage to its true body and mental damage from the possession, it is knocked out as normal and the possession immediately ends. If the target reaches 0 Hit Points first, the possessor can either fall unconscious with the body and continue the possession or end the effect as a free action and return to its body. If the target dies, the possession ends immediately and the possessor is stunned for 1 minute.","TraitDescriptionPrecious":"Valuable materials with special properties have the precious trait. They can be substituted for base materials when you Craft items.","TraitDescriptionPrediction":"Effects with this trait determine what is likely to happen in the near future. Most predictions are divinations.","TraitDescriptionPress":"Actions with this trait allow you to follow up earlier attacks. An action with the press trait can be used only if you are currently affected by a multiple attack penalty. You can\'t use a press action when it\'s not your turn, even if you use the Ready activity. Some actions with the press trait also grant an effect on a failure. The effects that are added on a failure don\'t apply on a critical failure. If your press action succeeds, you can choose to apply the failure effect instead. (For example, you may wish to do this when an attack deals no damage due to resistance.)","TraitDescriptionPrimal":"This magic comes from the primal tradition, connecting to the natural world and instinct. Anything with this trait is magical.","TraitDescriptionPropulsive":"You add half your Strength modifier (if positive) to damage rolls with a propulsive ranged weapon. If you have a negative Strength modifier, you add your full Strength modifier instead.","TraitDescriptionRage":"You must be raging to use abilities with the rage trait, and they end automatically when you stop raging.","TraitDescriptionRange":"These attacks will either list a finite range or a range increment, which follows the normal rules for range increments.","TraitDescriptionRangedTrip":"This weapon can be used to Trip with the Athletics skill at a distance up to the weapon\'s first range increment. The skill check takes a -2 circumstance penalty. You can add the weapon\'s item bonus to attack rolls as a bonus to the check. As with using a melee weapon to trip, a ranged trip doesn\'t deal any damage when used to Trip.","TraitDescriptionRanger":"This indicates abilities from the ranger class.","TraitDescriptionRare":"This rarity indicates that a rules element is very difficult to find in the game world. A rare feat, spell, item or the like is available to players only if the GM decides to include it in the game, typically through discovery during play. Creatures with this trait are rare. They typically can\'t be summoned. The DC of Recall Knowledge checks related to these creatures is increased by 5.","TraitDescriptionRatfolk":"A creature with this trait is a member of the ratfolk ancestry.","TraitDescriptionReach":"Natural attacks with this trait can be used to attack creatures up to the listed distance away instead of only adjacent creatures. Weapons with this trait are long and can be used to attack creatures up to 10 feet away instead of only adjacent creatures. For creatures that already have reach with the limb or limbs that wield the weapon, the weapon increases their reach by 5 feet.","TraitDescriptionReckless":"Actions with the reckless trait run the risk of the pilot losing control of a vehicle. When performing a reckless action, the pilot must first attempt an appropriate piloting check to keep control of the vehicle.","TraitDescriptionReload":"While all weapons need some amount of time to get into position, many ranged weapons also need to be loaded and reloaded. This entry indicates how many Interact actions it takes to reload such weapons. This can be 0 if drawing ammunition and firing the weapon are part of the same action. If an item takes 2 or more actions to reload, the GM determines whether they must be performed together as an activity, or you can spend some of those actions during one turn and the rest during your next turn.","TraitDescriptionRepeating":"A repeating weapon is typically a type of crossbow that has a shorter reload time. These weapons can\'t be loaded with individual bolts like other crossbows; instead, they require a magazine of specialized ammunition to be loaded into a special slot. Once that magazine is in place, the ammunition is automatically loaded each time the weapon is cocked to fire, reducing its reload to the value in its reload entry (typically 0). When the ammunition runs out, a new magazine must be loaded, which requires a free hand and 3 Interact actions (to remove the old magazine, retrieve the new magazine, and slot the new magazine in place). These actions don\'t need to be consecutive.","TraitDescriptionResonant":"This weapon can channel energy damage. You gain the Conduct Energy free action while wielding a resonant weapon.","TraitDescriptionRevelation":"Effects with this trait see things as they truly are.","TraitDescriptionRogue":"This indicates abilities from the rogue class.","TraitDescriptionSaggorak":"Ancient dwarven blacksmiths in Saggorak designed a series of spectacularly powerful runes. Only someone with legendary proficiency in Crafting, or a well-versed dwarven crafter from the city of Kovlar, can apply, transfer, or remove a rune with the Saggorak trait. Because of their considerable power, all Saggorak runes take up two property rune slots, and consequently they can be applied only to armor and weapons with at least a +2 potency rune.","TraitDescriptionScatter":"This weapon fires a cluster of pellets in a wide spray. Scatter always has an area listed with it, indicating the radius of the spray. On a hit, the primary target of attacks with a scatter weapon take the listed damage, and the target and all other creatures within the listed radius around it take 1 point of splash damage per weapon damage die.","TraitDescriptionScrying":"A scrying effect lets you see, hear, or otherwise get sensory information from a distance using a sensor or apparatus, rather than your own eyes and ears.","TraitDescriptionSecret":"The GM rolls the check for this ability in secret.","TraitDescriptionShadow":"This magic involves shadows or the energy of the Shadow Plane.","TraitDescriptionShisk":"Secretive humanoids covered in bony plumage that reside underground.","TraitDescriptionShoony":"A creature with this trait is a member of the shoony ancestry.","TraitDescriptionShove":"You can use this weapon to Shove with the Athletics skill even if you don\'t have a free hand. This uses the weapon\'s reach (if different from your own) and adds the weapon\'s item bonus to attack rolls as an item bonus to the Athletics check. If you critically fail a check to Shove using the weapon, you can drop the weapon to take the effects of a failure instead of a critical failure.","TraitDescriptionSkill":"A general feat with the skill trait improves your skills and their actions or gives you new actions for a skill. A feat with this trait can be selected when a class grants a skill feat or general feat. Archetype feats with the skill trait can be selected in place of a skill feat if you have that archetype\'s dedication feat.","TraitDescriptionSleep":"This effect can cause a creature to fall asleep or get drowsy.","TraitDescriptionSonic":"An effect with the sonic trait functions only if it makes sound, meaning it has no effect in an area of silence or in a vacuum. This is different from an auditory spell, which is effective only if the target can hear it. A sonic effect might deal sonic damage.","TraitDescriptionSorcerer":"This indicates abilities from the sorcerer class.","TraitDescriptionSplash":"When you use a thrown weapon with the splash trait, you don\'t add your Strength modifier to the damage roll. If an attack with a splash weapon fails, succeeds, or critically succeeds, all creatures within 5 feet of the target (including the target) take the listed splash damage. On a failure (but not a critical failure), the target of the attack still takes the splash damage. Add splash damage together with the initial damage against the target before applying the target\'s weaknesses or resistances. You don\'t multiply splash damage on a critical hit.","TraitDescriptionSplash10":"When you use a thrown weapon with the splash trait, you don\'t add your Strength modifier to the damage roll. If an attack with a splash weapon fails, succeeds, or critically succeeds, all creatures within 10 feet of the target (including the target) take the listed splash damage. On a failure (but not a critical failure), the target of the attack still takes the splash damage. Add splash damage together with the initial damage against the target before applying the target\'s weaknesses or resistances. You don\'t multiply splash damage on a critical hit.","TraitDescriptionSprite":"A family of diminutive winged fey with a strong connection to primal magic.","TraitDescriptionStance":"A stance is a general combat strategy that you enter by using an action with the stance trait, and that you remain in for some time. A stance lasts until you get knocked out, until its requirements (if any) are violated, until the encounter ends, or until you enter a new stance, whichever comes first. After you use an action with the stance trait, you can\'t use another one for 1 round. You can enter or be in a stance only in encounter mode.","TraitDescriptionStaff":"This magic item holds spells of a particular theme and allows a spellcaster to cast additional spells by preparing the staff.","TraitDescriptionSteam":"Items with this trait are powered by engines that boil water to produce steam and move their components.","TraitDescriptionStrix":"Winged humanoids, most of whom live in and around Cheliax.","TraitDescriptionStructure":"An item with the structure trait creates a magical building or other structure when activated. The item must be activated on a plot of land free of other structures. The structure adapts to the natural terrain, adopting the structural requirements for being built there. The structure adjusts around small features such as ponds or spires of rock, but it can\'t be created on water or other nonsolid surfaces. If activated on snow, sand dunes, or other soft surfaces with a solid surface underneath, the structure\'s foundation (if any) reaches the solid ground. If an item with this trait is activated on a solid but unstable surface, such as a swamp or an area plagued by tremors, roll a DC 3 flat check each day; on a failure, the structure begins to sink or collapse. The structure doesn\'t harm creatures within the area when it appears, and it can\'t be created within a crowd or in a densely populated area. Any creature inadvertently caught inside the structure when the item is activated ends up unharmed inside the complete structure and always has a clear path of escape. A creature inside the structure when the activation ends isn\'t harmed, and it lands harmlessly on the ground if it was on an upper level of the structure.","TraitDescriptionSummoned":"A creature called by a conjuration spell or effect gains the summoned trait. A summoned creature can\'t summon other creatures, create things of value, or cast spells that require a cost. It has the minion trait. If it tries to cast a spell of equal or higher level than the spell that summoned it, it overpowers the summoning magic, causing the summoned creature\'s spell to fail and the summon spell to end. Otherwise, the summoned creature uses the standard abilities for a creature of its kind. It generally attacks your enemies to the best of its abilities. If you can communicate with it, you can attempt to command it, but the GM determines the degree to which it follows your commands. Immediately when you finish Casting the Spell, the summoned creature uses its 2 actions for that turn. Summoned creatures can be banished by various spells and effects. They are automatically banished if reduced to 0 Hit Points or if the spell that called them ends.","TraitDescriptionSummoner":"This indicates abilities from the Summoner class.","TraitDescriptionSuli":"Sulis are planar scions descended from jann.","TraitDescriptionSwashbuckler":"This indicates abilities from the Swashbuckler class.","TraitDescriptionSweep":"This weapon makes wide sweeping or spinning attacks, making it easier to attack multiple enemies. When you attack with this weapon, you gain a +1 circumstance bonus to your attack roll if you already attempted to attack a different target this turn using this weapon.","TraitDescriptionSylph":"A type of geniekin descended from a being from the Plane of Air.","TraitDescriptionTattoo":"A tattoo is a type of item that is drawn or cut into a creature\'s skin and usually takes the form of images or symbols.","TraitDescriptionTeleportation":"Teleportation effects allow you to instantaneously move from one point in space to another. Teleportation does not usually trigger reactions based on movement.","TraitDescriptionTengu":"A creature with this trait is a member of the tengu ancestry. Tengus are humanoids who resemble birds. An ability with this trait can be used or selected only by tengus. An item with this trait is created and used by tengus.","TraitDescriptionTethered":"This weapon is attached to a length of rope or chain that allows you to retrieve it after it has left your hand. If you have a free hand while wielding this weapon, you can use an Interact action to pull the weapon back into your grasp after you have thrown it as a ranged attack or after it has been disarmed (unless it is being held by another creature).","TraitDescriptionThrown":"You can throw this weapon as a ranged attack. A thrown weapon adds your Strength modifier to damage just like a melee weapon does. When this trait appears on a melee weapon, it also includes the range increment.","TraitDescriptionTiefling":"A creature with this trait is a member of the tiefling ancestry.","TraitDescriptionTransmutation":"Effects and magic items with this trait are associated with the transmutation school of magic, typically changing something\'s form.","TraitDescriptionTrap":"A hazard or item with this trait is constructed to hinder interlopers.","TraitDescriptionTrip":"You can use this weapon to Trip with the Athletics skill even if you don\'t have a free hand. This uses the weapon\'s reach (if different from your own) and adds the weapon\'s item bonus to attack rolls as an item bonus to the Athletics check. If you critically fail a check to Trip using the weapon, you can drop the weapon to take the effects of a failure instead of a critical failure.","TraitDescriptionTrueName":"Certain spells, feats, and items have the true name trait. This trait means they require you to know a creature\'s true name to use them.","TraitDescriptionTwin":"These weapons are used as a pair, complementing each other. When you attack with a twin weapon, you add a circumstance bonus to the damage roll equal to the weapon\'s number of damage dice if you have previously attacked with a different weapon of the same type this turn. The weapons must be of the same type to benefit from this trait, but they don\'t need to have the same runes.","TraitDescriptionTwoHand":"This weapon can be wielded with two hands. Doing so changes its weapon damage die to the indicated value. This change applies to all the weapon\'s damage dice, such as those from striking runes.","TraitDescriptionUnarmed":"An unarmed attack uses your body rather than a manufactured weapon. An unarmed attack isn\'t a weapon, though it\'s categorized with weapons for weapon groups, and it might have weapon traits. Since it\'s part of your body, an unarmed attack can\'t be Disarmed. It also doesn\'t take up a hand, though a fist or other grasping appendage follows the same rules as a free-hand weapon.","TraitDescriptionUncommon":"Something of uncommon rarity requires special training or comes from a particular culture or part of the world. Some character choices give access to uncommon options, and the GM can choose to allow access for anyone. Less is known about uncommon creatures than common creatures. They typically can\'t be summoned. The DC of Recall Knowledge checks related to these creature is increased by 2.","TraitDescriptionUndine":"A type of geniekin descended from a being from the Plane of Water.","TraitDescriptionUnique":"A rules element with this trait is one-of-a-kind. The DC of Recall Knowledge checks related to creatures with this trait is increased by 10.","TraitDescriptionUnstable":"Unstable actions rely on experimental functions of your innovation that even you can\'t fully predict. After an unstable action is used on an innovation, using another one is dangerous.","TraitDescriptionVersatile":"A versatile weapon can be used to deal a different type of damage than that listed in the Damage entry. This trait indicates the alternate damage type. For instance, a piercing weapon that is versatile S can be used to deal piercing or slashing damage. You choose the damage type each time you make an attack.","TraitDescriptionVirulent":"Afflictions with the virulent trait are harder to remove. You must succeed at two consecutive saves to reduce a virulent affliction\'s stage by 1. A critical success reduces a virulent affliction\'s stage by only 1 instead of by 2.","TraitDescriptionVisual":"A visual effect can affect only creatures that can see it. This applies only to visible parts of the effect, as determined by the GM.","TraitDescriptionVolley":"This ranged weapon is less effective at close distances. Your attacks against targets that are at a distance within the range listed take a -2 penalty.","TraitDescriptionWater":"Effects with the water trait either manipulate or conjure water. Those that manipulate water have no effect in an area without water. Creatures with this trait consist primarily of water or have a magical connection to the element.","TraitDescriptionWitch":"This indicates abilities from the witch class.","TraitDescriptionWizard":"This indicates abilities from the wizard class.","TraitDescriptionEidolon":"A creature with this trait is a summoner\'s eidolon. An item with this trait can be worn by an eidolon. An eidolon can have up to two items invested.","TraitDescriptionAdjustment":"Items with this trait are intended to alter existing pieces of equipment, typically armors, shields, and weapons. The given item will note which type of equipment it modifies. A piece of equipment can only be affected by a single adjustment at a time. Unless otherwise noted, adding or removing an adjustment requires using a 10-minute activity and a repair kit.","TraitDescriptionApex":"When you Invest an Item that has the apex trait, it improves one of your ability scores, either increasing it by 2 or to a total of 18, whichever grants the higher score. This gives you all the benefits of the new ability score until the investiture ends. An apex item grants this benefit only the first time it\'s invested within a 24-hour period, and you can benefit from only one apex item at a time. If you attempt to invest an apex item when you already have one invested, you don\'t gain the ability score increase, though you do gain any other effects of Investing the Item.","TraitDescriptionCatalyst":"Items with the catalyst trait are consumable material spell components that alter or magnify specific spells. Activating a catalyst is part of Casting the Spell. The catalyst might increase the number of actions required to Cast the Spell, as indicated in the catalyst\'s Activate entry. Additionally, the spell gains material components if it didn\'t have them already or adds the catalyst to its existing components. Because the catalyst becomes part of the material components, you can draw the catalyst as part of Casting the Spell.","TraitDescriptionContract":"A contract is a type of item that magically establishes an agreement between multiple parties and typically grants magical benefits.","TraitDescriptionElixir":"Elixirs are alchemical liquids that are used by drinking them.","TraitDescriptionFey":"Creatures of the First World are called the fey.","TraitDescriptionFulu":"Fulus are small paper charms that can be affixed to a suit of armor, a shield, a weapon, a creature, or even a structure. Some fulus are composed of multiple such charms, taking effect only once all have been affixed. Normal fulus have effects immediately once affixed, while fulu talismans have an effect only once activated. Once a fulu has been activated, it lasts for the given duration and then burns out. Unless otherwise noted, fulus expire one year after being created, reverting to mundane paper. All fulus have the fulu and consumable traits. Fulus also have a tradition trait—either arcane, divine, occult or primal—determined by the magical tradition of its creator. For example, a fulu created by a priest would have the divine trait, whereas a witch who dabbles in fate might create a fulu with the occult trait. Some fulus also have the talisman trait, if they work similarly to talismans (such as being affixed to a suit of armor, a shield, or a weapon. Each fulu\'s stat block indicates the type of item or creature it can be affixed to. Affixing or removing a fulu requires using the Affix a Fulu activity, or the Affix a Talisman action instead if the fulu is also a talisman.","TraitDescriptionMutagen":"An elixir with the mutagen trait temporarily transmogrifies the subject\'s body and alters its mind. A mutagen always conveys one or more beneficial effects paired with one or more detrimental effects. Mutagens are polymorph effects, meaning you can benefit from only one at a time.","TraitDescriptionOil":"Oils are magical gels, ointments, pastes, or salves that are typically applied to an object and are used up in the process.","TraitDescriptionPotion":"A potion is a magical liquid activated when you drink it.","TraitDescriptionScroll":"A scroll contains a single spell you can cast without a spell slot.","TraitDescriptionSnare":"Traps typically made by rangers, snares follow special rules that allow them to be constructed quickly and used on the battlefield.","TraitDescriptionSpellheart":"Spellhearts are permanent items that work similarly to talismans. You affix a spellheart using the Affix a Spellheart activity, which is otherwise identical to Affix a Talisman. The limit of one talisman per item remains—an item can have one spellheart or one talisman, not both. When casting a cantrip from a spellheart, you can use your own spell attack roll or spell DC if it\'s higher. Crafting a spellheart requires the spells the spellheart can cast. For example, a major five-feather wreath requires air walk, gale blast, and wall of wind.","TraitDescriptionTalisman":"A talisman is a small object affixed to armor, a shield, or a weapon (called the affixed item). You must be wielding or wearing an item to activate a talisman attached to it. Once activated, a talisman burns out permanently.","TraitDescriptionWand":"A wand contains a single spell which you can cast once per day.","TraitDetection":"Detection","TraitDevil":"Devil","TraitDhampir":"Dhampir","TraitDinosaur":"Dinosaur","TraitDisarm":"Disarm","TraitDisease":"Disease","TraitDiv":"Div","TraitDivination":"Divination","TraitDivine":"Divine","TraitDoubleBarrel":"Double Barrel","TraitDowntime":"Downtime","TraitDragon":"Dragon","TraitDream":"Dream","TraitDrow":"Drow","TraitDrug":"Drug","TraitDruid":"Druid","TraitDuergar":"Duergar","TraitDuskwalker":"Duskwalker","TraitDwarf":"Dwarf","TraitEachRuneAppliedToASeparateItemThatHasPockets":"Each rune applied to a separate item that has pockets","TraitEarth":"Earth","TraitEidolon":"Eidolon","TraitElectricity":"Electricity","TraitElemental":"Elemental","TraitElf":"Elf","TraitElixir":"Elixir","TraitEmotion":"Emotion","TraitEnchantment":"Enchantment","TraitEnergy":"Energy","TraitEnvironmental":"Environmental","TraitEthereal":"Ethereal","TraitEvil":"Evil","TraitEvocation":"Evocation","TraitEvolution":"Evolution","TraitExploration":"Exploration","TraitExtradimensional":"Extradimensional","TraitFatalAimD10":"Fatal Aim d10","TraitFatalAimD12":"Fatal Aim d12","TraitFatalD10":"Fatal d10","TraitFatalD12":"Fatal d12","TraitFatalD8":"Fatal d8","TraitFear":"Fear","TraitFearEffects":"Fear Effects","TraitFetchling":"Fetchling","TraitFey":"Fey","TraitFiend":"Fiend","TraitFighter":"Fighter","TraitFinesse":"Finesse","TraitFinisher":"Finisher","TraitFire":"Fire","TraitFleshwarp":"Fleshwarp","TraitFlexible":"Flexible","TraitFlourish":"Flourish","TraitFocused":"Focused","TraitForce":"Force","TraitForceful":"Forceful","TraitFormian":"Formian","TraitFortune":"Fortune","TraitFreeHand":"Free-Hand","TraitFulu":"Fulu","TraitFungus":"Fungus","TraitGadget":"Gadget","TraitGanzi":"Ganzi","TraitGeneral":"General","TraitGenie":"Genie","TraitGeniekin":"Geniekin","TraitGhoran":"Ghoran","TraitGhost":"Ghost","TraitGhoul":"Ghoul","TraitGiant":"Giant","TraitGnoll":"Gnoll","TraitGnome":"Gnome","TraitGoblin":"Goblin","TraitGolem":"Golem","TraitGoloma":"Goloma","TraitGood":"Good","TraitGrapple":"Grapple","TraitGremlin":"Gremlin","TraitGrimoire":"Grimoire","TraitGrioth":"Grioth","TraitGrippli":"Grippli","TraitGunslinger":"Gunslinger","TraitHag":"Hag","TraitHalcyon":"Halcyon","TraitHalfElf":"Half-Elf","TraitHalfOrc":"Half-Orc","TraitHalfling":"Halfling","TraitHampering":"Hampering","TraitHantu":"Hantu","TraitHaunt":"Haunt","TraitHealing":"Healing","TraitHerald":"Herald","TraitHeritage":"Heritage","TraitHex":"Hex","TraitHobgoblin":"Hobgoblin","TraitHuman":"Human","TraitHumanoid":"Humanoid","TraitIfrit":"Ifrit","TraitIkeshti":"Ikeshti","TraitIllusion":"Illusion","TraitIncapacitation":"Incapacitation","TraitIncarnate":"Incarnate","TraitIncorporeal":"Incorporeal","TraitInevitable":"Inevitable","TraitInfused":"Infused","TraitIngested":"Ingested","TraitInhaled":"Inhaled","TraitInjection":"Injection","TraitInjury":"Injury","TraitIntelligent":"Intelligent","TraitInteract":"Interact","TraitInventor":"Inventor","TraitInvested":"Invested","TraitInvestigator":"Investigator","TraitJoustingD6":"Jousting d6","TraitKaiju":"Kaiju","TraitKami":"Kami","TraitKickback":"Kickback","TraitKitsune":"Kitsune","TraitKobold":"Kobold","TraitKovintus":"Kovintus","TraitLawful":"Lawful","TraitLeshy":"Leshy","TraitLight":"Light","TraitLineage":"Lineage","TraitLinguistic":"Linguistic","TraitLitany":"Litany","TraitLizardfolk":"Lizardfolk","TraitLocathah":"Locathah","TraitMagical":"Magical","TraitMagus":"Magus","TraitManipulate":"Manipulate","TraitMechanical":"Mechanical","TraitMental":"Mental","TraitMerfolk":"Merfolk","TraitMetamagic":"Metamagic","TraitMindless":"Mindless","TraitMinion":"Minion","TraitMisfortune":"Misfortune","TraitModification":"Modification","TraitModular":"Modular B, P, or S","TraitMonitor":"Monitor","TraitMonk":"Monk","TraitMorph":"Morph","TraitMortic":"Mortic","TraitMounted":"Mounted","TraitMove":"Move","TraitMulticlass":"Multiclass","TraitMummy":"Mummy","TraitMunavri":"Munavri","TraitMutagen":"Mutagen","TraitMutant":"Mutant","TraitNagaji":"Nagaji","TraitNecromancy":"Necromancy","TraitNegative":"Negative","TraitNoisy":"Noisy","TraitNonlethal":"Nonlethal","TraitNonlethalAttacks":"Nonlethal Attacks","TraitNonmagicalAttacks":"Non-magical Attacks","TraitNymph":"Nymph","TraitOath":"Oath","TraitObjectImmunities":"Object Immunities","TraitOccult":"Occult","TraitOil":"Oil","TraitOlfactory":"Olfactory","TraitOni":"Oni","TraitOoze":"Ooze","TraitOpen":"Open","TraitOracle":"Oracle","TraitOrc":"Orc","TraitOread":"Oread","TraitPaaridar":"Paaridar","TraitParry":"Parry","TraitPervasiveMagic":"Pervasive Magic","TraitPetitioner":"Petitioner","TraitPhantom":"Phantom","TraitPhysical":"Physical","TraitPiercing":"Piercing","TraitPlant":"Plant","TraitPoison":"Poison","TraitPolymorph":"Polymorph","TraitPortable":"Portable","TraitPoppet":"Poppet","TraitPositive":"Positive","TraitPossession":"Possession","TraitPotion":"Potion","TraitPrecious":"Precious","TraitPrecision":"Precision","TraitPrediction":"Prediction","TraitPress":"Press","TraitPrimal":"Primal","TraitPropulsive":"Propulsive","TraitProtean":"Protean","TraitProteanAnatomy":"Protean Anatomy","TraitPsychopomp":"Psychopomp","TraitQlippoth":"Qlippoth","TraitRadiation":"Radiation","TraitRage":"Rage","TraitRakshasa":"Rakshasa","TraitRange":"Range","TraitRange5":"Range 5 ft","TraitRange10":"Range 10 ft","TraitRange15":"Range 15 ft","TraitRange20":"Range 20 ft","TraitRange25":"Range 25 ft","TraitRange30":"Range 30 ft","TraitRange40":"Range 40 ft","TraitRange50":"Range 50 ft","TraitRange60":"Range 60 ft","TraitRange70":"Range 70 ft","TraitRange80":"Range 80 ft","TraitRange90":"Range 90 ft","TraitRange100":"Range 100 ft","TraitRange120":"Range 120 ft","TraitRange180":"Range 180 ft","TraitRange240":"Range 240 ft","TraitRangeIncrement10":"Range Increment 10 ft","TraitRangeIncrement100":"Range Increment 100 ft","TraitRangeIncrement110":"Range Increment 110 ft","TraitRangeIncrement120":"Range Increment 120 ft","TraitRangeIncrement130":"Range Increment 130 ft","TraitRangeIncrement140":"Range Increment 140 ft","TraitRangeIncrement15":"Range Increment 15 ft","TraitRangeIncrement150":"Range Increment 150 ft","TraitRangeIncrement160":"Range Increment 160 ft","TraitRangeIncrement170":"Range Increment 170 ft","TraitRangeIncrement180":"Range Increment 180 ft","TraitRangeIncrement190":"Range Increment 190 ft","TraitRangeIncrement20":"Range Increment 20 ft","TraitRangeIncrement200":"Range Increment 200 ft","TraitRangeIncrement210":"Range Increment 210 ft","TraitRangeIncrement220":"Range Increment 220 ft","TraitRangeIncrement230":"Range Increment 230 ft","TraitRangeIncrement240":"Range Increment 240 ft","TraitRangeIncrement250":"Range Increment 250 ft","TraitRangeIncrement260":"Range Increment 260 ft","TraitRangeIncrement270":"Range Increment 270 ft","TraitRangeIncrement280":"Range Increment 280 ft","TraitRangeIncrement290":"Range Increment 290 ft","TraitRangeIncrement30":"Range Increment 30 ft","TraitRangeIncrement300":"Range Increment 300 ft","TraitRangeIncrement310":"Range Increment 310 ft","TraitRangeIncrement320":"Range Increment 320 ft","TraitRangeIncrement40":"Range Increment 40 ft","TraitRangeIncrement5":"Range Increment 5 ft","TraitRangeIncrement50":"Range Increment 50 ft","TraitRangeIncrement500":"Range Increment 500 ft","TraitRangeIncrement60":"Range Increment 60 ft","TraitRangeIncrement70":"Range Increment 70 ft","TraitRangeIncrement75":"Range Increment 75 ft","TraitRangeIncrement80":"Range Increment 80 ft","TraitRangeIncrement90":"Range Increment 90 ft","TraitRangedTrip":"Ranged Trip","TraitRanger":"Ranger","TraitRare":"Rare","TraitRatfolk":"Ratfolk","TraitReach":"Reach","TraitReach0":"Reach 0 ft","TraitReach10":"Reach 10 ft","TraitReach15":"Reach 15 ft","TraitReach20":"Reach 20 ft","TraitReach25":"Reach 25 ft","TraitReach30":"Reach 30 ft","TraitReach40":"Reach 40 ft","TraitReach50":"Reach 50 ft","TraitReach60":"Reach 60 ft","TraitReach100":"Reach 100 ft","TraitReckless":"Reckless","TraitReload0":"Reload 0","TraitReload1":"Reload 1","TraitReload2":"Reload 2","TraitReload1Min":"Reload 1 min","TraitRepeating":"Repeating","TraitResonant":"Resonant","TraitRevelation":"Revelation","TraitRogue":"Rogue","TraitSaggorak":"Saggorak","TraitSahkil":"Sahkil","TraitSalt":"Salt","TraitSaltWater":"Salt Water","TraitSamsaran":"Samsaran","TraitScatter5":"Scatter 5","TraitScatter10":"Scatter 10","TraitScatter15":"Scatter 15","TraitScroll":"Scroll","TraitScrying":"Scrying","TraitSeaDevil":"Sea Devil","TraitSeugathi":"Seugathi","TraitSewnIntoClothing":"Sewn Into Clothing","TraitSecret":"Secret","TraitSerpentfolk":"Serpentfolk","TraitShabti":"Shabti","TraitShadow":"Shadow","TraitShisk":"Shisk","TraitShobhad":"Shobhad","TraitShoony":"Shoony","TraitShove":"Shove","TraitSiktempora":"Siktempora","TraitSimple":"Simple","TraitSkeleton":"Skeleton","TraitSkelm":"Skelm","TraitSkill":"Skill","TraitSkulk":"Skulk","TraitSlashing":"Slashing","TraitSleep":"Sleep","TraitSnare":"Snare","TraitSonic":"Sonic","TraitSorcerer":"Sorcerer","TraitSoulbound":"Soulbound","TraitSpellDeflection":"Spell Deflection","TraitSpellheart":"Spellheart","TraitSpellshot":"Spellshot","TraitSpirit":"Spirit","TraitSplash":"Splash","TraitSplashDamage":"Splash Damage","TraitSplash10":"Splash 10 ft","TraitSpriggan":"Spriggan","TraitSprite":"Sprite","TraitStaff":"Staff","TraitStamina":"Stamina","TraitStance":"Stance","TraitSteam":"Steam","TraitStheno":"Stheno","TraitStrix":"Strix","TraitStructure":"Structure","TraitSuli":"Suli","TraitSummon":"Summon","TraitSummoned":"Summoned","TraitSummoner":"Summoner","TraitSwarmAttacks":"Swarm Attacks","TraitSwarmMind":"Swarm Mind","TraitSwashbuckler":"Swashbuckler","TraitSwarm":"Swarm","TraitSweep":"Sweep","TraitSylph":"Sylph","TraitTalisman":"Talisman","TraitTandem":"Tandem","TraitTane":"Tane","TraitTanggal":"Tanggal","TraitTattoo":"Tattoo","TraitTeleportation":"Teleportation","TraitTengu":"Tengu","TraitTethered":"Tethered","TraitThrown":"Thrown","TraitThrown10":"Thrown 10 ft.","TraitThrown15":"Thrown 15 ft.","TraitThrown20":"Thrown 20 ft.","TraitThrown30":"Thrown 30 ft.","TraitThrown40":"Thrown 40 ft.","TraitThrown60":"Thrown 60 ft.","TraitThrown100":"Thrown 100 ft.","TraitTiefling":"Tiefling","TraitTime":"Time","TraitTitan":"Titan","TraitTransmutation":"Transmutation","TraitTrap":"Trap","TraitTrip":"Trip","TraitTroll":"Troll","TraitTroop":"Troop","TraitTrueName":"True Name","TraitTwin":"Twin","TraitTwoHandD10":"Two-Hand d10","TraitTwoHandD12":"Two-Hand d12","TraitTwoHandD6":"Two-Hand d6","TraitTwoHandD8":"Two-Hand d8","TraitTwoHandedHelp":"This item can be wielded in two hands. To toggle the two-handed strike, click the two-handed trait in the strikes tab.","TraitUnarmed":"Unarmed","TraitUncommon":"Uncommon","TraitUndead":"Undead","TraitUndine":"Undine","TraitUnique":"Unique","TraitUnstable":"Unstable","TraitUntyped":"Untyped","TraitUrdefhan":"Urdefhan","TraitVampire":"Vampire","TraitVampireWeaknesses":"Vampire Weaknesses","TraitVanara":"Vanara","TraitVelstrac":"Velstrac","TraitVersatileB":"Versatile B","TraitVersatileFire":"Versatile Fire","TraitVersatileHeritage":"Versatile Heritage","TraitVersatileP":"Versatile P","TraitVersatilePositive":"Versatile Positive","TraitVersatileS":"Versatile S","TraitVigilante":"Vigilante","TraitVirulent":"Virulent","TraitVishkanya":"Vishkanya","TraitVisual":"Visual","TraitVolley20":"Volley 20 ft.","TraitVolley30":"Volley 30 ft.","TraitVolley50":"Volley 50 ft.","TraitVorpalFear":"Vorpal Fear","TraitWand":"Wand","TraitWater":"Water","TraitWayang":"Wayang","TraitWeapons":"Weapons","TraitWerecreature":"Werecreature","TraitWight":"Wight","TraitWitch":"Witch","TraitWizard":"Wizard","TraitWraith":"Wraith","TraitWyrwood":"Wyrwood","TraitXulgath":"Xulgath","TraitZombie":"Zombie","TraitHeldOneHand":"Held in 1 hand","TraitHeldTwoHands":"Held in 2 hands","TraitTattooedOnTheBody":"Tattooed on the Body","TraitWorn":"Worn","TraitWornAndAttachedToTwoWeapons":"Worn and Attached to Two Weapons","TraitWornUnderArmor":"Worn Under Light Armor or Clothes","TraitWornAmulet":"Worn Amulet","TraitWornArmbands":"Worn Armbands","TraitWornBackpack":"Worn Backpack","TraitWornBracelet":"Worn Bracelet","TraitWornClothing":"Worn Clothing","TraitWornNecklace":"Worn Necklace","TraitWornHeadwear":"Worn Headwear","TraitWornGarment":"Worn Garment","TraitWornGloves":"Worn Gloves","TraitWornRing":"Worn Ring","TraitWornOnWrists":"Worn on Wrists","TraitWornMask":"Worn Mask","TraitWornBracers":"Worn Bracers","TraitWornEpaulet":"Worn Epaulets","TraitWornCloak":"Worn Cloak","TraitWornCrown":"Worn Crown","TraitWornEyepiece":"Worn Eyepiece","TraitWornBelt":"Worn Belt","TraitWornBeltPouch":"Worn Belt Pouch","TraitWornShoes":"Worn Shoes","TraitWornCollar":"Worn Collar","TraitWornAnklets":"Worn Anklets","TraitWornCirclet":"Worn Circlet","TraitWornHorseshoes":"Worn Horseshoes","TraitWornBarding":"Worn Barding","TraitWornOnBelt":"Worn on Belt","TraitWornSaddle":"Worn Saddle","TraitEtchedOntoArmor":"Etched onto Armor","TraitEtchedOntoMedHeavyArmor":"Etched onto Medium or Heavy Armor","TraitEtchedOntoAWeapon":"Etched onto a Weapon","TraitEtchedOntoAThrownWeapon":"Etched on Thrown Weapon","TraitEtchedOntoAMeleeWeapon":"Etched on Melee Weapon","TraitEtchedOntoAClanDagger":"Etched on Clan Dagger","TraitEtchedOntoLightMedNMArmor":"Etched on L/M Nonmetal Armor","TraitBonded":"Bonded","TraitsLabel":"Traits","Trap":"Trap","TravelSpeed":{"Name":"Name","Title":"Travel Duration Calculator (Alpha)","PartySpeed":"Party Speed","Speed":"Speed","TravelDuration":"Travel Duration","ExplorationActivity":"Exploration Activity","ExplorationSpeed":"Exploration Speed","DetectionMode":"Detection Mode","Feet":"Feet","Hours":"Hours","HoursPerDay":"Hours Spent Traveling Per Day","HustleMinutes":"Minutes Spent Hustling Per Day","Days":"Days","Weeks":"Weeks","FeetAcronym":"ft","Miles":"Miles","None":"Full Speed","DetectEverything":"Notice Everything","DetectBeforeRunningIntoIt":"Notice Everything in Advance","Journey":"Journey","NormalTerrain":"Normal Terrain Speed","DifficultTerrain":"Difficult Terrain Speed","GreaterDifficultTerrain":"Greater Difficult Terrain Speed","Distance":"Distance","TerrainSlowdown":"Terrain Speed","ExplorationActivities":{"AvoidNotice":"Avoid Notice","CoverTracks":"Cover Tracks","Defend":"Defend","DetectMagic":"Detect Magic","Investigate":"Investigate","RepeatASpell":"Repeat a Spell","Scout":"Scout","Search":"Search","Track":"Track","None":"None (Full Speed)","HalfSpeed":"Other (Half Speed)"}},"TrickMagicItemPopup":{"Label":"Select a skill to use with Trick Magic Item.","Title":"Trick Magic Item","InvalidActor":"Only a character or NPC can use Trick Magic Item."},"UI":{"applyDamage":{"by":"by","damaged":"damaged for ","healed":"healed for ","shieldActive":"and their {shield} gets ","shieldInActive":"gets"},"errorTargetToken":"Select at least one token.","noDamageInfoForOutcome":"No damage information for outcome {outcome}.","shiftModifyDamageLabel":"Modifier:","shiftModifyDamageTitle":"Modify the rolled damage/healing","shiftModifyDamageHint":"Use positive modifier to harm, negative to heal.","RuleElements":{"ChoiceSet":{"Prompt":"Make a selection.","SaveLabel":"Save"},"EffectTarget":{"Prompt":"Choose the target of this effect."},"Prompt":{"NoSelectionMade":"No selection was made: {item} is inactive.","NoValidOptions":"{actor} has no valid targets for {item}."}}},"UnitPriceLabel":"Unit price","UnprepareItemTitle":"Unprepare Item","UnpreparedSpellsLabel":"{label}: Preparation Shortlist","UpdateActorLabel":"Update Actor","UpdateLabelUniversal":"Update","UserSettings":{"DarkvisionFilter":{"Label":"Darkvision Filter","Hint":"Add a (usually monochrome) filter when viewing a scene through the sight of a creature with darkvision"}},"ValueLabel":"Value","WandFromSpell":"Wand of {name} (Level {level})","WeaknessesLabel":"Weaknesses","Weapon":{"Base":{"adze":"Adze","aklys":"Aklys","alchemical-bomb":"Alchemical Bomb","alchemical-crossbow":"Alchemical Crossbow","aldori-dueling-sword":"Aldori Dueling Sword","air-repeater":"Air Repeater","arquebus":"Arquebus","arrows":"Arrows","axe-musket":"Axe Musket","asp-coil":"Asp Coil","bastard-sword":"Bastard Sword","battle-axe":"Battle Axe","battle-lute":"Battle Lute","big-boom-gun":"Big Boom Gun","black-powder-knuckle-dusters":"Black Powder Knuckle Dusters","bladed-diabolo":"Bladed Diabolo","bladed-hoop":"Bladed Hoop","bladed-scarf":"Bladed Scarf","blowgun-darts":"Blowgun Darts","blowgun":"Blowgun","blunderbuss":"Blunderbuss","bo-staff":"Bo Staff","boarding-axe":"Boarding Axe","boarding-pike":"Boarding Pike","bola":"Bola","bolts":"Bolts","butchering-axe":"Butchering Axe","butterfly-sword":"Butterfly Sword","buugeng":"Buugeng","cane-pistol":"Cane Pistol","chakram":"Chakram","clan-dagger":"Clan Dagger","clan-pistol":"Clan Pistol","claw":"Claw","claw-blade":"Claw Blade","club":"Club","coat-pistol":"Coat Pistol","combat-grapnel":"Combat Grapnel","composite-longbow":"Composite Longbow","composite-shortbow":"Composite Shortbow","crossbow":"Crossbow","dagger":"Dagger","dagger-pistol":"Dagger Pistol","daikyu":"Daikyu","dart":"Dart","dogslicer":"Dogslicer","double-barreled-musket":"Double-Barreled Musket","double-barreled-pistol":"Double-Barreled Pistol","dragon-mouth-pistol":"Dragon Mouth Pistol","dueling-pistol":"Dueling Pistol","dueling-spear":"Dueling Spear","dwarven-scattergun":"Dwarven Scattergun","dwarven-war-axe":"Dwarven War Axe","elven-branched-spear":"Elven Branched Spear","elven-curve-blade":"Elven Curve Blade","explosive-dogslicer":"Explosive Dogslicer","exquisite-sword-cane-sheath":"Exquisite Sword Cane Sheath","exquisite-sword-cane":"Exquisite Sword Cane","falchion":"Falchion","fangwire":"Fangwire","fauchard":"Fauchard","fighting-fan":"Fighting Fan","fighting-stick":"Fighting Stick","filchers-fork":"Filcher\'s Fork","fire-lance":"Fire Lance","fire-poi":"Fire Poi","fist":"Fist","flail":"Flail","flingflenser":"Flingflenser","flintlock-musket":"Flintlock Musket","flintlock-pistol":"Flintlock Pistol","forked-bipod":"Forked Bipod","hand-cannon":"Hand Cannon","harmona-gun":"Harmona Gun","hook-sword":"Hook Sword","gaff":"Gaff","gauntlet":"Gauntlet","gill-hook":"Gill Hook","glaive":"Glaive","gnome-amalgam-musket":"Gnome Amalgam Musket","gnome-flickmace":"Gnome Flickmace","gnome-hooked-hammer":"Gnome Hooked Hammer","greataxe":"Greataxe","greatclub":"Greatclub","greatpick":"Greatpick","greatsword":"Greatsword","griffon-cane":"Griffon Cane","guisarme":"Guisarme","gun-sword":"Gun Sword","halberd":"Halberd","halfling-sling-staff":"Halfling Sling Staff","hammer-gun":"Hammer Gun","hand-adze":"Hand Adze","hand-crossbow":"Hand Crossbow","hatchet":"Hatchet","heavy-crossbow":"Heavy Crossbow","hongali-hornbow":"Hongali Hornbow","horsechopper":"Horsechopper","javelin":"Javelin","jaws":"Jaws","jezail":"Jezail","juggling-club":"Juggling Club","kama":"Kama","karambit":"Karambit","katana":"Katana","katar":"Katar","khakkara":"Khakkara","khopesh":"Khopesh","knuckle-duster":"Knuckle Duster","kukri":"Kukri","kusarigama":"Kusarigama","lance":"Lance","leiomano":"Leiomano","light-hammer":"Light Hammer","light-mace":"Light Mace","light-pick":"Light Pick","lion-scythe":"Lion Scythe","long-air-repeater":"Long Air Repeater","longbow":"Longbow","longspear":"Longspear","longsword":"Longsword","mace":"Mace","mace-multipistol":"Mace Multipistol","machete":"Machete","main-gauche":"Main-gauche","mambele":"Mambele","maul":"Maul","meteor-hammer":"Meteor Hammer","mithral-tree":"Mithral Tree","monkeys-fist":"Monkey\'s Fist","morningstar":"Morningstar","naginata":"Naginata","nightstick":"Nightstick","nine-ring-sword":"Nine-Ring Sword","nunchaku":"Nunchaku","ogre-hook":"Ogre Hook","orc-knuckle-dagger":"Orc Knuckle Dagger","orc-necksplitter":"Orc Necksplitter","pepperbox":"Pepperbox","piercing-wind":"Piercing Wind","pick":"Pick","piranha-kiss":"Piranha Kiss","poi":"Poi","polytool":"Polytool","probing-cane":"Probing Cane","ranseur":"Ranseur","rapier":"Rapier","rapier-pistol":"Rapier Pistol","repeating-crossbow":"Repeating Crossbow","repeating-hand-crossbow":"Repeating Hand Crossbow","repeating-heavy-crossbow":"Repeating Heavy Crossbow","rhoka-sword":"Rhoka Sword","rungu":"Rungu","sai":"Sai","sap":"Sap","sawtooth-saber":"Sawtooth Saber","scimitar":"Scimitar","scorpion-whip":"Scorpion Whip","scourge":"Scourge","scythe":"Scythe","shauth-lash":"Shauth Lash","shears":"Shears","shield-bash":"Shield Bash","shield-boss":"Shield Boss","shield-spikes":"Shield Spikes","shobhad-longrifle":"Shobhad Longrifle","shortbow":"Shortbow","shortsword":"Shortsword","shuriken":"Shuriken","sickle":"Sickle","sickle-saber":"Sickle-saber","slide-pistol":"Slide Pistol","sling-bullets":"Sling Bullets","sling":"Sling","spear":"Spear","spiked-chain":"Spiked Chain","spiked-gauntlet":"Spiked Gauntlet","spiral-rapier":"Spiral Rapier","spoon-gun":"Spoon Gun","staff":"Staff","starknife":"Starknife","stiletto-pen":"Stiletto Pen","sun-sling":"Sun Sling","sword-cane":"Sword Cane","tamchal-chakram":"Tamchal Chakram","taw-launcher":"Taw Launcher","tekko-kagi":"Tekko-kagi","temple-sword":"Temple Sword","tengu-gale-blade":"Tengu Gale Blade","three-peaked-tree":"Three Peaked Tree","throwing-knife":"Throwing Knife","thunder-sling":"Thunder Sling","thundermace":"Thundermace","tonfa":"Tonfa","tri-bladed-katar":"Tri-bladed Katar","tricky-pick":"Tricky Pick","trident":"Trident","urumi":"Urumi","wakizashi":"Wakizashi","war-flail":"War Flail","war-razor":"War Razor","warhammer":"Warhammer","whip":"Whip","whip-claw":"Whip Claw","wind-and-fire-wheel":"Wind and Fire Wheel","wish-blade":"Wish Blade","wish-knife":"Wish Knife","wooden-taws":"Wooden Taws"}},"WeaponAbilityLabel":"Weapon Ability","WeaponBaseLabel":"Base","WeaponBonusAttackLabel":"Bonus Attack","WeaponBonusDamageLabel":"Bonus Damage","WeaponBaseDamageLabel":"Base Weapon Damage","WeaponBaseDamageTitle":"This section configures the base damage for the weapon. Additional die from Striking runes should not be added here and instead configured in the Weapon Runes section above.","WeaponCustomDamageLabel":"Additional Custom Damage","WeaponCustomDamageTitle":"This section adds any custom damage that is not covered by the Rune system. The Strike Effect and Critcal Effect attributes are not currently used in the system and are informational only.","WeaponDamageLabel":"Base Damage","WeaponDescriptionAxe":"Critical Specialization Effect: Choose one creature adjacent to the initial target and within reach. If its AC is lower than your attack roll result for the critical hit, you deal damage to that creature equal to the result of the weapon damage die you rolled (including extra dice for its potency rune, if any). This amount isn\'t doubled, and no bonuses or other additional dice apply to this damage.","WeaponDescriptionBomb":"Critical Specialization Effect: Increase the radius of the bomb\'s splash damage (if any) to 10 feet.","WeaponDescriptionBow":"Critical Specialization Effect: If the target of the critical hit is adjacent to a surface, it gets stuck to that surface by the missile. The target is immobilized and must spend an Interact action to attempt a DC 10 Athletics check to pull the missile free; it can\'t move from its space until it succeeds. The creature doesn\'t become stuck if it is incorporeal, is liquid (like a water elemental or some oozes), or could otherwise escape without effort","WeaponDescriptionBrawling":"Critical Specialization Effect: The target must succeed at a Fortitude save against your class DC or be slowed 1 until the end of your next turn.","WeaponDescriptionClub":"Critical Specialization Effect: You knock the target away from you up to 10 feet (you choose the distance). This is forced movement.","WeaponDescriptionDart":"Critical Specialization Effect: The target takes 1d6 persistent bleed damage. You gain an item bonus to this bleed damage equal to the weapon\'s item bonus to attack rolls.","WeaponDescriptionFirearm":"Critical Specialization Effect: The target must succeed at a Fortitude save against your class DC or be stunned 1.","WeaponDescriptionFlail":"Critical Specialization Effect: The target is knocked prone.","WeaponDescriptionHammer":"Critical Specialization Effect: The target is knocked prone.","WeaponDescriptionKnife":"Critical Specialization Effect: The target takes 1d6 persistent bleed damage. You gain an item bonus to this bleed damage equal to the weapon\'s item bonus to attack rolls.","WeaponDescriptionPick":"Critical Specialization Effect: The weapon viciously pierces the target, who takes 2 additional damage per weapon damage die.","WeaponDescriptionPolearm":"Critical Specialization Effect: The target is moved 5 feet in a direction of your choice. This is forced movement.","WeaponDescriptionShield":"Critical Specialization Effect: You knock the target back from you 5 feet. This is forced movement.","WeaponDescriptionSling":"Critical Specialization Effect: The target must succeed at a Fortitude save against your class DC or be stunned 1.","WeaponDescriptionSpear":"Critical Specialization Effect: The weapon pierces the target, weakening its attacks. The target is clumsy 1 until the start of your next turn.","WeaponDescriptionSword":"Critical Specialization Effect: The target is made off‑balance by your attack, becoming flat‑footed until the start of your next turn.","WeaponGroups":"Weapon Groups","WeaponGroupAxe":"Axe","WeaponGroupBomb":"Bomb","WeaponGroupBow":"Bow","WeaponGroupBrawling":"Brawling","WeaponGroupClub":"Club","WeaponGroupDart":"Dart","WeaponGroupFirearm":"Firearm","WeaponGroupFlail":"Flail","WeaponGroupHammer":"Hammer","WeaponGroupKnife":"Knife","WeaponGroupLabel":"Group","WeaponGroupPick":"Pick","WeaponGroupPolearm":"Polearm","WeaponGroupShield":"Shield","WeaponGroupSling":"Sling","WeaponGroupSpear":"Spear","WeaponGroupSword":"Sword","WeaponHands1":"One","WeaponHands1Plus":"One Plus","WeaponHands2":"Two","WeaponMAPDefaultOption":"Default (uses Agile trait if present)","WeaponMAPLabel":"Multiple Attack Penalty","WeaponPotencyRune1":"Weapon Potency (+1)","WeaponPotencyRune2":"Weapon Potency (+2)","WeaponPotencyRune3":"Weapon Potency (+3)","WeaponPotencyRune4":"Weapon Potency (+4)","WeaponPropertyCriticalDamageLabel":"Critical Damage","WeaponPropertyCriticalEffectLabel":"Critical Effect","WeaponPropertyRune":{"anarchic":{"Name":"Anarchic Rune","Note":{"criticalSuccess":"<b>Anarchic Rune</b> When you critically succeed at a Strike with this weapon against a lawful creature, roll [[/r 1d6]]. On a 1 or 2, you deal double minimum damage; on a 3 or 4, double your damage normally; on a 5 or 6, you deal double maximum damage."}},"ancestralEchoing":{"Name":"Ancestral Echoing Rune"},"anchoring":{"Name":"Anchoring Rune","Note":{"criticalSuccess":"<b>Anchoring Rune</b> If you critically hit a target with an anchoring weapon, the weapon casts <em>@Compendium[pf2e.spells-srd.Dimensional Anchor]{dimensional anchor}</em> on the target (<span data-pf2-check=\\"will\\" data-pf2-label=\\"Anchoring Rune\\" data-pf2-dc=\\"27\\">Will</span>, counteract modifier [[/r 1d20+17 # Anchoring Rune Counteract Check]]{+17})."}},"axiomatic":{"Name":"Axiomatic Rune","Note":{"criticalSuccess":"<b>Axiomatic Rune</b> When you critically succeed at an attack roll with this weapon against a chaotic creature, instead of rolling, count each weapon damage die as average damage rounded up (3 for d4, 4 for d6, 5 for d8, 6 for d10, 7 for d12)."}},"bane":{"Name":"Bane Rune"},"bloodbane":{"Name":"Bloodbane Rune"},"bloodthirsty":{"Name":"Bloodthirsty Rune","Note":{"criticalSuccess":"<b>Bloodthirsty Rune</b> When you critically hit a target that\'s taking persistent bleed damage, your target becomes @Compendium[pf2e.conditionitems.Drained]{drained 1}."}},"brilliant":{"Name":"Brilliant Rune","Note":{"criticalSuccess":"<b>Brilliant Rune</b> On a critical hit, the target must succeed at a <span data-pf2-check=\\"fortitude\\" data-pf2-label=\\"Brilliant Rune\\" data-pf2-dc=\\"29\\">Fortitude</span> save or be @Compendium[pf2e.conditionitems.Blinded]{blinded} for 1 round."}},"conducting":{"Name":"Conducting Rune"},"corrosive":{"Name":"Corrosive Rune","Note":{"criticalSuccess":"<b>Corrosive Rune</b> On a critical hit, the target\'s armor (if any) takes [[/r {3d6}[acid] # Corrosive Rune]]{3d6 acid} damage (before applying Hardness); if the target has a shield raised, the shield takes this damage instead."}},"crushing":{"Name":"Crushing Rune","Note":{"criticalSuccess":"<b>Crushing Rune</b> When you critically hit a target with this weapon, your target becomes @Compendium[pf2e.conditionitems.Clumsy]{clumsy 1} and @Compendium[pf2e.conditionitems.Enfeebled]{enfeebled 1} until the end of your next turn."}},"cunning":{"Name":"Cunning Rune"},"dancing":{"Name":"Dancing Rune"},"disrupting":{"Name":"Disrupting Rune","Note":{"criticalSuccess":"<b>Disrupting Rune</b> On a critical hit, the undead is also @Compendium[pf2e.conditionitems.Enfeebled]{enfeebled 1} until the end of your next turn."}},"energizing":{"Name":"Energizing Rune"},"extending":{"Name":"Extending Rune"},"fanged":{"Name":"Fanged Rune"},"fearsome":{"Name":"Fearsome Rune","Note":{"criticalSuccess":"<b>Fearsome Rune</b> When you critically hit with this weapon, the target becomes @Compendium[pf2e.conditionitems.Frightened]{frightened 1}."}},"flaming":{"Name":"Flaming Rune","Note":{"criticalSuccess":"<b>Flaming Rune</b> When you critically succeed at a Strike with this weapon, you deal an additional [[/r {1d10}[persistent,fire]]] # Flaming Rune]]{1d10 persistent fire} damage."}},"frost":{"Name":"Frost Rune","Note":{"criticalSuccess":"<b>Frost Rune</b> On a critical hit, the target is also @Compendium[pf2e.conditionitems.Slowed]{slowed 1} until the end of your next turn unless it succeeds at a <span data-pf2-check=\\"fortitude\\" data-pf2-label=\\"Frost Rune\\" data-pf2-dc=\\"24\\">Fortitude</span> save."}},"ghostTouch":{"Name":"Ghost Touch Rune","Note":"<b>Ghost Touch Rune</b> The weapon can harm creatures without physical form. A ghost touch weapon is particularly effective against incorporeal creatures, which almost always have a specific vulnerability to ghost touch weapons. Incorporeal creatures can touch, hold, and wield ghost touch weapons (unlike most physical objects)."},"greaterAnchoring":{"Name":"Greater Anchoring Rune","Note":{"criticalSuccess":"<b>Greater Anchoring Rune</b> When you critically hit a target with a weapon with the anchoring rune, the weapon casts 8th-level <em>@Compendium[pf2e.spells-srd.Dimensional Anchor]{dimensional anchor}</em> on the target (<span data-pf2-check=\\"will\\" data-pf2-label=\\"Greater Anchoring Rune\\" data-pf2-dc=\\"38\\">Will</span>, counteract modifier [[/r 1d20+28 # Anchoring Rune Counteract Check]]{+28}), except that if the target critically succeeds at its Will save, instead of having no effect, the <em>dimensional anchor</em> lasts for 1 round.","success":"<b>Greater Anchoring Rune</b> When you hit a target with the weapon but don\'t critically hit, the target is affected by 4th-level <em>@Compendium[pf2e.spells-srd.Dimensional Anchor]{dimensional anchor}</em> for 1 round without a save (counteract modifier [[/r 1d20+28 # Anchoring Rune Counteract Check]]{+28})."}},"greaterBloodbane":{"Name":"Greater Bloodbane Rune"},"greaterBrilliant":{"Name":"Greater Brilliant Rune","Note":{"criticalSuccess":"<b>Greater Brilliant Rune</b> Damage dealt by this weapon ignores the target\'s fire, good, or positive resistance. On a critical hit, the target must succeed at a <span data-pf2-check=\\"fortitude\\" data-pf2-label=\\"Greater Brilliant Rune\\" data-pf2-dc=\\"41\\">Fortitude</span> save or be @Compendium[pf2e.conditionitems.Blinded]{blinded} for 1 round.","success":"<b>Greater Brilliant Rune</b> Damage dealt by this weapon ignores the target\'s fire, good, or positive resistance."}},"greaterCorrosive":{"Name":"Greater Corrosive Rune","Note":{"criticalSuccess":"<b>Greater Corrosive Rune</b> The acid damage dealt by this weapon ignores the target\'s acid resistance. On a critical hit, the target\'s armor (if any) takes [[/r {6d6}[acid] # Corrosive Rune]]{6d6 acid} damage (before applying Hardness); if the target has a shield raised, the shield takes this damage instead.","success":"<b>Greater Corrosive Rune</b> The acid damage dealt by this weapon ignores the target\'s acid resistance."}},"greaterCrushing":{"Name":"Greater Crushing Rune","Note":{"criticalSuccess":"<b>Greater Crushing Rune</b> Your critical hits leave the target @Compendium[pf2e.conditionitems.Clumsy]{clumsy 2} and @Compendium[pf2e.conditionitems.Enfeebled]{enfeebled 2} until the end of your next turn."}},"greaterDisrupting":{"Name":"Greater Disrupting Rune","Note":{"criticalSuccess":"<b>Greater Disrupting Rune</b> On a critical hit the undead creature must attempt a <span data-pf2-check=\\"fortitude\\" data-pf2-traits=\\"incapacitation\\" data-pf2-label=\\"Greater Disrupting Rune\\" data-pf2-dc=\\"34\\">Fortitude</span> save with the following effects. This is an incapacitation effect.<br /><br /><b>Critical Success</b> It\'s @Compendium[pf2e.conditionitems.Enfeebled]{enfeebled 1} until the end of your next turn.<br /><b>Success</b> It\'s @Compendium[pf2e.conditionitems.Enfeebled]{enfeebled 2} until the end of your next turn.<br /><b>Failure</b> It\'s @Compendium[pf2e.conditionitems.Enfeebled]{enfeebled 3} until the end of your next turn.<br /><b>Critical Failure</b> It\'s destroyed."}},"greaterExtending":{"Name":"Greater Extending Rune"},"greaterFanged":{"Name":"Greater Fanged Rune"},"greaterFearsome":{"Name":"Greater Fearsome Rune","Note":{"criticalSuccess":"<b>Greater Fearsome Rune</b> When you critically hit with this weapon, the target becomes @Compendium[pf2e.conditionitems.Frightened]{frightened 2}."}},"greaterFlaming":{"Name":"Greater Flaming Rune","Note":{"criticalSuccess":"<b>Greater Flaming Rune</b> Fire damage dealt by this weapon (including the persistent fire damage) ignores the target\'s fire resistance. When you critically succeed at a Strike with this weapon, you deal an additional [[/r {2d10}[persistent,fire]]] # Greater Flaming Rune]]{2d10 persistent fire} damage.","success":"<b>Greater Flaming Rune</b> Fire damage dealt by this weapon ignores the target\'s fire resistance."}},"greaterFrost":{"Name":"Greater Frost Rune","Note":{"criticalSuccess":"<b>Greater Frost Rune</b> Cold damage dealt by this weapon ignores the target\'s cold resistance. On a critical hit, the target is also @Compendium[pf2e.conditionitems.Slowed]{slowed 1} until the end of your next turn unless it succeeds at a <span data-pf2-check=\\"fortitude\\" data-pf2-label=\\"Frost Rune\\" data-pf2-dc=\\"34\\">Fortitude</span> save.","success":"<b>Greater Frost Rune</b> Cold damage dealt by this weapon ignores the target\'s cold resistance."}},"greaterHauling":{"Name":"Greater Hauling Rune"},"greaterImpactful":{"Name":"Greater Impactful Rune","Note":{"criticalSuccess":"<b>Greater Impactful Rune</b> On a critical hit, you can choose to force the target to succeed at a <span data-pf2-check=\\"fortitude\\" data-pf2-label=\\"Greater Impactful Rune\\" data-pf2-dc=\\"37\\">Fortitude</span> save or be pushed 10 feet away from you."}},"greaterShock":{"Name":"Greater Shock Rune","Note":{"criticalSuccess":"<b>Greater Shock Rune</b> Electricity damage dealt by this weapon ignores the targets electricity resistance (and the other creatures\' on a critical hit). On a critical hit, electricity arcs out to deal an equal amount of electricity damage to up to two other creatures of your choice within 10 feet of the target.","success":"<b>Greater Shock Rune</b> Electricity damage dealt by this weapon ignores the target\'s electricity resistance."}},"greaterThundering":{"Name":"Greater Thundering Rune","Note":{"criticalSuccess":"<b>Greater Thundering Rune</b> Sonic damage dealt by this weapon ignores the target\'s sonic resistance. On a critical hit, the target has to succeed at a <span data-pf2-check=\\"fortitude\\" data-pf2-label=\\"Greater Thundering Rune\\" data-pf2-dc=\\"34\\">Fortitude</span> save or be @Compendium[pf2e.conditionitems.Deafened]{deafened} permanently.","success":"<b>Greater Thundering Rune</b> Sonic damage dealt by this weapon ignores the target\'s sonic resistance."}},"grievous":{"Name":"Grievous Rune","Note":{"Axe":"<b>Grievous Rune</b> You can damage a third creature, with the same restrictions.","Bow":"<b>Grievous Rune</b> The Athletics check to pull the missile free is DC 20.","Brawling":"<b>Grievous Rune</b> The target takes a –4 circumstance penalty to its save.","Club":"<b>Grievous Rune</b> You can knock the target up to 15 feet away.","Dart":"<b>Grievous Rune</b> The base persistent bleed damage increases to 2d6.","Flail":"<b>Grievous Rune</b> You move the target 5 feet. You can\'t move it away from you, but you can move it in another direction of your choice.","Hammer":"<b>Grievous Rune</b> You can also knock the target 5 feet away from you.","Knife":"<b>Grievous Rune</b> The target takes a –5-foot status penalty to its Speed while it has the persistent bleed damage.","Pick":"<b>Grievous Rune</b> The extra damage from the critical specialization effect increases to 4 per weapon damage die.","Polearm":"<b>Grievous Rune</b> You can move the target up to 10 feet.","Shield":"<b>Grievous Rune</b> You can knock the target up to 10 feet away.","Sling":"<b>Grievous Rune</b> The target also takes a –10-foot status penalty to its Speed for 1 round if it fails the save.","Spear":"<b>Grievous Rune</b> The clumsy condition lasts for 2 rounds.","Sword":"<b>Grievous Rune</b> The target is flat-footed until the end of your next turn."}},"hauling":{"Name":"Hauling Rune"},"holy":{"Name":"Holy Rune"},"hopeful":{"Name":"Hopeful Rune","Note":{"criticalSuccess":"<b>Hopeful Rune</b> On a critical hit with this weapon, you inspire your comrades, pushing them to fight harder and stand for your shared convictions. Allies within 30 feet that share at least one alignment component with you gain a +1 status bonus to attack rolls until the end of your next turn."}},"impactful":{"Name":"Impactful Rune","Note":{"criticalSuccess":"<b>Impactful Rune</b> On a critical hit, you can choose to force the target to succeed at a <span data-pf2-check=\\"fortitude\\" data-pf2-label=\\"Impactful Rune\\" data-pf2-dc=\\"27\\">Fortitude</span> save or be pushed 5 feet away from you."}},"keen":{"Name":"Keen Rune","Note":"<b>Keen Rune</b> Attacks with this weapon are a critical hit on a 19 on the die as long as that result is a success. This property has no effect on a 19 if the result would be a failure."},"kinWarding":{"Name":"Kin-Warding Rune"},"majorFanged":{"Name":"Major Fanged Rune"},"pacifying":{"Name":"Pacifying Rune"},"returning":{"Name":"Returning Rune","Note":"<b>Returning Rune</b> When you make a thrown Strike with this weapon, it flies back to your hand after the Strike is complete. If your hands are full when the weapon returns, it falls to the ground in your space."},"serrating":{"Name":"Serrating Rune"},"shifting":{"Name":"Shifting Rune"},"shock":{"Name":"Shock Rune","Note":{"criticalSuccess":"<b>Shock Rune</b> On a critical hit, electricity arcs out to deal an equal amount of electricity damage to up to two other creatures of your choice within 10 feet of the target."}},"speed":{"Name":"Speed Rune"},"spellStoring":{"Name":"Spell-Storing Rune"},"thundering":{"Name":"Thundering Rune","Note":{"criticalSuccess":"<b>Thundering Rune</b> On a critical hit, the target has to succeed at a <span data-pf2-check=\\"fortitude\\" data-pf2-label=\\"Thundering Rune\\" data-pf2-dc=\\"24\\">Fortitude</span> save or be @Compendium[pf2e.conditionitems.Deafened]{deafened} for 1 minute (or 1 hour on a critical failure)."}},"unholy":{"Name":"Unholy Rune"},"vorpal":{"Name":"Vorpal Rune"},"wounding":{"Name":"Wounding Rune","Note":{"criticalSuccess":"<b>Wounding Rune</b> When you critically hit a creature with a wounding weapon, you deal an extra [[/r {1d12}[persistent,bleed] # Wounding Rune]]{1d12 persistent bleed} damage.","success":"<b>Wounding Rune</b> When you hit a creature with a wounding weapon, you deal an extra [[/r {1d6}[persistent,bleed] # Wounding Rune]]{1d6 persistent bleed} damage."}}},"WeaponPropertyRuneAnarchic":"Anarchic","WeaponPropertyRuneAnchoring":"Anchoring","WeaponPropertyRuneAncestralEchoing":"Ancestral Echoing","WeaponPropertyRuneAxiomatic":"Axiomatic","WeaponPropertyRuneBane":"Bane","WeaponPropertyRuneBloodbane":"Bloodbane","WeaponPropertyRuneBloodthirsty":"Bloodthirsty","WeaponPropertyRuneBrilliant":"Brilliant","WeaponPropertyRuneConducting":"Conducting","WeaponPropertyRuneCorrosive":"Corrosive","WeaponPropertyRuneCrushing":"Crushing","WeaponPropertyRuneCunning":"Cunning","WeaponPropertyRuneDancing":"Dancing","WeaponPropertyRuneDisrupting":"Disrupting","WeaponPropertyRuneEnergizing":"Energizing","WeaponPropertyRuneExtending":"Extending","WeaponPropertyRuneFanged":"Fanged","WeaponPropertyRuneFearsome":"Fearsome","WeaponPropertyRuneFlaming":"Flaming","WeaponPropertyRuneFrost":"Frost","WeaponPropertyRuneGhostTouch":"Ghost Touch","WeaponPropertyRuneGreaterAnchoring":"Greater Anchoring","WeaponPropertyRuneGreaterBloodbane":"Greater Bloodbane","WeaponPropertyRuneGreaterBrilliant":"Greater Brilliant","WeaponPropertyRuneGreaterCorrosive":"Greater Corrosive","WeaponPropertyRuneGreaterCrushing":"Greater Crushing","WeaponPropertyRuneGreaterDisrupting":"Greater Disrupting","WeaponPropertyRuneGreaterExtending":"Greater Extending","WeaponPropertyRuneGreaterFanged":"Greater Fanged","WeaponPropertyRuneGreaterFearsome":"Greater Fearsome","WeaponPropertyRuneGreaterFlaming":"Greater Flaming","WeaponPropertyRuneGreaterFrost":"Greater Frost","WeaponPropertyRuneGreaterHauling":"Greater Hauling","WeaponPropertyRuneGreaterImpactful":"Greater Impactful","WeaponPropertyRuneGreaterShock":"Greater Shock","WeaponPropertyRuneGreaterThundering":"Greater Thundering","WeaponPropertyRuneGrievous":"Grievous","WeaponPropertyRuneHauling":"Hauling","WeaponPropertyRuneHoly":"Holy","WeaponPropertyRuneHopeful":"Hopeful","WeaponPropertyRuneImpactful":"Impactful","WeaponPropertyRuneKeen":"Keen","WeaponPropertyRuneKinWarding":"Kin-Warding","WeaponPropertyRuneLabel":"Property Rune","WeaponPropertyRuneMajorFanged":"Major Fanged","WeaponPropertyRunePacifying":"Pacifying","WeaponPropertyRuneReturning":"Returning","WeaponPropertyRuneSerrating":"Serrating","WeaponPropertyRuneShifting":"Shifting","WeaponPropertyRuneShock":"Shock","WeaponPropertyRuneSpeed":"Speed","WeaponPropertyRuneSpellStoring":"Spell-Storing","WeaponPropertyRuneThundering":"Thundering","WeaponPropertyRuneUnholy":"Unholy","WeaponPropertyRuneVorpal":"Vorpal","WeaponPropertyRuneWounding":"Wounding","WeaponPropertyStrikeDamageLabel":"Strike Damage","WeaponPropertyStrikeEffectLabel":"Strike Effect","WeaponRange10":"10 ft.","WeaponRange100":"100 ft.","WeaponRange120":"120 ft.","WeaponRange140":"140 ft.","WeaponRange150":"150 ft.","WeaponRange180":"180 ft.","WeaponRange20":"20 ft.","WeaponRange240":"240 ft.","WeaponRange30":"30 ft.","WeaponRange300":"300 ft.","WeaponRange40":"40 ft.","WeaponRange50":"50 ft.","WeaponRange60":"60 ft.","WeaponRange70":"70 ft.","WeaponRange80":"80 ft.","WeaponRange90":"90 ft.","WeaponRangeLabel":"Weapon Range","WeaponRangeMelee":"Melee","WeaponRangeN":"{range} ft.","WeaponRangeReach":"Reach","WeaponReloadLabel":"Reload Time","WeaponSpecialization":"Weapon Specialization","WeaponSplashDamageLabel":"Splash Damage","WeaponStrikeLabel":"Strike","WeaponTypeAdvanced":"Advanced Weapon","WeaponTypeLabel":"Category","WeaponTypeMartial":"Martial Weapon","WeaponTypeSimple":"Simple Weapon","WeaponTypeSpecial":"Other Weapons","WeaponTypeUnarmed":"Unarmed Attack","Weight":"Weight","WeightTitle":"Your weight","WorldClock":{"Button":{"AddOneRound":"1 Round","AddOneMinute":"1 Minute","AddTenMinutes":"10 Minutes","AddOneHour":"1 Hour","AddOneDay":"1 Day","AddOneWeek":"1 Week","Advance":"Advance","Retract":"Retract"},"Placeholder":"Number","Title":"World Clock","AR":{"Era":"AR","Months":{"January":"Abadius","February":"Calistril","March":"Pharast","April":"Gozran","May":"Desnus","June":"Sarenith","July":"Erastus","August":"Arodus","September":"Rova","October":"Lamashan","November":"Neth","December":"Kuthona"},"Weekdays":{"Monday":"Moonday","Tuesday":"Toilday","Wednesday":"Wealday","Thursday":"Oathday","Friday":"Fireday","Saturday":"Starday","Sunday":"Sunday"}},"IC":{"Era":"IC"},"AD":{"Era":"AD"},"CE":{"Era":"CE"},"Date":"{weekday}, {day} of {month}, {year} {era}"},"condition":{"group":{"detection":"Degrees of Detection","attitudes":"Attitudes","senses":"Senses","death":"Death and Dying"},"blinded":{"name":"Blinded","rules":"<p>You can\'t see. All normal terrain is difficult terrain to you. You can\'t detect anything using vision. You automatically critically fail Perception checks that require you to be able to see, and if vision is your only precise sense, you take a -4 status penalty to Perception checks. You are immune to visual effects. Blinded overrides dazzled.</p>","summary":"You\'re unable to see."},"broken":{"name":"Broken","rules":"<p>Broken is a condition that affects objects. An object is broken when damage has reduced its Hit Points to equal or less than its Broken Threshold. A broken object can\'t be used for its normal function, nor does it grant bonuses-with the exception of armor. Broken armor still grants its item bonus to AC, but it also imparts a status penalty to AC depending on its category: -1 for broken light armor, -2 for broken medium armor, or -3 for broken heavy armor.</p>\\n<p>A broken item still imposes penalties and limitations normally incurred by carrying, holding, or wearing it. For example, broken armor would still impose its Dexterity modifier cap, check penalty, and so forth.</p>\\n<p>If an effect makes an item broken automatically and the item has more HP than its Broken Threshold, that effect also reduces the item\'s current HP to the Broken Threshold.</p>","summary":"This item can\'t be used for its normal function until repaired."},"clumsy":{"name":"Clumsy","rules":"<p>Your movements become clumsy and inexact. Clumsy always includes a value. You take a status penalty equal to the condition value to Dexterity-based checks and DCs, including AC, Reflex saves, ranged attack rolls, and skill checks using Acrobatics, Stealth, and Thievery.</p>","summary":"You can\'t move as easily or gracefully as usual."},"concealed":{"name":"Concealed","rules":"<p>While you are concealed from a creature, such as in a thick fog, you are difficult for that creature to see. You can still be observed, but you\'re tougher to target. A creature that you\'re concealed from must succeed at a DC 5 flat check when targeting you with an attack, spell, or other effect.</p>\\n<p>Area effects aren\'t subject to this flat check. If the check fails, the attack, spell, or effect doesn\'t affect you.</p>","summary":"Fog or similar obscuration makes you difficult to see and target."},"confused":{"name":"Confused","rules":"<p>You don\'t have your wits about you, and you attack wildly. You are flat-footed, you don\'t treat anyone as your ally (though they might still treat you as theirs), and you can\'t Delay, Ready, or use reactions.<p></p>You use all your actions to Strike or cast offensive cantrips, though the GM can have you use other actions to facilitate attack, such as draw a weapon, move so that a target is in reach, and so forth. Your targets are determined randomly by the GM. If you have no other viable targets, you target yourself, automatically hitting but not scoring a critical hit. If it\'s impossible for you to attack or cast spells, you babble incoherently, wasting your actions.</p>\\n<p>Each time you take damage from an attack or spell, you can attempt a DC 11 flat check to recover from your confusion and end the condition.</p>","summary":"You attack indiscriminately."},"controlled":{"name":"Controlled","rules":"<p>Someone else is making your decisions for you, usually because you\'re being commanded or magically dominated. The controller dictates how you act and can make you use any of your actions, including attacks, reactions, or even Delay. The controller usually does not have to spend their own actions when controlling you.</p>","summary":"Another creature determines your actions."},"dazzled":{"name":"Dazzled","rules":"<p>Your eyes are overstimulated. If vision is your only precise sense, all creatures and objects are concealed from you.</p>","summary":"Everything is concealed to you."},"deafened":{"name":"Deafened","rules":"<p>You can\'t hear. You automatically critically fail Perception checks that require you to be able to hear. You take a -2 status penalty to Perception checks for initiative and checks that involve sound but also rely on other senses. If you perform an action with the auditory trait, you must succeed at a DC 5 flat check or the action is lost; attempt the check after spending the action but before any effects are applied. You are immune to auditory effects.</p>","summary":"You\'re unable to hear."},"doomed":{"name":"Doomed","rules":"<p>Your life is ebbing away, bringing you ever closer to death. Some powerful spells and evil creatures can inflict the doomed condition on you. Doomed always includes a value. The maximum dying value at which you die is reduced by your doomed value. For example, if you were doomed 1, you would die upon reaching dying 3 instead of dying 4. If your maximum dying value is ever reduced to 0, you instantly die. When you die, you\'re no longer doomed.</p>\\n<p>Your doomed value decreases by 1 each time you get a full night\'s rest.</p>","summary":"With your soul in peril, you are now closer to death."},"drained":{"name":"Drained","rules":"<p>When a creature successfully drains you of blood or life force, you become less healthy. Drained always includes a value. You take a status penalty equal to your drained value on Constitution-based checks, such as Fortitude saves. You also lose a number of Hit Points equal to your level (minimum 1) times the drained value, and your maximum Hit Points are reduced by the same amount. For example, if you\'re hit by an effect that inflicts drained 3 and you\'re a 3rd-level character, you lose 9 Hit Points and reduce your maximum Hit Points by 9. Losing these Hit Points doesn\'t count as taking damage.</p>\\n<p>Each time you get a full night\'s rest, your drained value decreases by 1. This increases your maximum Hit Points, but you don\'t immediately recover the lost Hit Points.</p>","summary":"Blood loss or something similar has leached your vitality."},"dying":{"name":"Dying","rules":"<p>You are bleeding out or otherwise at death\'s door. While you have this condition, you are unconscious. Dying always includes a value, and if it ever reaches dying 4, you die. If you\'re dying, you must attempt a recovery check at the start of your turn each round to determine whether you get better or worse. Your dying condition increases by 1 if you take damage while dying, or by 2 if you take damage from an enemy\'s critical hit or a critical failure on your save.</p>\\n<p>If you lose the dying condition by succeeding at a recovery check and are still at 0 Hit Points, you remain unconscious, but you can wake up as described in that condition. You lose the dying condition automatically and wake up if you ever have 1 Hit Point or more. Any time you lose the dying condition, you gain the wounded 1 condition, or increase your wounded condition value by 1 if you already have that condition.</p>","summary":"You\'re slipping closer to death."},"encumbered":{"name":"Encumbered","rules":"<p>You are carrying more weight than you can manage. While you\'re encumbered, you\'re clumsy 1 and take a 10-foot penalty to all your Speeds. As with all penalties to your Speed, this can\'t reduce your Speed below 5 feet.</p>","summary":"You\'re carrying more weight than you can manage."},"enfeebled":{"name":"Enfeebled","rules":"<p>You\'re physically weakened. Enfeebled always includes a value. When you are enfeebled, you take a status penalty equal to the condition value to Strength-based rolls and DCs, including Strength-based melee attack rolls, Strength-based damage rolls, and Athletics checks.</p>","summary":"Your strength has been sapped away."},"fascinated":{"name":"Fascinated","rules":"<p>You are compelled to focus your attention on something, distracting you from whatever else is going on around you. You take a -2 status penalty to Perception and skill checks, and you can\'t use actions with the concentrate trait unless they or their intended consequences are related to the subject of your fascination (as determined by the GM). For instance, you might be able to Seek and Recall Knowledge about the subject, but you likely couldn\'t cast a spell targeting a different creature. This condition ends if a creature uses hostile actions against you or any of your allies.</p>","summary":"You are compelled to focus your attention on something."},"fatigued":{"name":"Fatigued","rules":"<p>You\'re tired and can\'t summon much energy. You take a -1 status penalty to AC and saving throws. While exploring, you can\'t choose an exploration activity.</p>\\n<p>You recover from fatigue after a full night\'s rest.</p>","summary":"Your defenses are lower and you can\'t focus while exploring."},"flat-footed":{"name":"Flat-Footed","rules":"<p>You\'re distracted or otherwise unable to focus your full attention on defense. You take a -2 circumstance penalty to AC. Some effects give you the flat-footed condition only to certain creatures or against certain attacks. Others- especially conditions-can make you universally flatfooted against everything. If a rule doesn\'t specify that the condition applies only to certain circumstances, it applies to all of them; for example, many effects simply say \\"The target is flat-footed.\\"</p>","summary":"You\'re unable to defend yourself to your full capability."},"fleeing":{"name":"Fleeing","rules":"<p>You\'re forced to run away due to fear or some other compulsion. On your turn, you must spend each of your actions trying to escape the source of the fleeing condition as expediently as possible (such as by using move actions to flee, or opening doors barring your escape). The source is usually the effect or caster that gave you the condition, though some effects might define something else as the source. You can\'t Delay or Ready while fleeing.</p>","summary":"You must run away."},"friendly":{"name":"Friendly","rules":"<p>This condition reflects a creature\'s disposition toward a particular character, and only supernatural effects (like a spell) can impose these conditions on player characters. A creature that is friendly to a character likes that character. The character can attempt to make a Request of a friendly creature, and the friendly creature is likely to agree to a simple and safe request that doesn\'t cost it much to fulfill. If the character or one of their allies uses hostile actions against the creature, the creature gains a worse attitude condition depending on the severity of the hostile action, as determined by the GM.</p>","summary":"An NPC with this condition has a good attitude toward you."},"frightened":{"name":"Frightened","rules":"<p>You\'re gripped by fear and struggle to control your nerves. The frightened condition always includes a value. You take a status penalty equal to this value to all your checks and DCs. Unless specified otherwise, at the end of each of your turns, the value of your frightened condition decreases by 1.</p>","summary":"Fear makes you less capable of attacking and defending."},"grabbed":{"name":"Grabbed","rules":"<p>You\'re held in place by another creature, giving you the flat-footed and immobilized conditions. If you attempt a manipulate action while grabbed, you must succeed at a DC 5 flat check or it is lost; roll the check after spending the action, but before any effects are applied.</p>","summary":"A creature, object, or magic holds you in place."},"helpful":{"name":"Helpful","rules":"<p>This condition reflects a creature\'s disposition toward a particular character, and only supernatural effects (like a spell) can impose these conditions on player characters. A creature that is helpful to a character wishes to actively aid that character. It will accept reasonable Requests from that character, as long as such requests aren\'t at the expense of the helpful creature\'s goals or quality of life. If the character or one of their allies uses a hostile action against the creature, the creature gains a worse attitude condition depending on the severity of the hostile action, as determined by the GM.</p>","summary":"An NPC with this condition wants to assist you."},"hidden":{"name":"Hidden","rules":"<p>While you\'re hidden from a creature, that creature knows the space you\'re in but can\'t tell precisely where you are. You typically become hidden by using Stealth to Hide. When Seeking a creature using only imprecise senses, it remains hidden, rather than observed. A creature you\'re hidden from is flat-footed to you, and it must succeed at a DC 11 flat check when targeting you with an attack, spell, or other effect or it fails affect you. Area effects aren\'t subject to this flat check.</p>\\n<p>A creature might be able to use the Seek action to try to observe you.</p>","summary":"A creature you\'re hidden from knows your location but can\'t see you."},"hostile":{"name":"Hostile","rules":"<p>This condition reflects a creature\'s disposition toward a particular character, and only supernatural effects (like a spell) can impose these conditions on player characters. A creature that is hostile to a character actively seeks to harm that character. It doesn\'t necessarily attack, but it won\'t accept Requests from the character.</p>","summary":"An NPC with this condition wants to harm you."},"immobilized":{"name":"Immobilized","rules":"<p>You can\'t use any action with the move trait. If you\'re immobilized by something holding you in place and an external force would move you out of your space, the force must succeed at a check against either the DC of the effect holding you in place or the relevant defense (usually Fortitude DC) of the monster holding you in place.</p>","summary":"You can\'t move."},"indifferent":{"name":"Indifferent","rules":"<p>This condition reflects a creature\'s disposition toward a particular character, and only supernatural effects (like a spell) can impose these conditions on player characters. A creature that is indifferent to a character doesn\'t really care one way or the other about that character. Assume a creature\'s attitude to a given character is indifferent unless specified otherwise.</p>","summary":"An NPC with this condition doesn\'t have a strong opinion about you."},"invisible":{"name":"Invisible","rules":"<p>While invisible, you can\'t be seen. You\'re undetected to everyone. Creatures can Seek to attempt to detect you; if a creature succeeds at its Perception check against your Stealth DC, you become hidden to that creature until you Sneak to become undetected again. If you become invisible while someone can already see you, you start out hidden to the observer (instead of undetected) until you successfully Sneak. You can\'t become observed while invisible except via special abilities or magic.</p>","summary":"Creatures can\'t see you."},"observed":{"name":"Observed","rules":"<p>Anything in plain view is observed by you. If a creature takes measures to avoid detection, such as by using Stealth to Hide, it can become hidden or undetected instead of observed. If you have another precise sense instead of or in addition to sight, you might be able to observe a creature or object using that sense instead. You can observe a creature only with precise senses. When Seeking a creature using only imprecise senses, it remains hidden, rather than observed.</p>","summary":"You\'re in plain view."},"paralyzed":{"name":"Paralyzed","rules":"<p>Your body is frozen in place. You have the flat-footed condition and can\'t act except to Recall Knowledge and use actions that require only the use of your mind (as determined by the GM). Your senses still function, but only in the areas you can perceive without moving your body, so you can\'t Seek while paralyzed.</p>","summary":"Your body is frozen in place."},"persistent-damage":{"name":"Persistent Damage","rules":"<p>Persistent damage comes from effects like acid, being on fire, or many other situations. It appears as \\"X persistent [type] damage,\\" where \\"X\\" is the amount of damage dealt and \\"[type]\\" is the damage type. Instead of taking persistent damage immediately, you take it at the end of each of your turns as long as you have the condition, rolling any damage dice anew each time. After you take persistent damage, roll a DC 15 flat check to see if you recover from the persistent damage. If you succeed, the condition ends.</p>","summary":"You keep taking damage every round."},"petrified":{"name":"Petrified","rules":"<p>You have been turned to stone. You can\'t act, nor can you sense anything. You become an object with a Bulk double your normal Bulk (typically 12 for a petrified Medium creature or 6 for a petrified Small creature), AC 9, Hardness 8, and the same current Hit Points you had when alive. You don\'t have a Broken Threshold. When you\'re turned back into flesh, you have the same number of Hit Points you had as a statue. If the statue is destroyed, you immediately die. While petrified, your mind and body are in stasis, so you don\'t age or notice the passing of time.</p>","summary":"You\'ve been turned to stone."},"prone":{"name":"Prone","rules":"<p>You\'re lying on the ground. You are flat-footed and take a -2 circumstance penalty to attack rolls. The only move actions you can use while you\'re prone are Crawl and Stand. Standing up ends the prone condition. You can Take Cover while prone to hunker down and gain cover against ranged attacks, even if you don\'t have an object to get behind, gaining a +4 circumstance bonus to AC against ranged attacks (but you remain flat-footed).</p>\\n<p>If you would be knocked prone while you\'re Climbing or Flying, you fall. You can\'t be knocked prone when Swimming.</p>","summary":"You\'re lying on the ground and are easier to attack."},"quickened":{"name":"Quickened","rules":"<p>You gain 1 additional action at the start of your turn each round. Many effects that make you quickened specify the types of actions you can use with this additional action. If you become quickened from multiple sources, you can use the extra action you\'ve been granted for any single action allowed by any of the effects that made you quickened. Because quickened has its effect at the start of your turn, you don\'t immediately gain actions if you become quickened during your turn.</p>","summary":"You get an extra action each turn."},"restrained":{"name":"Restrained","rules":"<p>You\'re tied up and can barely move, or a creature has you pinned. You have the flat-footed and immobilized conditions, and you can\'t use any actions with the attack or manipulate traits except to attempt to Escape or Force Open your bonds. Restrained overrides grabbed.</p>","summary":"You\'re tied up and can\'t move, or a grappling creature has you pinned."},"sickened":{"name":"Sickened","rules":"<p>You feel ill. Sickened always includes a value. You take a status penalty equal to this value on all your checks and DCs. You can\'t willingly ingest anything-including elixirs and potions-while sickened.</p>\\n<p>You can spend a single action retching in an attempt to recover, which lets you immediately attempt a Fortitude save against the DC of the effect that made you sickened. On a success, you reduce your sickened value by 1 (or by 2 on a critical success).</p>","summary":"You\'re sick to your stomach."},"slowed":{"name":"Slowed","rules":"<p>You have fewer actions. Slowed always includes a value. When you regain your actions at the start of your turn, reduce the number of actions you regain by your slowed value. Because slowed has its effect at the start of your turn, you don\'t immediately lose actions if you become slowed during your turn.</p>","summary":"You lose actions each turn."},"stunned":{"name":"Stunned","rules":"<p>You\'ve become senseless. You can\'t act while stunned. Stunned usually includes a value, which indicates how many total actions you lose, possibly over multiple turns, from being stunned. Each time you regain actions (such as at the start of your turn), reduce the number you regain by your stunned value, then reduce your stunned value by the number of actions you lost. For example, if you were stunned 4, you would lose all 3 of your actions on your turn, reducing you to stunned 1; on your next turn, you would lose 1 more action, and then be able to use your remaining 2 actions normally. Stunned might also have a duration instead of a value, such as \\"stunned for 1 minute.\\" In this case, you lose all your actions for the listed duration.</p>\\n<p>Stunned overrides slowed. If the duration of your stunned condition ends while you are slowed, you count the actions lost to the stunned condition toward those lost to being slowed. So, if you were stunned 1 and slowed 2 at the beginning of your turn, you would lose 1 action from stunned, and then lose only 1 additional action by being slowed, so you would still have 1 action remaining to use that turn.</p>","summary":"You can\'t use actions."},"stupefied":{"name":"Stupefied","rules":"<p>Your thoughts and instincts are clouded. Stupefied always includes a value. You take a status penalty equal to this value on Intelligence-, Wisdom-, and Charisma-based checks and DCs, including Will saving throws, spell attack rolls, spell DCs, and skill checks that use these ability scores. Any time you attempt to Cast a Spell while stupefied, the spell is disrupted unless you succeed at a flat check with a DC equal to 5 + your stupefied value.</p>","summary":"You can\'t access your full mental faculties, and you have trouble casting spells."},"unconscious":{"name":"Unconscious","rules":"<p>You\'re sleeping, or you\'ve been knocked out. You can\'t act. You take a -4 status penalty to AC, Perception, and Reflex saves, and you have the blinded and flat-footed conditions. When you gain this condition, you fall prone and drop items you are wielding or holding unless the effect states otherwise or the GM determines you\'re in a position in which you wouldn\'t.</p>\\n<p>If you\'re unconscious because you\'re dying, you can\'t wake up while you have 0 Hit Points. If you are restored to 1 Hit Point or more via healing, you lose the dying and unconscious conditions and can act normally on your next turn.</p>\\n<p>If you are unconscious and at 0 Hit Points, but not dying, you naturally return to 1 Hit Point and awaken after sufficient time passes. The GM determines how long you remain unconscious, from a minimum of 10 minutes to several hours. If you receive healing during this time, you lose the unconscious condition and can act normally on your next turn.</p>\\n<p>If you\'re unconscious and have more than 1 Hit Point (typically because you are asleep or unconscious due to an effect), you wake up in one of the following ways. Each causes you to lose the unconscious condition.</p><ul><li>You take damage, provided the damage doesn\'t reduce you to 0 Hit Points. If the damage reduces you to 0 Hit Points, you remain unconscious and gain the dying condition as normal.</li><li>You receive healing, other than the natural healing you get from resting.</li><li>Someone shakes you awake with an Interact action.</li><li>There\'s loud noise going on around you-though this isn\'t automatic. At the start of your turn, you automatically attempt a Perception check against the noise\'s DC (or the lowest DC if there is more than one noise), waking up if you succeed. If creatures are attempting to stay quiet around you, this Perception check uses their Stealth DCs. Some magical effects make you sleep so deeply that they don\'t allow you to attempt this Perception check.</li><li>If you are simply asleep, the GM decides you wake up either because you have had a restful night\'s sleep or something disrupted that rest.</ul>","summary":"You\'re asleep or knocked out."},"undetected":{"name":"Undetected","rules":"<p>When you are undetected by a creature, that creature cannot see you at all, has no idea what space you occupy, and can\'t target you, though you still can be affected by abilities that target an area. When you\'re undetected by a creature, that creature is flat-footed to you.</p>\\n<p>A creature you\'re undetected by can guess which square you\'re in to try targeting you. It must pick a square and attempt an attack. This works like targeting a hidden creature (requiring a DC 11 flat check), but the flat check and attack roll are rolled in secret by the GM, who doesn\'t reveal whether the attack missed due to failing the flat check, failing the attack roll, or choosing the wrong square.</p>\\n<p>A creature can use the Seek action to try to find you.</p>","summary":"A creature you\'re undetected by doesn\'t know where you are."},"unfriendly":{"name":"Unfriendly","rules":"<p>This condition reflects a creature\'s disposition toward a particular character, and only supernatural effects (like a spell) can impose these conditions on player characters. A creature that is unfriendly to a character dislikes and specifically distrusts that character. The unfriendly creature won\'t accept Requests from the character.</p>","summary":"An NPC with this condition doesn\'t like you."},"unnoticed":{"name":"Unnoticed","rules":"<p>If you are unnoticed by a creature, that creature has no idea you are present at all. When you\'re unnoticed, you\'re also undetected by the creature. This condition matters for abilities that can be used only against targets totally unaware of your presence.</p>","summary":"A creature is entirely unaware you\'re present."},"wounded":{"name":"Wounded","rules":"<p>You have been seriously injured. If you lose the dying condition and do not already have the wounded condition, you become wounded 1. If you already have the wounded condition when you lose the dying condition, your wounded condition value increases by 1. If you gain the dying condition while wounded, increase your dying condition value by your wounded value.</p>\\n<p>The wounded condition ends if someone successfully restores Hit Points to you with Treat Wounds, or if you are restored to full Hit Points and rest for 10 minutes.</p>","summary":"You\'ve been brought back from the brink of death but haven\'t fully recovered."}},"ui":{"equipmentInvested":"Toggle investing your equipment","armorEquipped":"Toggle wearing your equipment","sell":"Sell","weaponEquipped":"Toggle holding your weapon"},"UnitedPaizoWorkers":{"Title":"Announcement: United Paizo Workers","ReleaseIntro":"Redmond, WA (October 14th, 2021) — Today, the workers at Paizo, Inc – publisher of the Pathfinder and Starfinder roleplaying games – are announcing their formation of the United Paizo Workers union (UPW), with the Communication Workers of America\'s CODE-CWA project. This union is the first of its kind in the tabletop roleplaying games industry.","PFSNote":"Note for Pathfinder Society players: In support of UPW, merchandise purchased from the union store will count in the Online PFS region for the <span class=\\"hover\\" title=\\"When you use a Hero Point to reroll a check, add a +1 cirumstance bonus to the reroll\\">Promotional Vestments</a> boon."},"identification":{"Identify":"Identify Item","PostSkillsToChat":"Post skill checks to chat","PostSkillsToChatText":"Identify item: Skill checks","IsIdentified":"Identified?","IdentifyMagicDCs":"Identify Magic DCs","IdentifyAlchemyDCs":"Identify Alchemy DCs","IdentifyGenericDCs":"Identify Generic DCs","MisidentifiedItem":"Misidentified {item}","Misidentify":"Misidentify Item","Mystify":"Mystify Item","MystificationStatus":"Mystification status","Identified":"Identified","Unidentified":"Unidentified","TraitGMNote":"Note: this trait is hidden from players.","UnidentifiedDescription":"The nature of this {item} is unclear.","UnidentifiedHint":"Change the basic display details of this item when unidentified.","UnidentifiedItem":"Unusual {item}","UnidentifiedType":{"Amulet":"Amulet","Anklets":"Anklets","Armbands":"Armbands","Backpack":"Backpack","Belt":"Belt","Circlet":"Circlet","Cloak":"Cloak","Collar":"Collar","Book":"Book","Bracers":"Bracers","Epaulets":"Epaulets","Eyepiece":"Eyepiece","Garment":"Garment","Gloves":"Gloves","Headwear":"Headwear","Horseshoes":"Horseshoes","Liquid":"Liquid","Mask":"Mask","Necklace":"Necklace","Object":"Object","Ring":"Ring","Saddle":"Saddle","Shoes":"Shoes","Substance":"Substance","Tool":"Tool"}},"loot":{"EditLootLabel":"Configure Loot?","GMSettings":"GM Settings","PermissionError":"A GM must be online in order to loot or stow an item.","InsufficientCurrencyError":"Insufficient currency for purchase by {buyer}","LootDescription":"Allows for distribution of coins across players","LootLabel":"Loot","LootNamePlaceholder":"Loot","LootNPCsPopupHeader":"Choose tokens to loot from","LootNPCsLabel":"Loot selected tokens","MerchantDescription":"Allows players to purchase items directly from the sheet.","MerchantLabel":"Merchant","MoveLoot":"Move items","MoveLootMessage":"How many items do you want to move?","MoveLootPopupTitle":"Move Loot","TakeSubtitle":"Take item","DepositSubtitle":"Deposit item","TransferSubtitle":"Transfer item","LootSubtitle":"Loot item","HiddenWhenEmpty":{"Label":"Hidden when empty","Hint":"Hide this actor\'s token(s) when its inventory is empty"},"PlantSubtitle":"Plant Item","BuySubtitle":"Buy item","SellSubtitle":"Sell item","GiveSubtitle":"Give item","TakeMessage":"{taker} takes {quantity} × {item} from {container}.","DepositMessage":"{depositor} deposits {quantity} × {item} in {container}.","TransferMessage":"{transferrer} moves {quantity} × {item} from {fromContainer} to {toContainer}.","LootMessage":"{looter} loots {quantity} × {item} off {corpse}.","PlantMessage":"{planter} plants {quantity} × {item} on {corpse}.","SellMessage":"{seller} sells {quantity} × {item} to {buyer}.","GiveMessage":"{giver} gives {quantity} × {item} to {recipient}.","InsufficientFundsMessage":"{buyer} reaches for their coins but comes up short!","GMSupervisionError":"A GM must be online in order to interact with {loot}.","Quantity":"Quantity","SheetType":"Sheet Type","SplitCoinsLabel":"Distribute Coins","SplitCoinsPopupHeader":"Choose actors to receive a share"},"vehicle":{"ItemTypeError":"Only inventory items and actions are currently supported by vehicles.","VehicleString":"Vehicle","NamePlaceholder":"Vehicle","VehicleLevelLabel":"Vehicle","DescriptionHeading":"Description","PilotingCheckLabel":"Piloting Check","CrewLabel":"Crew","PassengersLabel":"Passengers","collisionDCLabel":"Collision DC","collisionDamageLabel":"Collision Damage","SpaceLongLabel":"Length","SpaceWideLabel":"Width","SpaceHighLabel":"Height","BrokenThresholdShortLabel":"BT","CurrentHPTitel":"Current Hitpoints","MaxHPTitle":"Maximum Hitpoints","HardnessShortLabel":"Hard.","HardnessLabel":"Hardness","PropertyDescriptionPrice":"Vehicle\'s Price. This does not include creatures for pulling a vehicle, materials needed to power the vehicle, or the cost of rowers.","PropertyDescriptionSpace":"Vehicle\'s dimensions, not including any creatures pulling the vehicle.","PropertyDescriptionCrew":"The crew members required to operate the vehicle.","PropertyDescriptionPassengers":"The number of passengers the vehicle is typically configured to carry, if any.","PropertyDescriptionPilotingCheck":"This entry lists the skills that can be used for piloting checks while operating the vehicle. Some skills may increase the DC; these list the DC adjustment in parentheses following the skill name.","PropertyDescriptionSpeed":"The vehicle\'s Speeds, each followed by the propulsion type for that Speed in parentheses. A pulled vehicle indicates the number and size of the pulling creatures.","PropertyDescriptionCollisionDC":"The vehicles\'s DC for saving throws to mitigate damage.","PropertyDescriptionCollisionDamage":"The vehicle\'s collision damage. Unless otherwise stated, collisions deal bludgeoning damage."},"Familiar":{"Master":"Master","MasterActor":"Master Actor","MasterLevel":"Master Level","SelectMaster":"Select a master...","MasterSpellcastingAbility":"Master Spellcasting Ability","TotalNumberFamiliarAbilities":"Total # of Familiar Abilities","Familiar":"Familiar","Creature":"Creature","Perception":"Perception","Defenses":"Defense","ArmorClass":"Armor Class","Offenses":"Offenses","AttackRoll":"Attack Roll","Skills":"Skills"},"NPC":{"Abilities":{"Glossary":{"AllAroundVision":"<p>This monster can see in all directions simultaneously, and therefore can\'t be flanked.</p>","AquaticAmbush":"<p data-visibility=\\"gm\\"><strong>Requirements</strong> The monster is hiding in water and a creature that hasn\'t detected it is within the listed number of feet.</p>\\n<p><strong>Effect</strong> The monster moves up to its swim Speed + 10 feet toward the triggering creature, traveling on water and on land. Once the creature is in reach, the monster makes a Strike against it. The creature is @Compendium[pf2e.conditionitems.Flat-Footed]{Flat-Footed} against this Strike.</p>","AttackOfOpportunity":"<p data-visibility=\\"gm\\"><strong>Trigger</strong> A creature within the monster\'s reach uses a manipulate action or a move action, makes a ranged attack, or leaves a square during a move action it\'s using.</p>\\n<p><strong>Effect</strong> The monster attempts a melee Strike against the triggering creature. If the attack is a critical hit and the trigger was a manipulate action, the monster disrupts that action. This Strike doesn\'t count toward the monster\'s multiple attack penalty, and its multiple attack penalty doesn\'t apply to this Strike.</p>","AtWillSpells":"<p>The monster can cast its at-will spells any number of times without using up spell slots.</p>","Aura":"<p>A monster\'s aura automatically affects everything within a specified emanation around that monster. The monster doesn\'t need to spend actions on the aura; rather, the aura\'s effects are applied at specific times, such as when a creature ends its turn in the aura or when creatures enter the aura.</p>\\n<p>If an aura does nothing but deal damage, its entry lists only the radius, damage, and saving throw. Such auras deal this damage to a creature when the creature enters the aura and when a creature starts its turn in the aura. A creature can take damage from the aura only once per round.</p>\\n<p>The GM might determine that a monster\'s aura doesn\'t affect its own allies. For example, a creature might be immune to a monster\'s frightful presence if they have been around each other for a long time.</p>","Buck":"<hr />\\n<p>Most monsters that serve as mounts can attempt to buck off unwanted or annoying riders, but most mounts will not use this reaction against a trusted creature unless the mounts are spooked or mistreated.</p>\\n<p data-visibility=\\"gm\\"><strong>Trigger</strong> A creature @Compendium[pf2e.actionspf2e.Mount]{Mounts} or uses the @Compendium[pf2e.actionspf2e.Command an Animal]{Command an Animal} action while riding the monster.</p>\\n<p><strong>Effect</strong> The triggering creature must succeed at a Reflex saving throw against the listed DC or fall off the creature and land @Compendium[pf2e.conditionitems.Prone]{Prone}. If the save is a critical failure, the triggering creature also takes [[/roll {1d6}[bludgeoning]]]{1d6 bludgeoning damage} in addition to the normal damage for the fall.</p>","CatchRock":"<div data-visibility=\\"gm\\">\\n<p><strong>Requirements</strong> The monster must have a free hand but can @Compendium[pf2e.actionspf2e.Release]{Release} anything it\'s holding as part of this reaction.</p>\\n<p><strong>Trigger</strong> The monster is targeted with a thrown rock Strike or a rock would fall on the monster.</p>\\n</div>\\n<p><strong>Effect</strong> The monster gains a +4 circumstance bonus to its AC against the triggering attack or to any defense against the falling rock. If the attack misses or the monster successfully defends against the falling rock, the monster catches the rock, takes no damage, and is now holding the rock</p>","ChangeShape":"<p>The monster changes its shape indefinitely. It can use this action again to return to its natural shape or adopt a new shape. Unless otherwise noted, a monster cannot use Change Shape to appear as a specific individual. Using Change Shape counts as creating a disguise for the @Compendium[pf2e.actionspf2e.Impersonate]{Impersonate} use of Deception. The monster\'s transformation automatically defeats Perception DCs to determine whether the creature is a member of the ancestry or creature type into which it transformed, and it gains a +4 status bonus to its Deception DC to prevent others from seeing through its disguise. Change Shape abilities specify what shapes the monster can adopt. The monster doesn\'t gain any special abilities of the new shape, only its physical form. For example, in each shape, it replaces its normal Speeds and Strikes, and might potentially change its senses or size. Any changes are listed in its stat block.</p>","ConstantSpells":"<p>A constant spell affects the monster without the monster needing to cast it, and its duration is unlimited. If a constant spell gets counteracted, the monster can reactivate it by spending the normal spellcasting actions the spell requires.</p>","Constrict":"<p>The monster deals the listed amount of damage to any number of creatures @Compendium[pf2e.conditionitems.Grabbed]{Grabbed} or @Compendium[pf2e.conditionitems.Restrained]{Restrained} by it. Each of those creatures can attempt a basic Fortitude save with the listed DC.</p>","Coven":"<p>This monster can form a coven with two or more other creatures who also have the coven ability. This involves performing an 8-hour ceremony with all prospective coven members. After the coven is formed, each of its members gains elite adjustments, adjusting their levels accordingly. Coven members can sense other members\' locations and conditions by spending a single action, which has the concentrate trait, and can sense what another coven member is sensing as a two-action activity, which has the concentrate trait as well.</p>\\n<p>Covens also grant spells and rituals to their members, but these can be cast only in cooperation between three coven members who are all within 30 feet of one another. A coven member can contribute to a coven spell with a single-action spellcasting activity that has a single verbal component. If two coven members have contributed these actions within the last round, a third member can cast a coven spell on her turn by spending the normal spellcasting actions. A coven can cast its coven spells an unlimited number of times but can cast only one coven spell each round. All covens grant the 8th-level <em>@Compendium[pf2e.spells-srd.Baleful Polymorph]{Baleful Polymorph}</em> spell and all the following spells, which the coven can cast at any level up to 5th: <em>@Compendium[pf2e.spells-srd.Augury]{Augury}</em>, <em>@Compendium[pf2e.spells-srd.Charm]{Charm}</em>, <em>@Compendium[pf2e.spells-srd.Clairaudience]{Clairaudience}</em>, <em>@Compendium[pf2e.spells-srd.Clairvoyance]{Clairvoyance}</em>, <em>@Compendium[pf2e.spells-srd.Dream Message]{Dream Message}</em>, <em>@Compendium[pf2e.spells-srd.Illusory Disguise]{Illusory Disguise}</em>, <em>@Compendium[pf2e.spells-srd.Illusory Scene]{Illusory Scene}</em>, <em>@Compendium[pf2e.spells-srd.Prying Eye]{Prying Eye}</em>, and <em>@Compendium[pf2e.spells-srd.Talking Corpse]{Talking Corpse}</em>. Individual creatures with the coven ability also grant additional spells to any coven they join. A coven can also cast the <em>@Compendium[pf2e.spells-srd.Control Weather]{Control Weather}</em> ritual, with a DC of 23 instead of the standard DC.</p>\\n<p>If a coven member leaving the coven or the death of a coven member brings the coven below three members, the remaining members keep their elite adjustments for 24 hours, but without enough members to contribute the necessary actions, they can\'t cast coven spells.</p>","Darkvision":"<p>A monster with darkvision can see perfectly well in areas of darkness and dim light, though such vision is in black and white only. Some forms of magical darkness, such as a 4th-level <em>@Compendium[pf2e.spells-srd.Darkness]{Darkness}</em> spell, block normal darkvision. A monster with @Compendium[pf2e.bestiary-ability-glossary-srd.Greater Darkvision]{Greater Darkvision}, however, can see through even these forms of magical darkness.</p>","Disease":"<p>When a creature is exposed to a monster\'s disease, it attempts a Fortitude save or succumbs to the disease. The level of a disease is the level of the monster inflicting the disease. The disease follows the rules for afflictions.</p>","Engulf":"<p>The monster Strides up to double its Speed and can move through the spaces of any creatures in its path. Any creature of the monster\'s size or smaller whose space the monster moves through can attempt a Reflex save with the listed DC to avoid being engulfed. A creature unable to act automatically critically fails this save. If a creature succeeds at its save, it can choose to be either pushed aside (out of the monster\'s path) or pushed in front of the monster to the end of the monster\'s movement. The monster can attempt to Engulf the same creature only once in a single use of Engulf. The monster can contain as many creatures as can fit in its space.</p>\\n<p>A creature that fails its save is pulled into the monster\'s body. It is @Compendium[pf2e.conditionitems.Grabbed]{Grabbed}, is @Compendium[pf2e.conditionitems.Slowed]{Slowed 1}, and has to hold its breath or start suffocating. The creature takes the listed amount of damage when first engulfed and at the end of each of its turns while it\'s engulfed. An engulfed creature can get free by @Compendium[pf2e.actionspf2e.Escape]{Escaping} against the listed escape DC. An engulfed creature can attack the monster engulfing it, but only with unarmed attacks or with weapons of light Bulk or less. The engulfing creature is @Compendium[pf2e.conditionitems.Flat-Footed]{Flat-Footed} against the attack. If the monster takes piercing or slashing damage equaling or exceeding the listed Rupture value from a single attack or spell, the engulfed creature cuts itself free. A creature that gets free by either method can immediately breathe and exits the swallowing monster\'s space.</p>\\n<p>If the monster dies, all creatures it has engulfed are automatically released as the monster\'s form loses cohesion.</p>","FastHealing":"<p>A monster with this ability regains the given number of Hit Points each round at the beginning of its turn.</p>","Ferocity":"<p data-visibility=\\"gm\\"><strong>Trigger</strong> The monster is reduced to 0 HP.</p>\\n<p><strong>Effect</strong> The monster avoids being knocked out and remains at 1 HP, but its @Compendium[pf2e.conditionitems.Wounded]{Wounded} value increases by 1. When it is Wounded 3, it can no longer use this ability</p>","FormUp":"<p>The troop chooses one of the squares it currently occupies and redistributes its squares to any configuration in which all squares are contiguous and within 15 feet of the chosen square. The troop can\'t share its space with other creatures.</p>","FrightfulPresence":"<hr />\\n<p>A creature that first enters the area must attempt a Will save.</p>\\n<div data-visibility=\\"gm\\">\\n<p>Regardless of the result of the saving throw, the creature is temporarily immune to this monster\'s Frightful Presence for 1 minute.</p>\\n<hr />\\n<p><strong>Critical Success</strong> The creature is unaffected by the presence.</p>\\n<p><strong>Success</strong> The creature is @Compendium[pf2e.conditionitems.Frightened]{Frightened 1}.</p>\\n<p><strong>Failure</strong> The creature is @Compendium[pf2e.conditionitems.Frightened]{Frightened 2}.</p>\\n<p><strong>Critical Failure</strong> The creature is @Compendium[pf2e.conditionitems.Frightened]{Frightened 4}.</p>\\n</div>","Grab":"<p data-visibility=\\"gm\\"><strong>Requirements</strong> The monster\'s last action was a success with a Strike that lists Grab in its damage entry, or it has a creature grabbed using this action.</p>\\n<p><strong>Effect</strong> The monster automatically Grabs the target until the end of the monster\'s next turn. The creature is @Compendium[pf2e.conditionitems.Grabbed]{Grabbed} by whichever body part the monster attacked with, and that body part can\'t be used to Strike creatures until the grab is ended. Using Grab extends the duration of the monster\'s Grab until the end of its next turn for all creatures grabbed by it. A grabbed creature can use the @Compendium[pf2e.actionspf2e.Escape]{Escape} action to get out of the grab, and the Grab ends for a grabbed creatures if the monster moves away from it.</p>","GreaterConstrict":"<p>The monster deals the listed amount of damage to any number of creatures @Compendium[pf2e.conditionitems.Grabbed]{Grabbed} or @Compendium[pf2e.conditionitems.Restrained]{Restrained} by it. Each of those creatures can attempt a basic Fortitude save with the listed DC. A creature that fails this save falls @Compendium[pf2e.conditionitems.Unconscious]{Unconscious}, and a creature that succeeds is then temporarily immune to falling unconscious from Greater Constrict for 1 minute.</p>","GreaterDarkvision":"<p>A creature with greater darkvision can see perfectly well in areas of darkness and dim light, though such vision is in black and white only. Some forms of magical darkness, such as a 4th-level <em>@Compendium[pf2e.spells-srd.Darkness]{Darkness}</em> spell, block normal @Compendium[pf2e.bestiary-ability-glossary-srd.Darkvision]{Darkvision}. A creature with greater darkvision, however, can see through even these forms of magical darkness.</p>","ImprovedGrab":"<p>The monster can use @Compendium[pf2e.bestiary-ability-glossary-srd.Grab]{Grab} as a free action triggered by a hit with its initial attack. A monster with Improved Grab still needs to spend an action to extend the duration for creatures it already has @Compendium[pf2e.conditionitems.Grabbed]{Grabbed}.</p>","ImprovedKnockdown":"<p>The monster can use @Compendium[pf2e.bestiary-ability-glossary-srd.Knockdown]{Knockdown} as a free action triggered by a hit with its initial attack.</p>","ImprovedPush":"<p>The monster can use @Compendium[pf2e.bestiary-ability-glossary-srd.Push]{Push} as a free action triggered by a hit with its initial attack.</p>","Knockdown":"<p data-visibility=\\"gm\\"><strong>Requirements</strong> The monster\'s last action was a success with a Strike that lists Knockdown in its damage entry.</p>\\n<p><strong>Effect</strong> The monster knocks the target @Compendium[pf2e.conditionitems.Prone]{Prone}.</p>","Lifesense":"<p>Lifesense allows a monster to sense the vital essence of living and undead creatures within the listed range. The sense can distinguish between the positive energy animating living creatures and the negative energy animating undead creatures, much as sight distinguishes colors.</p>","LightBlindness":"<p>When first exposed to bright light, the monster is @Compendium[pf2e.conditionitems.Blinded]{Blinded} until the end of its next turn. After this exposure, light doesn\'t blind the monster again until after it spends 1 hour in darkness. However, as long as the monster is in an area of bright light, it\'s @Compendium[pf2e.conditionitems.Dazzled]{Dazzled}.</p>","LowLightVision":"<p>The monster can see in dim light as though it were bright light, so it ignores the @Compendium[pf2e.conditionitems.Concealed]{Concealed} condition due to dim light.</p>","NegativeHealing":"<p>A creature with negative healing draws health from negative energy rather than positive energy. It is damaged by positive damage and is not healed by positive healing effects. It does not take negative damage, and it is healed by negative effects that heal undead.</p>","Poison":"<p>When a creature is exposed to a monster\'s poison, it attempts a Fortitude save to avoid becoming poisoned. The level of a poison is the level of the monster inflicting the poison. The poison follows the rules for afflictions.</p>","PowerAttack":"<p data-visibility=\\"gm\\"><strong>Frequency</strong> once per round</p>\\n<p><strong>Effect</strong> The monster makes a melee Strike. This counts as two attacks when calculating the monster\'s multiple attack penalty. If this Strike hits, the monster deals an extra die of weapon damage.</p>","Push":"<p data-visibility=\\"gm\\"><strong>Requirements</strong> The monster\'s last action was a success with a Strike that lists Push in its damage entry.</p>\\n<p><strong>Effect</strong> The monster automatically knocks the target away from the monster. Unless otherwise noted in the ability description, the creature is pushed 5 feet. If the attack was a critical hit, this distance is doubled.</p>","Regeneration":"<p>This monster regains the listed number of Hit Points each round at the beginning of its turn. Its @Compendium[pf2e.conditionitems.Dying]{Dying} condition never increases beyond Dying 3 as long as its regeneration is active. However, if it takes damage of a type listed in the regeneration entry, its regeneration deactivates until the end of its next turn. Deactivate the regeneration before applying any damage of a listed type, since that damage might kill the monster by bringing it to Dying 4.</p>","Rend":"<p>A Rend entry lists a Strike the monster has.</p>\\n<p data-visibility=\\"gm\\"><strong>Requirements</strong> The monster hit the same enemy with two consecutive Strikes of the listed type in the same round.</p>\\n<p><strong>Effect</strong> The monster automatically deals that Strike\'s damage again to the enemy.</p>","RetributiveStrike":"<p data-visibility=\\"gm\\"><strong>Trigger</strong> An enemy damages the monster\'s ally, and both are within 15 feet of the monster.</p>\\n<p><strong>Effect</strong> The ally gains resistance to all damage against the triggering damage equal to 2 + the monster\'s level. If the foe is within reach, the monster makes a melee Strike against it.</p>","Scent":"<p>Scent involves sensing creatures or objects by smell, and is usually a vague sense. The range is listed in the ability, and it functions only if the creature or object being detected emits an aroma (for instance, incorporeal creatures usually do not exude an aroma).</p>\\n<p>If a creature emits a heavy aroma or is upwind, the GM can double or even triple the range of scent abilities used to detect that creature, and the GM can reduce the range if a creature is downwind.</p>","ShieldBlock":"<p data-visibility=\\"gm\\"><strong>Trigger</strong> The monster has its shield raised and takes damage from a physical attack.</p>\\n<p><strong>Effect</strong> The monster snaps its shield into place to deflect a blow. The shield prevents the monster from taking an amount of damage up to the shield\'s Hardness. The monster and the shield each take any remaining damage, possibly breaking or destroying the shield.</p>","SneakAttack":"<p>When the monster Strikes a creature that has the @Compendium[pf2e.conditionitems.Flat-Footed]{Flat-Footed} condition with an agile or finesse melee weapon, an agile or finesse unarmed attack, or a ranged weapon attack, it also deals the listed precision damage. For a ranged attack with a thrown weapon, that weapon must also be an agile or finesse weapon.</p>","SwallowWhole":"<p>The monster attempts to swallow a creature of the listed size or smaller that it has grabbed in its jaws or mouth. If a swallowed creature is of the maximum size listed, the monster can\'t use Swallow Whole again. If the creature is smaller than the maximum, the monster can usually swallow more creatures; the GM determines the maximum. The monster attempts an Athletics check opposed by the grabbed creature\'s Reflex DC. If it succeeds, it swallows the creature. The monster\'s mouth or jaws no longer grab a creature it has swallowed, so the monster is free to use them to Strike or Grab once again. The monster can\'t attack creatures it has swallowed.</p>\\n<p>A swallowed creature is @Compendium[pf2e.conditionitems.Grabbed]{Grabbed}, is @Compendium[pf2e.conditionitems.Slowed]{Slowed 1}, and has to hold its breath or start suffocating. The swallowed creature takes the listed amount of damage when first swallowed and at the end of each of its turns while it\'s swallowed. If the victim @Compendium[pf2e.actionspf2e.Escape]{Escapes} this ability\'s grabbed condition, it exits through the monster\'s mouth. This frees any other creature grabbed in the monster\'s mouth or jaws. A swallowed creature can attack the monster that has swallowed it, but only with unarmed attacks or with weapons of light Bulk or less. The swallowing creature is @Compendium[pf2e.conditionitems.Flat-Footed]{Flat-Footed} against the attack. If the monster takes piercing or slashing damage equaling or exceeding the listed Rupture value from a single attack or spell, the swallowed creature cuts itself free. A creature that gets free by either Escaping or cutting itself free can immediately breathe and exits the swallowing monster\'s space.</p>\\n<p>If the monster dies, a swallowed creature can be freed by creatures adjacent to the corpse if they spend a combined total of 3 actions cutting the monster open with a weapon or unarmed attack that deals piercing or slashing damage.</p>","SwarmMind":"<p>This monster doesn\'t have a single mind (typically because it\'s a swarm of smaller creatures), and is immune to mental effects that target only a specific number of creatures. It is still subject to mental effects that affect all creatures in an area.</p>","Telepathy":"<p>A monster with telepathy can communicate mentally with any creatures within the listed radius, as long as they share a language. This doesn\'t give any special access to their thoughts, and communicates no more information than normal speech would.</p>","Thoughtsense":"<p>Thoughtsense allows a monster to sense all non-mindless creatures at the listed range.</p>","ThrowRock":"<p>The monster picks up a rock within reach or retrieves a stowed rock and throws it, making a ranged Strike.</p>","Trample":"<p>The monster Strides up to double its Speed and can move through the spaces of creatures of the listed size, Trampling each creature whose space it enters. The monster can attempt to Trample the same creature only once in a single use of Trample. The monster deals the damage of the listed Strike, but trampled creatures can attempt a basic Reflex save at the listed DC (no damage on a critical success, half damage on a success, double damage on a critical failure).</p>","Tremorsense":"<p>Tremorsense allows a monster to feel the vibrations through a solid surface caused by movement. It is an imprecise sense with a limited range (listed in the ability). Tremorsense functions only if the monster is on the same surface as the subject, and only if the subject is moving along (or burrowing through) the surface.</p>","TroopDefenses":"<p>Troops are composed of many individuals, and over the course of enough attacks and downed comrades, troops shrink in size. Most troops start with 16 squares (4 by 4), and their Hit Points have two listed thresholds, typically the first is at 2/3 their maximum Hit Points and the second is at 1/3 their maximum Hit Points. Once the troop drops below the first threshold, it loses 4 squares, leaving 12 squares remaining, and the first threshold becomes the troop\'s new maximum Hit Points. Once the troop falls below the second threshold, it loses another 4 squares, leaving 8 squares remaining, and the second threshold becomes the troop\'s new maximum Hit Points. In order to restore its size and maximum Hit Points, a troop needs to spend downtime to use long-term treatment on casualties or recruit new members to replace the fallen. At 0 Hit Points, the troop is reduced down to 4 squares, which is too few to sustain the troop, so it disperses entirely, with the few remaining members surrendering, fleeing, or easily dispatched, depending on their nature.</p>\\n<p>A damaging single-target effect, such as a Strike, can\'t force a troop to pass through more than one threshold at once. For instance, if a troop had 60 Hit Points, with thresholds at 40 and 20, a Strike for 50 damage would leave the troop at 21 Hit Points, just above the second threshold. A damaging area effect or multi-target effect can cross multiple thresholds at once and could potentially destroy the entire troop in one shot.</p>\\n<p>Non-damaging effects with an area or that target all creatures in a certain proximity affect a troop normally if they affect the entire area occupied by the troop. If an effect has a smaller area or numbers of targets, it typically has no effect on the troop. However, if the effect can target at least four creatures or cover at least four squares in the troop, and if it would prevent its targets from acting, cause them to flee, or otherwise make them unable to function as part of the troop for a round or more, the troop loses loses a number of Hit Points equal to the amount required to bring it to the next threshold, removing 4 squares. If an effect would both deal damage and automatically cross a threshold due to incapacitating some of the creatures in the troop, apply the damage first. If the damage wasn\'t enough to cross a threshold on its own, then reduce the Hit Points to cross the threshold for the incapacitating effect.</p>","Wavesense":"<p>This sense allows a monster to feel vibrations caused by movement through a liquid. It\'s an imprecise sense with a limited range (listed in the ability). Wavesense functions only if monster and the subject are in the same body of liquid, and only if the subject is moving through the liquid.</p>"}},"ActionsList":{"ActionName":"Name","Type":"Type","Cost":"Cost","Traits":"Traits"},"AddAction":"Add Action","AddArmor":"Armor","AddConsumable":"Consumable","AddEquipment":"Equipment","AddItem":"Add Item","AddSkill":"Add Skill","AddTrait":"Add Trait","AddTreasure":"Treasure","AddWeapon":"Weapon","Adjustment":{"EliteLabel":"Elite","EliteNameFormat":"Elite {name}","NormalLabel":"Normal","WeakLabel":"Weak","WeakNameFormat":"Weak {name}"},"ArmorExtraInfoLabelPlaceholder":"AC details...","Attacks":"Attacks","AttackType":{"Melee":"NPC Melee Attack","Ranged":"NPC Ranged Attack","Weapon":"Compendium Weapon"},"Creature":"Creature","Dead":"Dead","Edit":"Edit","EditImmunities":"Edit Immunities","EditLanguages":"Edit Languages","EditResistances":"Edit Resistances","EditSenses":"Edit Senses","EditSkills":"Edit Skills","EditSpeed":"Edit Speed","EditTraits":"Edit Traits","EditWeaknesses":"Edit Weaknesses","MainTab":"Main","NotesTab":"Notes","PassivesLabel":"Passives","PublicNotes":"Public Notes","PrivateNotes":"Private Notes","Remove":"Remove","SendToChat":"Send to chat","SpeedLabel":"Speed","SpellsTab":"Spells","HPExtraInfoLabelPlaceholder":"HP details...","Inventory":{"Header":{"NameLabel":"Name","QuantityLabel":"Quantity"}},"InventoryTab":"Inventory","SavesExtraInfoLabelPlaceholder":"Bonus to all saves...","SensesLabel":"Senses","SpeedExtraInfoLabelPlaceholder":"Speed details...","Spells":{"AttackLabel":"Attack","DCLabel":"DC","PreparedLabel":"Prepared","PreparedShortLabel":"Prep."},"SkillRollFlavor":"{skillName} Skill Check ({rank})","SkillsEditor":{"BonusLabel":"Bonus","NameLabel":"Skill Name","SpecialCaseLabel":"Special case","TitleLabel":"NPC Skills Editor"}},"DamageButton":{"Full":"Apply full damage to selected tokens.","FullContext":"Apply Damage","FullShort":"Damage","Half":"Apply half damage to selected tokens.","HalfContext":"Half Damage","HalfShort":"Half","Double":"Apply double damage to selected tokens.","DoubleContext":"Double Damage","DoubleShort":"Double","Triple":"Apply triple damage to selected tokens.","TripleContext":"Apply Triple Damage","TripleShort":"Triple","ShieldBlock":"Toggle the shield block status of the selected tokens.","ShieldBlockContext":"Shield Block","ShieldBlockShort":"Block","Healing":"Apply full healing to selected tokens.","HealingContext":"Apply Healing","HealingShort":"Heal"}}}')}},__webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={exports:{}};return __webpack_modules__[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(result,chunkIds,fn,priority)=>{if(!chunkIds){var notFulfilled=1/0;for(i=0;i<deferred.length;i++){for(var[chunkIds,fn,priority]=deferred[i],fulfilled=!0,j=0;j<chunkIds.length;j++)(!1&priority||notFulfilled>=priority)&&Object.keys(__webpack_require__.O).every((key=>__webpack_require__.O[key](chunkIds[j])))?chunkIds.splice(j--,1):(fulfilled=!1,priority<notFulfilled&&(notFulfilled=priority));if(fulfilled){deferred.splice(i--,1);var r=fn();void 0!==r&&(result=r)}}return result}priority=priority||0;for(var i=deferred.length;i>0&&deferred[i-1][2]>priority;i--)deferred[i]=deferred[i-1];deferred[i]=[chunkIds,fn,priority]},__webpack_require__.d=(exports,definition)=>{for(var key in definition)__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop),__webpack_require__.r=exports=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},(()=>{var installedChunks={179:0,285:0};__webpack_require__.O.j=chunkId=>0===installedChunks[chunkId];var webpackJsonpCallback=(parentChunkLoadingFunction,data)=>{var moduleId,chunkId,[chunkIds,moreModules,runtime]=data,i=0;if(chunkIds.some((id=>0!==installedChunks[id]))){for(moduleId in moreModules)__webpack_require__.o(moreModules,moduleId)&&(__webpack_require__.m[moduleId]=moreModules[moduleId]);if(runtime)var result=runtime(__webpack_require__)}for(parentChunkLoadingFunction&&parentChunkLoadingFunction(data);i<chunkIds.length;i++)chunkId=chunkIds[i],__webpack_require__.o(installedChunks,chunkId)&&installedChunks[chunkId]&&installedChunks[chunkId][0](),installedChunks[chunkIds[i]]=0;return __webpack_require__.O(result)},chunkLoadingGlobal=self.webpackChunkfoundry_pf2e=self.webpackChunkfoundry_pf2e||[];chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null,0)),chunkLoadingGlobal.push=webpackJsonpCallback.bind(null,chunkLoadingGlobal.push.bind(chunkLoadingGlobal))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(30417)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();