{"version":3,"file":"module.js","sources":["src/constants.js","src/lib/lib.js","src/socket.js","node_modules/svelte/internal/index.mjs","node_modules/svelte/store/index.mjs","src/StatefulVideo.js","src/module.js"],"sourcesContent":["const CONSTANTS = {\r\n  MODULE_NAME: \"the-kinemancer\",\r\n\r\n  BEHAVIORS: {\r\n    STILL: \"still\",\r\n    STILL_HIDDEN: \"still-hidden\",\r\n    LOOP: \"loop\",\r\n    ONCE_NEXT: \"once-next\",\r\n    ONCE_PREVIOUS: \"once-previous\",\r\n    ONCE_PREVIOUS_ACTIVE: \"once-previous-active\",\r\n    ONCE_SPECIFIC: \"once-specific\",\r\n    RANDOM: \"random\",\r\n    RANDOM_IF: \"random-if\",\r\n  },\r\n  START: {\r\n    START: \"start\",\r\n    MID: \"mid\",\r\n    PREV: \"prev\",\r\n    END: \"end\"\r\n  },\r\n  END: {\r\n    NEXT: \"next\",\r\n    MID: \"mid\",\r\n    END: \"end\"\r\n  },\r\n  NUMBER_TYPES: {\r\n    FRAMES: \"frames\",\r\n    MILLISECONDS: \"milliseconds\",\r\n    SECONDS: \"seconds\"\r\n  }\r\n}\r\n\r\nCONSTANTS.HOOKS = {\r\n  RENDER_UI: `${CONSTANTS.MODULE_NAME}.renderUI`,\r\n}\r\n\r\nCONSTANTS.SOCKET_NAME = `module.${CONSTANTS.MODULE_NAME}`;\r\nCONSTANTS.MODULE_LOCATION = `modules/${CONSTANTS.MODULE_NAME}/`;\r\n\r\nCONSTANTS.FLAG_KEYS = {\r\n  PREVIOUS_STATE: \"previousState\",\r\n  CURRENT_STATE: \"currentState\",\r\n  QUEUED_STATE: \"queuedState\",\r\n  UPDATED: \"updated\",\r\n  STATES: \"states\",\r\n  NUMBER_TYPE: \"numberType\",\r\n  FPS: \"fps\",\r\n  DELEGATED_STATEFUL_VIDEOS: \"delegatedStatefulVideos\",\r\n}\r\n\r\nCONSTANTS.STATE_FLAGS = {\r\n  id: null,\r\n  name: null,\r\n  icon: \"\",\r\n  default: false,\r\n  start: 0,\r\n  end: \"\",\r\n  behavior: CONSTANTS.BEHAVIORS.STILL,\r\n  nextState: null,\r\n  randomState: null,\r\n  randomStart: null,\r\n  randomEnd: null\r\n}\r\n\r\nCONSTANTS.FLAGS = `flags.${CONSTANTS.MODULE_NAME}`;\r\nCONSTANTS.PREVIOUS_STATE_FLAG = `flags.${CONSTANTS.MODULE_NAME}.${CONSTANTS.FLAG_KEYS.PREVIOUS_STATE}`;\r\nCONSTANTS.CURRENT_STATE_FLAG = `flags.${CONSTANTS.MODULE_NAME}.${CONSTANTS.FLAG_KEYS.CURRENT_STATE}`;\r\nCONSTANTS.QUEUED_STATE_FLAG = `flags.${CONSTANTS.MODULE_NAME}.${CONSTANTS.FLAG_KEYS.QUEUED_STATE}`;\r\nCONSTANTS.UPDATED_FLAG = `flags.${CONSTANTS.MODULE_NAME}.${CONSTANTS.FLAG_KEYS.UPDATED}`;\r\nCONSTANTS.STATES_FLAG = `flags.${CONSTANTS.MODULE_NAME}.${CONSTANTS.FLAG_KEYS.STATES}`;\r\nCONSTANTS.NUMBER_TYPE_FLAG = `flags.${CONSTANTS.MODULE_NAME}.${CONSTANTS.FLAG_KEYS.NUMBER_TYPE}`;\r\nCONSTANTS.FPS_FLAG = `flags.${CONSTANTS.MODULE_NAME}.${CONSTANTS.FLAG_KEYS.FPS}`;\r\nCONSTANTS.DELEGATED_STATEFUL_VIDEOS_FLAG = `flags.${CONSTANTS.MODULE_NAME}.${CONSTANTS.FLAG_KEYS.DELEGATED_STATEFUL_VIDEOS}`;\r\n\r\nCONSTANTS.TRANSLATED_BEHAVIORS = {\r\n  [CONSTANTS.BEHAVIORS.STILL]: \"Still\",\r\n  [CONSTANTS.BEHAVIORS.STILL_HIDDEN]: \"Still (hidden)\",\r\n  [CONSTANTS.BEHAVIORS.LOOP]: \"Loop\",\r\n  [CONSTANTS.BEHAVIORS.ONCE_NEXT]: \"Once, then next state\",\r\n  [CONSTANTS.BEHAVIORS.ONCE_PREVIOUS]: \"Once, then previous state\",\r\n  [CONSTANTS.BEHAVIORS.ONCE_PREVIOUS_ACTIVE]: \"Once, then previous active state\",\r\n  [CONSTANTS.BEHAVIORS.ONCE_SPECIFIC]: \"Once, then specific state\",\r\n  [CONSTANTS.BEHAVIORS.RANDOM]: \"Random\",\r\n  [CONSTANTS.BEHAVIORS.RANDOM_IF]: \"Random if\",\r\n}\r\n\r\nCONSTANTS.BEHAVIOR_COLOR = {\r\n  [CONSTANTS.BEHAVIORS.STILL]: \"rgb(125, 125, 125)\",\r\n  [CONSTANTS.BEHAVIORS.STILL_HIDDEN]: \"rgb(125, 125, 125)\",\r\n  [CONSTANTS.BEHAVIORS.LOOP]: \"rgb(0,179,210)\",\r\n  [CONSTANTS.BEHAVIORS.ONCE_NEXT]: \"rgb(183,32,32)\",\r\n  [CONSTANTS.BEHAVIORS.ONCE_PREVIOUS]: \"rgb(183,32,32)\",\r\n  [CONSTANTS.BEHAVIORS.ONCE_PREVIOUS_ACTIVE]: \"rgb(183,32,32)\",\r\n  [CONSTANTS.BEHAVIORS.ONCE_SPECIFIC]: \"rgb(183,32,32)\",\r\n  [CONSTANTS.BEHAVIORS.RANDOM]: \"rgb(166,70,234)\",\r\n  [CONSTANTS.BEHAVIORS.RANDOM_IF]: \"rgb(166,70,234)\",\r\n}\r\n\r\nCONSTANTS.COLOR_CODE = {\r\n  \"none\": \"background: repeating-conic-gradient(#888 0% 25%, #333 0% 50%) 50% / 40px 40px;\",\r\n  \"night\": \"background: url('modules/the-kinemancer/assets/color-night.svg');\",\r\n  \"day\": \"background: url('modules/the-kinemancer/assets/color-day.svg');\",\r\n  \"spring\": \"background: url('modules/the-kinemancer/assets/color-spring.svg');\",\r\n  \"summer\": \"background: url('modules/the-kinemancer/assets/color-summer.svg');\",\r\n  \"autumn\": \"background: url('modules/the-kinemancer/assets/color-autumn.svg');\",\r\n  \"winter\": \"background: url('modules/the-kinemancer/assets/color-winter.svg');\",\r\n  \"frozen\": \"background: url('modules/the-kinemancer/assets/color-winter.svg');\",\r\n  \"cold\": \"background: url('modules/the-kinemancer/assets/color-winter.svg');\",\r\n  \"fireflies\": \"background: url('modules/the-kinemancer/assets/color-fireflies.svg');\",\r\n  \"blood\": \"background: url('modules/the-kinemancer/assets/color-massacre.svg');\",\r\n  \"wounded\": \"background: url('modules/the-kinemancer/assets/color-massacre.svg');\",\r\n  \"massacre\": \"background: url('modules/the-kinemancer/assets/color-massacre.svg');\",\r\n  \"fae\": \"background: url('modules/the-kinemancer/assets/color-fae.svg');\",\r\n  \"fire\": \"background: url('modules/the-kinemancer/assets/color-fire.svg');\",\r\n  \"burning\": \"background: url('modules/the-kinemancer/assets/color-fire.svg');\",\r\n  \"damaged\": \"background: url('modules/the-kinemancer/assets/color-damaged.svg');\",\r\n  \"old\": \"background: url('modules/the-kinemancer/assets/color-damaged.svg');\",\r\n  \"cracked\": \"background: url('modules/the-kinemancer/assets/color-damaged.svg');\",\r\n  \"rusty\": \"background: url('modules/the-kinemancer/assets/color-rusty.svg');\",\r\n  \"dirty\": \"background: url('modules/the-kinemancer/assets/color-dirty.svg');\",\r\n  \"blue\": \"background-color: #0085fa;\",\r\n  \"blue dark\": \"background-color: #0037fa;\",\r\n  \"blue light\": \"background-color: #1ad7ff;\",\r\n  \"brown\": \"background-color: #a2633f;\",\r\n  \"brown dark\": \"background-color: #68422c;\",\r\n  \"brown light\": \"background-color: #c8a384;\",\r\n  \"green\": \"background-color: #12ff05;\",\r\n  \"green dark\": \"background-color: #00944b;\",\r\n  \"green light\": \"background-color: #86ff6b;\",\r\n  \"green yellow\": \"background-color: #bbff0f;\",\r\n  \"grey\": \"background-color: #7d7d7d;\",\r\n  \"grey dark\": \"background-color: #4f4f4f;\",\r\n  \"grey light\": \"background-color: #c2c2c2;\",\r\n  \"pink\": \"background-color: #ff57f4;\",\r\n  \"pink dark\": \"background-color: #bd00a8;\",\r\n  \"pink light\": \"background-color: #ffb3fa;\",\r\n  \"purple\": \"background-color: #cf57ff;\",\r\n  \"purple dark\": \"background-color: #8a00c2;\",\r\n  \"purple light\": \"background-color: #e9b3ff;\",\r\n  \"orange\": \"background-color: #ff9a00;\",\r\n  \"orange dark\": \"background-color: #db6000;\",\r\n  \"orange light\": \"background-color: #ffc46b;\",\r\n  \"red\": \"background-color: #ff4c47;\",\r\n  \"red dark\": \"background-color: #c70500;\",\r\n  \"red light\": \"background-color: #ff8d8a;\",\r\n  \"yellow\": \"background-color: #fff633;\",\r\n  \"yellow dark\": \"background-color: #e6db00;\",\r\n  \"yellow light\": \"background-color: #fffa8a;\",\r\n  \"gold\": \"background-color: #d4af37;\",\r\n  \"white\": \"background-color: #ffffff;\",\r\n  \"black\": \"background-color: #000000;\",\r\n  \"dark\": \"background-color: #303030;\",\r\n  \"light\": \"background-color: #ededed;\",\r\n  \"multicolor\": `background: linear-gradient(\r\n      90deg,\r\n      rgba(255, 0, 0, 1) 0%,\r\n      rgba(255, 154, 0, 1) 10%,\r\n      rgba(208, 222, 33, 1) 20%,\r\n      rgba(79, 220, 74, 1) 30%,\r\n      rgba(63, 218, 216, 1) 40%,\r\n      rgba(47, 201, 226, 1) 50%,\r\n      rgba(28, 127, 238, 1) 60%,\r\n      rgba(95, 21, 242, 1) 70%,\r\n      rgba(186, 12, 248, 1) 80%,\r\n      rgba(251, 7, 217, 1) 90%,\r\n      rgba(255, 0, 0, 1) 100%\r\n  );`,\r\n}\r\n\r\nCONSTANTS.COLOR_NAME = {\r\n  \"none\": \"Default\",\r\n  \"night\": \"Night\",\r\n  \"day\": \"Day\",\r\n  \"spring\": \"Spring\",\r\n  \"summer\": \"Summer\",\r\n  \"autumn\": \"Autumn\",\r\n  \"winter\": \"Winter\",\r\n  \"frozen\": \"Frozen\",\r\n  \"cold\": \"Cold\",\r\n  \"fireflies\": \"Fireflies\",\r\n  \"blood\": \"Blood\",\r\n  \"wounded\": \"Wounded\",\r\n  \"massacre\": \"Massacre\",\r\n  \"fae\": \"Fae\",\r\n  \"fire\": \"Fire\",\r\n  \"burning\": \"Burning\",\r\n  \"damaged\": \"Damaged\",\r\n  \"old\": \"Old\",\r\n  \"cracked\": \"Cracked\",\r\n  \"rusty\": \"Rusty\",\r\n  \"dirty\": \"Dirty\",\r\n  \"blue\": \"Blue\",\r\n  \"blue dark\": \"Dark Blue\",\r\n  \"blue light\": \"Light Blue\",\r\n  \"brown\": \"Brown\",\r\n  \"brown dark\": \"Dark Brown\",\r\n  \"brown light\": \"Light Brown\",\r\n  \"green\": \"Green\",\r\n  \"green dark\": \"Dark Green\",\r\n  \"green light\": \"Light Green\",\r\n  \"green yellow\": \"Yellow Green\",\r\n  \"grey\": \"Grey\",\r\n  \"grey dark\": \"Dark Grey\",\r\n  \"grey light\": \"Light Grey\",\r\n  \"pink\": \"Pink\",\r\n  \"pink dark\": \"Dark Pink\",\r\n  \"pink light\": \"Light Pink\",\r\n  \"purple\": \"Purple\",\r\n  \"purple dark\": \"Dark Purple\",\r\n  \"purple light\": \"Light Purple\",\r\n  \"orange\": \"Orange\",\r\n  \"orange dark\": \"Dark Orange\",\r\n  \"orange light\": \"Light Orange\",\r\n  \"red\": \"Red\",\r\n  \"red dark\": \"Dark Red\",\r\n  \"red light\": \"Light Red\",\r\n  \"yellow\": \"Yellow\",\r\n  \"yellow dark\": \"Dark Yellow\",\r\n  \"yellow light\": \"Light Yellow\",\r\n  \"gold\": \"Gold\",\r\n  \"white\": \"White\",\r\n  \"black\": \"Black\",\r\n  \"dark\": \"Dark\",\r\n  \"light\": \"Light\",\r\n  \"multicolor\": \"Multicolor\",\r\n}\r\n\r\nexport default CONSTANTS;\r\n","import CONSTANTS from \"../constants.js\";\r\n\r\nexport function isActiveGM(user) {\r\n  return user.active && user.isGM;\r\n}\r\n\r\nexport function getActiveGMs() {\r\n  return game.users.filter(isActiveGM);\r\n}\r\n\r\nexport function getActiveUsers() {\r\n  return game.users.filter(user => user.active);\r\n}\r\n\r\nexport function isResponsibleGM() {\r\n  if (!game.user.isGM) {\r\n    return false;\r\n  }\r\n  return !getResponsibleGM();\r\n}\r\n\r\nexport function getResponsibleGM() {\r\n  return getActiveGMs().find(other => other.id < game.user.id);\r\n}\r\n\r\nexport function isGMConnected() {\r\n  return !!Array.from(game.users).find(user => user.isGM && user.active);\r\n}\r\n\r\nexport function getSceneDelegator() {\r\n\r\n  const activeUsers = getActiveUsers().filter(user => {\r\n    return user.viewedScene === game.user.viewedScene\r\n  });\r\n\r\n  activeUsers.sort((a, b) => {\r\n    return (getProperty(b, CONSTANTS.UPDATED_FLAG) ?? 0) - (getProperty(a, CONSTANTS.UPDATED_FLAG) ?? 0);\r\n  });\r\n\r\n  activeUsers.sort((a, b) => b.isGM - a.isGM);\r\n\r\n  return activeUsers[0];\r\n}\r\n\r\nexport function isRealNumber(n) {\r\n  const num = Number(n);\r\n  return typeof num == 'number' && !isNaN(num) && isFinite(num);\r\n}\r\n\r\n/**\r\n *  Returns a floating point number between a minimum and maximum value\r\n *\r\n * @param  {number}     min                     The minimum value\r\n * @param  {number}     max                     The maximum value\r\n * @return {number}                             A random value between the range given\r\n */\r\nexport function randomFloatBetween(min, max) {\r\n  const _max = Math.max(max, min);\r\n  const _min = Math.min(max, min);\r\n  return Math.random() * (_max - _min) + _min;\r\n}\r\n\r\n/**\r\n *  Returns an integer between a minimum and maximum value\r\n *\r\n * @param  {number}     min                     The minimum value\r\n * @param  {number}     max                     The maximum value\r\n * @return {int}                                A random integer between the range given\r\n */\r\nexport function randomIntegerBetween(min, max) {\r\n  return Math.floor(randomFloatBetween(min, max));\r\n}\r\n\r\nexport function transformNumber(num) {\r\n  // Flip the input number\r\n  const flippedNum = 1 - num;\r\n\r\n  // Apply exponential transformation with base 2\r\n  const transformedNum = 1 - Math.pow(2, -flippedNum);\r\n\r\n  // Flip the output number\r\n  return 1 - transformedNum;\r\n}\r\n\r\nexport async function getWildCardFiles(inFile) {\r\n\r\n  if (!inFile) return false;\r\n\r\n  let source = 'data';\r\n  const browseOptions = { wildcard: true };\r\n\r\n  if (/\\.s3\\./.test(inFile)) {\r\n    source = 's3'\r\n    const { bucket, keyPrefix } = FilePicker.parseS3URL(inFile);\r\n    if (bucket) {\r\n      browseOptions.bucket = bucket;\r\n      inFile = keyPrefix;\r\n    }\r\n  }\r\n\r\n  try {\r\n    return (await FilePicker.browse(source, inFile, browseOptions)).files;\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function getVideoDuration(src) {\r\n  return new Promise((resolve) => {\r\n    const video = document.createElement('video');\r\n    video.preload = 'metadata';\r\n    video.onloadedmetadata = function () {\r\n      resolve(video.duration);\r\n    }\r\n    video.src = src;\r\n  });\r\n}\r\n\r\nexport function validateStates(states) {\r\n\r\n  const errors = [];\r\n\r\n  for (const [index, state] of states.entries()) {\r\n\r\n    if (!(isRealNumber(state.start) || Object.values(CONSTANTS.START).some(val => val === state.start))) {\r\n      errors.push(`State \"${state.name}\" has an invalid value in its \"start\" setting`);\r\n    }\r\n\r\n    if (!(isRealNumber(state.end) || Object.values(CONSTANTS.END).some(val => val === state.end))) {\r\n      if (state.behavior === CONSTANTS.BEHAVIORS.STILL || state.behavior === CONSTANTS.BEHAVIORS.STILL_HIDDEN) {\r\n        state.end = \"\";\r\n      } else {\r\n        errors.push(`State \"${state.name}\" has an invalid value in its \"end\" setting`)\r\n      }\r\n    }\r\n\r\n    switch (state.behavior) {\r\n      case CONSTANTS.BEHAVIORS.ONCE_PREVIOUS:\r\n        if (index === 0) {\r\n          errors.push(`State \"${state.name}\" cannot have \"once, previous\" behavior because it is the first state`)\r\n        }\r\n        break;\r\n      case CONSTANTS.BEHAVIORS.ONCE_NEXT:\r\n        if (index === states.length - 1) {\r\n          errors.push(`State \"${state.name}\" cannot have \"once, next\" behavior because it is the last state`)\r\n        }\r\n        break;\r\n    }\r\n\r\n    if (state.start === CONSTANTS.START.PREV) {\r\n      const previousState = states?.[index - 1];\r\n      if (previousState) {\r\n        if (!isRealNumber(previousState.end)) {\r\n          errors.push(`State \"${state.name}\" cannot have \"prev\" as its start time, because state \"${previousState.name}\" does not end at a specific time`)\r\n        }\r\n      } else {\r\n        errors.push(`State \"${state.name}\" cannot have \"prev\" as its start time, because it is the first state`)\r\n      }\r\n    }\r\n\r\n    if (state.end === CONSTANTS.END.NEXT) {\r\n      const nextState = states?.[index + 1];\r\n      if (nextState) {\r\n        if (!isRealNumber(nextState.start)) {\r\n          errors.push(`State \"${state.name}\" cannot have \"next\" as its end time, because state \"${nextState.name}\" does not start at a specific time`)\r\n        }\r\n      } else {\r\n        errors.push(`State \"${state.name}\" cannot have \"next\" as its end time, because it is the last state`)\r\n      }\r\n    }\r\n  }\r\n  return errors;\r\n}\r\n\r\nexport function determineFileColor(inFile) {\r\n\r\n  const lowerCaseFile = decodeURI(inFile.toLowerCase());\r\n\r\n  for (const [colorName, color] of Object.entries(CONSTANTS.COLOR_CODE)) {\r\n    if (lowerCaseFile.endsWith(`__${colorName}.webm`)) {\r\n      return { colorName, color, tooltip: CONSTANTS.COLOR_NAME[colorName] };\r\n    }\r\n  }\r\n\r\n  return {\r\n    colorName: false,\r\n    color: CONSTANTS.COLOR_CODE[\"none\"],\r\n    tooltip: CONSTANTS.COLOR_NAME[\"none\"]\r\n  };\r\n\r\n}\r\n\r\nexport function getThumbnailVariations(url) {\r\n  return Object.keys(CONST.IMAGE_FILE_EXTENSIONS).map(ext => url.replace(\".webm\", \".\" + ext));\r\n}\r\n\r\nexport function getVideoJsonPath(placeableDocument) {\r\n  return decodeURI(placeableDocument.texture.src).split(\"  \")[0]\r\n    .replace(\".webm\", \"\") + \".json\";\r\n}\r\n\r\nexport function createJsonFile(placeableDocument, inData) {\r\n  const path = getVideoJsonPath(placeableDocument)\r\n  const splitPath = path.split('/');\r\n  const serializedData = JSON.stringify(inData);\r\n  const blob = new Blob([serializedData], { type: 'application/json' });\r\n  const file = new File([blob], splitPath.pop());\r\n  return FilePicker.upload(\"data\", splitPath.join('/'), file, {}, { notify: false });\r\n}\r\n","import CONSTANTS from \"./constants.js\";\r\n\r\nexport default class SocketHandler {\r\n\r\n  static UPDATE_PLACEABLE_DOCUMENT = \"update-placeable-document\";\r\n\r\n  static handlers = {\r\n    [this.UPDATE_PLACEABLE_DOCUMENT]: this._updatePlaceableDocument\r\n  }\r\n\r\n  static initialize() {\r\n    game.socket.on(CONSTANTS.SOCKET_NAME, (data) => {\r\n      if (this.handlers[data.type]) {\r\n        this.handlers[data.type](data.payload);\r\n      }\r\n    });\r\n  }\r\n\r\n  static emit(handler, data) {\r\n    game.socket.emit(CONSTANTS.SOCKET_NAME, {\r\n      type: handler,\r\n      payload: data\r\n    });\r\n  }\r\n\r\n  static async _updatePlaceableDocument(data) {\r\n    const { uuid, update, userId } = data;\r\n    if (userId !== game.user.id) return;\r\n    const placeableDocument = fromUuidSync(uuid);\r\n    return placeableDocument.update(update);\r\n  }\r\n\r\n}\r\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.55.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import CONSTANTS from \"./constants.js\";\r\nimport * as lib from \"./lib/lib.js\";\r\nimport SocketHandler from \"./socket.js\";\r\nimport { get, writable } from \"svelte/store\";\r\n\r\nconst statefulVideoHudMap = new Map();\r\nconst managedStatefulVideos = new Map();\r\nlet currentDelegator = false;\r\nlet delegateDebounce = false;\r\n\r\nexport const copiedData = writable(false);\r\nconst hudScale = writable(0);\r\n\r\nexport class StatefulVideo {\r\n\r\n  constructor(document, texture) {\r\n    this.document = document;\r\n    this.uuid = this.document.uuid;\r\n    this.flags = new Flags(this.document);\r\n    this.offset = this.flags.offset;\r\n    this.texture = texture;\r\n    this.video = this.texture.baseTexture.resource.source;\r\n    this.timeout = null;\r\n    this.still = false;\r\n    this.nextButton = false;\r\n    this.prevButton = false;\r\n    this.select = false;\r\n    this.newCurrentTime = null;\r\n    this.randomTimers = {};\r\n    this.ready = !!currentDelegator;\r\n  }\r\n\r\n  static setAllReady() {\r\n    this.getAll().forEach(statefulVideo => {\r\n      if (!statefulVideo.ready) {\r\n        statefulVideo.ready = true;\r\n        statefulVideo.flags.updateData();\r\n        statefulVideo.setupRandomTimers();\r\n        game.video.play(statefulVideo.video);\r\n      }\r\n    });\r\n  }\r\n\r\n  static determineCurrentDelegator() {\r\n\r\n    if (delegateDebounce) delegateDebounce();\r\n\r\n    delegateDebounce = foundry.utils.debounce(async () => {\r\n\r\n      // When you first render a scene, determine which user should be the delegator\r\n      const newDelegator = lib.getSceneDelegator();\r\n\r\n      // If the user isn't the delegator, they should clear their own info to avoid confusion\r\n      if (!game.user.isGM && newDelegator !== game.user && lib.isGMConnected()) {\r\n        await game.user.unsetFlag(CONSTANTS.MODULE_NAME, CONSTANTS.FLAG_KEYS.DELEGATED_STATEFUL_VIDEOS);\r\n      }\r\n\r\n      // If the delegator has changed to a non-GM, and the new delegator is you, whilst there are no GMs connected\r\n      if (newDelegator !== currentDelegator && !newDelegator.isGM && newDelegator === game.user && !lib.isGMConnected()) {\r\n\r\n        // Grab all stateful video's current state\r\n        let updates = {};\r\n        StatefulVideo.getAll().forEach(statefulVideo => {\r\n          updates[CONSTANTS.DELEGATED_STATEFUL_VIDEOS_FLAG + \".\" + statefulVideo.delegationUuid] = statefulVideo.flags.getData();\r\n        });\r\n\r\n        currentDelegator = newDelegator;\r\n\r\n        // Store the stateful video's current state on yourself\r\n        await game.user.update(updates);\r\n\r\n      }\r\n\r\n      currentDelegator = newDelegator;\r\n\r\n      StatefulVideo.setAllReady();\r\n\r\n    }, 100);\r\n\r\n  }\r\n\r\n  static registerHooks() {\r\n\r\n    Hooks.on('userConnected', () => {\r\n      this.determineCurrentDelegator();\r\n    });\r\n\r\n    Hooks.on('getSceneNavigationContext', () => {\r\n      this.determineCurrentDelegator();\r\n    });\r\n\r\n    let firstUpdate = true;\r\n    Hooks.on('updateUser', (user, data) => {\r\n\r\n      // If the user wasn't updated with delegated stateful videos, exit\r\n      if (!hasProperty(data, CONSTANTS.DELEGATED_STATEFUL_VIDEOS_FLAG)) return;\r\n\r\n      // If they were, but it was removed, exit\r\n      const statefulVideos = getProperty(data, CONSTANTS.DELEGATED_STATEFUL_VIDEOS_FLAG);\r\n      if (!statefulVideos) return;\r\n\r\n      // If the current delegator is a GM, don't do anything, they will handle updates\r\n      if (currentDelegator.isGM) return;\r\n\r\n      // Otherwise, loop through each of the updated stateful videos\r\n      Object.keys(statefulVideos).forEach(key => {\r\n        // Get the stateful video based on the UUID that was updated on the user\r\n        const statefulVideo = StatefulVideo.get(`Scene.${key.split(\"_\").join(\".\")}`);\r\n        if (!statefulVideo) return;\r\n        // Call the update method, and pass the user that is the current delegator\r\n        StatefulVideo.onUpdate(statefulVideo.document, // Construct a similar diff as normal video updates would create\r\n          foundry.utils.mergeObject({\r\n            [CONSTANTS.FLAGS]: statefulVideos[key]\r\n          }, {}), firstUpdate);\r\n      });\r\n      firstUpdate = false;\r\n    });\r\n\r\n    Hooks.on(\"renderBasePlaceableHUD\", (app, html) => {\r\n      statefulVideoHudMap.set(app.object.document.uuid, app);\r\n      StatefulVideo.renderStatefulVideoHud(app, html);\r\n    });\r\n\r\n    Hooks.on(\"preUpdateTile\", (placeableDoc, data) => {\r\n      StatefulVideo.onPreUpdate(placeableDoc, data);\r\n    });\r\n\r\n    Hooks.on(\"updateTile\", (placeableDoc, data) => {\r\n      StatefulVideo.onUpdate(placeableDoc, data);\r\n    });\r\n\r\n    Hooks.on(\"createTile\", (placeableDoc) => {\r\n      const path = lib.getVideoJsonPath(placeableDoc);\r\n      fetch(path)\r\n        .then(response => response.json())\r\n        .then((result) => {\r\n          setTimeout(() => {\r\n            placeableDoc.update(result);\r\n          }, 500);\r\n        })\r\n        .catch(err => {\r\n        });\r\n    });\r\n\r\n    Hooks.on(\"preUpdateToken\", (placeableDoc, data) => {\r\n      StatefulVideo.onPreUpdate(placeableDoc, data);\r\n    });\r\n\r\n    Hooks.on(\"updateToken\", (placeableDoc, data) => {\r\n      StatefulVideo.onUpdate(placeableDoc, data);\r\n    });\r\n\r\n    Hooks.on(\"createToken\", (placeableDoc) => {\r\n      const path = lib.getVideoJsonPath(placeableDoc);\r\n      fetch(path)\r\n        .then(response => response.json())\r\n        .then((result) => {\r\n          placeableDoc.update(result);\r\n        })\r\n        .catch(err => {\r\n        });\r\n    });\r\n\r\n    let firstUserGesture = false;\r\n    let canvasReady = false\r\n    Hooks.once(\"canvasFirstUserGesture\", () => {\r\n      firstUserGesture = true;\r\n      if (canvasReady) {\r\n        StatefulVideo.canvasReady();\r\n      }\r\n    });\r\n\r\n    Hooks.on(\"canvasReady\", () => {\r\n      canvasReady = true;\r\n      if (firstUserGesture) {\r\n        StatefulVideo.canvasReady();\r\n      } else {\r\n        StatefulVideo.canvasNotReady();\r\n      }\r\n    })\r\n\r\n    Hooks.on(\"canvasPan\", () => {\r\n      hudScale.set(canvas.stage.scale.x);\r\n    });\r\n\r\n    hudScale.subscribe(() => {\r\n      StatefulVideo.getAll().forEach(statefulVideo => statefulVideo.updateHudScale());\r\n    });\r\n\r\n    const refreshDebounce = foundry.utils.debounce((statefulVideo) => {\r\n      if (game?.video && statefulVideo.video) {\r\n        statefulVideo.updateVideo();\r\n        game.video.play(statefulVideo.video);\r\n      }\r\n    }, 200);\r\n\r\n    Hooks.on(\"refreshTile\", (placeableObject) => {\r\n      if (!placeableObject.isVideo || !getProperty(placeableObject.document, CONSTANTS.STATES_FLAG)?.length) return;\r\n      const statefulVideo = StatefulVideo.make(placeableObject.document, placeableObject.texture);\r\n      if (!statefulVideo) return;\r\n      statefulVideo.evaluateVisibility();\r\n      refreshDebounce(statefulVideo);\r\n    });\r\n\r\n    Hooks.on(\"refreshToken\", (placeableObject) => {\r\n      if (!placeableObject.isVideo || !getProperty(placeableObject.document, CONSTANTS.STATES_FLAG)?.length) return;\r\n      const statefulVideo = StatefulVideo.make(placeableObject.document, placeableObject.texture);\r\n      if (!statefulVideo) return;\r\n      statefulVideo.evaluateVisibility();\r\n      refreshDebounce(statefulVideo);\r\n    });\r\n\r\n  }\r\n\r\n  static getValidPlaceables() {\r\n    return [...canvas.tiles.placeables, canvas.tokens.placeables].filter(placeable => {\r\n      return placeable.isVideo && getProperty(placeable.document, CONSTANTS.STATES_FLAG)?.length;\r\n    });\r\n  }\r\n\r\n  static canvasReady() {\r\n    hudScale.set(canvas.stage.scale.x);\r\n    for (const placeable of this.getValidPlaceables()) {\r\n      const statefulVideo = this.make(placeable.document, placeable.texture);\r\n      if (!statefulVideo) return;\r\n      if (game?.video && statefulVideo.video) {\r\n        game.video.play(statefulVideo.video);\r\n      }\r\n    }\r\n  }\r\n\r\n  static canvasNotReady() {\r\n    for (const placeable of this.getValidPlaceables()) {\r\n      placeable.renderable = false;\r\n      placeable.mesh.renderable = false;\r\n    }\r\n  }\r\n\r\n  static getAll() {\r\n    return managedStatefulVideos;\r\n  }\r\n\r\n  static get(uuid) {\r\n    return managedStatefulVideos.get(uuid) || false;\r\n  }\r\n\r\n  static make(document, texture) {\r\n    const existingStatefulVideo = this.get(document.uuid);\r\n    if (existingStatefulVideo) return existingStatefulVideo;\r\n    const newStatefulVideo = new this(document, texture);\r\n    managedStatefulVideos.set(newStatefulVideo.uuid, newStatefulVideo);\r\n    if (currentDelegator) {\r\n      newStatefulVideo.flags.updateData();\r\n    }\r\n    return newStatefulVideo;\r\n  }\r\n\r\n  get duration() {\r\n    return (this.video.duration * 1000) - this.flags.singleFrameDuration;\r\n  }\r\n\r\n  static tearDown(uuid) {\r\n    const statefulVideo = StatefulVideo.get(uuid);\r\n    if (!statefulVideo) return;\r\n    if (statefulVideo.timeout) clearTimeout(statefulVideo.timeout);\r\n    statefulVideo.clearRandomTimers();\r\n    managedStatefulVideos.delete(uuid);\r\n  }\r\n\r\n  static makeHudButton(tooltip, icon, style = \"\") {\r\n    return $(`<div class=\"ats-hud-control-icon ats-stateful-video-ui-button\" style=\"${style}\" data-tooltip-direction=\"UP\" data-tooltip=\"${tooltip}\">\r\n      <i class=\"fas ${icon}\"></i>\r\n    </div>`);\r\n  }\r\n\r\n  /**\r\n   * Adds additional control elements to the tile HUD relating to Animated Tile States\r\n   *\r\n   * @param app\r\n   * @param html\r\n   */\r\n  static async renderStatefulVideoHud(app, html) {\r\n\r\n    const placeable = app.object;\r\n    const placeableDocument = placeable.document;\r\n    const statefulVideo = StatefulVideo.get(placeableDocument.uuid);\r\n\r\n    const root = $(\"<div class='ats-hud'></div>\");\r\n\r\n    const selectContainer = $(\"<div class='ats-hud-select-container'></div>\");\r\n\r\n    if (statefulVideo) {\r\n\r\n      for (const [index, state] of statefulVideo.flags.states.entries()) {\r\n        if (!state.icon) continue;\r\n        const stateBtn = StatefulVideo.makeHudButton(state.name, state.icon);\r\n        stateBtn.on(\"pointerdown\", () => {\r\n          statefulVideo.changeState({ state: index, fast: true });\r\n        });\r\n        selectContainer.append(stateBtn);\r\n      }\r\n\r\n      if (statefulVideo.flags.states.length) {\r\n        const select = $(\"<select class='ats-stateful-video-ui-button'></select>\");\r\n        select.on('change', function () {\r\n          statefulVideo.changeState({ state: Number($(this).val()), fast: true });\r\n        });\r\n\r\n        for (const [index, state] of statefulVideo.flags.states.entries()) {\r\n          select.append(`<option ${index === statefulVideo.flags.currentStateIndex ? \"selected\" : \"\"} value=\"${index}\">${state.name}</option>`);\r\n        }\r\n\r\n        selectContainer.append(select);\r\n\r\n        statefulVideo.select = select;\r\n      }\r\n    }\r\n\r\n    const statefulVideoColor = lib.determineFileColor(placeableDocument.texture?.src || \"\");\r\n\r\n    const selectButtonContainer = $(\"<div></div>\");\r\n\r\n    const selectColorButton = $(`<div class=\"ats-hud-control-icon ats-stateful-video-ui-button\" data-tooltip-direction=\"UP\" data-tooltip=\"Change Color\">\r\n      ${statefulVideoColor.icon ? `<i class=\"fas ${statefulVideoColor.icon}\"></i>` : \"\"}\r\n      ${statefulVideoColor.color ? `<div class=\"ats-color-button\" style=\"${statefulVideoColor.color}\"></div>` : \"\"}\r\n    </div>`);\r\n\r\n    const baseFile = decodeURI(placeableDocument.texture.src).split(\"__\")[0].replace(\".webm\", \"\") + \"*.webm\";\r\n    await lib.getWildCardFiles(baseFile).then((results) => {\r\n      if (results.length <= 1) return;\r\n      const selectColorContainer = $(`<div class=\"ats-color-container\"></div>`);\r\n\r\n      selectColorButton.on('pointerdown', () => {\r\n        const newState = selectColorContainer.css('visibility') === \"hidden\" ? \"visible\" : \"hidden\";\r\n        selectColorContainer.css(\"visibility\", newState);\r\n      });\r\n\r\n      selectButtonContainer.append(selectColorButton);\r\n      selectButtonContainer.append(selectColorContainer);\r\n\r\n      selectContainer.append(selectButtonContainer);\r\n\r\n      const width = Math.min(204, results.length * 34);\r\n      selectColorContainer.css({ left: width * -0.37, width: width });\r\n      for (const filePath of results) {\r\n        const { colorName, color, tooltip } = lib.determineFileColor(filePath);\r\n        const button = $(`<div class=\"ats-color-button\" style=\"${color}\" data-tooltip=\"${tooltip}\"></div>`)\r\n        if (!colorName) {\r\n          selectColorContainer.prepend(button);\r\n        } else {\r\n          selectColorContainer.append(button);\r\n        }\r\n        button.on(\"pointerdown\", async () => {\r\n          selectColorButton.html(`<div class=\"ats-color-button\" style=\"${color}\"></div>`);\r\n          selectColorButton.trigger(\"pointerdown\");\r\n          await placeableDocument.update({\r\n            img: filePath\r\n          });\r\n          const hud = placeable instanceof Token ? canvas.tokens.hud : canvas.tokens.tiles;\r\n          placeable.control();\r\n          hud.bind(placeable);\r\n        });\r\n      }\r\n    });\r\n\r\n    if (statefulVideo || selectButtonContainer.children().length) {\r\n      root.append(selectContainer);\r\n    }\r\n\r\n    if (statefulVideo) {\r\n      statefulVideo.updateHudScale();\r\n    }\r\n\r\n    Hooks.call(CONSTANTS.HOOKS.RENDER_UI, app, root, placeableDocument, statefulVideo);\r\n\r\n    if (root.children().length) {\r\n      html.find(\".col.middle\").append(root);\r\n    }\r\n\r\n  }\r\n\r\n  updateVideo() {\r\n    if (!this.document.object) return;\r\n    this.texture = this.document.object.texture;\r\n    this.video = this.document.object.texture.baseTexture.resource.source;\r\n  }\r\n\r\n  updateHudScale() {\r\n    if (!this.select) return;\r\n    const scale = get(hudScale) + 0.25;\r\n    const fontSize = scale >= 1.0 ? 1.0 : Math.min(1.0, Math.max(0.25, lib.transformNumber(scale)))\r\n    this.select.children().css(\"font-size\", `${fontSize}rem`)\r\n  }\r\n\r\n  updateSelect() {\r\n    if (!this.select?.length) return;\r\n    this.select.empty();\r\n    for (const [index, state] of this.flags.states.entries()) {\r\n      this.select.append(`<option ${index === this.flags.currentStateIndex ? \"selected\" : \"\"} value=\"${index}\">${state.name}</option>`)\r\n    }\r\n    this.updateHudScale();\r\n  }\r\n\r\n  static onPreUpdate(placeableDoc, changes) {\r\n    let statefulVideo = StatefulVideo.get(placeableDoc.uuid);\r\n    if (hasProperty(changes, \"texture.src\") && statefulVideo) {\r\n      statefulVideo.newCurrentTime = statefulVideo.video.currentTime * 1000;\r\n    }\r\n  }\r\n\r\n  static onUpdate(placeableDoc, changes, firstUpdate = false) {\r\n    let statefulVideo = StatefulVideo.get(placeableDoc.uuid);\r\n    if (hasProperty(changes, \"texture.src\") && statefulVideo) {\r\n      setTimeout(() => {\r\n        statefulVideo.texture = placeableDoc.object.texture;\r\n        statefulVideo.video = placeableDoc.object.texture.baseTexture.resource.source;\r\n        statefulVideo.still = false;\r\n        statefulVideo.playing = false;\r\n        clearTimeout(statefulVideo.timeout);\r\n        game.video.play(statefulVideo.video);\r\n      }, 100);\r\n    }\r\n    if (!hasProperty(changes, CONSTANTS.FLAGS)) return;\r\n    if (!statefulVideo) {\r\n      if (!placeableDoc.object.isVideo || !getProperty(placeableDoc, CONSTANTS.STATES_FLAG)?.length) return;\r\n      statefulVideo = StatefulVideo.make(placeableDoc, placeableDoc.object.texture);\r\n    }\r\n    statefulVideo.flags.updateData();\r\n    Hooks.call(\"ats.updateState\", placeableDoc, statefulVideo.flags.data, changes);\r\n    if (!statefulVideo.flags.states.length) {\r\n      this.tearDown(placeableDoc.uuid);\r\n      statefulVideoHudMap.get(placeableDoc.uuid)?.render(true);\r\n      return;\r\n    }\r\n    statefulVideo.offset = Number(Date.now()) - statefulVideo.flags.updated;\r\n    if (hasProperty(changes, CONSTANTS.STATES_FLAG)) {\r\n      statefulVideoHudMap.get(placeableDoc.uuid)?.render(true);\r\n      statefulVideo.still = false;\r\n      statefulVideo.playing = false;\r\n      statefulVideo.clearRandomTimers();\r\n      statefulVideo.setupRandomTimers();\r\n      clearTimeout(statefulVideo.timeout);\r\n      game.video.play(statefulVideo.video);\r\n      statefulVideo.flags.data.queuedState = statefulVideo.flags.determineNextStateIndex();\r\n      return placeableDoc.update({\r\n        [CONSTANTS.QUEUED_STATE_FLAG]: statefulVideo.flags.data.queuedState\r\n      });\r\n    }\r\n    statefulVideo.updateSelect();\r\n    if (hasProperty(changes, CONSTANTS.CURRENT_STATE_FLAG) || firstUpdate) {\r\n      statefulVideo.setupRandomTimers();\r\n      if (statefulVideo.nextButton) {\r\n        statefulVideo.nextButton.removeClass(\"active\");\r\n      }\r\n      if (statefulVideo.prevButton) {\r\n        statefulVideo.prevButton.removeClass(\"active\");\r\n      }\r\n      statefulVideo.still = false;\r\n      statefulVideo.playing = false;\r\n      game.video.play(statefulVideo.video);\r\n    }\r\n  }\r\n\r\n  static async changeVideoState(uuid, { state = null, step = 1, queue = false } = {}) {\r\n    const placeableDoc = fromUuidSync(uuid);\r\n    if (!placeableDoc) return false;\r\n    const flags = new Flags(placeableDoc);\r\n    flags.updateData();\r\n    if (!flags.states.length) {\r\n      return false;\r\n    }\r\n    if (state !== null && !queue) {\r\n      if (!lib.isRealNumber(state)) {\r\n        return false;\r\n      }\r\n      return placeableDoc.update({\r\n        [CONSTANTS.UPDATED_FLAG]: Number(Date.now()),\r\n        [CONSTANTS.PREVIOUS_STATE_FLAG]: flags.currentStateIndex,\r\n        [CONSTANTS.CURRENT_STATE_FLAG]: state,\r\n        [CONSTANTS.QUEUED_STATE_FLAG]: flags.determineNextStateIndex()\r\n      });\r\n    }\r\n    if (!lib.isRealNumber(step)) {\r\n      return false;\r\n    }\r\n    if (queue && !lib.isRealNumber(state)) {\r\n      return false;\r\n    }\r\n    return placeableDoc.update({\r\n      [CONSTANTS.UPDATED_FLAG]: Number(Date.now()),\r\n      [CONSTANTS.QUEUED_STATE_FLAG]: queue ? state : flags.getStateIndexFromSteps(step)\r\n    });\r\n  }\r\n\r\n  static isDataValid(flags, data) {\r\n    return (data?.[CONSTANTS.PREVIOUS_STATE_FLAG] !== undefined && (flags.data[CONSTANTS.FLAG_KEYS.PREVIOUS_STATE] !== data?.[CONSTANTS.PREVIOUS_STATE_FLAG]))\r\n      || (data?.[CONSTANTS.CURRENT_STATE_FLAG] !== undefined && (flags.data[CONSTANTS.FLAG_KEYS.CURRENT_STATE] !== data?.[CONSTANTS.CURRENT_STATE_FLAG]))\r\n      || (data?.[CONSTANTS.QUEUED_STATE_FLAG] !== undefined && (flags.data[CONSTANTS.FLAG_KEYS.QUEUED_STATE] !== data?.[CONSTANTS.QUEUED_STATE_FLAG]))\r\n  }\r\n\r\n  async update(data) {\r\n    if (game.user !== currentDelegator) return;\r\n\r\n    if (StatefulVideo.isDataValid(this.flags, data)) {\r\n      data[CONSTANTS.UPDATED_FLAG] = Number(Date.now());\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    if (game.user.isGM) {\r\n      return this.document.update(data);\r\n    } else if (lib.getResponsibleGM()) {\r\n      return SocketHandler.emit(SocketHandler.UPDATE_PLACEABLE_DOCUMENT, {\r\n        uuid: this.uuid, update: data, userId: lib.getResponsibleGM().id\r\n      });\r\n    }\r\n\r\n    const deconstructedData = Object.fromEntries(Object.entries(data)\r\n      .map(([key, value]) => {\r\n        const newKey = key.split(\".\");\r\n        return [newKey[newKey.length - 1], value];\r\n      }));\r\n\r\n    const key = `${this.document.parent.id}_${this.document.documentName}_${this.document.id}`;\r\n    return game.user.update({\r\n      [`${CONSTANTS.DELEGATED_STATEFUL_VIDEOS_FLAG}.${key}`]: deconstructedData\r\n    });\r\n  }\r\n\r\n  async queueState(newState) {\r\n    const updates = {\r\n      [CONSTANTS.QUEUED_STATE_FLAG]: newState\r\n    };\r\n    if (Hooks.call(\"ats.preUpdateQueuedState\", this.document, this.flags.data, updates) === false) {\r\n      return;\r\n    }\r\n    return this.update(updates);\r\n  }\r\n\r\n  async updateState(stateIndex) {\r\n    const updates = {\r\n      [CONSTANTS.PREVIOUS_STATE_FLAG]: this.flags.currentStateIndex,\r\n      [CONSTANTS.CURRENT_STATE_FLAG]: stateIndex,\r\n      [CONSTANTS.QUEUED_STATE_FLAG]: this.flags.determineNextStateIndex(stateIndex)\r\n    };\r\n    if (Hooks.call(\"ats.preUpdateCurrentState\", this.document, this.flags.data, updates) === false) {\r\n      return;\r\n    }\r\n    return this.update(updates);\r\n  }\r\n\r\n  async changeState({ state = null, step = 1, fast = false } = {}) {\r\n\r\n    if (this.nextButton) {\r\n      this.nextButton.removeClass(\"active\");\r\n    }\r\n    if (this.prevButton) {\r\n      this.prevButton.removeClass(\"active\");\r\n    }\r\n\r\n    this.clearRandomTimers();\r\n\r\n    if (!fast && this.flags.currentState.behavior !== CONSTANTS.BEHAVIORS.STILL) {\r\n      if (this.nextButton && this.prevButton && state === null) {\r\n        this[step > 0 ? \"nextButton\" : \"prevButton\"].addClass(\"active\");\r\n      }\r\n      return this.queueState(state ?? this.flags.currentStateIndex + step);\r\n    }\r\n\r\n    clearTimeout(this.timeout);\r\n    this.timeout = null;\r\n\r\n    return this.updateState(state ?? this.flags.currentStateIndex + step);\r\n\r\n  }\r\n\r\n  setupRandomTimers() {\r\n\r\n    if (game.user !== currentDelegator) return;\r\n\r\n    for (const stateIndex of this.flags.determineNextRandomStates()) {\r\n      if (this.randomTimers[stateIndex]) continue;\r\n      const state = this.flags.states[stateIndex];\r\n      const delayStart = Number(state.randomStart) * 1000;\r\n      const delayEnd = Number(state.randomEnd) * 1000;\r\n      const delay = lib.randomIntegerBetween(delayStart, delayEnd);\r\n      let timerId = null;\r\n      timerId = setTimeout(() => {\r\n        delete this.randomTimers[stateIndex];\r\n        if (this.flags.currentStateIsRandom) return;\r\n        if (this.flags.currentStateIsStill) {\r\n          this.updateState(stateIndex);\r\n        } else if (this.flags.currentStateIsLoop) {\r\n          this.queueState(stateIndex);\r\n        }\r\n      }, delay)\r\n      this.randomTimers[stateIndex] = timerId;\r\n    }\r\n\r\n  }\r\n\r\n  clearRandomTimers() {\r\n    Object.values(this.randomTimers).forEach(timerId => clearTimeout(timerId));\r\n    this.randomTimers = {};\r\n  }\r\n\r\n  determineStartTime(stateIndex) {\r\n\r\n    const currState = this.flags.states?.[stateIndex];\r\n    const currStart = lib.isRealNumber(currState?.start)\r\n      ? Number(currState?.start) * this.flags.durationMultiplier\r\n      : (currState?.start ?? 0);\r\n\r\n    switch (currStart) {\r\n\r\n      case CONSTANTS.START.START:\r\n        return 0;\r\n\r\n      case CONSTANTS.START.END:\r\n        return this.duration;\r\n\r\n      case CONSTANTS.START.MID:\r\n        return Math.floor(this.duration / 2);\r\n\r\n      case CONSTANTS.START.PREV:\r\n        return this.determineEndTime(stateIndex - 1);\r\n\r\n    }\r\n\r\n    return currStart;\r\n  }\r\n\r\n  determineEndTime(stateIndex) {\r\n\r\n    const currState = this.flags.states?.[stateIndex];\r\n    const currEnd = lib.isRealNumber(currState?.end)\r\n      ? Number(currState?.end) * this.flags.durationMultiplier\r\n      : (currState?.end ?? this.duration);\r\n\r\n    switch (currEnd) {\r\n\r\n      case CONSTANTS.END.END:\r\n        return this.duration;\r\n\r\n      case CONSTANTS.END.MID:\r\n        return Math.floor(this.duration / 2);\r\n\r\n      case CONSTANTS.END.NEXT:\r\n        return this.determineStartTime(stateIndex + 1);\r\n\r\n    }\r\n\r\n    return currEnd;\r\n\r\n  }\r\n\r\n  evaluateVisibility() {\r\n    const hidden = this.flags.currentState.behavior === CONSTANTS.BEHAVIORS.STILL_HIDDEN;\r\n    this.document.object.renderable = !hidden || game.user.isGM;\r\n    this.document.object.mesh.alpha = hidden ? (game.user.isGM ? 0.5 : 0.0) : this.document.alpha;\r\n    return hidden;\r\n  }\r\n\r\n  getVideoPlaybackState() {\r\n\r\n    if (!this.ready) {\r\n      return {\r\n        playing: false, loop: false, offset: 0\r\n      };\r\n    }\r\n\r\n    if (!this.flags?.states?.length || !this.document?.object) return;\r\n\r\n    const startTime = this.newCurrentTime ?? this.determineStartTime(this.flags.currentStateIndex) ?? 0;\r\n    const endTime = this.determineEndTime(this.flags.currentStateIndex) ?? this.duration;\r\n    this.newCurrentTime = null;\r\n\r\n    this.evaluateVisibility();\r\n\r\n    this.still = false;\r\n    this.playing = true;\r\n    this.texture.update();\r\n\r\n    switch (this.flags.currentState.behavior) {\r\n\r\n      case CONSTANTS.BEHAVIORS.STILL:\r\n      case CONSTANTS.BEHAVIORS.STILL_HIDDEN:\r\n        return this.handleStillBehavior(startTime);\r\n\r\n      case CONSTANTS.BEHAVIORS.LOOP:\r\n        return this.handleLoopBehavior(startTime, endTime);\r\n\r\n      default:\r\n        return this.handleOnceBehavior(startTime, endTime);\r\n\r\n    }\r\n  }\r\n\r\n  setTimeout(callback, waitDuration) {\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      this.timeout = null;\r\n      callback();\r\n    }, Math.ceil(waitDuration));\r\n  }\r\n\r\n  handleStillBehavior(startTime) {\r\n\r\n    this.still = true;\r\n\r\n    const fn = () => {\r\n      this.video.removeEventListener(\"seeked\", fn);\r\n      this.texture.update();\r\n    }\r\n    this.video.addEventListener(\"seeked\", fn);\r\n\r\n    this.video.play();\r\n    this.video.currentTime = (startTime ?? 0) / 1000;\r\n    this.video.pause();\r\n\r\n    return false;\r\n  }\r\n\r\n  handleLoopBehavior(startTime, endTime = 0) {\r\n\r\n    let loopDuration = (endTime - startTime) + this.flags.singleFrameDuration;\r\n\r\n    if ((startTime + loopDuration) > this.duration) {\r\n      loopDuration = (this.duration - startTime);\r\n    }\r\n\r\n    const offsetLoopTime = ((this.offset ?? 0) % loopDuration) ?? 0;\r\n    const offsetStartTime = (startTime + offsetLoopTime);\r\n\r\n    this.offset = 0;\r\n\r\n    this.setTimeout(() => {\r\n      this.playing = false;\r\n      if (this.flags.queuedStateIndexIsDifferent) {\r\n        return this.updateState(this.flags.queuedStateIndex);\r\n      }\r\n      game.video.play(this.video);\r\n      this.setupRandomTimers();\r\n    }, loopDuration - offsetLoopTime);\r\n\r\n    return {\r\n      playing: true, loop: false, offset: offsetStartTime / 1000\r\n    }\r\n\r\n  }\r\n\r\n  handleOnceBehavior(startTime, endTime) {\r\n\r\n    if (!this.flags.currentStateIsRandom) {\r\n      this.clearRandomTimers()\r\n    }\r\n\r\n    this.setTimeout(async () => {\r\n      let queuedState = this.flags.queuedStateIndex;\r\n      if (queuedState === null) {\r\n        queuedState = this.flags.determineNextStateIndex();\r\n      }\r\n      this.playing = false;\r\n      this.video.pause();\r\n      return this.updateState(queuedState);\r\n    }, (endTime - startTime));\r\n\r\n    this.offset = 0;\r\n\r\n    return {\r\n      playing: true, loop: false, offset: startTime / 1000\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nclass Flags {\r\n\r\n  constructor(doc) {\r\n    this.doc = doc;\r\n    this.uuid = doc.uuid;\r\n    this.delegationUuid = this.uuid.split(\".\").slice(1).join(\"_\");\r\n    this._data = false;\r\n  }\r\n\r\n  get data() {\r\n    if (!this._data) {\r\n      this._data = this.getData();\r\n    }\r\n    return this._data;\r\n  }\r\n\r\n  get states() {\r\n    return this.data?.states ?? [];\r\n  }\r\n\r\n  get offset() {\r\n    return (Number(Date.now()) - this.updated) - this.singleFrameDuration;\r\n  }\r\n\r\n  get updated() {\r\n    return this.data?.updated ?? 0;\r\n  }\r\n\r\n  get previousState() {\r\n    return this.states[this.previousStateIndex];\r\n  }\r\n\r\n  get previousStateIndex() {\r\n    return Math.max(0, Math.min(this.data.previousState ?? this.currentStateIndex, this.data.states.length - 1));\r\n  }\r\n\r\n  get currentState() {\r\n    return this.states[this.currentStateIndex];\r\n  }\r\n\r\n  get currentStateIsStill() {\r\n    return this.currentState.behavior === CONSTANTS.BEHAVIORS.STILL || this.currentState.behavior === CONSTANTS.BEHAVIORS.STILL_HIDDEN\r\n  }\r\n\r\n  get currentStateIsLoop() {\r\n    return this.currentState.behavior === CONSTANTS.BEHAVIORS.LOOP\r\n  }\r\n\r\n  get currentStateIsRandom() {\r\n    return this.currentState.behavior === CONSTANTS.BEHAVIORS.RANDOM || this.currentState.behavior === CONSTANTS.BEHAVIORS.RANDOM_IF\r\n  }\r\n\r\n  get currentStateIndex() {\r\n    const defaultStateIndex = this.data.states.findIndex(state => state.default) ?? 0;\r\n    return Math.max(0, Math.min(this.data.currentState ?? defaultStateIndex, this.data.states.length - 1));\r\n  }\r\n\r\n  get queuedState() {\r\n    return this.states[this.queuedStateIndex];\r\n  }\r\n\r\n  get queuedStateIndex() {\r\n    return this.data.queuedState > -1 ? this.data.queuedState : null;\r\n  }\r\n\r\n  get durationMultiplier() {\r\n    switch (this.data?.numberType ?? CONSTANTS.NUMBER_TYPES.FRAMES) {\r\n      case CONSTANTS.NUMBER_TYPES.MILLISECONDS:\r\n        return 1;\r\n      case CONSTANTS.NUMBER_TYPES.SECONDS:\r\n        return 1000;\r\n      case CONSTANTS.NUMBER_TYPES.FRAMES:\r\n        return 1000 / this.fps;\r\n    }\r\n  }\r\n\r\n  get fps() {\r\n    return (this.data?.fps || 24);\r\n  }\r\n\r\n  get singleFrameDuration() {\r\n    return (1000 / this.fps);\r\n  }\r\n\r\n  get queuedStateIndexIsDifferent() {\r\n    return this.queuedStateIndex !== null && this.queuedStateIndex !== this.currentStateIndex;\r\n  }\r\n\r\n  getData() {\r\n    const documentFlags = getProperty(this.doc, CONSTANTS.FLAGS);\r\n    if (currentDelegator && !currentDelegator.isGM) {\r\n      const userFlags = getProperty(currentDelegator, CONSTANTS.DELEGATED_STATEFUL_VIDEOS_FLAG + \".\" + this.delegationUuid);\r\n      if (userFlags?.updated && documentFlags?.updated && userFlags?.updated > documentFlags?.updated) {\r\n        return userFlags;\r\n      }\r\n    }\r\n    return documentFlags;\r\n  }\r\n\r\n  copyData() {\r\n    copiedData.set({\r\n      [CONSTANTS.STATES_FLAG]: this.data.states,\r\n      [CONSTANTS.NUMBER_TYPE_FLAG]: this.data.numberType,\r\n      [CONSTANTS.FPS_FLAG]: this.data.fps,\r\n      [CONSTANTS.CURRENT_STATE_FLAG]: this.currentStateIndex\r\n    });\r\n    ui.notifications.notify(\"The Kinemancer | Copied video state data\")\r\n  }\r\n\r\n  pasteData() {\r\n    const localCopyData = get(copiedData);\r\n    if (!localCopyData) return;\r\n    if (foundry.utils.isEmpty(localCopyData)) return;\r\n    this.doc.update({\r\n      ...foundry.utils.deepClone(localCopyData)\r\n    });\r\n    ui.notifications.notify(\"The Kinemancer | Pasted video state data\")\r\n  }\r\n\r\n  updateData() {\r\n    this._data = this.getData();\r\n  }\r\n\r\n  getStateById(id) {\r\n    const index = this.states.findIndex(state => state.id === id);\r\n    return index >= 0 ? index : false;\r\n  }\r\n\r\n  getStateIndexFromSteps(steps = 1) {\r\n    return Math.max(0, Math.min(this.currentStateIndex + steps, this.data.states.length - 1));\r\n  }\r\n\r\n  determineNextRandomStates(stateIndex = null) {\r\n\r\n    stateIndex ??= this.currentStateIndex;\r\n\r\n    const state = this.states[stateIndex];\r\n\r\n    const nextStates = this.states.filter(s => {\r\n      return s.behavior === CONSTANTS.BEHAVIORS.RANDOM || (s.behavior === CONSTANTS.BEHAVIORS.RANDOM_IF && s.randomState === state.id);\r\n    }).map(s => this.states.indexOf(s))\r\n    if (nextStates.length) {\r\n      return nextStates;\r\n    }\r\n\r\n    return [Math.max(0, Math.min(stateIndex, this.states.length - 1))];\r\n\r\n  }\r\n\r\n  determineNextStateIndex(stateIndex = null) {\r\n\r\n    stateIndex ??= this.currentStateIndex;\r\n\r\n    const state = this.states[stateIndex];\r\n\r\n    const index = Math.max(0, Math.min(stateIndex, this.states.length - 1));\r\n\r\n    const defaultIndex = this.states.findIndex(s => s.default);\r\n\r\n    switch (state?.behavior) {\r\n      case CONSTANTS.BEHAVIORS.ONCE_NEXT:\r\n        return this.states[index + 1] ? index + 1 : defaultIndex;\r\n\r\n      case CONSTANTS.BEHAVIORS.ONCE_PREVIOUS:\r\n        return this.states[index - 1] ? index - 1 : defaultIndex;\r\n\r\n      case CONSTANTS.BEHAVIORS.ONCE_PREVIOUS_ACTIVE:\r\n      case CONSTANTS.BEHAVIORS.RANDOM:\r\n        return this.currentStateIndex;\r\n\r\n      case CONSTANTS.BEHAVIORS.RANDOM_IF:\r\n        const nextSpecific = this.getStateById(state.randomState);\r\n        return nextSpecific >= 0 ? nextSpecific : defaultIndex;\r\n\r\n      case CONSTANTS.BEHAVIORS.ONCE_SPECIFIC:\r\n        const nextIndex = this.getStateById(state.nextState);\r\n        return nextIndex >= 0 ? nextIndex : defaultIndex;\r\n    }\r\n\r\n    return index;\r\n\r\n  }\r\n\r\n}\r\n","import \"./styles/module.scss\";\n\nimport CONSTANTS from \"./constants.js\";\n\nimport { copiedData, StatefulVideo } from \"./StatefulVideo.js\";\nimport SocketHandler from \"./socket.js\";\nimport * as lib from \"./lib/lib.js\";\n\nHooks.once('init', async function () {\n  registerLibwrappers();\n  SocketHandler.initialize();\n  StatefulVideo.registerHooks();\n\n  game.thekinemancer = {\n    updateState: (uuid, options) => StatefulVideo.changeVideoState(uuid, options),\n    StatefulVideo,\n    CONSTANTS,\n    copiedData,\n    lib\n  };\n});\n\nHooks.once('ready', async function () {\n\n  setTimeout(() => {\n    StatefulVideo.determineCurrentDelegator();\n  }, 250);\n\n  document.addEventListener(\"visibilitychange\", function () {\n    if (document.hidden) {\n      StatefulVideo.getAll().forEach(statefulVideo => {\n        statefulVideo.video.pause();\n      });\n    } else {\n      StatefulVideo.getAll().forEach(statefulVideo => {\n        statefulVideo.offset = Number(Date.now()) - statefulVideo.flags.updated;\n        game.video.play(statefulVideo.video);\n      });\n    }\n  });\n\n});\n\n\nHooks.on('renderFilePicker', (filePicker, html) => {\n\n  const regex = new RegExp(/^.*?the-kinemancer\\/.+__(.+).webm$/, \"g\")\n\n  html.find('[data-src=\"icons/svg/video.svg\"]:visible').each((idx, imgElem) => {\n\n    const img = $(imgElem);\n    const parent = img.closest('[data-path]');\n    const path = parent.data('path');\n    const width = img.attr('width');\n    const height = img.attr('height');\n\n    if (path.match(regex)) {\n      parent.remove();\n      return;\n    }\n\n    new Promise(async (resolve) => {\n      let found = false;\n      const splitPath = path.split(\"/\");\n      const file_name = splitPath.pop();\n      const variationPath = splitPath.join(\"/\") + \"/stills/\" + file_name.replace(\".webm\", \".webp\");\n      try {\n        await FilePicker.browse(\"data\", variationPath).then(() => {\n          found = true;\n          setTimeout(() => {\n            img.attr(\"src\", variationPath);\n          }, 150);\n        })\n      } catch (err) {\n      }\n      resolve();\n    });\n\n    const video = $(`<video class=\"fas video-preview\" loop width=\"${width}\" height=\"${height}\"></video>`);\n    video.hide();\n    parent.append(video);\n    const videoElem = video.get(0);\n    let playTimeout = null;\n\n    parent.addClass('video-parent');\n\n    parent.on(\"mouseenter\", () => {\n      if (!videoElem.src) {\n        parent.addClass(' -loading');\n        videoElem.addEventListener('loadeddata', () => {\n          parent.removeClass('-loading');\n        }, false);\n        videoElem.src = path;\n      }\n      img.hide();\n      video.show();\n      playTimeout = setTimeout(() => {\n        videoElem.currentTime = 0;\n        videoElem.play().catch(e => console.error(e));\n      }, !!videoElem.src ? 0 : 750);\n    }).on(\"mouseleave\", () => {\n      clearTimeout(playTimeout);\n      videoElem.pause();\n      videoElem.currentTime = 0;\n      video.hide();\n      img.show();\n    });\n  });\n});\n\n\nfunction registerLibwrappers() {\n\n  libWrapper.register(CONSTANTS.MODULE_NAME, 'Tile.prototype._destroy', function (wrapped) {\n    if (this.isVideo) {\n      StatefulVideo.tearDown(this.document.uuid);\n    }\n    return wrapped();\n  }, \"MIXED\");\n\n  libWrapper.register(CONSTANTS.MODULE_NAME, 'Token.prototype._destroy', function (wrapped) {\n    if (this.isVideo) {\n      StatefulVideo.tearDown(this.document.uuid);\n    }\n    return wrapped();\n  }, \"MIXED\");\n\n  libWrapper.register(CONSTANTS.MODULE_NAME, 'VideoHelper.prototype.play', async function (wrapped, video, options) {\n    for (const statefulVideo of StatefulVideo.getAll().values()) {\n      if (video === statefulVideo.video) {\n        if (this.locked || statefulVideo.destroyed || statefulVideo.playing || statefulVideo.still) return;\n        if (window.document.hidden) return video.pause();\n        const newOptions = statefulVideo.getVideoPlaybackState();\n        if (!newOptions) return;\n        return wrapped(video, newOptions);\n      }\n    }\n    return wrapped(video, options);\n  }, \"MIXED\");\n\n  libWrapper.register(CONSTANTS.MODULE_NAME, 'VideoHelper.prototype._onFirstGesture', async function (wrapped, event) {\n    Hooks.callAll(\"canvasFirstUserGesture\");\n    return wrapped(event);\n  }, \"MIXED\");\n\n}\n\n"],"names":["subscribe","document","lib.getSceneDelegator","lib.isGMConnected","lib.getVideoJsonPath","lib.determineFileColor","lib.getWildCardFiles","get","lib.transformNumber","lib.isRealNumber","lib.getResponsibleGM","key","lib.randomIntegerBetween"],"mappings":"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","x_google_ignoreList":[3,4]}