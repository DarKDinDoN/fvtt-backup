{"version":3,"file":"condition-lab-triggler.js","sources":["../../src/module/sidekick.js","../../src/module/enhanced-conditions/enhanced-conditions.js","../../src/module/butler.js","../../src/module/libWrapper.js","../../src/module/triggler/triggler.js","../../src/module/triggler/triggler-form.js","../../src/module/enhanced-conditions/enhanced-condition-macro.js","../../src/module/enhanced-conditions/enhanced-condition-option.js","../../src/module/enhanced-conditions/enhanced-condition-trigger.js","../../src/module/enhanced-conditions/enhanced-effect-config.js","../../src/module/enhanced-conditions/condition-lab.js","../../src/module/settings.js","../../src/module/utils/migration.js","../../src/module/condition-lab-triggler.js"],"sourcesContent":["/**\n * Provides helper methods for use elsewhere in the module (and has your back in a melee)\n */\nexport class Sidekick {\n\t/**\n\t * Use FilePicker to browse then Fetch one or more JSONs and return them\n\t * @param {*} source\n\t * @param {*} path\n\t */\n\tstatic async fetchJsons(source, path) {\n\t\tconst extensions = [\".json\"];\n\t\tconst fp = await FilePicker.browse(source, path, { extensions });\n\t\tconst fetchedJsons = fp?.files?.length ? await Promise.all(fp.files.map((f) => Sidekick.fetchJson(f))) : [];\n\t\tconst jsons = fetchedJsons.filter((j) => !!j);\n\n\t\treturn jsons;\n\t}\n\n\t/**\n\t * Fetch a JSON from a given file\n\t * @param {File} file\n\t * @returns JSON | null\n\t */\n\tstatic async fetchJson(file) {\n\t\ttry {\n\t\t\tconst jsonFile = await fetch(file);\n\t\t\tconst json = await jsonFile.json();\n\t\t\tif (!(json instanceof Object)) throw new Error(\"Not a valid JSON!\");\n\t\t\treturn json;\n\t\t} catch(e) {\n\t\t\tconsole.warn(e.message);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Attempts to coerce a target value into the exemplar's type\n\t * @param {*} target\n\t * @param value\n\t * @param {*} type\n\t * @returns {*} coercedValue\n\t */\n\tstatic coerceType(value, type) {\n\t\tswitch (type) {\n\t\t\tcase \"number\":\n\t\t\t\treturn Number(value);\n\n\t\t\tcase \"string\":\n\t\t\t\treturn value.toString();\n\n\t\t\tcase \"boolean\":\n\t\t\t\treturn value.toString().toLowerCase() === \"true\"\n\t\t\t\t\t? true\n\t\t\t\t\t: value.toString().toLowerCase() === \"false\"\n\t\t\t\t\t\t? false\n\t\t\t\t\t\t: value;\n\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n\n\t/**\n\t * Get a random unique Id, checking an optional supplied array of ids for a match\n\t * @param {*} existingIds\n\t * @param root0\n\t * @param root0.iterations\n\t * @param root0.length\n\t */\n\tstatic createId(existingIds = [], { iterations = 10000, length = 16 } = {}) {\n\t\tfor (let attempt = 0; attempt < iterations; attempt++) {\n\t\t\tconst id = foundry.utils.randomID(length);\n\t\t\tif (!existingIds.includes(id)) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\n\t\t\t`Combat Utility Belt - Sidekick | Tried to create a unique id over ${iterations} iterations and failed.`\n\t\t);\n\t}\n\n\t/**\n\t * For a given string generate a slug, optionally checking a list of existing Ids for uniqueness\n\t * @param {*} string\n\t * @param {*} idList\n\t */\n\tstatic generateUniqueSlugId(string, idList = []) {\n\t\tlet slug = string.slugify();\n\n\t\tconst existingIds = idList.filter((id) => id === slug);\n\n\t\tif (!existingIds.length) return slug;\n\n\t\tconst uniqueIndex = existingIds.length > 1 ? Math.max(...existingIds.map((id) => id.match(/\\d+/g)[0])) + 1 : 1;\n\t\tslug = slug.replace(/\\d+$/g, uniqueIndex);\n\n\t\treturn slug;\n\t}\n\n\t/**\n\t * For a given file path, find the filename and then apply title case\n\t * @param {string} path\n\t * @returns {string}\n\t */\n\tstatic getNameFromFilePath(path) {\n\t\tif (!path) return null;\n\n\t\tconst file = path.split(\"\\\\\").pop()\n\t\t\t.split(\"/\")\n\t\t\t.pop();\n\n\t\tif (!file) return null;\n\n\t\tconst filename = file.replace(/\\.[^/.]+$/, \"\");\n\n\t\tif (!filename) return null;\n\n\t\tconst name = filename.titleCase();\n\t\treturn name;\n\t}\n\n\t/**\n\t * Loads templates for partials\n\t */\n\tstatic async loadTemplates() {\n\t\tconst templates = [\n\t\t\t\"modules/condition-lab-triggler/templates/partials/chat-card-condition-list.hbs\",\n\t\t\t\"modules/condition-lab-triggler/templates/partials/condition-lab-row.hbs\",\n\t\t\t\"modules/condition-lab-triggler/templates/partials/triggler-icon.hbs\"\n\t\t];\n\t\tawait loadTemplates(templates);\n\t}\n\n\t/**\n\t * Converts the given string to camelCase using the provided delimiter to break up words\n\t * @param {string} string\n\t * @param {string} delimiter\n\t * @returns the converted string\n\t * @example Sidekick.toCamelCase(\"my-cool-string\", \"-\") // returns \"myCoolString\"\n\t */\n\tstatic toCamelCase(string, delimiter) {\n\t\tconst stringParts = string.split(delimiter);\n\t\treturn stringParts instanceof Array\n\t\t\t? stringParts.reduce((camelString, part, index) => {\n\t\t\t\treturn (camelString += index > 0 ? part.titleCase() : part);\n\t\t\t}, \"\")\n\t\t\t: stringParts;\n\t}\n}\n","import { Sidekick } from \"../sidekick.js\";\n\n/**\n * Builds a mapping between status icons and journal entries that represent conditions\n */\nexport class EnhancedConditions {\n\t/* -------------------------------------------- */\n\t/*                   Handlers                   */\n\t/* -------------------------------------------- */\n\n\t/**\n\t * Ready Hook handler\n\t * Steps:\n\t * 1. Get default maps\n\t * 2. Get mapType\n\t * 3. Get Condition Map\n\t * 4. Override status effects\n\t */\n\tstatic async _onReady() {\n\t\tgame.clt.enhancedConditions.supported = false;\n\t\tif (CONFIG.statusEffects.length && typeof CONFIG.statusEffects[0] == \"string\") {\n\t\t\tconsole.warn(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.SimpleIconsNotSupported\"));\n\t\t\treturn;\n\t\t}\n\n\t\tlet defaultMaps = game.settings.get(\"condition-lab-triggler\", \"defaultConditionMaps\");\n\t\tlet conditionMap = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\t\tconst mapType = game.settings.get(\"condition-lab-triggler\", \"conditionMapType\");\n\n\t\t// If there's no defaultMaps or defaultMaps doesn't include game system, check storage then set appropriately\n\t\tif (\n\t\t\t!defaultMaps\n\t\t\t|| Object.keys(defaultMaps).length === 0\n\t\t\t|| !Object.keys(defaultMaps).includes(game.system.id)\n\t\t) {\n\t\t\tif (game.user.isGM) {\n\t\t\t\tdefaultMaps = await EnhancedConditions._loadDefaultMaps();\n\t\t\t\tgame.settings.set(\"condition-lab-triggler\", \"defaultConditionMaps\", defaultMaps);\n\t\t\t}\n\t\t}\n\n\t\t// If map type is not set and a default map exists for the system, set maptype to default\n\t\tif (!mapType && defaultMaps instanceof Object && Object.keys(defaultMaps).includes(game.system.id)) {\n\t\t\tgame.settings.set(\"condition-lab-triggler\", \"conditionMapType\", \"default\");\n\t\t}\n\n\t\t// If there's no condition map, get the default one\n\t\tif (!conditionMap.length) {\n\t\t\t// Pass over defaultMaps since the storage version is still empty\n\t\t\tconditionMap = EnhancedConditions.getDefaultMap(defaultMaps);\n\n\t\t\tif (game.user.isGM) {\n\t\t\t\tconst preparedMap = EnhancedConditions._prepareMap(conditionMap);\n\n\t\t\t\tif (preparedMap?.length) {\n\t\t\t\t\tconditionMap = preparedMap?.length ? preparedMap : conditionMap;\n\t\t\t\t\tgame.settings.set(\"condition-lab-triggler\", \"activeConditionMap\", preparedMap);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If map type is not set, now set to default\n\t\tif (!mapType && conditionMap.length) {\n\t\t\tgame.settings.set(\"condition-lab-triggler\", \"conditionMapType\", \"default\");\n\t\t}\n\n\t\t// Update status icons accordingly\n\t\tif (game.user.isGM) {\n\t\t\tEnhancedConditions._backupCoreEffects();\n\t\t\tEnhancedConditions._backupCoreSpecialStatusEffects();\n\t\t}\n\t\tconst specialStatusEffectMap = game.settings.get(\"condition-lab-triggler\",\n\t\t\t\"specialStatusEffectMapping\"\n\t\t);\n\t\tif (conditionMap.length) EnhancedConditions._updateStatusEffects(conditionMap);\n\t\tif (specialStatusEffectMap) foundry.utils.mergeObject(CONFIG.specialStatusEffects, specialStatusEffectMap);\n\t\tsetInterval(EnhancedConditions.updateConditionTimestamps, 15000);\n\n\t\t// Save the active condition map to a convenience property\n\t\tif (game.clt) {\n\t\t\tgame.clt.conditions = conditionMap;\n\t\t}\n\n\t\tgame.clt.enhancedConditions.supported = true;\n\t}\n\n\tstatic _onPreUpdateToken(token, update, options, userId) {\n\t\t// If the update includes effect data, add an `option` for the update hook handler to look for\n\t\tconst cubOption = (options[\"condition-lab-triggler\"] = options[\"condition-lab-triggler\"] ?? {});\n\n\t\tif (hasProperty(update, \"actorData.effects\")) {\n\t\t\tcubOption.existingEffects = token.actorData.effects ?? [];\n\t\t\tcubOption.updateEffects = update.actorData.effects ?? [];\n\t\t}\n\n\t\tif (hasProperty(update, \"overlayEffect\")) {\n\t\t\tcubOption.existingOverlay = token.overlayEffect ?? null;\n\t\t\tcubOption.updateOverlay = update.overlayEffect ?? null;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic _onUpdateToken(token, update, options, userId) {\n\t\tif (!game.user.isGM || (game.users.get(userId).isGM && game.userId !== userId)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the update includes effects, calls the journal entry lookup\n\t\tif (!hasProperty(options, \"condition-lab-triggler\")) return;\n\n\t\tconst cubOption = options[\"condition-lab-triggler\"];\n\t\tconst addUpdate = cubOption ? cubOption?.updateEffects?.length > cubOption?.existingEffects?.length : false;\n\t\tconst removeUpdate = cubOption ? cubOption?.existingEffects?.length > cubOption?.updateEffects?.length : false;\n\t\tconst updateEffects = [];\n\n\t\tif (addUpdate) {\n\t\t\tfor (const e of cubOption.updateEffects) {\n\t\t\t\tif (!cubOption.existingEffects.find((x) => x._id === e._id)) updateEffects.push({ effect: e, type: \"effect\", changeType: \"add\" });\n\t\t\t}\n\t\t}\n\n\t\tif (removeUpdate) {\n\t\t\tfor (const e of cubOption.existingEffects) {\n\t\t\t\tif (!cubOption.updateEffects.find((u) => u._id === e._id)) updateEffects.push({ effect: e, type: \"effect\", changeType: \"remove\" });\n\t\t\t}\n\t\t}\n\n\t\tif (!cubOption.existingOverlay && cubOption.updateOverlay) updateEffects.push({ effect: cubOption.updateOverlay, type: \"overlay\", changeType: \"add\" });\n\t\telse if (cubOption.existingOverlay && !cubOption.updateOverlay) updateEffects.push({ effect: cubOption.existingOverlay, type: \"overlay\", changeType: \"remove\" });\n\n\t\tif (!updateEffects.length) return;\n\n\t\tconst addConditions = [];\n\t\tconst removeConditions = [];\n\n\t\tfor (const effect of updateEffects) {\n\t\t\tlet condition = null;\n\t\t\t// based on the type, get the condition\n\t\t\tif (effect.type === \"overlay\") condition = EnhancedConditions.getConditionsByIcon(effect.effect);\n\t\t\telse if (effect.type === \"effect\") {\n\t\t\t\tif (!hasProperty(effect, `effect.flags.condition-lab-triggler.${\"conditionId\"}`)) continue;\n\t\t\t\tconst effectId = effect.effect.flags[\"condition-lab-triggler\"].conditionId;\n\t\t\t\tcondition = EnhancedConditions.lookupEntryMapping(effectId);\n\t\t\t}\n\n\t\t\tif (!condition) continue;\n\n\t\t\tif (effect.changeType === \"add\") addConditions.push(condition);\n\t\t\telse if (effect.changeType === \"remove\") removeConditions.push(condition);\n\t\t}\n\n\t\tif (!addConditions.length && !removeConditions.length) return;\n\n\t\tconst outputChatSetting = game.settings.get(\"condition-lab-triggler\", \"conditionsOutputToChat\");\n\n\t\t// If any of the addConditions Marks Defeated, mark the token's combatants defeated\n\t\tif (addConditions.some((c) => c?.options?.markDefeated)) {\n\t\t\tEnhancedConditions._toggleDefeated(token);\n\t\t}\n\n\t\t// If any of the removeConditions Marks Defeated, remove the defeated from the token's combatants\n\t\tif (removeConditions.some((c) => c?.options?.markDefeated)) {\n\t\t\tEnhancedConditions._toggleDefeated(token, { markDefeated: false });\n\t\t}\n\n\t\t// If any of the conditions Removes Others, remove the other Conditions\n\t\taddConditions.some((c) => {\n\t\t\tif (c?.options?.removeOthers) {\n\t\t\t\tEnhancedConditions._removeOtherConditions(token, c.id);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tconst chatAddConditions = addConditions.filter((c) => outputChatSetting && c.options?.outputChat);\n\t\tconst chatRemoveConditions = removeConditions.filter((c) => outputChatSetting && c.options?.outputChat);\n\n\t\t// If there's any conditions to output to chat, do so\n\t\tif (chatAddConditions.length) EnhancedConditions.outputChatMessage(token, chatAddConditions, { type: \"added\" });\n\t\tif (chatRemoveConditions.length) EnhancedConditions.outputChatMessage(token, chatRemoveConditions, { type: \"removed\" });\n\n\t\t// process macros\n\t\tconst addMacroIds = addConditions.flatMap((c) =>\n\t\t\tc.macros?.filter((m) => m.id && m.type === \"apply\").map((m) => m.id)\n\t\t);\n\t\tconst removeMacroIds = removeConditions.flatMap((c) =>\n\t\t\tc.macros?.filter((m) => m.id && m.type === \"remove\").map((m) => m.id)\n\t\t);\n\t\tconst macroIds = [...addMacroIds, ...removeMacroIds];\n\t\tif (macroIds.length) EnhancedConditions._processMacros(macroIds, token);\n\t}\n\n\tstatic _onCreateActiveEffect(effect, options, userId) {\n\t\tif (!game.user.isGM || (game.users.get(userId).isGM && game.userId !== userId)) {\n\t\t\treturn;\n\t\t}\n\t\tEnhancedConditions._processActiveEffectChange(effect, \"create\");\n\t}\n\n\tstatic _onDeleteActiveEffect(effect, options, userId) {\n\t\tif (!game.user.isGM || (game.users.get(userId).isGM && game.userId !== userId)) {\n\t\t\treturn;\n\t\t}\n\t\tEnhancedConditions._processActiveEffectChange(effect, \"delete\");\n\t}\n\n\tstatic _onUpdateCombat(combat, update, options, userId) {\n\t\tconst enableOutputCombat = game.settings.get(\"condition-lab-triggler\", \"conditionsOutputDuringCombat\");\n\t\tconst outputChatSetting = game.settings.get(\"condition-lab-triggler\", \"conditionsOutputToChat\");\n\t\tconst combatant = combat.combatant;\n\n\t\tif (\n\t\t\t!hasProperty(update, \"turn\")\n\t\t\t|| !combatant\n\t\t\t|| !outputChatSetting\n\t\t\t|| !enableOutputCombat\n\t\t\t|| !game.user.isGM\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst token = combatant.token;\n\n\t\tif (!token) return;\n\n\t\tconst tokenConditions = EnhancedConditions.getConditions(token, { warn: false });\n\t\tlet conditions = tokenConditions && tokenConditions.conditions ? tokenConditions.conditions : [];\n\t\tconditions = conditions instanceof Array ? conditions : [conditions];\n\n\t\tif (!conditions.length) return;\n\n\t\tconst chatConditions = conditions.filter((c) => c.options?.outputChat);\n\n\t\tif (!chatConditions.length) return;\n\n\t\tEnhancedConditions.outputChatMessage(token, chatConditions, { type: \"active\" });\n\t}\n\n\t/**\n\t * Render Chat Message handler\n\t * @param {*} app\n\t * @param {*} html\n\t * @param {*} data\n\t * @todo move to chatlog render?\n\t */\n\tstatic async _onRenderChatMessage(app, html, data) {\n\t\tif (data.message.content && !data.message.content.match(\"enhanced-conditions\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst speaker = data.message.speaker;\n\n\t\tif (!speaker) return;\n\n\t\tconst removeConditionAnchor = html.find(\"a[name='remove-row']\");\n\t\tconst undoRemoveAnchor = html.find(\"a[name='undo-remove']\");\n\n\t\tif (!game.user.isGM) {\n\t\t\tremoveConditionAnchor.parent().hide();\n\t\t\tundoRemoveAnchor.parent().hide();\n\t\t}\n\n\t\t/**\n\t\t * @todo #284 move to chatlog listener instead\n\t\t */\n\t\tremoveConditionAnchor.on(\"click\", (event) => {\n\t\t\tconst conditionListItem = event.target.closest(\"li\");\n\t\t\tconst conditionName = conditionListItem.dataset.conditionName;\n\t\t\tconst messageListItem = conditionListItem?.parentElement?.closest(\"li\");\n\t\t\tconst messageId = messageListItem?.dataset?.messageId;\n\t\t\tconst message = messageId ? game.messages.get(messageId) : null;\n\n\t\t\tif (!message) return;\n\n\t\t\tconst actor = ChatMessage.getSpeakerActor(message.speaker);\n\n\t\t\tEnhancedConditions.removeCondition(conditionName, actor, { warn: false });\n\t\t});\n\n\t\tundoRemoveAnchor.on(\"click\", (event) => {\n\t\t\tconst conditionListItem = event.target.closest(\"li\");\n\t\t\tconst conditionName = conditionListItem.dataset.conditionName;\n\t\t\tconst messageListItem = conditionListItem?.parentElement?.closest(\"li\");\n\t\t\tconst messageId = messageListItem?.dataset?.messageId;\n\t\t\tconst message = messageId ? game.messages.get(messageId) : null;\n\n\t\t\tif (!message) return;\n\n\t\t\tconst speaker = message?.speaker;\n\n\t\t\tif (!speaker) return;\n\n\t\t\tconst token = canvas.tokens.get(speaker.token);\n\t\t\tconst actor = game.actors.get(speaker.actor);\n\t\t\tconst entity = token ?? actor;\n\n\t\t\tif (!entity) return;\n\n\t\t\tEnhancedConditions.addCondition(conditionName, entity);\n\t\t});\n\t}\n\n\tstatic async _onRenderChatLog(app, html, data) {\n\t\tEnhancedConditions.updateConditionTimestamps();\n\t}\n\n\tstatic async _onRenderCombatTracker(app, html, data) {\n\t\tconst effectIcons = html.find(\"img[class='token-effect']\");\n\n\t\teffectIcons.each((index, element) => {\n\t\t\tconst url = new URL(element.src);\n\t\t\tconst path = url?.pathname?.substring(1);\n\t\t\tconst conditions = EnhancedConditions.getConditionsByIcon(path);\n\t\t\tconst statusEffect = CONFIG.statusEffects.find((e) => e.icon === path);\n\n\t\t\tif (conditions?.length) {\n\t\t\t\telement.title = conditions[0];\n\t\t\t} else if (statusEffect?.label) {\n\t\t\t\telement.title = game.i18n.localize(statusEffect.label);\n\t\t\t}\n\t\t});\n\t}\n\n\t/* -------------------------------------------- */\n\t/*                    Workers                   */\n\t/* -------------------------------------------- */\n\n\t/**\n\t * Process the addition/removal of an Active Effect\n\t * @param {ActiveEffect} effect  the effect\n\t * @param {string} type  the type of change to process\n\t */\n\tstatic _processActiveEffectChange(effect, type = \"create\") {\n\t\tif (!(effect instanceof ActiveEffect)) return;\n\n\t\tconst effectId = effect.getFlag(\"condition-lab-triggler\", \"conditionId\");\n\t\tif (!effectId) return;\n\n\t\tconst condition = EnhancedConditions.lookupEntryMapping(effectId);\n\n\t\tif (!condition) return;\n\n\t\tconst shouldOutput =\n\t\t\tgame.settings.get(\"condition-lab-triggler\", \"conditionsOutputToChat\") && condition.options.outputChat;\n\t\tconst outputType = type === \"delete\" ? \"removed\" : \"added\";\n\t\tconst actor = effect.parent;\n\n\t\tif (shouldOutput) EnhancedConditions.outputChatMessage(actor, condition, { type: outputType });\n\t\tlet macros = [];\n\n\t\tswitch (type) {\n\t\t\tcase \"create\":\n\t\t\t\tmacros = condition.macros?.filter((m) => m.type === \"apply\");\n\t\t\t\tif (condition.options?.removeOthers) EnhancedConditions._removeOtherConditions(actor, condition.id);\n\t\t\t\tif (condition.options?.markDefeated) EnhancedConditions._toggleDefeated(actor, { markDefeated: true });\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"delete\":\n\t\t\t\tmacros = condition.macros?.filter((m) => m.type === \"remove\");\n\t\t\t\tif (condition.options?.markDefeated) EnhancedConditions._toggleDefeated(actor, { markDefeated: false });\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst macroIds = macros?.length ? macros.filter((m) => m.id).map((m) => m.id) : null;\n\n\t\tif (macroIds?.length) EnhancedConditions._processMacros(macroIds, actor);\n\t}\n\n\t/**\n\t * Checks statusEffect icons against map and returns matching condition mappings\n\t * @param {Array | string} effectIds  A list of effectIds, or a single effectId to check\n\t * @param {Array} [map=[]]  the condition map to look in\n\t */\n\tstatic lookupEntryMapping(effectIds, map = []) {\n\t\tif (!(effectIds instanceof Array)) {\n\t\t\teffectIds = [effectIds];\n\t\t}\n\n\t\tif (!map.length) {\n\t\t\tmap = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\t\t\tif (!map.length) return null;\n\t\t}\n\n\t\tconst conditionEntries = map.filter((row) =>\n\t\t\teffectIds.includes(row.id ?? Sidekick.generateUniqueSlugId(row.name))\n\t\t);\n\n\t\tif (conditionEntries.length === 0) return;\n\n\t\treturn conditionEntries.length > 1 ? conditionEntries : conditionEntries.shift();\n\t}\n\n\t/**\n\t * Output one or more condition entries to chat\n\t * @param entity\n\t * @param entries\n\t * @param options\n\t * @todo refactor to use actor or token\n\t */\n\tstatic async outputChatMessage(entity, entries, options = { type: \"active\" }) {\n\t\tconst isActorEntity = entity instanceof Actor;\n\t\t// Turn a single condition mapping entry into an array\n\t\tentries = entries instanceof Array ? entries : [entries];\n\n\t\tif (!entity || !entries.length) return;\n\n\t\tconst type = {};\n\n\t\tswitch (options.type) {\n\t\t\tcase \"added\":\n\t\t\t\ttype.added = true;\n\t\t\t\ttype.title = game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ChatCard.Title.Added\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"removed\":\n\t\t\t\ttype.removed = true;\n\t\t\t\ttype.title = game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ChatCard.Title.Removed\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"active\":\n\t\t\tdefault:\n\t\t\t\ttype.active = true;\n\t\t\t\ttype.title = game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ChatCard.Title.Active\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst chatUser = game.userId;\n\t\t// const token = token || this.currentToken;\n\t\tconst chatType = CONST.CHAT_MESSAGE_TYPES.OTHER;\n\t\tconst speaker = isActorEntity\n\t\t\t? ChatMessage.getSpeaker({ actor: entity })\n\t\t\t: ChatMessage.getSpeaker({ token: entity });\n\t\tconst timestamp = type.active ? null : Date.now();\n\n\t\t// iterate over the entries and mark any with references for use in the template\n\t\tentries.forEach((v, i, a) => {\n\t\t\tif (v.referenceId) {\n\t\t\t\tif (!v.referenceId.match(/\\{.+\\}/)) {\n\t\t\t\t\tv.referenceId += `{${v.name}}`;\n\t\t\t\t}\n\n\t\t\t\ta[i].hasReference = true;\n\t\t\t}\n\t\t});\n\n\t\tconst chatCardHeading = game.i18n.localize(\n\t\t\ttype.active ? \"CLT.ENHANCED_CONDITIONS.ChatCard.HeadingActive\" : \"CLT.ENHANCED_CONDITIONS.ChatCard.Heading\"\n\t\t);\n\n\t\tconst templateData = {\n\t\t\tchatCardHeading,\n\t\t\ttype,\n\t\t\ttimestamp,\n\t\t\tentityId: entity.id,\n\t\t\talias: speaker.alias,\n\t\t\tconditions: entries,\n\t\t\tisOwner: entity.isOwner || game.user.isGM\n\t\t};\n\n\t\t// if the last message Enhanced conditions, append instead of making a new one\n\t\tconst lastMessage = game.messages.contents[game.messages.contents.length - 1];\n\t\tconst lastMessageSpeaker = lastMessage?.speaker;\n\t\tconst sameSpeaker = isActorEntity\n\t\t\t? lastMessageSpeaker?.actor === speaker.actor\n\t\t\t: lastMessageSpeaker?.token === speaker.token;\n\n\t\t// hard code the recent timestamp to 30s for now\n\t\tconst recentTimestamp = Date.now() <= (lastMessage?.timestamp ?? 0) + 30000;\n\t\tconst enhancedConditionsDiv = lastMessage?.content.match(\"enhanced-conditions\");\n\n\t\tif (!type.active && enhancedConditionsDiv && sameSpeaker && recentTimestamp) {\n\t\t\tlet newContent = \"\";\n\t\t\tfor (const condition of entries) {\n\t\t\t\tconst newRow = await renderTemplate(\n\t\t\t\t\t\"modules/condition-lab-triggler/templates/partials/chat-card-condition-list.hbs\",\n\t\t\t\t\t{ condition, type, timestamp }\n\t\t\t\t);\n\t\t\t\tnewContent += newRow;\n\t\t\t}\n\t\t\tconst existingContent = lastMessage.content;\n\t\t\tconst ulEnd = existingContent?.indexOf(\"</ul>\");\n\t\t\tif (!ulEnd) return;\n\t\t\tconst content = existingContent.slice(0, ulEnd) + newContent + existingContent.slice(ulEnd);\n\t\t\tawait lastMessage.update({ content });\n\t\t\tEnhancedConditions.updateConditionTimestamps();\n\t\t\tui.chat.scrollBottom();\n\t\t} else {\n\t\t\tconst content = await renderTemplate(\n\t\t\t\t\"modules/condition-lab-triggler/templates/chat-conditions.hbs\",\n\t\t\t\ttemplateData\n\t\t\t);\n\n\t\t\tawait ChatMessage.create({\n\t\t\t\tspeaker,\n\t\t\t\tcontent,\n\t\t\t\ttype: chatType,\n\t\t\t\tuser: chatUser\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Marks a Combatants for a particular entity as defeated\n\t * @param {Actor | Token} entities  the entity to mark defeated\n\t * @param {boolean} options.markDefeated  an optional state flag (default=true)\n\t */\n\tstatic _toggleDefeated(entities, { markDefeated = true } = {}) {\n\t\tconst combat = game.combat;\n\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\treturn;\n\t\t}\n\n\t\tentities = entities instanceof Array ? entities : [entities];\n\n\t\tconst tokens = entities.flatMap((e) =>\n\t\t\te instanceof Token || e instanceof TokenDocument ? e : e instanceof Actor ? e.getActiveTokens() : null\n\t\t);\n\n\t\tconst updates = [];\n\n\t\t// loop through tokens, and if there's matching combatants, add them to the update\n\t\tfor (const token of tokens) {\n\t\t\tconst combatants = combat\n\t\t\t\t? combat.combatants?.contents?.filter((c) => c.tokenId === token.id && c.defeated !== markDefeated)\n\t\t\t\t: [];\n\n\t\t\tif (!combatants.length) return;\n\n\t\t\tconst update = combatants.map((c) => {\n\t\t\t\treturn {\n\t\t\t\t\t_id: c.id,\n\t\t\t\t\tdefeated: markDefeated\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tupdates.push(update);\n\t\t}\n\n\t\tif (!updates.length) return;\n\n\t\t// update all combatants at once\n\t\tcombat.updateEmbeddedDocuments(\"Combatant\", updates.length > 1 ? updates : updates.shift());\n\t}\n\n\t/**\n\t * For a given entity, removes conditions other than the one supplied\n\t * @param {*} entity\n\t * @param {*} conditionId\n\t */\n\tstatic async _removeOtherConditions(entity, conditionId) {\n\t\tconst entityConditions = EnhancedConditions.getConditions(entity, { warn: false });\n\t\tlet conditions = entityConditions ? entityConditions.conditions : [];\n\t\tconditions = conditions instanceof Array ? conditions : [conditions];\n\n\t\tif (!conditions.length) return;\n\n\t\tconst removeConditions = conditions.filter((c) => c.id !== conditionId);\n\n\t\tif (!removeConditions.length) return;\n\n\t\tfor (const c of removeConditions) await EnhancedConditions.removeCondition(c.name, entity, { warn: true });\n\t}\n\n\t/**\n\t * Migrates Condition Ids to be truly unique-ish\n\t * @param {*} conditionMap\n\t */\n\tstatic async _migrateConditionIds(conditionMap) {\n\t\tif (!conditionMap?.length) return;\n\n\t\tconst existingIds = conditionMap.filter((c) => c.id).map((c) => c.id);\n\t\tconst processedIds = [];\n\t\tconst newMap = foundry.utils.deepClone(conditionMap);\n\t\tnewMap.forEach((c) => {\n\t\t\tif (processedIds.includes(c.id)) {\n\t\t\t\tconsole.log(\"CLT | Duplicate Condition found:\", c);\n\t\t\t\tc.id = Sidekick.createId(existingIds);\n\t\t\t\tconsole.log(\"CLT | New id:\", c.id);\n\t\t\t}\n\t\t\tc.id = c.id.replace(/condition-lab-triggler/, \"\");\n\t\t\tprocessedIds.push(c.id);\n\t\t});\n\t\tawait game.settings.set(\"condition-lab-triggler\", \"activeConditionMap\", newMap);\n\t}\n\n\t/**\n\t * Process macros based on given Ids\n\t * @param {*} macroIds\n\t * @param {*} entity\n\t */\n\tstatic async _processMacros(macroIds, entity = null) {\n\t\tconst isToken = entity instanceof Token || entity instanceof TokenDocument;\n\t\tconst isActor = entity instanceof Actor;\n\n\t\tfor (const macroId of macroIds) {\n\t\t\tconst macro = game.macros.get(macroId);\n\t\t\tif (!macro) continue;\n\n\t\t\tconst scope = isToken ? { token: entity } : isActor ? { actor: entity } : null;\n\t\t\tawait macro.execute(scope);\n\t\t}\n\t}\n\n\t/**\n\t * Update condition added/removed timestamps\n\t */\n\tstatic updateConditionTimestamps() {\n\t\tconst conditionRows = document.querySelectorAll(\"ol#chat-log ul.condition-list li\");\n\t\tfor (const li of conditionRows) {\n\t\t\tconst timestamp =\n\t\t\t\ttypeof li.dataset.timestamp === \"string\" ? parseInt(li.dataset.timestamp) : li.dataset.timestamp;\n\t\t\tconst iconSpanWrapper = li.querySelector(\"span.add-remove-icon\");\n\n\t\t\tif (!timestamp || !iconSpanWrapper) continue;\n\n\t\t\tconst type = li.dataset.changeType;\n\t\t\ticonSpanWrapper.title = `${type} ${foundry.utils.timeSince(timestamp)}`;\n\t\t}\n\t}\n\n\t// !! TODO: reassess this -- will it replace valid status effects because the duplicate id matches the remaining unique id???\n\t// static async _migrateActiveEffectConditionId(oldId, newId) {\n\t//     const updates = [];\n\n\t//     for (const scene of game.scenes) {\n\t//         const sceneTokens = scene.data?.tokens?.contents;\n\t//         for (const token of sceneTokens) {\n\t//             const matchingEffect = token.actor?.effects?.contents?.find(e => e.getFlag('core', 'statusId') === oldId);\n\t//             if (matchingEffect) {\n\t//                 const newFlags = foundry.utils.duplicate(matchingEffect.data.flags);\n\t//                 foundry.utils.mergeObject(newFlags, {\n\t//                     \"core.statusId\": newId,\n\t//                     [`condition-lab-triggler.${\"conditionId\"}`]: newId\n\t//                 });\n\t//                 const update = {_id: matchingEffect.id, flags: newFlags};\n\n\t//                 await token.actor.updateEmbeddedDocuments(\"ActiveEffect\", update);\n\t//             }\n\t//         }\n\t//     }\n\t// }\n\n\t/* -------------------------------------------- */\n\t/*                    Helpers                   */\n\t/* -------------------------------------------- */\n\n\t/**\n\t * Determines whether to display the combat utility belt div in the settings sidebar\n\t * @param {boolean} display\n\t * @todo: extract to helper in sidekick class?\n\t */\n\tstatic _toggleLabButtonVisibility(display) {\n\t\tif (!game.user.isGM) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet labButton = document.getElementById(\"condition-lab\");\n\n\t\tif (display && labButton && labButton.style.display !== \"block\") {\n\t\t\treturn (labButton.style.display = \"block\");\n\t\t}\n\n\t\tif (labButton && !display && labButton.style.display !== \"none\") {\n\t\t\treturn (labButton.style.display = \"none\");\n\t\t}\n\t}\n\n\t/**\n\t * Returns the default maps supplied with the module\n\t *\n\t * @todo: map to entryId and then rebuild on import\n\t */\n\tstatic async _loadDefaultMaps() {\n\t\tconst path = \"modules/condition-lab-triggler/condition-maps\";\n\t\tconst jsons = await Sidekick.fetchJsons(\"data\", path);\n\n\t\tconst defaultMaps = jsons\n\t\t\t.filter((j) => !j.system.includes(\"example\"))\n\t\t\t.reduce((obj, current) => {\n\t\t\t\tobj[current.system] = current.map;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\treturn defaultMaps;\n\t}\n\n\t/**\n\t * Parse the provided Condition Map and prepare it for storage, validating and correcting bad or missing data where possible\n\t * @param {*} conditionMap\n\t * @returns {Array}\n\t */\n\tstatic _prepareMap(conditionMap) {\n\t\tconst preparedMap = [];\n\n\t\tif (!conditionMap || !conditionMap?.length) {\n\t\t\treturn preparedMap;\n\t\t}\n\n\t\tconst outputChatSetting = game.settings.get(\"condition-lab-triggler\", \"conditionsOutputToChat\");\n\n\t\t// Map existing ids for ease of access\n\t\tconst existingIds = conditionMap.filter((c) => c.id).map((c) => c.id);\n\t\tconst processedIds = [];\n\n\t\t// Iterate through the map validating/preparing the data\n\t\tfor (let i = 0; i < conditionMap.length; i++) {\n\t\t\tlet condition = duplicate(conditionMap[i]);\n\n\t\t\t// Delete falsy values\n\t\t\tif (!condition) preparedMap.splice(i, 1);\n\n\t\t\t// Convert string values (eg. icon path) to condition/effect object\n\t\t\t// @todo #580 Consider re-adding support for systems that use simple icons for status effects\n\t\t\t// condition = typeof condition == \"string\" ? {icon: condition} : condition;\n\t\t\tif (typeof condition == \"string\") continue;\n\n\t\t\tif (!condition.name) {\n\t\t\t\tcondition.name =\n\t\t\t\t\tcondition.label ?? (condition.icon ? Sidekick.getNameFromFilePath(condition.icon) : \"\");\n\t\t\t}\n\n\t\t\t// If conditionId doesn't exist, or is a duplicate, create a new Id\n\t\t\tcondition.id =\n\t\t\t\t!condition.id || processedIds.includes(condition.id) ? Sidekick.createId(existingIds) : condition.id;\n\t\t\tprocessedIds.push(condition.id);\n\n\t\t\tcondition.options = condition.options || {};\n\t\t\tif (condition.options.outputChat === undefined) condition.options.outputChat = outputChatSetting;\n\t\t\tpreparedMap.push(condition);\n\t\t}\n\n\t\treturn preparedMap;\n\t}\n\n\t/**\n\t * Duplicate the core status icons, freeze the duplicate then store a copy in settings\n\t */\n\tstatic _backupCoreEffects() {\n\t\tCONFIG.defaultStatusEffects = CONFIG.defaultStatusEffects || duplicate(CONFIG.statusEffects);\n\t\tif (!Object.isFrozen(CONFIG.defaultStatusEffects)) {\n\t\t\tObject.freeze(CONFIG.defaultStatusEffects);\n\t\t}\n\t\tgame.settings.set(\"condition-lab-triggler\", \"coreStatusEffects\", CONFIG.defaultStatusEffects);\n\t}\n\n\t/**\n\t * Duplicate the core special status effect mappings, freeze the duplicate then store a copy in settings\n\t */\n\tstatic _backupCoreSpecialStatusEffects() {\n\t\tCONFIG.defaultSpecialStatusEffects =\n\t\t\tCONFIG.defaultSpecialStatusEffects || foundry.utils.duplicate(CONFIG.specialStatusEffects);\n\t\tif (!Object.isFrozen(CONFIG.defaultSpecialStatusEffects)) {\n\t\t\tObject.freeze(CONFIG.defaultSpecialStatusEffects);\n\t\t}\n\t\tgame.settings.set(\"condition-lab-triggler\",\n\t\t\t\"defaultSpecialStatusEffects\",\n\t\t\tCONFIG.defaultSpecialStatusEffects\n\t\t);\n\t}\n\n\t/**\n\t * Creates journal entries for any conditions that don't have one\n\t * @param {string} condition the condition being evaluated\n\t */\n\tstatic async _createJournalEntry(condition) {\n\t\treturn await JournalEntry.create(\n\t\t\t{\n\t\t\t\tname: condition,\n\t\t\t\tpermission: {\n\t\t\t\t\tdefault: CONST.DOCUMENT_PERMISSION_LEVELS.LIMITED\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplaySheet: false\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Gets one or more conditions from the map by their name\n\t * @param {string} conditionName  the condition to get\n\t */\n\tstatic _lookupConditionByName(conditionName) {\n\t\tif (!conditionName) return;\n\n\t\tconditionName = conditionName instanceof Array ? conditionName : [conditionName];\n\n\t\tlet conditions = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\t\tif (!game.settings.get(\"condition-lab-triggler\", \"removeDefaultEffects\")) {\n\t\t\tconditions = conditions.concat(game.settings.get(\"condition-lab-triggler\", \"coreStatusEffects\"));\n\t\t}\n\t\tconditions = conditions.filter((c) => conditionName.includes(c.name)) ?? [];\n\t\tif (!conditions.length) return null;\n\n\t\treturn conditions.length > 1 ? conditions : conditions.shift();\n\t}\n\n\t/**\n\t * Updates the CONFIG.statusEffect effects with Condition Map ones\n\t * @param {*} conditionMap\n\t */\n\tstatic _updateStatusEffects(conditionMap) {\n\t\tconst coreEffectsSetting = game.settings.get(\"condition-lab-triggler\", \"coreStatusEffects\");\n\n\t\t// save the original icons\n\t\tif (!coreEffectsSetting.length) {\n\t\t\tEnhancedConditions._backupCoreEffects();\n\t\t}\n\n\t\tconst removeDefaultEffects = game.settings.get(\"condition-lab-triggler\", \"removeDefaultEffects\");\n\t\tconst activeConditionMap = conditionMap || game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\t\tif (!removeDefaultEffects && !activeConditionMap) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeConditionEffects = EnhancedConditions._prepareStatusEffects(activeConditionMap);\n\n\t\tif (removeDefaultEffects) {\n\t\t\treturn (CONFIG.statusEffects = activeConditionEffects ?? []);\n\t\t}\n\n\t\tif (activeConditionMap instanceof Array) {\n\t\t\t// add the icons from the condition map to the status effects array\n\t\t\tconst coreEffects =\n\t\t\t\tCONFIG.defaultStatusEffects || game.settings.get(\"condition-lab-triggler\", \"coreStatusEffects\");\n\n\t\t\t// Create a Set based on the core status effects and the Enhanced Condition effects. Using a Set ensures unique icons only\n\t\t\treturn (CONFIG.statusEffects = coreEffects.concat(activeConditionEffects));\n\t\t}\n\t}\n\n\t/**\n\t * Converts the given Condition Map (one or more Conditions) into a Status Effects array or object\n\t * @param {Array | object} conditionMap\n\t * @returns {Array} statusEffects\n\t */\n\tstatic _prepareStatusEffects(conditionMap) {\n\t\tconditionMap = conditionMap instanceof Array ? conditionMap : [conditionMap];\n\n\t\tif (!conditionMap.length) return;\n\n\t\tconst existingIds = conditionMap.filter((c) => c.id).map((c) => c.id);\n\n\t\tconst statusEffects = conditionMap.map((c) => {\n\t\t\tconst id = c.id || Sidekick.createId(existingIds);\n\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\tstatuses: [id],\n\t\t\t\tname: c.name,\n\t\t\t\ticon: c.icon,\n\t\t\t\tchanges: c.activeEffect?.changes || [],\n\t\t\t\tdescription: c.activeEffect?.description || \"\",\n\t\t\t\tduration: c.duration || c.activeEffect?.duration || {},\n\t\t\t\tflags: {\n\t\t\t\t\t...c.activeEffect?.flags,\n\t\t\t\t\tcore: {\n\t\t\t\t\t\toverlay: c?.options?.overlay ?? false\n\t\t\t\t\t},\n\t\t\t\t\t\"condition-lab-triggler\": {\n\t\t\t\t\t\tconditionId: id\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tget label() {\n\t\t\t\t\treturn this.name;\n\t\t\t\t},\n\t\t\t\tset label(value) {\n\t\t\t\t\tthis.name = value;\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\n\t\treturn statusEffects;\n\t}\n\n\t/**\n\t * Prepares one or more ActiveEffects from Conditions for placement on an actor\n\t * @param {object | Array} effects  a single ActiveEffect data object or an array of ActiveEffect data objects\n\t */\n\tstatic _prepareActiveEffects(effects) {\n\t\tif (!effects) return;\n\n\t\tfor (const effect of effects) {\n\t\t\tconst overlay = getProperty(effect, \"flags.condition-lab-triggler.core.overlay\");\n\t\t\t// If the parent Condition for the ActiveEffect defines it as an overlay, mark the ActiveEffect as an overlay\n\t\t\tif (overlay) {\n\t\t\t\teffect.flags.core.overlay = overlay;\n\t\t\t}\n\t\t}\n\n\t\treturn effects;\n\t}\n\n\t/**\n\t * Returns just the icon side of the map\n\t * @param conditionMap\n\t */\n\tstatic getConditionIcons(conditionMap = {}) {\n\t\tif (!conditionMap) {\n\t\t\t// maybe log an error?\n\t\t\treturn;\n\t\t}\n\n\t\tif (Object.keys(conditionMap).length === 0) {\n\t\t\tconditionMap = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\t\t\tif (!conditionMap || Object.keys(conditionMap).length === 0) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\tif (conditionMap instanceof Array) {\n\t\t\treturn conditionMap.map((mapEntry) => mapEntry.icon);\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * Retrieves a condition icon by its mapped name\n\t * @param {*} condition\n\t * @param root0\n\t * @param root0.firstOnly\n\t */\n\tstatic getIconsByCondition(condition, { firstOnly = false } = {}) {\n\t\tconst conditionMap = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\t\tif (!conditionMap || !condition) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (conditionMap instanceof Array) {\n\t\t\tconst filteredConditions = conditionMap.filter((c) => c.name === condition).map((c) => c.icon);\n\t\t\tif (!filteredConditions.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn firstOnly ? filteredConditions[0] : filteredConditions;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Retrieves a condition name by its mapped icon\n\t * @param {*} icon\n\t * @param root0\n\t * @param root0.firstOnly\n\t */\n\tstatic getConditionsByIcon(icon, { firstOnly = false } = {}) {\n\t\tconst conditionMap = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\t\tif (!conditionMap || !icon) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (conditionMap instanceof Array && conditionMap.length) {\n\t\t\tconst filteredIcons = conditionMap.filter((c) => c.icon === icon).map((c) => c.name);\n\t\t\tif (!filteredIcons.length) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn firstOnly ? filteredIcons[0] : filteredIcons;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Parses a condition map JSON and returns a map\n\t * @param {*} json\n\t */\n\tstatic mapFromJson(json) {\n\t\tif (json.system !== game.system.id) {\n\t\t\tui.notifications.warn(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.MapMismatch\"));\n\t\t}\n\n\t\tconst map = json.map ? EnhancedConditions._prepareMap(json.map) : [];\n\n\t\treturn map;\n\t}\n\n\t/**\n\t * Returns the default condition map for a given system\n\t * @param defaultMaps\n\t * @returns {{Object}}\n\t */\n\tstatic getDefaultMap(defaultMaps = null) {\n\t\tconst system = game.system.id;\n\t\tdefaultMaps =\n\t\t\tdefaultMaps instanceof Object\n\t\t\t\t? defaultMaps\n\t\t\t\t: game.settings.get(\"condition-lab-triggler\", \"defaultConditionMaps\");\n\t\tlet defaultMap = defaultMaps[system] || [];\n\n\t\tif (!defaultMap.length) {\n\t\t\tdefaultMap = EnhancedConditions.buildDefaultMap();\n\t\t}\n\n\t\treturn defaultMap;\n\t}\n\n\t/**\n\t * Builds a default map for a given system\n\t * @todo #281 update for active effects\n\t */\n\tstatic buildDefaultMap() {\n\t\tconst coreEffectsSetting = game.settings.get(\"condition-lab-triggler\", \"coreStatusEffects\");\n\t\tconst coreEffects = coreEffectsSetting && coreEffectsSetting.length ? coreEffectsSetting : CONFIG.statusEffects;\n\t\treturn EnhancedConditions._prepareMap(coreEffects);\n\t}\n\n\t/* -------------------------------------------- */\n\t/*                      API                     */\n\t/* -------------------------------------------- */\n\n\t/**\n\t * Apply the named condition to the provided entities (Actors or Tokens)\n\t * @deprecated\n\t * @param  {...any} params\n\t * @see EnhancedConditions#addCondition\n\t */\n\tstatic async applyCondition(...params) {\n\t\treturn EnhancedConditions.addCondition(...params);\n\t}\n\n\t/**\n\t * Applies the named condition to the provided entities (Actors or Tokens)\n\t * @param {string[] | string} conditionName  the name of the condition to add\n\t * @param {(Actor[] | Token[] | Actor | Token)} [entities=null] one or more Actors or Tokens to apply the Condition to\n\t * @param {boolean} [options.allowDuplicates=false]  if one or more of the Conditions specified is already active on the Entity, this will still add the Condition. Use in conjunction with `replaceExisting` to determine how duplicates are handled\n\t * @param {boolean} [options.replaceExisting=false]  whether or not to replace existing Conditions with any duplicates in the `conditionName` parameter. If `allowDuplicates` is true and `replaceExisting` is false then a duplicate condition is created. Has no effect is `keepDuplicates` is `false`\n\t * @example\n\t * // Add the Condition \"Blinded\" to an Actor named \"Bob\". Duplicates will not be created.\n\t * game.clt.addCondition(\"Blinded\", game.actors.getName(\"Bob\"));\n\t * @example\n\t * // Add the Condition \"Charmed\" to the currently controlled Token/s. Duplicates will not be created.\n\t * game.clt.addCondition(\"Charmed\");\n\t * @example\n\t * // Add the Conditions \"Blinded\" and \"Charmed\" to the targeted Token/s and create duplicates, replacing any existing Conditions of the same names.\n\t * game.clt.addCondition([\"Blinded\", \"Charmed\"], [...game.user.targets], {allowDuplicates: true, replaceExisting: true});\n\t */\n\tstatic async addCondition(\n\t\tconditionName,\n\t\tentities = null,\n\t\t{ allowDuplicates = false, replaceExisting = false } = {}\n\t) {\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\tui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ApplyCondition.Failed.NoToken\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.ApplyCondition.Failed.NoToken\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tlet conditions = EnhancedConditions._lookupConditionByName(conditionName);\n\n\t\tif (!conditions) {\n\t\t\tui.notifications.error(\n\t\t\t\t`${game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ApplyCondition.Failed.NoCondition\")} ${conditionName}`\n\t\t\t);\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.ApplyCondition.Failed.NoCondition\"\n\t\t\t\t)}`,\n\t\t\t\tconditionName\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconditions = conditions instanceof Array ? conditions : [conditions];\n\t\tconst conditionNames = conditions.map((c) => c.name);\n\n\t\tlet effects = EnhancedConditions.getActiveEffect(conditions);\n\n\t\tif (!effects) {\n\t\t\tui.notifications.error(\n\t\t\t\t`${game.i18n.localize(\"CLT.ENHANCED_CONDTIONS.ApplyCondition.Failed.NoEffect\")} ${conditions}`\n\t\t\t);\n\t\t\tconsole.log(\n\t\t\t\t`Condition Lab & Triggler | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDTIONS.ApplyCondition.Failed.NoEffect\"\n\t\t\t\t)}`,\n\t\t\t\tconditions\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\teffects =\n\t\t\teffects instanceof Array\n\t\t\t\t? EnhancedConditions._prepareActiveEffects(effects)\n\t\t\t\t: EnhancedConditions._prepareActiveEffects([effects]);\n\n\t\tif (entities && !(entities instanceof Array)) {\n\t\t\tentities = [entities];\n\t\t}\n\n\t\tfor (let entity of entities) {\n\t\t\tconst actor =\n\t\t\t\tentity instanceof Actor\n\t\t\t\t\t? entity\n\t\t\t\t\t: entity instanceof Token || entity instanceof TokenDocument\n\t\t\t\t\t\t? entity.actor\n\t\t\t\t\t\t: null;\n\n\t\t\tif (!actor) continue;\n\n\t\t\tconst hasDuplicates = EnhancedConditions.hasCondition(conditionNames, actor, { warn: false });\n\t\t\tconst newEffects = [];\n\t\t\tconst updateEffects = [];\n\n\t\t\t// If there are duplicate Condition effects on the Actor take extra steps\n\t\t\tif (hasDuplicates) {\n\t\t\t\t// @todo #348 determine the best way to raise warnings in this scenario\n\t\t\t\t/*\n                if (warn) {\n                    ui.notifications.warn(`${entity.name}: ${conditionName} ${game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ApplyCondition.Failed.AlreadyActive\")}`);\n                    console.log(`Combat Utility Belt - Enhanced Conditions | ${entity.name}: ${conditionName} ${game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ApplyCondition.Failed.AlreadyActive\")}`);\n                }\n                */\n\n\t\t\t\t// Get the existing conditions on the actor\n\t\t\t\tlet existingConditionEffects = EnhancedConditions.getConditionEffects(actor, { warn: false });\n\t\t\t\texistingConditionEffects =\n\t\t\t\t\texistingConditionEffects instanceof Array ? existingConditionEffects : [existingConditionEffects];\n\n\t\t\t\t// Loop through the effects sorting them into either existing or new effects\n\t\t\t\tfor (const effect of effects) {\n\t\t\t\t\t// Scenario 1: if duplicates are allowed, but existing conditions are not replaced, everything is new\n\t\t\t\t\tif (allowDuplicates && !replaceExisting) {\n\t\t\t\t\t\tnewEffects.push(effect);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst conditionId = getProperty(\n\t\t\t\t\t\teffect,\n\t\t\t\t\t\t`flags.condition-lab-triggler.${\"conditionId\"}`\n\t\t\t\t\t);\n\t\t\t\t\tconst matchedConditionEffects = existingConditionEffects.filter(\n\t\t\t\t\t\t(e) => e.getFlag(\"condition-lab-triggler\", \"conditionId\") === conditionId\n\t\t\t\t\t);\n\n\t\t\t\t\t// Scenario 2: if duplicates are allowed, and existing conditions should be replaced, add any existing conditions to update\n\t\t\t\t\tif (replaceExisting) {\n\t\t\t\t\t\tfor (const matchedCondition of matchedConditionEffects) {\n\t\t\t\t\t\t\tupdateEffects.push({ id: matchedCondition.id, ...effect });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Scenario 2 cont'd: if the condition is not matched, it must be new, so add to the new effects\n\t\t\t\t\t// Scenario 3: if duplicates are not allowed, and existing conditions are not replaced, just add the new conditions\n\t\t\t\t\tif (!matchedConditionEffects.length) newEffects.push(effect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the any of the conditions remove others, remove all conditions\n\t\t\t// @todo maybe add this to the logic above?\n\t\t\tif (conditions.some((c) => c?.options?.removeOthers)) {\n\t\t\t\tawait EnhancedConditions.removeAllConditions(actor, { warn: false });\n\t\t\t}\n\n\t\t\tconst createData = hasDuplicates ? newEffects : effects;\n\t\t\tconst updateData = updateEffects;\n\t\t\t// If system is dnd3.5e, then prevent upstream updates to avoid condition being immediately removed\n\t\t\tconst stopUpdates = game.system.id === \"D35E\";\n\n\t\t\tif (createData.length) await actor.createEmbeddedDocuments(\"ActiveEffect\", createData, { stopUpdates });\n\t\t\tif (updateData.length) await actor.updateEmbeddedDocuments(\"ActiveEffect\", updateData, { stopUpdates });\n\t\t}\n\t}\n\n\t/**\n\t * Gets a condition by name from the Condition Map\n\t * @param {*} conditionName\n\t * @param {*} options.warn\n\t */\n\tstatic getCondition(conditionName, map = null, { warn = false } = {}) {\n\t\tif (!conditionName) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.GetCondition.Failed.NoCondition\"));\n\t\t}\n\n\t\treturn EnhancedConditions._lookupConditionByName(conditionName);\n\t}\n\n\t/**\n\t * Retrieves all active conditions for one or more given entities (Actors or Tokens)\n\t * @param {Actor | Token} entities  one or more Actors or Tokens to get Conditions from\n\t * @param {boolean} options.warn  output notifications\n\t * @returns {Array|undefined} entityConditionMap  a mapping of conditions for each provided entity\n\t * @example\n\t * // Get conditions for an Actor named \"Bob\"\n\t * game.clt.getConditions(game.actors.getName(\"Bob\"));\n\t * @example\n\t * // Get conditions for the currently controlled Token\n\t * game.clt.getConditions();\n\t */\n\tstatic getConditions(entities = null, { warn = true } = {}) {\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\t// Then check if the user has an assigned character\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.GetConditions.Failed.NoToken\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.GetConditions.Failed.NoToken\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst map = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\t\tif (!map || !map.length) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.GetConditions.Failed.NoCondition\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.GetConditions.Failed.NoCondition\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(entities instanceof Array)) {\n\t\t\tentities = [entities];\n\t\t}\n\n\t\tconst results = [];\n\n\t\tfor (let entity of entities) {\n\t\t\tconst actor =\n\t\t\t\tentity instanceof Actor\n\t\t\t\t\t? entity\n\t\t\t\t\t: entity instanceof Token || entity instanceof TokenDocument\n\t\t\t\t\t\t? entity.actor\n\t\t\t\t\t\t: null;\n\n\t\t\tconst effects = actor?.effects.contents;\n\n\t\t\tif (!effects) continue;\n\n\t\t\tconst effectIds =\n\t\t\t\teffects instanceof Array\n\t\t\t\t\t? effects.map((e) => e.getFlag(\"condition-lab-triggler\", \"conditionId\"))\n\t\t\t\t\t: effects.getFlag(\"condition-lab-triggler\", \"conditionId\");\n\n\t\t\tif (!effectIds.length) continue;\n\n\t\t\tconst entityConditions = {\n\t\t\t\tentity: entity,\n\t\t\t\tconditions: EnhancedConditions.lookupEntryMapping(effectIds)\n\t\t\t};\n\n\t\t\tresults.push(entityConditions);\n\t\t}\n\n\t\tif (!results.length) {\n\t\t\tif (warn) ui.notifications.notify(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.GetConditions.Failed.NoResults\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.GetConditions.Failed.NoResults\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn results.length > 1 ? results : results.shift();\n\t}\n\n\t/**\n\t * Gets the Active Effect data (if any) for the given condition\n\t * @param {*} condition\n\t */\n\tstatic getActiveEffect(condition) {\n\t\treturn EnhancedConditions._prepareStatusEffects(condition);\n\t}\n\n\t/**\n\t * Gets any Active Effect instances present on the entities (Actor/s or Token/s) that are mapped Conditions\n\t * @param {string} entities  the entities to check\n\t * @param {Array} map  the Condition map to check (optional)\n\t * @param {boolean} warn  output notifications\n\t * @returns {Map | object} A Map containing the Actor Id and the Condition Active Effect instances if any\n\t */\n\tstatic getConditionEffects(entities, map = null, { warn = true } = {}) {\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\tif (warn) ui.notifications.error(\n\t\t\t\tgame.i18n.localize(\"CLT.ENHANCED_CONDITIONS.GetConditionEffects.Failed.NoEntity\")\n\t\t\t);\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoToken\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tentities = entities instanceof Array ? entities : [entities];\n\n\t\tif (!map) map = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\t\tlet results = new Collection();\n\n\t\tfor (const entity of entities) {\n\t\t\tconst actor =\n\t\t\t\tentity instanceof Actor\n\t\t\t\t\t? entity\n\t\t\t\t\t: entity instanceof Token || entity instanceof TokenDocument\n\t\t\t\t\t\t? entity.actor\n\t\t\t\t\t\t: null;\n\t\t\tconst activeEffects = actor.effects.contents;\n\n\t\t\tif (!activeEffects.length) continue;\n\n\t\t\tconst conditionEffects = activeEffects.filter((ae) =>\n\t\t\t\tae.getFlag(\"condition-lab-triggler\", \"conditionId\")\n\t\t\t);\n\n\t\t\tif (!conditionEffects.length) continue;\n\n\t\t\tresults.set(entity.id, conditionEffects.length > 1 ? conditionEffects : conditionEffects.shift());\n\t\t}\n\n\t\tif (!results.size) return null;\n\n\t\treturn results.size > 1 ? results : results.values().next().value;\n\t}\n\n\t/**\n\t * Checks if the provided Entity (Actor or Token) has the given condition\n\t * @param {string | Array} conditionName  the name/s of the condition or conditions to check for\n\t * @param {Actor | Token | Array} entities  the entity or entities to check (Actor/s or Token/s)\n\t * @param {object} [options]  options object\n\t * @param {boolean} [options.warn]  whether or not to output notifications\n\t * @returns {boolean} hasCondition  Returns true if one or more of the provided entities has one or more of the provided conditions\n\t * @example\n\t * // Check for the \"Blinded\" condition on Actor \"Bob\"\n\t * game.clt.hasCondition(\"Blinded\", game.actors.getName(\"Bob\"));\n\t * @example\n\t * // Check for the \"Charmed\" and \"Deafened\" conditions on the controlled tokens\n\t * game.clt.hasCondition([\"Charmed\", \"Deafened\"]);\n\t */\n\tstatic hasCondition(conditionName, entities = null, { warn = true } = {}) {\n\t\tif (!conditionName) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.HasCondition.Failed.NoCondition\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.HasCondition.Failed.NoCondition\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\t// Then check if the user has an assigned character\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.HasCondition.Failed.NoToken\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.HasCondition.Failed.NoToken\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\tentities = entities instanceof Array ? entities : [entities];\n\n\t\tlet conditions = EnhancedConditions._lookupConditionByName(conditionName);\n\n\t\tif (!conditions) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.HasCondition.Failed.NoMapping\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoMapping\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\tconditions = EnhancedConditions._prepareStatusEffects(conditions);\n\t\tconditions = conditions instanceof Array ? conditions : [conditions];\n\n\t\tfor (let entity of entities) {\n\t\t\tconst actor =\n\t\t\t\tentity instanceof Actor\n\t\t\t\t\t? entity\n\t\t\t\t\t: entity instanceof Token || entity instanceof TokenDocument\n\t\t\t\t\t\t? entity.actor\n\t\t\t\t\t\t: null;\n\n\t\t\tif (!actor.effects.size) continue;\n\n\t\t\tconst conditionEffect = actor.effects.contents.some((ae) => {\n\t\t\t\treturn conditions.some(\n\t\t\t\t\t(e) =>\n\t\t\t\t\t\te?.flags[\"condition-lab-triggler\"].conditionId\n\t\t\t\t\t\t=== ae.getFlag(\"condition-lab-triggler\", \"conditionId\")\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tif (conditionEffect) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Removes one or more named conditions from an Entity (Actor/Token)\n\t * @param {Actor | Token} entities  One or more Actors or Tokens\n\t * @param {string} conditionName  the name of the Condition to remove\n\t * @param {object} options  options for removal\n\t * @param {boolean} options.warn  whether or not to raise warnings on errors\n\t * @example\n\t * // Remove Condition named \"Blinded\" from an Actor named Bob\n\t * game.clt.removeCondition(\"Blinded\", game.actors.getName(\"Bob\"));\n\t * @example\n\t * // Remove Condition named \"Charmed\" from the currently controlled Token, but don't show any warnings if it fails.\n\t * game.clt.removeCondition(\"Charmed\", {warn=false});\n\t */\n\tstatic async removeCondition(conditionName, entities = null, { warn = true } = {}) {\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t\telse entities = null;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoToken\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoToken\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(conditionName instanceof Array)) conditionName = [conditionName];\n\n\t\tconst conditions = EnhancedConditions._lookupConditionByName(conditionName);\n\n\t\tif (!conditions || (conditions instanceof Array && !conditions.length)) {\n\t\t\tif (warn) ui.notifications.error(\n\t\t\t\t`${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoCondition\"\n\t\t\t\t)} ${conditionName}`\n\t\t\t);\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoCondition\"\n\t\t\t\t)}`,\n\t\t\t\tconditionName\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tlet effects = EnhancedConditions.getActiveEffect(conditions);\n\n\t\tif (!effects) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"ENHANCED_CONDTIONS.RemoveCondition.Failed.NoEffect\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Condition | ${game.i18n.localize(\n\t\t\t\t\t\"ENHANCED_CONDTIONS.RemoveCondition.Failed.NoEffect\"\n\t\t\t\t)}`,\n\t\t\t\tconditionName\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(effects instanceof Array)) effects = [effects];\n\n\t\tif (entities && !(entities instanceof Array)) entities = [entities];\n\n\t\tfor (let entity of entities) {\n\t\t\tconst actor =\n\t\t\t\tentity instanceof Actor\n\t\t\t\t\t? entity\n\t\t\t\t\t: entity instanceof Token || entity instanceof TokenDocument\n\t\t\t\t\t\t? entity.actor\n\t\t\t\t\t\t: null;\n\t\t\tconst activeEffects = actor.effects.contents.filter((e) =>\n\t\t\t\teffects\n\t\t\t\t\t.map((e) => e.flags[\"condition-lab-triggler\"].conditionId)\n\t\t\t\t\t.includes(e.getFlag(\"condition-lab-triggler\", \"conditionId\"))\n\t\t\t);\n\n\t\t\tif (!activeEffects || (activeEffects && !activeEffects.length)) {\n\t\t\t\tif (warn) ui.notifications.warn(\n\t\t\t\t\t`${conditionName} ${game.i18n.localize(\n\t\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NotActive\"\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t\tconsole.log(\n\t\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${conditionName} ${game.i18n.localize(\n\t\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NotActive\"\n\t\t\t\t\t)}\")`\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst effectIds = activeEffects.map((e) => e.id);\n\n\t\t\tawait actor.deleteEmbeddedDocuments(\"ActiveEffect\", effectIds);\n\t\t}\n\t}\n\n\t/**\n\t * Removes all conditions from the provided entities\n\t * @param {Actors | Tokens} entities  One or more Actors or Tokens to remove Conditions from\n\t * @param {boolean} options.warn  output notifications\n\t * @example\n\t * // Remove all Conditions on an Actor named Bob\n\t * game.clt.removeAllConditions(game.actors.getName(\"Bob\"));\n\t * @example\n\t * // Remove all Conditions on the currently controlled Token\n\t * game.clt.removeAllConditions();\n\t */\n\tstatic async removeAllConditions(entities = null, { warn = true } = {}) {\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoToken\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoToken\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tentities = entities instanceof Array ? entities : [entities];\n\n\t\tfor (let entity of entities) {\n\t\t\tconst actor =\n\t\t\t\tentity instanceof Actor\n\t\t\t\t\t? entity\n\t\t\t\t\t: entity instanceof Token || entity instanceof TokenDocument\n\t\t\t\t\t\t? entity.actor\n\t\t\t\t\t\t: null;\n\n\t\t\tlet actorConditionEffects = EnhancedConditions.getConditionEffects(actor, { warn: false });\n\n\t\t\tif (!actorConditionEffects) continue;\n\n\t\t\tactorConditionEffects =\n\t\t\t\tactorConditionEffects instanceof Array ? actorConditionEffects : [actorConditionEffects];\n\n\t\t\tconst effectIds = actorConditionEffects.map((ace) => ace.id);\n\n\t\t\tawait actor.deleteEmbeddedDocuments(\"ActiveEffect\", effectIds);\n\t\t}\n\t}\n\n\tstatic async _migrationHelper(cubVersion) {\n\t\tconst conditionMigrationVersion = game.settings.get(\"condition-lab-triggler\", \"enhancedConditionsMigrationVersion\");\n\n\t\tif (foundry.utils.isNewerVersion(cubVersion, conditionMigrationVersion)) {\n\t\t\tconsole.log(\"CLT | Performing Enhanced Condition migration...\");\n\t\t\tEnhancedConditions._migrateConditionIds(game.clt?.conditions);\n\t\t\tawait game.settings.set(\"condition-lab-triggler\", \"enhancedConditionsMigrationVersion\", cubVersion);\n\t\t\tconsole.log(\"CLT | Enhanced Condition migration complete!\");\n\t\t}\n\t}\n}\n","import { EnhancedConditions } from \"./enhanced-conditions/enhanced-conditions.js\";\n\nexport class Butler {\n\t// Instantiate gadget classes\n\tenhancedConditions = new EnhancedConditions();\n\n\t// Expose API methods\n\tgetCondition = EnhancedConditions.getCondition;\n\n\tgetConditions = EnhancedConditions.getConditions;\n\n\tgetConditionEffects = EnhancedConditions.getConditionEffects;\n\n\thasCondition = EnhancedConditions.hasCondition;\n\n\tapplyCondition = EnhancedConditions.applyCondition;\n\n\taddCondition = EnhancedConditions.addCondition;\n\n\tremoveCondition = EnhancedConditions.removeCondition;\n\n\tremoveAllConditions = EnhancedConditions.removeAllConditions;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n\"use strict\";\n\n// A shim for the libWrapper library\nexport let libWrapper = undefined;\n\nexport const VERSIONS = [1, 12, 2];\nexport const TGT_SPLIT_RE = new RegExp(\"([^.[]+|\\\\[('([^'\\\\\\\\]|\\\\\\\\.)+?'|\\\"([^\\\"\\\\\\\\]|\\\\\\\\.)+?\\\")\\\\])\", \"g\");\nexport const TGT_CLEANUP_RE = new RegExp(\"(^\\\\['|'\\\\]$|^\\\\[\\\"|\\\"\\\\]$)\", \"g\");\n\n// Main shim code\nHooks.once(\"init\", () => {\n\t// Check if the real module is already loaded - if so, use it\n\tif (globalThis.libWrapper && !(globalThis.libWrapper.is_fallback ?? true)) {\n\t\tlibWrapper = globalThis.libWrapper;\n\t\treturn;\n\t}\n\n\t// Fallback implementation\n\tlibWrapper = class {\n\t\tstatic get is_fallback() {\n\t\t\treturn true;\n\t\t}\n\n\t\tstatic get WRAPPER() {\n\t\t\treturn \"WRAPPER\";\n\t\t}\n\t\tstatic get MIXED() {\n\t\t\treturn \"MIXED\";\n\t\t}\n\t\tstatic get OVERRIDE() {\n\t\t\treturn \"OVERRIDE\";\n\t\t}\n\n\t\tstatic register(package_id, target, fn, type = \"MIXED\", { chain = undefined, bind = [] } = {}) {\n\t\t\tconst is_setter = target.endsWith(\"#set\");\n\t\t\ttarget = !is_setter ? target : target.slice(0, -4);\n\t\t\tconst split = target.match(TGT_SPLIT_RE).map((x) => x.replace(/\\\\(.)/g, \"$1\").replace(TGT_CLEANUP_RE, \"\"));\n\t\t\tconst root_nm = split.splice(0, 1)[0];\n\n\t\t\tlet obj, fn_name;\n\t\t\tif (split.length == 0) {\n\t\t\t\tobj = globalThis;\n\t\t\t\tfn_name = root_nm;\n\t\t\t} else {\n\t\t\t\tconst _eval = eval;\n\t\t\t\tfn_name = split.pop();\n\t\t\t\tobj = split.reduce((x, y) => x[y], globalThis[root_nm] ?? _eval(root_nm));\n\t\t\t}\n\n\t\t\tlet iObj = obj;\n\t\t\tlet descriptor = null;\n\t\t\twhile (iObj) {\n\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(iObj, fn_name);\n\t\t\t\tif (descriptor) break;\n\t\t\t\tiObj = Object.getPrototypeOf(iObj);\n\t\t\t}\n\t\t\tif (!descriptor || descriptor?.configurable === false)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`libWrapper Shim: '${target}' does not exist, could not be found, or has a non-configurable descriptor.`,\n\t\t\t\t);\n\n\t\t\tlet original = null;\n\t\t\tconst wrapper =\n\t\t\t\tchain ?? (type.toUpperCase?.() != \"OVERRIDE\" && type != 3)\n\t\t\t\t\t? function (...args) {\n\t\t\t\t\t\t\treturn fn.call(this, original.bind(this), ...bind, ...args);\n\t\t\t\t\t  }\n\t\t\t\t\t: function (...args) {\n\t\t\t\t\t\t\treturn fn.call(this, ...bind, ...args);\n\t\t\t\t\t  };\n\t\t\tif (!is_setter) {\n\t\t\t\tif (descriptor.value) {\n\t\t\t\t\toriginal = descriptor.value;\n\t\t\t\t\tdescriptor.value = wrapper;\n\t\t\t\t} else {\n\t\t\t\t\toriginal = descriptor.get;\n\t\t\t\t\tdescriptor.get = wrapper;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!descriptor.set) throw new Error(`libWrapper Shim: '${target}' does not have a setter`);\n\t\t\t\toriginal = descriptor.set;\n\t\t\t\tdescriptor.set = wrapper;\n\t\t\t}\n\n\t\t\tdescriptor.configurable = true;\n\t\t\tObject.defineProperty(obj, fn_name, descriptor);\n\t\t}\n\t};\n});\n","import { EnhancedConditions } from \"../enhanced-conditions/enhanced-conditions.js\";\nimport { Sidekick } from \"../sidekick.js\";\n\n/**\n * Handles triggers for other gadgets in the module... or does it?!\n */\nexport class Triggler {\n\tstatic OPERATORS = {\n\t\teq: \"=\",\n\t\tne: \"≠\",\n\t\tlt: \"<\",\n\t\tlteq: \"≤\",\n\t\tgt: \">\",\n\t\tgteq: \"≥\"\n\t};\n\n\t/**\n\t * Parses triggers JSON and returns triggers\n\t * @param {{}} json\n\t * @returns {Array}\n\t */\n\tstatic triggersFromJson(json) {\n\t\tif (json.system !== game.system.id) {\n\t\t\tui.notifications.warn(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.MapMismatch\"));\n\t\t}\n\t\tconst triggers = [];\n\t\tif (json.triggers) {\n\t\t\tfor (const trigger of json.triggers) {\n\t\t\t\tconst processedTrigger = Triggler._prepareTrigger(trigger);\n\t\t\t\tif (processedTrigger) {\n\t\t\t\t\ttriggers.push(processedTrigger);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn triggers;\n\t\t}\n\t\treturn [];\n\t}\n\n\t/**\n\t * Parse the provided Condition Map and prepare it for storage, validating and correcting bad or missing data where possible\n\t * @param {*} trigger\n\t */\n\tstatic _prepareTrigger(trigger) {\n\t\tconst { triggerType = \"simple\", id = null } = trigger;\n\n\t\t// const triggerType = formData?.triggerType;\n\n\t\tif (triggerType === \"advanced\" && !trigger.advancedName.length) {\n\t\t\tconsole.warn(\n\t\t\t\t`CLT | Trigger with ID \"${id} is defined as an Advanced Trigger but has no Trigger Name.`\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\t\tconst text = triggerType === \"simple\" ? Triggler._constructString(trigger) : trigger.advancedName;\n\n\t\tif (!text) return false;\n\n\t\tconst existingTrigger = triggers.find((t) => t.id === id);\n\t\tif (existingTrigger) {\n\t\t\tconsole.warn(`CLT | Trigger with ID \"${id} already exists.`);\n\t\t\treturn false;\n\t\t}\n\t\treturn {\n\t\t\tid,\n\t\t\t...duplicate(trigger),\n\t\t\ttext\n\t\t};\n\t}\n\n\t/**\n\t * Construct a string based on trigger parts\n\t * @param {*} parts\n\t */\n\tstatic _constructString(parts) {\n\t\tconst triggerType = parts.triggerType;\n\t\tconst operatorText = Triggler.OPERATORS[parts.operator];\n\t\tconst advancedOperatorText = Triggler.OPERATORS[parts.advancedOperator];\n\n\t\tconst pcOnly = parts.pcOnly ? \" (PCs Only)\" : \"\";\n\t\tconst npcOnly = parts.npcOnly ? \" (NPCs Only)\" : \"\";\n\t\tconst notZero = parts.notZero ? \" (Not 0)\" : \"\";\n\t\tif (triggerType === \"simple\") {\n\t\t\tconst property2 = parts.property2 ? ` ${parts.category}.${parts.attribute}.${parts.property2}` : \"\";\n\t\t\treturn `${parts.category}.${parts.attribute}.${parts.property1} ${operatorText} ${parts.value}${property2}${pcOnly}${npcOnly}${notZero}`;\n\t\t} else if (triggerType === \"advanced\") {\n\t\t\tconst advancedProperty2 = parts.advancedProperty2 ? ` ${parts.advancedProperty2}` : \"\";\n\t\t\treturn `${parts.advancedProperty} ${advancedOperatorText} ${parts.advancedValue}${advancedProperty2}${pcOnly}${npcOnly}${notZero}`;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Executes a trigger calling predefined actions\n\t * @param {*} trigger\n\t * @param {*} target\n\t */\n\tstatic async _executeTrigger(trigger, target) {\n\t\tconst actor =\n\t\t\ttarget instanceof Actor\n\t\t\t\t? target\n\t\t\t\t: target instanceof TokenDocument || target instanceof Token\n\t\t\t\t\t? target.actor\n\t\t\t\t\t: null;\n\t\tconst token = target instanceof TokenDocument ? target : target instanceof Token ? target.document : null;\n\t\tconst conditionMap = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\t\tconst matchedApplyConditions = conditionMap.filter((m) => m.applyTrigger === trigger.id);\n\t\tconst matchedRemoveConditions = conditionMap.filter((m) => m.removeTrigger === trigger.id);\n\t\tconst matchedMacros = game.macros.contents.filter(\n\t\t\t(m) => m.getFlag(\"condition-lab-triggler\", \"macroTrigger\") === trigger.id\n\t\t);\n\t\tconst applyConditionNames = matchedApplyConditions.map((c) => c.name);\n\t\tconst removeConditionNames = matchedRemoveConditions.map((c) => c.name);\n\n\t\tif (applyConditionNames.length) {\n\t\t\tawait EnhancedConditions.addCondition(applyConditionNames, target, { warn: false });\n\t\t}\n\t\tif (removeConditionNames.length) {\n\t\t\tawait EnhancedConditions.removeCondition(removeConditionNames, target, { warn: false });\n\t\t}\n\n\t\tfor (const macro of matchedMacros) {\n\t\t\tawait macro.execute({ actor, token });\n\t\t}\n\t}\n\n\t/**\n\t * Processes an entity update and evaluates triggers\n\t * @param {*} entity\n\t * @param {*} update\n\t * @param {*} entryPoint1\n\t * @param {*} entryPoint2\n\t */\n\tstatic async _processUpdate(entity, update, entryPoint1, entryPoint2) {\n\t\tif (!entity || !update) return;\n\n\t\t// if (entryPoint1 && !hasProperty(update, entryPoint1)) {\n\t\t//     return;\n\t\t// }\n\n\t\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\t\tconst entityType =\n\t\t\tentity instanceof Actor\n\t\t\t\t? \"Actor\"\n\t\t\t\t: entity instanceof Token || entity instanceof TokenDocument\n\t\t\t\t\t? \"Token\"\n\t\t\t\t\t: null;\n\n\t\tif (!entityType) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * Avoid issues with Multi-Level Tokens by ignoring clone tokens\n\t\t * @see Issue #491\n\t\t */\n\t\tif (entity.flags && \"multilevel-tokens\" in entity.flags && \"stoken\" in entity.flags[\"multilevel-tokens\"]) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hasPlayerOwner = !!(entity.hasPlayerOwner ?? entity.document?.hasPlayerOwner);\n\n\t\t/**\n\t\t * process each trigger in turn, checking for a match in the update payload,\n\t\t * if a match is found, then test the values using the appropriate operator,\n\t\t * if values match, apply any mapped conditions\n\t\t * @todo reduce this down to just mapped triggers at least\n\t\t */\n\t\tfor (let trigger of triggers) {\n\t\t\tconst triggerType = trigger.triggerType || \"simple\";\n\t\t\tconst pcOnly = trigger.pcOnly;\n\t\t\tconst npcOnly = trigger.npcOnly;\n\t\t\tconst notZero = trigger.notZero;\n\n\t\t\tif ((pcOnly && !hasPlayerOwner) || (npcOnly && hasPlayerOwner)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet matchString1;\n\t\t\tlet matchString2;\n\n\t\t\tif (triggerType === \"simple\") {\n\t\t\t\tconst baseMatchString = `${entryPoint1}${entryPoint1 ? \".\" : \"\"}${trigger.category}${\n\t\t\t\t\ttrigger.attribute ? `.${trigger.attribute}` : \"\"\n\t\t\t\t}`;\n\t\t\t\t// example : actorData.system.attributes.hp.value or actorData.data.status.isShaken\n\t\t\t\tmatchString1 = `${baseMatchString}${trigger.property1 ? `.${trigger.property1}` : \"\"}`;\n\n\t\t\t\t// example: actor.system.hp.max -- note this is unlikely to be in the update data\n\t\t\t\tmatchString2 = `${baseMatchString}${trigger.property2 ? `.${trigger.property2}` : \"\"}`;\n\t\t\t} else if (triggerType === \"advanced\") {\n\t\t\t\t// entry point differs based on actor vs token\n\t\t\t\tmatchString1 = entityType === \"Actor\" ? trigger?.advancedActorProperty : trigger?.advancedTokenProperty;\n\t\t\t\tmatchString2 =\n\t\t\t\t\tentityType === \"Actor\" ? trigger?.advancedActorProperty2 : trigger?.advancedTokenProperty2;\n\t\t\t\ttrigger.value = trigger.advancedValue;\n\t\t\t\ttrigger.operator = trigger.advancedOperator;\n\t\t\t}\n\n\t\t\t// If the update doesn't have a value that matches the 1st property this trigger should be skipped\n\t\t\tif (!hasProperty(update, matchString1)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Get a value from the update that matches the 1st property in the trigger\n\t\t\tconst updateValue = getProperty(update, matchString1);\n\n\t\t\t// If the trigger is not allowed to run when value is zero, skip\n\t\t\tif (updateValue === 0 && notZero) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Get a value from the entity that matches the 2nd property in the trigger (if any)\n\t\t\tconst property2Value = getProperty(entity, matchString2);\n\n\t\t\t// We need the type later\n\t\t\tconst updateValueType = typeof updateValue;\n\n\t\t\t// example: \"=\"\n\t\t\tconst operator = Triggler.OPERATORS[trigger.operator];\n\n\t\t\t// percent requires whole different handling\n\t\t\tconst isPercent = trigger.value.endsWith(\"%\");\n\n\t\t\t// example: \"50\" -- check if the value can be converted to a number\n\t\t\tconst triggerValue = isPercent\n\t\t\t\t? Number(trigger.value.replace(\"%\", \"\"))\n\t\t\t\t: Sidekick.coerceType(trigger.value, updateValueType);\n\n\t\t\tconst triggers = [];\n\n\t\t\t/**\n\t\t\t * Switch on the operator checking it against the predefined operator choices\n\t\t\t * If it matches, then compare the values using the operator\n\t\t\t * @todo bulkify refactor this to add matched triggers to an array then execut the array at the end\n\t\t\t */\n\t\t\tswitch (operator) {\n\t\t\t\tcase Triggler.OPERATORS.eq:\n\t\t\t\t\tif (isPercent) {\n\t\t\t\t\t\t// example: (50 / 100) = 0.5;\n\t\t\t\t\t\tconst divisor = triggerValue / 100;\n\t\t\t\t\t\t// if property 1 update value = 50% of property 2 value\n\t\t\t\t\t\tif (updateValue === property2Value * divisor) {\n\t\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateValue === triggerValue) {\n\t\t\t\t\t\t// execute the trigger's condition mappings\n\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Triggler.OPERATORS.gt:\n\t\t\t\t\tif (isPercent) {\n\t\t\t\t\t\t// example: (50 / 100) = 0.5;\n\t\t\t\t\t\tconst divisor = triggerValue / 100;\n\t\t\t\t\t\t// if property 1 update value = 50% of property 2 value\n\t\t\t\t\t\tif (updateValue > property2Value * divisor) {\n\t\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateValue > triggerValue) {\n\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Triggler.OPERATORS.gteq:\n\t\t\t\t\tif (isPercent) {\n\t\t\t\t\t\t// example: (50 / 100) = 0.5;\n\t\t\t\t\t\tconst divisor = triggerValue / 100;\n\t\t\t\t\t\t// if property 1 update value = 50% of property 2 value\n\t\t\t\t\t\tif (updateValue >= property2Value * divisor) {\n\t\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateValue >= triggerValue) {\n\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Triggler.OPERATORS.lt:\n\t\t\t\t\tif (isPercent) {\n\t\t\t\t\t\t// example: (50 / 100) = 0.5;\n\t\t\t\t\t\tconst divisor = triggerValue / 100;\n\t\t\t\t\t\t// if property 1 update value = 50% of property 2 value\n\t\t\t\t\t\tif (updateValue < property2Value * divisor) {\n\t\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateValue < triggerValue) {\n\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Triggler.OPERATORS.lteq:\n\t\t\t\t\tif (isPercent) {\n\t\t\t\t\t\t// example: (50 / 100) = 0.5;\n\t\t\t\t\t\tconst divisor = triggerValue / 100;\n\t\t\t\t\t\t// if property 1 update value = 50% of property 2 value\n\t\t\t\t\t\tif (updateValue <= property2Value * divisor) {\n\t\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateValue <= triggerValue) {\n\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Triggler.OPERATORS.ne:\n\t\t\t\t\tif (isPercent) {\n\t\t\t\t\t\t// example: (50 / 100) = 0.5;\n\t\t\t\t\t\tconst divisor = triggerValue / 100;\n\t\t\t\t\t\t// if property 1 update value = 50% of property 2 value\n\t\t\t\t\t\tif (updateValue !== property2Value * divisor) {\n\t\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateValue !== triggerValue) {\n\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { trigger, entity } of triggers) {\n\t\t\t\tawait Triggler._executeTrigger(trigger, entity);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Update Actor handler\n\t * @param {*} actor\n\t * @param {*} update\n\t * @param {*} options\n\t * @param {*} userId\n\t */\n\tstatic _onUpdateActor(actor, update, options, userId) {\n\t\tif (game.userId !== userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dataProp = \"system\";\n\t\tconst dataDataProp = \"system\";\n\n\t\tTriggler._processUpdate(actor, update, dataProp, dataDataProp);\n\t}\n\n\t/**\n\t * Update token handler\n\t * @param {Token} token\n\t * @param {*} update\n\t * @param {*} options\n\t * @param {*} userId\n\t */\n\tstatic _onUpdateToken(token, update, options, userId) {\n\t\tif (game.userId !== userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst actorDataProp = \"actorData.system\";\n\t\tconst actorProp = \"actor.system\";\n\n\t\tTriggler._processUpdate(token, update, actorDataProp, actorProp);\n\t}\n\n\t/**\n\t *\n\t * @param {*} app\n\t * @param {*} html\n\t * @param {*} data\n\t */\n\tstatic async _onRenderMacroConfig(app, html, data) {\n\t\tconst typeSelect = html.find(\"select[name='type']\");\n\t\tconst typeSelectDiv = typeSelect.closest(\"div\");\n\t\tconst flag = app.object.getFlag(\"condition-lab-triggler\", \"macroTrigger\");\n\t\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\n\t\tconst triggerSelectTemplate = \"modules/condition-lab-triggler/templates/trigger-select.html\";\n\t\tconst triggerData = {\n\t\t\tflag,\n\t\t\ttriggers\n\t\t};\n\t\tconst triggerSelect = await renderTemplate(triggerSelectTemplate, triggerData);\n\n\t\ttypeSelectDiv.after(triggerSelect);\n\t}\n}\n","import { Sidekick } from \"../sidekick.js\";\nimport { Triggler } from \"./triggler.js\";\n\nexport class TrigglerForm extends FormApplication {\n\tconstructor(object, options = { parent: null }) {\n\t\tsuper(object, options);\n\t\tthis.data = object || {};\n\t\tthis.parent = options.parent || null;\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn mergeObject(super.defaultOptions, {\n\t\t\tid: \"cub-triggler-form\",\n\t\t\ttitle: \"Triggler\",\n\t\t\ttemplate: \"modules/condition-lab-triggler/templates/triggler-form.html\",\n\t\t\tclasses: [\"sheet\", \"triggler-form\"],\n\t\t\twidth: 780,\n\t\t\theight: \"auto\",\n\t\t\tresizable: true,\n\t\t\tcloseOnSubmit: false\n\t\t});\n\t}\n\n\tgetData() {\n\t\tconst id = this.data.id;\n\t\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\n\t\tif (this.noMerge) {\n\t\t\tthis.noMerge = false;\n\t\t} else if (id && triggers) {\n\t\t\tconst trigger = triggers.find((t) => t.id === id);\n\t\t\tmergeObject(this.data, trigger);\n\t\t}\n\n\t\tconst {\n\t\t\ttriggerType = \"simple\",\n\t\t\tcategory = null,\n\t\t\tattribute = null,\n\t\t\tproperty1 = null,\n\t\t\toperator = null,\n\t\t\tvalue = null,\n\t\t\tproperty2 = null,\n\t\t\tadvancedName = null,\n\t\t\tadvancedActorProperty = null,\n\t\t\tadvancedActorProperty2 = null,\n\t\t\tadvancedTokenProperty = null,\n\t\t\tadvancedTokenProperty2 = null,\n\t\t\tadvancedOperator = null,\n\t\t\tadvancedValue = null,\n\t\t\tpcOnly = null,\n\t\t\tnpcOnly = null,\n\t\t\tnotZero = null\n\t\t} = this.data || {};\n\t\tconst isSimpleTrigger = triggerType === \"simple\";\n\t\tconst isAdvancedTrigger = triggerType === \"advanced\";\n\t\tlet actorModel = game.system.model?.Actor ?? {};\n\t\tconst isEmpty = Object.values(actorModel).every((obj) => Object.keys(obj).length === 0);\n\t\tlet mergedModel = null;\n\t\tif (isEmpty) {\n\t\t\tactorModel = CONFIG.Actor.dataModels ?? {};\n\t\t\tmergedModel = Object.keys(actorModel)\n\t\t\t\t.reduce((obj, key) =>\n\t\t\t\t\tfoundry.utils.mergeObject(obj, new CONFIG.Actor.documentClass({ name: \"CLT Actor\", type: key }).toObject().system), {});\n\t\t} else {\n\t\t\tmergedModel = Object.keys(actorModel)\n\t\t\t\t.reduce((accumulator, key) => foundry.utils.mergeObject(accumulator, actorModel[key]), {});\n\t\t}\n\t\tconst categories = mergedModel ? Object.keys(mergedModel).sort() : null;\n\t\tconst attributes = category ? Object.keys(mergedModel[category]) : null;\n\t\tconst properties = category && attribute ? Object.keys(mergedModel[category][attribute]) : null;\n\t\tconst operators = Triggler.OPERATORS;\n\n\t\tconst triggerSelected = !!(id && triggers);\n\n\t\tif (!categories) {\n\t\t\tui.notifications.warn(\"Simple Trigger not supported. Try Advanced Trigger\");\n\t\t\t// return false;\n\t\t}\n\n\t\treturn {\n\t\t\tid,\n\t\t\ttriggerSelected,\n\t\t\ttriggers,\n\t\t\tisSimpleTrigger,\n\t\t\tisAdvancedTrigger,\n\t\t\tcategory,\n\t\t\tcategories,\n\t\t\tattribute,\n\t\t\tattributes,\n\t\t\tproperty1,\n\t\t\tproperties,\n\t\t\toperator,\n\t\t\toperators,\n\t\t\tvalue,\n\t\t\tproperty2,\n\t\t\tadvancedName,\n\t\t\tadvancedActorProperty,\n\t\t\tadvancedActorProperty2,\n\t\t\tadvancedTokenProperty,\n\t\t\tadvancedTokenProperty2,\n\t\t\tadvancedOperator,\n\t\t\tadvancedValue,\n\t\t\tpcOnly,\n\t\t\tnpcOnly,\n\t\t\tnotZero\n\t\t};\n\t}\n\n\tasync _render(force, options) {\n\t\tawait super._render(force, options);\n\t\tthis._originalTop = this.element[0].style.top;\n\t\tif (this._reposition && !this._repositioned) {\n\t\t\tthis._repositioned = true;\n\n\t\t\tconst el = this.element[0];\n\t\t\tconst scaledHeight = el.offsetHeight;\n\t\t\tconst tarT = (window.innerHeight - scaledHeight) / 2;\n\t\t\tconst maxT = Math.max(window.innerHeight - scaledHeight, 0);\n\t\t\tthis.setPosition({ top: Math.clamped(tarT, 0, maxT) });\n\t\t}\n\t}\n\n\tactivateListeners(html) {\n\t\tsuper.activateListeners(html);\n\n\t\tconst triggerSelect = html.find(\"select[name='triggers']\");\n\t\tconst deleteTrigger = html.find(\"a.delete\");\n\n\t\t// Simple\n\t\tconst categorySelect = html.find(\"select[name='category']\");\n\t\tconst attributeSelect = html.find(\"select[name='attribute']\");\n\t\tconst property1Select = html.find(\"select[name='property1']\");\n\t\tconst operatorSelect = html.find(\"select[name='operator']\");\n\t\tconst valueInput = html.find(\"input[name='value']\");\n\t\tconst property2Select = html.find(\"select[name='property2']\");\n\n\t\t// Simple/Advanced Toggle\n\t\tconst triggerTypeRadio = html.find(\"input[name='triggerType']\");\n\n\t\t// Advanced\n\t\tconst advancedNameInput = html.find(\"input[name='advancedName']\");\n\t\tconst advancedActorPropertyInput = html.find(\"input[name='advancedActorProperty']\");\n\t\tconst advancedActorProperty2Input = html.find(\"input[name='advancedActorProperty2']\");\n\t\tconst advancedTokenPropertyInput = html.find(\"input[name='advancedTokenProperty']\");\n\t\tconst advancedTokenProperty2Input = html.find(\"input[name='advancedTokenProperty2']\");\n\t\tconst advancedOperatorSelect = html.find(\"select[name='advancedOperator']\");\n\t\tconst advancedValueInput = html.find(\"input[name='advancedValue']\");\n\n\t\t// Options\n\t\tconst pcOnlyCheckbox = html.find(\"input[name='pcOnly']\");\n\t\tconst npcsOnlyCheckbox = html.find(\"input[name='npcOnly']\");\n\t\tconst notZeroCheckbox = html.find(\"input[name='notZero']\");\n\t\tconst cancelButton = html.find(\"button[name='cancel']\");\n\n\t\tthis.noMerge = true;\n\n\t\ttriggerSelect.on(\"change\", (event) => {\n\t\t\tthis.data = {};\n\t\t\tthis.data.id = event.target.value;\n\t\t\tthis.noMerge = false;\n\t\t\tthis.render();\n\t\t});\n\t\tdeleteTrigger.on(\"click\", async (event) => {\n\t\t\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\t\t\tconst triggerIndex = triggers.findIndex((t) => t.id === this.data.id);\n\t\t\tif (triggerIndex === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst updatedTriggers = duplicate(triggers);\n\n\t\t\tupdatedTriggers.splice(triggerIndex, 1);\n\n\t\t\tawait game.settings.set(\"condition-lab-triggler\", \"storedTriggers\", updatedTriggers);\n\t\t\tthis.data = {};\n\t\t\tthis.render();\n\t\t});\n\n\t\t// Simple\n\t\tcategorySelect.on(\"change\", (event) => {\n\t\t\tthis.data.category = event.target.value;\n\t\t\tthis.data.attribute = null;\n\t\t\tthis.data.property1 = null;\n\t\t\tthis.data.property2 = null;\n\t\t\tthis.data.operator = null;\n\t\t\tthis.data.value = null;\n\n\t\t\tthis.render();\n\t\t});\n\t\tattributeSelect.on(\"change\", (event) => {\n\t\t\tthis.data.attribute = event.target.value;\n\t\t\tthis.data.property1 = null;\n\t\t\tthis.data.property2 = null;\n\t\t\tthis.data.operator = null;\n\t\t\tthis.data.value = null;\n\n\t\t\tthis.render();\n\t\t});\n\t\tproperty1Select.on(\"change\", (event) => {\n\t\t\tthis.data.property1 = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tproperty2Select.on(\"change\", (event) => {\n\t\t\tthis.data.property2 = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\toperatorSelect.on(\"change\", (event) => {\n\t\t\tthis.data.operator = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tvalueInput.on(\"change\", (event) => {\n\t\t\tthis.data.value = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\n\t\t// Simple/Advanced Toggle\n\t\ttriggerTypeRadio.on(\"change\", (event) => {\n\t\t\tthis.data.triggerType = event.currentTarget.value;\n\t\t\tif (event.currentTarget.value === \"advanced\"\n\t\t\t\t&& this._originalTop === this.element[0].style.top\n\t\t\t\t&& !this._reposition) {\n\t\t\t\tthis._reposition = true;\n\t\t\t}\n\t\t\tthis.render();\n\t\t});\n\n\t\t// Advanced\n\t\tadvancedNameInput.on(\"change\", (event) => {\n\t\t\tthis.data.advancedName = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tadvancedActorPropertyInput.on(\"change\", (event) => {\n\t\t\tthis.data.advancedActorProperty = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tadvancedActorProperty2Input.on(\"change\", (event) => {\n\t\t\tthis.data.advancedActorProperty2 = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tadvancedTokenPropertyInput.on(\"change\", (event) => {\n\t\t\tthis.data.advancedTokenProperty = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tadvancedTokenProperty2Input.on(\"change\", (event) => {\n\t\t\tthis.data.advancedTokenProperty2 = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tadvancedOperatorSelect.on(\"change\", (event) => {\n\t\t\tthis.data.advancedOperator = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tadvancedValueInput.on(\"change\", (event) => {\n\t\t\tthis.data.advancedValue = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\n\t\t// Options\n\t\tpcOnlyCheckbox.on(\"click\", (event) => {\n\t\t\tthis.data.pcOnly = event.target.checked;\n\t\t\tthis.render();\n\t\t});\n\t\tnpcsOnlyCheckbox.on(\"click\", (event) => {\n\t\t\tthis.data.npcOnly = event.target.checked;\n\t\t\tthis.render();\n\t\t});\n\t\tnotZeroCheckbox.on(\"click\", (event) => {\n\t\t\tthis.data.notZero = event.target.checked;\n\t\t\tthis.render();\n\t\t});\n\n\t\tcancelButton.on(\"click\", (event) => {\n\t\t\tthis.close();\n\t\t});\n\t}\n\n\tasync _updateObject(event, formData) {\n\t\tif (!formData.category && !formData.advancedActorProperty && !formData.advancedTokenProperty) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst triggerType = formData?.triggerType;\n\n\t\tif (triggerType === \"advanced\" && !formData.advancedName.length) {\n\t\t\tui.notifications.warn(game.i18n.localize(\"CLT.TRIGGLER.App.AdvancedTrigger.Name.Warning\"));\n\t\t\treturn false;\n\t\t}\n\n\t\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\t\tconst existingIds = triggers ? triggers.map((t) => t.id) : null;\n\t\tconst text = triggerType === \"simple\" ? Triggler._constructString(formData) : formData.advancedName;\n\n\t\tif (!text) return false;\n\n\t\tconst id = this.data.id;\n\t\tconst newData = duplicate(formData);\n\t\tdelete newData.triggers;\n\n\t\tconst updatedTriggers = duplicate(triggers);\n\t\tconst existingTrigger = triggers.find((t) => t.id === id);\n\t\tconst isNew = existingTrigger ? triggerType === \"simple\" || existingTrigger.advancedName !== text : true;\n\n\t\tif (!isNew) {\n\t\t\tconst updatedTrigger = mergeObject(existingTrigger, newData);\n\t\t\tupdatedTrigger.text = text;\n\t\t\tupdatedTriggers[triggers.indexOf(existingTrigger)] = updatedTrigger;\n\t\t\tthis.data = updatedTrigger;\n\t\t} else {\n\t\t\tconst newTrigger = {\n\t\t\t\tid: Sidekick.createId(existingIds),\n\t\t\t\t...newData,\n\t\t\t\ttext\n\t\t\t};\n\t\t\tupdatedTriggers.push(newTrigger);\n\t\t\tthis.data = newTrigger;\n\t\t}\n\n\t\tconst setting = await game.settings.set(\"condition-lab-triggler\", \"storedTriggers\", updatedTriggers);\n\t\tif (!setting) ui.notifications.info(game.i18n.localize(\"CLT.TRIGGLER.App.SaveSuccessful\"));\n\n\t\tthis.render();\n\t}\n\n\t/**\n\t * Exports the current map to JSON\n\t */\n\t_exportToJSON() {\n\t\tconst triggers = duplicate(game.settings.get(\"condition-lab-triggler\", \"storedTriggers\"));\n\t\tconst data = {\n\t\t\tsystem: game.system.id,\n\t\t\ttriggers\n\t\t};\n\n\t\t// Trigger file save procedure\n\t\tconst filename = `cub-${game.world.id}-triggers.json`;\n\t\tsaveDataToFile(JSON.stringify(data, null, 2), \"text/json\", filename);\n\t}\n\n\t/**\n\t * Initiates an import via a dialog\n\t * Borrowed from foundry.js Entity class\n\t */\n\tasync _importFromJSONDialog() {\n\t\tnew Dialog({\n\t\t\ttitle: game.i18n.localize(\"CLT.TRIGGLER.ImportTitle\"),\n\t\t\t// TODO change\n\t\t\tcontent: await renderTemplate(\"modules/condition-lab-triggler/templates/import-conditions.html\", {}),\n\t\t\tbuttons: {\n\t\t\t\timport: {\n\t\t\t\t\ticon: '<i class=\"fas fa-file-import\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"CLT.WORDS.Import\"),\n\t\t\t\t\tcallback: (html) => {\n\t\t\t\t\t\tthis._processImport(html);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"Cancel\")\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: \"import\"\n\t\t}).render(true);\n\t}\n\n\t/**\n\t * Process a Condition Map Import\n\t * @param {*} html\n\t */\n\tasync _processImport(html) {\n\t\tconst form = html.find(\"form\")[0];\n\n\t\tif (!form.data.files.length) {\n\t\t\treturn ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.Import.NoFile\"));\n\t\t}\n\n\t\tconst jsonFile = await readTextFromFile(form.data.files[0]);\n\t\tconst json = JSON.parse(jsonFile);\n\t\tconst triggers = Triggler.triggersFromJson(json);\n\n\t\tif (!triggers || !triggers?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst originalTriggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\t\tawait game.settings.set(\"condition-lab-triggler\", \"storedTriggers\", originalTriggers.concat(triggers));\n\t\tthis.render();\n\t}\n\n\t/**\n\t * Override the header buttons method\n\t */\n\t_getHeaderButtons() {\n\t\tlet buttons = super._getHeaderButtons();\n\n\t\tbuttons.unshift(\n\t\t\t{\n\t\t\t\tlabel: game.i18n.localize(\"CLT.WORDS.Import\"),\n\t\t\t\tclass: \"import\",\n\t\t\t\ticon: \"fas fa-file-import\",\n\t\t\t\tonclick: async (ev) => {\n\t\t\t\t\tawait this._importFromJSONDialog();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: game.i18n.localize(\"CLT.WORDS.Export\"),\n\t\t\t\tclass: \"export\",\n\t\t\t\ticon: \"fas fa-file-export\",\n\t\t\t\tonclick: async (ev) => {\n\t\t\t\t\tthis._exportToJSON();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\treturn buttons;\n\t}\n}\n","/**\n * Enhanced Condition Macro Config Application\n */\nexport default class EnhancedConditionMacroConfig extends FormApplication {\n\tconstructor(object, options) {\n\t\tsuper(object, options);\n\n\t\tthis.object = this.object ?? {};\n\t\tthis.object.macros = this.object.macros ?? [];\n\n\t\tthis.initialObject = foundry.utils.duplicate(this.object);\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn foundry.utils.mergeObject(super.defaultOptions, {\n\t\t\tid: \"cub-enhanced-condition-macro-config\",\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.MacroConfig.Title\"),\n\t\t\ttemplate: \"modules/condition-lab-triggler/templates/enhanced-condition-macro-config.hbs\",\n\t\t\tclasses: [\"sheet\"],\n\t\t\tcloseOnSubmit: false\n\t\t});\n\t}\n\n\tgetData() {\n\t\tconst conditionMacros = this.object.macros;\n\t\tconst applyMacroId = conditionMacros.find((m) => m.type === \"apply\")?.id;\n\t\tconst removeMacroId = conditionMacros.find((m) => m.type === \"remove\")?.id;\n\n\t\tconst macroChoices = game.macros?.contents\n\t\t\t?.map((m) => {\n\t\t\t\treturn { id: m.id, name: m.name };\n\t\t\t})\n\t\t\t.sort((a, b) => a.name.localeCompare(b.name));\n\n\t\treturn {\n\t\t\tcondition: this.object,\n\t\t\tapplyMacroId,\n\t\t\tremoveMacroId,\n\t\t\tmacroChoices\n\t\t};\n\t}\n\n\tasync _updateObject(event, formData) {\n\t\tthis.object.macros = [];\n\n\t\tfor (const field in formData) {\n\t\t\tconst type = field.split(\"-\").slice(-1)\n\t\t\t\t.pop() ?? \"\";\n\t\t\tconst tempMacro = { id: formData[field], type: type };\n\t\t\tthis.object.macros.push(tempMacro);\n\t\t}\n\n\t\tconst map = game.clt.conditions;\n\t\tconst newMap = foundry.utils.duplicate(map);\n\n\t\tlet conditionIndex = newMap.findIndex((c) => c.id === this.object.id);\n\t\tnewMap[conditionIndex] = this.object;\n\t\tawait game.settings.set(\"condition-lab-triggler\", \"activeConditionMap\", newMap);\n\t\tthis.close();\n\t}\n}\n","import { Sidekick } from \"../sidekick.js\";\n\n/**\n * Enhanced Condition Trigger Config Application\n */\nexport default class EnhancedConditionOptionConfig extends FormApplication {\n\tconstructor(object, options) {\n\t\tsuper(object, options);\n\n\t\tthis.initialObject = foundry.utils.duplicate(this.object);\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn foundry.utils.mergeObject(super.defaultOptions, {\n\t\t\tid: \"cub-enhanced-condition-option-config\",\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.OptionConfig.Title\"),\n\t\t\ttemplate: \"modules/condition-lab-triggler/templates/enhanced-condition-option-config.hbs\",\n\t\t\tclasses: [\"sheet\"],\n\t\t\tcloseOnSubmit: false,\n\t\t\twidth: 500\n\t\t});\n\t}\n\n\tgetData() {\n\t\treturn {\n\t\t\tcondition: this.object,\n\t\t\toptionData: this.object.options\n\t\t};\n\t}\n\n\tactivateListeners(html) {\n\t\tconst checkboxes = html.find(\"input[type='checkbox']\");\n\n\t\tfor (const checkbox of checkboxes) {\n\t\t\tcheckbox.addEventListener(\"change\", (event) => this._onCheckboxChange(event));\n\t\t}\n\t}\n\n\t/**\n\t * Checkbox change event handler\n\t * @param {*} event\n\t * @returns {}\n\t */\n\t_onCheckboxChange(event) {\n\t\tif (!event.target?.checked) return;\n\t\tconst targetName = event.target?.name;\n\t\tconst propertyName = Sidekick.toCamelCase(targetName, \"-\");\n\t\tconst specialStatusEffectsProps = Object.values({\n\t\t\tblinded: { optionProperty: \"blindToken\" },\n\t\t\tinvisible: { optionProperty: \"markInvisible\" }\n\t\t}).map((k) => k.optionProperty);\n\n\t\tif (!propertyName || !specialStatusEffectsProps) return;\n\n\t\tif (specialStatusEffectsProps.includes(propertyName)) {\n\t\t\tevent.detail = event.detail && event.detail instanceof Object ? event.detail : {};\n\t\t\tevent.detail.statusName = targetName;\n\t\t\tevent.detail.statusLabel = event.target.nextElementSibling?.innerText;\n\t\t\tevent.detail.conditionId = this.object.id;\n\t\t\treturn EnhancedConditionOptionConfig._onSpecialStatusEffectToggle(event);\n\t\t}\n\t}\n\n\t/**\n\t * Special Status Effect toggle handler\n\t * @param {*} event\n\t */\n\tstatic async _onSpecialStatusEffectToggle(event) {\n\t\t// is another condition already using this special status effect?\n\t\tconst existingCondition = game.clt.conditions.find((c) => {\n\t\t\tconst optionValue = foundry.utils.getProperty(\n\t\t\t\tc,\n\t\t\t\t`options.${Sidekick.toCamelCase(event.detail.statusName, \"-\")}`\n\t\t\t);\n\t\t\treturn c.id !== event.detail.conditionId && optionValue;\n\t\t});\n\t\tif (existingCondition) {\n\t\t\tevent.preventDefault();\n\t\t\t// raise a dialog asking for override\n\t\t\tconst title = game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.OptionConfig.SpecialStatusEffectOverride.Title\");\n\t\t\tconst content = game.i18n.format(\n\t\t\t\t\"CLT.ENHANCED_CONDITIONS.OptionConfig.SpecialStatusEffectOverride.Content\",\n\t\t\t\t{\n\t\t\t\t\texistingCondition: existingCondition.name,\n\t\t\t\t\tstatusEffect: event.detail.statusLabel ?? event.detail.statusName\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst yes = () => {};\n\t\t\tconst no = () => {\n\t\t\t\treturn (event.target.checked = false);\n\t\t\t};\n\t\t\tconst defaultYes = false;\n\t\t\treturn Dialog.confirm({ title, content, yes, no, defaultYes }, {});\n\t\t}\n\n\t\treturn event;\n\t}\n\n\tasync _updateObject(event, formData) {\n\t\tthis.object.options = {};\n\t\tconst specialStatusEffectMapping = game.settings.get(\"condition-lab-triggler\",\n\t\t\t\"specialStatusEffectMapping\"\n\t\t);\n\t\tconst map = game.clt.conditionLab.map;\n\t\tconst newMap = foundry.utils.deepClone(map);\n\t\tlet conditionIndex = newMap.findIndex((c) => c.id === this.object.id);\n\n\t\tfor (const field in formData) {\n\t\t\tconst value = formData[field];\n\t\t\tconst propertyName = Sidekick.toCamelCase(field, \"-\");\n\t\t\tconst specialStatusEffect = this.getSpecialStatusEffectByField(field);\n\n\t\t\tif (specialStatusEffect) {\n\t\t\t\tconst existingMapping = foundry.utils.getProperty(specialStatusEffectMapping, specialStatusEffect);\n\t\t\t\tif (existingMapping === this.object.id && value === false) {\n\t\t\t\t\tthis.setSpecialStatusEffectMapping(specialStatusEffect);\n\t\t\t\t} else if (existingMapping !== this.object.id && value === true) {\n\t\t\t\t\tthis.setSpecialStatusEffectMapping(specialStatusEffect, this.object.id);\n\t\t\t\t\tif (existingMapping) {\n\t\t\t\t\t\tconst existingId = existingMapping.replace(\"condition-lab-triggler.\", \"\");\n\t\t\t\t\t\tconst existingConditionIndex = newMap.findIndex((c) => c.id === existingId);\n\t\t\t\t\t\tif (existingConditionIndex !== -1) {\n\t\t\t\t\t\t\tconst existingCondition = newMap[existingConditionIndex];\n\t\t\t\t\t\t\tconst options = existingCondition?.options;\n\t\t\t\t\t\t\toptions[propertyName] = false;\n\t\t\t\t\t\t\tnewMap[existingConditionIndex] = existingCondition;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.object.options[propertyName] = value;\n\t\t}\n\n\t\tnewMap[conditionIndex] = this.object;\n\t\tawait game.clt.conditionLab._saveMapping(newMap);\n\t\tawait this.close();\n\t}\n\n\t/**\n\t * Get the enum for a special status effect based on the field name\n\t * @param {*} field\n\t * @returns {string} enum for the special status effect\n\t */\n\tgetSpecialStatusEffectByField(field) {\n\t\tswitch (field) {\n\t\t\tcase \"blind-token\":\n\t\t\t\treturn \"BLIND\";\n\n\t\t\tcase \"mark-invisible\":\n\t\t\t\treturn \"INVISIBLE\";\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the special status effect to the provided condition Id\n\t * @param {*} effect\n\t * @param {*} conditionId\n\t */\n\tsetSpecialStatusEffectMapping(effect, conditionId = null) {\n\t\tif (!Object.prototype.hasOwnProperty.call(CONFIG.specialStatusEffects, effect)) return;\n\n\t\tCONFIG.specialStatusEffects[effect] = conditionId ?? CONFIG.defaultSpecialStatusEffects[effect];\n\t\tgame.settings.set(\"condition-lab-triggler\",\n\t\t\t\"specialStatusEffectMapping\",\n\t\t\tCONFIG.specialStatusEffects\n\t\t);\n\t}\n}\n","/**\n * Enhanced Condition Trigger Config Application\n */\nexport default class EnhancedConditionTriggerConfig extends FormApplication {\n\tconstructor(object, options) {\n\t\tsuper(object, options);\n\n\t\tthis.object = this.object ?? {};\n\n\t\tthis.initialObject = foundry.utils.duplicate(this.object);\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn foundry.utils.mergeObject(super.defaultOptions, {\n\t\t\tid: \"cub-enhanced-condition-trigger-config\",\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.TriggerConfig.Title\"),\n\t\t\ttemplate: \"modules/condition-lab-triggler/templates/enhanced-condition-trigger-config.hbs\",\n\t\t\tclasses: [\"sheet\"],\n\t\t\tcloseOnSubmit: false,\n\t\t\twidth: 500\n\t\t});\n\t}\n\n\tgetData() {\n\t\treturn {\n\t\t\tcondition: this.object,\n\t\t\tapplyTriggerId: this.object.applyTrigger,\n\t\t\tremoveTriggerId: this.object.removeTrigger,\n\t\t\ttriggerChoices: game.settings.get(\"condition-lab-triggler\", \"storedTriggers\") ?? []\n\t\t};\n\t}\n\n\t/**\n\t * Update Object on Form Submission\n\t * @param {*} event\n\t * @param {*} formData\n\t */\n\tasync _updateObject(event, formData) {\n\t\tthis.object.macros = [];\n\n\t\tfor (const field in formData) {\n\t\t\tconst type = field.split(\"-\").slice(-1)\n\t\t\t\t.pop() ?? \"\";\n\t\t\tthis.object[`${type}Trigger`] = formData[field];\n\t\t}\n\n\t\tconst map = game.clt.conditions;\n\t\tconst newMap = foundry.utils.duplicate(map);\n\n\t\tlet conditionIndex = newMap.findIndex((c) => c.id === this.object.id);\n\t\tnewMap[conditionIndex] = this.object;\n\t\tgame.settings.set(\"condition-lab-triggler\", \"activeConditionMap\", newMap);\n\t\tthis.close();\n\t}\n}\n","export default class EnhancedEffectConfig extends ActiveEffectConfig {\n\tget title() {\n\t\tconst reference = this.document.name ? ` ${game.i18n.localize(this.document.name)}` : \"\";\n\t\treturn `${game.i18n.localize(this.document.constructor.metadata.label)}${reference}`;\n\t}\n\n\t/** @override */\n\tasync getData(options = {}) {\n\t\tconst context = await DocumentSheet.prototype.getData.call(this, options);\n\t\tcontext.descriptionHTML = await TextEditor.enrichHTML(this.object.description, {\n\t\t\tasync: true,\n\t\t\tsecrets: this.object.isOwner\n\t\t});\n\t\tconst legacyTransfer = CONFIG.ActiveEffect.legacyTransferral;\n\t\tconst labels = {\n\t\t\ttransfer: {\n\t\t\t\tname: game.i18n.localize(`EFFECT.Transfer${legacyTransfer ? \"Legacy\" : \"\"}`),\n\t\t\t\thint: game.i18n.localize(`EFFECT.TransferHint${legacyTransfer ? \"Legacy\" : \"\"}`)\n\t\t\t}\n\t\t};\n\t\tconst data = {\n\t\t\tlabels,\n\t\t\teffect: this.object, // Backwards compatibility\n\t\t\tdata: this.object,\n\t\t\tisActorEffect: true,\n\t\t\tisItemEffect: false,\n\t\t\tsubmitText: \"EFFECT.Submit\",\n\t\t\tmodes: Object.entries(CONST.ACTIVE_EFFECT_MODES).reduce((obj, e) => {\n\t\t\t\tobj[e[1]] = game.i18n.localize(`EFFECT.MODE_${e[0]}`);\n\t\t\t\treturn obj;\n\t\t\t}, {})\n\t\t};\n\t\treturn foundry.utils.mergeObject(context, data);\n\t}\n\n\t/**\n\t * Override default update object behaviour\n\t * @param {*} formData\n\t * @override\n\t */\n\tasync _updateObject(event, formData) {\n\t\tconst conditionIdFlag = getProperty(\n\t\t\tthis.object.flags,\n\t\t\t`condition-lab-triggler.${\"conditionId\"}`\n\t\t);\n\t\tif (!conditionIdFlag) return;\n\n\t\t// find the matching condition row\n\t\tconst map = ui.clt?.conditionLab?.map;\n\n\t\tif (!map && !map.length) return;\n\n\t\tconst conditionId = conditionIdFlag.replace(\"condition-lab-triggler.\", \"\");\n\t\tconst condition = map.find((c) => c.id === conditionId);\n\n\t\tif (!condition) return;\n\n\t\t// update the effect data\n\n\t\tcondition.activeEffect = condition.activeEffect ? mergeObject(condition.activeEffect, formData) : formData;\n\n\t\tthis.object.updateSource(formData);\n\t\tif (this._state === 2) await this.render();\n\t\tif (ui.clt.conditionLab) {\n\t\t\tui.clt.conditionLab.map = ui.clt.conditionLab.updatedMap;\n\t\t\t// ui.clt.conditionLab.unsaved = true;\n\t\t\tui.clt.conditionLab.render();\n\t\t}\n\t}\n}\n","import { Sidekick } from \"../sidekick.js\";\nimport { TrigglerForm } from \"../triggler/triggler-form.js\";\nimport EnhancedConditionMacroConfig from \"./enhanced-condition-macro.js\";\nimport EnhancedConditionOptionConfig from \"./enhanced-condition-option.js\";\nimport EnhancedConditionTriggerConfig from \"./enhanced-condition-trigger.js\";\nimport { EnhancedConditions } from \"./enhanced-conditions.js\";\nimport EnhancedEffectConfig from \"./enhanced-effect-config.js\";\n\n/**\n * Form application for managing mapping of Conditions to Icons and JournalEntries\n */\nexport class ConditionLab extends FormApplication {\n\tconstructor(object, options = {}) {\n\t\tsuper(object, options);\n\t\tgame.clt.conditionLab = this;\n\t\tthis.data = (game.clt.conditionLab ? game.clt.conditionLab.data : object) ?? null;\n\t\tthis.system = game.system.id;\n\t\tthis.initialMapType = game.settings.get(\"condition-lab-triggler\", \"conditionMapType\");\n\t\tthis.mapType = null;\n\t\tthis.initialMap = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\t\tthis.map = null;\n\t\tthis.displayedMap = null;\n\t\tthis.maps = game.settings.get(\"condition-lab-triggler\", \"defaultConditionMaps\");\n\t\tthis.filterValue = \"\";\n\t\tthis.sortDirection = \"\";\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn mergeObject(super.defaultOptions, {\n\t\t\tid: \"cub-condition-lab\",\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.Title\"),\n\t\t\ttemplate: \"modules/condition-lab-triggler/templates/condition-lab.hbs\",\n\t\t\tclasses: [\"sheet\", \"condition-lab-form\"],\n\t\t\twidth: 780,\n\t\t\theight: 680,\n\t\t\tresizable: true,\n\t\t\tcloseOnSubmit: false,\n\t\t\tscrollY: [\"ol.condition-lab\"],\n\t\t\tdragDrop: [{ dropSelector: \"input[name^='reference-item']\" }]\n\t\t});\n\t}\n\n\t/**\n\t * Get updated map by combining existing in-memory map with current formdata\n\t */\n\tget updatedMap() {\n\t\tconst submitData = this._buildSubmitData();\n\t\tconst mergedMap = this._processFormData(submitData);\n\t\tconst updatedMap = EnhancedConditions._prepareMap(mergedMap);\n\t\treturn updatedMap;\n\t}\n\n\t/**\n\t * Gets data for the template render\n\t */\n\tasync getData() {\n\t\tconst sortDirection = this.sortDirection;\n\t\tconst sortTitle = game.i18n.localize(\n\t\t\t`CLT.ENHANCED_CONDITIONS.ConditionLab.SortAnchorTitle.${sortDirection ? sortDirection : \"unsorted\"}`\n\t\t);\n\t\tconst filterTitle = game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ConditionLab.FilterInputTitle\");\n\t\tconst filterValue = this.filterValue;\n\n\t\tconst defaultMaps = game.settings.get(\"condition-lab-triggler\", \"defaultConditionMaps\");\n\t\tconst mappedSystems = Object.keys(defaultMaps) || [];\n\t\tconst mapTypeChoices = game.settings.settings.get(\"condition-lab-triggler.conditionMapType\").choices;\n\n\t\t// If there's no default map for this system don't provide the \"default\" choice\n\t\tif (!mappedSystems.includes(game.system.id)) {\n\t\t\tif (this.initialMap) {\n\t\t\t\tmapTypeChoices.default = game.i18n.localize(\"CLT.SETTINGS.EnhancedConditions.MapType.Choices.inferred\");\n\t\t\t} else {\n\t\t\t\tdelete mapTypeChoices.default;\n\t\t\t}\n\t\t}\n\n\t\tconst mapType = (this.mapType = this.mapType || this.initialMapType || \"other\");\n\t\tlet conditionMap = this.map ? this.map : (this.map = duplicate(this.initialMap));\n\t\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\").map((t) => {\n\t\t\treturn [t.id, t.text];\n\t\t});\n\n\t\tconst isDefault = this.mapType === \"default\";\n\t\tconst outputChatSetting = game.settings.get(\"condition-lab-triggler\", \"conditionsOutputToChat\");\n\t\tconst disableChatOutput = isDefault || !outputChatSetting;\n\n\t\tfor (let i = 0; i < conditionMap.length; i++) {\n\t\t\tconst entry = conditionMap[i];\n\t\t\t// Check if the row exists in the saved map\n\t\t\tconst existingEntry = this.initialMap.find((e) => e.id === entry.id) ?? null;\n\t\t\tentry.label = game.i18n.localize(entry.name);\n\t\t\tentry.isNew = !existingEntry;\n\t\t\tentry.isChanged = this._hasEntryChanged(entry, existingEntry, i);\n\n\t\t\t// Set the Output to Chat checkbox\n\t\t\tentry.options = entry.options ?? {};\n\t\t\tentry.enrichedReference = entry.referenceId\n\t\t\t\t? await TextEditor.enrichHTML(entry.referenceId, { async: true, documents: true })\n\t\t\t\t: \"\";\n\n\t\t\t// Default all entries to show\n\t\t\tentry.hidden = entry.hidden ?? false;\n\t\t}\n\n\t\t// Pre-apply any filter value\n\t\tthis.displayedMap = filterValue\n\t\t\t? this._filterMapByName(conditionMap, filterValue)\n\t\t\t: foundry.utils.duplicate(conditionMap);\n\n\t\t// Sort the displayed map based on the sort direction\n\t\tif (sortDirection) {\n\t\t\tthis.displayedMap = this._sortMapByName(this.displayedMap, sortDirection);\n\t\t}\n\n\t\tconst displayedMap = this.displayedMap;\n\t\tconst conditionMapLength = displayedMap.length - 1;\n\n\t\tlet unsavedMap = false;\n\t\tif (\n\t\t\tmapType !== this.initialMapType\n\t\t\t|| conditionMap?.length !== this.initialMap?.length\n\t\t\t|| conditionMap.some((c) => c.isNew || c.isChanged)\n\t\t) {\n\t\t\tunsavedMap = true;\n\t\t}\n\n\t\t// Prepare final data object for template\n\t\tconst data = {\n\t\t\tsortTitle,\n\t\t\tsortDirection,\n\t\t\tfilterTitle,\n\t\t\tfilterValue,\n\t\t\tmapTypeChoices,\n\t\t\tmapType,\n\t\t\tconditionMap,\n\t\t\tdisplayedMap,\n\t\t\tconditionMapLength,\n\t\t\ttriggers,\n\t\t\tisDefault,\n\t\t\tdisableChatOutput,\n\t\t\tunsavedMap\n\t\t};\n\n\t\tthis.data = data;\n\t\treturn data;\n\t}\n\n\t/**\n\t * Enriches submit data with existing map to ensure continuity\n\t */\n\t_buildSubmitData() {\n\t\tconst map = this.sortDirection ? this._sortMapByName(this.map) : this.map;\n\t\tconst data =\n\t\t\tmap?.reduce((acc, entry, index) => {\n\t\t\t\tacc[`id-${index}`] = entry.id;\n\t\t\t\treturn acc;\n\t\t\t}, {}) ?? {};\n\t\treturn this._getSubmitData(data);\n\t}\n\n\t/**\n\t * Processes the Form Data and builds a usable Condition Map\n\t * @param {*} formData\n\t */\n\t_processFormData(formData) {\n\t\tlet ids = [];\n\t\tlet conditions = [];\n\t\tlet icons = [];\n\t\tlet references = [];\n\t\tlet newMap = [];\n\t\tconst rows = [];\n\t\tconst existingMap = this.map ?? game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\t\t// need to tighten these up to check for the existence of digits after the word\n\t\tconst conditionRegex = /condition/i;\n\t\tconst idRegex = new RegExp(/^id/, \"i\");\n\t\tconst iconRegex = /icon/i;\n\t\tconst referenceRegex = /reference/i;\n\t\tconst rowRegex = new RegExp(/\\d+$/);\n\n\t\t// write it back to the relevant condition map\n\t\t// @todo: maybe switch to a switch\n\t\tfor (let e in formData) {\n\t\t\tconst rowMatch = e.match(rowRegex);\n\t\t\tconst row = rowMatch ? rowMatch[0] : null;\n\n\t\t\tif (!row) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\trows.push(row);\n\n\t\t\tif (e.match(idRegex)) {\n\t\t\t\tids[row] = formData[e];\n\t\t\t} else if (e.match(conditionRegex)) {\n\t\t\t\tconditions[row] = formData[e];\n\t\t\t} else if (e.match(iconRegex)) {\n\t\t\t\ticons[row] = formData[e];\n\t\t\t} else if (e.match(referenceRegex)) {\n\t\t\t\treferences[row] = formData[e];\n\t\t\t}\n\t\t}\n\n\t\tconst uniqueRows = [...new Set(rows)];\n\n\t\tfor (let i = 0; i < uniqueRows.length; i++) {\n\t\t\tconst id = ids[i] ?? null;\n\t\t\tconst name = conditions[i];\n\t\t\tconst existingCondition = existingMap && id ? existingMap.find((c) => c.id === id) : null;\n\t\t\tconst {\n\t\t\t\tactiveEffect = null,\n\t\t\t\tapplyTrigger = null,\n\t\t\t\tremoveTrigger = null,\n\t\t\t\tmacros = null,\n\t\t\t\toptions = {}\n\t\t\t} = existingCondition || {};\n\n\t\t\tconst condition = {\n\t\t\t\tid,\n\t\t\t\tname,\n\t\t\t\ticon: icons[i],\n\t\t\t\treferenceId: references[i],\n\t\t\t\tapplyTrigger,\n\t\t\t\tremoveTrigger,\n\t\t\t\tactiveEffect,\n\t\t\t\tmacros,\n\t\t\t\toptions\n\t\t\t};\n\n\t\t\tnewMap.push(condition);\n\t\t}\n\n\t\treturn newMap;\n\t}\n\n\t/**\n\t * Restore defaults for a mapping\n\t * @param root0\n\t * @param root0.clearCache\n\t */\n\tasync _restoreDefaults({ clearCache = false } = {}) {\n\t\tconst system = this.system;\n\t\tlet defaultMaps = game.settings.get(\"condition-lab-triggler\", \"defaultConditionMaps\");\n\n\t\tif (clearCache) {\n\t\t\tdefaultMaps = await EnhancedConditions._loadDefaultMaps();\n\t\t\tgame.settings.set(\"condition-lab-triggler\", \"defaultConditionMaps\", defaultMaps);\n\t\t}\n\t\tconst tempMap = this.mapType !== \"other\" && defaultMaps && defaultMaps[system] ? defaultMaps[system] : [];\n\n\t\t// If the mapType is other then the map should be empty, otherwise it's the default map for the system\n\t\tthis.map = tempMap;\n\t\tthis.render(true);\n\t}\n\n\t/**\n\t * Take the new map and write it back to settings, overwriting existing\n\t * @param {object} event\n\t * @param {object} formData\n\t */\n\tasync _updateObject(event, formData) {\n\t\tconst showDialogSetting = game.settings.get(\"condition-lab-triggler\", \"showSortDirectionDialog\");\n\n\t\tif (this.sortDirection && showDialogSetting) {\n\t\t\tawait Dialog.confirm({\n\t\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ConditionLab.SortDirectionSave.Title\"),\n\t\t\t\tcontent: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ConditionLab.SortDirectionSave.Content\"),\n\t\t\t\tyes: ($html) => {\n\t\t\t\t\tconst checkbox = $html[0].querySelector(\"input[name='dont-show-again']\");\n\t\t\t\t\tif (checkbox.checked) {\n\t\t\t\t\t\tgame.settings.set(\"condition-lab-triggler\", \"showSortDirectionDialog\", false);\n\t\t\t\t\t}\n\t\t\t\t\tthis._processFormUpdate(formData);\n\t\t\t\t},\n\t\t\t\tno: () => {}\n\t\t\t});\n\t\t} else {\n\t\t\tthis._processFormUpdate(formData);\n\t\t}\n\t}\n\n\t/**\n\t * Process Condition Lab formdata and then save changes\n\t * @param {*} formData\n\t */\n\tasync _processFormUpdate(formData) {\n\t\tconst mapType = formData[\"map-type\"];\n\t\tlet newMap = this.updatedMap;\n\n\t\tif (mapType === \"default\") {\n\t\t\tconst defaultMap = EnhancedConditions.getDefaultMap(this.system);\n\t\t\tnewMap = mergeObject(newMap, defaultMap);\n\t\t}\n\n\t\tthis._saveMapping(newMap, mapType);\n\t}\n\n\t/**\n\t * Saves a given map and option map type to storage\n\t * @param {*} newMap\n\t * @param {*} mapType\n\t */\n\tasync _saveMapping(newMap, mapType = this.mapType) {\n\t\tthis.mapType = this.initialMapType = mapType;\n\t\tconst preparedMap = EnhancedConditions._prepareMap(newMap);\n\n\t\tawait game.settings.set(\"condition-lab-triggler\", \"conditionMapType\", mapType);\n\t\tawait game.settings.set(\"condition-lab-triggler\", \"activeConditionMap\", preparedMap);\n\n\t\tthis._finaliseSave(preparedMap);\n\t}\n\n\t/**\n\t * Performs final steps after saving mapping\n\t * @param {*} preparedMap\n\t */\n\tasync _finaliseSave(preparedMap) {\n\t\tthis.map = this.initialMap = preparedMap;\n\t\tthis.unsaved = false;\n\t\tthis.sortDirection = \"\";\n\n\t\tui.notifications.info(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.SaveSuccess\"));\n\t\tthis.render(true);\n\t}\n\n\t/**\n\t * Exports the current map to JSON\n\t */\n\t_exportToJSON() {\n\t\tconst map = duplicate(this.map);\n\t\tconst data = {\n\t\t\tsystem: game.system.id,\n\t\t\tmap\n\t\t};\n\n\t\t// Trigger file save procedure\n\t\tconst filename = `cub-${game.system.id}-condition-map.json`;\n\t\tsaveDataToFile(JSON.stringify(data, null, 2), \"text/json\", filename);\n\t}\n\n\t/**\n\t * Initiates an import via a dialog\n\t * Borrowed from foundry.js Entity class\n\t */\n\tasync _importFromJSONDialog() {\n\t\tnew Dialog({\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.ImportTitle\"),\n\t\t\tcontent: await renderTemplate(\"modules/condition-lab-triggler/templates/import-conditions.html\", {}),\n\t\t\tbuttons: {\n\t\t\t\timport: {\n\t\t\t\t\ticon: '<i class=\"fas fa-file-import\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"CLT.WORDS.Import\"),\n\t\t\t\t\tcallback: (html) => {\n\t\t\t\t\t\tthis._processImport(html);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"Cancel\")\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: \"import\"\n\t\t}).render(true);\n\t}\n\n\t/**\n\t * Process a Condition Map Import\n\t * @param {*} html\n\t */\n\tasync _processImport(html) {\n\t\tconst form = html.find(\"form\")[0];\n\n\t\tif (!form.data.files.length) {\n\t\t\treturn ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.Import.NoFile\"));\n\t\t}\n\n\t\tconst jsonFile = await readTextFromFile(form.data.files[0]);\n\t\tconst json = JSON.parse(jsonFile);\n\t\tconst map = EnhancedConditions.mapFromJson(json);\n\n\t\tif (!map || !map?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mapType = \"other\";\n\t\tthis.map = map;\n\t\tthis.render();\n\t}\n\n\t/**\n\t * Override the header buttons method\n\t */\n\t_getHeaderButtons() {\n\t\tlet buttons = super._getHeaderButtons();\n\n\t\tbuttons.unshift(\n\t\t\t{\n\t\t\t\tlabel: game.i18n.localize(\"CLT.WORDS.Import\"),\n\t\t\t\tclass: \"import\",\n\t\t\t\ticon: \"fas fa-file-import\",\n\t\t\t\tonclick: async (ev) => {\n\t\t\t\t\tthis._importFromJSONDialog();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: game.i18n.localize(\"CLT.WORDS.Export\"),\n\t\t\t\tclass: \"export\",\n\t\t\t\ticon: \"fas fa-file-export\",\n\t\t\t\tonclick: async (ev) => {\n\t\t\t\t\tthis._exportToJSON();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\treturn buttons;\n\t}\n\n\t/* -------------------------------------------- */\n\t/*                 Hook Handlers                */\n\t/* -------------------------------------------- */\n\n\t/**\n\t * Condition Lab Render handler\n\t * @param {*} app\n\t * @param {*} html\n\t * @param {*} data\n\t */\n\tstatic _onRender(app, html, data) {\n\t\tui.clt.conditionLab = app;\n\t}\n\n\t/**\n\t * Render save dialog hook handler\n\t * @param {*} app\n\t * @param {jQuery} html\n\t * @param {*} data\n\t */\n\tstatic _onRenderSaveDialog(app, html, data) {\n\t\tconst contentDiv = html[0].querySelector(\"div.dialog-content\");\n\t\tconst checkbox = `<div class=\"form-group\"><label class=\"dont-show-again-checkbox\">${game.i18n.localize(\n\t\t\t\"CLT.ENHANCED_CONDITIONS.ConditionLab.SortDirectionSave.CheckboxText\"\n\t\t)}<input type=\"checkbox\" name=\"dont-show-again\"></label></div>`;\n\t\tcontentDiv.insertAdjacentHTML(\"beforeend\", checkbox);\n\t\tapp.setPosition({ height: app.position.height + 32 });\n\t}\n\n\t/**\n\t * Render restore defaults hook handler\n\t * @param {*} app\n\t * @param {*} html\n\t * @param {*} data\n\t */\n\tstatic _onRenderRestoreDefaultsDialog(app, html, data) {\n\t\tif (game.clt.conditionLab.mapType !== \"default\") return;\n\n\t\tconst contentDiv = html[0].querySelector(\"div.dialog-content\");\n\t\tconst checkbox = `<div class=\"form-group\">\n\t\t<label>${game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ConditionLab.RestoreDefaultClearCache.CheckboxText\")}</label>\n\t\t<input type=\"checkbox\" name=\"clear-cache\">\n\t\t</div>`;\n\t\tcontentDiv.insertAdjacentHTML(\"beforeend\", checkbox);\n\t\tapp.setPosition({ height: app.position.height + 32 });\n\t}\n\n\t/* -------------------------------------------- */\n\t/*                Event Handlers                */\n\t/* -------------------------------------------- */\n\n\t/**\n\t * Activate app listeners\n\t * @param {*} html\n\t */\n\tactivateListeners(html) {\n\t\tconst inputs = html.find(\"input\");\n\t\tconst mapTypeSelector = html.find(\"select[class='map-type']\");\n\t\tconst activeEffectButton = html.find(\"button.active-effect-config\");\n\t\tconst triggerAnchor = html.find(\"a[class='trigger']\");\n\t\tconst addRowAnchor = html.find(\"a[name='add-row']\");\n\t\tconst removeRowAnchor = html.find(\"a[class='remove-row']\");\n\t\tconst changeOrderAnchor = html.find(\".row-controls a.move-up, .row-controls a.move-down\");\n\t\tconst restoreDefaultsButton = html.find(\"button[class='restore-defaults']\");\n\t\tconst resetFormButton = html.find(\"button[name='reset']\");\n\t\tconst saveCloseButton = html.find(\"button[name='save-close']\");\n\t\tconst filterInput = html.find(\"input[name='filter-list']\");\n\t\tconst sortButton = html.find(\"a.sort-list\");\n\t\tconst macroConfigButton = html.find(\"button.macro-config\");\n\t\tconst triggerConfigButton = html.find(\"button.trigger-config\");\n\t\tconst optionConfigButton = html.find(\"button.option-config\");\n\n\t\tinputs.on(\"change\", (event) => this._onChangeInputs(event));\n\t\tmapTypeSelector.on(\"change\", (event) => this._onChangeMapType(event));\n\t\tactiveEffectButton.on(\"click\", (event) => this._onClickActiveEffectConfig(event));\n\t\ttriggerAnchor.on(\"click\", (event) => this._onOpenTrigglerForm(event));\n\t\taddRowAnchor.on(\"click\", async (event) => this._onAddRow(event));\n\t\tremoveRowAnchor.on(\"click\", async (event) => this._onRemoveRow(event));\n\t\tchangeOrderAnchor.on(\"click\", (event) => this._onChangeSortOrder(event));\n\t\trestoreDefaultsButton.on(\"click\", async (event) => this._onRestoreDefaults(event));\n\t\tresetFormButton.on(\"click\", (event) => this._onResetForm(event));\n\t\tsaveCloseButton.on(\"click\", (event) => this._onSaveClose(event));\n\t\tfilterInput.on(\"input\", (event) => this._onChangeFilter(event));\n\t\tsortButton.on(\"click\", (event) => this._onClickSortButton(event));\n\t\tmacroConfigButton.on(\"click\", (event) => this._onClickMacroConfig(event));\n\t\ttriggerConfigButton.on(\"click\", (event) => this._onClickTriggerConfig(event));\n\t\toptionConfigButton.on(\"click\", (event) => this._onClickOptionConfig(event));\n\n\t\tsuper.activateListeners(html);\n\t}\n\n\t_activateCoreListeners(html) {\n\t\tsuper._activateCoreListeners(html);\n\t\tif (this.isEditable) html.find(\"img[data-edit]\").on(\"click\", this._onEditImage.bind(this));\n\t}\n\n\t/**\n\t * Input change handler\n\t * @param {*} event\n\t * @returns {Application.render}\n\t */\n\tasync _onChangeInputs(event) {\n\t\tconst name = event.target.name;\n\t\tif (name.startsWith(\"filter-list\")) return;\n\t\tthis.map = this.updatedMap;\n\t\tif (name.startsWith(\"reference-id\")) this._onChangeReferenceId(event);\n\t\tif (this._hasMapChanged()) return this.render();\n\t}\n\n\t/**\n\t * Filter input change handler\n\t * @param event\n\t */\n\t_onChangeFilter(event) {\n\t\tconst input = event.target;\n\t\tconst inputValue = input?.value;\n\t\tthis.filterValue = inputValue ?? \"\";\n\t\tthis.displayedMap = this._filterMapByName(this.map, this.filterValue);\n\n\t\tthis.displayedRowIds = this.displayedMap.filter((r) => !r.hidden).map((r) => r.id);\n\n\t\tconst conditionRowEls = this._element[0].querySelectorAll(\"li.row\");\n\t\tfor (const el of conditionRowEls) {\n\t\t\tconst conditionId = el.dataset.conditionId;\n\t\t\tif (this.displayedRowIds.includes(conditionId)) {\n\t\t\t\tel.classList.remove(\"hidden\");\n\t\t\t} else {\n\t\t\t\tel.classList.add(\"hidden\");\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Filter the given map by the name property using the supplied filter value, marking filtered entries as \"hidden\"\n\t * @param {Array} map\n\t * @param {string} filter\n\t * @returns filteredMap\n\t */\n\t_filterMapByName(map, filter) {\n\t\treturn map.map((c) => ({ ...c, hidden: !c.label.toLowerCase().includes(filter.toLowerCase()) }));\n\t}\n\n\t/**\n\t * Change Map Type event handler\n\t * @param {*} event\n\t */\n\tasync _onChangeMapType(event) {\n\t\tevent.preventDefault();\n\t\tconst selection = $(event.target).find(\"option:selected\");\n\t\tconst newType = (this.mapType = selection.val());\n\n\t\tswitch (newType) {\n\t\t\tcase \"default\":\n\t\t\tcase \"custom\": {\n\t\t\t\tconst defaultMap = EnhancedConditions.getDefaultMap(this.system);\n\t\t\t\tthis.map = defaultMap?.length ? EnhancedConditions._prepareMap(defaultMap) : [];\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase \"other\": {\n\t\t\t\tthis.map = this.initialMapType === \"other\" ? this.initialMap : [];\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.data = null;\n\t\tthis.render();\n\t}\n\n\t/**\n\t * Handle icon path change\n\t * @param {*} event\n\t */\n\t_onChangeIconPath(event) {\n\t\tevent.preventDefault();\n\n\t\tconst row = event.target.name.match(/\\d+$/)[0];\n\n\t\t// target the icon\n\t\tconst icon = $(this.form).find(`img[name='icon-${row}`);\n\t\ticon.attr(\"src\", event.target.value);\n\t}\n\n\t/**\n\t * Handle click Active Effect Config button\n\t * @param {*} event\n\t */\n\tasync _onClickActiveEffectConfig(event) {\n\t\tconst li = event.currentTarget.closest(\"li\");\n\t\tconst conditionId = li ? li.dataset.conditionId : null;\n\n\t\tif (!conditionId) return;\n\n\t\tconst conditions = this.map ?? game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\t\tconst condition = conditions.length ? conditions.find((c) => c.id === conditionId) : null;\n\n\t\tif (!condition) return;\n\n\t\tconst conditionEffect = condition.activeEffect ?? EnhancedConditions.getActiveEffect(condition)[0];\n\n\t\tif (!conditionEffect) return;\n\n\t\tif (!hasProperty(conditionEffect, `flags.condition-lab-triggler.conditionId`)) {\n\t\t\tsetProperty(\n\t\t\t\tconditionEffect,\n\t\t\t\t`flags.condition-lab-triggler.conditionId`,\n\t\t\t\tconditionId\n\t\t\t);\n\t\t}\n\n\t\t// Build a fake effect object for the ActiveEffectConfig sheet\n\t\t// @todo #544 make Conditions an ActiveEffect extension?\n\t\tdelete conditionEffect.id;\n\t\tconst effect = new ActiveEffect(conditionEffect);\n\t\teffect.testUserPermission = (...args) => {\n\t\t\treturn true;\n\t\t};\n\n\t\tnew EnhancedEffectConfig(effect).render(true);\n\t}\n\n\t/**\n\t * Reference Link change handler\n\t * @param {*} event\n\t */\n\tasync _onChangeReferenceId(event) {\n\t\tevent.preventDefault();\n\n\t\tconst input = event.currentTarget ?? event.target;\n\n\t\t// Update the enriched link\n\t\tconst $linkDiv = $(input.parentElement.nextElementSibling);\n\t\tconst $link = $linkDiv.first();\n\t\tconst newLink = await TextEditor.enrichHTML(input.value, { async: true, documents: true });\n\n\t\tif (!$link.length) {\n\t\t\t$linkDiv.append(newLink);\n\t\t} else {\n\t\t\t$linkDiv.html(newLink);\n\t\t}\n\t}\n\n\t/**\n\t * Open Triggler form event handler\n\t * @param {*} event\n\t */\n\t_onOpenTrigglerForm(event) {\n\t\tevent.preventDefault();\n\t\tconst anchor = event.currentTarget;\n\t\tconst select = anchor.parentElement.nextElementSibling;\n\t\tconst id = select.value;\n\t\tconst conditionLabRow = select.name.match(/\\d+$/)[0];\n\n\t\tconst data = {\n\t\t\tid,\n\t\t\tconditionLabRow\n\t\t};\n\n\t\tnew TrigglerForm(data, { parent: this }).render(true);\n\t}\n\n\t/**\n\t * Add Row event handler\n\t * @param {*} event\n\t */\n\t_onAddRow(event) {\n\t\tevent.preventDefault();\n\n\t\tconst existingNewConditions = this.map.filter((m) => m.name.match(/^New Condition \\d+$/));\n\t\tconst newConditionIndex = existingNewConditions.length\n\t\t\t? Math.max(...existingNewConditions.map((m) => Number(m.name.match(/\\d+$/g)[0]))) + 1\n\t\t\t: 1;\n\t\tconst newConditionName = `New Condition ${newConditionIndex}`;\n\t\tconst fdMap = this.updatedMap;\n\n\t\tif (this.mapType === \"default\") {\n\t\t\tconst defaultMap = EnhancedConditions.getDefaultMap(this.system);\n\t\t\tthis.map = mergeObject(fdMap, defaultMap);\n\t\t} else {\n\t\t\tthis.map = fdMap;\n\t\t}\n\n\t\tconst newMap = duplicate(this.map);\n\t\tconst exisitingIds = this.map.filter((c) => c.id).map((c) => c.id);\n\t\tconst outputChatSetting = game.settings.get(\"condition-lab-triggler\", \"conditionsOutputToChat\");\n\n\t\tnewMap.push({\n\t\t\tid: Sidekick.createId(exisitingIds),\n\t\t\tname: newConditionName,\n\t\t\ticon: \"icons/svg/d20-black.svg\",\n\t\t\treferenceId: \"\",\n\t\t\ttrigger: \"\",\n\t\t\toptions: {\n\t\t\t\toutputChat: outputChatSetting\n\t\t\t}\n\t\t});\n\n\t\tconst newMapType = this.mapType === \"default\" ? \"custom\" : this.mapType;\n\n\t\tthis.mapType = newMapType;\n\t\tthis.map = newMap;\n\t\tthis.data = null;\n\n\t\tthis.render();\n\t}\n\n\t/**\n\t * Handler for remove row event\n\t * @param {*} event\n\t */\n\t_onRemoveRow(event) {\n\t\tevent.preventDefault();\n\n\t\tthis.map = this.updatedMap;\n\n\t\tconst row = event.currentTarget.name.match(/\\d+$/)[0];\n\n\t\tconst dialog = new Dialog({\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.ConfirmDeleteTitle\"),\n\t\t\tcontent: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.ConfirmDeleteContent\"),\n\t\t\tbuttons: {\n\t\t\t\tyes: {\n\t\t\t\t\ticon: '<i class=\"fa fa-check\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"Yes\"),\n\t\t\t\t\tcallback: async (event) => {\n\t\t\t\t\t\tconst newMap = duplicate(this.map);\n\t\t\t\t\t\tnewMap.splice(row, 1);\n\t\t\t\t\t\tthis.map = newMap;\n\t\t\t\t\t\tthis.render();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fa fa-times\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"No\"),\n\t\t\t\t\tcallback: (event) => {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: \"no\"\n\t\t});\n\n\t\tdialog.render(true);\n\t}\n\n\t/**\n\t * Handle a change sort order click\n\t * @param {*} event\n\t */\n\t_onChangeSortOrder(event) {\n\t\tevent.preventDefault();\n\n\t\tconst anchor = event.currentTarget;\n\t\tconst liRow = anchor?.closest(\"li\");\n\t\tconst rowNumber = parseInt(liRow?.dataset.mappingRow);\n\t\tconst type = anchor?.className;\n\t\tconst newMap = deepClone(this.map);\n\t\tconst mappingRow = newMap?.splice(rowNumber, 1) ?? [];\n\t\tlet newIndex = -1;\n\n\t\tswitch (type) {\n\t\t\tcase \"move-up\":\n\t\t\t\tnewIndex = rowNumber - 1;\n\t\t\t\tbreak;\n\n\t\t\tcase \"move-down\":\n\t\t\t\tnewIndex = rowNumber + 1;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (newIndex <= -1) return;\n\n\t\tnewMap.splice(newIndex, 0, ...mappingRow);\n\t\tthis.map = newMap;\n\t\tthis.render();\n\t}\n\n\t/**\n\t * Sort button handler\n\t * @param {*} event\n\t */\n\t_onClickSortButton(event) {\n\t\tconst sortDirection = this.sortDirection;\n\t\t// const newSortDirection = sortDirection === \"asc\" ? \"desc\" : \"asc\";\n\t\tswitch (sortDirection) {\n\t\t\tcase \"\":\n\t\t\t\tthis.sortDirection = \"asc\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"asc\":\n\t\t\t\tthis.sortDirection = \"desc\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"desc\":\n\t\t\t\tthis.sortDirection = \"\";\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn this.render();\n\t}\n\n\t/**\n\t * Sorts the given map by the name property\n\t * @param {Array} map\n\t * @param {*} direction\n\t * @returns {Array}\n\t */\n\t_sortMapByName(map, direction) {\n\t\treturn map.sort((a, b) => {\n\t\t\tif (direction === \"desc\") return b.name.localeCompare(a.name);\n\t\t\treturn a.name.localeCompare(b.name);\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param {*} event\n\t */\n\t_onRestoreDefaults(event) {\n\t\tevent.preventDefault();\n\t\tconst content = game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.RestoreDefaultsContent\");\n\n\t\tconst confirmationDialog = new Dialog({\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.RestoreDefaultsTitle\"),\n\t\t\tcontent,\n\t\t\tbuttons: {\n\t\t\t\tyes: {\n\t\t\t\t\ticon: '<i class=\"fas fa-check\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"Yes\"),\n\t\t\t\t\tcallback: ($html) => {\n\t\t\t\t\t\tconst checkbox = $html[0].querySelector(\"input[name='clear-cache']\");\n\t\t\t\t\t\tconst clearCache = checkbox?.checked;\n\t\t\t\t\t\tthis._restoreDefaults({ clearCache });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"No\"),\n\t\t\t\t\tcallback: () => {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: \"no\",\n\t\t\tclose: () => {}\n\t\t});\n\n\t\tconfirmationDialog.render(true);\n\t}\n\n\t/**\n\t * Reset form handler\n\t * @param {*} event\n\t */\n\t_onResetForm(event) {\n\t\tconst dialog = new Dialog({\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.ResetFormTitle\"),\n\t\t\tcontent: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.ResetFormContent\"),\n\t\t\tbuttons: {\n\t\t\t\tyes: {\n\t\t\t\t\ticon: '<i class=\"fa fa-check\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"Yes\"),\n\t\t\t\t\tcallback: (event) => {\n\t\t\t\t\t\tthis.map = this.initialMap;\n\t\t\t\t\t\tthis.render();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fa fa-times\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"No\"),\n\t\t\t\t\tcallback: (event) => {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: \"no\"\n\t\t});\n\t\tdialog.render(true);\n\t}\n\n\t/**\n\t * Save and Close handler\n\t * @param {*} event\n\t */\n\t_onSaveClose(event) {\n\t\tthis.submit()\n\t\t\t.then((result) => {\n\t\t\t\tthis.close();\n\t\t\t})\n\t\t\t.catch((reject) => {\n\t\t\t\tui.notifications.warn(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.SaveFailed\"));\n\t\t\t});\n\t}\n\n\tasync _onDrop(event) {\n\t\tevent.preventDefault();\n\t\tconst eventData = TextEditor.getDragEventData(event);\n\t\tconst link = await TextEditor.getContentLink(eventData);\n\t\tconst targetInput = event.currentTarget;\n\t\tif (link) {\n\t\t\ttargetInput.value = link;\n\t\t\treturn targetInput.dispatchEvent(new Event(\"change\"));\n\t\t}\n\t\treturn ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ConditionLab.BadReference\"));\n\t}\n\n\t/**\n\t * Macro Config button click handler\n\t * @param {*} event\n\t */\n\t_onClickMacroConfig(event) {\n\t\tconst rowLi = event.target.closest(\"li\");\n\t\tconst conditionId = rowLi ? rowLi.dataset.conditionId : null;\n\n\t\tif (!conditionId) return;\n\n\t\tconst condition = this.map.find((c) => c.id === conditionId);\n\n\t\tnew EnhancedConditionMacroConfig(condition).render(true);\n\t}\n\n\t/**\n\t * Trigger Config button click handler\n\t * @param {*} event\n\t */\n\t_onClickTriggerConfig(event) {\n\t\tconst rowLi = event.target.closest(\"li\");\n\t\tconst conditionId = rowLi ? rowLi.dataset.conditionId : null;\n\n\t\tif (!conditionId) return;\n\n\t\tconst condition = this.map.find((c) => c.id === conditionId);\n\n\t\tnew EnhancedConditionTriggerConfig(condition).render(true);\n\t}\n\n\t/**\n\t * Option Config button click handler\n\t * @param {*} event\n\t */\n\t_onClickOptionConfig(event) {\n\t\tconst rowLi = event.target.closest(\"li\");\n\t\tconst conditionId = rowLi ? rowLi.dataset.conditionId : null;\n\n\t\tif (!conditionId) return;\n\n\t\tconst condition = this.map.find((c) => c.id === conditionId);\n\n\t\tconst config = new EnhancedConditionOptionConfig(condition);\n\t\tconfig.parent = this;\n\t\tconfig.render(true);\n\t}\n\n\t// Checks the updatedMap property against the initial map\n\t_hasMapChanged() {\n\t\tlet hasChanged = false;\n\t\tconst conditionMap = this.updatedMap;\n\n\t\tconditionMap.forEach((entry, index, array) => {\n\t\t\t// Check if the row exists in the saved map\n\t\t\tconst existingEntry = this.initialMap.find((e) => e.id === entry.id) ?? null;\n\t\t\tentry.isNew = !existingEntry;\n\n\t\t\t// If row is new or if its index has changed, it is also changed\n\t\t\tentry.isChanged = entry.isNew || index !== this.initialMap?.indexOf(existingEntry);\n\n\t\t\t// If it's not changed, check if the compared entries are equal\n\t\t\tif (!entry.isChanged) {\n\t\t\t\tentry.isChanged = !foundry.utils.isEmpty(foundry.utils.diffObject(existingEntry, entry));\n\t\t\t\thasChanged ||= entry.isChanged;\n\t\t\t}\n\t\t});\n\n\t\treturn hasChanged;\n\t}\n\n\t_hasEntryChanged(entry, existingEntry, index) {\n\t\tconst propsToCheck = [\n\t\t\t\"name\",\n\t\t\t\"icon\",\n\t\t\t\"options\",\n\t\t\t\"referenceId\",\n\t\t\t\"applyTrigger\",\n\t\t\t\"removeTrigger\",\n\t\t\t\"activeEffect\"\n\t\t];\n\n\t\tconst hasChanged =\n\t\t\tentry.isNew\n\t\t\t|| index !== this.initialMap?.indexOf(existingEntry)\n\t\t\t// || !foundry.utils.isObjectEmpty(foundry.utils.diffObject(existingEntry, entry));\n\t\t\t|| propsToCheck.some((p) => this._hasPropertyChanged(p, existingEntry, entry));\n\n\t\treturn hasChanged;\n\t}\n\n\t/**\n\t * Checks a given propertyName on an original and comparison object to see if it has changed\n\t * @param {*} propertyName\n\t * @param {*} original\n\t * @param {*} comparison\n\t * @returns {boolean}\n\t */\n\t_hasPropertyChanged(propertyName, original, comparison) {\n\t\tlet propertyChanged = false;\n\n\t\tif (\n\t\t\t(original[propertyName] && !comparison[propertyName])\n\t\t\t|| (original && JSON.stringify(original[propertyName]) !== JSON.stringify(comparison[[propertyName]]))\n\t\t) {\n\t\t\tpropertyChanged = true;\n\t\t}\n\n\t\treturn propertyChanged;\n\t}\n\n\t_onEditImage(event) {\n\t\tconst current = event.target.getAttribute(\"src\");\n\t\tconst fp = new FilePicker({\n\t\t\tcurrent,\n\t\t\ttype: \"image\",\n\t\t\tcallback: (path) => {\n\t\t\t\tevent.currentTarget.src = path;\n\t\t\t\tconst iconPath = event.target.closest(\".content1\").querySelector(\".icon-path\");\n\t\t\t\ticonPath.value = path;\n\t\t\t\tthis.map = this.updatedMap;\n\t\t\t\tif (this._hasMapChanged()) this.render();\n\t\t\t},\n\t\t\ttop: this.position.top + 40,\n\t\t\tleft: this.position.left + 10\n\t\t});\n\t\treturn fp.browse();\n\t}\n}\n","import { ConditionLab } from \"./enhanced-conditions/condition-lab.js\";\nimport { EnhancedConditions } from \"./enhanced-conditions/enhanced-conditions.js\";\nimport { TrigglerForm } from \"./triggler/triggler-form.js\";\n\n/**\n *\n */\nexport function registerSettings() {\n\t/* -------------------------------------------- */\n\t/*            Setting Configuration             */\n\t/* -------------------------------------------- */\n\n\tgame.settings.register(\"condition-lab-triggler\", \"conditionsOutputToChat\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.OutputChatN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.OutputChatH\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tconfig: true,\n\t\tdefault: false,\n\t\tonChange: (s) => {\n\t\t\tif (s === true) {\n\t\t\t\tDialog.confirm({\n\t\t\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.OutputChatConfirm.Title\"),\n\t\t\t\t\tcontent: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.OutputChatConfirm.Content\"),\n\t\t\t\t\tyes: () => {\n\t\t\t\t\t\tconst newMap = deepClone(game.clt.conditions);\n\t\t\t\t\t\tif (!newMap.length) return;\n\t\t\t\t\t\tnewMap.forEach((c) => (c.options.outputChat = true));\n\t\t\t\t\t\tgame.settings.set(\"condition-lab-triggler\", \"activeConditionMap\", newMap);\n\t\t\t\t\t},\n\t\t\t\t\tno: () => {}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"conditionsOutputDuringCombat\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.OutputCombatN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.OutputCombatH\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tconfig: true,\n\t\tdefault: false\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"removeDefaultEffects\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.RemoveDefaultEffectsN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.RemoveDefaultEffectsH\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tconfig: true,\n\t\tdefault: false,\n\t\tonChange: () => {\n\t\t\tEnhancedConditions._updateStatusEffects();\n\t\t}\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"enhancedConditionsMigrationVersion\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.MigrationVersionN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.MigrationVersionH\",\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tconfig: false,\n\t\tapiOnly: true,\n\t\tdefault: \"\"\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"showSortDirectionDialog\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.ShowSortDirectionDialogN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.ShowSortDirectionDialogH\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tconfig: true,\n\t\tdefault: true\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"defaultSpecialStatusEffects\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.DefaultSpecialStatusEffectsN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.DefaultSpecialStatusEffectsH\",\n\t\tscope: \"world\",\n\t\ttype: Object,\n\t\tdefault: {},\n\t\tconfig: false\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"specialStatusEffectMapping\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.SpecialStatusEffectMappingN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.SpecialStatusEffectMappingH\",\n\t\tscope: \"world\",\n\t\ttype: Object,\n\t\tdefault: {},\n\t\tconfig: false\n\t});\n\n\t/* -------------------------------------------- */\n\t/*              EnhancedConditions              */\n\t/* -------------------------------------------- */\n\n\tgame.settings.registerMenu(\"condition-lab-triggler\", \"enchantedConditionsMenu\", {\n\t\tname: \"CLT.ENHANCED_CONDITIONS.Lab.Title\",\n\t\tlabel: \"CLT.ENHANCED_CONDITIONS.Lab.Title\",\n\t\thint: \"CLT.ENHANCED_CONDITIONS.Lab.Hint\",\n\t\ticon: \"fas fa-flask\",\n\t\ttype: ConditionLab,\n\t\trestricted: true\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"coreStatusIcons\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.CoreIconsN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.CoreIconsH\",\n\t\tscope: \"world\",\n\t\ttype: Object,\n\t\tdefault: [],\n\t\tconfig: false\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"coreStatusEffects\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.CoreEffectsN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.CoreEffectsH\",\n\t\tscope: \"world\",\n\t\ttype: Object,\n\t\tdefault: [],\n\t\tconfig: false\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"conditionMapType\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.MapTypeN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.MapTypeH\",\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"\",\n\t\tchoices: {\n\t\t\tdefault: game.i18n.localize(\"CLT.SETTINGS.EnhancedConditions.MapType.Choices.default\"),\n\t\t\tcustom: game.i18n.localize(\"CLT.SETTINGS.EnhancedConditions.MapType.Choices.custom\"),\n\t\t\tother: game.i18n.localize(\"CLT.SETTINGS.EnhancedConditions.MapType.Choices.other\")\n\t\t},\n\t\tconfig: false,\n\t\tapiOnly: true\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"defaultConditionMaps\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.DefaultMapsN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.DefaultMapsH\",\n\t\tscope: \"world\",\n\t\ttype: Object,\n\t\tdefault: {}\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"activeConditionMap\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.ActiveConditionMapN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.ActiveConditionMapH\",\n\t\tscope: \"world\",\n\t\ttype: Object,\n\t\tdefault: [],\n\t\tonChange: async (conditionMap) => {\n\t\t\tawait EnhancedConditions._updateStatusEffects(conditionMap);\n\n\t\t\t// Save the active condition map to a convenience property\n\t\t\tif (game.clt) {\n\t\t\t\tgame.clt.conditions = conditionMap;\n\t\t\t}\n\t\t}\n\t});\n\n\t/* -------------------------------------------- */\n\t/*                 TokenUtility                 */\n\t/* -------------------------------------------- */\n\n\tif (!game.modules.get(\"status-halo\")?.active && !game.modules.get(\"illandril-token-hud-scale\")?.active) {\n\t\tgame.settings.register(\"condition-lab-triggler\", \"effectSize\", {\n\t\t\tname: \"CLT.SETTINGS.TokenUtility.TokenEffectSizeN\",\n\t\t\thint: \"CLT.SETTINGS.TokenUtility.TokenEffectSizeH\",\n\t\t\tdefault: \"small\",\n\t\t\tscope: \"client\",\n\t\t\ttype: String,\n\t\t\tchoices: {\n\t\t\t\tsmall: game.i18n.localize(\"CLT.SETTINGS.TokenUtility.TokenEffectSize.choices.small\"),\n\t\t\t\tmedium: game.i18n.localize(\"CLT.SETTINGS.TokenUtility.TokenEffectSize.choices.medium\"),\n\t\t\t\tlarge: game.i18n.localize(\"CLT.SETTINGS.TokenUtility.TokenEffectSize.choices.large\"),\n\t\t\t\txLarge: game.i18n.localize(\"CLT.SETTINGS.TokenUtility.TokenEffectSize.choices.xLarge\")\n\t\t\t},\n\t\t\tconfig: true,\n\t\t\tonChange: () => {\n\t\t\t\tcanvas.draw();\n\t\t\t}\n\t\t});\n\t}\n\n\t/* -------------------------------------------- */\n\t/*                    Triggler                  */\n\t/* -------------------------------------------- */\n\n\tgame.settings.registerMenu(\"condition-lab-triggler\", \"trigglerMenu\", {\n\t\tname: \"CLT.SETTINGS.Triggler.TriggersN\",\n\t\tlabel: \"CLT.SETTINGS.Triggler.TriggersN\",\n\t\thint: \"CLT.SETTINGS.Triggler.TriggersH\",\n\t\ticon: \"fas fa-exclamation\",\n\t\ttype: TrigglerForm,\n\t\trestricted: true\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"storedTriggers\", {\n\t\tname: \"CLT.SETTINGS.Triggler.TriggersN\",\n\t\thint: \"CLT.SETTINGS.Triggler.TriggersH\",\n\t\tscope: \"world\",\n\t\ttype: Object,\n\t\tdefault: [],\n\t\tonChange: () => {}\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"hasRunMigration\", {\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tdefault: false\n\t});\n\n\t/* -------------------------------------------- */\n\n\tgame.settings.register(\"condition-lab-triggler\", \"sceneControls\", {\n\t\tname: \"CLT.SETTINGS.SceneControls.Name\",\n\t\thint: \"CLT.SETTINGS.SceneControls.Hint\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\tconfig: true,\n\t\trequiresReload: true\n\t});\n}\n","import { EnhancedConditions } from \"../enhanced-conditions/enhanced-conditions.js\";\n\nexport default class MigrationHelper {\n\tstatic async _onReady() {\n\t\tconst cubVersion = game.modules.get(\"condition-lab-triggler\")?.version;\n\n\t\tawait EnhancedConditions._migrationHelper(cubVersion);\n\t}\n\n\tstatic _importFromCUB() {\n\t\tif (\n\t\t\tgame.user.isGM\n\t\t\t&& !game.settings.get(\"condition-lab-triggler\", \"hasRunMigration\")\n\t\t\t&& (game.modules.has(\"combat-utility-belt\")\n\t\t\t\t|| game.settings.storage.get(\"world\").find((setting) => setting.key.includes(\"combat-utility-belt\")))\n\t\t) {\n\t\t\tDialog.confirm({\n\t\t\t\ttitle: game.i18n.localize(\"CLT.MIGRATION.Title\"),\n\t\t\t\tcontent: game.i18n.localize(\"CLT.MIGRATION.Content\"),\n\t\t\t\tyes: () => {\n\t\t\t\t\tconst CUB_SETTINGS = {};\n\t\t\t\t\tgame.settings.storage\n\t\t\t\t\t\t.get(\"world\")\n\t\t\t\t\t\t.filter((setting) => setting.key.includes(\"combat-utility-belt\"))\n\t\t\t\t\t\t.forEach((setting) => {\n\t\t\t\t\t\t\tCUB_SETTINGS[setting.key.replace(\"combat-utility-belt.\", \"\")] = setting.value;\n\t\t\t\t\t\t});\n\t\t\t\t\tif (CUB_SETTINGS.activeConditionMap) {\n\t\t\t\t\t\tCUB_SETTINGS.activeConditionMap.forEach((status) => {\n\t\t\t\t\t\t\tif (status.icon.includes(\"/combat-utility-belt/\")) {\n\t\t\t\t\t\t\t\tstatus.icon = status.icon.replace(\"/combat-utility-belt/\", \"/condition-lab-triggler/\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (CUB_SETTINGS.defaultConditionMaps) {\n\t\t\t\t\t\tObject.keys(CUB_SETTINGS.defaultConditionMaps).forEach((map) => {\n\t\t\t\t\t\t\tCUB_SETTINGS.defaultConditionMaps[map].forEach((status) => {\n\t\t\t\t\t\t\t\tif (status.icon.includes(\"/combat-utility-belt/\")) {\n\t\t\t\t\t\t\t\t\tstatus.icon = status.icon.replace(\"/combat-utility-belt/\", \"/condition-lab-triggler/\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (status.referenceId.includes(\"combat-utility-belt\")) {\n\t\t\t\t\t\t\t\t\tstatus.referenceId = status.referenceId.replace(\n\t\t\t\t\t\t\t\t\t\t\"combat-utility-belt\",\n\t\t\t\t\t\t\t\t\t\t\"condition-lab-triggler\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst listOfSettings = [\n\t\t\t\t\t\t\"activeConditionMap\",\n\t\t\t\t\t\t\"conditionMapType\",\n\t\t\t\t\t\t\"conditionsOutputDuringCombat\",\n\t\t\t\t\t\t\"conditionsOutputToChat\",\n\t\t\t\t\t\t\"coreStatusEffects\",\n\t\t\t\t\t\t\"coreStatusIcons\",\n\t\t\t\t\t\t\"defaultConditionMaps\",\n\t\t\t\t\t\t\"defaultSpecialStatusEffects\",\n\t\t\t\t\t\t\"effectSize\",\n\t\t\t\t\t\t\"removeDefaultEffects\",\n\t\t\t\t\t\t\"showSortDirectionDialog\",\n\t\t\t\t\t\t\"specialStatusEffectMapping\",\n\t\t\t\t\t\t\"storedTriggers\"\n\t\t\t\t\t];\n\t\t\t\t\tlistOfSettings.forEach((setting) => {\n\t\t\t\t\t\tif (CUB_SETTINGS[setting]) game.settings.set(\"condition-lab-triggler\", setting, CUB_SETTINGS[setting]);\n\t\t\t\t\t});\n\t\t\t\t\tgame.settings.set(\"condition-lab-triggler\", \"hasRunMigration\", true);\n\t\t\t\t},\n\t\t\t\tno: () => {\n\t\t\t\t\tgame.settings.set(\"condition-lab-triggler\", \"hasRunMigration\", true);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n","/* -------------------------------------------- */\n/*                    Imports                   */\n/* -------------------------------------------- */\nimport { Butler as BUTLER } from \"./butler.js\";\nimport { libWrapper } from \"./libWrapper.js\";\nimport { registerSettings } from \"./settings.js\";\nimport { Sidekick } from \"./sidekick.js\";\n\n/* ------------------ Gadgets ----------------- */\n\nimport { EnhancedConditions } from \"./enhanced-conditions/enhanced-conditions.js\";\n\n/* ------------------- Utils ------------------ */\n\nimport { ConditionLab } from \"./enhanced-conditions/condition-lab.js\";\nimport { TrigglerForm } from \"./triggler/triggler-form.js\";\nimport { Triggler } from \"./triggler/triggler.js\";\nimport MigrationHelper from \"./utils/migration.js\";\n\n/* -------------------------------------------- */\n/*                    System                    */\n/* -------------------------------------------- */\n\n/* ------------------- Init ------------------- */\n\nHooks.on(\"init\", () => {\n\t// Assign the namespace Object if it already exists or instantiate it as an object if not\n\tgame.clt = new BUTLER();\n\tui.clt = {};\n\n\tObject.defineProperty(game, \"cub\", {\n\t\tget() {\n\t\t\tconsole.warn(\"CLT | game.cub is deprecated since v1.5. Please use game.clt instead.\");\n\t\t\treturn this.clt;\n\t\t}\n\t});\n\n\t// Execute housekeeping\n\tSidekick.loadTemplates();\n\n\t// Keybinds\n\tgame.keybindings.register(\"condition-lab-triggler\", \"openConditionLab\", {\n\t\tname: \"CLT.KEYBINDINGS.openConditionLab.name\",\n\t\tonDown: () => {\n\t\t\tnew ConditionLab().render(true);\n\t\t},\n\t\trestricted: true,\n\t\tprecedence: CONST.KEYBINDING_PRECEDENCE.NORMAL\n\t});\n\tgame.keybindings.register(\"condition-lab-triggler\", \"openTriggler\", {\n\t\tname: \"CLT.KEYBINDINGS.openTriggler.name\",\n\t\tonDown: () => {\n\t\t\tnew TrigglerForm().render(true);\n\t\t},\n\t\trestricted: true,\n\t\tprecedence: CONST.KEYBINDING_PRECEDENCE.NORMAL\n\t});\n});\n\nHooks.on(\"i18nInit\", () => {\n\tregisterSettings();\n\n\t// Wrappers\n\tif (!game.modules.get(\"status-halo\")?.active && !game.modules.get(\"illandril-token-hud-scale\")?.active) {\n\t\tconst effectSizes = {\n\t\t\txLarge: {\n\t\t\t\tmultiplier: 5,\n\t\t\t\tdivisor: 2\n\t\t\t},\n\t\t\tlarge: {\n\t\t\t\tmultiplier: 3.3,\n\t\t\t\tdivisor: 3\n\t\t\t},\n\t\t\tmedium: {\n\t\t\t\tmultiplier: 2.5,\n\t\t\t\tdivisor: 4\n\t\t\t},\n\t\t\tsmall: {\n\t\t\t\tmultiplier: 2,\n\t\t\t\tdivisor: 5\n\t\t\t}\n\t\t};\n\t\tlibWrapper.register(\n\t\t\t\"condition-lab-triggler\",\n\t\t\t\"Token.prototype._refreshEffects\",\n\t\t\tfunction () {\n\t\t\t\tconst effectSize = game.settings.get(\"condition-lab-triggler\", \"effectSize\");\n\t\t\t\t// Use the default values if no setting found\n\t\t\t\tconst multiplier = effectSize\n\t\t\t\t\t? effectSizes[effectSize]?.multiplier\n\t\t\t\t\t: 2;\n\t\t\t\tconst divisor = effectSize ? effectSizes[effectSize]?.divisor : 5;\n\n\t\t\t\tlet i = 0;\n\t\t\t\tconst w = Math.round(canvas.dimensions.size / 2 / 5) * multiplier;\n\t\t\t\tconst rows = Math.floor(this.document.height * divisor);\n\n\t\t\t\t// Unchanged\n\t\t\t\tconst bg = this.effects.bg.clear().beginFill(0x000000, 0.4)\n\t\t\t\t\t.lineStyle(1.0, 0x000000);\n\t\t\t\tfor (const effect of this.effects.children) {\n\t\t\t\t\tif (effect === bg) continue;\n\n\t\t\t\t\tif (effect === this.effects.overlay) {\n\t\t\t\t\t\tconst size = Math.min(this.w * 0.6, this.h * 0.6);\n\t\t\t\t\t\teffect.width = effect.height = size;\n\t\t\t\t\t\teffect.position.set((this.w - size) / 2, (this.h - size) / 2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teffect.width = effect.height = w;\n\t\t\t\t\t\teffect.x = Math.floor(i / rows) * w;\n\t\t\t\t\t\teffect.y = (i % rows) * w;\n\t\t\t\t\t\tbg.drawRoundedRect(effect.x + 1, effect.y + 1, w - 2, w - 2, 2);\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"OVERRIDE\"\n\t\t);\n\t}\n});\n\nHooks.on(\"ready\", () => {\n\tMigrationHelper._importFromCUB();\n\tEnhancedConditions._onReady();\n\tMigrationHelper._onReady();\n});\n\n/* -------------------------------------------- */\n/*                    Entity                    */\n/* -------------------------------------------- */\n\n/* ------------------- Actor ------------------ */\n\nHooks.on(\"updateActor\", (actor, updateData, options, userId) => {\n\t// Workaround for actor array returned in hook for non triggering clients\n\tif (actor instanceof Collection) {\n\t\tactor = actor.contents.find((a) => a.id === updateData.id);\n\t}\n\tTriggler._onUpdateActor(actor, updateData, options, userId);\n});\n\nHooks.on(\"createActiveEffect\", (effect, options, userId) => {\n\tEnhancedConditions._onCreateActiveEffect(effect, options, userId);\n});\n\nHooks.on(\"deleteActiveEffect\", (effect, options, userId) => {\n\tEnhancedConditions._onDeleteActiveEffect(effect, options, userId);\n});\n\n/* ------------------- Token ------------------ */\n\nHooks.on(\"preUpdateToken\", (tokenDocument, updateData, options, userId) => {\n\tEnhancedConditions._onPreUpdateToken(tokenDocument, updateData, options, userId);\n});\n\nHooks.on(\"updateToken\", (tokenDocument, updateData, options, userId) => {\n\tEnhancedConditions._onUpdateToken(tokenDocument, updateData, options, userId);\n\tTriggler._onUpdateToken(tokenDocument, updateData, options, userId);\n});\n\n/* ------------------ Combat ------------------ */\n\nHooks.on(\"updateCombat\", (combat, updateData, options, userId) => {\n\tEnhancedConditions._onUpdateCombat(combat, updateData, options, userId);\n});\n\n/* -------------------------------------------- */\n/*                    Render                    */\n/* -------------------------------------------- */\n\n/* -------------- Scene Controls -------------- */\nHooks.on(\"getSceneControlButtons\", function (hudButtons) {\n\tif (game.user.isGM && game.settings.get(\"condition-lab-triggler\", \"sceneControls\")) {\n\t\tlet hud = hudButtons.find((val) => val.name === \"token\");\n\t\tif (hud) {\n\t\t\thud.tools.push({\n\t\t\t\tname: \"CLT.ENHANCED_CONDITIONS.Lab.Title\",\n\t\t\t\ttitle: \"CLT.ENHANCED_CONDITIONS.Lab.Title\",\n\t\t\t\ticon: \"fas fa-flask\",\n\t\t\t\tbutton: true,\n\t\t\t\tonClick: async () => new ConditionLab().render(true)\n\t\t\t});\n\t\t\thud.tools.push({\n\t\t\t\tname: \"Triggler\",\n\t\t\t\ttitle: \"Triggler\",\n\t\t\t\ticon: \"fas fa-exclamation\",\n\t\t\t\tbutton: true,\n\t\t\t\tonClick: async () => new TrigglerForm().render(true)\n\t\t\t});\n\t\t}\n\t}\n});\n\nHooks.on(\"renderSceneControls\", (app, html, data) => {\n\tconst trigglerButton = html.find('li[data-tool=\"Triggler\"]')[0];\n\tif (trigglerButton) {\n\t\ttrigglerButton.style.display = \"inline-block\";\n\t\tconst exclamationMark = trigglerButton.children[0];\n\t\texclamationMark.style.marginRight = \"0px\";\n\t\tconst rightChevron = document.createElement(\"i\");\n\t\trightChevron.classList.add(\"fas\", \"fa-angle-right\");\n\t\trightChevron.style.marginRight = \"0px\";\n\t\ttrigglerButton.insertBefore(rightChevron, exclamationMark);\n\t\tconst leftChevron = document.createElement(\"i\");\n\t\tleftChevron.classList.add(\"fas\", \"fa-angle-left\");\n\t\texclamationMark.after(leftChevron);\n\t}\n});\n\n/* ------------------- Misc ------------------- */\n\nHooks.on(\"renderSettingsConfig\", (app, html, data) => {\n\tconst trigglerMenu = html.find(\"button[data-key=\\\"condition-lab-triggler.trigglerMenu\\\"]\")[0];\n\tif (trigglerMenu) {\n\t\tconst exclamationMark = trigglerMenu.children[0];\n\t\texclamationMark.style.marginRight = \"0px\";\n\t\tconst rightChevron = document.createElement(\"i\");\n\t\trightChevron.classList.add(\"fas\", \"fa-angle-right\");\n\t\trightChevron.style.marginRight = \"0px\";\n\t\ttrigglerMenu.insertBefore(rightChevron, exclamationMark);\n\t\tconst leftChevron = document.createElement(\"i\");\n\t\tleftChevron.classList.add(\"fas\", \"fa-angle-left\");\n\t\texclamationMark.after(leftChevron);\n\t}\n});\n\nHooks.on(\"renderMacroConfig\", (app, html, data) => {\n\tTriggler._onRenderMacroConfig(app, html, data);\n});\n\n/* ------------------- Chat ------------------- */\n\nHooks.on(\"renderChatLog\", (app, html, data) => {\n\tEnhancedConditions._onRenderChatLog(app, html, data);\n});\n\nHooks.on(\"renderChatMessage\", (app, html, data) => {\n\tEnhancedConditions._onRenderChatMessage(app, html, data);\n});\n\nHooks.on(\"renderDialog\", (app, html, data) => {\n\tswitch (app.title) {\n\t\tcase game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ConditionLab.SortDirectionSave.Title\"):\n\t\t\tConditionLab._onRenderSaveDialog(app, html, data);\n\t\t\tbreak;\n\n\t\tcase game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.RestoreDefaultsTitle\"):\n\t\t\tConditionLab._onRenderRestoreDefaultsDialog(app, html, data);\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n});\n\n/* -------------- Combat Tracker -------------- */\n\nHooks.on(\"renderCombatTracker\", (app, html, data) => {\n\tEnhancedConditions._onRenderCombatTracker(app, html, data);\n});\n\n/* ---------------- Custom Apps --------------- */\n\nHooks.on(\"renderConditionLab\", (app, html, data) => {\n\tConditionLab._onRender(app, html, data);\n});\n"],"names":["BUTLER"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZGl0aW9uLWxhYi10cmlnZ2xlci5qcyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21vZHVsZS9zaWRla2ljay5qcyIsIi4uLy4uL3NyYy9tb2R1bGUvZW5oYW5jZWQtY29uZGl0aW9ucy9lbmhhbmNlZC1jb25kaXRpb25zLmpzIiwiLi4vLi4vc3JjL21vZHVsZS9idXRsZXIuanMiLCIuLi8uLi9zcmMvbW9kdWxlL2xpYldyYXBwZXIuanMiLCIuLi8uLi9zcmMvbW9kdWxlL3RyaWdnbGVyL3RyaWdnbGVyLmpzIiwiLi4vLi4vc3JjL21vZHVsZS90cmlnZ2xlci90cmlnZ2xlci1mb3JtLmpzIiwiLi4vLi4vc3JjL21vZHVsZS9lbmhhbmNlZC1jb25kaXRpb25zL2VuaGFuY2VkLWNvbmRpdGlvbi1tYWNyby5qcyIsIi4uLy4uL3NyYy9tb2R1bGUvZW5oYW5jZWQtY29uZGl0aW9ucy9lbmhhbmNlZC1jb25kaXRpb24tb3B0aW9uLmpzIiwiLi4vLi4vc3JjL21vZHVsZS9lbmhhbmNlZC1jb25kaXRpb25zL2VuaGFuY2VkLWNvbmRpdGlvbi10cmlnZ2VyLmpzIiwiLi4vLi4vc3JjL21vZHVsZS9lbmhhbmNlZC1jb25kaXRpb25zL2VuaGFuY2VkLWVmZmVjdC1jb25maWcuanMiLCIuLi8uLi9zcmMvbW9kdWxlL2VuaGFuY2VkLWNvbmRpdGlvbnMvY29uZGl0aW9uLWxhYi5qcyIsIi4uLy4uL3NyYy9tb2R1bGUvc2V0dGluZ3MuanMiLCIuLi8uLi9zcmMvbW9kdWxlL3V0aWxzL21pZ3JhdGlvbi5qcyIsIi4uLy4uL3NyYy9tb2R1bGUvY29uZGl0aW9uLWxhYi10cmlnZ2xlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFByb3ZpZGVzIGhlbHBlciBtZXRob2RzIGZvciB1c2UgZWxzZXdoZXJlIGluIHRoZSBtb2R1bGUgKGFuZCBoYXMgeW91ciBiYWNrIGluIGEgbWVsZWUpXG4gKi9cbmV4cG9ydCBjbGFzcyBTaWRla2ljayB7XG5cdC8qKlxuXHQgKiBVc2UgRmlsZVBpY2tlciB0byBicm93c2UgdGhlbiBGZXRjaCBvbmUgb3IgbW9yZSBKU09OcyBhbmQgcmV0dXJuIHRoZW1cblx0ICogQHBhcmFtIHsqfSBzb3VyY2Vcblx0ICogQHBhcmFtIHsqfSBwYXRoXG5cdCAqL1xuXHRzdGF0aWMgYXN5bmMgZmV0Y2hKc29ucyhzb3VyY2UsIHBhdGgpIHtcblx0XHRjb25zdCBleHRlbnNpb25zID0gW1wiLmpzb25cIl07XG5cdFx0Y29uc3QgZnAgPSBhd2FpdCBGaWxlUGlja2VyLmJyb3dzZShzb3VyY2UsIHBhdGgsIHsgZXh0ZW5zaW9ucyB9KTtcblx0XHRjb25zdCBmZXRjaGVkSnNvbnMgPSBmcD8uZmlsZXM/Lmxlbmd0aCA/IGF3YWl0IFByb21pc2UuYWxsKGZwLmZpbGVzLm1hcCgoZikgPT4gU2lkZWtpY2suZmV0Y2hKc29uKGYpKSkgOiBbXTtcblx0XHRjb25zdCBqc29ucyA9IGZldGNoZWRKc29ucy5maWx0ZXIoKGopID0+ICEhaik7XG5cblx0XHRyZXR1cm4ganNvbnM7XG5cdH1cblxuXHQvKipcblx0ICogRmV0Y2ggYSBKU09OIGZyb20gYSBnaXZlbiBmaWxlXG5cdCAqIEBwYXJhbSB7RmlsZX0gZmlsZVxuXHQgKiBAcmV0dXJucyBKU09OIHwgbnVsbFxuXHQgKi9cblx0c3RhdGljIGFzeW5jIGZldGNoSnNvbihmaWxlKSB7XG5cdFx0dHJ5IHtcblx0XHRcdGNvbnN0IGpzb25GaWxlID0gYXdhaXQgZmV0Y2goZmlsZSk7XG5cdFx0XHRjb25zdCBqc29uID0gYXdhaXQganNvbkZpbGUuanNvbigpO1xuXHRcdFx0aWYgKCEoanNvbiBpbnN0YW5jZW9mIE9iamVjdCkpIHRocm93IG5ldyBFcnJvcihcIk5vdCBhIHZhbGlkIEpTT04hXCIpO1xuXHRcdFx0cmV0dXJuIGpzb247XG5cdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRjb25zb2xlLndhcm4oZS5tZXNzYWdlKTtcblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBBdHRlbXB0cyB0byBjb2VyY2UgYSB0YXJnZXQgdmFsdWUgaW50byB0aGUgZXhlbXBsYXIncyB0eXBlXG5cdCAqIEBwYXJhbSB7Kn0gdGFyZ2V0XG5cdCAqIEBwYXJhbSB2YWx1ZVxuXHQgKiBAcGFyYW0geyp9IHR5cGVcblx0ICogQHJldHVybnMgeyp9IGNvZXJjZWRWYWx1ZVxuXHQgKi9cblx0c3RhdGljIGNvZXJjZVR5cGUodmFsdWUsIHR5cGUpIHtcblx0XHRzd2l0Y2ggKHR5cGUpIHtcblx0XHRcdGNhc2UgXCJudW1iZXJcIjpcblx0XHRcdFx0cmV0dXJuIE51bWJlcih2YWx1ZSk7XG5cblx0XHRcdGNhc2UgXCJzdHJpbmdcIjpcblx0XHRcdFx0cmV0dXJuIHZhbHVlLnRvU3RyaW5nKCk7XG5cblx0XHRcdGNhc2UgXCJib29sZWFuXCI6XG5cdFx0XHRcdHJldHVybiB2YWx1ZS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkgPT09IFwidHJ1ZVwiXG5cdFx0XHRcdFx0PyB0cnVlXG5cdFx0XHRcdFx0OiB2YWx1ZS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkgPT09IFwiZmFsc2VcIlxuXHRcdFx0XHRcdFx0PyBmYWxzZVxuXHRcdFx0XHRcdFx0OiB2YWx1ZTtcblxuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBHZXQgYSByYW5kb20gdW5pcXVlIElkLCBjaGVja2luZyBhbiBvcHRpb25hbCBzdXBwbGllZCBhcnJheSBvZiBpZHMgZm9yIGEgbWF0Y2hcblx0ICogQHBhcmFtIHsqfSBleGlzdGluZ0lkc1xuXHQgKiBAcGFyYW0gcm9vdDBcblx0ICogQHBhcmFtIHJvb3QwLml0ZXJhdGlvbnNcblx0ICogQHBhcmFtIHJvb3QwLmxlbmd0aFxuXHQgKi9cblx0c3RhdGljIGNyZWF0ZUlkKGV4aXN0aW5nSWRzID0gW10sIHsgaXRlcmF0aW9ucyA9IDEwMDAwLCBsZW5ndGggPSAxNiB9ID0ge30pIHtcblx0XHRmb3IgKGxldCBhdHRlbXB0ID0gMDsgYXR0ZW1wdCA8IGl0ZXJhdGlvbnM7IGF0dGVtcHQrKykge1xuXHRcdFx0Y29uc3QgaWQgPSBmb3VuZHJ5LnV0aWxzLnJhbmRvbUlEKGxlbmd0aCk7XG5cdFx0XHRpZiAoIWV4aXN0aW5nSWRzLmluY2x1ZGVzKGlkKSkge1xuXHRcdFx0XHRyZXR1cm4gaWQ7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0dGhyb3cgbmV3IEVycm9yKFxuXHRcdFx0YENvbWJhdCBVdGlsaXR5IEJlbHQgLSBTaWRla2ljayB8IFRyaWVkIHRvIGNyZWF0ZSBhIHVuaXF1ZSBpZCBvdmVyICR7aXRlcmF0aW9uc30gaXRlcmF0aW9ucyBhbmQgZmFpbGVkLmBcblx0XHQpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEZvciBhIGdpdmVuIHN0cmluZyBnZW5lcmF0ZSBhIHNsdWcsIG9wdGlvbmFsbHkgY2hlY2tpbmcgYSBsaXN0IG9mIGV4aXN0aW5nIElkcyBmb3IgdW5pcXVlbmVzc1xuXHQgKiBAcGFyYW0geyp9IHN0cmluZ1xuXHQgKiBAcGFyYW0geyp9IGlkTGlzdFxuXHQgKi9cblx0c3RhdGljIGdlbmVyYXRlVW5pcXVlU2x1Z0lkKHN0cmluZywgaWRMaXN0ID0gW10pIHtcblx0XHRsZXQgc2x1ZyA9IHN0cmluZy5zbHVnaWZ5KCk7XG5cblx0XHRjb25zdCBleGlzdGluZ0lkcyA9IGlkTGlzdC5maWx0ZXIoKGlkKSA9PiBpZCA9PT0gc2x1Zyk7XG5cblx0XHRpZiAoIWV4aXN0aW5nSWRzLmxlbmd0aCkgcmV0dXJuIHNsdWc7XG5cblx0XHRjb25zdCB1bmlxdWVJbmRleCA9IGV4aXN0aW5nSWRzLmxlbmd0aCA+IDEgPyBNYXRoLm1heCguLi5leGlzdGluZ0lkcy5tYXAoKGlkKSA9PiBpZC5tYXRjaCgvXFxkKy9nKVswXSkpICsgMSA6IDE7XG5cdFx0c2x1ZyA9IHNsdWcucmVwbGFjZSgvXFxkKyQvZywgdW5pcXVlSW5kZXgpO1xuXG5cdFx0cmV0dXJuIHNsdWc7XG5cdH1cblxuXHQvKipcblx0ICogRm9yIGEgZ2l2ZW4gZmlsZSBwYXRoLCBmaW5kIHRoZSBmaWxlbmFtZSBhbmQgdGhlbiBhcHBseSB0aXRsZSBjYXNlXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoXG5cdCAqIEByZXR1cm5zIHtzdHJpbmd9XG5cdCAqL1xuXHRzdGF0aWMgZ2V0TmFtZUZyb21GaWxlUGF0aChwYXRoKSB7XG5cdFx0aWYgKCFwYXRoKSByZXR1cm4gbnVsbDtcblxuXHRcdGNvbnN0IGZpbGUgPSBwYXRoLnNwbGl0KFwiXFxcXFwiKS5wb3AoKVxuXHRcdFx0LnNwbGl0KFwiL1wiKVxuXHRcdFx0LnBvcCgpO1xuXG5cdFx0aWYgKCFmaWxlKSByZXR1cm4gbnVsbDtcblxuXHRcdGNvbnN0IGZpbGVuYW1lID0gZmlsZS5yZXBsYWNlKC9cXC5bXi8uXSskLywgXCJcIik7XG5cblx0XHRpZiAoIWZpbGVuYW1lKSByZXR1cm4gbnVsbDtcblxuXHRcdGNvbnN0IG5hbWUgPSBmaWxlbmFtZS50aXRsZUNhc2UoKTtcblx0XHRyZXR1cm4gbmFtZTtcblx0fVxuXG5cdC8qKlxuXHQgKiBMb2FkcyB0ZW1wbGF0ZXMgZm9yIHBhcnRpYWxzXG5cdCAqL1xuXHRzdGF0aWMgYXN5bmMgbG9hZFRlbXBsYXRlcygpIHtcblx0XHRjb25zdCB0ZW1wbGF0ZXMgPSBbXG5cdFx0XHRcIm1vZHVsZXMvY29uZGl0aW9uLWxhYi10cmlnZ2xlci90ZW1wbGF0ZXMvcGFydGlhbHMvY2hhdC1jYXJkLWNvbmRpdGlvbi1saXN0Lmhic1wiLFxuXHRcdFx0XCJtb2R1bGVzL2NvbmRpdGlvbi1sYWItdHJpZ2dsZXIvdGVtcGxhdGVzL3BhcnRpYWxzL2NvbmRpdGlvbi1sYWItcm93Lmhic1wiLFxuXHRcdFx0XCJtb2R1bGVzL2NvbmRpdGlvbi1sYWItdHJpZ2dsZXIvdGVtcGxhdGVzL3BhcnRpYWxzL3RyaWdnbGVyLWljb24uaGJzXCJcblx0XHRdO1xuXHRcdGF3YWl0IGxvYWRUZW1wbGF0ZXModGVtcGxhdGVzKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBDb252ZXJ0cyB0aGUgZ2l2ZW4gc3RyaW5nIHRvIGNhbWVsQ2FzZSB1c2luZyB0aGUgcHJvdmlkZWQgZGVsaW1pdGVyIHRvIGJyZWFrIHVwIHdvcmRzXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmdcblx0ICogQHBhcmFtIHtzdHJpbmd9IGRlbGltaXRlclxuXHQgKiBAcmV0dXJucyB0aGUgY29udmVydGVkIHN0cmluZ1xuXHQgKiBAZXhhbXBsZSBTaWRla2ljay50b0NhbWVsQ2FzZShcIm15LWNvb2wtc3RyaW5nXCIsIFwiLVwiKSAvLyByZXR1cm5zIFwibXlDb29sU3RyaW5nXCJcblx0ICovXG5cdHN0YXRpYyB0b0NhbWVsQ2FzZShzdHJpbmcsIGRlbGltaXRlcikge1xuXHRcdGNvbnN0IHN0cmluZ1BhcnRzID0gc3RyaW5nLnNwbGl0KGRlbGltaXRlcik7XG5cdFx0cmV0dXJuIHN0cmluZ1BhcnRzIGluc3RhbmNlb2YgQXJyYXlcblx0XHRcdD8gc3RyaW5nUGFydHMucmVkdWNlKChjYW1lbFN0cmluZywgcGFydCwgaW5kZXgpID0+IHtcblx0XHRcdFx0cmV0dXJuIChjYW1lbFN0cmluZyArPSBpbmRleCA+IDAgPyBwYXJ0LnRpdGxlQ2FzZSgpIDogcGFydCk7XG5cdFx0XHR9LCBcIlwiKVxuXHRcdFx0OiBzdHJpbmdQYXJ0cztcblx0fVxufVxuIiwiaW1wb3J0IHsgU2lkZWtpY2sgfSBmcm9tIFwiLi4vc2lkZWtpY2suanNcIjtcblxuLyoqXG4gKiBCdWlsZHMgYSBtYXBwaW5nIGJldHdlZW4gc3RhdHVzIGljb25zIGFuZCBqb3VybmFsIGVudHJpZXMgdGhhdCByZXByZXNlbnQgY29uZGl0aW9uc1xuICovXG5leHBvcnQgY2xhc3MgRW5oYW5jZWRDb25kaXRpb25zIHtcblx0LyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblx0LyogICAgICAgICAgICAgICAgICAgSGFuZGxlcnMgICAgICAgICAgICAgICAgICAgKi9cblx0LyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvKipcblx0ICogUmVhZHkgSG9vayBoYW5kbGVyXG5cdCAqIFN0ZXBzOlxuXHQgKiAxLiBHZXQgZGVmYXVsdCBtYXBzXG5cdCAqIDIuIEdldCBtYXBUeXBlXG5cdCAqIDMuIEdldCBDb25kaXRpb24gTWFwXG5cdCAqIDQuIE92ZXJyaWRlIHN0YXR1cyBlZmZlY3RzXG5cdCAqL1xuXHRzdGF0aWMgYXN5bmMgX29uUmVhZHkoKSB7XG5cdFx0Z2FtZS5jbHQuZW5oYW5jZWRDb25kaXRpb25zLnN1cHBvcnRlZCA9IGZhbHNlO1xuXHRcdGlmIChDT05GSUcuc3RhdHVzRWZmZWN0cy5sZW5ndGggJiYgdHlwZW9mIENPTkZJRy5zdGF0dXNFZmZlY3RzWzBdID09IFwic3RyaW5nXCIpIHtcblx0XHRcdGNvbnNvbGUud2FybihnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5TaW1wbGVJY29uc05vdFN1cHBvcnRlZFwiKSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0bGV0IGRlZmF1bHRNYXBzID0gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiZGVmYXVsdENvbmRpdGlvbk1hcHNcIik7XG5cdFx0bGV0IGNvbmRpdGlvbk1hcCA9IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImFjdGl2ZUNvbmRpdGlvbk1hcFwiKTtcblxuXHRcdGNvbnN0IG1hcFR5cGUgPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJjb25kaXRpb25NYXBUeXBlXCIpO1xuXG5cdFx0Ly8gSWYgdGhlcmUncyBubyBkZWZhdWx0TWFwcyBvciBkZWZhdWx0TWFwcyBkb2Vzbid0IGluY2x1ZGUgZ2FtZSBzeXN0ZW0sIGNoZWNrIHN0b3JhZ2UgdGhlbiBzZXQgYXBwcm9wcmlhdGVseVxuXHRcdGlmIChcblx0XHRcdCFkZWZhdWx0TWFwc1xuXHRcdFx0fHwgT2JqZWN0LmtleXMoZGVmYXVsdE1hcHMpLmxlbmd0aCA9PT0gMFxuXHRcdFx0fHwgIU9iamVjdC5rZXlzKGRlZmF1bHRNYXBzKS5pbmNsdWRlcyhnYW1lLnN5c3RlbS5pZClcblx0XHQpIHtcblx0XHRcdGlmIChnYW1lLnVzZXIuaXNHTSkge1xuXHRcdFx0XHRkZWZhdWx0TWFwcyA9IGF3YWl0IEVuaGFuY2VkQ29uZGl0aW9ucy5fbG9hZERlZmF1bHRNYXBzKCk7XG5cdFx0XHRcdGdhbWUuc2V0dGluZ3Muc2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImRlZmF1bHRDb25kaXRpb25NYXBzXCIsIGRlZmF1bHRNYXBzKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBJZiBtYXAgdHlwZSBpcyBub3Qgc2V0IGFuZCBhIGRlZmF1bHQgbWFwIGV4aXN0cyBmb3IgdGhlIHN5c3RlbSwgc2V0IG1hcHR5cGUgdG8gZGVmYXVsdFxuXHRcdGlmICghbWFwVHlwZSAmJiBkZWZhdWx0TWFwcyBpbnN0YW5jZW9mIE9iamVjdCAmJiBPYmplY3Qua2V5cyhkZWZhdWx0TWFwcykuaW5jbHVkZXMoZ2FtZS5zeXN0ZW0uaWQpKSB7XG5cdFx0XHRnYW1lLnNldHRpbmdzLnNldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJjb25kaXRpb25NYXBUeXBlXCIsIFwiZGVmYXVsdFwiKTtcblx0XHR9XG5cblx0XHQvLyBJZiB0aGVyZSdzIG5vIGNvbmRpdGlvbiBtYXAsIGdldCB0aGUgZGVmYXVsdCBvbmVcblx0XHRpZiAoIWNvbmRpdGlvbk1hcC5sZW5ndGgpIHtcblx0XHRcdC8vIFBhc3Mgb3ZlciBkZWZhdWx0TWFwcyBzaW5jZSB0aGUgc3RvcmFnZSB2ZXJzaW9uIGlzIHN0aWxsIGVtcHR5XG5cdFx0XHRjb25kaXRpb25NYXAgPSBFbmhhbmNlZENvbmRpdGlvbnMuZ2V0RGVmYXVsdE1hcChkZWZhdWx0TWFwcyk7XG5cblx0XHRcdGlmIChnYW1lLnVzZXIuaXNHTSkge1xuXHRcdFx0XHRjb25zdCBwcmVwYXJlZE1hcCA9IEVuaGFuY2VkQ29uZGl0aW9ucy5fcHJlcGFyZU1hcChjb25kaXRpb25NYXApO1xuXG5cdFx0XHRcdGlmIChwcmVwYXJlZE1hcD8ubGVuZ3RoKSB7XG5cdFx0XHRcdFx0Y29uZGl0aW9uTWFwID0gcHJlcGFyZWRNYXA/Lmxlbmd0aCA/IHByZXBhcmVkTWFwIDogY29uZGl0aW9uTWFwO1xuXHRcdFx0XHRcdGdhbWUuc2V0dGluZ3Muc2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImFjdGl2ZUNvbmRpdGlvbk1hcFwiLCBwcmVwYXJlZE1hcCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBJZiBtYXAgdHlwZSBpcyBub3Qgc2V0LCBub3cgc2V0IHRvIGRlZmF1bHRcblx0XHRpZiAoIW1hcFR5cGUgJiYgY29uZGl0aW9uTWFwLmxlbmd0aCkge1xuXHRcdFx0Z2FtZS5zZXR0aW5ncy5zZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiY29uZGl0aW9uTWFwVHlwZVwiLCBcImRlZmF1bHRcIik7XG5cdFx0fVxuXG5cdFx0Ly8gVXBkYXRlIHN0YXR1cyBpY29ucyBhY2NvcmRpbmdseVxuXHRcdGlmIChnYW1lLnVzZXIuaXNHTSkge1xuXHRcdFx0RW5oYW5jZWRDb25kaXRpb25zLl9iYWNrdXBDb3JlRWZmZWN0cygpO1xuXHRcdFx0RW5oYW5jZWRDb25kaXRpb25zLl9iYWNrdXBDb3JlU3BlY2lhbFN0YXR1c0VmZmVjdHMoKTtcblx0XHR9XG5cdFx0Y29uc3Qgc3BlY2lhbFN0YXR1c0VmZmVjdE1hcCA9IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLFxuXHRcdFx0XCJzcGVjaWFsU3RhdHVzRWZmZWN0TWFwcGluZ1wiXG5cdFx0KTtcblx0XHRpZiAoY29uZGl0aW9uTWFwLmxlbmd0aCkgRW5oYW5jZWRDb25kaXRpb25zLl91cGRhdGVTdGF0dXNFZmZlY3RzKGNvbmRpdGlvbk1hcCk7XG5cdFx0aWYgKHNwZWNpYWxTdGF0dXNFZmZlY3RNYXApIGZvdW5kcnkudXRpbHMubWVyZ2VPYmplY3QoQ09ORklHLnNwZWNpYWxTdGF0dXNFZmZlY3RzLCBzcGVjaWFsU3RhdHVzRWZmZWN0TWFwKTtcblx0XHRzZXRJbnRlcnZhbChFbmhhbmNlZENvbmRpdGlvbnMudXBkYXRlQ29uZGl0aW9uVGltZXN0YW1wcywgMTUwMDApO1xuXG5cdFx0Ly8gU2F2ZSB0aGUgYWN0aXZlIGNvbmRpdGlvbiBtYXAgdG8gYSBjb252ZW5pZW5jZSBwcm9wZXJ0eVxuXHRcdGlmIChnYW1lLmNsdCkge1xuXHRcdFx0Z2FtZS5jbHQuY29uZGl0aW9ucyA9IGNvbmRpdGlvbk1hcDtcblx0XHR9XG5cblx0XHRnYW1lLmNsdC5lbmhhbmNlZENvbmRpdGlvbnMuc3VwcG9ydGVkID0gdHJ1ZTtcblx0fVxuXG5cdHN0YXRpYyBfb25QcmVVcGRhdGVUb2tlbih0b2tlbiwgdXBkYXRlLCBvcHRpb25zLCB1c2VySWQpIHtcblx0XHQvLyBJZiB0aGUgdXBkYXRlIGluY2x1ZGVzIGVmZmVjdCBkYXRhLCBhZGQgYW4gYG9wdGlvbmAgZm9yIHRoZSB1cGRhdGUgaG9vayBoYW5kbGVyIHRvIGxvb2sgZm9yXG5cdFx0Y29uc3QgY3ViT3B0aW9uID0gKG9wdGlvbnNbXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCJdID0gb3B0aW9uc1tcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIl0gPz8ge30pO1xuXG5cdFx0aWYgKGhhc1Byb3BlcnR5KHVwZGF0ZSwgXCJhY3RvckRhdGEuZWZmZWN0c1wiKSkge1xuXHRcdFx0Y3ViT3B0aW9uLmV4aXN0aW5nRWZmZWN0cyA9IHRva2VuLmFjdG9yRGF0YS5lZmZlY3RzID8/IFtdO1xuXHRcdFx0Y3ViT3B0aW9uLnVwZGF0ZUVmZmVjdHMgPSB1cGRhdGUuYWN0b3JEYXRhLmVmZmVjdHMgPz8gW107XG5cdFx0fVxuXG5cdFx0aWYgKGhhc1Byb3BlcnR5KHVwZGF0ZSwgXCJvdmVybGF5RWZmZWN0XCIpKSB7XG5cdFx0XHRjdWJPcHRpb24uZXhpc3RpbmdPdmVybGF5ID0gdG9rZW4ub3ZlcmxheUVmZmVjdCA/PyBudWxsO1xuXHRcdFx0Y3ViT3B0aW9uLnVwZGF0ZU92ZXJsYXkgPSB1cGRhdGUub3ZlcmxheUVmZmVjdCA/PyBudWxsO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0c3RhdGljIF9vblVwZGF0ZVRva2VuKHRva2VuLCB1cGRhdGUsIG9wdGlvbnMsIHVzZXJJZCkge1xuXHRcdGlmICghZ2FtZS51c2VyLmlzR00gfHwgKGdhbWUudXNlcnMuZ2V0KHVzZXJJZCkuaXNHTSAmJiBnYW1lLnVzZXJJZCAhPT0gdXNlcklkKSkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIElmIHRoZSB1cGRhdGUgaW5jbHVkZXMgZWZmZWN0cywgY2FsbHMgdGhlIGpvdXJuYWwgZW50cnkgbG9va3VwXG5cdFx0aWYgKCFoYXNQcm9wZXJ0eShvcHRpb25zLCBcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIikpIHJldHVybjtcblxuXHRcdGNvbnN0IGN1Yk9wdGlvbiA9IG9wdGlvbnNbXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCJdO1xuXHRcdGNvbnN0IGFkZFVwZGF0ZSA9IGN1Yk9wdGlvbiA/IGN1Yk9wdGlvbj8udXBkYXRlRWZmZWN0cz8ubGVuZ3RoID4gY3ViT3B0aW9uPy5leGlzdGluZ0VmZmVjdHM/Lmxlbmd0aCA6IGZhbHNlO1xuXHRcdGNvbnN0IHJlbW92ZVVwZGF0ZSA9IGN1Yk9wdGlvbiA/IGN1Yk9wdGlvbj8uZXhpc3RpbmdFZmZlY3RzPy5sZW5ndGggPiBjdWJPcHRpb24/LnVwZGF0ZUVmZmVjdHM/Lmxlbmd0aCA6IGZhbHNlO1xuXHRcdGNvbnN0IHVwZGF0ZUVmZmVjdHMgPSBbXTtcblxuXHRcdGlmIChhZGRVcGRhdGUpIHtcblx0XHRcdGZvciAoY29uc3QgZSBvZiBjdWJPcHRpb24udXBkYXRlRWZmZWN0cykge1xuXHRcdFx0XHRpZiAoIWN1Yk9wdGlvbi5leGlzdGluZ0VmZmVjdHMuZmluZCgoeCkgPT4geC5faWQgPT09IGUuX2lkKSkgdXBkYXRlRWZmZWN0cy5wdXNoKHsgZWZmZWN0OiBlLCB0eXBlOiBcImVmZmVjdFwiLCBjaGFuZ2VUeXBlOiBcImFkZFwiIH0pO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChyZW1vdmVVcGRhdGUpIHtcblx0XHRcdGZvciAoY29uc3QgZSBvZiBjdWJPcHRpb24uZXhpc3RpbmdFZmZlY3RzKSB7XG5cdFx0XHRcdGlmICghY3ViT3B0aW9uLnVwZGF0ZUVmZmVjdHMuZmluZCgodSkgPT4gdS5faWQgPT09IGUuX2lkKSkgdXBkYXRlRWZmZWN0cy5wdXNoKHsgZWZmZWN0OiBlLCB0eXBlOiBcImVmZmVjdFwiLCBjaGFuZ2VUeXBlOiBcInJlbW92ZVwiIH0pO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICghY3ViT3B0aW9uLmV4aXN0aW5nT3ZlcmxheSAmJiBjdWJPcHRpb24udXBkYXRlT3ZlcmxheSkgdXBkYXRlRWZmZWN0cy5wdXNoKHsgZWZmZWN0OiBjdWJPcHRpb24udXBkYXRlT3ZlcmxheSwgdHlwZTogXCJvdmVybGF5XCIsIGNoYW5nZVR5cGU6IFwiYWRkXCIgfSk7XG5cdFx0ZWxzZSBpZiAoY3ViT3B0aW9uLmV4aXN0aW5nT3ZlcmxheSAmJiAhY3ViT3B0aW9uLnVwZGF0ZU92ZXJsYXkpIHVwZGF0ZUVmZmVjdHMucHVzaCh7IGVmZmVjdDogY3ViT3B0aW9uLmV4aXN0aW5nT3ZlcmxheSwgdHlwZTogXCJvdmVybGF5XCIsIGNoYW5nZVR5cGU6IFwicmVtb3ZlXCIgfSk7XG5cblx0XHRpZiAoIXVwZGF0ZUVmZmVjdHMubGVuZ3RoKSByZXR1cm47XG5cblx0XHRjb25zdCBhZGRDb25kaXRpb25zID0gW107XG5cdFx0Y29uc3QgcmVtb3ZlQ29uZGl0aW9ucyA9IFtdO1xuXG5cdFx0Zm9yIChjb25zdCBlZmZlY3Qgb2YgdXBkYXRlRWZmZWN0cykge1xuXHRcdFx0bGV0IGNvbmRpdGlvbiA9IG51bGw7XG5cdFx0XHQvLyBiYXNlZCBvbiB0aGUgdHlwZSwgZ2V0IHRoZSBjb25kaXRpb25cblx0XHRcdGlmIChlZmZlY3QudHlwZSA9PT0gXCJvdmVybGF5XCIpIGNvbmRpdGlvbiA9IEVuaGFuY2VkQ29uZGl0aW9ucy5nZXRDb25kaXRpb25zQnlJY29uKGVmZmVjdC5lZmZlY3QpO1xuXHRcdFx0ZWxzZSBpZiAoZWZmZWN0LnR5cGUgPT09IFwiZWZmZWN0XCIpIHtcblx0XHRcdFx0aWYgKCFoYXNQcm9wZXJ0eShlZmZlY3QsIGBlZmZlY3QuZmxhZ3MuY29uZGl0aW9uLWxhYi10cmlnZ2xlci4ke1wiY29uZGl0aW9uSWRcIn1gKSkgY29udGludWU7XG5cdFx0XHRcdGNvbnN0IGVmZmVjdElkID0gZWZmZWN0LmVmZmVjdC5mbGFnc1tcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIl0uY29uZGl0aW9uSWQ7XG5cdFx0XHRcdGNvbmRpdGlvbiA9IEVuaGFuY2VkQ29uZGl0aW9ucy5sb29rdXBFbnRyeU1hcHBpbmcoZWZmZWN0SWQpO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIWNvbmRpdGlvbikgY29udGludWU7XG5cblx0XHRcdGlmIChlZmZlY3QuY2hhbmdlVHlwZSA9PT0gXCJhZGRcIikgYWRkQ29uZGl0aW9ucy5wdXNoKGNvbmRpdGlvbik7XG5cdFx0XHRlbHNlIGlmIChlZmZlY3QuY2hhbmdlVHlwZSA9PT0gXCJyZW1vdmVcIikgcmVtb3ZlQ29uZGl0aW9ucy5wdXNoKGNvbmRpdGlvbik7XG5cdFx0fVxuXG5cdFx0aWYgKCFhZGRDb25kaXRpb25zLmxlbmd0aCAmJiAhcmVtb3ZlQ29uZGl0aW9ucy5sZW5ndGgpIHJldHVybjtcblxuXHRcdGNvbnN0IG91dHB1dENoYXRTZXR0aW5nID0gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiY29uZGl0aW9uc091dHB1dFRvQ2hhdFwiKTtcblxuXHRcdC8vIElmIGFueSBvZiB0aGUgYWRkQ29uZGl0aW9ucyBNYXJrcyBEZWZlYXRlZCwgbWFyayB0aGUgdG9rZW4ncyBjb21iYXRhbnRzIGRlZmVhdGVkXG5cdFx0aWYgKGFkZENvbmRpdGlvbnMuc29tZSgoYykgPT4gYz8ub3B0aW9ucz8ubWFya0RlZmVhdGVkKSkge1xuXHRcdFx0RW5oYW5jZWRDb25kaXRpb25zLl90b2dnbGVEZWZlYXRlZCh0b2tlbik7XG5cdFx0fVxuXG5cdFx0Ly8gSWYgYW55IG9mIHRoZSByZW1vdmVDb25kaXRpb25zIE1hcmtzIERlZmVhdGVkLCByZW1vdmUgdGhlIGRlZmVhdGVkIGZyb20gdGhlIHRva2VuJ3MgY29tYmF0YW50c1xuXHRcdGlmIChyZW1vdmVDb25kaXRpb25zLnNvbWUoKGMpID0+IGM/Lm9wdGlvbnM/Lm1hcmtEZWZlYXRlZCkpIHtcblx0XHRcdEVuaGFuY2VkQ29uZGl0aW9ucy5fdG9nZ2xlRGVmZWF0ZWQodG9rZW4sIHsgbWFya0RlZmVhdGVkOiBmYWxzZSB9KTtcblx0XHR9XG5cblx0XHQvLyBJZiBhbnkgb2YgdGhlIGNvbmRpdGlvbnMgUmVtb3ZlcyBPdGhlcnMsIHJlbW92ZSB0aGUgb3RoZXIgQ29uZGl0aW9uc1xuXHRcdGFkZENvbmRpdGlvbnMuc29tZSgoYykgPT4ge1xuXHRcdFx0aWYgKGM/Lm9wdGlvbnM/LnJlbW92ZU90aGVycykge1xuXHRcdFx0XHRFbmhhbmNlZENvbmRpdGlvbnMuX3JlbW92ZU90aGVyQ29uZGl0aW9ucyh0b2tlbiwgYy5pZCk7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0pO1xuXG5cdFx0Y29uc3QgY2hhdEFkZENvbmRpdGlvbnMgPSBhZGRDb25kaXRpb25zLmZpbHRlcigoYykgPT4gb3V0cHV0Q2hhdFNldHRpbmcgJiYgYy5vcHRpb25zPy5vdXRwdXRDaGF0KTtcblx0XHRjb25zdCBjaGF0UmVtb3ZlQ29uZGl0aW9ucyA9IHJlbW92ZUNvbmRpdGlvbnMuZmlsdGVyKChjKSA9PiBvdXRwdXRDaGF0U2V0dGluZyAmJiBjLm9wdGlvbnM/Lm91dHB1dENoYXQpO1xuXG5cdFx0Ly8gSWYgdGhlcmUncyBhbnkgY29uZGl0aW9ucyB0byBvdXRwdXQgdG8gY2hhdCwgZG8gc29cblx0XHRpZiAoY2hhdEFkZENvbmRpdGlvbnMubGVuZ3RoKSBFbmhhbmNlZENvbmRpdGlvbnMub3V0cHV0Q2hhdE1lc3NhZ2UodG9rZW4sIGNoYXRBZGRDb25kaXRpb25zLCB7IHR5cGU6IFwiYWRkZWRcIiB9KTtcblx0XHRpZiAoY2hhdFJlbW92ZUNvbmRpdGlvbnMubGVuZ3RoKSBFbmhhbmNlZENvbmRpdGlvbnMub3V0cHV0Q2hhdE1lc3NhZ2UodG9rZW4sIGNoYXRSZW1vdmVDb25kaXRpb25zLCB7IHR5cGU6IFwicmVtb3ZlZFwiIH0pO1xuXG5cdFx0Ly8gcHJvY2VzcyBtYWNyb3Ncblx0XHRjb25zdCBhZGRNYWNyb0lkcyA9IGFkZENvbmRpdGlvbnMuZmxhdE1hcCgoYykgPT5cblx0XHRcdGMubWFjcm9zPy5maWx0ZXIoKG0pID0+IG0uaWQgJiYgbS50eXBlID09PSBcImFwcGx5XCIpLm1hcCgobSkgPT4gbS5pZClcblx0XHQpO1xuXHRcdGNvbnN0IHJlbW92ZU1hY3JvSWRzID0gcmVtb3ZlQ29uZGl0aW9ucy5mbGF0TWFwKChjKSA9PlxuXHRcdFx0Yy5tYWNyb3M/LmZpbHRlcigobSkgPT4gbS5pZCAmJiBtLnR5cGUgPT09IFwicmVtb3ZlXCIpLm1hcCgobSkgPT4gbS5pZClcblx0XHQpO1xuXHRcdGNvbnN0IG1hY3JvSWRzID0gWy4uLmFkZE1hY3JvSWRzLCAuLi5yZW1vdmVNYWNyb0lkc107XG5cdFx0aWYgKG1hY3JvSWRzLmxlbmd0aCkgRW5oYW5jZWRDb25kaXRpb25zLl9wcm9jZXNzTWFjcm9zKG1hY3JvSWRzLCB0b2tlbik7XG5cdH1cblxuXHRzdGF0aWMgX29uQ3JlYXRlQWN0aXZlRWZmZWN0KGVmZmVjdCwgb3B0aW9ucywgdXNlcklkKSB7XG5cdFx0aWYgKCFnYW1lLnVzZXIuaXNHTSB8fCAoZ2FtZS51c2Vycy5nZXQodXNlcklkKS5pc0dNICYmIGdhbWUudXNlcklkICE9PSB1c2VySWQpKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdEVuaGFuY2VkQ29uZGl0aW9ucy5fcHJvY2Vzc0FjdGl2ZUVmZmVjdENoYW5nZShlZmZlY3QsIFwiY3JlYXRlXCIpO1xuXHR9XG5cblx0c3RhdGljIF9vbkRlbGV0ZUFjdGl2ZUVmZmVjdChlZmZlY3QsIG9wdGlvbnMsIHVzZXJJZCkge1xuXHRcdGlmICghZ2FtZS51c2VyLmlzR00gfHwgKGdhbWUudXNlcnMuZ2V0KHVzZXJJZCkuaXNHTSAmJiBnYW1lLnVzZXJJZCAhPT0gdXNlcklkKSkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRFbmhhbmNlZENvbmRpdGlvbnMuX3Byb2Nlc3NBY3RpdmVFZmZlY3RDaGFuZ2UoZWZmZWN0LCBcImRlbGV0ZVwiKTtcblx0fVxuXG5cdHN0YXRpYyBfb25VcGRhdGVDb21iYXQoY29tYmF0LCB1cGRhdGUsIG9wdGlvbnMsIHVzZXJJZCkge1xuXHRcdGNvbnN0IGVuYWJsZU91dHB1dENvbWJhdCA9IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImNvbmRpdGlvbnNPdXRwdXREdXJpbmdDb21iYXRcIik7XG5cdFx0Y29uc3Qgb3V0cHV0Q2hhdFNldHRpbmcgPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJjb25kaXRpb25zT3V0cHV0VG9DaGF0XCIpO1xuXHRcdGNvbnN0IGNvbWJhdGFudCA9IGNvbWJhdC5jb21iYXRhbnQ7XG5cblx0XHRpZiAoXG5cdFx0XHQhaGFzUHJvcGVydHkodXBkYXRlLCBcInR1cm5cIilcblx0XHRcdHx8ICFjb21iYXRhbnRcblx0XHRcdHx8ICFvdXRwdXRDaGF0U2V0dGluZ1xuXHRcdFx0fHwgIWVuYWJsZU91dHB1dENvbWJhdFxuXHRcdFx0fHwgIWdhbWUudXNlci5pc0dNXG5cdFx0KSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Y29uc3QgdG9rZW4gPSBjb21iYXRhbnQudG9rZW47XG5cblx0XHRpZiAoIXRva2VuKSByZXR1cm47XG5cblx0XHRjb25zdCB0b2tlbkNvbmRpdGlvbnMgPSBFbmhhbmNlZENvbmRpdGlvbnMuZ2V0Q29uZGl0aW9ucyh0b2tlbiwgeyB3YXJuOiBmYWxzZSB9KTtcblx0XHRsZXQgY29uZGl0aW9ucyA9IHRva2VuQ29uZGl0aW9ucyAmJiB0b2tlbkNvbmRpdGlvbnMuY29uZGl0aW9ucyA/IHRva2VuQ29uZGl0aW9ucy5jb25kaXRpb25zIDogW107XG5cdFx0Y29uZGl0aW9ucyA9IGNvbmRpdGlvbnMgaW5zdGFuY2VvZiBBcnJheSA/IGNvbmRpdGlvbnMgOiBbY29uZGl0aW9uc107XG5cblx0XHRpZiAoIWNvbmRpdGlvbnMubGVuZ3RoKSByZXR1cm47XG5cblx0XHRjb25zdCBjaGF0Q29uZGl0aW9ucyA9IGNvbmRpdGlvbnMuZmlsdGVyKChjKSA9PiBjLm9wdGlvbnM/Lm91dHB1dENoYXQpO1xuXG5cdFx0aWYgKCFjaGF0Q29uZGl0aW9ucy5sZW5ndGgpIHJldHVybjtcblxuXHRcdEVuaGFuY2VkQ29uZGl0aW9ucy5vdXRwdXRDaGF0TWVzc2FnZSh0b2tlbiwgY2hhdENvbmRpdGlvbnMsIHsgdHlwZTogXCJhY3RpdmVcIiB9KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBSZW5kZXIgQ2hhdCBNZXNzYWdlIGhhbmRsZXJcblx0ICogQHBhcmFtIHsqfSBhcHBcblx0ICogQHBhcmFtIHsqfSBodG1sXG5cdCAqIEBwYXJhbSB7Kn0gZGF0YVxuXHQgKiBAdG9kbyBtb3ZlIHRvIGNoYXRsb2cgcmVuZGVyP1xuXHQgKi9cblx0c3RhdGljIGFzeW5jIF9vblJlbmRlckNoYXRNZXNzYWdlKGFwcCwgaHRtbCwgZGF0YSkge1xuXHRcdGlmIChkYXRhLm1lc3NhZ2UuY29udGVudCAmJiAhZGF0YS5tZXNzYWdlLmNvbnRlbnQubWF0Y2goXCJlbmhhbmNlZC1jb25kaXRpb25zXCIpKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Y29uc3Qgc3BlYWtlciA9IGRhdGEubWVzc2FnZS5zcGVha2VyO1xuXG5cdFx0aWYgKCFzcGVha2VyKSByZXR1cm47XG5cblx0XHRjb25zdCByZW1vdmVDb25kaXRpb25BbmNob3IgPSBodG1sLmZpbmQoXCJhW25hbWU9J3JlbW92ZS1yb3cnXVwiKTtcblx0XHRjb25zdCB1bmRvUmVtb3ZlQW5jaG9yID0gaHRtbC5maW5kKFwiYVtuYW1lPSd1bmRvLXJlbW92ZSddXCIpO1xuXG5cdFx0aWYgKCFnYW1lLnVzZXIuaXNHTSkge1xuXHRcdFx0cmVtb3ZlQ29uZGl0aW9uQW5jaG9yLnBhcmVudCgpLmhpZGUoKTtcblx0XHRcdHVuZG9SZW1vdmVBbmNob3IucGFyZW50KCkuaGlkZSgpO1xuXHRcdH1cblxuXHRcdC8qKlxuXHRcdCAqIEB0b2RvICMyODQgbW92ZSB0byBjaGF0bG9nIGxpc3RlbmVyIGluc3RlYWRcblx0XHQgKi9cblx0XHRyZW1vdmVDb25kaXRpb25BbmNob3Iub24oXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcblx0XHRcdGNvbnN0IGNvbmRpdGlvbkxpc3RJdGVtID0gZXZlbnQudGFyZ2V0LmNsb3Nlc3QoXCJsaVwiKTtcblx0XHRcdGNvbnN0IGNvbmRpdGlvbk5hbWUgPSBjb25kaXRpb25MaXN0SXRlbS5kYXRhc2V0LmNvbmRpdGlvbk5hbWU7XG5cdFx0XHRjb25zdCBtZXNzYWdlTGlzdEl0ZW0gPSBjb25kaXRpb25MaXN0SXRlbT8ucGFyZW50RWxlbWVudD8uY2xvc2VzdChcImxpXCIpO1xuXHRcdFx0Y29uc3QgbWVzc2FnZUlkID0gbWVzc2FnZUxpc3RJdGVtPy5kYXRhc2V0Py5tZXNzYWdlSWQ7XG5cdFx0XHRjb25zdCBtZXNzYWdlID0gbWVzc2FnZUlkID8gZ2FtZS5tZXNzYWdlcy5nZXQobWVzc2FnZUlkKSA6IG51bGw7XG5cblx0XHRcdGlmICghbWVzc2FnZSkgcmV0dXJuO1xuXG5cdFx0XHRjb25zdCBhY3RvciA9IENoYXRNZXNzYWdlLmdldFNwZWFrZXJBY3RvcihtZXNzYWdlLnNwZWFrZXIpO1xuXG5cdFx0XHRFbmhhbmNlZENvbmRpdGlvbnMucmVtb3ZlQ29uZGl0aW9uKGNvbmRpdGlvbk5hbWUsIGFjdG9yLCB7IHdhcm46IGZhbHNlIH0pO1xuXHRcdH0pO1xuXG5cdFx0dW5kb1JlbW92ZUFuY2hvci5vbihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuXHRcdFx0Y29uc3QgY29uZGl0aW9uTGlzdEl0ZW0gPSBldmVudC50YXJnZXQuY2xvc2VzdChcImxpXCIpO1xuXHRcdFx0Y29uc3QgY29uZGl0aW9uTmFtZSA9IGNvbmRpdGlvbkxpc3RJdGVtLmRhdGFzZXQuY29uZGl0aW9uTmFtZTtcblx0XHRcdGNvbnN0IG1lc3NhZ2VMaXN0SXRlbSA9IGNvbmRpdGlvbkxpc3RJdGVtPy5wYXJlbnRFbGVtZW50Py5jbG9zZXN0KFwibGlcIik7XG5cdFx0XHRjb25zdCBtZXNzYWdlSWQgPSBtZXNzYWdlTGlzdEl0ZW0/LmRhdGFzZXQ/Lm1lc3NhZ2VJZDtcblx0XHRcdGNvbnN0IG1lc3NhZ2UgPSBtZXNzYWdlSWQgPyBnYW1lLm1lc3NhZ2VzLmdldChtZXNzYWdlSWQpIDogbnVsbDtcblxuXHRcdFx0aWYgKCFtZXNzYWdlKSByZXR1cm47XG5cblx0XHRcdGNvbnN0IHNwZWFrZXIgPSBtZXNzYWdlPy5zcGVha2VyO1xuXG5cdFx0XHRpZiAoIXNwZWFrZXIpIHJldHVybjtcblxuXHRcdFx0Y29uc3QgdG9rZW4gPSBjYW52YXMudG9rZW5zLmdldChzcGVha2VyLnRva2VuKTtcblx0XHRcdGNvbnN0IGFjdG9yID0gZ2FtZS5hY3RvcnMuZ2V0KHNwZWFrZXIuYWN0b3IpO1xuXHRcdFx0Y29uc3QgZW50aXR5ID0gdG9rZW4gPz8gYWN0b3I7XG5cblx0XHRcdGlmICghZW50aXR5KSByZXR1cm47XG5cblx0XHRcdEVuaGFuY2VkQ29uZGl0aW9ucy5hZGRDb25kaXRpb24oY29uZGl0aW9uTmFtZSwgZW50aXR5KTtcblx0XHR9KTtcblx0fVxuXG5cdHN0YXRpYyBhc3luYyBfb25SZW5kZXJDaGF0TG9nKGFwcCwgaHRtbCwgZGF0YSkge1xuXHRcdEVuaGFuY2VkQ29uZGl0aW9ucy51cGRhdGVDb25kaXRpb25UaW1lc3RhbXBzKCk7XG5cdH1cblxuXHRzdGF0aWMgYXN5bmMgX29uUmVuZGVyQ29tYmF0VHJhY2tlcihhcHAsIGh0bWwsIGRhdGEpIHtcblx0XHRjb25zdCBlZmZlY3RJY29ucyA9IGh0bWwuZmluZChcImltZ1tjbGFzcz0ndG9rZW4tZWZmZWN0J11cIik7XG5cblx0XHRlZmZlY3RJY29ucy5lYWNoKChpbmRleCwgZWxlbWVudCkgPT4ge1xuXHRcdFx0Y29uc3QgdXJsID0gbmV3IFVSTChlbGVtZW50LnNyYyk7XG5cdFx0XHRjb25zdCBwYXRoID0gdXJsPy5wYXRobmFtZT8uc3Vic3RyaW5nKDEpO1xuXHRcdFx0Y29uc3QgY29uZGl0aW9ucyA9IEVuaGFuY2VkQ29uZGl0aW9ucy5nZXRDb25kaXRpb25zQnlJY29uKHBhdGgpO1xuXHRcdFx0Y29uc3Qgc3RhdHVzRWZmZWN0ID0gQ09ORklHLnN0YXR1c0VmZmVjdHMuZmluZCgoZSkgPT4gZS5pY29uID09PSBwYXRoKTtcblxuXHRcdFx0aWYgKGNvbmRpdGlvbnM/Lmxlbmd0aCkge1xuXHRcdFx0XHRlbGVtZW50LnRpdGxlID0gY29uZGl0aW9uc1swXTtcblx0XHRcdH0gZWxzZSBpZiAoc3RhdHVzRWZmZWN0Py5sYWJlbCkge1xuXHRcdFx0XHRlbGVtZW50LnRpdGxlID0gZ2FtZS5pMThuLmxvY2FsaXplKHN0YXR1c0VmZmVjdC5sYWJlbCk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH1cblxuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXHQvKiAgICAgICAgICAgICAgICAgICAgV29ya2VycyAgICAgICAgICAgICAgICAgICAqL1xuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8qKlxuXHQgKiBQcm9jZXNzIHRoZSBhZGRpdGlvbi9yZW1vdmFsIG9mIGFuIEFjdGl2ZSBFZmZlY3Rcblx0ICogQHBhcmFtIHtBY3RpdmVFZmZlY3R9IGVmZmVjdCAgdGhlIGVmZmVjdFxuXHQgKiBAcGFyYW0ge3N0cmluZ30gdHlwZSAgdGhlIHR5cGUgb2YgY2hhbmdlIHRvIHByb2Nlc3Ncblx0ICovXG5cdHN0YXRpYyBfcHJvY2Vzc0FjdGl2ZUVmZmVjdENoYW5nZShlZmZlY3QsIHR5cGUgPSBcImNyZWF0ZVwiKSB7XG5cdFx0aWYgKCEoZWZmZWN0IGluc3RhbmNlb2YgQWN0aXZlRWZmZWN0KSkgcmV0dXJuO1xuXG5cdFx0Y29uc3QgZWZmZWN0SWQgPSBlZmZlY3QuZ2V0RmxhZyhcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJjb25kaXRpb25JZFwiKTtcblx0XHRpZiAoIWVmZmVjdElkKSByZXR1cm47XG5cblx0XHRjb25zdCBjb25kaXRpb24gPSBFbmhhbmNlZENvbmRpdGlvbnMubG9va3VwRW50cnlNYXBwaW5nKGVmZmVjdElkKTtcblxuXHRcdGlmICghY29uZGl0aW9uKSByZXR1cm47XG5cblx0XHRjb25zdCBzaG91bGRPdXRwdXQgPVxuXHRcdFx0Z2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiY29uZGl0aW9uc091dHB1dFRvQ2hhdFwiKSAmJiBjb25kaXRpb24ub3B0aW9ucy5vdXRwdXRDaGF0O1xuXHRcdGNvbnN0IG91dHB1dFR5cGUgPSB0eXBlID09PSBcImRlbGV0ZVwiID8gXCJyZW1vdmVkXCIgOiBcImFkZGVkXCI7XG5cdFx0Y29uc3QgYWN0b3IgPSBlZmZlY3QucGFyZW50O1xuXG5cdFx0aWYgKHNob3VsZE91dHB1dCkgRW5oYW5jZWRDb25kaXRpb25zLm91dHB1dENoYXRNZXNzYWdlKGFjdG9yLCBjb25kaXRpb24sIHsgdHlwZTogb3V0cHV0VHlwZSB9KTtcblx0XHRsZXQgbWFjcm9zID0gW107XG5cblx0XHRzd2l0Y2ggKHR5cGUpIHtcblx0XHRcdGNhc2UgXCJjcmVhdGVcIjpcblx0XHRcdFx0bWFjcm9zID0gY29uZGl0aW9uLm1hY3Jvcz8uZmlsdGVyKChtKSA9PiBtLnR5cGUgPT09IFwiYXBwbHlcIik7XG5cdFx0XHRcdGlmIChjb25kaXRpb24ub3B0aW9ucz8ucmVtb3ZlT3RoZXJzKSBFbmhhbmNlZENvbmRpdGlvbnMuX3JlbW92ZU90aGVyQ29uZGl0aW9ucyhhY3RvciwgY29uZGl0aW9uLmlkKTtcblx0XHRcdFx0aWYgKGNvbmRpdGlvbi5vcHRpb25zPy5tYXJrRGVmZWF0ZWQpIEVuaGFuY2VkQ29uZGl0aW9ucy5fdG9nZ2xlRGVmZWF0ZWQoYWN0b3IsIHsgbWFya0RlZmVhdGVkOiB0cnVlIH0pO1xuXG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlIFwiZGVsZXRlXCI6XG5cdFx0XHRcdG1hY3JvcyA9IGNvbmRpdGlvbi5tYWNyb3M/LmZpbHRlcigobSkgPT4gbS50eXBlID09PSBcInJlbW92ZVwiKTtcblx0XHRcdFx0aWYgKGNvbmRpdGlvbi5vcHRpb25zPy5tYXJrRGVmZWF0ZWQpIEVuaGFuY2VkQ29uZGl0aW9ucy5fdG9nZ2xlRGVmZWF0ZWQoYWN0b3IsIHsgbWFya0RlZmVhdGVkOiBmYWxzZSB9KTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblxuXHRcdGNvbnN0IG1hY3JvSWRzID0gbWFjcm9zPy5sZW5ndGggPyBtYWNyb3MuZmlsdGVyKChtKSA9PiBtLmlkKS5tYXAoKG0pID0+IG0uaWQpIDogbnVsbDtcblxuXHRcdGlmIChtYWNyb0lkcz8ubGVuZ3RoKSBFbmhhbmNlZENvbmRpdGlvbnMuX3Byb2Nlc3NNYWNyb3MobWFjcm9JZHMsIGFjdG9yKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBDaGVja3Mgc3RhdHVzRWZmZWN0IGljb25zIGFnYWluc3QgbWFwIGFuZCByZXR1cm5zIG1hdGNoaW5nIGNvbmRpdGlvbiBtYXBwaW5nc1xuXHQgKiBAcGFyYW0ge0FycmF5IHwgc3RyaW5nfSBlZmZlY3RJZHMgIEEgbGlzdCBvZiBlZmZlY3RJZHMsIG9yIGEgc2luZ2xlIGVmZmVjdElkIHRvIGNoZWNrXG5cdCAqIEBwYXJhbSB7QXJyYXl9IFttYXA9W11dICB0aGUgY29uZGl0aW9uIG1hcCB0byBsb29rIGluXG5cdCAqL1xuXHRzdGF0aWMgbG9va3VwRW50cnlNYXBwaW5nKGVmZmVjdElkcywgbWFwID0gW10pIHtcblx0XHRpZiAoIShlZmZlY3RJZHMgaW5zdGFuY2VvZiBBcnJheSkpIHtcblx0XHRcdGVmZmVjdElkcyA9IFtlZmZlY3RJZHNdO1xuXHRcdH1cblxuXHRcdGlmICghbWFwLmxlbmd0aCkge1xuXHRcdFx0bWFwID0gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiYWN0aXZlQ29uZGl0aW9uTWFwXCIpO1xuXHRcdFx0aWYgKCFtYXAubGVuZ3RoKSByZXR1cm4gbnVsbDtcblx0XHR9XG5cblx0XHRjb25zdCBjb25kaXRpb25FbnRyaWVzID0gbWFwLmZpbHRlcigocm93KSA9PlxuXHRcdFx0ZWZmZWN0SWRzLmluY2x1ZGVzKHJvdy5pZCA/PyBTaWRla2ljay5nZW5lcmF0ZVVuaXF1ZVNsdWdJZChyb3cubmFtZSkpXG5cdFx0KTtcblxuXHRcdGlmIChjb25kaXRpb25FbnRyaWVzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuXG5cdFx0cmV0dXJuIGNvbmRpdGlvbkVudHJpZXMubGVuZ3RoID4gMSA/IGNvbmRpdGlvbkVudHJpZXMgOiBjb25kaXRpb25FbnRyaWVzLnNoaWZ0KCk7XG5cdH1cblxuXHQvKipcblx0ICogT3V0cHV0IG9uZSBvciBtb3JlIGNvbmRpdGlvbiBlbnRyaWVzIHRvIGNoYXRcblx0ICogQHBhcmFtIGVudGl0eVxuXHQgKiBAcGFyYW0gZW50cmllc1xuXHQgKiBAcGFyYW0gb3B0aW9uc1xuXHQgKiBAdG9kbyByZWZhY3RvciB0byB1c2UgYWN0b3Igb3IgdG9rZW5cblx0ICovXG5cdHN0YXRpYyBhc3luYyBvdXRwdXRDaGF0TWVzc2FnZShlbnRpdHksIGVudHJpZXMsIG9wdGlvbnMgPSB7IHR5cGU6IFwiYWN0aXZlXCIgfSkge1xuXHRcdGNvbnN0IGlzQWN0b3JFbnRpdHkgPSBlbnRpdHkgaW5zdGFuY2VvZiBBY3Rvcjtcblx0XHQvLyBUdXJuIGEgc2luZ2xlIGNvbmRpdGlvbiBtYXBwaW5nIGVudHJ5IGludG8gYW4gYXJyYXlcblx0XHRlbnRyaWVzID0gZW50cmllcyBpbnN0YW5jZW9mIEFycmF5ID8gZW50cmllcyA6IFtlbnRyaWVzXTtcblxuXHRcdGlmICghZW50aXR5IHx8ICFlbnRyaWVzLmxlbmd0aCkgcmV0dXJuO1xuXG5cdFx0Y29uc3QgdHlwZSA9IHt9O1xuXG5cdFx0c3dpdGNoIChvcHRpb25zLnR5cGUpIHtcblx0XHRcdGNhc2UgXCJhZGRlZFwiOlxuXHRcdFx0XHR0eXBlLmFkZGVkID0gdHJ1ZTtcblx0XHRcdFx0dHlwZS50aXRsZSA9IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkNoYXRDYXJkLlRpdGxlLkFkZGVkXCIpO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSBcInJlbW92ZWRcIjpcblx0XHRcdFx0dHlwZS5yZW1vdmVkID0gdHJ1ZTtcblx0XHRcdFx0dHlwZS50aXRsZSA9IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkNoYXRDYXJkLlRpdGxlLlJlbW92ZWRcIik7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlIFwiYWN0aXZlXCI6XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHR0eXBlLmFjdGl2ZSA9IHRydWU7XG5cdFx0XHRcdHR5cGUudGl0bGUgPSBnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5DaGF0Q2FyZC5UaXRsZS5BY3RpdmVcIik7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblxuXHRcdGNvbnN0IGNoYXRVc2VyID0gZ2FtZS51c2VySWQ7XG5cdFx0Ly8gY29uc3QgdG9rZW4gPSB0b2tlbiB8fCB0aGlzLmN1cnJlbnRUb2tlbjtcblx0XHRjb25zdCBjaGF0VHlwZSA9IENPTlNULkNIQVRfTUVTU0FHRV9UWVBFUy5PVEhFUjtcblx0XHRjb25zdCBzcGVha2VyID0gaXNBY3RvckVudGl0eVxuXHRcdFx0PyBDaGF0TWVzc2FnZS5nZXRTcGVha2VyKHsgYWN0b3I6IGVudGl0eSB9KVxuXHRcdFx0OiBDaGF0TWVzc2FnZS5nZXRTcGVha2VyKHsgdG9rZW46IGVudGl0eSB9KTtcblx0XHRjb25zdCB0aW1lc3RhbXAgPSB0eXBlLmFjdGl2ZSA/IG51bGwgOiBEYXRlLm5vdygpO1xuXG5cdFx0Ly8gaXRlcmF0ZSBvdmVyIHRoZSBlbnRyaWVzIGFuZCBtYXJrIGFueSB3aXRoIHJlZmVyZW5jZXMgZm9yIHVzZSBpbiB0aGUgdGVtcGxhdGVcblx0XHRlbnRyaWVzLmZvckVhY2goKHYsIGksIGEpID0+IHtcblx0XHRcdGlmICh2LnJlZmVyZW5jZUlkKSB7XG5cdFx0XHRcdGlmICghdi5yZWZlcmVuY2VJZC5tYXRjaCgvXFx7LitcXH0vKSkge1xuXHRcdFx0XHRcdHYucmVmZXJlbmNlSWQgKz0gYHske3YubmFtZX19YDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGFbaV0uaGFzUmVmZXJlbmNlID0gdHJ1ZTtcblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdGNvbnN0IGNoYXRDYXJkSGVhZGluZyA9IGdhbWUuaTE4bi5sb2NhbGl6ZShcblx0XHRcdHR5cGUuYWN0aXZlID8gXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5DaGF0Q2FyZC5IZWFkaW5nQWN0aXZlXCIgOiBcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkNoYXRDYXJkLkhlYWRpbmdcIlxuXHRcdCk7XG5cblx0XHRjb25zdCB0ZW1wbGF0ZURhdGEgPSB7XG5cdFx0XHRjaGF0Q2FyZEhlYWRpbmcsXG5cdFx0XHR0eXBlLFxuXHRcdFx0dGltZXN0YW1wLFxuXHRcdFx0ZW50aXR5SWQ6IGVudGl0eS5pZCxcblx0XHRcdGFsaWFzOiBzcGVha2VyLmFsaWFzLFxuXHRcdFx0Y29uZGl0aW9uczogZW50cmllcyxcblx0XHRcdGlzT3duZXI6IGVudGl0eS5pc093bmVyIHx8IGdhbWUudXNlci5pc0dNXG5cdFx0fTtcblxuXHRcdC8vIGlmIHRoZSBsYXN0IG1lc3NhZ2UgRW5oYW5jZWQgY29uZGl0aW9ucywgYXBwZW5kIGluc3RlYWQgb2YgbWFraW5nIGEgbmV3IG9uZVxuXHRcdGNvbnN0IGxhc3RNZXNzYWdlID0gZ2FtZS5tZXNzYWdlcy5jb250ZW50c1tnYW1lLm1lc3NhZ2VzLmNvbnRlbnRzLmxlbmd0aCAtIDFdO1xuXHRcdGNvbnN0IGxhc3RNZXNzYWdlU3BlYWtlciA9IGxhc3RNZXNzYWdlPy5zcGVha2VyO1xuXHRcdGNvbnN0IHNhbWVTcGVha2VyID0gaXNBY3RvckVudGl0eVxuXHRcdFx0PyBsYXN0TWVzc2FnZVNwZWFrZXI/LmFjdG9yID09PSBzcGVha2VyLmFjdG9yXG5cdFx0XHQ6IGxhc3RNZXNzYWdlU3BlYWtlcj8udG9rZW4gPT09IHNwZWFrZXIudG9rZW47XG5cblx0XHQvLyBoYXJkIGNvZGUgdGhlIHJlY2VudCB0aW1lc3RhbXAgdG8gMzBzIGZvciBub3dcblx0XHRjb25zdCByZWNlbnRUaW1lc3RhbXAgPSBEYXRlLm5vdygpIDw9IChsYXN0TWVzc2FnZT8udGltZXN0YW1wID8/IDApICsgMzAwMDA7XG5cdFx0Y29uc3QgZW5oYW5jZWRDb25kaXRpb25zRGl2ID0gbGFzdE1lc3NhZ2U/LmNvbnRlbnQubWF0Y2goXCJlbmhhbmNlZC1jb25kaXRpb25zXCIpO1xuXG5cdFx0aWYgKCF0eXBlLmFjdGl2ZSAmJiBlbmhhbmNlZENvbmRpdGlvbnNEaXYgJiYgc2FtZVNwZWFrZXIgJiYgcmVjZW50VGltZXN0YW1wKSB7XG5cdFx0XHRsZXQgbmV3Q29udGVudCA9IFwiXCI7XG5cdFx0XHRmb3IgKGNvbnN0IGNvbmRpdGlvbiBvZiBlbnRyaWVzKSB7XG5cdFx0XHRcdGNvbnN0IG5ld1JvdyA9IGF3YWl0IHJlbmRlclRlbXBsYXRlKFxuXHRcdFx0XHRcdFwibW9kdWxlcy9jb25kaXRpb24tbGFiLXRyaWdnbGVyL3RlbXBsYXRlcy9wYXJ0aWFscy9jaGF0LWNhcmQtY29uZGl0aW9uLWxpc3QuaGJzXCIsXG5cdFx0XHRcdFx0eyBjb25kaXRpb24sIHR5cGUsIHRpbWVzdGFtcCB9XG5cdFx0XHRcdCk7XG5cdFx0XHRcdG5ld0NvbnRlbnQgKz0gbmV3Um93O1xuXHRcdFx0fVxuXHRcdFx0Y29uc3QgZXhpc3RpbmdDb250ZW50ID0gbGFzdE1lc3NhZ2UuY29udGVudDtcblx0XHRcdGNvbnN0IHVsRW5kID0gZXhpc3RpbmdDb250ZW50Py5pbmRleE9mKFwiPC91bD5cIik7XG5cdFx0XHRpZiAoIXVsRW5kKSByZXR1cm47XG5cdFx0XHRjb25zdCBjb250ZW50ID0gZXhpc3RpbmdDb250ZW50LnNsaWNlKDAsIHVsRW5kKSArIG5ld0NvbnRlbnQgKyBleGlzdGluZ0NvbnRlbnQuc2xpY2UodWxFbmQpO1xuXHRcdFx0YXdhaXQgbGFzdE1lc3NhZ2UudXBkYXRlKHsgY29udGVudCB9KTtcblx0XHRcdEVuaGFuY2VkQ29uZGl0aW9ucy51cGRhdGVDb25kaXRpb25UaW1lc3RhbXBzKCk7XG5cdFx0XHR1aS5jaGF0LnNjcm9sbEJvdHRvbSgpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRjb25zdCBjb250ZW50ID0gYXdhaXQgcmVuZGVyVGVtcGxhdGUoXG5cdFx0XHRcdFwibW9kdWxlcy9jb25kaXRpb24tbGFiLXRyaWdnbGVyL3RlbXBsYXRlcy9jaGF0LWNvbmRpdGlvbnMuaGJzXCIsXG5cdFx0XHRcdHRlbXBsYXRlRGF0YVxuXHRcdFx0KTtcblxuXHRcdFx0YXdhaXQgQ2hhdE1lc3NhZ2UuY3JlYXRlKHtcblx0XHRcdFx0c3BlYWtlcixcblx0XHRcdFx0Y29udGVudCxcblx0XHRcdFx0dHlwZTogY2hhdFR5cGUsXG5cdFx0XHRcdHVzZXI6IGNoYXRVc2VyXG5cdFx0XHR9KTtcblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogTWFya3MgYSBDb21iYXRhbnRzIGZvciBhIHBhcnRpY3VsYXIgZW50aXR5IGFzIGRlZmVhdGVkXG5cdCAqIEBwYXJhbSB7QWN0b3IgfCBUb2tlbn0gZW50aXRpZXMgIHRoZSBlbnRpdHkgdG8gbWFyayBkZWZlYXRlZFxuXHQgKiBAcGFyYW0ge2Jvb2xlYW59IG9wdGlvbnMubWFya0RlZmVhdGVkICBhbiBvcHRpb25hbCBzdGF0ZSBmbGFnIChkZWZhdWx0PXRydWUpXG5cdCAqL1xuXHRzdGF0aWMgX3RvZ2dsZURlZmVhdGVkKGVudGl0aWVzLCB7IG1hcmtEZWZlYXRlZCA9IHRydWUgfSA9IHt9KSB7XG5cdFx0Y29uc3QgY29tYmF0ID0gZ2FtZS5jb21iYXQ7XG5cblx0XHRpZiAoIWVudGl0aWVzKSB7XG5cdFx0XHQvLyBGaXJzdCBjaGVjayBmb3IgYW55IGNvbnRyb2xsZWQgdG9rZW5zXG5cdFx0XHRpZiAoY2FudmFzPy50b2tlbnM/LmNvbnRyb2xsZWQubGVuZ3RoKSBlbnRpdGllcyA9IGNhbnZhcy50b2tlbnMuY29udHJvbGxlZDtcblx0XHRcdGVsc2UgaWYgKGdhbWUudXNlci5jaGFyYWN0ZXIpIGVudGl0aWVzID0gZ2FtZS51c2VyLmNoYXJhY3Rlcjtcblx0XHR9XG5cblx0XHRpZiAoIWVudGl0aWVzKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0ZW50aXRpZXMgPSBlbnRpdGllcyBpbnN0YW5jZW9mIEFycmF5ID8gZW50aXRpZXMgOiBbZW50aXRpZXNdO1xuXG5cdFx0Y29uc3QgdG9rZW5zID0gZW50aXRpZXMuZmxhdE1hcCgoZSkgPT5cblx0XHRcdGUgaW5zdGFuY2VvZiBUb2tlbiB8fCBlIGluc3RhbmNlb2YgVG9rZW5Eb2N1bWVudCA/IGUgOiBlIGluc3RhbmNlb2YgQWN0b3IgPyBlLmdldEFjdGl2ZVRva2VucygpIDogbnVsbFxuXHRcdCk7XG5cblx0XHRjb25zdCB1cGRhdGVzID0gW107XG5cblx0XHQvLyBsb29wIHRocm91Z2ggdG9rZW5zLCBhbmQgaWYgdGhlcmUncyBtYXRjaGluZyBjb21iYXRhbnRzLCBhZGQgdGhlbSB0byB0aGUgdXBkYXRlXG5cdFx0Zm9yIChjb25zdCB0b2tlbiBvZiB0b2tlbnMpIHtcblx0XHRcdGNvbnN0IGNvbWJhdGFudHMgPSBjb21iYXRcblx0XHRcdFx0PyBjb21iYXQuY29tYmF0YW50cz8uY29udGVudHM/LmZpbHRlcigoYykgPT4gYy50b2tlbklkID09PSB0b2tlbi5pZCAmJiBjLmRlZmVhdGVkICE9PSBtYXJrRGVmZWF0ZWQpXG5cdFx0XHRcdDogW107XG5cblx0XHRcdGlmICghY29tYmF0YW50cy5sZW5ndGgpIHJldHVybjtcblxuXHRcdFx0Y29uc3QgdXBkYXRlID0gY29tYmF0YW50cy5tYXAoKGMpID0+IHtcblx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRfaWQ6IGMuaWQsXG5cdFx0XHRcdFx0ZGVmZWF0ZWQ6IG1hcmtEZWZlYXRlZFxuXHRcdFx0XHR9O1xuXHRcdFx0fSk7XG5cblx0XHRcdHVwZGF0ZXMucHVzaCh1cGRhdGUpO1xuXHRcdH1cblxuXHRcdGlmICghdXBkYXRlcy5sZW5ndGgpIHJldHVybjtcblxuXHRcdC8vIHVwZGF0ZSBhbGwgY29tYmF0YW50cyBhdCBvbmNlXG5cdFx0Y29tYmF0LnVwZGF0ZUVtYmVkZGVkRG9jdW1lbnRzKFwiQ29tYmF0YW50XCIsIHVwZGF0ZXMubGVuZ3RoID4gMSA/IHVwZGF0ZXMgOiB1cGRhdGVzLnNoaWZ0KCkpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEZvciBhIGdpdmVuIGVudGl0eSwgcmVtb3ZlcyBjb25kaXRpb25zIG90aGVyIHRoYW4gdGhlIG9uZSBzdXBwbGllZFxuXHQgKiBAcGFyYW0geyp9IGVudGl0eVxuXHQgKiBAcGFyYW0geyp9IGNvbmRpdGlvbklkXG5cdCAqL1xuXHRzdGF0aWMgYXN5bmMgX3JlbW92ZU90aGVyQ29uZGl0aW9ucyhlbnRpdHksIGNvbmRpdGlvbklkKSB7XG5cdFx0Y29uc3QgZW50aXR5Q29uZGl0aW9ucyA9IEVuaGFuY2VkQ29uZGl0aW9ucy5nZXRDb25kaXRpb25zKGVudGl0eSwgeyB3YXJuOiBmYWxzZSB9KTtcblx0XHRsZXQgY29uZGl0aW9ucyA9IGVudGl0eUNvbmRpdGlvbnMgPyBlbnRpdHlDb25kaXRpb25zLmNvbmRpdGlvbnMgOiBbXTtcblx0XHRjb25kaXRpb25zID0gY29uZGl0aW9ucyBpbnN0YW5jZW9mIEFycmF5ID8gY29uZGl0aW9ucyA6IFtjb25kaXRpb25zXTtcblxuXHRcdGlmICghY29uZGl0aW9ucy5sZW5ndGgpIHJldHVybjtcblxuXHRcdGNvbnN0IHJlbW92ZUNvbmRpdGlvbnMgPSBjb25kaXRpb25zLmZpbHRlcigoYykgPT4gYy5pZCAhPT0gY29uZGl0aW9uSWQpO1xuXG5cdFx0aWYgKCFyZW1vdmVDb25kaXRpb25zLmxlbmd0aCkgcmV0dXJuO1xuXG5cdFx0Zm9yIChjb25zdCBjIG9mIHJlbW92ZUNvbmRpdGlvbnMpIGF3YWl0IEVuaGFuY2VkQ29uZGl0aW9ucy5yZW1vdmVDb25kaXRpb24oYy5uYW1lLCBlbnRpdHksIHsgd2FybjogdHJ1ZSB9KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBNaWdyYXRlcyBDb25kaXRpb24gSWRzIHRvIGJlIHRydWx5IHVuaXF1ZS1pc2hcblx0ICogQHBhcmFtIHsqfSBjb25kaXRpb25NYXBcblx0ICovXG5cdHN0YXRpYyBhc3luYyBfbWlncmF0ZUNvbmRpdGlvbklkcyhjb25kaXRpb25NYXApIHtcblx0XHRpZiAoIWNvbmRpdGlvbk1hcD8ubGVuZ3RoKSByZXR1cm47XG5cblx0XHRjb25zdCBleGlzdGluZ0lkcyA9IGNvbmRpdGlvbk1hcC5maWx0ZXIoKGMpID0+IGMuaWQpLm1hcCgoYykgPT4gYy5pZCk7XG5cdFx0Y29uc3QgcHJvY2Vzc2VkSWRzID0gW107XG5cdFx0Y29uc3QgbmV3TWFwID0gZm91bmRyeS51dGlscy5kZWVwQ2xvbmUoY29uZGl0aW9uTWFwKTtcblx0XHRuZXdNYXAuZm9yRWFjaCgoYykgPT4ge1xuXHRcdFx0aWYgKHByb2Nlc3NlZElkcy5pbmNsdWRlcyhjLmlkKSkge1xuXHRcdFx0XHRjb25zb2xlLmxvZyhcIkNMVCB8IER1cGxpY2F0ZSBDb25kaXRpb24gZm91bmQ6XCIsIGMpO1xuXHRcdFx0XHRjLmlkID0gU2lkZWtpY2suY3JlYXRlSWQoZXhpc3RpbmdJZHMpO1xuXHRcdFx0XHRjb25zb2xlLmxvZyhcIkNMVCB8IE5ldyBpZDpcIiwgYy5pZCk7XG5cdFx0XHR9XG5cdFx0XHRjLmlkID0gYy5pZC5yZXBsYWNlKC9jb25kaXRpb24tbGFiLXRyaWdnbGVyLywgXCJcIik7XG5cdFx0XHRwcm9jZXNzZWRJZHMucHVzaChjLmlkKTtcblx0XHR9KTtcblx0XHRhd2FpdCBnYW1lLnNldHRpbmdzLnNldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJhY3RpdmVDb25kaXRpb25NYXBcIiwgbmV3TWFwKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBQcm9jZXNzIG1hY3JvcyBiYXNlZCBvbiBnaXZlbiBJZHNcblx0ICogQHBhcmFtIHsqfSBtYWNyb0lkc1xuXHQgKiBAcGFyYW0geyp9IGVudGl0eVxuXHQgKi9cblx0c3RhdGljIGFzeW5jIF9wcm9jZXNzTWFjcm9zKG1hY3JvSWRzLCBlbnRpdHkgPSBudWxsKSB7XG5cdFx0Y29uc3QgaXNUb2tlbiA9IGVudGl0eSBpbnN0YW5jZW9mIFRva2VuIHx8IGVudGl0eSBpbnN0YW5jZW9mIFRva2VuRG9jdW1lbnQ7XG5cdFx0Y29uc3QgaXNBY3RvciA9IGVudGl0eSBpbnN0YW5jZW9mIEFjdG9yO1xuXG5cdFx0Zm9yIChjb25zdCBtYWNyb0lkIG9mIG1hY3JvSWRzKSB7XG5cdFx0XHRjb25zdCBtYWNybyA9IGdhbWUubWFjcm9zLmdldChtYWNyb0lkKTtcblx0XHRcdGlmICghbWFjcm8pIGNvbnRpbnVlO1xuXG5cdFx0XHRjb25zdCBzY29wZSA9IGlzVG9rZW4gPyB7IHRva2VuOiBlbnRpdHkgfSA6IGlzQWN0b3IgPyB7IGFjdG9yOiBlbnRpdHkgfSA6IG51bGw7XG5cdFx0XHRhd2FpdCBtYWNyby5leGVjdXRlKHNjb3BlKTtcblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogVXBkYXRlIGNvbmRpdGlvbiBhZGRlZC9yZW1vdmVkIHRpbWVzdGFtcHNcblx0ICovXG5cdHN0YXRpYyB1cGRhdGVDb25kaXRpb25UaW1lc3RhbXBzKCkge1xuXHRcdGNvbnN0IGNvbmRpdGlvblJvd3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwib2wjY2hhdC1sb2cgdWwuY29uZGl0aW9uLWxpc3QgbGlcIik7XG5cdFx0Zm9yIChjb25zdCBsaSBvZiBjb25kaXRpb25Sb3dzKSB7XG5cdFx0XHRjb25zdCB0aW1lc3RhbXAgPVxuXHRcdFx0XHR0eXBlb2YgbGkuZGF0YXNldC50aW1lc3RhbXAgPT09IFwic3RyaW5nXCIgPyBwYXJzZUludChsaS5kYXRhc2V0LnRpbWVzdGFtcCkgOiBsaS5kYXRhc2V0LnRpbWVzdGFtcDtcblx0XHRcdGNvbnN0IGljb25TcGFuV3JhcHBlciA9IGxpLnF1ZXJ5U2VsZWN0b3IoXCJzcGFuLmFkZC1yZW1vdmUtaWNvblwiKTtcblxuXHRcdFx0aWYgKCF0aW1lc3RhbXAgfHwgIWljb25TcGFuV3JhcHBlcikgY29udGludWU7XG5cblx0XHRcdGNvbnN0IHR5cGUgPSBsaS5kYXRhc2V0LmNoYW5nZVR5cGU7XG5cdFx0XHRpY29uU3BhbldyYXBwZXIudGl0bGUgPSBgJHt0eXBlfSAke2ZvdW5kcnkudXRpbHMudGltZVNpbmNlKHRpbWVzdGFtcCl9YDtcblx0XHR9XG5cdH1cblxuXHQvLyAhISBUT0RPOiByZWFzc2VzcyB0aGlzIC0tIHdpbGwgaXQgcmVwbGFjZSB2YWxpZCBzdGF0dXMgZWZmZWN0cyBiZWNhdXNlIHRoZSBkdXBsaWNhdGUgaWQgbWF0Y2hlcyB0aGUgcmVtYWluaW5nIHVuaXF1ZSBpZD8/P1xuXHQvLyBzdGF0aWMgYXN5bmMgX21pZ3JhdGVBY3RpdmVFZmZlY3RDb25kaXRpb25JZChvbGRJZCwgbmV3SWQpIHtcblx0Ly8gICAgIGNvbnN0IHVwZGF0ZXMgPSBbXTtcblxuXHQvLyAgICAgZm9yIChjb25zdCBzY2VuZSBvZiBnYW1lLnNjZW5lcykge1xuXHQvLyAgICAgICAgIGNvbnN0IHNjZW5lVG9rZW5zID0gc2NlbmUuZGF0YT8udG9rZW5zPy5jb250ZW50cztcblx0Ly8gICAgICAgICBmb3IgKGNvbnN0IHRva2VuIG9mIHNjZW5lVG9rZW5zKSB7XG5cdC8vICAgICAgICAgICAgIGNvbnN0IG1hdGNoaW5nRWZmZWN0ID0gdG9rZW4uYWN0b3I/LmVmZmVjdHM/LmNvbnRlbnRzPy5maW5kKGUgPT4gZS5nZXRGbGFnKCdjb3JlJywgJ3N0YXR1c0lkJykgPT09IG9sZElkKTtcblx0Ly8gICAgICAgICAgICAgaWYgKG1hdGNoaW5nRWZmZWN0KSB7XG5cdC8vICAgICAgICAgICAgICAgICBjb25zdCBuZXdGbGFncyA9IGZvdW5kcnkudXRpbHMuZHVwbGljYXRlKG1hdGNoaW5nRWZmZWN0LmRhdGEuZmxhZ3MpO1xuXHQvLyAgICAgICAgICAgICAgICAgZm91bmRyeS51dGlscy5tZXJnZU9iamVjdChuZXdGbGFncywge1xuXHQvLyAgICAgICAgICAgICAgICAgICAgIFwiY29yZS5zdGF0dXNJZFwiOiBuZXdJZCxcblx0Ly8gICAgICAgICAgICAgICAgICAgICBbYGNvbmRpdGlvbi1sYWItdHJpZ2dsZXIuJHtcImNvbmRpdGlvbklkXCJ9YF06IG5ld0lkXG5cdC8vICAgICAgICAgICAgICAgICB9KTtcblx0Ly8gICAgICAgICAgICAgICAgIGNvbnN0IHVwZGF0ZSA9IHtfaWQ6IG1hdGNoaW5nRWZmZWN0LmlkLCBmbGFnczogbmV3RmxhZ3N9O1xuXG5cdC8vICAgICAgICAgICAgICAgICBhd2FpdCB0b2tlbi5hY3Rvci51cGRhdGVFbWJlZGRlZERvY3VtZW50cyhcIkFjdGl2ZUVmZmVjdFwiLCB1cGRhdGUpO1xuXHQvLyAgICAgICAgICAgICB9XG5cdC8vICAgICAgICAgfVxuXHQvLyAgICAgfVxuXHQvLyB9XG5cblx0LyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblx0LyogICAgICAgICAgICAgICAgICAgIEhlbHBlcnMgICAgICAgICAgICAgICAgICAgKi9cblx0LyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvKipcblx0ICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRvIGRpc3BsYXkgdGhlIGNvbWJhdCB1dGlsaXR5IGJlbHQgZGl2IGluIHRoZSBzZXR0aW5ncyBzaWRlYmFyXG5cdCAqIEBwYXJhbSB7Ym9vbGVhbn0gZGlzcGxheVxuXHQgKiBAdG9kbzogZXh0cmFjdCB0byBoZWxwZXIgaW4gc2lkZWtpY2sgY2xhc3M/XG5cdCAqL1xuXHRzdGF0aWMgX3RvZ2dsZUxhYkJ1dHRvblZpc2liaWxpdHkoZGlzcGxheSkge1xuXHRcdGlmICghZ2FtZS51c2VyLmlzR00pIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRsZXQgbGFiQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb25kaXRpb24tbGFiXCIpO1xuXG5cdFx0aWYgKGRpc3BsYXkgJiYgbGFiQnV0dG9uICYmIGxhYkJ1dHRvbi5zdHlsZS5kaXNwbGF5ICE9PSBcImJsb2NrXCIpIHtcblx0XHRcdHJldHVybiAobGFiQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCIpO1xuXHRcdH1cblxuXHRcdGlmIChsYWJCdXR0b24gJiYgIWRpc3BsYXkgJiYgbGFiQnV0dG9uLnN0eWxlLmRpc3BsYXkgIT09IFwibm9uZVwiKSB7XG5cdFx0XHRyZXR1cm4gKGxhYkJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCIpO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBSZXR1cm5zIHRoZSBkZWZhdWx0IG1hcHMgc3VwcGxpZWQgd2l0aCB0aGUgbW9kdWxlXG5cdCAqXG5cdCAqIEB0b2RvOiBtYXAgdG8gZW50cnlJZCBhbmQgdGhlbiByZWJ1aWxkIG9uIGltcG9ydFxuXHQgKi9cblx0c3RhdGljIGFzeW5jIF9sb2FkRGVmYXVsdE1hcHMoKSB7XG5cdFx0Y29uc3QgcGF0aCA9IFwibW9kdWxlcy9jb25kaXRpb24tbGFiLXRyaWdnbGVyL2NvbmRpdGlvbi1tYXBzXCI7XG5cdFx0Y29uc3QganNvbnMgPSBhd2FpdCBTaWRla2ljay5mZXRjaEpzb25zKFwiZGF0YVwiLCBwYXRoKTtcblxuXHRcdGNvbnN0IGRlZmF1bHRNYXBzID0ganNvbnNcblx0XHRcdC5maWx0ZXIoKGopID0+ICFqLnN5c3RlbS5pbmNsdWRlcyhcImV4YW1wbGVcIikpXG5cdFx0XHQucmVkdWNlKChvYmosIGN1cnJlbnQpID0+IHtcblx0XHRcdFx0b2JqW2N1cnJlbnQuc3lzdGVtXSA9IGN1cnJlbnQubWFwO1xuXHRcdFx0XHRyZXR1cm4gb2JqO1xuXHRcdFx0fSwge30pO1xuXG5cdFx0cmV0dXJuIGRlZmF1bHRNYXBzO1xuXHR9XG5cblx0LyoqXG5cdCAqIFBhcnNlIHRoZSBwcm92aWRlZCBDb25kaXRpb24gTWFwIGFuZCBwcmVwYXJlIGl0IGZvciBzdG9yYWdlLCB2YWxpZGF0aW5nIGFuZCBjb3JyZWN0aW5nIGJhZCBvciBtaXNzaW5nIGRhdGEgd2hlcmUgcG9zc2libGVcblx0ICogQHBhcmFtIHsqfSBjb25kaXRpb25NYXBcblx0ICogQHJldHVybnMge0FycmF5fVxuXHQgKi9cblx0c3RhdGljIF9wcmVwYXJlTWFwKGNvbmRpdGlvbk1hcCkge1xuXHRcdGNvbnN0IHByZXBhcmVkTWFwID0gW107XG5cblx0XHRpZiAoIWNvbmRpdGlvbk1hcCB8fCAhY29uZGl0aW9uTWFwPy5sZW5ndGgpIHtcblx0XHRcdHJldHVybiBwcmVwYXJlZE1hcDtcblx0XHR9XG5cblx0XHRjb25zdCBvdXRwdXRDaGF0U2V0dGluZyA9IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImNvbmRpdGlvbnNPdXRwdXRUb0NoYXRcIik7XG5cblx0XHQvLyBNYXAgZXhpc3RpbmcgaWRzIGZvciBlYXNlIG9mIGFjY2Vzc1xuXHRcdGNvbnN0IGV4aXN0aW5nSWRzID0gY29uZGl0aW9uTWFwLmZpbHRlcigoYykgPT4gYy5pZCkubWFwKChjKSA9PiBjLmlkKTtcblx0XHRjb25zdCBwcm9jZXNzZWRJZHMgPSBbXTtcblxuXHRcdC8vIEl0ZXJhdGUgdGhyb3VnaCB0aGUgbWFwIHZhbGlkYXRpbmcvcHJlcGFyaW5nIHRoZSBkYXRhXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBjb25kaXRpb25NYXAubGVuZ3RoOyBpKyspIHtcblx0XHRcdGxldCBjb25kaXRpb24gPSBkdXBsaWNhdGUoY29uZGl0aW9uTWFwW2ldKTtcblxuXHRcdFx0Ly8gRGVsZXRlIGZhbHN5IHZhbHVlc1xuXHRcdFx0aWYgKCFjb25kaXRpb24pIHByZXBhcmVkTWFwLnNwbGljZShpLCAxKTtcblxuXHRcdFx0Ly8gQ29udmVydCBzdHJpbmcgdmFsdWVzIChlZy4gaWNvbiBwYXRoKSB0byBjb25kaXRpb24vZWZmZWN0IG9iamVjdFxuXHRcdFx0Ly8gQHRvZG8gIzU4MCBDb25zaWRlciByZS1hZGRpbmcgc3VwcG9ydCBmb3Igc3lzdGVtcyB0aGF0IHVzZSBzaW1wbGUgaWNvbnMgZm9yIHN0YXR1cyBlZmZlY3RzXG5cdFx0XHQvLyBjb25kaXRpb24gPSB0eXBlb2YgY29uZGl0aW9uID09IFwic3RyaW5nXCIgPyB7aWNvbjogY29uZGl0aW9ufSA6IGNvbmRpdGlvbjtcblx0XHRcdGlmICh0eXBlb2YgY29uZGl0aW9uID09IFwic3RyaW5nXCIpIGNvbnRpbnVlO1xuXG5cdFx0XHRpZiAoIWNvbmRpdGlvbi5uYW1lKSB7XG5cdFx0XHRcdGNvbmRpdGlvbi5uYW1lID1cblx0XHRcdFx0XHRjb25kaXRpb24ubGFiZWwgPz8gKGNvbmRpdGlvbi5pY29uID8gU2lkZWtpY2suZ2V0TmFtZUZyb21GaWxlUGF0aChjb25kaXRpb24uaWNvbikgOiBcIlwiKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgY29uZGl0aW9uSWQgZG9lc24ndCBleGlzdCwgb3IgaXMgYSBkdXBsaWNhdGUsIGNyZWF0ZSBhIG5ldyBJZFxuXHRcdFx0Y29uZGl0aW9uLmlkID1cblx0XHRcdFx0IWNvbmRpdGlvbi5pZCB8fCBwcm9jZXNzZWRJZHMuaW5jbHVkZXMoY29uZGl0aW9uLmlkKSA/IFNpZGVraWNrLmNyZWF0ZUlkKGV4aXN0aW5nSWRzKSA6IGNvbmRpdGlvbi5pZDtcblx0XHRcdHByb2Nlc3NlZElkcy5wdXNoKGNvbmRpdGlvbi5pZCk7XG5cblx0XHRcdGNvbmRpdGlvbi5vcHRpb25zID0gY29uZGl0aW9uLm9wdGlvbnMgfHwge307XG5cdFx0XHRpZiAoY29uZGl0aW9uLm9wdGlvbnMub3V0cHV0Q2hhdCA9PT0gdW5kZWZpbmVkKSBjb25kaXRpb24ub3B0aW9ucy5vdXRwdXRDaGF0ID0gb3V0cHV0Q2hhdFNldHRpbmc7XG5cdFx0XHRwcmVwYXJlZE1hcC5wdXNoKGNvbmRpdGlvbik7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHByZXBhcmVkTWFwO1xuXHR9XG5cblx0LyoqXG5cdCAqIER1cGxpY2F0ZSB0aGUgY29yZSBzdGF0dXMgaWNvbnMsIGZyZWV6ZSB0aGUgZHVwbGljYXRlIHRoZW4gc3RvcmUgYSBjb3B5IGluIHNldHRpbmdzXG5cdCAqL1xuXHRzdGF0aWMgX2JhY2t1cENvcmVFZmZlY3RzKCkge1xuXHRcdENPTkZJRy5kZWZhdWx0U3RhdHVzRWZmZWN0cyA9IENPTkZJRy5kZWZhdWx0U3RhdHVzRWZmZWN0cyB8fCBkdXBsaWNhdGUoQ09ORklHLnN0YXR1c0VmZmVjdHMpO1xuXHRcdGlmICghT2JqZWN0LmlzRnJvemVuKENPTkZJRy5kZWZhdWx0U3RhdHVzRWZmZWN0cykpIHtcblx0XHRcdE9iamVjdC5mcmVlemUoQ09ORklHLmRlZmF1bHRTdGF0dXNFZmZlY3RzKTtcblx0XHR9XG5cdFx0Z2FtZS5zZXR0aW5ncy5zZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiY29yZVN0YXR1c0VmZmVjdHNcIiwgQ09ORklHLmRlZmF1bHRTdGF0dXNFZmZlY3RzKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBEdXBsaWNhdGUgdGhlIGNvcmUgc3BlY2lhbCBzdGF0dXMgZWZmZWN0IG1hcHBpbmdzLCBmcmVlemUgdGhlIGR1cGxpY2F0ZSB0aGVuIHN0b3JlIGEgY29weSBpbiBzZXR0aW5nc1xuXHQgKi9cblx0c3RhdGljIF9iYWNrdXBDb3JlU3BlY2lhbFN0YXR1c0VmZmVjdHMoKSB7XG5cdFx0Q09ORklHLmRlZmF1bHRTcGVjaWFsU3RhdHVzRWZmZWN0cyA9XG5cdFx0XHRDT05GSUcuZGVmYXVsdFNwZWNpYWxTdGF0dXNFZmZlY3RzIHx8IGZvdW5kcnkudXRpbHMuZHVwbGljYXRlKENPTkZJRy5zcGVjaWFsU3RhdHVzRWZmZWN0cyk7XG5cdFx0aWYgKCFPYmplY3QuaXNGcm96ZW4oQ09ORklHLmRlZmF1bHRTcGVjaWFsU3RhdHVzRWZmZWN0cykpIHtcblx0XHRcdE9iamVjdC5mcmVlemUoQ09ORklHLmRlZmF1bHRTcGVjaWFsU3RhdHVzRWZmZWN0cyk7XG5cdFx0fVxuXHRcdGdhbWUuc2V0dGluZ3Muc2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLFxuXHRcdFx0XCJkZWZhdWx0U3BlY2lhbFN0YXR1c0VmZmVjdHNcIixcblx0XHRcdENPTkZJRy5kZWZhdWx0U3BlY2lhbFN0YXR1c0VmZmVjdHNcblx0XHQpO1xuXHR9XG5cblx0LyoqXG5cdCAqIENyZWF0ZXMgam91cm5hbCBlbnRyaWVzIGZvciBhbnkgY29uZGl0aW9ucyB0aGF0IGRvbid0IGhhdmUgb25lXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBjb25kaXRpb24gdGhlIGNvbmRpdGlvbiBiZWluZyBldmFsdWF0ZWRcblx0ICovXG5cdHN0YXRpYyBhc3luYyBfY3JlYXRlSm91cm5hbEVudHJ5KGNvbmRpdGlvbikge1xuXHRcdHJldHVybiBhd2FpdCBKb3VybmFsRW50cnkuY3JlYXRlKFxuXHRcdFx0e1xuXHRcdFx0XHRuYW1lOiBjb25kaXRpb24sXG5cdFx0XHRcdHBlcm1pc3Npb246IHtcblx0XHRcdFx0XHRkZWZhdWx0OiBDT05TVC5ET0NVTUVOVF9QRVJNSVNTSU9OX0xFVkVMUy5MSU1JVEVEXG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHR7XG5cdFx0XHRcdGRpc3BsYXlTaGVldDogZmFsc2Vcblx0XHRcdH1cblx0XHQpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEdldHMgb25lIG9yIG1vcmUgY29uZGl0aW9ucyBmcm9tIHRoZSBtYXAgYnkgdGhlaXIgbmFtZVxuXHQgKiBAcGFyYW0ge3N0cmluZ30gY29uZGl0aW9uTmFtZSAgdGhlIGNvbmRpdGlvbiB0byBnZXRcblx0ICovXG5cdHN0YXRpYyBfbG9va3VwQ29uZGl0aW9uQnlOYW1lKGNvbmRpdGlvbk5hbWUpIHtcblx0XHRpZiAoIWNvbmRpdGlvbk5hbWUpIHJldHVybjtcblxuXHRcdGNvbmRpdGlvbk5hbWUgPSBjb25kaXRpb25OYW1lIGluc3RhbmNlb2YgQXJyYXkgPyBjb25kaXRpb25OYW1lIDogW2NvbmRpdGlvbk5hbWVdO1xuXG5cdFx0bGV0IGNvbmRpdGlvbnMgPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJhY3RpdmVDb25kaXRpb25NYXBcIik7XG5cdFx0aWYgKCFnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJyZW1vdmVEZWZhdWx0RWZmZWN0c1wiKSkge1xuXHRcdFx0Y29uZGl0aW9ucyA9IGNvbmRpdGlvbnMuY29uY2F0KGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImNvcmVTdGF0dXNFZmZlY3RzXCIpKTtcblx0XHR9XG5cdFx0Y29uZGl0aW9ucyA9IGNvbmRpdGlvbnMuZmlsdGVyKChjKSA9PiBjb25kaXRpb25OYW1lLmluY2x1ZGVzKGMubmFtZSkpID8/IFtdO1xuXHRcdGlmICghY29uZGl0aW9ucy5sZW5ndGgpIHJldHVybiBudWxsO1xuXG5cdFx0cmV0dXJuIGNvbmRpdGlvbnMubGVuZ3RoID4gMSA/IGNvbmRpdGlvbnMgOiBjb25kaXRpb25zLnNoaWZ0KCk7XG5cdH1cblxuXHQvKipcblx0ICogVXBkYXRlcyB0aGUgQ09ORklHLnN0YXR1c0VmZmVjdCBlZmZlY3RzIHdpdGggQ29uZGl0aW9uIE1hcCBvbmVzXG5cdCAqIEBwYXJhbSB7Kn0gY29uZGl0aW9uTWFwXG5cdCAqL1xuXHRzdGF0aWMgX3VwZGF0ZVN0YXR1c0VmZmVjdHMoY29uZGl0aW9uTWFwKSB7XG5cdFx0Y29uc3QgY29yZUVmZmVjdHNTZXR0aW5nID0gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiY29yZVN0YXR1c0VmZmVjdHNcIik7XG5cblx0XHQvLyBzYXZlIHRoZSBvcmlnaW5hbCBpY29uc1xuXHRcdGlmICghY29yZUVmZmVjdHNTZXR0aW5nLmxlbmd0aCkge1xuXHRcdFx0RW5oYW5jZWRDb25kaXRpb25zLl9iYWNrdXBDb3JlRWZmZWN0cygpO1xuXHRcdH1cblxuXHRcdGNvbnN0IHJlbW92ZURlZmF1bHRFZmZlY3RzID0gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwicmVtb3ZlRGVmYXVsdEVmZmVjdHNcIik7XG5cdFx0Y29uc3QgYWN0aXZlQ29uZGl0aW9uTWFwID0gY29uZGl0aW9uTWFwIHx8IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImFjdGl2ZUNvbmRpdGlvbk1hcFwiKTtcblxuXHRcdGlmICghcmVtb3ZlRGVmYXVsdEVmZmVjdHMgJiYgIWFjdGl2ZUNvbmRpdGlvbk1hcCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnN0IGFjdGl2ZUNvbmRpdGlvbkVmZmVjdHMgPSBFbmhhbmNlZENvbmRpdGlvbnMuX3ByZXBhcmVTdGF0dXNFZmZlY3RzKGFjdGl2ZUNvbmRpdGlvbk1hcCk7XG5cblx0XHRpZiAocmVtb3ZlRGVmYXVsdEVmZmVjdHMpIHtcblx0XHRcdHJldHVybiAoQ09ORklHLnN0YXR1c0VmZmVjdHMgPSBhY3RpdmVDb25kaXRpb25FZmZlY3RzID8/IFtdKTtcblx0XHR9XG5cblx0XHRpZiAoYWN0aXZlQ29uZGl0aW9uTWFwIGluc3RhbmNlb2YgQXJyYXkpIHtcblx0XHRcdC8vIGFkZCB0aGUgaWNvbnMgZnJvbSB0aGUgY29uZGl0aW9uIG1hcCB0byB0aGUgc3RhdHVzIGVmZmVjdHMgYXJyYXlcblx0XHRcdGNvbnN0IGNvcmVFZmZlY3RzID1cblx0XHRcdFx0Q09ORklHLmRlZmF1bHRTdGF0dXNFZmZlY3RzIHx8IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImNvcmVTdGF0dXNFZmZlY3RzXCIpO1xuXG5cdFx0XHQvLyBDcmVhdGUgYSBTZXQgYmFzZWQgb24gdGhlIGNvcmUgc3RhdHVzIGVmZmVjdHMgYW5kIHRoZSBFbmhhbmNlZCBDb25kaXRpb24gZWZmZWN0cy4gVXNpbmcgYSBTZXQgZW5zdXJlcyB1bmlxdWUgaWNvbnMgb25seVxuXHRcdFx0cmV0dXJuIChDT05GSUcuc3RhdHVzRWZmZWN0cyA9IGNvcmVFZmZlY3RzLmNvbmNhdChhY3RpdmVDb25kaXRpb25FZmZlY3RzKSk7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIENvbnZlcnRzIHRoZSBnaXZlbiBDb25kaXRpb24gTWFwIChvbmUgb3IgbW9yZSBDb25kaXRpb25zKSBpbnRvIGEgU3RhdHVzIEVmZmVjdHMgYXJyYXkgb3Igb2JqZWN0XG5cdCAqIEBwYXJhbSB7QXJyYXkgfCBvYmplY3R9IGNvbmRpdGlvbk1hcFxuXHQgKiBAcmV0dXJucyB7QXJyYXl9IHN0YXR1c0VmZmVjdHNcblx0ICovXG5cdHN0YXRpYyBfcHJlcGFyZVN0YXR1c0VmZmVjdHMoY29uZGl0aW9uTWFwKSB7XG5cdFx0Y29uZGl0aW9uTWFwID0gY29uZGl0aW9uTWFwIGluc3RhbmNlb2YgQXJyYXkgPyBjb25kaXRpb25NYXAgOiBbY29uZGl0aW9uTWFwXTtcblxuXHRcdGlmICghY29uZGl0aW9uTWFwLmxlbmd0aCkgcmV0dXJuO1xuXG5cdFx0Y29uc3QgZXhpc3RpbmdJZHMgPSBjb25kaXRpb25NYXAuZmlsdGVyKChjKSA9PiBjLmlkKS5tYXAoKGMpID0+IGMuaWQpO1xuXG5cdFx0Y29uc3Qgc3RhdHVzRWZmZWN0cyA9IGNvbmRpdGlvbk1hcC5tYXAoKGMpID0+IHtcblx0XHRcdGNvbnN0IGlkID0gYy5pZCB8fCBTaWRla2ljay5jcmVhdGVJZChleGlzdGluZ0lkcyk7XG5cblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdGlkLFxuXHRcdFx0XHRzdGF0dXNlczogW2lkXSxcblx0XHRcdFx0bmFtZTogYy5uYW1lLFxuXHRcdFx0XHRpY29uOiBjLmljb24sXG5cdFx0XHRcdGNoYW5nZXM6IGMuYWN0aXZlRWZmZWN0Py5jaGFuZ2VzIHx8IFtdLFxuXHRcdFx0XHRkZXNjcmlwdGlvbjogYy5hY3RpdmVFZmZlY3Q/LmRlc2NyaXB0aW9uIHx8IFwiXCIsXG5cdFx0XHRcdGR1cmF0aW9uOiBjLmR1cmF0aW9uIHx8IGMuYWN0aXZlRWZmZWN0Py5kdXJhdGlvbiB8fCB7fSxcblx0XHRcdFx0ZmxhZ3M6IHtcblx0XHRcdFx0XHQuLi5jLmFjdGl2ZUVmZmVjdD8uZmxhZ3MsXG5cdFx0XHRcdFx0Y29yZToge1xuXHRcdFx0XHRcdFx0b3ZlcmxheTogYz8ub3B0aW9ucz8ub3ZlcmxheSA/PyBmYWxzZVxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCI6IHtcblx0XHRcdFx0XHRcdGNvbmRpdGlvbklkOiBpZFxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblx0XHRcdFx0Z2V0IGxhYmVsKCkge1xuXHRcdFx0XHRcdHJldHVybiB0aGlzLm5hbWU7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdHNldCBsYWJlbCh2YWx1ZSkge1xuXHRcdFx0XHRcdHRoaXMubmFtZSA9IHZhbHVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIHN0YXR1c0VmZmVjdHM7XG5cdH1cblxuXHQvKipcblx0ICogUHJlcGFyZXMgb25lIG9yIG1vcmUgQWN0aXZlRWZmZWN0cyBmcm9tIENvbmRpdGlvbnMgZm9yIHBsYWNlbWVudCBvbiBhbiBhY3RvclxuXHQgKiBAcGFyYW0ge29iamVjdCB8IEFycmF5fSBlZmZlY3RzICBhIHNpbmdsZSBBY3RpdmVFZmZlY3QgZGF0YSBvYmplY3Qgb3IgYW4gYXJyYXkgb2YgQWN0aXZlRWZmZWN0IGRhdGEgb2JqZWN0c1xuXHQgKi9cblx0c3RhdGljIF9wcmVwYXJlQWN0aXZlRWZmZWN0cyhlZmZlY3RzKSB7XG5cdFx0aWYgKCFlZmZlY3RzKSByZXR1cm47XG5cblx0XHRmb3IgKGNvbnN0IGVmZmVjdCBvZiBlZmZlY3RzKSB7XG5cdFx0XHRjb25zdCBvdmVybGF5ID0gZ2V0UHJvcGVydHkoZWZmZWN0LCBcImZsYWdzLmNvbmRpdGlvbi1sYWItdHJpZ2dsZXIuY29yZS5vdmVybGF5XCIpO1xuXHRcdFx0Ly8gSWYgdGhlIHBhcmVudCBDb25kaXRpb24gZm9yIHRoZSBBY3RpdmVFZmZlY3QgZGVmaW5lcyBpdCBhcyBhbiBvdmVybGF5LCBtYXJrIHRoZSBBY3RpdmVFZmZlY3QgYXMgYW4gb3ZlcmxheVxuXHRcdFx0aWYgKG92ZXJsYXkpIHtcblx0XHRcdFx0ZWZmZWN0LmZsYWdzLmNvcmUub3ZlcmxheSA9IG92ZXJsYXk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGVmZmVjdHM7XG5cdH1cblxuXHQvKipcblx0ICogUmV0dXJucyBqdXN0IHRoZSBpY29uIHNpZGUgb2YgdGhlIG1hcFxuXHQgKiBAcGFyYW0gY29uZGl0aW9uTWFwXG5cdCAqL1xuXHRzdGF0aWMgZ2V0Q29uZGl0aW9uSWNvbnMoY29uZGl0aW9uTWFwID0ge30pIHtcblx0XHRpZiAoIWNvbmRpdGlvbk1hcCkge1xuXHRcdFx0Ly8gbWF5YmUgbG9nIGFuIGVycm9yP1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmIChPYmplY3Qua2V5cyhjb25kaXRpb25NYXApLmxlbmd0aCA9PT0gMCkge1xuXHRcdFx0Y29uZGl0aW9uTWFwID0gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiYWN0aXZlQ29uZGl0aW9uTWFwXCIpO1xuXG5cdFx0XHRpZiAoIWNvbmRpdGlvbk1hcCB8fCBPYmplY3Qua2V5cyhjb25kaXRpb25NYXApLmxlbmd0aCA9PT0gMCkge1xuXHRcdFx0XHRyZXR1cm4gW107XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGNvbmRpdGlvbk1hcCBpbnN0YW5jZW9mIEFycmF5KSB7XG5cdFx0XHRyZXR1cm4gY29uZGl0aW9uTWFwLm1hcCgobWFwRW50cnkpID0+IG1hcEVudHJ5Lmljb24pO1xuXHRcdH1cblxuXHRcdHJldHVybiBbXTtcblx0fVxuXG5cdC8qKlxuXHQgKiBSZXRyaWV2ZXMgYSBjb25kaXRpb24gaWNvbiBieSBpdHMgbWFwcGVkIG5hbWVcblx0ICogQHBhcmFtIHsqfSBjb25kaXRpb25cblx0ICogQHBhcmFtIHJvb3QwXG5cdCAqIEBwYXJhbSByb290MC5maXJzdE9ubHlcblx0ICovXG5cdHN0YXRpYyBnZXRJY29uc0J5Q29uZGl0aW9uKGNvbmRpdGlvbiwgeyBmaXJzdE9ubHkgPSBmYWxzZSB9ID0ge30pIHtcblx0XHRjb25zdCBjb25kaXRpb25NYXAgPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJhY3RpdmVDb25kaXRpb25NYXBcIik7XG5cblx0XHRpZiAoIWNvbmRpdGlvbk1hcCB8fCAhY29uZGl0aW9uKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKGNvbmRpdGlvbk1hcCBpbnN0YW5jZW9mIEFycmF5KSB7XG5cdFx0XHRjb25zdCBmaWx0ZXJlZENvbmRpdGlvbnMgPSBjb25kaXRpb25NYXAuZmlsdGVyKChjKSA9PiBjLm5hbWUgPT09IGNvbmRpdGlvbikubWFwKChjKSA9PiBjLmljb24pO1xuXHRcdFx0aWYgKCFmaWx0ZXJlZENvbmRpdGlvbnMubGVuZ3RoKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGZpcnN0T25seSA/IGZpbHRlcmVkQ29uZGl0aW9uc1swXSA6IGZpbHRlcmVkQ29uZGl0aW9ucztcblx0XHR9XG5cblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdC8qKlxuXHQgKiBSZXRyaWV2ZXMgYSBjb25kaXRpb24gbmFtZSBieSBpdHMgbWFwcGVkIGljb25cblx0ICogQHBhcmFtIHsqfSBpY29uXG5cdCAqIEBwYXJhbSByb290MFxuXHQgKiBAcGFyYW0gcm9vdDAuZmlyc3RPbmx5XG5cdCAqL1xuXHRzdGF0aWMgZ2V0Q29uZGl0aW9uc0J5SWNvbihpY29uLCB7IGZpcnN0T25seSA9IGZhbHNlIH0gPSB7fSkge1xuXHRcdGNvbnN0IGNvbmRpdGlvbk1hcCA9IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImFjdGl2ZUNvbmRpdGlvbk1hcFwiKTtcblxuXHRcdGlmICghY29uZGl0aW9uTWFwIHx8ICFpY29uKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKGNvbmRpdGlvbk1hcCBpbnN0YW5jZW9mIEFycmF5ICYmIGNvbmRpdGlvbk1hcC5sZW5ndGgpIHtcblx0XHRcdGNvbnN0IGZpbHRlcmVkSWNvbnMgPSBjb25kaXRpb25NYXAuZmlsdGVyKChjKSA9PiBjLmljb24gPT09IGljb24pLm1hcCgoYykgPT4gYy5uYW1lKTtcblx0XHRcdGlmICghZmlsdGVyZWRJY29ucy5sZW5ndGgpIHtcblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmlyc3RPbmx5ID8gZmlsdGVyZWRJY29uc1swXSA6IGZpbHRlcmVkSWNvbnM7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHQvKipcblx0ICogUGFyc2VzIGEgY29uZGl0aW9uIG1hcCBKU09OIGFuZCByZXR1cm5zIGEgbWFwXG5cdCAqIEBwYXJhbSB7Kn0ganNvblxuXHQgKi9cblx0c3RhdGljIG1hcEZyb21Kc29uKGpzb24pIHtcblx0XHRpZiAoanNvbi5zeXN0ZW0gIT09IGdhbWUuc3lzdGVtLmlkKSB7XG5cdFx0XHR1aS5ub3RpZmljYXRpb25zLndhcm4oZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuTWFwTWlzbWF0Y2hcIikpO1xuXHRcdH1cblxuXHRcdGNvbnN0IG1hcCA9IGpzb24ubWFwID8gRW5oYW5jZWRDb25kaXRpb25zLl9wcmVwYXJlTWFwKGpzb24ubWFwKSA6IFtdO1xuXG5cdFx0cmV0dXJuIG1hcDtcblx0fVxuXG5cdC8qKlxuXHQgKiBSZXR1cm5zIHRoZSBkZWZhdWx0IGNvbmRpdGlvbiBtYXAgZm9yIGEgZ2l2ZW4gc3lzdGVtXG5cdCAqIEBwYXJhbSBkZWZhdWx0TWFwc1xuXHQgKiBAcmV0dXJucyB7e09iamVjdH19XG5cdCAqL1xuXHRzdGF0aWMgZ2V0RGVmYXVsdE1hcChkZWZhdWx0TWFwcyA9IG51bGwpIHtcblx0XHRjb25zdCBzeXN0ZW0gPSBnYW1lLnN5c3RlbS5pZDtcblx0XHRkZWZhdWx0TWFwcyA9XG5cdFx0XHRkZWZhdWx0TWFwcyBpbnN0YW5jZW9mIE9iamVjdFxuXHRcdFx0XHQ/IGRlZmF1bHRNYXBzXG5cdFx0XHRcdDogZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiZGVmYXVsdENvbmRpdGlvbk1hcHNcIik7XG5cdFx0bGV0IGRlZmF1bHRNYXAgPSBkZWZhdWx0TWFwc1tzeXN0ZW1dIHx8IFtdO1xuXG5cdFx0aWYgKCFkZWZhdWx0TWFwLmxlbmd0aCkge1xuXHRcdFx0ZGVmYXVsdE1hcCA9IEVuaGFuY2VkQ29uZGl0aW9ucy5idWlsZERlZmF1bHRNYXAoKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZGVmYXVsdE1hcDtcblx0fVxuXG5cdC8qKlxuXHQgKiBCdWlsZHMgYSBkZWZhdWx0IG1hcCBmb3IgYSBnaXZlbiBzeXN0ZW1cblx0ICogQHRvZG8gIzI4MSB1cGRhdGUgZm9yIGFjdGl2ZSBlZmZlY3RzXG5cdCAqL1xuXHRzdGF0aWMgYnVpbGREZWZhdWx0TWFwKCkge1xuXHRcdGNvbnN0IGNvcmVFZmZlY3RzU2V0dGluZyA9IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImNvcmVTdGF0dXNFZmZlY3RzXCIpO1xuXHRcdGNvbnN0IGNvcmVFZmZlY3RzID0gY29yZUVmZmVjdHNTZXR0aW5nICYmIGNvcmVFZmZlY3RzU2V0dGluZy5sZW5ndGggPyBjb3JlRWZmZWN0c1NldHRpbmcgOiBDT05GSUcuc3RhdHVzRWZmZWN0cztcblx0XHRyZXR1cm4gRW5oYW5jZWRDb25kaXRpb25zLl9wcmVwYXJlTWFwKGNvcmVFZmZlY3RzKTtcblx0fVxuXG5cdC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cdC8qICAgICAgICAgICAgICAgICAgICAgIEFQSSAgICAgICAgICAgICAgICAgICAgICovXG5cdC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0LyoqXG5cdCAqIEFwcGx5IHRoZSBuYW1lZCBjb25kaXRpb24gdG8gdGhlIHByb3ZpZGVkIGVudGl0aWVzIChBY3RvcnMgb3IgVG9rZW5zKVxuXHQgKiBAZGVwcmVjYXRlZFxuXHQgKiBAcGFyYW0gIHsuLi5hbnl9IHBhcmFtc1xuXHQgKiBAc2VlIEVuaGFuY2VkQ29uZGl0aW9ucyNhZGRDb25kaXRpb25cblx0ICovXG5cdHN0YXRpYyBhc3luYyBhcHBseUNvbmRpdGlvbiguLi5wYXJhbXMpIHtcblx0XHRyZXR1cm4gRW5oYW5jZWRDb25kaXRpb25zLmFkZENvbmRpdGlvbiguLi5wYXJhbXMpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEFwcGxpZXMgdGhlIG5hbWVkIGNvbmRpdGlvbiB0byB0aGUgcHJvdmlkZWQgZW50aXRpZXMgKEFjdG9ycyBvciBUb2tlbnMpXG5cdCAqIEBwYXJhbSB7c3RyaW5nW10gfCBzdHJpbmd9IGNvbmRpdGlvbk5hbWUgIHRoZSBuYW1lIG9mIHRoZSBjb25kaXRpb24gdG8gYWRkXG5cdCAqIEBwYXJhbSB7KEFjdG9yW10gfCBUb2tlbltdIHwgQWN0b3IgfCBUb2tlbil9IFtlbnRpdGllcz1udWxsXSBvbmUgb3IgbW9yZSBBY3RvcnMgb3IgVG9rZW5zIHRvIGFwcGx5IHRoZSBDb25kaXRpb24gdG9cblx0ICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5hbGxvd0R1cGxpY2F0ZXM9ZmFsc2VdICBpZiBvbmUgb3IgbW9yZSBvZiB0aGUgQ29uZGl0aW9ucyBzcGVjaWZpZWQgaXMgYWxyZWFkeSBhY3RpdmUgb24gdGhlIEVudGl0eSwgdGhpcyB3aWxsIHN0aWxsIGFkZCB0aGUgQ29uZGl0aW9uLiBVc2UgaW4gY29uanVuY3Rpb24gd2l0aCBgcmVwbGFjZUV4aXN0aW5nYCB0byBkZXRlcm1pbmUgaG93IGR1cGxpY2F0ZXMgYXJlIGhhbmRsZWRcblx0ICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5yZXBsYWNlRXhpc3Rpbmc9ZmFsc2VdICB3aGV0aGVyIG9yIG5vdCB0byByZXBsYWNlIGV4aXN0aW5nIENvbmRpdGlvbnMgd2l0aCBhbnkgZHVwbGljYXRlcyBpbiB0aGUgYGNvbmRpdGlvbk5hbWVgIHBhcmFtZXRlci4gSWYgYGFsbG93RHVwbGljYXRlc2AgaXMgdHJ1ZSBhbmQgYHJlcGxhY2VFeGlzdGluZ2AgaXMgZmFsc2UgdGhlbiBhIGR1cGxpY2F0ZSBjb25kaXRpb24gaXMgY3JlYXRlZC4gSGFzIG5vIGVmZmVjdCBpcyBga2VlcER1cGxpY2F0ZXNgIGlzIGBmYWxzZWBcblx0ICogQGV4YW1wbGVcblx0ICogLy8gQWRkIHRoZSBDb25kaXRpb24gXCJCbGluZGVkXCIgdG8gYW4gQWN0b3IgbmFtZWQgXCJCb2JcIi4gRHVwbGljYXRlcyB3aWxsIG5vdCBiZSBjcmVhdGVkLlxuXHQgKiBnYW1lLmNsdC5hZGRDb25kaXRpb24oXCJCbGluZGVkXCIsIGdhbWUuYWN0b3JzLmdldE5hbWUoXCJCb2JcIikpO1xuXHQgKiBAZXhhbXBsZVxuXHQgKiAvLyBBZGQgdGhlIENvbmRpdGlvbiBcIkNoYXJtZWRcIiB0byB0aGUgY3VycmVudGx5IGNvbnRyb2xsZWQgVG9rZW4vcy4gRHVwbGljYXRlcyB3aWxsIG5vdCBiZSBjcmVhdGVkLlxuXHQgKiBnYW1lLmNsdC5hZGRDb25kaXRpb24oXCJDaGFybWVkXCIpO1xuXHQgKiBAZXhhbXBsZVxuXHQgKiAvLyBBZGQgdGhlIENvbmRpdGlvbnMgXCJCbGluZGVkXCIgYW5kIFwiQ2hhcm1lZFwiIHRvIHRoZSB0YXJnZXRlZCBUb2tlbi9zIGFuZCBjcmVhdGUgZHVwbGljYXRlcywgcmVwbGFjaW5nIGFueSBleGlzdGluZyBDb25kaXRpb25zIG9mIHRoZSBzYW1lIG5hbWVzLlxuXHQgKiBnYW1lLmNsdC5hZGRDb25kaXRpb24oW1wiQmxpbmRlZFwiLCBcIkNoYXJtZWRcIl0sIFsuLi5nYW1lLnVzZXIudGFyZ2V0c10sIHthbGxvd0R1cGxpY2F0ZXM6IHRydWUsIHJlcGxhY2VFeGlzdGluZzogdHJ1ZX0pO1xuXHQgKi9cblx0c3RhdGljIGFzeW5jIGFkZENvbmRpdGlvbihcblx0XHRjb25kaXRpb25OYW1lLFxuXHRcdGVudGl0aWVzID0gbnVsbCxcblx0XHR7IGFsbG93RHVwbGljYXRlcyA9IGZhbHNlLCByZXBsYWNlRXhpc3RpbmcgPSBmYWxzZSB9ID0ge31cblx0KSB7XG5cdFx0aWYgKCFlbnRpdGllcykge1xuXHRcdFx0Ly8gRmlyc3QgY2hlY2sgZm9yIGFueSBjb250cm9sbGVkIHRva2Vuc1xuXHRcdFx0aWYgKGNhbnZhcz8udG9rZW5zPy5jb250cm9sbGVkLmxlbmd0aCkgZW50aXRpZXMgPSBjYW52YXMudG9rZW5zLmNvbnRyb2xsZWQ7XG5cdFx0XHRlbHNlIGlmIChnYW1lLnVzZXIuY2hhcmFjdGVyKSBlbnRpdGllcyA9IGdhbWUudXNlci5jaGFyYWN0ZXI7XG5cdFx0fVxuXG5cdFx0aWYgKCFlbnRpdGllcykge1xuXHRcdFx0dWkubm90aWZpY2F0aW9ucy5lcnJvcihnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5BcHBseUNvbmRpdGlvbi5GYWlsZWQuTm9Ub2tlblwiKSk7XG5cdFx0XHRjb25zb2xlLmxvZyhcblx0XHRcdFx0YENvbWJhdCBVdGlsaXR5IEJlbHQgLSBFbmhhbmNlZCBDb25kaXRpb25zIHwgJHtnYW1lLmkxOG4ubG9jYWxpemUoXG5cdFx0XHRcdFx0XCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5BcHBseUNvbmRpdGlvbi5GYWlsZWQuTm9Ub2tlblwiXG5cdFx0XHRcdCl9YFxuXHRcdFx0KTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRsZXQgY29uZGl0aW9ucyA9IEVuaGFuY2VkQ29uZGl0aW9ucy5fbG9va3VwQ29uZGl0aW9uQnlOYW1lKGNvbmRpdGlvbk5hbWUpO1xuXG5cdFx0aWYgKCFjb25kaXRpb25zKSB7XG5cdFx0XHR1aS5ub3RpZmljYXRpb25zLmVycm9yKFxuXHRcdFx0XHRgJHtnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5BcHBseUNvbmRpdGlvbi5GYWlsZWQuTm9Db25kaXRpb25cIil9ICR7Y29uZGl0aW9uTmFtZX1gXG5cdFx0XHQpO1xuXHRcdFx0Y29uc29sZS5sb2coXG5cdFx0XHRcdGBDb21iYXQgVXRpbGl0eSBCZWx0IC0gRW5oYW5jZWQgQ29uZGl0aW9ucyB8ICR7Z2FtZS5pMThuLmxvY2FsaXplKFxuXHRcdFx0XHRcdFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuQXBwbHlDb25kaXRpb24uRmFpbGVkLk5vQ29uZGl0aW9uXCJcblx0XHRcdFx0KX1gLFxuXHRcdFx0XHRjb25kaXRpb25OYW1lXG5cdFx0XHQpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbmRpdGlvbnMgPSBjb25kaXRpb25zIGluc3RhbmNlb2YgQXJyYXkgPyBjb25kaXRpb25zIDogW2NvbmRpdGlvbnNdO1xuXHRcdGNvbnN0IGNvbmRpdGlvbk5hbWVzID0gY29uZGl0aW9ucy5tYXAoKGMpID0+IGMubmFtZSk7XG5cblx0XHRsZXQgZWZmZWN0cyA9IEVuaGFuY2VkQ29uZGl0aW9ucy5nZXRBY3RpdmVFZmZlY3QoY29uZGl0aW9ucyk7XG5cblx0XHRpZiAoIWVmZmVjdHMpIHtcblx0XHRcdHVpLm5vdGlmaWNhdGlvbnMuZXJyb3IoXG5cdFx0XHRcdGAke2dhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05EVElPTlMuQXBwbHlDb25kaXRpb24uRmFpbGVkLk5vRWZmZWN0XCIpfSAke2NvbmRpdGlvbnN9YFxuXHRcdFx0KTtcblx0XHRcdGNvbnNvbGUubG9nKFxuXHRcdFx0XHRgQ29uZGl0aW9uIExhYiAmIFRyaWdnbGVyIHwgJHtnYW1lLmkxOG4ubG9jYWxpemUoXG5cdFx0XHRcdFx0XCJDTFQuRU5IQU5DRURfQ09ORFRJT05TLkFwcGx5Q29uZGl0aW9uLkZhaWxlZC5Ob0VmZmVjdFwiXG5cdFx0XHRcdCl9YCxcblx0XHRcdFx0Y29uZGl0aW9uc1xuXHRcdFx0KTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRlZmZlY3RzID1cblx0XHRcdGVmZmVjdHMgaW5zdGFuY2VvZiBBcnJheVxuXHRcdFx0XHQ/IEVuaGFuY2VkQ29uZGl0aW9ucy5fcHJlcGFyZUFjdGl2ZUVmZmVjdHMoZWZmZWN0cylcblx0XHRcdFx0OiBFbmhhbmNlZENvbmRpdGlvbnMuX3ByZXBhcmVBY3RpdmVFZmZlY3RzKFtlZmZlY3RzXSk7XG5cblx0XHRpZiAoZW50aXRpZXMgJiYgIShlbnRpdGllcyBpbnN0YW5jZW9mIEFycmF5KSkge1xuXHRcdFx0ZW50aXRpZXMgPSBbZW50aXRpZXNdO1xuXHRcdH1cblxuXHRcdGZvciAobGV0IGVudGl0eSBvZiBlbnRpdGllcykge1xuXHRcdFx0Y29uc3QgYWN0b3IgPVxuXHRcdFx0XHRlbnRpdHkgaW5zdGFuY2VvZiBBY3RvclxuXHRcdFx0XHRcdD8gZW50aXR5XG5cdFx0XHRcdFx0OiBlbnRpdHkgaW5zdGFuY2VvZiBUb2tlbiB8fCBlbnRpdHkgaW5zdGFuY2VvZiBUb2tlbkRvY3VtZW50XG5cdFx0XHRcdFx0XHQ/IGVudGl0eS5hY3RvclxuXHRcdFx0XHRcdFx0OiBudWxsO1xuXG5cdFx0XHRpZiAoIWFjdG9yKSBjb250aW51ZTtcblxuXHRcdFx0Y29uc3QgaGFzRHVwbGljYXRlcyA9IEVuaGFuY2VkQ29uZGl0aW9ucy5oYXNDb25kaXRpb24oY29uZGl0aW9uTmFtZXMsIGFjdG9yLCB7IHdhcm46IGZhbHNlIH0pO1xuXHRcdFx0Y29uc3QgbmV3RWZmZWN0cyA9IFtdO1xuXHRcdFx0Y29uc3QgdXBkYXRlRWZmZWN0cyA9IFtdO1xuXG5cdFx0XHQvLyBJZiB0aGVyZSBhcmUgZHVwbGljYXRlIENvbmRpdGlvbiBlZmZlY3RzIG9uIHRoZSBBY3RvciB0YWtlIGV4dHJhIHN0ZXBzXG5cdFx0XHRpZiAoaGFzRHVwbGljYXRlcykge1xuXHRcdFx0XHQvLyBAdG9kbyAjMzQ4IGRldGVybWluZSB0aGUgYmVzdCB3YXkgdG8gcmFpc2Ugd2FybmluZ3MgaW4gdGhpcyBzY2VuYXJpb1xuXHRcdFx0XHQvKlxuICAgICAgICAgICAgICAgIGlmICh3YXJuKSB7XG4gICAgICAgICAgICAgICAgICAgIHVpLm5vdGlmaWNhdGlvbnMud2FybihgJHtlbnRpdHkubmFtZX06ICR7Y29uZGl0aW9uTmFtZX0gJHtnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5BcHBseUNvbmRpdGlvbi5GYWlsZWQuQWxyZWFkeUFjdGl2ZVwiKX1gKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYENvbWJhdCBVdGlsaXR5IEJlbHQgLSBFbmhhbmNlZCBDb25kaXRpb25zIHwgJHtlbnRpdHkubmFtZX06ICR7Y29uZGl0aW9uTmFtZX0gJHtnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5BcHBseUNvbmRpdGlvbi5GYWlsZWQuQWxyZWFkeUFjdGl2ZVwiKX1gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKi9cblxuXHRcdFx0XHQvLyBHZXQgdGhlIGV4aXN0aW5nIGNvbmRpdGlvbnMgb24gdGhlIGFjdG9yXG5cdFx0XHRcdGxldCBleGlzdGluZ0NvbmRpdGlvbkVmZmVjdHMgPSBFbmhhbmNlZENvbmRpdGlvbnMuZ2V0Q29uZGl0aW9uRWZmZWN0cyhhY3RvciwgeyB3YXJuOiBmYWxzZSB9KTtcblx0XHRcdFx0ZXhpc3RpbmdDb25kaXRpb25FZmZlY3RzID1cblx0XHRcdFx0XHRleGlzdGluZ0NvbmRpdGlvbkVmZmVjdHMgaW5zdGFuY2VvZiBBcnJheSA/IGV4aXN0aW5nQ29uZGl0aW9uRWZmZWN0cyA6IFtleGlzdGluZ0NvbmRpdGlvbkVmZmVjdHNdO1xuXG5cdFx0XHRcdC8vIExvb3AgdGhyb3VnaCB0aGUgZWZmZWN0cyBzb3J0aW5nIHRoZW0gaW50byBlaXRoZXIgZXhpc3Rpbmcgb3IgbmV3IGVmZmVjdHNcblx0XHRcdFx0Zm9yIChjb25zdCBlZmZlY3Qgb2YgZWZmZWN0cykge1xuXHRcdFx0XHRcdC8vIFNjZW5hcmlvIDE6IGlmIGR1cGxpY2F0ZXMgYXJlIGFsbG93ZWQsIGJ1dCBleGlzdGluZyBjb25kaXRpb25zIGFyZSBub3QgcmVwbGFjZWQsIGV2ZXJ5dGhpbmcgaXMgbmV3XG5cdFx0XHRcdFx0aWYgKGFsbG93RHVwbGljYXRlcyAmJiAhcmVwbGFjZUV4aXN0aW5nKSB7XG5cdFx0XHRcdFx0XHRuZXdFZmZlY3RzLnB1c2goZWZmZWN0KTtcblx0XHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGNvbnN0IGNvbmRpdGlvbklkID0gZ2V0UHJvcGVydHkoXG5cdFx0XHRcdFx0XHRlZmZlY3QsXG5cdFx0XHRcdFx0XHRgZmxhZ3MuY29uZGl0aW9uLWxhYi10cmlnZ2xlci4ke1wiY29uZGl0aW9uSWRcIn1gXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRjb25zdCBtYXRjaGVkQ29uZGl0aW9uRWZmZWN0cyA9IGV4aXN0aW5nQ29uZGl0aW9uRWZmZWN0cy5maWx0ZXIoXG5cdFx0XHRcdFx0XHQoZSkgPT4gZS5nZXRGbGFnKFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImNvbmRpdGlvbklkXCIpID09PSBjb25kaXRpb25JZFxuXHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHQvLyBTY2VuYXJpbyAyOiBpZiBkdXBsaWNhdGVzIGFyZSBhbGxvd2VkLCBhbmQgZXhpc3RpbmcgY29uZGl0aW9ucyBzaG91bGQgYmUgcmVwbGFjZWQsIGFkZCBhbnkgZXhpc3RpbmcgY29uZGl0aW9ucyB0byB1cGRhdGVcblx0XHRcdFx0XHRpZiAocmVwbGFjZUV4aXN0aW5nKSB7XG5cdFx0XHRcdFx0XHRmb3IgKGNvbnN0IG1hdGNoZWRDb25kaXRpb24gb2YgbWF0Y2hlZENvbmRpdGlvbkVmZmVjdHMpIHtcblx0XHRcdFx0XHRcdFx0dXBkYXRlRWZmZWN0cy5wdXNoKHsgaWQ6IG1hdGNoZWRDb25kaXRpb24uaWQsIC4uLmVmZmVjdCB9KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBTY2VuYXJpbyAyIGNvbnQnZDogaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWF0Y2hlZCwgaXQgbXVzdCBiZSBuZXcsIHNvIGFkZCB0byB0aGUgbmV3IGVmZmVjdHNcblx0XHRcdFx0XHQvLyBTY2VuYXJpbyAzOiBpZiBkdXBsaWNhdGVzIGFyZSBub3QgYWxsb3dlZCwgYW5kIGV4aXN0aW5nIGNvbmRpdGlvbnMgYXJlIG5vdCByZXBsYWNlZCwganVzdCBhZGQgdGhlIG5ldyBjb25kaXRpb25zXG5cdFx0XHRcdFx0aWYgKCFtYXRjaGVkQ29uZGl0aW9uRWZmZWN0cy5sZW5ndGgpIG5ld0VmZmVjdHMucHVzaChlZmZlY3QpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIHRoZSBhbnkgb2YgdGhlIGNvbmRpdGlvbnMgcmVtb3ZlIG90aGVycywgcmVtb3ZlIGFsbCBjb25kaXRpb25zXG5cdFx0XHQvLyBAdG9kbyBtYXliZSBhZGQgdGhpcyB0byB0aGUgbG9naWMgYWJvdmU/XG5cdFx0XHRpZiAoY29uZGl0aW9ucy5zb21lKChjKSA9PiBjPy5vcHRpb25zPy5yZW1vdmVPdGhlcnMpKSB7XG5cdFx0XHRcdGF3YWl0IEVuaGFuY2VkQ29uZGl0aW9ucy5yZW1vdmVBbGxDb25kaXRpb25zKGFjdG9yLCB7IHdhcm46IGZhbHNlIH0pO1xuXHRcdFx0fVxuXG5cdFx0XHRjb25zdCBjcmVhdGVEYXRhID0gaGFzRHVwbGljYXRlcyA/IG5ld0VmZmVjdHMgOiBlZmZlY3RzO1xuXHRcdFx0Y29uc3QgdXBkYXRlRGF0YSA9IHVwZGF0ZUVmZmVjdHM7XG5cdFx0XHQvLyBJZiBzeXN0ZW0gaXMgZG5kMy41ZSwgdGhlbiBwcmV2ZW50IHVwc3RyZWFtIHVwZGF0ZXMgdG8gYXZvaWQgY29uZGl0aW9uIGJlaW5nIGltbWVkaWF0ZWx5IHJlbW92ZWRcblx0XHRcdGNvbnN0IHN0b3BVcGRhdGVzID0gZ2FtZS5zeXN0ZW0uaWQgPT09IFwiRDM1RVwiO1xuXG5cdFx0XHRpZiAoY3JlYXRlRGF0YS5sZW5ndGgpIGF3YWl0IGFjdG9yLmNyZWF0ZUVtYmVkZGVkRG9jdW1lbnRzKFwiQWN0aXZlRWZmZWN0XCIsIGNyZWF0ZURhdGEsIHsgc3RvcFVwZGF0ZXMgfSk7XG5cdFx0XHRpZiAodXBkYXRlRGF0YS5sZW5ndGgpIGF3YWl0IGFjdG9yLnVwZGF0ZUVtYmVkZGVkRG9jdW1lbnRzKFwiQWN0aXZlRWZmZWN0XCIsIHVwZGF0ZURhdGEsIHsgc3RvcFVwZGF0ZXMgfSk7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIEdldHMgYSBjb25kaXRpb24gYnkgbmFtZSBmcm9tIHRoZSBDb25kaXRpb24gTWFwXG5cdCAqIEBwYXJhbSB7Kn0gY29uZGl0aW9uTmFtZVxuXHQgKiBAcGFyYW0geyp9IG9wdGlvbnMud2FyblxuXHQgKi9cblx0c3RhdGljIGdldENvbmRpdGlvbihjb25kaXRpb25OYW1lLCBtYXAgPSBudWxsLCB7IHdhcm4gPSBmYWxzZSB9ID0ge30pIHtcblx0XHRpZiAoIWNvbmRpdGlvbk5hbWUpIHtcblx0XHRcdGlmICh3YXJuKSB1aS5ub3RpZmljYXRpb25zLmVycm9yKGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkdldENvbmRpdGlvbi5GYWlsZWQuTm9Db25kaXRpb25cIikpO1xuXHRcdH1cblxuXHRcdHJldHVybiBFbmhhbmNlZENvbmRpdGlvbnMuX2xvb2t1cENvbmRpdGlvbkJ5TmFtZShjb25kaXRpb25OYW1lKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBSZXRyaWV2ZXMgYWxsIGFjdGl2ZSBjb25kaXRpb25zIGZvciBvbmUgb3IgbW9yZSBnaXZlbiBlbnRpdGllcyAoQWN0b3JzIG9yIFRva2Vucylcblx0ICogQHBhcmFtIHtBY3RvciB8IFRva2VufSBlbnRpdGllcyAgb25lIG9yIG1vcmUgQWN0b3JzIG9yIFRva2VucyB0byBnZXQgQ29uZGl0aW9ucyBmcm9tXG5cdCAqIEBwYXJhbSB7Ym9vbGVhbn0gb3B0aW9ucy53YXJuICBvdXRwdXQgbm90aWZpY2F0aW9uc1xuXHQgKiBAcmV0dXJucyB7QXJyYXl8dW5kZWZpbmVkfSBlbnRpdHlDb25kaXRpb25NYXAgIGEgbWFwcGluZyBvZiBjb25kaXRpb25zIGZvciBlYWNoIHByb3ZpZGVkIGVudGl0eVxuXHQgKiBAZXhhbXBsZVxuXHQgKiAvLyBHZXQgY29uZGl0aW9ucyBmb3IgYW4gQWN0b3IgbmFtZWQgXCJCb2JcIlxuXHQgKiBnYW1lLmNsdC5nZXRDb25kaXRpb25zKGdhbWUuYWN0b3JzLmdldE5hbWUoXCJCb2JcIikpO1xuXHQgKiBAZXhhbXBsZVxuXHQgKiAvLyBHZXQgY29uZGl0aW9ucyBmb3IgdGhlIGN1cnJlbnRseSBjb250cm9sbGVkIFRva2VuXG5cdCAqIGdhbWUuY2x0LmdldENvbmRpdGlvbnMoKTtcblx0ICovXG5cdHN0YXRpYyBnZXRDb25kaXRpb25zKGVudGl0aWVzID0gbnVsbCwgeyB3YXJuID0gdHJ1ZSB9ID0ge30pIHtcblx0XHRpZiAoIWVudGl0aWVzKSB7XG5cdFx0XHQvLyBGaXJzdCBjaGVjayBmb3IgYW55IGNvbnRyb2xsZWQgdG9rZW5zXG5cdFx0XHRpZiAoY2FudmFzPy50b2tlbnM/LmNvbnRyb2xsZWQubGVuZ3RoKSBlbnRpdGllcyA9IGNhbnZhcy50b2tlbnMuY29udHJvbGxlZDtcblx0XHRcdC8vIFRoZW4gY2hlY2sgaWYgdGhlIHVzZXIgaGFzIGFuIGFzc2lnbmVkIGNoYXJhY3RlclxuXHRcdFx0ZWxzZSBpZiAoZ2FtZS51c2VyLmNoYXJhY3RlcikgZW50aXRpZXMgPSBnYW1lLnVzZXIuY2hhcmFjdGVyO1xuXHRcdH1cblxuXHRcdGlmICghZW50aXRpZXMpIHtcblx0XHRcdGlmICh3YXJuKSB1aS5ub3RpZmljYXRpb25zLmVycm9yKGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkdldENvbmRpdGlvbnMuRmFpbGVkLk5vVG9rZW5cIikpO1xuXHRcdFx0Y29uc29sZS5sb2coXG5cdFx0XHRcdGBDb21iYXQgVXRpbGl0eSBCZWx0IC0gRW5oYW5jZWQgQ29uZGl0aW9ucyB8ICR7Z2FtZS5pMThuLmxvY2FsaXplKFxuXHRcdFx0XHRcdFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuR2V0Q29uZGl0aW9ucy5GYWlsZWQuTm9Ub2tlblwiXG5cdFx0XHRcdCl9YFxuXHRcdFx0KTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRjb25zdCBtYXAgPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJhY3RpdmVDb25kaXRpb25NYXBcIik7XG5cblx0XHRpZiAoIW1hcCB8fCAhbWFwLmxlbmd0aCkge1xuXHRcdFx0aWYgKHdhcm4pIHVpLm5vdGlmaWNhdGlvbnMuZXJyb3IoZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuR2V0Q29uZGl0aW9ucy5GYWlsZWQuTm9Db25kaXRpb25cIikpO1xuXHRcdFx0Y29uc29sZS5sb2coXG5cdFx0XHRcdGBDb21iYXQgVXRpbGl0eSBCZWx0IC0gRW5oYW5jZWQgQ29uZGl0aW9ucyB8ICR7Z2FtZS5pMThuLmxvY2FsaXplKFxuXHRcdFx0XHRcdFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuR2V0Q29uZGl0aW9ucy5GYWlsZWQuTm9Db25kaXRpb25cIlxuXHRcdFx0XHQpfWBcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCEoZW50aXRpZXMgaW5zdGFuY2VvZiBBcnJheSkpIHtcblx0XHRcdGVudGl0aWVzID0gW2VudGl0aWVzXTtcblx0XHR9XG5cblx0XHRjb25zdCByZXN1bHRzID0gW107XG5cblx0XHRmb3IgKGxldCBlbnRpdHkgb2YgZW50aXRpZXMpIHtcblx0XHRcdGNvbnN0IGFjdG9yID1cblx0XHRcdFx0ZW50aXR5IGluc3RhbmNlb2YgQWN0b3Jcblx0XHRcdFx0XHQ/IGVudGl0eVxuXHRcdFx0XHRcdDogZW50aXR5IGluc3RhbmNlb2YgVG9rZW4gfHwgZW50aXR5IGluc3RhbmNlb2YgVG9rZW5Eb2N1bWVudFxuXHRcdFx0XHRcdFx0PyBlbnRpdHkuYWN0b3Jcblx0XHRcdFx0XHRcdDogbnVsbDtcblxuXHRcdFx0Y29uc3QgZWZmZWN0cyA9IGFjdG9yPy5lZmZlY3RzLmNvbnRlbnRzO1xuXG5cdFx0XHRpZiAoIWVmZmVjdHMpIGNvbnRpbnVlO1xuXG5cdFx0XHRjb25zdCBlZmZlY3RJZHMgPVxuXHRcdFx0XHRlZmZlY3RzIGluc3RhbmNlb2YgQXJyYXlcblx0XHRcdFx0XHQ/IGVmZmVjdHMubWFwKChlKSA9PiBlLmdldEZsYWcoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiY29uZGl0aW9uSWRcIikpXG5cdFx0XHRcdFx0OiBlZmZlY3RzLmdldEZsYWcoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiY29uZGl0aW9uSWRcIik7XG5cblx0XHRcdGlmICghZWZmZWN0SWRzLmxlbmd0aCkgY29udGludWU7XG5cblx0XHRcdGNvbnN0IGVudGl0eUNvbmRpdGlvbnMgPSB7XG5cdFx0XHRcdGVudGl0eTogZW50aXR5LFxuXHRcdFx0XHRjb25kaXRpb25zOiBFbmhhbmNlZENvbmRpdGlvbnMubG9va3VwRW50cnlNYXBwaW5nKGVmZmVjdElkcylcblx0XHRcdH07XG5cblx0XHRcdHJlc3VsdHMucHVzaChlbnRpdHlDb25kaXRpb25zKTtcblx0XHR9XG5cblx0XHRpZiAoIXJlc3VsdHMubGVuZ3RoKSB7XG5cdFx0XHRpZiAod2FybikgdWkubm90aWZpY2F0aW9ucy5ub3RpZnkoZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuR2V0Q29uZGl0aW9ucy5GYWlsZWQuTm9SZXN1bHRzXCIpKTtcblx0XHRcdGNvbnNvbGUubG9nKFxuXHRcdFx0XHRgQ29tYmF0IFV0aWxpdHkgQmVsdCAtIEVuaGFuY2VkIENvbmRpdGlvbnMgfCAke2dhbWUuaTE4bi5sb2NhbGl6ZShcblx0XHRcdFx0XHRcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkdldENvbmRpdGlvbnMuRmFpbGVkLk5vUmVzdWx0c1wiXG5cdFx0XHRcdCl9YFxuXHRcdFx0KTtcblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH1cblxuXHRcdHJldHVybiByZXN1bHRzLmxlbmd0aCA+IDEgPyByZXN1bHRzIDogcmVzdWx0cy5zaGlmdCgpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEdldHMgdGhlIEFjdGl2ZSBFZmZlY3QgZGF0YSAoaWYgYW55KSBmb3IgdGhlIGdpdmVuIGNvbmRpdGlvblxuXHQgKiBAcGFyYW0geyp9IGNvbmRpdGlvblxuXHQgKi9cblx0c3RhdGljIGdldEFjdGl2ZUVmZmVjdChjb25kaXRpb24pIHtcblx0XHRyZXR1cm4gRW5oYW5jZWRDb25kaXRpb25zLl9wcmVwYXJlU3RhdHVzRWZmZWN0cyhjb25kaXRpb24pO1xuXHR9XG5cblx0LyoqXG5cdCAqIEdldHMgYW55IEFjdGl2ZSBFZmZlY3QgaW5zdGFuY2VzIHByZXNlbnQgb24gdGhlIGVudGl0aWVzIChBY3Rvci9zIG9yIFRva2VuL3MpIHRoYXQgYXJlIG1hcHBlZCBDb25kaXRpb25zXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBlbnRpdGllcyAgdGhlIGVudGl0aWVzIHRvIGNoZWNrXG5cdCAqIEBwYXJhbSB7QXJyYXl9IG1hcCAgdGhlIENvbmRpdGlvbiBtYXAgdG8gY2hlY2sgKG9wdGlvbmFsKVxuXHQgKiBAcGFyYW0ge2Jvb2xlYW59IHdhcm4gIG91dHB1dCBub3RpZmljYXRpb25zXG5cdCAqIEByZXR1cm5zIHtNYXAgfCBvYmplY3R9IEEgTWFwIGNvbnRhaW5pbmcgdGhlIEFjdG9yIElkIGFuZCB0aGUgQ29uZGl0aW9uIEFjdGl2ZSBFZmZlY3QgaW5zdGFuY2VzIGlmIGFueVxuXHQgKi9cblx0c3RhdGljIGdldENvbmRpdGlvbkVmZmVjdHMoZW50aXRpZXMsIG1hcCA9IG51bGwsIHsgd2FybiA9IHRydWUgfSA9IHt9KSB7XG5cdFx0aWYgKCFlbnRpdGllcykge1xuXHRcdFx0Ly8gRmlyc3QgY2hlY2sgZm9yIGFueSBjb250cm9sbGVkIHRva2Vuc1xuXHRcdFx0aWYgKGNhbnZhcz8udG9rZW5zPy5jb250cm9sbGVkLmxlbmd0aCkgZW50aXRpZXMgPSBjYW52YXMudG9rZW5zLmNvbnRyb2xsZWQ7XG5cdFx0XHRlbHNlIGlmIChnYW1lLnVzZXIuY2hhcmFjdGVyKSBlbnRpdGllcyA9IGdhbWUudXNlci5jaGFyYWN0ZXI7XG5cdFx0fVxuXG5cdFx0aWYgKCFlbnRpdGllcykge1xuXHRcdFx0aWYgKHdhcm4pIHVpLm5vdGlmaWNhdGlvbnMuZXJyb3IoXG5cdFx0XHRcdGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkdldENvbmRpdGlvbkVmZmVjdHMuRmFpbGVkLk5vRW50aXR5XCIpXG5cdFx0XHQpO1xuXHRcdFx0Y29uc29sZS5sb2coXG5cdFx0XHRcdGBDb21iYXQgVXRpbGl0eSBCZWx0IC0gRW5oYW5jZWQgQ29uZGl0aW9ucyB8ICR7Z2FtZS5pMThuLmxvY2FsaXplKFxuXHRcdFx0XHRcdFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuUmVtb3ZlQ29uZGl0aW9uLkZhaWxlZC5Ob1Rva2VuXCJcblx0XHRcdFx0KX1gXG5cdFx0XHQpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGVudGl0aWVzID0gZW50aXRpZXMgaW5zdGFuY2VvZiBBcnJheSA/IGVudGl0aWVzIDogW2VudGl0aWVzXTtcblxuXHRcdGlmICghbWFwKSBtYXAgPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJhY3RpdmVDb25kaXRpb25NYXBcIik7XG5cblx0XHRsZXQgcmVzdWx0cyA9IG5ldyBDb2xsZWN0aW9uKCk7XG5cblx0XHRmb3IgKGNvbnN0IGVudGl0eSBvZiBlbnRpdGllcykge1xuXHRcdFx0Y29uc3QgYWN0b3IgPVxuXHRcdFx0XHRlbnRpdHkgaW5zdGFuY2VvZiBBY3RvclxuXHRcdFx0XHRcdD8gZW50aXR5XG5cdFx0XHRcdFx0OiBlbnRpdHkgaW5zdGFuY2VvZiBUb2tlbiB8fCBlbnRpdHkgaW5zdGFuY2VvZiBUb2tlbkRvY3VtZW50XG5cdFx0XHRcdFx0XHQ/IGVudGl0eS5hY3RvclxuXHRcdFx0XHRcdFx0OiBudWxsO1xuXHRcdFx0Y29uc3QgYWN0aXZlRWZmZWN0cyA9IGFjdG9yLmVmZmVjdHMuY29udGVudHM7XG5cblx0XHRcdGlmICghYWN0aXZlRWZmZWN0cy5sZW5ndGgpIGNvbnRpbnVlO1xuXG5cdFx0XHRjb25zdCBjb25kaXRpb25FZmZlY3RzID0gYWN0aXZlRWZmZWN0cy5maWx0ZXIoKGFlKSA9PlxuXHRcdFx0XHRhZS5nZXRGbGFnKFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImNvbmRpdGlvbklkXCIpXG5cdFx0XHQpO1xuXG5cdFx0XHRpZiAoIWNvbmRpdGlvbkVmZmVjdHMubGVuZ3RoKSBjb250aW51ZTtcblxuXHRcdFx0cmVzdWx0cy5zZXQoZW50aXR5LmlkLCBjb25kaXRpb25FZmZlY3RzLmxlbmd0aCA+IDEgPyBjb25kaXRpb25FZmZlY3RzIDogY29uZGl0aW9uRWZmZWN0cy5zaGlmdCgpKTtcblx0XHR9XG5cblx0XHRpZiAoIXJlc3VsdHMuc2l6ZSkgcmV0dXJuIG51bGw7XG5cblx0XHRyZXR1cm4gcmVzdWx0cy5zaXplID4gMSA/IHJlc3VsdHMgOiByZXN1bHRzLnZhbHVlcygpLm5leHQoKS52YWx1ZTtcblx0fVxuXG5cdC8qKlxuXHQgKiBDaGVja3MgaWYgdGhlIHByb3ZpZGVkIEVudGl0eSAoQWN0b3Igb3IgVG9rZW4pIGhhcyB0aGUgZ2l2ZW4gY29uZGl0aW9uXG5cdCAqIEBwYXJhbSB7c3RyaW5nIHwgQXJyYXl9IGNvbmRpdGlvbk5hbWUgIHRoZSBuYW1lL3Mgb2YgdGhlIGNvbmRpdGlvbiBvciBjb25kaXRpb25zIHRvIGNoZWNrIGZvclxuXHQgKiBAcGFyYW0ge0FjdG9yIHwgVG9rZW4gfCBBcnJheX0gZW50aXRpZXMgIHRoZSBlbnRpdHkgb3IgZW50aXRpZXMgdG8gY2hlY2sgKEFjdG9yL3Mgb3IgVG9rZW4vcylcblx0ICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXSAgb3B0aW9ucyBvYmplY3Rcblx0ICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy53YXJuXSAgd2hldGhlciBvciBub3QgdG8gb3V0cHV0IG5vdGlmaWNhdGlvbnNcblx0ICogQHJldHVybnMge2Jvb2xlYW59IGhhc0NvbmRpdGlvbiAgUmV0dXJucyB0cnVlIGlmIG9uZSBvciBtb3JlIG9mIHRoZSBwcm92aWRlZCBlbnRpdGllcyBoYXMgb25lIG9yIG1vcmUgb2YgdGhlIHByb3ZpZGVkIGNvbmRpdGlvbnNcblx0ICogQGV4YW1wbGVcblx0ICogLy8gQ2hlY2sgZm9yIHRoZSBcIkJsaW5kZWRcIiBjb25kaXRpb24gb24gQWN0b3IgXCJCb2JcIlxuXHQgKiBnYW1lLmNsdC5oYXNDb25kaXRpb24oXCJCbGluZGVkXCIsIGdhbWUuYWN0b3JzLmdldE5hbWUoXCJCb2JcIikpO1xuXHQgKiBAZXhhbXBsZVxuXHQgKiAvLyBDaGVjayBmb3IgdGhlIFwiQ2hhcm1lZFwiIGFuZCBcIkRlYWZlbmVkXCIgY29uZGl0aW9ucyBvbiB0aGUgY29udHJvbGxlZCB0b2tlbnNcblx0ICogZ2FtZS5jbHQuaGFzQ29uZGl0aW9uKFtcIkNoYXJtZWRcIiwgXCJEZWFmZW5lZFwiXSk7XG5cdCAqL1xuXHRzdGF0aWMgaGFzQ29uZGl0aW9uKGNvbmRpdGlvbk5hbWUsIGVudGl0aWVzID0gbnVsbCwgeyB3YXJuID0gdHJ1ZSB9ID0ge30pIHtcblx0XHRpZiAoIWNvbmRpdGlvbk5hbWUpIHtcblx0XHRcdGlmICh3YXJuKSB1aS5ub3RpZmljYXRpb25zLmVycm9yKGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkhhc0NvbmRpdGlvbi5GYWlsZWQuTm9Db25kaXRpb25cIikpO1xuXHRcdFx0Y29uc29sZS5sb2coXG5cdFx0XHRcdGBDb21iYXQgVXRpbGl0eSBCZWx0IC0gRW5oYW5jZWQgQ29uZGl0aW9ucyB8ICR7Z2FtZS5pMThuLmxvY2FsaXplKFxuXHRcdFx0XHRcdFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuSGFzQ29uZGl0aW9uLkZhaWxlZC5Ob0NvbmRpdGlvblwiXG5cdFx0XHRcdCl9YFxuXHRcdFx0KTtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRpZiAoIWVudGl0aWVzKSB7XG5cdFx0XHQvLyBGaXJzdCBjaGVjayBmb3IgYW55IGNvbnRyb2xsZWQgdG9rZW5zXG5cdFx0XHRpZiAoY2FudmFzPy50b2tlbnM/LmNvbnRyb2xsZWQubGVuZ3RoKSBlbnRpdGllcyA9IGNhbnZhcy50b2tlbnMuY29udHJvbGxlZDtcblx0XHRcdC8vIFRoZW4gY2hlY2sgaWYgdGhlIHVzZXIgaGFzIGFuIGFzc2lnbmVkIGNoYXJhY3RlclxuXHRcdFx0ZWxzZSBpZiAoZ2FtZS51c2VyLmNoYXJhY3RlcikgZW50aXRpZXMgPSBnYW1lLnVzZXIuY2hhcmFjdGVyO1xuXHRcdH1cblxuXHRcdGlmICghZW50aXRpZXMpIHtcblx0XHRcdGlmICh3YXJuKSB1aS5ub3RpZmljYXRpb25zLmVycm9yKGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkhhc0NvbmRpdGlvbi5GYWlsZWQuTm9Ub2tlblwiKSk7XG5cdFx0XHRjb25zb2xlLmxvZyhcblx0XHRcdFx0YENvbWJhdCBVdGlsaXR5IEJlbHQgLSBFbmhhbmNlZCBDb25kaXRpb25zIHwgJHtnYW1lLmkxOG4ubG9jYWxpemUoXG5cdFx0XHRcdFx0XCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5IYXNDb25kaXRpb24uRmFpbGVkLk5vVG9rZW5cIlxuXHRcdFx0XHQpfWBcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0ZW50aXRpZXMgPSBlbnRpdGllcyBpbnN0YW5jZW9mIEFycmF5ID8gZW50aXRpZXMgOiBbZW50aXRpZXNdO1xuXG5cdFx0bGV0IGNvbmRpdGlvbnMgPSBFbmhhbmNlZENvbmRpdGlvbnMuX2xvb2t1cENvbmRpdGlvbkJ5TmFtZShjb25kaXRpb25OYW1lKTtcblxuXHRcdGlmICghY29uZGl0aW9ucykge1xuXHRcdFx0aWYgKHdhcm4pIHVpLm5vdGlmaWNhdGlvbnMuZXJyb3IoZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuSGFzQ29uZGl0aW9uLkZhaWxlZC5Ob01hcHBpbmdcIikpO1xuXHRcdFx0Y29uc29sZS5sb2coXG5cdFx0XHRcdGBDb21iYXQgVXRpbGl0eSBCZWx0IC0gRW5oYW5jZWQgQ29uZGl0aW9ucyB8ICR7Z2FtZS5pMThuLmxvY2FsaXplKFxuXHRcdFx0XHRcdFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuUmVtb3ZlQ29uZGl0aW9uLkZhaWxlZC5Ob01hcHBpbmdcIlxuXHRcdFx0XHQpfWBcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Y29uZGl0aW9ucyA9IEVuaGFuY2VkQ29uZGl0aW9ucy5fcHJlcGFyZVN0YXR1c0VmZmVjdHMoY29uZGl0aW9ucyk7XG5cdFx0Y29uZGl0aW9ucyA9IGNvbmRpdGlvbnMgaW5zdGFuY2VvZiBBcnJheSA/IGNvbmRpdGlvbnMgOiBbY29uZGl0aW9uc107XG5cblx0XHRmb3IgKGxldCBlbnRpdHkgb2YgZW50aXRpZXMpIHtcblx0XHRcdGNvbnN0IGFjdG9yID1cblx0XHRcdFx0ZW50aXR5IGluc3RhbmNlb2YgQWN0b3Jcblx0XHRcdFx0XHQ/IGVudGl0eVxuXHRcdFx0XHRcdDogZW50aXR5IGluc3RhbmNlb2YgVG9rZW4gfHwgZW50aXR5IGluc3RhbmNlb2YgVG9rZW5Eb2N1bWVudFxuXHRcdFx0XHRcdFx0PyBlbnRpdHkuYWN0b3Jcblx0XHRcdFx0XHRcdDogbnVsbDtcblxuXHRcdFx0aWYgKCFhY3Rvci5lZmZlY3RzLnNpemUpIGNvbnRpbnVlO1xuXG5cdFx0XHRjb25zdCBjb25kaXRpb25FZmZlY3QgPSBhY3Rvci5lZmZlY3RzLmNvbnRlbnRzLnNvbWUoKGFlKSA9PiB7XG5cdFx0XHRcdHJldHVybiBjb25kaXRpb25zLnNvbWUoXG5cdFx0XHRcdFx0KGUpID0+XG5cdFx0XHRcdFx0XHRlPy5mbGFnc1tcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIl0uY29uZGl0aW9uSWRcblx0XHRcdFx0XHRcdD09PSBhZS5nZXRGbGFnKFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImNvbmRpdGlvbklkXCIpXG5cdFx0XHRcdCk7XG5cdFx0XHR9KTtcblxuXHRcdFx0aWYgKGNvbmRpdGlvbkVmZmVjdCkgcmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0LyoqXG5cdCAqIFJlbW92ZXMgb25lIG9yIG1vcmUgbmFtZWQgY29uZGl0aW9ucyBmcm9tIGFuIEVudGl0eSAoQWN0b3IvVG9rZW4pXG5cdCAqIEBwYXJhbSB7QWN0b3IgfCBUb2tlbn0gZW50aXRpZXMgIE9uZSBvciBtb3JlIEFjdG9ycyBvciBUb2tlbnNcblx0ICogQHBhcmFtIHtzdHJpbmd9IGNvbmRpdGlvbk5hbWUgIHRoZSBuYW1lIG9mIHRoZSBDb25kaXRpb24gdG8gcmVtb3ZlXG5cdCAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zICBvcHRpb25zIGZvciByZW1vdmFsXG5cdCAqIEBwYXJhbSB7Ym9vbGVhbn0gb3B0aW9ucy53YXJuICB3aGV0aGVyIG9yIG5vdCB0byByYWlzZSB3YXJuaW5ncyBvbiBlcnJvcnNcblx0ICogQGV4YW1wbGVcblx0ICogLy8gUmVtb3ZlIENvbmRpdGlvbiBuYW1lZCBcIkJsaW5kZWRcIiBmcm9tIGFuIEFjdG9yIG5hbWVkIEJvYlxuXHQgKiBnYW1lLmNsdC5yZW1vdmVDb25kaXRpb24oXCJCbGluZGVkXCIsIGdhbWUuYWN0b3JzLmdldE5hbWUoXCJCb2JcIikpO1xuXHQgKiBAZXhhbXBsZVxuXHQgKiAvLyBSZW1vdmUgQ29uZGl0aW9uIG5hbWVkIFwiQ2hhcm1lZFwiIGZyb20gdGhlIGN1cnJlbnRseSBjb250cm9sbGVkIFRva2VuLCBidXQgZG9uJ3Qgc2hvdyBhbnkgd2FybmluZ3MgaWYgaXQgZmFpbHMuXG5cdCAqIGdhbWUuY2x0LnJlbW92ZUNvbmRpdGlvbihcIkNoYXJtZWRcIiwge3dhcm49ZmFsc2V9KTtcblx0ICovXG5cdHN0YXRpYyBhc3luYyByZW1vdmVDb25kaXRpb24oY29uZGl0aW9uTmFtZSwgZW50aXRpZXMgPSBudWxsLCB7IHdhcm4gPSB0cnVlIH0gPSB7fSkge1xuXHRcdGlmICghZW50aXRpZXMpIHtcblx0XHRcdC8vIEZpcnN0IGNoZWNrIGZvciBhbnkgY29udHJvbGxlZCB0b2tlbnNcblx0XHRcdGlmIChjYW52YXM/LnRva2Vucz8uY29udHJvbGxlZC5sZW5ndGgpIGVudGl0aWVzID0gY2FudmFzLnRva2Vucy5jb250cm9sbGVkO1xuXHRcdFx0ZWxzZSBpZiAoZ2FtZS51c2VyLmNoYXJhY3RlcikgZW50aXRpZXMgPSBnYW1lLnVzZXIuY2hhcmFjdGVyO1xuXHRcdFx0ZWxzZSBlbnRpdGllcyA9IG51bGw7XG5cdFx0fVxuXG5cdFx0aWYgKCFlbnRpdGllcykge1xuXHRcdFx0aWYgKHdhcm4pIHVpLm5vdGlmaWNhdGlvbnMuZXJyb3IoZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuUmVtb3ZlQ29uZGl0aW9uLkZhaWxlZC5Ob1Rva2VuXCIpKTtcblx0XHRcdGNvbnNvbGUubG9nKFxuXHRcdFx0XHRgQ29tYmF0IFV0aWxpdHkgQmVsdCAtIEVuaGFuY2VkIENvbmRpdGlvbnMgfCAke2dhbWUuaTE4bi5sb2NhbGl6ZShcblx0XHRcdFx0XHRcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLlJlbW92ZUNvbmRpdGlvbi5GYWlsZWQuTm9Ub2tlblwiXG5cdFx0XHRcdCl9YFxuXHRcdFx0KTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIShjb25kaXRpb25OYW1lIGluc3RhbmNlb2YgQXJyYXkpKSBjb25kaXRpb25OYW1lID0gW2NvbmRpdGlvbk5hbWVdO1xuXG5cdFx0Y29uc3QgY29uZGl0aW9ucyA9IEVuaGFuY2VkQ29uZGl0aW9ucy5fbG9va3VwQ29uZGl0aW9uQnlOYW1lKGNvbmRpdGlvbk5hbWUpO1xuXG5cdFx0aWYgKCFjb25kaXRpb25zIHx8IChjb25kaXRpb25zIGluc3RhbmNlb2YgQXJyYXkgJiYgIWNvbmRpdGlvbnMubGVuZ3RoKSkge1xuXHRcdFx0aWYgKHdhcm4pIHVpLm5vdGlmaWNhdGlvbnMuZXJyb3IoXG5cdFx0XHRcdGAke2dhbWUuaTE4bi5sb2NhbGl6ZShcblx0XHRcdFx0XHRcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLlJlbW92ZUNvbmRpdGlvbi5GYWlsZWQuTm9Db25kaXRpb25cIlxuXHRcdFx0XHQpfSAke2NvbmRpdGlvbk5hbWV9YFxuXHRcdFx0KTtcblx0XHRcdGNvbnNvbGUubG9nKFxuXHRcdFx0XHRgQ29tYmF0IFV0aWxpdHkgQmVsdCAtIEVuaGFuY2VkIENvbmRpdGlvbnMgfCAke2dhbWUuaTE4bi5sb2NhbGl6ZShcblx0XHRcdFx0XHRcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLlJlbW92ZUNvbmRpdGlvbi5GYWlsZWQuTm9Db25kaXRpb25cIlxuXHRcdFx0XHQpfWAsXG5cdFx0XHRcdGNvbmRpdGlvbk5hbWVcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0bGV0IGVmZmVjdHMgPSBFbmhhbmNlZENvbmRpdGlvbnMuZ2V0QWN0aXZlRWZmZWN0KGNvbmRpdGlvbnMpO1xuXG5cdFx0aWYgKCFlZmZlY3RzKSB7XG5cdFx0XHRpZiAod2FybikgdWkubm90aWZpY2F0aW9ucy5lcnJvcihnYW1lLmkxOG4ubG9jYWxpemUoXCJFTkhBTkNFRF9DT05EVElPTlMuUmVtb3ZlQ29uZGl0aW9uLkZhaWxlZC5Ob0VmZmVjdFwiKSk7XG5cdFx0XHRjb25zb2xlLmxvZyhcblx0XHRcdFx0YENvbWJhdCBVdGlsaXR5IEJlbHQgLSBFbmhhbmNlZCBDb25kaXRpb24gfCAke2dhbWUuaTE4bi5sb2NhbGl6ZShcblx0XHRcdFx0XHRcIkVOSEFOQ0VEX0NPTkRUSU9OUy5SZW1vdmVDb25kaXRpb24uRmFpbGVkLk5vRWZmZWN0XCJcblx0XHRcdFx0KX1gLFxuXHRcdFx0XHRjb25kaXRpb25OYW1lXG5cdFx0XHQpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICghKGVmZmVjdHMgaW5zdGFuY2VvZiBBcnJheSkpIGVmZmVjdHMgPSBbZWZmZWN0c107XG5cblx0XHRpZiAoZW50aXRpZXMgJiYgIShlbnRpdGllcyBpbnN0YW5jZW9mIEFycmF5KSkgZW50aXRpZXMgPSBbZW50aXRpZXNdO1xuXG5cdFx0Zm9yIChsZXQgZW50aXR5IG9mIGVudGl0aWVzKSB7XG5cdFx0XHRjb25zdCBhY3RvciA9XG5cdFx0XHRcdGVudGl0eSBpbnN0YW5jZW9mIEFjdG9yXG5cdFx0XHRcdFx0PyBlbnRpdHlcblx0XHRcdFx0XHQ6IGVudGl0eSBpbnN0YW5jZW9mIFRva2VuIHx8IGVudGl0eSBpbnN0YW5jZW9mIFRva2VuRG9jdW1lbnRcblx0XHRcdFx0XHRcdD8gZW50aXR5LmFjdG9yXG5cdFx0XHRcdFx0XHQ6IG51bGw7XG5cdFx0XHRjb25zdCBhY3RpdmVFZmZlY3RzID0gYWN0b3IuZWZmZWN0cy5jb250ZW50cy5maWx0ZXIoKGUpID0+XG5cdFx0XHRcdGVmZmVjdHNcblx0XHRcdFx0XHQubWFwKChlKSA9PiBlLmZsYWdzW1wiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiXS5jb25kaXRpb25JZClcblx0XHRcdFx0XHQuaW5jbHVkZXMoZS5nZXRGbGFnKFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImNvbmRpdGlvbklkXCIpKVxuXHRcdFx0KTtcblxuXHRcdFx0aWYgKCFhY3RpdmVFZmZlY3RzIHx8IChhY3RpdmVFZmZlY3RzICYmICFhY3RpdmVFZmZlY3RzLmxlbmd0aCkpIHtcblx0XHRcdFx0aWYgKHdhcm4pIHVpLm5vdGlmaWNhdGlvbnMud2Fybihcblx0XHRcdFx0XHRgJHtjb25kaXRpb25OYW1lfSAke2dhbWUuaTE4bi5sb2NhbGl6ZShcblx0XHRcdFx0XHRcdFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuUmVtb3ZlQ29uZGl0aW9uLkZhaWxlZC5Ob3RBY3RpdmVcIlxuXHRcdFx0XHRcdCl9YFxuXHRcdFx0XHQpO1xuXHRcdFx0XHRjb25zb2xlLmxvZyhcblx0XHRcdFx0XHRgQ29tYmF0IFV0aWxpdHkgQmVsdCAtIEVuaGFuY2VkIENvbmRpdGlvbnMgfCAke2NvbmRpdGlvbk5hbWV9ICR7Z2FtZS5pMThuLmxvY2FsaXplKFxuXHRcdFx0XHRcdFx0XCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5SZW1vdmVDb25kaXRpb24uRmFpbGVkLk5vdEFjdGl2ZVwiXG5cdFx0XHRcdFx0KX1cIilgXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Y29uc3QgZWZmZWN0SWRzID0gYWN0aXZlRWZmZWN0cy5tYXAoKGUpID0+IGUuaWQpO1xuXG5cdFx0XHRhd2FpdCBhY3Rvci5kZWxldGVFbWJlZGRlZERvY3VtZW50cyhcIkFjdGl2ZUVmZmVjdFwiLCBlZmZlY3RJZHMpO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBSZW1vdmVzIGFsbCBjb25kaXRpb25zIGZyb20gdGhlIHByb3ZpZGVkIGVudGl0aWVzXG5cdCAqIEBwYXJhbSB7QWN0b3JzIHwgVG9rZW5zfSBlbnRpdGllcyAgT25lIG9yIG1vcmUgQWN0b3JzIG9yIFRva2VucyB0byByZW1vdmUgQ29uZGl0aW9ucyBmcm9tXG5cdCAqIEBwYXJhbSB7Ym9vbGVhbn0gb3B0aW9ucy53YXJuICBvdXRwdXQgbm90aWZpY2F0aW9uc1xuXHQgKiBAZXhhbXBsZVxuXHQgKiAvLyBSZW1vdmUgYWxsIENvbmRpdGlvbnMgb24gYW4gQWN0b3IgbmFtZWQgQm9iXG5cdCAqIGdhbWUuY2x0LnJlbW92ZUFsbENvbmRpdGlvbnMoZ2FtZS5hY3RvcnMuZ2V0TmFtZShcIkJvYlwiKSk7XG5cdCAqIEBleGFtcGxlXG5cdCAqIC8vIFJlbW92ZSBhbGwgQ29uZGl0aW9ucyBvbiB0aGUgY3VycmVudGx5IGNvbnRyb2xsZWQgVG9rZW5cblx0ICogZ2FtZS5jbHQucmVtb3ZlQWxsQ29uZGl0aW9ucygpO1xuXHQgKi9cblx0c3RhdGljIGFzeW5jIHJlbW92ZUFsbENvbmRpdGlvbnMoZW50aXRpZXMgPSBudWxsLCB7IHdhcm4gPSB0cnVlIH0gPSB7fSkge1xuXHRcdGlmICghZW50aXRpZXMpIHtcblx0XHRcdC8vIEZpcnN0IGNoZWNrIGZvciBhbnkgY29udHJvbGxlZCB0b2tlbnNcblx0XHRcdGlmIChjYW52YXM/LnRva2Vucz8uY29udHJvbGxlZC5sZW5ndGgpIGVudGl0aWVzID0gY2FudmFzLnRva2Vucy5jb250cm9sbGVkO1xuXHRcdFx0ZWxzZSBpZiAoZ2FtZS51c2VyLmNoYXJhY3RlcikgZW50aXRpZXMgPSBnYW1lLnVzZXIuY2hhcmFjdGVyO1xuXHRcdH1cblxuXHRcdGlmICghZW50aXRpZXMpIHtcblx0XHRcdGlmICh3YXJuKSB1aS5ub3RpZmljYXRpb25zLmVycm9yKGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLlJlbW92ZUNvbmRpdGlvbi5GYWlsZWQuTm9Ub2tlblwiKSk7XG5cdFx0XHRjb25zb2xlLmxvZyhcblx0XHRcdFx0YENvbWJhdCBVdGlsaXR5IEJlbHQgLSBFbmhhbmNlZCBDb25kaXRpb25zIHwgJHtnYW1lLmkxOG4ubG9jYWxpemUoXG5cdFx0XHRcdFx0XCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5SZW1vdmVDb25kaXRpb24uRmFpbGVkLk5vVG9rZW5cIlxuXHRcdFx0XHQpfWBcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0ZW50aXRpZXMgPSBlbnRpdGllcyBpbnN0YW5jZW9mIEFycmF5ID8gZW50aXRpZXMgOiBbZW50aXRpZXNdO1xuXG5cdFx0Zm9yIChsZXQgZW50aXR5IG9mIGVudGl0aWVzKSB7XG5cdFx0XHRjb25zdCBhY3RvciA9XG5cdFx0XHRcdGVudGl0eSBpbnN0YW5jZW9mIEFjdG9yXG5cdFx0XHRcdFx0PyBlbnRpdHlcblx0XHRcdFx0XHQ6IGVudGl0eSBpbnN0YW5jZW9mIFRva2VuIHx8IGVudGl0eSBpbnN0YW5jZW9mIFRva2VuRG9jdW1lbnRcblx0XHRcdFx0XHRcdD8gZW50aXR5LmFjdG9yXG5cdFx0XHRcdFx0XHQ6IG51bGw7XG5cblx0XHRcdGxldCBhY3RvckNvbmRpdGlvbkVmZmVjdHMgPSBFbmhhbmNlZENvbmRpdGlvbnMuZ2V0Q29uZGl0aW9uRWZmZWN0cyhhY3RvciwgeyB3YXJuOiBmYWxzZSB9KTtcblxuXHRcdFx0aWYgKCFhY3RvckNvbmRpdGlvbkVmZmVjdHMpIGNvbnRpbnVlO1xuXG5cdFx0XHRhY3RvckNvbmRpdGlvbkVmZmVjdHMgPVxuXHRcdFx0XHRhY3RvckNvbmRpdGlvbkVmZmVjdHMgaW5zdGFuY2VvZiBBcnJheSA/IGFjdG9yQ29uZGl0aW9uRWZmZWN0cyA6IFthY3RvckNvbmRpdGlvbkVmZmVjdHNdO1xuXG5cdFx0XHRjb25zdCBlZmZlY3RJZHMgPSBhY3RvckNvbmRpdGlvbkVmZmVjdHMubWFwKChhY2UpID0+IGFjZS5pZCk7XG5cblx0XHRcdGF3YWl0IGFjdG9yLmRlbGV0ZUVtYmVkZGVkRG9jdW1lbnRzKFwiQWN0aXZlRWZmZWN0XCIsIGVmZmVjdElkcyk7XG5cdFx0fVxuXHR9XG5cblx0c3RhdGljIGFzeW5jIF9taWdyYXRpb25IZWxwZXIoY3ViVmVyc2lvbikge1xuXHRcdGNvbnN0IGNvbmRpdGlvbk1pZ3JhdGlvblZlcnNpb24gPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJlbmhhbmNlZENvbmRpdGlvbnNNaWdyYXRpb25WZXJzaW9uXCIpO1xuXG5cdFx0aWYgKGZvdW5kcnkudXRpbHMuaXNOZXdlclZlcnNpb24oY3ViVmVyc2lvbiwgY29uZGl0aW9uTWlncmF0aW9uVmVyc2lvbikpIHtcblx0XHRcdGNvbnNvbGUubG9nKFwiQ0xUIHwgUGVyZm9ybWluZyBFbmhhbmNlZCBDb25kaXRpb24gbWlncmF0aW9uLi4uXCIpO1xuXHRcdFx0RW5oYW5jZWRDb25kaXRpb25zLl9taWdyYXRlQ29uZGl0aW9uSWRzKGdhbWUuY2x0Py5jb25kaXRpb25zKTtcblx0XHRcdGF3YWl0IGdhbWUuc2V0dGluZ3Muc2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImVuaGFuY2VkQ29uZGl0aW9uc01pZ3JhdGlvblZlcnNpb25cIiwgY3ViVmVyc2lvbik7XG5cdFx0XHRjb25zb2xlLmxvZyhcIkNMVCB8IEVuaGFuY2VkIENvbmRpdGlvbiBtaWdyYXRpb24gY29tcGxldGUhXCIpO1xuXHRcdH1cblx0fVxufVxuIiwiaW1wb3J0IHsgRW5oYW5jZWRDb25kaXRpb25zIH0gZnJvbSBcIi4vZW5oYW5jZWQtY29uZGl0aW9ucy9lbmhhbmNlZC1jb25kaXRpb25zLmpzXCI7XG5cbmV4cG9ydCBjbGFzcyBCdXRsZXIge1xuXHQvLyBJbnN0YW50aWF0ZSBnYWRnZXQgY2xhc3Nlc1xuXHRlbmhhbmNlZENvbmRpdGlvbnMgPSBuZXcgRW5oYW5jZWRDb25kaXRpb25zKCk7XG5cblx0Ly8gRXhwb3NlIEFQSSBtZXRob2RzXG5cdGdldENvbmRpdGlvbiA9IEVuaGFuY2VkQ29uZGl0aW9ucy5nZXRDb25kaXRpb247XG5cblx0Z2V0Q29uZGl0aW9ucyA9IEVuaGFuY2VkQ29uZGl0aW9ucy5nZXRDb25kaXRpb25zO1xuXG5cdGdldENvbmRpdGlvbkVmZmVjdHMgPSBFbmhhbmNlZENvbmRpdGlvbnMuZ2V0Q29uZGl0aW9uRWZmZWN0cztcblxuXHRoYXNDb25kaXRpb24gPSBFbmhhbmNlZENvbmRpdGlvbnMuaGFzQ29uZGl0aW9uO1xuXG5cdGFwcGx5Q29uZGl0aW9uID0gRW5oYW5jZWRDb25kaXRpb25zLmFwcGx5Q29uZGl0aW9uO1xuXG5cdGFkZENvbmRpdGlvbiA9IEVuaGFuY2VkQ29uZGl0aW9ucy5hZGRDb25kaXRpb247XG5cblx0cmVtb3ZlQ29uZGl0aW9uID0gRW5oYW5jZWRDb25kaXRpb25zLnJlbW92ZUNvbmRpdGlvbjtcblxuXHRyZW1vdmVBbGxDb25kaXRpb25zID0gRW5oYW5jZWRDb25kaXRpb25zLnJlbW92ZUFsbENvbmRpdGlvbnM7XG59XG4iLCIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgwqkgMjAyMSBmdnR0LWxpYi13cmFwcGVyIFJ1aSBQaW5oZWlyb1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLy8gQSBzaGltIGZvciB0aGUgbGliV3JhcHBlciBsaWJyYXJ5XG5leHBvcnQgbGV0IGxpYldyYXBwZXIgPSB1bmRlZmluZWQ7XG5cbmV4cG9ydCBjb25zdCBWRVJTSU9OUyA9IFsxLCAxMiwgMl07XG5leHBvcnQgY29uc3QgVEdUX1NQTElUX1JFID0gbmV3IFJlZ0V4cChcIihbXi5bXSt8XFxcXFsoJyhbXidcXFxcXFxcXF18XFxcXFxcXFwuKSs/J3xcXFwiKFteXFxcIlxcXFxcXFxcXXxcXFxcXFxcXC4pKz9cXFwiKVxcXFxdKVwiLCBcImdcIik7XG5leHBvcnQgY29uc3QgVEdUX0NMRUFOVVBfUkUgPSBuZXcgUmVnRXhwKFwiKF5cXFxcWyd8J1xcXFxdJHxeXFxcXFtcXFwifFxcXCJcXFxcXSQpXCIsIFwiZ1wiKTtcblxuLy8gTWFpbiBzaGltIGNvZGVcbkhvb2tzLm9uY2UoXCJpbml0XCIsICgpID0+IHtcblx0Ly8gQ2hlY2sgaWYgdGhlIHJlYWwgbW9kdWxlIGlzIGFscmVhZHkgbG9hZGVkIC0gaWYgc28sIHVzZSBpdFxuXHRpZiAoZ2xvYmFsVGhpcy5saWJXcmFwcGVyICYmICEoZ2xvYmFsVGhpcy5saWJXcmFwcGVyLmlzX2ZhbGxiYWNrID8/IHRydWUpKSB7XG5cdFx0bGliV3JhcHBlciA9IGdsb2JhbFRoaXMubGliV3JhcHBlcjtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBGYWxsYmFjayBpbXBsZW1lbnRhdGlvblxuXHRsaWJXcmFwcGVyID0gY2xhc3Mge1xuXHRcdHN0YXRpYyBnZXQgaXNfZmFsbGJhY2soKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHRzdGF0aWMgZ2V0IFdSQVBQRVIoKSB7XG5cdFx0XHRyZXR1cm4gXCJXUkFQUEVSXCI7XG5cdFx0fVxuXHRcdHN0YXRpYyBnZXQgTUlYRUQoKSB7XG5cdFx0XHRyZXR1cm4gXCJNSVhFRFwiO1xuXHRcdH1cblx0XHRzdGF0aWMgZ2V0IE9WRVJSSURFKCkge1xuXHRcdFx0cmV0dXJuIFwiT1ZFUlJJREVcIjtcblx0XHR9XG5cblx0XHRzdGF0aWMgcmVnaXN0ZXIocGFja2FnZV9pZCwgdGFyZ2V0LCBmbiwgdHlwZSA9IFwiTUlYRURcIiwgeyBjaGFpbiA9IHVuZGVmaW5lZCwgYmluZCA9IFtdIH0gPSB7fSkge1xuXHRcdFx0Y29uc3QgaXNfc2V0dGVyID0gdGFyZ2V0LmVuZHNXaXRoKFwiI3NldFwiKTtcblx0XHRcdHRhcmdldCA9ICFpc19zZXR0ZXIgPyB0YXJnZXQgOiB0YXJnZXQuc2xpY2UoMCwgLTQpO1xuXHRcdFx0Y29uc3Qgc3BsaXQgPSB0YXJnZXQubWF0Y2goVEdUX1NQTElUX1JFKS5tYXAoKHgpID0+IHgucmVwbGFjZSgvXFxcXCguKS9nLCBcIiQxXCIpLnJlcGxhY2UoVEdUX0NMRUFOVVBfUkUsIFwiXCIpKTtcblx0XHRcdGNvbnN0IHJvb3Rfbm0gPSBzcGxpdC5zcGxpY2UoMCwgMSlbMF07XG5cblx0XHRcdGxldCBvYmosIGZuX25hbWU7XG5cdFx0XHRpZiAoc3BsaXQubGVuZ3RoID09IDApIHtcblx0XHRcdFx0b2JqID0gZ2xvYmFsVGhpcztcblx0XHRcdFx0Zm5fbmFtZSA9IHJvb3Rfbm07XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRjb25zdCBfZXZhbCA9IGV2YWw7XG5cdFx0XHRcdGZuX25hbWUgPSBzcGxpdC5wb3AoKTtcblx0XHRcdFx0b2JqID0gc3BsaXQucmVkdWNlKCh4LCB5KSA9PiB4W3ldLCBnbG9iYWxUaGlzW3Jvb3Rfbm1dID8/IF9ldmFsKHJvb3Rfbm0pKTtcblx0XHRcdH1cblxuXHRcdFx0bGV0IGlPYmogPSBvYmo7XG5cdFx0XHRsZXQgZGVzY3JpcHRvciA9IG51bGw7XG5cdFx0XHR3aGlsZSAoaU9iaikge1xuXHRcdFx0XHRkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpT2JqLCBmbl9uYW1lKTtcblx0XHRcdFx0aWYgKGRlc2NyaXB0b3IpIGJyZWFrO1xuXHRcdFx0XHRpT2JqID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGlPYmopO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCFkZXNjcmlwdG9yIHx8IGRlc2NyaXB0b3I/LmNvbmZpZ3VyYWJsZSA9PT0gZmFsc2UpXG5cdFx0XHRcdHRocm93IG5ldyBFcnJvcihcblx0XHRcdFx0XHRgbGliV3JhcHBlciBTaGltOiAnJHt0YXJnZXR9JyBkb2VzIG5vdCBleGlzdCwgY291bGQgbm90IGJlIGZvdW5kLCBvciBoYXMgYSBub24tY29uZmlndXJhYmxlIGRlc2NyaXB0b3IuYCxcblx0XHRcdFx0KTtcblxuXHRcdFx0bGV0IG9yaWdpbmFsID0gbnVsbDtcblx0XHRcdGNvbnN0IHdyYXBwZXIgPVxuXHRcdFx0XHRjaGFpbiA/PyAodHlwZS50b1VwcGVyQ2FzZT8uKCkgIT0gXCJPVkVSUklERVwiICYmIHR5cGUgIT0gMylcblx0XHRcdFx0XHQ/IGZ1bmN0aW9uICguLi5hcmdzKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBmbi5jYWxsKHRoaXMsIG9yaWdpbmFsLmJpbmQodGhpcyksIC4uLmJpbmQsIC4uLmFyZ3MpO1xuXHRcdFx0XHRcdCAgfVxuXHRcdFx0XHRcdDogZnVuY3Rpb24gKC4uLmFyZ3MpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGZuLmNhbGwodGhpcywgLi4uYmluZCwgLi4uYXJncyk7XG5cdFx0XHRcdFx0ICB9O1xuXHRcdFx0aWYgKCFpc19zZXR0ZXIpIHtcblx0XHRcdFx0aWYgKGRlc2NyaXB0b3IudmFsdWUpIHtcblx0XHRcdFx0XHRvcmlnaW5hbCA9IGRlc2NyaXB0b3IudmFsdWU7XG5cdFx0XHRcdFx0ZGVzY3JpcHRvci52YWx1ZSA9IHdyYXBwZXI7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0b3JpZ2luYWwgPSBkZXNjcmlwdG9yLmdldDtcblx0XHRcdFx0XHRkZXNjcmlwdG9yLmdldCA9IHdyYXBwZXI7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGlmICghZGVzY3JpcHRvci5zZXQpIHRocm93IG5ldyBFcnJvcihgbGliV3JhcHBlciBTaGltOiAnJHt0YXJnZXR9JyBkb2VzIG5vdCBoYXZlIGEgc2V0dGVyYCk7XG5cdFx0XHRcdG9yaWdpbmFsID0gZGVzY3JpcHRvci5zZXQ7XG5cdFx0XHRcdGRlc2NyaXB0b3Iuc2V0ID0gd3JhcHBlcjtcblx0XHRcdH1cblxuXHRcdFx0ZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwgZm5fbmFtZSwgZGVzY3JpcHRvcik7XG5cdFx0fVxuXHR9O1xufSk7XG4iLCJpbXBvcnQgeyBFbmhhbmNlZENvbmRpdGlvbnMgfSBmcm9tIFwiLi4vZW5oYW5jZWQtY29uZGl0aW9ucy9lbmhhbmNlZC1jb25kaXRpb25zLmpzXCI7XG5pbXBvcnQgeyBTaWRla2ljayB9IGZyb20gXCIuLi9zaWRla2ljay5qc1wiO1xuXG4vKipcbiAqIEhhbmRsZXMgdHJpZ2dlcnMgZm9yIG90aGVyIGdhZGdldHMgaW4gdGhlIG1vZHVsZS4uLiBvciBkb2VzIGl0PyFcbiAqL1xuZXhwb3J0IGNsYXNzIFRyaWdnbGVyIHtcblx0c3RhdGljIE9QRVJBVE9SUyA9IHtcblx0XHRlcTogXCI9XCIsXG5cdFx0bmU6IFwi4omgXCIsXG5cdFx0bHQ6IFwiPFwiLFxuXHRcdGx0ZXE6IFwi4omkXCIsXG5cdFx0Z3Q6IFwiPlwiLFxuXHRcdGd0ZXE6IFwi4omlXCJcblx0fTtcblxuXHQvKipcblx0ICogUGFyc2VzIHRyaWdnZXJzIEpTT04gYW5kIHJldHVybnMgdHJpZ2dlcnNcblx0ICogQHBhcmFtIHt7fX0ganNvblxuXHQgKiBAcmV0dXJucyB7QXJyYXl9XG5cdCAqL1xuXHRzdGF0aWMgdHJpZ2dlcnNGcm9tSnNvbihqc29uKSB7XG5cdFx0aWYgKGpzb24uc3lzdGVtICE9PSBnYW1lLnN5c3RlbS5pZCkge1xuXHRcdFx0dWkubm90aWZpY2F0aW9ucy53YXJuKGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLk1hcE1pc21hdGNoXCIpKTtcblx0XHR9XG5cdFx0Y29uc3QgdHJpZ2dlcnMgPSBbXTtcblx0XHRpZiAoanNvbi50cmlnZ2Vycykge1xuXHRcdFx0Zm9yIChjb25zdCB0cmlnZ2VyIG9mIGpzb24udHJpZ2dlcnMpIHtcblx0XHRcdFx0Y29uc3QgcHJvY2Vzc2VkVHJpZ2dlciA9IFRyaWdnbGVyLl9wcmVwYXJlVHJpZ2dlcih0cmlnZ2VyKTtcblx0XHRcdFx0aWYgKHByb2Nlc3NlZFRyaWdnZXIpIHtcblx0XHRcdFx0XHR0cmlnZ2Vycy5wdXNoKHByb2Nlc3NlZFRyaWdnZXIpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdHJpZ2dlcnM7XG5cdFx0fVxuXHRcdHJldHVybiBbXTtcblx0fVxuXG5cdC8qKlxuXHQgKiBQYXJzZSB0aGUgcHJvdmlkZWQgQ29uZGl0aW9uIE1hcCBhbmQgcHJlcGFyZSBpdCBmb3Igc3RvcmFnZSwgdmFsaWRhdGluZyBhbmQgY29ycmVjdGluZyBiYWQgb3IgbWlzc2luZyBkYXRhIHdoZXJlIHBvc3NpYmxlXG5cdCAqIEBwYXJhbSB7Kn0gdHJpZ2dlclxuXHQgKi9cblx0c3RhdGljIF9wcmVwYXJlVHJpZ2dlcih0cmlnZ2VyKSB7XG5cdFx0Y29uc3QgeyB0cmlnZ2VyVHlwZSA9IFwic2ltcGxlXCIsIGlkID0gbnVsbCB9ID0gdHJpZ2dlcjtcblxuXHRcdC8vIGNvbnN0IHRyaWdnZXJUeXBlID0gZm9ybURhdGE/LnRyaWdnZXJUeXBlO1xuXG5cdFx0aWYgKHRyaWdnZXJUeXBlID09PSBcImFkdmFuY2VkXCIgJiYgIXRyaWdnZXIuYWR2YW5jZWROYW1lLmxlbmd0aCkge1xuXHRcdFx0Y29uc29sZS53YXJuKFxuXHRcdFx0XHRgQ0xUIHwgVHJpZ2dlciB3aXRoIElEIFwiJHtpZH0gaXMgZGVmaW5lZCBhcyBhbiBBZHZhbmNlZCBUcmlnZ2VyIGJ1dCBoYXMgbm8gVHJpZ2dlciBOYW1lLmBcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Y29uc3QgdHJpZ2dlcnMgPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJzdG9yZWRUcmlnZ2Vyc1wiKTtcblx0XHRjb25zdCB0ZXh0ID0gdHJpZ2dlclR5cGUgPT09IFwic2ltcGxlXCIgPyBUcmlnZ2xlci5fY29uc3RydWN0U3RyaW5nKHRyaWdnZXIpIDogdHJpZ2dlci5hZHZhbmNlZE5hbWU7XG5cblx0XHRpZiAoIXRleHQpIHJldHVybiBmYWxzZTtcblxuXHRcdGNvbnN0IGV4aXN0aW5nVHJpZ2dlciA9IHRyaWdnZXJzLmZpbmQoKHQpID0+IHQuaWQgPT09IGlkKTtcblx0XHRpZiAoZXhpc3RpbmdUcmlnZ2VyKSB7XG5cdFx0XHRjb25zb2xlLndhcm4oYENMVCB8IFRyaWdnZXIgd2l0aCBJRCBcIiR7aWR9IGFscmVhZHkgZXhpc3RzLmApO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4ge1xuXHRcdFx0aWQsXG5cdFx0XHQuLi5kdXBsaWNhdGUodHJpZ2dlciksXG5cdFx0XHR0ZXh0XG5cdFx0fTtcblx0fVxuXG5cdC8qKlxuXHQgKiBDb25zdHJ1Y3QgYSBzdHJpbmcgYmFzZWQgb24gdHJpZ2dlciBwYXJ0c1xuXHQgKiBAcGFyYW0geyp9IHBhcnRzXG5cdCAqL1xuXHRzdGF0aWMgX2NvbnN0cnVjdFN0cmluZyhwYXJ0cykge1xuXHRcdGNvbnN0IHRyaWdnZXJUeXBlID0gcGFydHMudHJpZ2dlclR5cGU7XG5cdFx0Y29uc3Qgb3BlcmF0b3JUZXh0ID0gVHJpZ2dsZXIuT1BFUkFUT1JTW3BhcnRzLm9wZXJhdG9yXTtcblx0XHRjb25zdCBhZHZhbmNlZE9wZXJhdG9yVGV4dCA9IFRyaWdnbGVyLk9QRVJBVE9SU1twYXJ0cy5hZHZhbmNlZE9wZXJhdG9yXTtcblxuXHRcdGNvbnN0IHBjT25seSA9IHBhcnRzLnBjT25seSA/IFwiIChQQ3MgT25seSlcIiA6IFwiXCI7XG5cdFx0Y29uc3QgbnBjT25seSA9IHBhcnRzLm5wY09ubHkgPyBcIiAoTlBDcyBPbmx5KVwiIDogXCJcIjtcblx0XHRjb25zdCBub3RaZXJvID0gcGFydHMubm90WmVybyA/IFwiIChOb3QgMClcIiA6IFwiXCI7XG5cdFx0aWYgKHRyaWdnZXJUeXBlID09PSBcInNpbXBsZVwiKSB7XG5cdFx0XHRjb25zdCBwcm9wZXJ0eTIgPSBwYXJ0cy5wcm9wZXJ0eTIgPyBgICR7cGFydHMuY2F0ZWdvcnl9LiR7cGFydHMuYXR0cmlidXRlfS4ke3BhcnRzLnByb3BlcnR5Mn1gIDogXCJcIjtcblx0XHRcdHJldHVybiBgJHtwYXJ0cy5jYXRlZ29yeX0uJHtwYXJ0cy5hdHRyaWJ1dGV9LiR7cGFydHMucHJvcGVydHkxfSAke29wZXJhdG9yVGV4dH0gJHtwYXJ0cy52YWx1ZX0ke3Byb3BlcnR5Mn0ke3BjT25seX0ke25wY09ubHl9JHtub3RaZXJvfWA7XG5cdFx0fSBlbHNlIGlmICh0cmlnZ2VyVHlwZSA9PT0gXCJhZHZhbmNlZFwiKSB7XG5cdFx0XHRjb25zdCBhZHZhbmNlZFByb3BlcnR5MiA9IHBhcnRzLmFkdmFuY2VkUHJvcGVydHkyID8gYCAke3BhcnRzLmFkdmFuY2VkUHJvcGVydHkyfWAgOiBcIlwiO1xuXHRcdFx0cmV0dXJuIGAke3BhcnRzLmFkdmFuY2VkUHJvcGVydHl9ICR7YWR2YW5jZWRPcGVyYXRvclRleHR9ICR7cGFydHMuYWR2YW5jZWRWYWx1ZX0ke2FkdmFuY2VkUHJvcGVydHkyfSR7cGNPbmx5fSR7bnBjT25seX0ke25vdFplcm99YDtcblx0XHR9XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHQvKipcblx0ICogRXhlY3V0ZXMgYSB0cmlnZ2VyIGNhbGxpbmcgcHJlZGVmaW5lZCBhY3Rpb25zXG5cdCAqIEBwYXJhbSB7Kn0gdHJpZ2dlclxuXHQgKiBAcGFyYW0geyp9IHRhcmdldFxuXHQgKi9cblx0c3RhdGljIGFzeW5jIF9leGVjdXRlVHJpZ2dlcih0cmlnZ2VyLCB0YXJnZXQpIHtcblx0XHRjb25zdCBhY3RvciA9XG5cdFx0XHR0YXJnZXQgaW5zdGFuY2VvZiBBY3RvclxuXHRcdFx0XHQ/IHRhcmdldFxuXHRcdFx0XHQ6IHRhcmdldCBpbnN0YW5jZW9mIFRva2VuRG9jdW1lbnQgfHwgdGFyZ2V0IGluc3RhbmNlb2YgVG9rZW5cblx0XHRcdFx0XHQ/IHRhcmdldC5hY3RvclxuXHRcdFx0XHRcdDogbnVsbDtcblx0XHRjb25zdCB0b2tlbiA9IHRhcmdldCBpbnN0YW5jZW9mIFRva2VuRG9jdW1lbnQgPyB0YXJnZXQgOiB0YXJnZXQgaW5zdGFuY2VvZiBUb2tlbiA/IHRhcmdldC5kb2N1bWVudCA6IG51bGw7XG5cdFx0Y29uc3QgY29uZGl0aW9uTWFwID0gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiYWN0aXZlQ29uZGl0aW9uTWFwXCIpO1xuXHRcdGNvbnN0IG1hdGNoZWRBcHBseUNvbmRpdGlvbnMgPSBjb25kaXRpb25NYXAuZmlsdGVyKChtKSA9PiBtLmFwcGx5VHJpZ2dlciA9PT0gdHJpZ2dlci5pZCk7XG5cdFx0Y29uc3QgbWF0Y2hlZFJlbW92ZUNvbmRpdGlvbnMgPSBjb25kaXRpb25NYXAuZmlsdGVyKChtKSA9PiBtLnJlbW92ZVRyaWdnZXIgPT09IHRyaWdnZXIuaWQpO1xuXHRcdGNvbnN0IG1hdGNoZWRNYWNyb3MgPSBnYW1lLm1hY3Jvcy5jb250ZW50cy5maWx0ZXIoXG5cdFx0XHQobSkgPT4gbS5nZXRGbGFnKFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcIm1hY3JvVHJpZ2dlclwiKSA9PT0gdHJpZ2dlci5pZFxuXHRcdCk7XG5cdFx0Y29uc3QgYXBwbHlDb25kaXRpb25OYW1lcyA9IG1hdGNoZWRBcHBseUNvbmRpdGlvbnMubWFwKChjKSA9PiBjLm5hbWUpO1xuXHRcdGNvbnN0IHJlbW92ZUNvbmRpdGlvbk5hbWVzID0gbWF0Y2hlZFJlbW92ZUNvbmRpdGlvbnMubWFwKChjKSA9PiBjLm5hbWUpO1xuXG5cdFx0aWYgKGFwcGx5Q29uZGl0aW9uTmFtZXMubGVuZ3RoKSB7XG5cdFx0XHRhd2FpdCBFbmhhbmNlZENvbmRpdGlvbnMuYWRkQ29uZGl0aW9uKGFwcGx5Q29uZGl0aW9uTmFtZXMsIHRhcmdldCwgeyB3YXJuOiBmYWxzZSB9KTtcblx0XHR9XG5cdFx0aWYgKHJlbW92ZUNvbmRpdGlvbk5hbWVzLmxlbmd0aCkge1xuXHRcdFx0YXdhaXQgRW5oYW5jZWRDb25kaXRpb25zLnJlbW92ZUNvbmRpdGlvbihyZW1vdmVDb25kaXRpb25OYW1lcywgdGFyZ2V0LCB7IHdhcm46IGZhbHNlIH0pO1xuXHRcdH1cblxuXHRcdGZvciAoY29uc3QgbWFjcm8gb2YgbWF0Y2hlZE1hY3Jvcykge1xuXHRcdFx0YXdhaXQgbWFjcm8uZXhlY3V0ZSh7IGFjdG9yLCB0b2tlbiB9KTtcblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogUHJvY2Vzc2VzIGFuIGVudGl0eSB1cGRhdGUgYW5kIGV2YWx1YXRlcyB0cmlnZ2Vyc1xuXHQgKiBAcGFyYW0geyp9IGVudGl0eVxuXHQgKiBAcGFyYW0geyp9IHVwZGF0ZVxuXHQgKiBAcGFyYW0geyp9IGVudHJ5UG9pbnQxXG5cdCAqIEBwYXJhbSB7Kn0gZW50cnlQb2ludDJcblx0ICovXG5cdHN0YXRpYyBhc3luYyBfcHJvY2Vzc1VwZGF0ZShlbnRpdHksIHVwZGF0ZSwgZW50cnlQb2ludDEsIGVudHJ5UG9pbnQyKSB7XG5cdFx0aWYgKCFlbnRpdHkgfHwgIXVwZGF0ZSkgcmV0dXJuO1xuXG5cdFx0Ly8gaWYgKGVudHJ5UG9pbnQxICYmICFoYXNQcm9wZXJ0eSh1cGRhdGUsIGVudHJ5UG9pbnQxKSkge1xuXHRcdC8vICAgICByZXR1cm47XG5cdFx0Ly8gfVxuXG5cdFx0Y29uc3QgdHJpZ2dlcnMgPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJzdG9yZWRUcmlnZ2Vyc1wiKTtcblx0XHRjb25zdCBlbnRpdHlUeXBlID1cblx0XHRcdGVudGl0eSBpbnN0YW5jZW9mIEFjdG9yXG5cdFx0XHRcdD8gXCJBY3RvclwiXG5cdFx0XHRcdDogZW50aXR5IGluc3RhbmNlb2YgVG9rZW4gfHwgZW50aXR5IGluc3RhbmNlb2YgVG9rZW5Eb2N1bWVudFxuXHRcdFx0XHRcdD8gXCJUb2tlblwiXG5cdFx0XHRcdFx0OiBudWxsO1xuXG5cdFx0aWYgKCFlbnRpdHlUeXBlKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0LyoqXG5cdFx0ICogQXZvaWQgaXNzdWVzIHdpdGggTXVsdGktTGV2ZWwgVG9rZW5zIGJ5IGlnbm9yaW5nIGNsb25lIHRva2Vuc1xuXHRcdCAqIEBzZWUgSXNzdWUgIzQ5MVxuXHRcdCAqL1xuXHRcdGlmIChlbnRpdHkuZmxhZ3MgJiYgXCJtdWx0aWxldmVsLXRva2Vuc1wiIGluIGVudGl0eS5mbGFncyAmJiBcInN0b2tlblwiIGluIGVudGl0eS5mbGFnc1tcIm11bHRpbGV2ZWwtdG9rZW5zXCJdKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Y29uc3QgaGFzUGxheWVyT3duZXIgPSAhIShlbnRpdHkuaGFzUGxheWVyT3duZXIgPz8gZW50aXR5LmRvY3VtZW50Py5oYXNQbGF5ZXJPd25lcik7XG5cblx0XHQvKipcblx0XHQgKiBwcm9jZXNzIGVhY2ggdHJpZ2dlciBpbiB0dXJuLCBjaGVja2luZyBmb3IgYSBtYXRjaCBpbiB0aGUgdXBkYXRlIHBheWxvYWQsXG5cdFx0ICogaWYgYSBtYXRjaCBpcyBmb3VuZCwgdGhlbiB0ZXN0IHRoZSB2YWx1ZXMgdXNpbmcgdGhlIGFwcHJvcHJpYXRlIG9wZXJhdG9yLFxuXHRcdCAqIGlmIHZhbHVlcyBtYXRjaCwgYXBwbHkgYW55IG1hcHBlZCBjb25kaXRpb25zXG5cdFx0ICogQHRvZG8gcmVkdWNlIHRoaXMgZG93biB0byBqdXN0IG1hcHBlZCB0cmlnZ2VycyBhdCBsZWFzdFxuXHRcdCAqL1xuXHRcdGZvciAobGV0IHRyaWdnZXIgb2YgdHJpZ2dlcnMpIHtcblx0XHRcdGNvbnN0IHRyaWdnZXJUeXBlID0gdHJpZ2dlci50cmlnZ2VyVHlwZSB8fCBcInNpbXBsZVwiO1xuXHRcdFx0Y29uc3QgcGNPbmx5ID0gdHJpZ2dlci5wY09ubHk7XG5cdFx0XHRjb25zdCBucGNPbmx5ID0gdHJpZ2dlci5ucGNPbmx5O1xuXHRcdFx0Y29uc3Qgbm90WmVybyA9IHRyaWdnZXIubm90WmVybztcblxuXHRcdFx0aWYgKChwY09ubHkgJiYgIWhhc1BsYXllck93bmVyKSB8fCAobnBjT25seSAmJiBoYXNQbGF5ZXJPd25lcikpIHtcblx0XHRcdFx0Y29udGludWU7XG5cdFx0XHR9XG5cblx0XHRcdGxldCBtYXRjaFN0cmluZzE7XG5cdFx0XHRsZXQgbWF0Y2hTdHJpbmcyO1xuXG5cdFx0XHRpZiAodHJpZ2dlclR5cGUgPT09IFwic2ltcGxlXCIpIHtcblx0XHRcdFx0Y29uc3QgYmFzZU1hdGNoU3RyaW5nID0gYCR7ZW50cnlQb2ludDF9JHtlbnRyeVBvaW50MSA/IFwiLlwiIDogXCJcIn0ke3RyaWdnZXIuY2F0ZWdvcnl9JHtcblx0XHRcdFx0XHR0cmlnZ2VyLmF0dHJpYnV0ZSA/IGAuJHt0cmlnZ2VyLmF0dHJpYnV0ZX1gIDogXCJcIlxuXHRcdFx0XHR9YDtcblx0XHRcdFx0Ly8gZXhhbXBsZSA6IGFjdG9yRGF0YS5zeXN0ZW0uYXR0cmlidXRlcy5ocC52YWx1ZSBvciBhY3RvckRhdGEuZGF0YS5zdGF0dXMuaXNTaGFrZW5cblx0XHRcdFx0bWF0Y2hTdHJpbmcxID0gYCR7YmFzZU1hdGNoU3RyaW5nfSR7dHJpZ2dlci5wcm9wZXJ0eTEgPyBgLiR7dHJpZ2dlci5wcm9wZXJ0eTF9YCA6IFwiXCJ9YDtcblxuXHRcdFx0XHQvLyBleGFtcGxlOiBhY3Rvci5zeXN0ZW0uaHAubWF4IC0tIG5vdGUgdGhpcyBpcyB1bmxpa2VseSB0byBiZSBpbiB0aGUgdXBkYXRlIGRhdGFcblx0XHRcdFx0bWF0Y2hTdHJpbmcyID0gYCR7YmFzZU1hdGNoU3RyaW5nfSR7dHJpZ2dlci5wcm9wZXJ0eTIgPyBgLiR7dHJpZ2dlci5wcm9wZXJ0eTJ9YCA6IFwiXCJ9YDtcblx0XHRcdH0gZWxzZSBpZiAodHJpZ2dlclR5cGUgPT09IFwiYWR2YW5jZWRcIikge1xuXHRcdFx0XHQvLyBlbnRyeSBwb2ludCBkaWZmZXJzIGJhc2VkIG9uIGFjdG9yIHZzIHRva2VuXG5cdFx0XHRcdG1hdGNoU3RyaW5nMSA9IGVudGl0eVR5cGUgPT09IFwiQWN0b3JcIiA/IHRyaWdnZXI/LmFkdmFuY2VkQWN0b3JQcm9wZXJ0eSA6IHRyaWdnZXI/LmFkdmFuY2VkVG9rZW5Qcm9wZXJ0eTtcblx0XHRcdFx0bWF0Y2hTdHJpbmcyID1cblx0XHRcdFx0XHRlbnRpdHlUeXBlID09PSBcIkFjdG9yXCIgPyB0cmlnZ2VyPy5hZHZhbmNlZEFjdG9yUHJvcGVydHkyIDogdHJpZ2dlcj8uYWR2YW5jZWRUb2tlblByb3BlcnR5Mjtcblx0XHRcdFx0dHJpZ2dlci52YWx1ZSA9IHRyaWdnZXIuYWR2YW5jZWRWYWx1ZTtcblx0XHRcdFx0dHJpZ2dlci5vcGVyYXRvciA9IHRyaWdnZXIuYWR2YW5jZWRPcGVyYXRvcjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgdGhlIHVwZGF0ZSBkb2Vzbid0IGhhdmUgYSB2YWx1ZSB0aGF0IG1hdGNoZXMgdGhlIDFzdCBwcm9wZXJ0eSB0aGlzIHRyaWdnZXIgc2hvdWxkIGJlIHNraXBwZWRcblx0XHRcdGlmICghaGFzUHJvcGVydHkodXBkYXRlLCBtYXRjaFN0cmluZzEpKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBHZXQgYSB2YWx1ZSBmcm9tIHRoZSB1cGRhdGUgdGhhdCBtYXRjaGVzIHRoZSAxc3QgcHJvcGVydHkgaW4gdGhlIHRyaWdnZXJcblx0XHRcdGNvbnN0IHVwZGF0ZVZhbHVlID0gZ2V0UHJvcGVydHkodXBkYXRlLCBtYXRjaFN0cmluZzEpO1xuXG5cdFx0XHQvLyBJZiB0aGUgdHJpZ2dlciBpcyBub3QgYWxsb3dlZCB0byBydW4gd2hlbiB2YWx1ZSBpcyB6ZXJvLCBza2lwXG5cdFx0XHRpZiAodXBkYXRlVmFsdWUgPT09IDAgJiYgbm90WmVybykge1xuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gR2V0IGEgdmFsdWUgZnJvbSB0aGUgZW50aXR5IHRoYXQgbWF0Y2hlcyB0aGUgMm5kIHByb3BlcnR5IGluIHRoZSB0cmlnZ2VyIChpZiBhbnkpXG5cdFx0XHRjb25zdCBwcm9wZXJ0eTJWYWx1ZSA9IGdldFByb3BlcnR5KGVudGl0eSwgbWF0Y2hTdHJpbmcyKTtcblxuXHRcdFx0Ly8gV2UgbmVlZCB0aGUgdHlwZSBsYXRlclxuXHRcdFx0Y29uc3QgdXBkYXRlVmFsdWVUeXBlID0gdHlwZW9mIHVwZGF0ZVZhbHVlO1xuXG5cdFx0XHQvLyBleGFtcGxlOiBcIj1cIlxuXHRcdFx0Y29uc3Qgb3BlcmF0b3IgPSBUcmlnZ2xlci5PUEVSQVRPUlNbdHJpZ2dlci5vcGVyYXRvcl07XG5cblx0XHRcdC8vIHBlcmNlbnQgcmVxdWlyZXMgd2hvbGUgZGlmZmVyZW50IGhhbmRsaW5nXG5cdFx0XHRjb25zdCBpc1BlcmNlbnQgPSB0cmlnZ2VyLnZhbHVlLmVuZHNXaXRoKFwiJVwiKTtcblxuXHRcdFx0Ly8gZXhhbXBsZTogXCI1MFwiIC0tIGNoZWNrIGlmIHRoZSB2YWx1ZSBjYW4gYmUgY29udmVydGVkIHRvIGEgbnVtYmVyXG5cdFx0XHRjb25zdCB0cmlnZ2VyVmFsdWUgPSBpc1BlcmNlbnRcblx0XHRcdFx0PyBOdW1iZXIodHJpZ2dlci52YWx1ZS5yZXBsYWNlKFwiJVwiLCBcIlwiKSlcblx0XHRcdFx0OiBTaWRla2ljay5jb2VyY2VUeXBlKHRyaWdnZXIudmFsdWUsIHVwZGF0ZVZhbHVlVHlwZSk7XG5cblx0XHRcdGNvbnN0IHRyaWdnZXJzID0gW107XG5cblx0XHRcdC8qKlxuXHRcdFx0ICogU3dpdGNoIG9uIHRoZSBvcGVyYXRvciBjaGVja2luZyBpdCBhZ2FpbnN0IHRoZSBwcmVkZWZpbmVkIG9wZXJhdG9yIGNob2ljZXNcblx0XHRcdCAqIElmIGl0IG1hdGNoZXMsIHRoZW4gY29tcGFyZSB0aGUgdmFsdWVzIHVzaW5nIHRoZSBvcGVyYXRvclxuXHRcdFx0ICogQHRvZG8gYnVsa2lmeSByZWZhY3RvciB0aGlzIHRvIGFkZCBtYXRjaGVkIHRyaWdnZXJzIHRvIGFuIGFycmF5IHRoZW4gZXhlY3V0IHRoZSBhcnJheSBhdCB0aGUgZW5kXG5cdFx0XHQgKi9cblx0XHRcdHN3aXRjaCAob3BlcmF0b3IpIHtcblx0XHRcdFx0Y2FzZSBUcmlnZ2xlci5PUEVSQVRPUlMuZXE6XG5cdFx0XHRcdFx0aWYgKGlzUGVyY2VudCkge1xuXHRcdFx0XHRcdFx0Ly8gZXhhbXBsZTogKDUwIC8gMTAwKSA9IDAuNTtcblx0XHRcdFx0XHRcdGNvbnN0IGRpdmlzb3IgPSB0cmlnZ2VyVmFsdWUgLyAxMDA7XG5cdFx0XHRcdFx0XHQvLyBpZiBwcm9wZXJ0eSAxIHVwZGF0ZSB2YWx1ZSA9IDUwJSBvZiBwcm9wZXJ0eSAyIHZhbHVlXG5cdFx0XHRcdFx0XHRpZiAodXBkYXRlVmFsdWUgPT09IHByb3BlcnR5MlZhbHVlICogZGl2aXNvcikge1xuXHRcdFx0XHRcdFx0XHR0cmlnZ2Vycy5wdXNoKHsgdHJpZ2dlciwgZW50aXR5IH0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICh1cGRhdGVWYWx1ZSA9PT0gdHJpZ2dlclZhbHVlKSB7XG5cdFx0XHRcdFx0XHQvLyBleGVjdXRlIHRoZSB0cmlnZ2VyJ3MgY29uZGl0aW9uIG1hcHBpbmdzXG5cdFx0XHRcdFx0XHR0cmlnZ2Vycy5wdXNoKHsgdHJpZ2dlciwgZW50aXR5IH0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRicmVhaztcblxuXHRcdFx0XHRjYXNlIFRyaWdnbGVyLk9QRVJBVE9SUy5ndDpcblx0XHRcdFx0XHRpZiAoaXNQZXJjZW50KSB7XG5cdFx0XHRcdFx0XHQvLyBleGFtcGxlOiAoNTAgLyAxMDApID0gMC41O1xuXHRcdFx0XHRcdFx0Y29uc3QgZGl2aXNvciA9IHRyaWdnZXJWYWx1ZSAvIDEwMDtcblx0XHRcdFx0XHRcdC8vIGlmIHByb3BlcnR5IDEgdXBkYXRlIHZhbHVlID0gNTAlIG9mIHByb3BlcnR5IDIgdmFsdWVcblx0XHRcdFx0XHRcdGlmICh1cGRhdGVWYWx1ZSA+IHByb3BlcnR5MlZhbHVlICogZGl2aXNvcikge1xuXHRcdFx0XHRcdFx0XHR0cmlnZ2Vycy5wdXNoKHsgdHJpZ2dlciwgZW50aXR5IH0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICh1cGRhdGVWYWx1ZSA+IHRyaWdnZXJWYWx1ZSkge1xuXHRcdFx0XHRcdFx0dHJpZ2dlcnMucHVzaCh7IHRyaWdnZXIsIGVudGl0eSB9KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdFx0Y2FzZSBUcmlnZ2xlci5PUEVSQVRPUlMuZ3RlcTpcblx0XHRcdFx0XHRpZiAoaXNQZXJjZW50KSB7XG5cdFx0XHRcdFx0XHQvLyBleGFtcGxlOiAoNTAgLyAxMDApID0gMC41O1xuXHRcdFx0XHRcdFx0Y29uc3QgZGl2aXNvciA9IHRyaWdnZXJWYWx1ZSAvIDEwMDtcblx0XHRcdFx0XHRcdC8vIGlmIHByb3BlcnR5IDEgdXBkYXRlIHZhbHVlID0gNTAlIG9mIHByb3BlcnR5IDIgdmFsdWVcblx0XHRcdFx0XHRcdGlmICh1cGRhdGVWYWx1ZSA+PSBwcm9wZXJ0eTJWYWx1ZSAqIGRpdmlzb3IpIHtcblx0XHRcdFx0XHRcdFx0dHJpZ2dlcnMucHVzaCh7IHRyaWdnZXIsIGVudGl0eSB9KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAodXBkYXRlVmFsdWUgPj0gdHJpZ2dlclZhbHVlKSB7XG5cdFx0XHRcdFx0XHR0cmlnZ2Vycy5wdXNoKHsgdHJpZ2dlciwgZW50aXR5IH0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRicmVhaztcblxuXHRcdFx0XHRjYXNlIFRyaWdnbGVyLk9QRVJBVE9SUy5sdDpcblx0XHRcdFx0XHRpZiAoaXNQZXJjZW50KSB7XG5cdFx0XHRcdFx0XHQvLyBleGFtcGxlOiAoNTAgLyAxMDApID0gMC41O1xuXHRcdFx0XHRcdFx0Y29uc3QgZGl2aXNvciA9IHRyaWdnZXJWYWx1ZSAvIDEwMDtcblx0XHRcdFx0XHRcdC8vIGlmIHByb3BlcnR5IDEgdXBkYXRlIHZhbHVlID0gNTAlIG9mIHByb3BlcnR5IDIgdmFsdWVcblx0XHRcdFx0XHRcdGlmICh1cGRhdGVWYWx1ZSA8IHByb3BlcnR5MlZhbHVlICogZGl2aXNvcikge1xuXHRcdFx0XHRcdFx0XHR0cmlnZ2Vycy5wdXNoKHsgdHJpZ2dlciwgZW50aXR5IH0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICh1cGRhdGVWYWx1ZSA8IHRyaWdnZXJWYWx1ZSkge1xuXHRcdFx0XHRcdFx0dHJpZ2dlcnMucHVzaCh7IHRyaWdnZXIsIGVudGl0eSB9KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdFx0Y2FzZSBUcmlnZ2xlci5PUEVSQVRPUlMubHRlcTpcblx0XHRcdFx0XHRpZiAoaXNQZXJjZW50KSB7XG5cdFx0XHRcdFx0XHQvLyBleGFtcGxlOiAoNTAgLyAxMDApID0gMC41O1xuXHRcdFx0XHRcdFx0Y29uc3QgZGl2aXNvciA9IHRyaWdnZXJWYWx1ZSAvIDEwMDtcblx0XHRcdFx0XHRcdC8vIGlmIHByb3BlcnR5IDEgdXBkYXRlIHZhbHVlID0gNTAlIG9mIHByb3BlcnR5IDIgdmFsdWVcblx0XHRcdFx0XHRcdGlmICh1cGRhdGVWYWx1ZSA8PSBwcm9wZXJ0eTJWYWx1ZSAqIGRpdmlzb3IpIHtcblx0XHRcdFx0XHRcdFx0dHJpZ2dlcnMucHVzaCh7IHRyaWdnZXIsIGVudGl0eSB9KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAodXBkYXRlVmFsdWUgPD0gdHJpZ2dlclZhbHVlKSB7XG5cdFx0XHRcdFx0XHR0cmlnZ2Vycy5wdXNoKHsgdHJpZ2dlciwgZW50aXR5IH0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRicmVhaztcblxuXHRcdFx0XHRjYXNlIFRyaWdnbGVyLk9QRVJBVE9SUy5uZTpcblx0XHRcdFx0XHRpZiAoaXNQZXJjZW50KSB7XG5cdFx0XHRcdFx0XHQvLyBleGFtcGxlOiAoNTAgLyAxMDApID0gMC41O1xuXHRcdFx0XHRcdFx0Y29uc3QgZGl2aXNvciA9IHRyaWdnZXJWYWx1ZSAvIDEwMDtcblx0XHRcdFx0XHRcdC8vIGlmIHByb3BlcnR5IDEgdXBkYXRlIHZhbHVlID0gNTAlIG9mIHByb3BlcnR5IDIgdmFsdWVcblx0XHRcdFx0XHRcdGlmICh1cGRhdGVWYWx1ZSAhPT0gcHJvcGVydHkyVmFsdWUgKiBkaXZpc29yKSB7XG5cdFx0XHRcdFx0XHRcdHRyaWdnZXJzLnB1c2goeyB0cmlnZ2VyLCBlbnRpdHkgfSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKHVwZGF0ZVZhbHVlICE9PSB0cmlnZ2VyVmFsdWUpIHtcblx0XHRcdFx0XHRcdHRyaWdnZXJzLnB1c2goeyB0cmlnZ2VyLCBlbnRpdHkgfSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cblx0XHRcdGZvciAoY29uc3QgeyB0cmlnZ2VyLCBlbnRpdHkgfSBvZiB0cmlnZ2Vycykge1xuXHRcdFx0XHRhd2FpdCBUcmlnZ2xlci5fZXhlY3V0ZVRyaWdnZXIodHJpZ2dlciwgZW50aXR5KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogVXBkYXRlIEFjdG9yIGhhbmRsZXJcblx0ICogQHBhcmFtIHsqfSBhY3RvclxuXHQgKiBAcGFyYW0geyp9IHVwZGF0ZVxuXHQgKiBAcGFyYW0geyp9IG9wdGlvbnNcblx0ICogQHBhcmFtIHsqfSB1c2VySWRcblx0ICovXG5cdHN0YXRpYyBfb25VcGRhdGVBY3RvcihhY3RvciwgdXBkYXRlLCBvcHRpb25zLCB1c2VySWQpIHtcblx0XHRpZiAoZ2FtZS51c2VySWQgIT09IHVzZXJJZCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnN0IGRhdGFQcm9wID0gXCJzeXN0ZW1cIjtcblx0XHRjb25zdCBkYXRhRGF0YVByb3AgPSBcInN5c3RlbVwiO1xuXG5cdFx0VHJpZ2dsZXIuX3Byb2Nlc3NVcGRhdGUoYWN0b3IsIHVwZGF0ZSwgZGF0YVByb3AsIGRhdGFEYXRhUHJvcCk7XG5cdH1cblxuXHQvKipcblx0ICogVXBkYXRlIHRva2VuIGhhbmRsZXJcblx0ICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cblx0ICogQHBhcmFtIHsqfSB1cGRhdGVcblx0ICogQHBhcmFtIHsqfSBvcHRpb25zXG5cdCAqIEBwYXJhbSB7Kn0gdXNlcklkXG5cdCAqL1xuXHRzdGF0aWMgX29uVXBkYXRlVG9rZW4odG9rZW4sIHVwZGF0ZSwgb3B0aW9ucywgdXNlcklkKSB7XG5cdFx0aWYgKGdhbWUudXNlcklkICE9PSB1c2VySWQpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRjb25zdCBhY3RvckRhdGFQcm9wID0gXCJhY3RvckRhdGEuc3lzdGVtXCI7XG5cdFx0Y29uc3QgYWN0b3JQcm9wID0gXCJhY3Rvci5zeXN0ZW1cIjtcblxuXHRcdFRyaWdnbGVyLl9wcm9jZXNzVXBkYXRlKHRva2VuLCB1cGRhdGUsIGFjdG9yRGF0YVByb3AsIGFjdG9yUHJvcCk7XG5cdH1cblxuXHQvKipcblx0ICpcblx0ICogQHBhcmFtIHsqfSBhcHBcblx0ICogQHBhcmFtIHsqfSBodG1sXG5cdCAqIEBwYXJhbSB7Kn0gZGF0YVxuXHQgKi9cblx0c3RhdGljIGFzeW5jIF9vblJlbmRlck1hY3JvQ29uZmlnKGFwcCwgaHRtbCwgZGF0YSkge1xuXHRcdGNvbnN0IHR5cGVTZWxlY3QgPSBodG1sLmZpbmQoXCJzZWxlY3RbbmFtZT0ndHlwZSddXCIpO1xuXHRcdGNvbnN0IHR5cGVTZWxlY3REaXYgPSB0eXBlU2VsZWN0LmNsb3Nlc3QoXCJkaXZcIik7XG5cdFx0Y29uc3QgZmxhZyA9IGFwcC5vYmplY3QuZ2V0RmxhZyhcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJtYWNyb1RyaWdnZXJcIik7XG5cdFx0Y29uc3QgdHJpZ2dlcnMgPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJzdG9yZWRUcmlnZ2Vyc1wiKTtcblxuXHRcdGNvbnN0IHRyaWdnZXJTZWxlY3RUZW1wbGF0ZSA9IFwibW9kdWxlcy9jb25kaXRpb24tbGFiLXRyaWdnbGVyL3RlbXBsYXRlcy90cmlnZ2VyLXNlbGVjdC5odG1sXCI7XG5cdFx0Y29uc3QgdHJpZ2dlckRhdGEgPSB7XG5cdFx0XHRmbGFnLFxuXHRcdFx0dHJpZ2dlcnNcblx0XHR9O1xuXHRcdGNvbnN0IHRyaWdnZXJTZWxlY3QgPSBhd2FpdCByZW5kZXJUZW1wbGF0ZSh0cmlnZ2VyU2VsZWN0VGVtcGxhdGUsIHRyaWdnZXJEYXRhKTtcblxuXHRcdHR5cGVTZWxlY3REaXYuYWZ0ZXIodHJpZ2dlclNlbGVjdCk7XG5cdH1cbn1cbiIsImltcG9ydCB7IFNpZGVraWNrIH0gZnJvbSBcIi4uL3NpZGVraWNrLmpzXCI7XG5pbXBvcnQgeyBUcmlnZ2xlciB9IGZyb20gXCIuL3RyaWdnbGVyLmpzXCI7XG5cbmV4cG9ydCBjbGFzcyBUcmlnZ2xlckZvcm0gZXh0ZW5kcyBGb3JtQXBwbGljYXRpb24ge1xuXHRjb25zdHJ1Y3RvcihvYmplY3QsIG9wdGlvbnMgPSB7IHBhcmVudDogbnVsbCB9KSB7XG5cdFx0c3VwZXIob2JqZWN0LCBvcHRpb25zKTtcblx0XHR0aGlzLmRhdGEgPSBvYmplY3QgfHwge307XG5cdFx0dGhpcy5wYXJlbnQgPSBvcHRpb25zLnBhcmVudCB8fCBudWxsO1xuXHR9XG5cblx0c3RhdGljIGdldCBkZWZhdWx0T3B0aW9ucygpIHtcblx0XHRyZXR1cm4gbWVyZ2VPYmplY3Qoc3VwZXIuZGVmYXVsdE9wdGlvbnMsIHtcblx0XHRcdGlkOiBcImN1Yi10cmlnZ2xlci1mb3JtXCIsXG5cdFx0XHR0aXRsZTogXCJUcmlnZ2xlclwiLFxuXHRcdFx0dGVtcGxhdGU6IFwibW9kdWxlcy9jb25kaXRpb24tbGFiLXRyaWdnbGVyL3RlbXBsYXRlcy90cmlnZ2xlci1mb3JtLmh0bWxcIixcblx0XHRcdGNsYXNzZXM6IFtcInNoZWV0XCIsIFwidHJpZ2dsZXItZm9ybVwiXSxcblx0XHRcdHdpZHRoOiA3ODAsXG5cdFx0XHRoZWlnaHQ6IFwiYXV0b1wiLFxuXHRcdFx0cmVzaXphYmxlOiB0cnVlLFxuXHRcdFx0Y2xvc2VPblN1Ym1pdDogZmFsc2Vcblx0XHR9KTtcblx0fVxuXG5cdGdldERhdGEoKSB7XG5cdFx0Y29uc3QgaWQgPSB0aGlzLmRhdGEuaWQ7XG5cdFx0Y29uc3QgdHJpZ2dlcnMgPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJzdG9yZWRUcmlnZ2Vyc1wiKTtcblxuXHRcdGlmICh0aGlzLm5vTWVyZ2UpIHtcblx0XHRcdHRoaXMubm9NZXJnZSA9IGZhbHNlO1xuXHRcdH0gZWxzZSBpZiAoaWQgJiYgdHJpZ2dlcnMpIHtcblx0XHRcdGNvbnN0IHRyaWdnZXIgPSB0cmlnZ2Vycy5maW5kKCh0KSA9PiB0LmlkID09PSBpZCk7XG5cdFx0XHRtZXJnZU9iamVjdCh0aGlzLmRhdGEsIHRyaWdnZXIpO1xuXHRcdH1cblxuXHRcdGNvbnN0IHtcblx0XHRcdHRyaWdnZXJUeXBlID0gXCJzaW1wbGVcIixcblx0XHRcdGNhdGVnb3J5ID0gbnVsbCxcblx0XHRcdGF0dHJpYnV0ZSA9IG51bGwsXG5cdFx0XHRwcm9wZXJ0eTEgPSBudWxsLFxuXHRcdFx0b3BlcmF0b3IgPSBudWxsLFxuXHRcdFx0dmFsdWUgPSBudWxsLFxuXHRcdFx0cHJvcGVydHkyID0gbnVsbCxcblx0XHRcdGFkdmFuY2VkTmFtZSA9IG51bGwsXG5cdFx0XHRhZHZhbmNlZEFjdG9yUHJvcGVydHkgPSBudWxsLFxuXHRcdFx0YWR2YW5jZWRBY3RvclByb3BlcnR5MiA9IG51bGwsXG5cdFx0XHRhZHZhbmNlZFRva2VuUHJvcGVydHkgPSBudWxsLFxuXHRcdFx0YWR2YW5jZWRUb2tlblByb3BlcnR5MiA9IG51bGwsXG5cdFx0XHRhZHZhbmNlZE9wZXJhdG9yID0gbnVsbCxcblx0XHRcdGFkdmFuY2VkVmFsdWUgPSBudWxsLFxuXHRcdFx0cGNPbmx5ID0gbnVsbCxcblx0XHRcdG5wY09ubHkgPSBudWxsLFxuXHRcdFx0bm90WmVybyA9IG51bGxcblx0XHR9ID0gdGhpcy5kYXRhIHx8IHt9O1xuXHRcdGNvbnN0IGlzU2ltcGxlVHJpZ2dlciA9IHRyaWdnZXJUeXBlID09PSBcInNpbXBsZVwiO1xuXHRcdGNvbnN0IGlzQWR2YW5jZWRUcmlnZ2VyID0gdHJpZ2dlclR5cGUgPT09IFwiYWR2YW5jZWRcIjtcblx0XHRsZXQgYWN0b3JNb2RlbCA9IGdhbWUuc3lzdGVtLm1vZGVsPy5BY3RvciA/PyB7fTtcblx0XHRjb25zdCBpc0VtcHR5ID0gT2JqZWN0LnZhbHVlcyhhY3Rvck1vZGVsKS5ldmVyeSgob2JqKSA9PiBPYmplY3Qua2V5cyhvYmopLmxlbmd0aCA9PT0gMCk7XG5cdFx0bGV0IG1lcmdlZE1vZGVsID0gbnVsbDtcblx0XHRpZiAoaXNFbXB0eSkge1xuXHRcdFx0YWN0b3JNb2RlbCA9IENPTkZJRy5BY3Rvci5kYXRhTW9kZWxzID8/IHt9O1xuXHRcdFx0bWVyZ2VkTW9kZWwgPSBPYmplY3Qua2V5cyhhY3Rvck1vZGVsKVxuXHRcdFx0XHQucmVkdWNlKChvYmosIGtleSkgPT5cblx0XHRcdFx0XHRmb3VuZHJ5LnV0aWxzLm1lcmdlT2JqZWN0KG9iaiwgbmV3IENPTkZJRy5BY3Rvci5kb2N1bWVudENsYXNzKHsgbmFtZTogXCJDTFQgQWN0b3JcIiwgdHlwZToga2V5IH0pLnRvT2JqZWN0KCkuc3lzdGVtKSwge30pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRtZXJnZWRNb2RlbCA9IE9iamVjdC5rZXlzKGFjdG9yTW9kZWwpXG5cdFx0XHRcdC5yZWR1Y2UoKGFjY3VtdWxhdG9yLCBrZXkpID0+IGZvdW5kcnkudXRpbHMubWVyZ2VPYmplY3QoYWNjdW11bGF0b3IsIGFjdG9yTW9kZWxba2V5XSksIHt9KTtcblx0XHR9XG5cdFx0Y29uc3QgY2F0ZWdvcmllcyA9IG1lcmdlZE1vZGVsID8gT2JqZWN0LmtleXMobWVyZ2VkTW9kZWwpLnNvcnQoKSA6IG51bGw7XG5cdFx0Y29uc3QgYXR0cmlidXRlcyA9IGNhdGVnb3J5ID8gT2JqZWN0LmtleXMobWVyZ2VkTW9kZWxbY2F0ZWdvcnldKSA6IG51bGw7XG5cdFx0Y29uc3QgcHJvcGVydGllcyA9IGNhdGVnb3J5ICYmIGF0dHJpYnV0ZSA/IE9iamVjdC5rZXlzKG1lcmdlZE1vZGVsW2NhdGVnb3J5XVthdHRyaWJ1dGVdKSA6IG51bGw7XG5cdFx0Y29uc3Qgb3BlcmF0b3JzID0gVHJpZ2dsZXIuT1BFUkFUT1JTO1xuXG5cdFx0Y29uc3QgdHJpZ2dlclNlbGVjdGVkID0gISEoaWQgJiYgdHJpZ2dlcnMpO1xuXG5cdFx0aWYgKCFjYXRlZ29yaWVzKSB7XG5cdFx0XHR1aS5ub3RpZmljYXRpb25zLndhcm4oXCJTaW1wbGUgVHJpZ2dlciBub3Qgc3VwcG9ydGVkLiBUcnkgQWR2YW5jZWQgVHJpZ2dlclwiKTtcblx0XHRcdC8vIHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4ge1xuXHRcdFx0aWQsXG5cdFx0XHR0cmlnZ2VyU2VsZWN0ZWQsXG5cdFx0XHR0cmlnZ2Vycyxcblx0XHRcdGlzU2ltcGxlVHJpZ2dlcixcblx0XHRcdGlzQWR2YW5jZWRUcmlnZ2VyLFxuXHRcdFx0Y2F0ZWdvcnksXG5cdFx0XHRjYXRlZ29yaWVzLFxuXHRcdFx0YXR0cmlidXRlLFxuXHRcdFx0YXR0cmlidXRlcyxcblx0XHRcdHByb3BlcnR5MSxcblx0XHRcdHByb3BlcnRpZXMsXG5cdFx0XHRvcGVyYXRvcixcblx0XHRcdG9wZXJhdG9ycyxcblx0XHRcdHZhbHVlLFxuXHRcdFx0cHJvcGVydHkyLFxuXHRcdFx0YWR2YW5jZWROYW1lLFxuXHRcdFx0YWR2YW5jZWRBY3RvclByb3BlcnR5LFxuXHRcdFx0YWR2YW5jZWRBY3RvclByb3BlcnR5Mixcblx0XHRcdGFkdmFuY2VkVG9rZW5Qcm9wZXJ0eSxcblx0XHRcdGFkdmFuY2VkVG9rZW5Qcm9wZXJ0eTIsXG5cdFx0XHRhZHZhbmNlZE9wZXJhdG9yLFxuXHRcdFx0YWR2YW5jZWRWYWx1ZSxcblx0XHRcdHBjT25seSxcblx0XHRcdG5wY09ubHksXG5cdFx0XHRub3RaZXJvXG5cdFx0fTtcblx0fVxuXG5cdGFzeW5jIF9yZW5kZXIoZm9yY2UsIG9wdGlvbnMpIHtcblx0XHRhd2FpdCBzdXBlci5fcmVuZGVyKGZvcmNlLCBvcHRpb25zKTtcblx0XHR0aGlzLl9vcmlnaW5hbFRvcCA9IHRoaXMuZWxlbWVudFswXS5zdHlsZS50b3A7XG5cdFx0aWYgKHRoaXMuX3JlcG9zaXRpb24gJiYgIXRoaXMuX3JlcG9zaXRpb25lZCkge1xuXHRcdFx0dGhpcy5fcmVwb3NpdGlvbmVkID0gdHJ1ZTtcblxuXHRcdFx0Y29uc3QgZWwgPSB0aGlzLmVsZW1lbnRbMF07XG5cdFx0XHRjb25zdCBzY2FsZWRIZWlnaHQgPSBlbC5vZmZzZXRIZWlnaHQ7XG5cdFx0XHRjb25zdCB0YXJUID0gKHdpbmRvdy5pbm5lckhlaWdodCAtIHNjYWxlZEhlaWdodCkgLyAyO1xuXHRcdFx0Y29uc3QgbWF4VCA9IE1hdGgubWF4KHdpbmRvdy5pbm5lckhlaWdodCAtIHNjYWxlZEhlaWdodCwgMCk7XG5cdFx0XHR0aGlzLnNldFBvc2l0aW9uKHsgdG9wOiBNYXRoLmNsYW1wZWQodGFyVCwgMCwgbWF4VCkgfSk7XG5cdFx0fVxuXHR9XG5cblx0YWN0aXZhdGVMaXN0ZW5lcnMoaHRtbCkge1xuXHRcdHN1cGVyLmFjdGl2YXRlTGlzdGVuZXJzKGh0bWwpO1xuXG5cdFx0Y29uc3QgdHJpZ2dlclNlbGVjdCA9IGh0bWwuZmluZChcInNlbGVjdFtuYW1lPSd0cmlnZ2VycyddXCIpO1xuXHRcdGNvbnN0IGRlbGV0ZVRyaWdnZXIgPSBodG1sLmZpbmQoXCJhLmRlbGV0ZVwiKTtcblxuXHRcdC8vIFNpbXBsZVxuXHRcdGNvbnN0IGNhdGVnb3J5U2VsZWN0ID0gaHRtbC5maW5kKFwic2VsZWN0W25hbWU9J2NhdGVnb3J5J11cIik7XG5cdFx0Y29uc3QgYXR0cmlidXRlU2VsZWN0ID0gaHRtbC5maW5kKFwic2VsZWN0W25hbWU9J2F0dHJpYnV0ZSddXCIpO1xuXHRcdGNvbnN0IHByb3BlcnR5MVNlbGVjdCA9IGh0bWwuZmluZChcInNlbGVjdFtuYW1lPSdwcm9wZXJ0eTEnXVwiKTtcblx0XHRjb25zdCBvcGVyYXRvclNlbGVjdCA9IGh0bWwuZmluZChcInNlbGVjdFtuYW1lPSdvcGVyYXRvciddXCIpO1xuXHRcdGNvbnN0IHZhbHVlSW5wdXQgPSBodG1sLmZpbmQoXCJpbnB1dFtuYW1lPSd2YWx1ZSddXCIpO1xuXHRcdGNvbnN0IHByb3BlcnR5MlNlbGVjdCA9IGh0bWwuZmluZChcInNlbGVjdFtuYW1lPSdwcm9wZXJ0eTInXVwiKTtcblxuXHRcdC8vIFNpbXBsZS9BZHZhbmNlZCBUb2dnbGVcblx0XHRjb25zdCB0cmlnZ2VyVHlwZVJhZGlvID0gaHRtbC5maW5kKFwiaW5wdXRbbmFtZT0ndHJpZ2dlclR5cGUnXVwiKTtcblxuXHRcdC8vIEFkdmFuY2VkXG5cdFx0Y29uc3QgYWR2YW5jZWROYW1lSW5wdXQgPSBodG1sLmZpbmQoXCJpbnB1dFtuYW1lPSdhZHZhbmNlZE5hbWUnXVwiKTtcblx0XHRjb25zdCBhZHZhbmNlZEFjdG9yUHJvcGVydHlJbnB1dCA9IGh0bWwuZmluZChcImlucHV0W25hbWU9J2FkdmFuY2VkQWN0b3JQcm9wZXJ0eSddXCIpO1xuXHRcdGNvbnN0IGFkdmFuY2VkQWN0b3JQcm9wZXJ0eTJJbnB1dCA9IGh0bWwuZmluZChcImlucHV0W25hbWU9J2FkdmFuY2VkQWN0b3JQcm9wZXJ0eTInXVwiKTtcblx0XHRjb25zdCBhZHZhbmNlZFRva2VuUHJvcGVydHlJbnB1dCA9IGh0bWwuZmluZChcImlucHV0W25hbWU9J2FkdmFuY2VkVG9rZW5Qcm9wZXJ0eSddXCIpO1xuXHRcdGNvbnN0IGFkdmFuY2VkVG9rZW5Qcm9wZXJ0eTJJbnB1dCA9IGh0bWwuZmluZChcImlucHV0W25hbWU9J2FkdmFuY2VkVG9rZW5Qcm9wZXJ0eTInXVwiKTtcblx0XHRjb25zdCBhZHZhbmNlZE9wZXJhdG9yU2VsZWN0ID0gaHRtbC5maW5kKFwic2VsZWN0W25hbWU9J2FkdmFuY2VkT3BlcmF0b3InXVwiKTtcblx0XHRjb25zdCBhZHZhbmNlZFZhbHVlSW5wdXQgPSBodG1sLmZpbmQoXCJpbnB1dFtuYW1lPSdhZHZhbmNlZFZhbHVlJ11cIik7XG5cblx0XHQvLyBPcHRpb25zXG5cdFx0Y29uc3QgcGNPbmx5Q2hlY2tib3ggPSBodG1sLmZpbmQoXCJpbnB1dFtuYW1lPSdwY09ubHknXVwiKTtcblx0XHRjb25zdCBucGNzT25seUNoZWNrYm94ID0gaHRtbC5maW5kKFwiaW5wdXRbbmFtZT0nbnBjT25seSddXCIpO1xuXHRcdGNvbnN0IG5vdFplcm9DaGVja2JveCA9IGh0bWwuZmluZChcImlucHV0W25hbWU9J25vdFplcm8nXVwiKTtcblx0XHRjb25zdCBjYW5jZWxCdXR0b24gPSBodG1sLmZpbmQoXCJidXR0b25bbmFtZT0nY2FuY2VsJ11cIik7XG5cblx0XHR0aGlzLm5vTWVyZ2UgPSB0cnVlO1xuXG5cdFx0dHJpZ2dlclNlbGVjdC5vbihcImNoYW5nZVwiLCAoZXZlbnQpID0+IHtcblx0XHRcdHRoaXMuZGF0YSA9IHt9O1xuXHRcdFx0dGhpcy5kYXRhLmlkID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuXHRcdFx0dGhpcy5ub01lcmdlID0gZmFsc2U7XG5cdFx0XHR0aGlzLnJlbmRlcigpO1xuXHRcdH0pO1xuXHRcdGRlbGV0ZVRyaWdnZXIub24oXCJjbGlja1wiLCBhc3luYyAoZXZlbnQpID0+IHtcblx0XHRcdGNvbnN0IHRyaWdnZXJzID0gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwic3RvcmVkVHJpZ2dlcnNcIik7XG5cdFx0XHRjb25zdCB0cmlnZ2VySW5kZXggPSB0cmlnZ2Vycy5maW5kSW5kZXgoKHQpID0+IHQuaWQgPT09IHRoaXMuZGF0YS5pZCk7XG5cdFx0XHRpZiAodHJpZ2dlckluZGV4ID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0Y29uc3QgdXBkYXRlZFRyaWdnZXJzID0gZHVwbGljYXRlKHRyaWdnZXJzKTtcblxuXHRcdFx0dXBkYXRlZFRyaWdnZXJzLnNwbGljZSh0cmlnZ2VySW5kZXgsIDEpO1xuXG5cdFx0XHRhd2FpdCBnYW1lLnNldHRpbmdzLnNldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJzdG9yZWRUcmlnZ2Vyc1wiLCB1cGRhdGVkVHJpZ2dlcnMpO1xuXHRcdFx0dGhpcy5kYXRhID0ge307XG5cdFx0XHR0aGlzLnJlbmRlcigpO1xuXHRcdH0pO1xuXG5cdFx0Ly8gU2ltcGxlXG5cdFx0Y2F0ZWdvcnlTZWxlY3Qub24oXCJjaGFuZ2VcIiwgKGV2ZW50KSA9PiB7XG5cdFx0XHR0aGlzLmRhdGEuY2F0ZWdvcnkgPSBldmVudC50YXJnZXQudmFsdWU7XG5cdFx0XHR0aGlzLmRhdGEuYXR0cmlidXRlID0gbnVsbDtcblx0XHRcdHRoaXMuZGF0YS5wcm9wZXJ0eTEgPSBudWxsO1xuXHRcdFx0dGhpcy5kYXRhLnByb3BlcnR5MiA9IG51bGw7XG5cdFx0XHR0aGlzLmRhdGEub3BlcmF0b3IgPSBudWxsO1xuXHRcdFx0dGhpcy5kYXRhLnZhbHVlID0gbnVsbDtcblxuXHRcdFx0dGhpcy5yZW5kZXIoKTtcblx0XHR9KTtcblx0XHRhdHRyaWJ1dGVTZWxlY3Qub24oXCJjaGFuZ2VcIiwgKGV2ZW50KSA9PiB7XG5cdFx0XHR0aGlzLmRhdGEuYXR0cmlidXRlID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuXHRcdFx0dGhpcy5kYXRhLnByb3BlcnR5MSA9IG51bGw7XG5cdFx0XHR0aGlzLmRhdGEucHJvcGVydHkyID0gbnVsbDtcblx0XHRcdHRoaXMuZGF0YS5vcGVyYXRvciA9IG51bGw7XG5cdFx0XHR0aGlzLmRhdGEudmFsdWUgPSBudWxsO1xuXG5cdFx0XHR0aGlzLnJlbmRlcigpO1xuXHRcdH0pO1xuXHRcdHByb3BlcnR5MVNlbGVjdC5vbihcImNoYW5nZVwiLCAoZXZlbnQpID0+IHtcblx0XHRcdHRoaXMuZGF0YS5wcm9wZXJ0eTEgPSBldmVudC50YXJnZXQudmFsdWU7XG5cdFx0XHR0aGlzLnJlbmRlcigpO1xuXHRcdH0pO1xuXHRcdHByb3BlcnR5MlNlbGVjdC5vbihcImNoYW5nZVwiLCAoZXZlbnQpID0+IHtcblx0XHRcdHRoaXMuZGF0YS5wcm9wZXJ0eTIgPSBldmVudC50YXJnZXQudmFsdWU7XG5cdFx0XHR0aGlzLnJlbmRlcigpO1xuXHRcdH0pO1xuXHRcdG9wZXJhdG9yU2VsZWN0Lm9uKFwiY2hhbmdlXCIsIChldmVudCkgPT4ge1xuXHRcdFx0dGhpcy5kYXRhLm9wZXJhdG9yID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuXHRcdFx0dGhpcy5yZW5kZXIoKTtcblx0XHR9KTtcblx0XHR2YWx1ZUlucHV0Lm9uKFwiY2hhbmdlXCIsIChldmVudCkgPT4ge1xuXHRcdFx0dGhpcy5kYXRhLnZhbHVlID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuXHRcdFx0dGhpcy5yZW5kZXIoKTtcblx0XHR9KTtcblxuXHRcdC8vIFNpbXBsZS9BZHZhbmNlZCBUb2dnbGVcblx0XHR0cmlnZ2VyVHlwZVJhZGlvLm9uKFwiY2hhbmdlXCIsIChldmVudCkgPT4ge1xuXHRcdFx0dGhpcy5kYXRhLnRyaWdnZXJUeXBlID0gZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZTtcblx0XHRcdGlmIChldmVudC5jdXJyZW50VGFyZ2V0LnZhbHVlID09PSBcImFkdmFuY2VkXCJcblx0XHRcdFx0JiYgdGhpcy5fb3JpZ2luYWxUb3AgPT09IHRoaXMuZWxlbWVudFswXS5zdHlsZS50b3Bcblx0XHRcdFx0JiYgIXRoaXMuX3JlcG9zaXRpb24pIHtcblx0XHRcdFx0dGhpcy5fcmVwb3NpdGlvbiA9IHRydWU7XG5cdFx0XHR9XG5cdFx0XHR0aGlzLnJlbmRlcigpO1xuXHRcdH0pO1xuXG5cdFx0Ly8gQWR2YW5jZWRcblx0XHRhZHZhbmNlZE5hbWVJbnB1dC5vbihcImNoYW5nZVwiLCAoZXZlbnQpID0+IHtcblx0XHRcdHRoaXMuZGF0YS5hZHZhbmNlZE5hbWUgPSBldmVudC50YXJnZXQudmFsdWU7XG5cdFx0XHR0aGlzLnJlbmRlcigpO1xuXHRcdH0pO1xuXHRcdGFkdmFuY2VkQWN0b3JQcm9wZXJ0eUlucHV0Lm9uKFwiY2hhbmdlXCIsIChldmVudCkgPT4ge1xuXHRcdFx0dGhpcy5kYXRhLmFkdmFuY2VkQWN0b3JQcm9wZXJ0eSA9IGV2ZW50LnRhcmdldC52YWx1ZTtcblx0XHRcdHRoaXMucmVuZGVyKCk7XG5cdFx0fSk7XG5cdFx0YWR2YW5jZWRBY3RvclByb3BlcnR5MklucHV0Lm9uKFwiY2hhbmdlXCIsIChldmVudCkgPT4ge1xuXHRcdFx0dGhpcy5kYXRhLmFkdmFuY2VkQWN0b3JQcm9wZXJ0eTIgPSBldmVudC50YXJnZXQudmFsdWU7XG5cdFx0XHR0aGlzLnJlbmRlcigpO1xuXHRcdH0pO1xuXHRcdGFkdmFuY2VkVG9rZW5Qcm9wZXJ0eUlucHV0Lm9uKFwiY2hhbmdlXCIsIChldmVudCkgPT4ge1xuXHRcdFx0dGhpcy5kYXRhLmFkdmFuY2VkVG9rZW5Qcm9wZXJ0eSA9IGV2ZW50LnRhcmdldC52YWx1ZTtcblx0XHRcdHRoaXMucmVuZGVyKCk7XG5cdFx0fSk7XG5cdFx0YWR2YW5jZWRUb2tlblByb3BlcnR5MklucHV0Lm9uKFwiY2hhbmdlXCIsIChldmVudCkgPT4ge1xuXHRcdFx0dGhpcy5kYXRhLmFkdmFuY2VkVG9rZW5Qcm9wZXJ0eTIgPSBldmVudC50YXJnZXQudmFsdWU7XG5cdFx0XHR0aGlzLnJlbmRlcigpO1xuXHRcdH0pO1xuXHRcdGFkdmFuY2VkT3BlcmF0b3JTZWxlY3Qub24oXCJjaGFuZ2VcIiwgKGV2ZW50KSA9PiB7XG5cdFx0XHR0aGlzLmRhdGEuYWR2YW5jZWRPcGVyYXRvciA9IGV2ZW50LnRhcmdldC52YWx1ZTtcblx0XHRcdHRoaXMucmVuZGVyKCk7XG5cdFx0fSk7XG5cdFx0YWR2YW5jZWRWYWx1ZUlucHV0Lm9uKFwiY2hhbmdlXCIsIChldmVudCkgPT4ge1xuXHRcdFx0dGhpcy5kYXRhLmFkdmFuY2VkVmFsdWUgPSBldmVudC50YXJnZXQudmFsdWU7XG5cdFx0XHR0aGlzLnJlbmRlcigpO1xuXHRcdH0pO1xuXG5cdFx0Ly8gT3B0aW9uc1xuXHRcdHBjT25seUNoZWNrYm94Lm9uKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XG5cdFx0XHR0aGlzLmRhdGEucGNPbmx5ID0gZXZlbnQudGFyZ2V0LmNoZWNrZWQ7XG5cdFx0XHR0aGlzLnJlbmRlcigpO1xuXHRcdH0pO1xuXHRcdG5wY3NPbmx5Q2hlY2tib3gub24oXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcblx0XHRcdHRoaXMuZGF0YS5ucGNPbmx5ID0gZXZlbnQudGFyZ2V0LmNoZWNrZWQ7XG5cdFx0XHR0aGlzLnJlbmRlcigpO1xuXHRcdH0pO1xuXHRcdG5vdFplcm9DaGVja2JveC5vbihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuXHRcdFx0dGhpcy5kYXRhLm5vdFplcm8gPSBldmVudC50YXJnZXQuY2hlY2tlZDtcblx0XHRcdHRoaXMucmVuZGVyKCk7XG5cdFx0fSk7XG5cblx0XHRjYW5jZWxCdXR0b24ub24oXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcblx0XHRcdHRoaXMuY2xvc2UoKTtcblx0XHR9KTtcblx0fVxuXG5cdGFzeW5jIF91cGRhdGVPYmplY3QoZXZlbnQsIGZvcm1EYXRhKSB7XG5cdFx0aWYgKCFmb3JtRGF0YS5jYXRlZ29yeSAmJiAhZm9ybURhdGEuYWR2YW5jZWRBY3RvclByb3BlcnR5ICYmICFmb3JtRGF0YS5hZHZhbmNlZFRva2VuUHJvcGVydHkpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRjb25zdCB0cmlnZ2VyVHlwZSA9IGZvcm1EYXRhPy50cmlnZ2VyVHlwZTtcblxuXHRcdGlmICh0cmlnZ2VyVHlwZSA9PT0gXCJhZHZhbmNlZFwiICYmICFmb3JtRGF0YS5hZHZhbmNlZE5hbWUubGVuZ3RoKSB7XG5cdFx0XHR1aS5ub3RpZmljYXRpb25zLndhcm4oZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULlRSSUdHTEVSLkFwcC5BZHZhbmNlZFRyaWdnZXIuTmFtZS5XYXJuaW5nXCIpKTtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRjb25zdCB0cmlnZ2VycyA9IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcInN0b3JlZFRyaWdnZXJzXCIpO1xuXHRcdGNvbnN0IGV4aXN0aW5nSWRzID0gdHJpZ2dlcnMgPyB0cmlnZ2Vycy5tYXAoKHQpID0+IHQuaWQpIDogbnVsbDtcblx0XHRjb25zdCB0ZXh0ID0gdHJpZ2dlclR5cGUgPT09IFwic2ltcGxlXCIgPyBUcmlnZ2xlci5fY29uc3RydWN0U3RyaW5nKGZvcm1EYXRhKSA6IGZvcm1EYXRhLmFkdmFuY2VkTmFtZTtcblxuXHRcdGlmICghdGV4dCkgcmV0dXJuIGZhbHNlO1xuXG5cdFx0Y29uc3QgaWQgPSB0aGlzLmRhdGEuaWQ7XG5cdFx0Y29uc3QgbmV3RGF0YSA9IGR1cGxpY2F0ZShmb3JtRGF0YSk7XG5cdFx0ZGVsZXRlIG5ld0RhdGEudHJpZ2dlcnM7XG5cblx0XHRjb25zdCB1cGRhdGVkVHJpZ2dlcnMgPSBkdXBsaWNhdGUodHJpZ2dlcnMpO1xuXHRcdGNvbnN0IGV4aXN0aW5nVHJpZ2dlciA9IHRyaWdnZXJzLmZpbmQoKHQpID0+IHQuaWQgPT09IGlkKTtcblx0XHRjb25zdCBpc05ldyA9IGV4aXN0aW5nVHJpZ2dlciA/IHRyaWdnZXJUeXBlID09PSBcInNpbXBsZVwiIHx8IGV4aXN0aW5nVHJpZ2dlci5hZHZhbmNlZE5hbWUgIT09IHRleHQgOiB0cnVlO1xuXG5cdFx0aWYgKCFpc05ldykge1xuXHRcdFx0Y29uc3QgdXBkYXRlZFRyaWdnZXIgPSBtZXJnZU9iamVjdChleGlzdGluZ1RyaWdnZXIsIG5ld0RhdGEpO1xuXHRcdFx0dXBkYXRlZFRyaWdnZXIudGV4dCA9IHRleHQ7XG5cdFx0XHR1cGRhdGVkVHJpZ2dlcnNbdHJpZ2dlcnMuaW5kZXhPZihleGlzdGluZ1RyaWdnZXIpXSA9IHVwZGF0ZWRUcmlnZ2VyO1xuXHRcdFx0dGhpcy5kYXRhID0gdXBkYXRlZFRyaWdnZXI7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbnN0IG5ld1RyaWdnZXIgPSB7XG5cdFx0XHRcdGlkOiBTaWRla2ljay5jcmVhdGVJZChleGlzdGluZ0lkcyksXG5cdFx0XHRcdC4uLm5ld0RhdGEsXG5cdFx0XHRcdHRleHRcblx0XHRcdH07XG5cdFx0XHR1cGRhdGVkVHJpZ2dlcnMucHVzaChuZXdUcmlnZ2VyKTtcblx0XHRcdHRoaXMuZGF0YSA9IG5ld1RyaWdnZXI7XG5cdFx0fVxuXG5cdFx0Y29uc3Qgc2V0dGluZyA9IGF3YWl0IGdhbWUuc2V0dGluZ3Muc2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcInN0b3JlZFRyaWdnZXJzXCIsIHVwZGF0ZWRUcmlnZ2Vycyk7XG5cdFx0aWYgKCFzZXR0aW5nKSB1aS5ub3RpZmljYXRpb25zLmluZm8oZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULlRSSUdHTEVSLkFwcC5TYXZlU3VjY2Vzc2Z1bFwiKSk7XG5cblx0XHR0aGlzLnJlbmRlcigpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEV4cG9ydHMgdGhlIGN1cnJlbnQgbWFwIHRvIEpTT05cblx0ICovXG5cdF9leHBvcnRUb0pTT04oKSB7XG5cdFx0Y29uc3QgdHJpZ2dlcnMgPSBkdXBsaWNhdGUoZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwic3RvcmVkVHJpZ2dlcnNcIikpO1xuXHRcdGNvbnN0IGRhdGEgPSB7XG5cdFx0XHRzeXN0ZW06IGdhbWUuc3lzdGVtLmlkLFxuXHRcdFx0dHJpZ2dlcnNcblx0XHR9O1xuXG5cdFx0Ly8gVHJpZ2dlciBmaWxlIHNhdmUgcHJvY2VkdXJlXG5cdFx0Y29uc3QgZmlsZW5hbWUgPSBgY3ViLSR7Z2FtZS53b3JsZC5pZH0tdHJpZ2dlcnMuanNvbmA7XG5cdFx0c2F2ZURhdGFUb0ZpbGUoSlNPTi5zdHJpbmdpZnkoZGF0YSwgbnVsbCwgMiksIFwidGV4dC9qc29uXCIsIGZpbGVuYW1lKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBJbml0aWF0ZXMgYW4gaW1wb3J0IHZpYSBhIGRpYWxvZ1xuXHQgKiBCb3Jyb3dlZCBmcm9tIGZvdW5kcnkuanMgRW50aXR5IGNsYXNzXG5cdCAqL1xuXHRhc3luYyBfaW1wb3J0RnJvbUpTT05EaWFsb2coKSB7XG5cdFx0bmV3IERpYWxvZyh7XG5cdFx0XHR0aXRsZTogZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULlRSSUdHTEVSLkltcG9ydFRpdGxlXCIpLFxuXHRcdFx0Ly8gVE9ETyBjaGFuZ2Vcblx0XHRcdGNvbnRlbnQ6IGF3YWl0IHJlbmRlclRlbXBsYXRlKFwibW9kdWxlcy9jb25kaXRpb24tbGFiLXRyaWdnbGVyL3RlbXBsYXRlcy9pbXBvcnQtY29uZGl0aW9ucy5odG1sXCIsIHt9KSxcblx0XHRcdGJ1dHRvbnM6IHtcblx0XHRcdFx0aW1wb3J0OiB7XG5cdFx0XHRcdFx0aWNvbjogJzxpIGNsYXNzPVwiZmFzIGZhLWZpbGUtaW1wb3J0XCI+PC9pPicsXG5cdFx0XHRcdFx0bGFiZWw6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5XT1JEUy5JbXBvcnRcIiksXG5cdFx0XHRcdFx0Y2FsbGJhY2s6IChodG1sKSA9PiB7XG5cdFx0XHRcdFx0XHR0aGlzLl9wcm9jZXNzSW1wb3J0KGh0bWwpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblx0XHRcdFx0bm86IHtcblx0XHRcdFx0XHRpY29uOiAnPGkgY2xhc3M9XCJmYXMgZmEtdGltZXNcIj48L2k+Jyxcblx0XHRcdFx0XHRsYWJlbDogZ2FtZS5pMThuLmxvY2FsaXplKFwiQ2FuY2VsXCIpXG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWZhdWx0OiBcImltcG9ydFwiXG5cdFx0fSkucmVuZGVyKHRydWUpO1xuXHR9XG5cblx0LyoqXG5cdCAqIFByb2Nlc3MgYSBDb25kaXRpb24gTWFwIEltcG9ydFxuXHQgKiBAcGFyYW0geyp9IGh0bWxcblx0ICovXG5cdGFzeW5jIF9wcm9jZXNzSW1wb3J0KGh0bWwpIHtcblx0XHRjb25zdCBmb3JtID0gaHRtbC5maW5kKFwiZm9ybVwiKVswXTtcblxuXHRcdGlmICghZm9ybS5kYXRhLmZpbGVzLmxlbmd0aCkge1xuXHRcdFx0cmV0dXJuIHVpLm5vdGlmaWNhdGlvbnMuZXJyb3IoZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuTGFiLkltcG9ydC5Ob0ZpbGVcIikpO1xuXHRcdH1cblxuXHRcdGNvbnN0IGpzb25GaWxlID0gYXdhaXQgcmVhZFRleHRGcm9tRmlsZShmb3JtLmRhdGEuZmlsZXNbMF0pO1xuXHRcdGNvbnN0IGpzb24gPSBKU09OLnBhcnNlKGpzb25GaWxlKTtcblx0XHRjb25zdCB0cmlnZ2VycyA9IFRyaWdnbGVyLnRyaWdnZXJzRnJvbUpzb24oanNvbik7XG5cblx0XHRpZiAoIXRyaWdnZXJzIHx8ICF0cmlnZ2Vycz8ubGVuZ3RoKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Y29uc3Qgb3JpZ2luYWxUcmlnZ2VycyA9IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcInN0b3JlZFRyaWdnZXJzXCIpO1xuXHRcdGF3YWl0IGdhbWUuc2V0dGluZ3Muc2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcInN0b3JlZFRyaWdnZXJzXCIsIG9yaWdpbmFsVHJpZ2dlcnMuY29uY2F0KHRyaWdnZXJzKSk7XG5cdFx0dGhpcy5yZW5kZXIoKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBPdmVycmlkZSB0aGUgaGVhZGVyIGJ1dHRvbnMgbWV0aG9kXG5cdCAqL1xuXHRfZ2V0SGVhZGVyQnV0dG9ucygpIHtcblx0XHRsZXQgYnV0dG9ucyA9IHN1cGVyLl9nZXRIZWFkZXJCdXR0b25zKCk7XG5cblx0XHRidXR0b25zLnVuc2hpZnQoXG5cdFx0XHR7XG5cdFx0XHRcdGxhYmVsOiBnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuV09SRFMuSW1wb3J0XCIpLFxuXHRcdFx0XHRjbGFzczogXCJpbXBvcnRcIixcblx0XHRcdFx0aWNvbjogXCJmYXMgZmEtZmlsZS1pbXBvcnRcIixcblx0XHRcdFx0b25jbGljazogYXN5bmMgKGV2KSA9PiB7XG5cdFx0XHRcdFx0YXdhaXQgdGhpcy5faW1wb3J0RnJvbUpTT05EaWFsb2coKTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdHtcblx0XHRcdFx0bGFiZWw6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5XT1JEUy5FeHBvcnRcIiksXG5cdFx0XHRcdGNsYXNzOiBcImV4cG9ydFwiLFxuXHRcdFx0XHRpY29uOiBcImZhcyBmYS1maWxlLWV4cG9ydFwiLFxuXHRcdFx0XHRvbmNsaWNrOiBhc3luYyAoZXYpID0+IHtcblx0XHRcdFx0XHR0aGlzLl9leHBvcnRUb0pTT04oKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdCk7XG5cblx0XHRyZXR1cm4gYnV0dG9ucztcblx0fVxufVxuIiwiLyoqXG4gKiBFbmhhbmNlZCBDb25kaXRpb24gTWFjcm8gQ29uZmlnIEFwcGxpY2F0aW9uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVuaGFuY2VkQ29uZGl0aW9uTWFjcm9Db25maWcgZXh0ZW5kcyBGb3JtQXBwbGljYXRpb24ge1xuXHRjb25zdHJ1Y3RvcihvYmplY3QsIG9wdGlvbnMpIHtcblx0XHRzdXBlcihvYmplY3QsIG9wdGlvbnMpO1xuXG5cdFx0dGhpcy5vYmplY3QgPSB0aGlzLm9iamVjdCA/PyB7fTtcblx0XHR0aGlzLm9iamVjdC5tYWNyb3MgPSB0aGlzLm9iamVjdC5tYWNyb3MgPz8gW107XG5cblx0XHR0aGlzLmluaXRpYWxPYmplY3QgPSBmb3VuZHJ5LnV0aWxzLmR1cGxpY2F0ZSh0aGlzLm9iamVjdCk7XG5cdH1cblxuXHRzdGF0aWMgZ2V0IGRlZmF1bHRPcHRpb25zKCkge1xuXHRcdHJldHVybiBmb3VuZHJ5LnV0aWxzLm1lcmdlT2JqZWN0KHN1cGVyLmRlZmF1bHRPcHRpb25zLCB7XG5cdFx0XHRpZDogXCJjdWItZW5oYW5jZWQtY29uZGl0aW9uLW1hY3JvLWNvbmZpZ1wiLFxuXHRcdFx0dGl0bGU6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLk1hY3JvQ29uZmlnLlRpdGxlXCIpLFxuXHRcdFx0dGVtcGxhdGU6IFwibW9kdWxlcy9jb25kaXRpb24tbGFiLXRyaWdnbGVyL3RlbXBsYXRlcy9lbmhhbmNlZC1jb25kaXRpb24tbWFjcm8tY29uZmlnLmhic1wiLFxuXHRcdFx0Y2xhc3NlczogW1wic2hlZXRcIl0sXG5cdFx0XHRjbG9zZU9uU3VibWl0OiBmYWxzZVxuXHRcdH0pO1xuXHR9XG5cblx0Z2V0RGF0YSgpIHtcblx0XHRjb25zdCBjb25kaXRpb25NYWNyb3MgPSB0aGlzLm9iamVjdC5tYWNyb3M7XG5cdFx0Y29uc3QgYXBwbHlNYWNyb0lkID0gY29uZGl0aW9uTWFjcm9zLmZpbmQoKG0pID0+IG0udHlwZSA9PT0gXCJhcHBseVwiKT8uaWQ7XG5cdFx0Y29uc3QgcmVtb3ZlTWFjcm9JZCA9IGNvbmRpdGlvbk1hY3Jvcy5maW5kKChtKSA9PiBtLnR5cGUgPT09IFwicmVtb3ZlXCIpPy5pZDtcblxuXHRcdGNvbnN0IG1hY3JvQ2hvaWNlcyA9IGdhbWUubWFjcm9zPy5jb250ZW50c1xuXHRcdFx0Py5tYXAoKG0pID0+IHtcblx0XHRcdFx0cmV0dXJuIHsgaWQ6IG0uaWQsIG5hbWU6IG0ubmFtZSB9O1xuXHRcdFx0fSlcblx0XHRcdC5zb3J0KChhLCBiKSA9PiBhLm5hbWUubG9jYWxlQ29tcGFyZShiLm5hbWUpKTtcblxuXHRcdHJldHVybiB7XG5cdFx0XHRjb25kaXRpb246IHRoaXMub2JqZWN0LFxuXHRcdFx0YXBwbHlNYWNyb0lkLFxuXHRcdFx0cmVtb3ZlTWFjcm9JZCxcblx0XHRcdG1hY3JvQ2hvaWNlc1xuXHRcdH07XG5cdH1cblxuXHRhc3luYyBfdXBkYXRlT2JqZWN0KGV2ZW50LCBmb3JtRGF0YSkge1xuXHRcdHRoaXMub2JqZWN0Lm1hY3JvcyA9IFtdO1xuXG5cdFx0Zm9yIChjb25zdCBmaWVsZCBpbiBmb3JtRGF0YSkge1xuXHRcdFx0Y29uc3QgdHlwZSA9IGZpZWxkLnNwbGl0KFwiLVwiKS5zbGljZSgtMSlcblx0XHRcdFx0LnBvcCgpID8/IFwiXCI7XG5cdFx0XHRjb25zdCB0ZW1wTWFjcm8gPSB7IGlkOiBmb3JtRGF0YVtmaWVsZF0sIHR5cGU6IHR5cGUgfTtcblx0XHRcdHRoaXMub2JqZWN0Lm1hY3Jvcy5wdXNoKHRlbXBNYWNybyk7XG5cdFx0fVxuXG5cdFx0Y29uc3QgbWFwID0gZ2FtZS5jbHQuY29uZGl0aW9ucztcblx0XHRjb25zdCBuZXdNYXAgPSBmb3VuZHJ5LnV0aWxzLmR1cGxpY2F0ZShtYXApO1xuXG5cdFx0bGV0IGNvbmRpdGlvbkluZGV4ID0gbmV3TWFwLmZpbmRJbmRleCgoYykgPT4gYy5pZCA9PT0gdGhpcy5vYmplY3QuaWQpO1xuXHRcdG5ld01hcFtjb25kaXRpb25JbmRleF0gPSB0aGlzLm9iamVjdDtcblx0XHRhd2FpdCBnYW1lLnNldHRpbmdzLnNldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJhY3RpdmVDb25kaXRpb25NYXBcIiwgbmV3TWFwKTtcblx0XHR0aGlzLmNsb3NlKCk7XG5cdH1cbn1cbiIsImltcG9ydCB7IFNpZGVraWNrIH0gZnJvbSBcIi4uL3NpZGVraWNrLmpzXCI7XG5cbi8qKlxuICogRW5oYW5jZWQgQ29uZGl0aW9uIFRyaWdnZXIgQ29uZmlnIEFwcGxpY2F0aW9uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVuaGFuY2VkQ29uZGl0aW9uT3B0aW9uQ29uZmlnIGV4dGVuZHMgRm9ybUFwcGxpY2F0aW9uIHtcblx0Y29uc3RydWN0b3Iob2JqZWN0LCBvcHRpb25zKSB7XG5cdFx0c3VwZXIob2JqZWN0LCBvcHRpb25zKTtcblxuXHRcdHRoaXMuaW5pdGlhbE9iamVjdCA9IGZvdW5kcnkudXRpbHMuZHVwbGljYXRlKHRoaXMub2JqZWN0KTtcblx0fVxuXG5cdHN0YXRpYyBnZXQgZGVmYXVsdE9wdGlvbnMoKSB7XG5cdFx0cmV0dXJuIGZvdW5kcnkudXRpbHMubWVyZ2VPYmplY3Qoc3VwZXIuZGVmYXVsdE9wdGlvbnMsIHtcblx0XHRcdGlkOiBcImN1Yi1lbmhhbmNlZC1jb25kaXRpb24tb3B0aW9uLWNvbmZpZ1wiLFxuXHRcdFx0dGl0bGU6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLk9wdGlvbkNvbmZpZy5UaXRsZVwiKSxcblx0XHRcdHRlbXBsYXRlOiBcIm1vZHVsZXMvY29uZGl0aW9uLWxhYi10cmlnZ2xlci90ZW1wbGF0ZXMvZW5oYW5jZWQtY29uZGl0aW9uLW9wdGlvbi1jb25maWcuaGJzXCIsXG5cdFx0XHRjbGFzc2VzOiBbXCJzaGVldFwiXSxcblx0XHRcdGNsb3NlT25TdWJtaXQ6IGZhbHNlLFxuXHRcdFx0d2lkdGg6IDUwMFxuXHRcdH0pO1xuXHR9XG5cblx0Z2V0RGF0YSgpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0Y29uZGl0aW9uOiB0aGlzLm9iamVjdCxcblx0XHRcdG9wdGlvbkRhdGE6IHRoaXMub2JqZWN0Lm9wdGlvbnNcblx0XHR9O1xuXHR9XG5cblx0YWN0aXZhdGVMaXN0ZW5lcnMoaHRtbCkge1xuXHRcdGNvbnN0IGNoZWNrYm94ZXMgPSBodG1sLmZpbmQoXCJpbnB1dFt0eXBlPSdjaGVja2JveCddXCIpO1xuXG5cdFx0Zm9yIChjb25zdCBjaGVja2JveCBvZiBjaGVja2JveGVzKSB7XG5cdFx0XHRjaGVja2JveC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIChldmVudCkgPT4gdGhpcy5fb25DaGVja2JveENoYW5nZShldmVudCkpO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBDaGVja2JveCBjaGFuZ2UgZXZlbnQgaGFuZGxlclxuXHQgKiBAcGFyYW0geyp9IGV2ZW50XG5cdCAqIEByZXR1cm5zIHt9XG5cdCAqL1xuXHRfb25DaGVja2JveENoYW5nZShldmVudCkge1xuXHRcdGlmICghZXZlbnQudGFyZ2V0Py5jaGVja2VkKSByZXR1cm47XG5cdFx0Y29uc3QgdGFyZ2V0TmFtZSA9IGV2ZW50LnRhcmdldD8ubmFtZTtcblx0XHRjb25zdCBwcm9wZXJ0eU5hbWUgPSBTaWRla2ljay50b0NhbWVsQ2FzZSh0YXJnZXROYW1lLCBcIi1cIik7XG5cdFx0Y29uc3Qgc3BlY2lhbFN0YXR1c0VmZmVjdHNQcm9wcyA9IE9iamVjdC52YWx1ZXMoe1xuXHRcdFx0YmxpbmRlZDogeyBvcHRpb25Qcm9wZXJ0eTogXCJibGluZFRva2VuXCIgfSxcblx0XHRcdGludmlzaWJsZTogeyBvcHRpb25Qcm9wZXJ0eTogXCJtYXJrSW52aXNpYmxlXCIgfVxuXHRcdH0pLm1hcCgoaykgPT4gay5vcHRpb25Qcm9wZXJ0eSk7XG5cblx0XHRpZiAoIXByb3BlcnR5TmFtZSB8fCAhc3BlY2lhbFN0YXR1c0VmZmVjdHNQcm9wcykgcmV0dXJuO1xuXG5cdFx0aWYgKHNwZWNpYWxTdGF0dXNFZmZlY3RzUHJvcHMuaW5jbHVkZXMocHJvcGVydHlOYW1lKSkge1xuXHRcdFx0ZXZlbnQuZGV0YWlsID0gZXZlbnQuZGV0YWlsICYmIGV2ZW50LmRldGFpbCBpbnN0YW5jZW9mIE9iamVjdCA/IGV2ZW50LmRldGFpbCA6IHt9O1xuXHRcdFx0ZXZlbnQuZGV0YWlsLnN0YXR1c05hbWUgPSB0YXJnZXROYW1lO1xuXHRcdFx0ZXZlbnQuZGV0YWlsLnN0YXR1c0xhYmVsID0gZXZlbnQudGFyZ2V0Lm5leHRFbGVtZW50U2libGluZz8uaW5uZXJUZXh0O1xuXHRcdFx0ZXZlbnQuZGV0YWlsLmNvbmRpdGlvbklkID0gdGhpcy5vYmplY3QuaWQ7XG5cdFx0XHRyZXR1cm4gRW5oYW5jZWRDb25kaXRpb25PcHRpb25Db25maWcuX29uU3BlY2lhbFN0YXR1c0VmZmVjdFRvZ2dsZShldmVudCk7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIFNwZWNpYWwgU3RhdHVzIEVmZmVjdCB0b2dnbGUgaGFuZGxlclxuXHQgKiBAcGFyYW0geyp9IGV2ZW50XG5cdCAqL1xuXHRzdGF0aWMgYXN5bmMgX29uU3BlY2lhbFN0YXR1c0VmZmVjdFRvZ2dsZShldmVudCkge1xuXHRcdC8vIGlzIGFub3RoZXIgY29uZGl0aW9uIGFscmVhZHkgdXNpbmcgdGhpcyBzcGVjaWFsIHN0YXR1cyBlZmZlY3Q/XG5cdFx0Y29uc3QgZXhpc3RpbmdDb25kaXRpb24gPSBnYW1lLmNsdC5jb25kaXRpb25zLmZpbmQoKGMpID0+IHtcblx0XHRcdGNvbnN0IG9wdGlvblZhbHVlID0gZm91bmRyeS51dGlscy5nZXRQcm9wZXJ0eShcblx0XHRcdFx0Yyxcblx0XHRcdFx0YG9wdGlvbnMuJHtTaWRla2ljay50b0NhbWVsQ2FzZShldmVudC5kZXRhaWwuc3RhdHVzTmFtZSwgXCItXCIpfWBcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm4gYy5pZCAhPT0gZXZlbnQuZGV0YWlsLmNvbmRpdGlvbklkICYmIG9wdGlvblZhbHVlO1xuXHRcdH0pO1xuXHRcdGlmIChleGlzdGluZ0NvbmRpdGlvbikge1xuXHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdC8vIHJhaXNlIGEgZGlhbG9nIGFza2luZyBmb3Igb3ZlcnJpZGVcblx0XHRcdGNvbnN0IHRpdGxlID0gZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuT3B0aW9uQ29uZmlnLlNwZWNpYWxTdGF0dXNFZmZlY3RPdmVycmlkZS5UaXRsZVwiKTtcblx0XHRcdGNvbnN0IGNvbnRlbnQgPSBnYW1lLmkxOG4uZm9ybWF0KFxuXHRcdFx0XHRcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLk9wdGlvbkNvbmZpZy5TcGVjaWFsU3RhdHVzRWZmZWN0T3ZlcnJpZGUuQ29udGVudFwiLFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0ZXhpc3RpbmdDb25kaXRpb246IGV4aXN0aW5nQ29uZGl0aW9uLm5hbWUsXG5cdFx0XHRcdFx0c3RhdHVzRWZmZWN0OiBldmVudC5kZXRhaWwuc3RhdHVzTGFiZWwgPz8gZXZlbnQuZGV0YWlsLnN0YXR1c05hbWVcblx0XHRcdFx0fVxuXHRcdFx0KTtcblx0XHRcdGNvbnN0IHllcyA9ICgpID0+IHt9O1xuXHRcdFx0Y29uc3Qgbm8gPSAoKSA9PiB7XG5cdFx0XHRcdHJldHVybiAoZXZlbnQudGFyZ2V0LmNoZWNrZWQgPSBmYWxzZSk7XG5cdFx0XHR9O1xuXHRcdFx0Y29uc3QgZGVmYXVsdFllcyA9IGZhbHNlO1xuXHRcdFx0cmV0dXJuIERpYWxvZy5jb25maXJtKHsgdGl0bGUsIGNvbnRlbnQsIHllcywgbm8sIGRlZmF1bHRZZXMgfSwge30pO1xuXHRcdH1cblxuXHRcdHJldHVybiBldmVudDtcblx0fVxuXG5cdGFzeW5jIF91cGRhdGVPYmplY3QoZXZlbnQsIGZvcm1EYXRhKSB7XG5cdFx0dGhpcy5vYmplY3Qub3B0aW9ucyA9IHt9O1xuXHRcdGNvbnN0IHNwZWNpYWxTdGF0dXNFZmZlY3RNYXBwaW5nID0gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsXG5cdFx0XHRcInNwZWNpYWxTdGF0dXNFZmZlY3RNYXBwaW5nXCJcblx0XHQpO1xuXHRcdGNvbnN0IG1hcCA9IGdhbWUuY2x0LmNvbmRpdGlvbkxhYi5tYXA7XG5cdFx0Y29uc3QgbmV3TWFwID0gZm91bmRyeS51dGlscy5kZWVwQ2xvbmUobWFwKTtcblx0XHRsZXQgY29uZGl0aW9uSW5kZXggPSBuZXdNYXAuZmluZEluZGV4KChjKSA9PiBjLmlkID09PSB0aGlzLm9iamVjdC5pZCk7XG5cblx0XHRmb3IgKGNvbnN0IGZpZWxkIGluIGZvcm1EYXRhKSB7XG5cdFx0XHRjb25zdCB2YWx1ZSA9IGZvcm1EYXRhW2ZpZWxkXTtcblx0XHRcdGNvbnN0IHByb3BlcnR5TmFtZSA9IFNpZGVraWNrLnRvQ2FtZWxDYXNlKGZpZWxkLCBcIi1cIik7XG5cdFx0XHRjb25zdCBzcGVjaWFsU3RhdHVzRWZmZWN0ID0gdGhpcy5nZXRTcGVjaWFsU3RhdHVzRWZmZWN0QnlGaWVsZChmaWVsZCk7XG5cblx0XHRcdGlmIChzcGVjaWFsU3RhdHVzRWZmZWN0KSB7XG5cdFx0XHRcdGNvbnN0IGV4aXN0aW5nTWFwcGluZyA9IGZvdW5kcnkudXRpbHMuZ2V0UHJvcGVydHkoc3BlY2lhbFN0YXR1c0VmZmVjdE1hcHBpbmcsIHNwZWNpYWxTdGF0dXNFZmZlY3QpO1xuXHRcdFx0XHRpZiAoZXhpc3RpbmdNYXBwaW5nID09PSB0aGlzLm9iamVjdC5pZCAmJiB2YWx1ZSA9PT0gZmFsc2UpIHtcblx0XHRcdFx0XHR0aGlzLnNldFNwZWNpYWxTdGF0dXNFZmZlY3RNYXBwaW5nKHNwZWNpYWxTdGF0dXNFZmZlY3QpO1xuXHRcdFx0XHR9IGVsc2UgaWYgKGV4aXN0aW5nTWFwcGluZyAhPT0gdGhpcy5vYmplY3QuaWQgJiYgdmFsdWUgPT09IHRydWUpIHtcblx0XHRcdFx0XHR0aGlzLnNldFNwZWNpYWxTdGF0dXNFZmZlY3RNYXBwaW5nKHNwZWNpYWxTdGF0dXNFZmZlY3QsIHRoaXMub2JqZWN0LmlkKTtcblx0XHRcdFx0XHRpZiAoZXhpc3RpbmdNYXBwaW5nKSB7XG5cdFx0XHRcdFx0XHRjb25zdCBleGlzdGluZ0lkID0gZXhpc3RpbmdNYXBwaW5nLnJlcGxhY2UoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyLlwiLCBcIlwiKTtcblx0XHRcdFx0XHRcdGNvbnN0IGV4aXN0aW5nQ29uZGl0aW9uSW5kZXggPSBuZXdNYXAuZmluZEluZGV4KChjKSA9PiBjLmlkID09PSBleGlzdGluZ0lkKTtcblx0XHRcdFx0XHRcdGlmIChleGlzdGluZ0NvbmRpdGlvbkluZGV4ICE9PSAtMSkge1xuXHRcdFx0XHRcdFx0XHRjb25zdCBleGlzdGluZ0NvbmRpdGlvbiA9IG5ld01hcFtleGlzdGluZ0NvbmRpdGlvbkluZGV4XTtcblx0XHRcdFx0XHRcdFx0Y29uc3Qgb3B0aW9ucyA9IGV4aXN0aW5nQ29uZGl0aW9uPy5vcHRpb25zO1xuXHRcdFx0XHRcdFx0XHRvcHRpb25zW3Byb3BlcnR5TmFtZV0gPSBmYWxzZTtcblx0XHRcdFx0XHRcdFx0bmV3TWFwW2V4aXN0aW5nQ29uZGl0aW9uSW5kZXhdID0gZXhpc3RpbmdDb25kaXRpb247XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMub2JqZWN0Lm9wdGlvbnNbcHJvcGVydHlOYW1lXSA9IHZhbHVlO1xuXHRcdH1cblxuXHRcdG5ld01hcFtjb25kaXRpb25JbmRleF0gPSB0aGlzLm9iamVjdDtcblx0XHRhd2FpdCBnYW1lLmNsdC5jb25kaXRpb25MYWIuX3NhdmVNYXBwaW5nKG5ld01hcCk7XG5cdFx0YXdhaXQgdGhpcy5jbG9zZSgpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEdldCB0aGUgZW51bSBmb3IgYSBzcGVjaWFsIHN0YXR1cyBlZmZlY3QgYmFzZWQgb24gdGhlIGZpZWxkIG5hbWVcblx0ICogQHBhcmFtIHsqfSBmaWVsZFxuXHQgKiBAcmV0dXJucyB7c3RyaW5nfSBlbnVtIGZvciB0aGUgc3BlY2lhbCBzdGF0dXMgZWZmZWN0XG5cdCAqL1xuXHRnZXRTcGVjaWFsU3RhdHVzRWZmZWN0QnlGaWVsZChmaWVsZCkge1xuXHRcdHN3aXRjaCAoZmllbGQpIHtcblx0XHRcdGNhc2UgXCJibGluZC10b2tlblwiOlxuXHRcdFx0XHRyZXR1cm4gXCJCTElORFwiO1xuXG5cdFx0XHRjYXNlIFwibWFyay1pbnZpc2libGVcIjpcblx0XHRcdFx0cmV0dXJuIFwiSU5WSVNJQkxFXCI7XG5cblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBTZXRzIHRoZSBzcGVjaWFsIHN0YXR1cyBlZmZlY3QgdG8gdGhlIHByb3ZpZGVkIGNvbmRpdGlvbiBJZFxuXHQgKiBAcGFyYW0geyp9IGVmZmVjdFxuXHQgKiBAcGFyYW0geyp9IGNvbmRpdGlvbklkXG5cdCAqL1xuXHRzZXRTcGVjaWFsU3RhdHVzRWZmZWN0TWFwcGluZyhlZmZlY3QsIGNvbmRpdGlvbklkID0gbnVsbCkge1xuXHRcdGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKENPTkZJRy5zcGVjaWFsU3RhdHVzRWZmZWN0cywgZWZmZWN0KSkgcmV0dXJuO1xuXG5cdFx0Q09ORklHLnNwZWNpYWxTdGF0dXNFZmZlY3RzW2VmZmVjdF0gPSBjb25kaXRpb25JZCA/PyBDT05GSUcuZGVmYXVsdFNwZWNpYWxTdGF0dXNFZmZlY3RzW2VmZmVjdF07XG5cdFx0Z2FtZS5zZXR0aW5ncy5zZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsXG5cdFx0XHRcInNwZWNpYWxTdGF0dXNFZmZlY3RNYXBwaW5nXCIsXG5cdFx0XHRDT05GSUcuc3BlY2lhbFN0YXR1c0VmZmVjdHNcblx0XHQpO1xuXHR9XG59XG4iLCIvKipcbiAqIEVuaGFuY2VkIENvbmRpdGlvbiBUcmlnZ2VyIENvbmZpZyBBcHBsaWNhdGlvblxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbmhhbmNlZENvbmRpdGlvblRyaWdnZXJDb25maWcgZXh0ZW5kcyBGb3JtQXBwbGljYXRpb24ge1xuXHRjb25zdHJ1Y3RvcihvYmplY3QsIG9wdGlvbnMpIHtcblx0XHRzdXBlcihvYmplY3QsIG9wdGlvbnMpO1xuXG5cdFx0dGhpcy5vYmplY3QgPSB0aGlzLm9iamVjdCA/PyB7fTtcblxuXHRcdHRoaXMuaW5pdGlhbE9iamVjdCA9IGZvdW5kcnkudXRpbHMuZHVwbGljYXRlKHRoaXMub2JqZWN0KTtcblx0fVxuXG5cdHN0YXRpYyBnZXQgZGVmYXVsdE9wdGlvbnMoKSB7XG5cdFx0cmV0dXJuIGZvdW5kcnkudXRpbHMubWVyZ2VPYmplY3Qoc3VwZXIuZGVmYXVsdE9wdGlvbnMsIHtcblx0XHRcdGlkOiBcImN1Yi1lbmhhbmNlZC1jb25kaXRpb24tdHJpZ2dlci1jb25maWdcIixcblx0XHRcdHRpdGxlOiBnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5UcmlnZ2VyQ29uZmlnLlRpdGxlXCIpLFxuXHRcdFx0dGVtcGxhdGU6IFwibW9kdWxlcy9jb25kaXRpb24tbGFiLXRyaWdnbGVyL3RlbXBsYXRlcy9lbmhhbmNlZC1jb25kaXRpb24tdHJpZ2dlci1jb25maWcuaGJzXCIsXG5cdFx0XHRjbGFzc2VzOiBbXCJzaGVldFwiXSxcblx0XHRcdGNsb3NlT25TdWJtaXQ6IGZhbHNlLFxuXHRcdFx0d2lkdGg6IDUwMFxuXHRcdH0pO1xuXHR9XG5cblx0Z2V0RGF0YSgpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0Y29uZGl0aW9uOiB0aGlzLm9iamVjdCxcblx0XHRcdGFwcGx5VHJpZ2dlcklkOiB0aGlzLm9iamVjdC5hcHBseVRyaWdnZXIsXG5cdFx0XHRyZW1vdmVUcmlnZ2VySWQ6IHRoaXMub2JqZWN0LnJlbW92ZVRyaWdnZXIsXG5cdFx0XHR0cmlnZ2VyQ2hvaWNlczogZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwic3RvcmVkVHJpZ2dlcnNcIikgPz8gW11cblx0XHR9O1xuXHR9XG5cblx0LyoqXG5cdCAqIFVwZGF0ZSBPYmplY3Qgb24gRm9ybSBTdWJtaXNzaW9uXG5cdCAqIEBwYXJhbSB7Kn0gZXZlbnRcblx0ICogQHBhcmFtIHsqfSBmb3JtRGF0YVxuXHQgKi9cblx0YXN5bmMgX3VwZGF0ZU9iamVjdChldmVudCwgZm9ybURhdGEpIHtcblx0XHR0aGlzLm9iamVjdC5tYWNyb3MgPSBbXTtcblxuXHRcdGZvciAoY29uc3QgZmllbGQgaW4gZm9ybURhdGEpIHtcblx0XHRcdGNvbnN0IHR5cGUgPSBmaWVsZC5zcGxpdChcIi1cIikuc2xpY2UoLTEpXG5cdFx0XHRcdC5wb3AoKSA/PyBcIlwiO1xuXHRcdFx0dGhpcy5vYmplY3RbYCR7dHlwZX1UcmlnZ2VyYF0gPSBmb3JtRGF0YVtmaWVsZF07XG5cdFx0fVxuXG5cdFx0Y29uc3QgbWFwID0gZ2FtZS5jbHQuY29uZGl0aW9ucztcblx0XHRjb25zdCBuZXdNYXAgPSBmb3VuZHJ5LnV0aWxzLmR1cGxpY2F0ZShtYXApO1xuXG5cdFx0bGV0IGNvbmRpdGlvbkluZGV4ID0gbmV3TWFwLmZpbmRJbmRleCgoYykgPT4gYy5pZCA9PT0gdGhpcy5vYmplY3QuaWQpO1xuXHRcdG5ld01hcFtjb25kaXRpb25JbmRleF0gPSB0aGlzLm9iamVjdDtcblx0XHRnYW1lLnNldHRpbmdzLnNldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJhY3RpdmVDb25kaXRpb25NYXBcIiwgbmV3TWFwKTtcblx0XHR0aGlzLmNsb3NlKCk7XG5cdH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEVuaGFuY2VkRWZmZWN0Q29uZmlnIGV4dGVuZHMgQWN0aXZlRWZmZWN0Q29uZmlnIHtcblx0Z2V0IHRpdGxlKCkge1xuXHRcdGNvbnN0IHJlZmVyZW5jZSA9IHRoaXMuZG9jdW1lbnQubmFtZSA/IGAgJHtnYW1lLmkxOG4ubG9jYWxpemUodGhpcy5kb2N1bWVudC5uYW1lKX1gIDogXCJcIjtcblx0XHRyZXR1cm4gYCR7Z2FtZS5pMThuLmxvY2FsaXplKHRoaXMuZG9jdW1lbnQuY29uc3RydWN0b3IubWV0YWRhdGEubGFiZWwpfSR7cmVmZXJlbmNlfWA7XG5cdH1cblxuXHQvKiogQG92ZXJyaWRlICovXG5cdGFzeW5jIGdldERhdGEob3B0aW9ucyA9IHt9KSB7XG5cdFx0Y29uc3QgY29udGV4dCA9IGF3YWl0IERvY3VtZW50U2hlZXQucHJvdG90eXBlLmdldERhdGEuY2FsbCh0aGlzLCBvcHRpb25zKTtcblx0XHRjb250ZXh0LmRlc2NyaXB0aW9uSFRNTCA9IGF3YWl0IFRleHRFZGl0b3IuZW5yaWNoSFRNTCh0aGlzLm9iamVjdC5kZXNjcmlwdGlvbiwge1xuXHRcdFx0YXN5bmM6IHRydWUsXG5cdFx0XHRzZWNyZXRzOiB0aGlzLm9iamVjdC5pc093bmVyXG5cdFx0fSk7XG5cdFx0Y29uc3QgbGVnYWN5VHJhbnNmZXIgPSBDT05GSUcuQWN0aXZlRWZmZWN0LmxlZ2FjeVRyYW5zZmVycmFsO1xuXHRcdGNvbnN0IGxhYmVscyA9IHtcblx0XHRcdHRyYW5zZmVyOiB7XG5cdFx0XHRcdG5hbWU6IGdhbWUuaTE4bi5sb2NhbGl6ZShgRUZGRUNULlRyYW5zZmVyJHtsZWdhY3lUcmFuc2ZlciA/IFwiTGVnYWN5XCIgOiBcIlwifWApLFxuXHRcdFx0XHRoaW50OiBnYW1lLmkxOG4ubG9jYWxpemUoYEVGRkVDVC5UcmFuc2ZlckhpbnQke2xlZ2FjeVRyYW5zZmVyID8gXCJMZWdhY3lcIiA6IFwiXCJ9YClcblx0XHRcdH1cblx0XHR9O1xuXHRcdGNvbnN0IGRhdGEgPSB7XG5cdFx0XHRsYWJlbHMsXG5cdFx0XHRlZmZlY3Q6IHRoaXMub2JqZWN0LCAvLyBCYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuXHRcdFx0ZGF0YTogdGhpcy5vYmplY3QsXG5cdFx0XHRpc0FjdG9yRWZmZWN0OiB0cnVlLFxuXHRcdFx0aXNJdGVtRWZmZWN0OiBmYWxzZSxcblx0XHRcdHN1Ym1pdFRleHQ6IFwiRUZGRUNULlN1Ym1pdFwiLFxuXHRcdFx0bW9kZXM6IE9iamVjdC5lbnRyaWVzKENPTlNULkFDVElWRV9FRkZFQ1RfTU9ERVMpLnJlZHVjZSgob2JqLCBlKSA9PiB7XG5cdFx0XHRcdG9ialtlWzFdXSA9IGdhbWUuaTE4bi5sb2NhbGl6ZShgRUZGRUNULk1PREVfJHtlWzBdfWApO1xuXHRcdFx0XHRyZXR1cm4gb2JqO1xuXHRcdFx0fSwge30pXG5cdFx0fTtcblx0XHRyZXR1cm4gZm91bmRyeS51dGlscy5tZXJnZU9iamVjdChjb250ZXh0LCBkYXRhKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBPdmVycmlkZSBkZWZhdWx0IHVwZGF0ZSBvYmplY3QgYmVoYXZpb3VyXG5cdCAqIEBwYXJhbSB7Kn0gZm9ybURhdGFcblx0ICogQG92ZXJyaWRlXG5cdCAqL1xuXHRhc3luYyBfdXBkYXRlT2JqZWN0KGV2ZW50LCBmb3JtRGF0YSkge1xuXHRcdGNvbnN0IGNvbmRpdGlvbklkRmxhZyA9IGdldFByb3BlcnR5KFxuXHRcdFx0dGhpcy5vYmplY3QuZmxhZ3MsXG5cdFx0XHRgY29uZGl0aW9uLWxhYi10cmlnZ2xlci4ke1wiY29uZGl0aW9uSWRcIn1gXG5cdFx0KTtcblx0XHRpZiAoIWNvbmRpdGlvbklkRmxhZykgcmV0dXJuO1xuXG5cdFx0Ly8gZmluZCB0aGUgbWF0Y2hpbmcgY29uZGl0aW9uIHJvd1xuXHRcdGNvbnN0IG1hcCA9IHVpLmNsdD8uY29uZGl0aW9uTGFiPy5tYXA7XG5cblx0XHRpZiAoIW1hcCAmJiAhbWFwLmxlbmd0aCkgcmV0dXJuO1xuXG5cdFx0Y29uc3QgY29uZGl0aW9uSWQgPSBjb25kaXRpb25JZEZsYWcucmVwbGFjZShcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXIuXCIsIFwiXCIpO1xuXHRcdGNvbnN0IGNvbmRpdGlvbiA9IG1hcC5maW5kKChjKSA9PiBjLmlkID09PSBjb25kaXRpb25JZCk7XG5cblx0XHRpZiAoIWNvbmRpdGlvbikgcmV0dXJuO1xuXG5cdFx0Ly8gdXBkYXRlIHRoZSBlZmZlY3QgZGF0YVxuXG5cdFx0Y29uZGl0aW9uLmFjdGl2ZUVmZmVjdCA9IGNvbmRpdGlvbi5hY3RpdmVFZmZlY3QgPyBtZXJnZU9iamVjdChjb25kaXRpb24uYWN0aXZlRWZmZWN0LCBmb3JtRGF0YSkgOiBmb3JtRGF0YTtcblxuXHRcdHRoaXMub2JqZWN0LnVwZGF0ZVNvdXJjZShmb3JtRGF0YSk7XG5cdFx0aWYgKHRoaXMuX3N0YXRlID09PSAyKSBhd2FpdCB0aGlzLnJlbmRlcigpO1xuXHRcdGlmICh1aS5jbHQuY29uZGl0aW9uTGFiKSB7XG5cdFx0XHR1aS5jbHQuY29uZGl0aW9uTGFiLm1hcCA9IHVpLmNsdC5jb25kaXRpb25MYWIudXBkYXRlZE1hcDtcblx0XHRcdC8vIHVpLmNsdC5jb25kaXRpb25MYWIudW5zYXZlZCA9IHRydWU7XG5cdFx0XHR1aS5jbHQuY29uZGl0aW9uTGFiLnJlbmRlcigpO1xuXHRcdH1cblx0fVxufVxuIiwiaW1wb3J0IHsgU2lkZWtpY2sgfSBmcm9tIFwiLi4vc2lkZWtpY2suanNcIjtcbmltcG9ydCB7IFRyaWdnbGVyRm9ybSB9IGZyb20gXCIuLi90cmlnZ2xlci90cmlnZ2xlci1mb3JtLmpzXCI7XG5pbXBvcnQgRW5oYW5jZWRDb25kaXRpb25NYWNyb0NvbmZpZyBmcm9tIFwiLi9lbmhhbmNlZC1jb25kaXRpb24tbWFjcm8uanNcIjtcbmltcG9ydCBFbmhhbmNlZENvbmRpdGlvbk9wdGlvbkNvbmZpZyBmcm9tIFwiLi9lbmhhbmNlZC1jb25kaXRpb24tb3B0aW9uLmpzXCI7XG5pbXBvcnQgRW5oYW5jZWRDb25kaXRpb25UcmlnZ2VyQ29uZmlnIGZyb20gXCIuL2VuaGFuY2VkLWNvbmRpdGlvbi10cmlnZ2VyLmpzXCI7XG5pbXBvcnQgeyBFbmhhbmNlZENvbmRpdGlvbnMgfSBmcm9tIFwiLi9lbmhhbmNlZC1jb25kaXRpb25zLmpzXCI7XG5pbXBvcnQgRW5oYW5jZWRFZmZlY3RDb25maWcgZnJvbSBcIi4vZW5oYW5jZWQtZWZmZWN0LWNvbmZpZy5qc1wiO1xuXG4vKipcbiAqIEZvcm0gYXBwbGljYXRpb24gZm9yIG1hbmFnaW5nIG1hcHBpbmcgb2YgQ29uZGl0aW9ucyB0byBJY29ucyBhbmQgSm91cm5hbEVudHJpZXNcbiAqL1xuZXhwb3J0IGNsYXNzIENvbmRpdGlvbkxhYiBleHRlbmRzIEZvcm1BcHBsaWNhdGlvbiB7XG5cdGNvbnN0cnVjdG9yKG9iamVjdCwgb3B0aW9ucyA9IHt9KSB7XG5cdFx0c3VwZXIob2JqZWN0LCBvcHRpb25zKTtcblx0XHRnYW1lLmNsdC5jb25kaXRpb25MYWIgPSB0aGlzO1xuXHRcdHRoaXMuZGF0YSA9IChnYW1lLmNsdC5jb25kaXRpb25MYWIgPyBnYW1lLmNsdC5jb25kaXRpb25MYWIuZGF0YSA6IG9iamVjdCkgPz8gbnVsbDtcblx0XHR0aGlzLnN5c3RlbSA9IGdhbWUuc3lzdGVtLmlkO1xuXHRcdHRoaXMuaW5pdGlhbE1hcFR5cGUgPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJjb25kaXRpb25NYXBUeXBlXCIpO1xuXHRcdHRoaXMubWFwVHlwZSA9IG51bGw7XG5cdFx0dGhpcy5pbml0aWFsTWFwID0gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiYWN0aXZlQ29uZGl0aW9uTWFwXCIpO1xuXHRcdHRoaXMubWFwID0gbnVsbDtcblx0XHR0aGlzLmRpc3BsYXllZE1hcCA9IG51bGw7XG5cdFx0dGhpcy5tYXBzID0gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiZGVmYXVsdENvbmRpdGlvbk1hcHNcIik7XG5cdFx0dGhpcy5maWx0ZXJWYWx1ZSA9IFwiXCI7XG5cdFx0dGhpcy5zb3J0RGlyZWN0aW9uID0gXCJcIjtcblx0fVxuXG5cdHN0YXRpYyBnZXQgZGVmYXVsdE9wdGlvbnMoKSB7XG5cdFx0cmV0dXJuIG1lcmdlT2JqZWN0KHN1cGVyLmRlZmF1bHRPcHRpb25zLCB7XG5cdFx0XHRpZDogXCJjdWItY29uZGl0aW9uLWxhYlwiLFxuXHRcdFx0dGl0bGU6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkxhYi5UaXRsZVwiKSxcblx0XHRcdHRlbXBsYXRlOiBcIm1vZHVsZXMvY29uZGl0aW9uLWxhYi10cmlnZ2xlci90ZW1wbGF0ZXMvY29uZGl0aW9uLWxhYi5oYnNcIixcblx0XHRcdGNsYXNzZXM6IFtcInNoZWV0XCIsIFwiY29uZGl0aW9uLWxhYi1mb3JtXCJdLFxuXHRcdFx0d2lkdGg6IDc4MCxcblx0XHRcdGhlaWdodDogNjgwLFxuXHRcdFx0cmVzaXphYmxlOiB0cnVlLFxuXHRcdFx0Y2xvc2VPblN1Ym1pdDogZmFsc2UsXG5cdFx0XHRzY3JvbGxZOiBbXCJvbC5jb25kaXRpb24tbGFiXCJdLFxuXHRcdFx0ZHJhZ0Ryb3A6IFt7IGRyb3BTZWxlY3RvcjogXCJpbnB1dFtuYW1lXj0ncmVmZXJlbmNlLWl0ZW0nXVwiIH1dXG5cdFx0fSk7XG5cdH1cblxuXHQvKipcblx0ICogR2V0IHVwZGF0ZWQgbWFwIGJ5IGNvbWJpbmluZyBleGlzdGluZyBpbi1tZW1vcnkgbWFwIHdpdGggY3VycmVudCBmb3JtZGF0YVxuXHQgKi9cblx0Z2V0IHVwZGF0ZWRNYXAoKSB7XG5cdFx0Y29uc3Qgc3VibWl0RGF0YSA9IHRoaXMuX2J1aWxkU3VibWl0RGF0YSgpO1xuXHRcdGNvbnN0IG1lcmdlZE1hcCA9IHRoaXMuX3Byb2Nlc3NGb3JtRGF0YShzdWJtaXREYXRhKTtcblx0XHRjb25zdCB1cGRhdGVkTWFwID0gRW5oYW5jZWRDb25kaXRpb25zLl9wcmVwYXJlTWFwKG1lcmdlZE1hcCk7XG5cdFx0cmV0dXJuIHVwZGF0ZWRNYXA7XG5cdH1cblxuXHQvKipcblx0ICogR2V0cyBkYXRhIGZvciB0aGUgdGVtcGxhdGUgcmVuZGVyXG5cdCAqL1xuXHRhc3luYyBnZXREYXRhKCkge1xuXHRcdGNvbnN0IHNvcnREaXJlY3Rpb24gPSB0aGlzLnNvcnREaXJlY3Rpb247XG5cdFx0Y29uc3Qgc29ydFRpdGxlID0gZ2FtZS5pMThuLmxvY2FsaXplKFxuXHRcdFx0YENMVC5FTkhBTkNFRF9DT05ESVRJT05TLkNvbmRpdGlvbkxhYi5Tb3J0QW5jaG9yVGl0bGUuJHtzb3J0RGlyZWN0aW9uID8gc29ydERpcmVjdGlvbiA6IFwidW5zb3J0ZWRcIn1gXG5cdFx0KTtcblx0XHRjb25zdCBmaWx0ZXJUaXRsZSA9IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkNvbmRpdGlvbkxhYi5GaWx0ZXJJbnB1dFRpdGxlXCIpO1xuXHRcdGNvbnN0IGZpbHRlclZhbHVlID0gdGhpcy5maWx0ZXJWYWx1ZTtcblxuXHRcdGNvbnN0IGRlZmF1bHRNYXBzID0gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiZGVmYXVsdENvbmRpdGlvbk1hcHNcIik7XG5cdFx0Y29uc3QgbWFwcGVkU3lzdGVtcyA9IE9iamVjdC5rZXlzKGRlZmF1bHRNYXBzKSB8fCBbXTtcblx0XHRjb25zdCBtYXBUeXBlQ2hvaWNlcyA9IGdhbWUuc2V0dGluZ3Muc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlci5jb25kaXRpb25NYXBUeXBlXCIpLmNob2ljZXM7XG5cblx0XHQvLyBJZiB0aGVyZSdzIG5vIGRlZmF1bHQgbWFwIGZvciB0aGlzIHN5c3RlbSBkb24ndCBwcm92aWRlIHRoZSBcImRlZmF1bHRcIiBjaG9pY2Vcblx0XHRpZiAoIW1hcHBlZFN5c3RlbXMuaW5jbHVkZXMoZ2FtZS5zeXN0ZW0uaWQpKSB7XG5cdFx0XHRpZiAodGhpcy5pbml0aWFsTWFwKSB7XG5cdFx0XHRcdG1hcFR5cGVDaG9pY2VzLmRlZmF1bHQgPSBnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuU0VUVElOR1MuRW5oYW5jZWRDb25kaXRpb25zLk1hcFR5cGUuQ2hvaWNlcy5pbmZlcnJlZFwiKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlbGV0ZSBtYXBUeXBlQ2hvaWNlcy5kZWZhdWx0O1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGNvbnN0IG1hcFR5cGUgPSAodGhpcy5tYXBUeXBlID0gdGhpcy5tYXBUeXBlIHx8IHRoaXMuaW5pdGlhbE1hcFR5cGUgfHwgXCJvdGhlclwiKTtcblx0XHRsZXQgY29uZGl0aW9uTWFwID0gdGhpcy5tYXAgPyB0aGlzLm1hcCA6ICh0aGlzLm1hcCA9IGR1cGxpY2F0ZSh0aGlzLmluaXRpYWxNYXApKTtcblx0XHRjb25zdCB0cmlnZ2VycyA9IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcInN0b3JlZFRyaWdnZXJzXCIpLm1hcCgodCkgPT4ge1xuXHRcdFx0cmV0dXJuIFt0LmlkLCB0LnRleHRdO1xuXHRcdH0pO1xuXG5cdFx0Y29uc3QgaXNEZWZhdWx0ID0gdGhpcy5tYXBUeXBlID09PSBcImRlZmF1bHRcIjtcblx0XHRjb25zdCBvdXRwdXRDaGF0U2V0dGluZyA9IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImNvbmRpdGlvbnNPdXRwdXRUb0NoYXRcIik7XG5cdFx0Y29uc3QgZGlzYWJsZUNoYXRPdXRwdXQgPSBpc0RlZmF1bHQgfHwgIW91dHB1dENoYXRTZXR0aW5nO1xuXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBjb25kaXRpb25NYXAubGVuZ3RoOyBpKyspIHtcblx0XHRcdGNvbnN0IGVudHJ5ID0gY29uZGl0aW9uTWFwW2ldO1xuXHRcdFx0Ly8gQ2hlY2sgaWYgdGhlIHJvdyBleGlzdHMgaW4gdGhlIHNhdmVkIG1hcFxuXHRcdFx0Y29uc3QgZXhpc3RpbmdFbnRyeSA9IHRoaXMuaW5pdGlhbE1hcC5maW5kKChlKSA9PiBlLmlkID09PSBlbnRyeS5pZCkgPz8gbnVsbDtcblx0XHRcdGVudHJ5LmxhYmVsID0gZ2FtZS5pMThuLmxvY2FsaXplKGVudHJ5Lm5hbWUpO1xuXHRcdFx0ZW50cnkuaXNOZXcgPSAhZXhpc3RpbmdFbnRyeTtcblx0XHRcdGVudHJ5LmlzQ2hhbmdlZCA9IHRoaXMuX2hhc0VudHJ5Q2hhbmdlZChlbnRyeSwgZXhpc3RpbmdFbnRyeSwgaSk7XG5cblx0XHRcdC8vIFNldCB0aGUgT3V0cHV0IHRvIENoYXQgY2hlY2tib3hcblx0XHRcdGVudHJ5Lm9wdGlvbnMgPSBlbnRyeS5vcHRpb25zID8/IHt9O1xuXHRcdFx0ZW50cnkuZW5yaWNoZWRSZWZlcmVuY2UgPSBlbnRyeS5yZWZlcmVuY2VJZFxuXHRcdFx0XHQ/IGF3YWl0IFRleHRFZGl0b3IuZW5yaWNoSFRNTChlbnRyeS5yZWZlcmVuY2VJZCwgeyBhc3luYzogdHJ1ZSwgZG9jdW1lbnRzOiB0cnVlIH0pXG5cdFx0XHRcdDogXCJcIjtcblxuXHRcdFx0Ly8gRGVmYXVsdCBhbGwgZW50cmllcyB0byBzaG93XG5cdFx0XHRlbnRyeS5oaWRkZW4gPSBlbnRyeS5oaWRkZW4gPz8gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gUHJlLWFwcGx5IGFueSBmaWx0ZXIgdmFsdWVcblx0XHR0aGlzLmRpc3BsYXllZE1hcCA9IGZpbHRlclZhbHVlXG5cdFx0XHQ/IHRoaXMuX2ZpbHRlck1hcEJ5TmFtZShjb25kaXRpb25NYXAsIGZpbHRlclZhbHVlKVxuXHRcdFx0OiBmb3VuZHJ5LnV0aWxzLmR1cGxpY2F0ZShjb25kaXRpb25NYXApO1xuXG5cdFx0Ly8gU29ydCB0aGUgZGlzcGxheWVkIG1hcCBiYXNlZCBvbiB0aGUgc29ydCBkaXJlY3Rpb25cblx0XHRpZiAoc29ydERpcmVjdGlvbikge1xuXHRcdFx0dGhpcy5kaXNwbGF5ZWRNYXAgPSB0aGlzLl9zb3J0TWFwQnlOYW1lKHRoaXMuZGlzcGxheWVkTWFwLCBzb3J0RGlyZWN0aW9uKTtcblx0XHR9XG5cblx0XHRjb25zdCBkaXNwbGF5ZWRNYXAgPSB0aGlzLmRpc3BsYXllZE1hcDtcblx0XHRjb25zdCBjb25kaXRpb25NYXBMZW5ndGggPSBkaXNwbGF5ZWRNYXAubGVuZ3RoIC0gMTtcblxuXHRcdGxldCB1bnNhdmVkTWFwID0gZmFsc2U7XG5cdFx0aWYgKFxuXHRcdFx0bWFwVHlwZSAhPT0gdGhpcy5pbml0aWFsTWFwVHlwZVxuXHRcdFx0fHwgY29uZGl0aW9uTWFwPy5sZW5ndGggIT09IHRoaXMuaW5pdGlhbE1hcD8ubGVuZ3RoXG5cdFx0XHR8fCBjb25kaXRpb25NYXAuc29tZSgoYykgPT4gYy5pc05ldyB8fCBjLmlzQ2hhbmdlZClcblx0XHQpIHtcblx0XHRcdHVuc2F2ZWRNYXAgPSB0cnVlO1xuXHRcdH1cblxuXHRcdC8vIFByZXBhcmUgZmluYWwgZGF0YSBvYmplY3QgZm9yIHRlbXBsYXRlXG5cdFx0Y29uc3QgZGF0YSA9IHtcblx0XHRcdHNvcnRUaXRsZSxcblx0XHRcdHNvcnREaXJlY3Rpb24sXG5cdFx0XHRmaWx0ZXJUaXRsZSxcblx0XHRcdGZpbHRlclZhbHVlLFxuXHRcdFx0bWFwVHlwZUNob2ljZXMsXG5cdFx0XHRtYXBUeXBlLFxuXHRcdFx0Y29uZGl0aW9uTWFwLFxuXHRcdFx0ZGlzcGxheWVkTWFwLFxuXHRcdFx0Y29uZGl0aW9uTWFwTGVuZ3RoLFxuXHRcdFx0dHJpZ2dlcnMsXG5cdFx0XHRpc0RlZmF1bHQsXG5cdFx0XHRkaXNhYmxlQ2hhdE91dHB1dCxcblx0XHRcdHVuc2F2ZWRNYXBcblx0XHR9O1xuXG5cdFx0dGhpcy5kYXRhID0gZGF0YTtcblx0XHRyZXR1cm4gZGF0YTtcblx0fVxuXG5cdC8qKlxuXHQgKiBFbnJpY2hlcyBzdWJtaXQgZGF0YSB3aXRoIGV4aXN0aW5nIG1hcCB0byBlbnN1cmUgY29udGludWl0eVxuXHQgKi9cblx0X2J1aWxkU3VibWl0RGF0YSgpIHtcblx0XHRjb25zdCBtYXAgPSB0aGlzLnNvcnREaXJlY3Rpb24gPyB0aGlzLl9zb3J0TWFwQnlOYW1lKHRoaXMubWFwKSA6IHRoaXMubWFwO1xuXHRcdGNvbnN0IGRhdGEgPVxuXHRcdFx0bWFwPy5yZWR1Y2UoKGFjYywgZW50cnksIGluZGV4KSA9PiB7XG5cdFx0XHRcdGFjY1tgaWQtJHtpbmRleH1gXSA9IGVudHJ5LmlkO1xuXHRcdFx0XHRyZXR1cm4gYWNjO1xuXHRcdFx0fSwge30pID8/IHt9O1xuXHRcdHJldHVybiB0aGlzLl9nZXRTdWJtaXREYXRhKGRhdGEpO1xuXHR9XG5cblx0LyoqXG5cdCAqIFByb2Nlc3NlcyB0aGUgRm9ybSBEYXRhIGFuZCBidWlsZHMgYSB1c2FibGUgQ29uZGl0aW9uIE1hcFxuXHQgKiBAcGFyYW0geyp9IGZvcm1EYXRhXG5cdCAqL1xuXHRfcHJvY2Vzc0Zvcm1EYXRhKGZvcm1EYXRhKSB7XG5cdFx0bGV0IGlkcyA9IFtdO1xuXHRcdGxldCBjb25kaXRpb25zID0gW107XG5cdFx0bGV0IGljb25zID0gW107XG5cdFx0bGV0IHJlZmVyZW5jZXMgPSBbXTtcblx0XHRsZXQgbmV3TWFwID0gW107XG5cdFx0Y29uc3Qgcm93cyA9IFtdO1xuXHRcdGNvbnN0IGV4aXN0aW5nTWFwID0gdGhpcy5tYXAgPz8gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiYWN0aXZlQ29uZGl0aW9uTWFwXCIpO1xuXG5cdFx0Ly8gbmVlZCB0byB0aWdodGVuIHRoZXNlIHVwIHRvIGNoZWNrIGZvciB0aGUgZXhpc3RlbmNlIG9mIGRpZ2l0cyBhZnRlciB0aGUgd29yZFxuXHRcdGNvbnN0IGNvbmRpdGlvblJlZ2V4ID0gL2NvbmRpdGlvbi9pO1xuXHRcdGNvbnN0IGlkUmVnZXggPSBuZXcgUmVnRXhwKC9eaWQvLCBcImlcIik7XG5cdFx0Y29uc3QgaWNvblJlZ2V4ID0gL2ljb24vaTtcblx0XHRjb25zdCByZWZlcmVuY2VSZWdleCA9IC9yZWZlcmVuY2UvaTtcblx0XHRjb25zdCByb3dSZWdleCA9IG5ldyBSZWdFeHAoL1xcZCskLyk7XG5cblx0XHQvLyB3cml0ZSBpdCBiYWNrIHRvIHRoZSByZWxldmFudCBjb25kaXRpb24gbWFwXG5cdFx0Ly8gQHRvZG86IG1heWJlIHN3aXRjaCB0byBhIHN3aXRjaFxuXHRcdGZvciAobGV0IGUgaW4gZm9ybURhdGEpIHtcblx0XHRcdGNvbnN0IHJvd01hdGNoID0gZS5tYXRjaChyb3dSZWdleCk7XG5cdFx0XHRjb25zdCByb3cgPSByb3dNYXRjaCA/IHJvd01hdGNoWzBdIDogbnVsbDtcblxuXHRcdFx0aWYgKCFyb3cpIHtcblx0XHRcdFx0Y29udGludWU7XG5cdFx0XHR9XG5cblx0XHRcdHJvd3MucHVzaChyb3cpO1xuXG5cdFx0XHRpZiAoZS5tYXRjaChpZFJlZ2V4KSkge1xuXHRcdFx0XHRpZHNbcm93XSA9IGZvcm1EYXRhW2VdO1xuXHRcdFx0fSBlbHNlIGlmIChlLm1hdGNoKGNvbmRpdGlvblJlZ2V4KSkge1xuXHRcdFx0XHRjb25kaXRpb25zW3Jvd10gPSBmb3JtRGF0YVtlXTtcblx0XHRcdH0gZWxzZSBpZiAoZS5tYXRjaChpY29uUmVnZXgpKSB7XG5cdFx0XHRcdGljb25zW3Jvd10gPSBmb3JtRGF0YVtlXTtcblx0XHRcdH0gZWxzZSBpZiAoZS5tYXRjaChyZWZlcmVuY2VSZWdleCkpIHtcblx0XHRcdFx0cmVmZXJlbmNlc1tyb3ddID0gZm9ybURhdGFbZV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Y29uc3QgdW5pcXVlUm93cyA9IFsuLi5uZXcgU2V0KHJvd3MpXTtcblxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgdW5pcXVlUm93cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0Y29uc3QgaWQgPSBpZHNbaV0gPz8gbnVsbDtcblx0XHRcdGNvbnN0IG5hbWUgPSBjb25kaXRpb25zW2ldO1xuXHRcdFx0Y29uc3QgZXhpc3RpbmdDb25kaXRpb24gPSBleGlzdGluZ01hcCAmJiBpZCA/IGV4aXN0aW5nTWFwLmZpbmQoKGMpID0+IGMuaWQgPT09IGlkKSA6IG51bGw7XG5cdFx0XHRjb25zdCB7XG5cdFx0XHRcdGFjdGl2ZUVmZmVjdCA9IG51bGwsXG5cdFx0XHRcdGFwcGx5VHJpZ2dlciA9IG51bGwsXG5cdFx0XHRcdHJlbW92ZVRyaWdnZXIgPSBudWxsLFxuXHRcdFx0XHRtYWNyb3MgPSBudWxsLFxuXHRcdFx0XHRvcHRpb25zID0ge31cblx0XHRcdH0gPSBleGlzdGluZ0NvbmRpdGlvbiB8fCB7fTtcblxuXHRcdFx0Y29uc3QgY29uZGl0aW9uID0ge1xuXHRcdFx0XHRpZCxcblx0XHRcdFx0bmFtZSxcblx0XHRcdFx0aWNvbjogaWNvbnNbaV0sXG5cdFx0XHRcdHJlZmVyZW5jZUlkOiByZWZlcmVuY2VzW2ldLFxuXHRcdFx0XHRhcHBseVRyaWdnZXIsXG5cdFx0XHRcdHJlbW92ZVRyaWdnZXIsXG5cdFx0XHRcdGFjdGl2ZUVmZmVjdCxcblx0XHRcdFx0bWFjcm9zLFxuXHRcdFx0XHRvcHRpb25zXG5cdFx0XHR9O1xuXG5cdFx0XHRuZXdNYXAucHVzaChjb25kaXRpb24pO1xuXHRcdH1cblxuXHRcdHJldHVybiBuZXdNYXA7XG5cdH1cblxuXHQvKipcblx0ICogUmVzdG9yZSBkZWZhdWx0cyBmb3IgYSBtYXBwaW5nXG5cdCAqIEBwYXJhbSByb290MFxuXHQgKiBAcGFyYW0gcm9vdDAuY2xlYXJDYWNoZVxuXHQgKi9cblx0YXN5bmMgX3Jlc3RvcmVEZWZhdWx0cyh7IGNsZWFyQ2FjaGUgPSBmYWxzZSB9ID0ge30pIHtcblx0XHRjb25zdCBzeXN0ZW0gPSB0aGlzLnN5c3RlbTtcblx0XHRsZXQgZGVmYXVsdE1hcHMgPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJkZWZhdWx0Q29uZGl0aW9uTWFwc1wiKTtcblxuXHRcdGlmIChjbGVhckNhY2hlKSB7XG5cdFx0XHRkZWZhdWx0TWFwcyA9IGF3YWl0IEVuaGFuY2VkQ29uZGl0aW9ucy5fbG9hZERlZmF1bHRNYXBzKCk7XG5cdFx0XHRnYW1lLnNldHRpbmdzLnNldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJkZWZhdWx0Q29uZGl0aW9uTWFwc1wiLCBkZWZhdWx0TWFwcyk7XG5cdFx0fVxuXHRcdGNvbnN0IHRlbXBNYXAgPSB0aGlzLm1hcFR5cGUgIT09IFwib3RoZXJcIiAmJiBkZWZhdWx0TWFwcyAmJiBkZWZhdWx0TWFwc1tzeXN0ZW1dID8gZGVmYXVsdE1hcHNbc3lzdGVtXSA6IFtdO1xuXG5cdFx0Ly8gSWYgdGhlIG1hcFR5cGUgaXMgb3RoZXIgdGhlbiB0aGUgbWFwIHNob3VsZCBiZSBlbXB0eSwgb3RoZXJ3aXNlIGl0J3MgdGhlIGRlZmF1bHQgbWFwIGZvciB0aGUgc3lzdGVtXG5cdFx0dGhpcy5tYXAgPSB0ZW1wTWFwO1xuXHRcdHRoaXMucmVuZGVyKHRydWUpO1xuXHR9XG5cblx0LyoqXG5cdCAqIFRha2UgdGhlIG5ldyBtYXAgYW5kIHdyaXRlIGl0IGJhY2sgdG8gc2V0dGluZ3MsIG92ZXJ3cml0aW5nIGV4aXN0aW5nXG5cdCAqIEBwYXJhbSB7b2JqZWN0fSBldmVudFxuXHQgKiBAcGFyYW0ge29iamVjdH0gZm9ybURhdGFcblx0ICovXG5cdGFzeW5jIF91cGRhdGVPYmplY3QoZXZlbnQsIGZvcm1EYXRhKSB7XG5cdFx0Y29uc3Qgc2hvd0RpYWxvZ1NldHRpbmcgPSBnYW1lLnNldHRpbmdzLmdldChcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJzaG93U29ydERpcmVjdGlvbkRpYWxvZ1wiKTtcblxuXHRcdGlmICh0aGlzLnNvcnREaXJlY3Rpb24gJiYgc2hvd0RpYWxvZ1NldHRpbmcpIHtcblx0XHRcdGF3YWl0IERpYWxvZy5jb25maXJtKHtcblx0XHRcdFx0dGl0bGU6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkNvbmRpdGlvbkxhYi5Tb3J0RGlyZWN0aW9uU2F2ZS5UaXRsZVwiKSxcblx0XHRcdFx0Y29udGVudDogZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuQ29uZGl0aW9uTGFiLlNvcnREaXJlY3Rpb25TYXZlLkNvbnRlbnRcIiksXG5cdFx0XHRcdHllczogKCRodG1sKSA9PiB7XG5cdFx0XHRcdFx0Y29uc3QgY2hlY2tib3ggPSAkaHRtbFswXS5xdWVyeVNlbGVjdG9yKFwiaW5wdXRbbmFtZT0nZG9udC1zaG93LWFnYWluJ11cIik7XG5cdFx0XHRcdFx0aWYgKGNoZWNrYm94LmNoZWNrZWQpIHtcblx0XHRcdFx0XHRcdGdhbWUuc2V0dGluZ3Muc2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcInNob3dTb3J0RGlyZWN0aW9uRGlhbG9nXCIsIGZhbHNlKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dGhpcy5fcHJvY2Vzc0Zvcm1VcGRhdGUoZm9ybURhdGEpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRubzogKCkgPT4ge31cblx0XHRcdH0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLl9wcm9jZXNzRm9ybVVwZGF0ZShmb3JtRGF0YSk7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIFByb2Nlc3MgQ29uZGl0aW9uIExhYiBmb3JtZGF0YSBhbmQgdGhlbiBzYXZlIGNoYW5nZXNcblx0ICogQHBhcmFtIHsqfSBmb3JtRGF0YVxuXHQgKi9cblx0YXN5bmMgX3Byb2Nlc3NGb3JtVXBkYXRlKGZvcm1EYXRhKSB7XG5cdFx0Y29uc3QgbWFwVHlwZSA9IGZvcm1EYXRhW1wibWFwLXR5cGVcIl07XG5cdFx0bGV0IG5ld01hcCA9IHRoaXMudXBkYXRlZE1hcDtcblxuXHRcdGlmIChtYXBUeXBlID09PSBcImRlZmF1bHRcIikge1xuXHRcdFx0Y29uc3QgZGVmYXVsdE1hcCA9IEVuaGFuY2VkQ29uZGl0aW9ucy5nZXREZWZhdWx0TWFwKHRoaXMuc3lzdGVtKTtcblx0XHRcdG5ld01hcCA9IG1lcmdlT2JqZWN0KG5ld01hcCwgZGVmYXVsdE1hcCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5fc2F2ZU1hcHBpbmcobmV3TWFwLCBtYXBUeXBlKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBTYXZlcyBhIGdpdmVuIG1hcCBhbmQgb3B0aW9uIG1hcCB0eXBlIHRvIHN0b3JhZ2Vcblx0ICogQHBhcmFtIHsqfSBuZXdNYXBcblx0ICogQHBhcmFtIHsqfSBtYXBUeXBlXG5cdCAqL1xuXHRhc3luYyBfc2F2ZU1hcHBpbmcobmV3TWFwLCBtYXBUeXBlID0gdGhpcy5tYXBUeXBlKSB7XG5cdFx0dGhpcy5tYXBUeXBlID0gdGhpcy5pbml0aWFsTWFwVHlwZSA9IG1hcFR5cGU7XG5cdFx0Y29uc3QgcHJlcGFyZWRNYXAgPSBFbmhhbmNlZENvbmRpdGlvbnMuX3ByZXBhcmVNYXAobmV3TWFwKTtcblxuXHRcdGF3YWl0IGdhbWUuc2V0dGluZ3Muc2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImNvbmRpdGlvbk1hcFR5cGVcIiwgbWFwVHlwZSk7XG5cdFx0YXdhaXQgZ2FtZS5zZXR0aW5ncy5zZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiYWN0aXZlQ29uZGl0aW9uTWFwXCIsIHByZXBhcmVkTWFwKTtcblxuXHRcdHRoaXMuX2ZpbmFsaXNlU2F2ZShwcmVwYXJlZE1hcCk7XG5cdH1cblxuXHQvKipcblx0ICogUGVyZm9ybXMgZmluYWwgc3RlcHMgYWZ0ZXIgc2F2aW5nIG1hcHBpbmdcblx0ICogQHBhcmFtIHsqfSBwcmVwYXJlZE1hcFxuXHQgKi9cblx0YXN5bmMgX2ZpbmFsaXNlU2F2ZShwcmVwYXJlZE1hcCkge1xuXHRcdHRoaXMubWFwID0gdGhpcy5pbml0aWFsTWFwID0gcHJlcGFyZWRNYXA7XG5cdFx0dGhpcy51bnNhdmVkID0gZmFsc2U7XG5cdFx0dGhpcy5zb3J0RGlyZWN0aW9uID0gXCJcIjtcblxuXHRcdHVpLm5vdGlmaWNhdGlvbnMuaW5mbyhnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5MYWIuU2F2ZVN1Y2Nlc3NcIikpO1xuXHRcdHRoaXMucmVuZGVyKHRydWUpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEV4cG9ydHMgdGhlIGN1cnJlbnQgbWFwIHRvIEpTT05cblx0ICovXG5cdF9leHBvcnRUb0pTT04oKSB7XG5cdFx0Y29uc3QgbWFwID0gZHVwbGljYXRlKHRoaXMubWFwKTtcblx0XHRjb25zdCBkYXRhID0ge1xuXHRcdFx0c3lzdGVtOiBnYW1lLnN5c3RlbS5pZCxcblx0XHRcdG1hcFxuXHRcdH07XG5cblx0XHQvLyBUcmlnZ2VyIGZpbGUgc2F2ZSBwcm9jZWR1cmVcblx0XHRjb25zdCBmaWxlbmFtZSA9IGBjdWItJHtnYW1lLnN5c3RlbS5pZH0tY29uZGl0aW9uLW1hcC5qc29uYDtcblx0XHRzYXZlRGF0YVRvRmlsZShKU09OLnN0cmluZ2lmeShkYXRhLCBudWxsLCAyKSwgXCJ0ZXh0L2pzb25cIiwgZmlsZW5hbWUpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEluaXRpYXRlcyBhbiBpbXBvcnQgdmlhIGEgZGlhbG9nXG5cdCAqIEJvcnJvd2VkIGZyb20gZm91bmRyeS5qcyBFbnRpdHkgY2xhc3Ncblx0ICovXG5cdGFzeW5jIF9pbXBvcnRGcm9tSlNPTkRpYWxvZygpIHtcblx0XHRuZXcgRGlhbG9nKHtcblx0XHRcdHRpdGxlOiBnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5MYWIuSW1wb3J0VGl0bGVcIiksXG5cdFx0XHRjb250ZW50OiBhd2FpdCByZW5kZXJUZW1wbGF0ZShcIm1vZHVsZXMvY29uZGl0aW9uLWxhYi10cmlnZ2xlci90ZW1wbGF0ZXMvaW1wb3J0LWNvbmRpdGlvbnMuaHRtbFwiLCB7fSksXG5cdFx0XHRidXR0b25zOiB7XG5cdFx0XHRcdGltcG9ydDoge1xuXHRcdFx0XHRcdGljb246ICc8aSBjbGFzcz1cImZhcyBmYS1maWxlLWltcG9ydFwiPjwvaT4nLFxuXHRcdFx0XHRcdGxhYmVsOiBnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuV09SRFMuSW1wb3J0XCIpLFxuXHRcdFx0XHRcdGNhbGxiYWNrOiAoaHRtbCkgPT4ge1xuXHRcdFx0XHRcdFx0dGhpcy5fcHJvY2Vzc0ltcG9ydChodG1sKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0sXG5cdFx0XHRcdG5vOiB7XG5cdFx0XHRcdFx0aWNvbjogJzxpIGNsYXNzPVwiZmFzIGZhLXRpbWVzXCI+PC9pPicsXG5cdFx0XHRcdFx0bGFiZWw6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNhbmNlbFwiKVxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXHRcdFx0ZGVmYXVsdDogXCJpbXBvcnRcIlxuXHRcdH0pLnJlbmRlcih0cnVlKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBQcm9jZXNzIGEgQ29uZGl0aW9uIE1hcCBJbXBvcnRcblx0ICogQHBhcmFtIHsqfSBodG1sXG5cdCAqL1xuXHRhc3luYyBfcHJvY2Vzc0ltcG9ydChodG1sKSB7XG5cdFx0Y29uc3QgZm9ybSA9IGh0bWwuZmluZChcImZvcm1cIilbMF07XG5cblx0XHRpZiAoIWZvcm0uZGF0YS5maWxlcy5sZW5ndGgpIHtcblx0XHRcdHJldHVybiB1aS5ub3RpZmljYXRpb25zLmVycm9yKGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkxhYi5JbXBvcnQuTm9GaWxlXCIpKTtcblx0XHR9XG5cblx0XHRjb25zdCBqc29uRmlsZSA9IGF3YWl0IHJlYWRUZXh0RnJvbUZpbGUoZm9ybS5kYXRhLmZpbGVzWzBdKTtcblx0XHRjb25zdCBqc29uID0gSlNPTi5wYXJzZShqc29uRmlsZSk7XG5cdFx0Y29uc3QgbWFwID0gRW5oYW5jZWRDb25kaXRpb25zLm1hcEZyb21Kc29uKGpzb24pO1xuXG5cdFx0aWYgKCFtYXAgfHwgIW1hcD8ubGVuZ3RoKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dGhpcy5tYXBUeXBlID0gXCJvdGhlclwiO1xuXHRcdHRoaXMubWFwID0gbWFwO1xuXHRcdHRoaXMucmVuZGVyKCk7XG5cdH1cblxuXHQvKipcblx0ICogT3ZlcnJpZGUgdGhlIGhlYWRlciBidXR0b25zIG1ldGhvZFxuXHQgKi9cblx0X2dldEhlYWRlckJ1dHRvbnMoKSB7XG5cdFx0bGV0IGJ1dHRvbnMgPSBzdXBlci5fZ2V0SGVhZGVyQnV0dG9ucygpO1xuXG5cdFx0YnV0dG9ucy51bnNoaWZ0KFxuXHRcdFx0e1xuXHRcdFx0XHRsYWJlbDogZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULldPUkRTLkltcG9ydFwiKSxcblx0XHRcdFx0Y2xhc3M6IFwiaW1wb3J0XCIsXG5cdFx0XHRcdGljb246IFwiZmFzIGZhLWZpbGUtaW1wb3J0XCIsXG5cdFx0XHRcdG9uY2xpY2s6IGFzeW5jIChldikgPT4ge1xuXHRcdFx0XHRcdHRoaXMuX2ltcG9ydEZyb21KU09ORGlhbG9nKCk7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHR7XG5cdFx0XHRcdGxhYmVsOiBnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuV09SRFMuRXhwb3J0XCIpLFxuXHRcdFx0XHRjbGFzczogXCJleHBvcnRcIixcblx0XHRcdFx0aWNvbjogXCJmYXMgZmEtZmlsZS1leHBvcnRcIixcblx0XHRcdFx0b25jbGljazogYXN5bmMgKGV2KSA9PiB7XG5cdFx0XHRcdFx0dGhpcy5fZXhwb3J0VG9KU09OKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHQpO1xuXG5cdFx0cmV0dXJuIGJ1dHRvbnM7XG5cdH1cblxuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXHQvKiAgICAgICAgICAgICAgICAgSG9vayBIYW5kbGVycyAgICAgICAgICAgICAgICAqL1xuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8qKlxuXHQgKiBDb25kaXRpb24gTGFiIFJlbmRlciBoYW5kbGVyXG5cdCAqIEBwYXJhbSB7Kn0gYXBwXG5cdCAqIEBwYXJhbSB7Kn0gaHRtbFxuXHQgKiBAcGFyYW0geyp9IGRhdGFcblx0ICovXG5cdHN0YXRpYyBfb25SZW5kZXIoYXBwLCBodG1sLCBkYXRhKSB7XG5cdFx0dWkuY2x0LmNvbmRpdGlvbkxhYiA9IGFwcDtcblx0fVxuXG5cdC8qKlxuXHQgKiBSZW5kZXIgc2F2ZSBkaWFsb2cgaG9vayBoYW5kbGVyXG5cdCAqIEBwYXJhbSB7Kn0gYXBwXG5cdCAqIEBwYXJhbSB7alF1ZXJ5fSBodG1sXG5cdCAqIEBwYXJhbSB7Kn0gZGF0YVxuXHQgKi9cblx0c3RhdGljIF9vblJlbmRlclNhdmVEaWFsb2coYXBwLCBodG1sLCBkYXRhKSB7XG5cdFx0Y29uc3QgY29udGVudERpdiA9IGh0bWxbMF0ucXVlcnlTZWxlY3RvcihcImRpdi5kaWFsb2ctY29udGVudFwiKTtcblx0XHRjb25zdCBjaGVja2JveCA9IGA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPjxsYWJlbCBjbGFzcz1cImRvbnQtc2hvdy1hZ2Fpbi1jaGVja2JveFwiPiR7Z2FtZS5pMThuLmxvY2FsaXplKFxuXHRcdFx0XCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5Db25kaXRpb25MYWIuU29ydERpcmVjdGlvblNhdmUuQ2hlY2tib3hUZXh0XCJcblx0XHQpfTxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiZG9udC1zaG93LWFnYWluXCI+PC9sYWJlbD48L2Rpdj5gO1xuXHRcdGNvbnRlbnREaXYuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlZW5kXCIsIGNoZWNrYm94KTtcblx0XHRhcHAuc2V0UG9zaXRpb24oeyBoZWlnaHQ6IGFwcC5wb3NpdGlvbi5oZWlnaHQgKyAzMiB9KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBSZW5kZXIgcmVzdG9yZSBkZWZhdWx0cyBob29rIGhhbmRsZXJcblx0ICogQHBhcmFtIHsqfSBhcHBcblx0ICogQHBhcmFtIHsqfSBodG1sXG5cdCAqIEBwYXJhbSB7Kn0gZGF0YVxuXHQgKi9cblx0c3RhdGljIF9vblJlbmRlclJlc3RvcmVEZWZhdWx0c0RpYWxvZyhhcHAsIGh0bWwsIGRhdGEpIHtcblx0XHRpZiAoZ2FtZS5jbHQuY29uZGl0aW9uTGFiLm1hcFR5cGUgIT09IFwiZGVmYXVsdFwiKSByZXR1cm47XG5cblx0XHRjb25zdCBjb250ZW50RGl2ID0gaHRtbFswXS5xdWVyeVNlbGVjdG9yKFwiZGl2LmRpYWxvZy1jb250ZW50XCIpO1xuXHRcdGNvbnN0IGNoZWNrYm94ID0gYDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XG5cdFx0PGxhYmVsPiR7Z2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuQ29uZGl0aW9uTGFiLlJlc3RvcmVEZWZhdWx0Q2xlYXJDYWNoZS5DaGVja2JveFRleHRcIil9PC9sYWJlbD5cblx0XHQ8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cImNsZWFyLWNhY2hlXCI+XG5cdFx0PC9kaXY+YDtcblx0XHRjb250ZW50RGl2Lmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWVuZFwiLCBjaGVja2JveCk7XG5cdFx0YXBwLnNldFBvc2l0aW9uKHsgaGVpZ2h0OiBhcHAucG9zaXRpb24uaGVpZ2h0ICsgMzIgfSk7XG5cdH1cblxuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXHQvKiAgICAgICAgICAgICAgICBFdmVudCBIYW5kbGVycyAgICAgICAgICAgICAgICAqL1xuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8qKlxuXHQgKiBBY3RpdmF0ZSBhcHAgbGlzdGVuZXJzXG5cdCAqIEBwYXJhbSB7Kn0gaHRtbFxuXHQgKi9cblx0YWN0aXZhdGVMaXN0ZW5lcnMoaHRtbCkge1xuXHRcdGNvbnN0IGlucHV0cyA9IGh0bWwuZmluZChcImlucHV0XCIpO1xuXHRcdGNvbnN0IG1hcFR5cGVTZWxlY3RvciA9IGh0bWwuZmluZChcInNlbGVjdFtjbGFzcz0nbWFwLXR5cGUnXVwiKTtcblx0XHRjb25zdCBhY3RpdmVFZmZlY3RCdXR0b24gPSBodG1sLmZpbmQoXCJidXR0b24uYWN0aXZlLWVmZmVjdC1jb25maWdcIik7XG5cdFx0Y29uc3QgdHJpZ2dlckFuY2hvciA9IGh0bWwuZmluZChcImFbY2xhc3M9J3RyaWdnZXInXVwiKTtcblx0XHRjb25zdCBhZGRSb3dBbmNob3IgPSBodG1sLmZpbmQoXCJhW25hbWU9J2FkZC1yb3cnXVwiKTtcblx0XHRjb25zdCByZW1vdmVSb3dBbmNob3IgPSBodG1sLmZpbmQoXCJhW2NsYXNzPSdyZW1vdmUtcm93J11cIik7XG5cdFx0Y29uc3QgY2hhbmdlT3JkZXJBbmNob3IgPSBodG1sLmZpbmQoXCIucm93LWNvbnRyb2xzIGEubW92ZS11cCwgLnJvdy1jb250cm9scyBhLm1vdmUtZG93blwiKTtcblx0XHRjb25zdCByZXN0b3JlRGVmYXVsdHNCdXR0b24gPSBodG1sLmZpbmQoXCJidXR0b25bY2xhc3M9J3Jlc3RvcmUtZGVmYXVsdHMnXVwiKTtcblx0XHRjb25zdCByZXNldEZvcm1CdXR0b24gPSBodG1sLmZpbmQoXCJidXR0b25bbmFtZT0ncmVzZXQnXVwiKTtcblx0XHRjb25zdCBzYXZlQ2xvc2VCdXR0b24gPSBodG1sLmZpbmQoXCJidXR0b25bbmFtZT0nc2F2ZS1jbG9zZSddXCIpO1xuXHRcdGNvbnN0IGZpbHRlcklucHV0ID0gaHRtbC5maW5kKFwiaW5wdXRbbmFtZT0nZmlsdGVyLWxpc3QnXVwiKTtcblx0XHRjb25zdCBzb3J0QnV0dG9uID0gaHRtbC5maW5kKFwiYS5zb3J0LWxpc3RcIik7XG5cdFx0Y29uc3QgbWFjcm9Db25maWdCdXR0b24gPSBodG1sLmZpbmQoXCJidXR0b24ubWFjcm8tY29uZmlnXCIpO1xuXHRcdGNvbnN0IHRyaWdnZXJDb25maWdCdXR0b24gPSBodG1sLmZpbmQoXCJidXR0b24udHJpZ2dlci1jb25maWdcIik7XG5cdFx0Y29uc3Qgb3B0aW9uQ29uZmlnQnV0dG9uID0gaHRtbC5maW5kKFwiYnV0dG9uLm9wdGlvbi1jb25maWdcIik7XG5cblx0XHRpbnB1dHMub24oXCJjaGFuZ2VcIiwgKGV2ZW50KSA9PiB0aGlzLl9vbkNoYW5nZUlucHV0cyhldmVudCkpO1xuXHRcdG1hcFR5cGVTZWxlY3Rvci5vbihcImNoYW5nZVwiLCAoZXZlbnQpID0+IHRoaXMuX29uQ2hhbmdlTWFwVHlwZShldmVudCkpO1xuXHRcdGFjdGl2ZUVmZmVjdEJ1dHRvbi5vbihcImNsaWNrXCIsIChldmVudCkgPT4gdGhpcy5fb25DbGlja0FjdGl2ZUVmZmVjdENvbmZpZyhldmVudCkpO1xuXHRcdHRyaWdnZXJBbmNob3Iub24oXCJjbGlja1wiLCAoZXZlbnQpID0+IHRoaXMuX29uT3BlblRyaWdnbGVyRm9ybShldmVudCkpO1xuXHRcdGFkZFJvd0FuY2hvci5vbihcImNsaWNrXCIsIGFzeW5jIChldmVudCkgPT4gdGhpcy5fb25BZGRSb3coZXZlbnQpKTtcblx0XHRyZW1vdmVSb3dBbmNob3Iub24oXCJjbGlja1wiLCBhc3luYyAoZXZlbnQpID0+IHRoaXMuX29uUmVtb3ZlUm93KGV2ZW50KSk7XG5cdFx0Y2hhbmdlT3JkZXJBbmNob3Iub24oXCJjbGlja1wiLCAoZXZlbnQpID0+IHRoaXMuX29uQ2hhbmdlU29ydE9yZGVyKGV2ZW50KSk7XG5cdFx0cmVzdG9yZURlZmF1bHRzQnV0dG9uLm9uKFwiY2xpY2tcIiwgYXN5bmMgKGV2ZW50KSA9PiB0aGlzLl9vblJlc3RvcmVEZWZhdWx0cyhldmVudCkpO1xuXHRcdHJlc2V0Rm9ybUJ1dHRvbi5vbihcImNsaWNrXCIsIChldmVudCkgPT4gdGhpcy5fb25SZXNldEZvcm0oZXZlbnQpKTtcblx0XHRzYXZlQ2xvc2VCdXR0b24ub24oXCJjbGlja1wiLCAoZXZlbnQpID0+IHRoaXMuX29uU2F2ZUNsb3NlKGV2ZW50KSk7XG5cdFx0ZmlsdGVySW5wdXQub24oXCJpbnB1dFwiLCAoZXZlbnQpID0+IHRoaXMuX29uQ2hhbmdlRmlsdGVyKGV2ZW50KSk7XG5cdFx0c29ydEJ1dHRvbi5vbihcImNsaWNrXCIsIChldmVudCkgPT4gdGhpcy5fb25DbGlja1NvcnRCdXR0b24oZXZlbnQpKTtcblx0XHRtYWNyb0NvbmZpZ0J1dHRvbi5vbihcImNsaWNrXCIsIChldmVudCkgPT4gdGhpcy5fb25DbGlja01hY3JvQ29uZmlnKGV2ZW50KSk7XG5cdFx0dHJpZ2dlckNvbmZpZ0J1dHRvbi5vbihcImNsaWNrXCIsIChldmVudCkgPT4gdGhpcy5fb25DbGlja1RyaWdnZXJDb25maWcoZXZlbnQpKTtcblx0XHRvcHRpb25Db25maWdCdXR0b24ub24oXCJjbGlja1wiLCAoZXZlbnQpID0+IHRoaXMuX29uQ2xpY2tPcHRpb25Db25maWcoZXZlbnQpKTtcblxuXHRcdHN1cGVyLmFjdGl2YXRlTGlzdGVuZXJzKGh0bWwpO1xuXHR9XG5cblx0X2FjdGl2YXRlQ29yZUxpc3RlbmVycyhodG1sKSB7XG5cdFx0c3VwZXIuX2FjdGl2YXRlQ29yZUxpc3RlbmVycyhodG1sKTtcblx0XHRpZiAodGhpcy5pc0VkaXRhYmxlKSBodG1sLmZpbmQoXCJpbWdbZGF0YS1lZGl0XVwiKS5vbihcImNsaWNrXCIsIHRoaXMuX29uRWRpdEltYWdlLmJpbmQodGhpcykpO1xuXHR9XG5cblx0LyoqXG5cdCAqIElucHV0IGNoYW5nZSBoYW5kbGVyXG5cdCAqIEBwYXJhbSB7Kn0gZXZlbnRcblx0ICogQHJldHVybnMge0FwcGxpY2F0aW9uLnJlbmRlcn1cblx0ICovXG5cdGFzeW5jIF9vbkNoYW5nZUlucHV0cyhldmVudCkge1xuXHRcdGNvbnN0IG5hbWUgPSBldmVudC50YXJnZXQubmFtZTtcblx0XHRpZiAobmFtZS5zdGFydHNXaXRoKFwiZmlsdGVyLWxpc3RcIikpIHJldHVybjtcblx0XHR0aGlzLm1hcCA9IHRoaXMudXBkYXRlZE1hcDtcblx0XHRpZiAobmFtZS5zdGFydHNXaXRoKFwicmVmZXJlbmNlLWlkXCIpKSB0aGlzLl9vbkNoYW5nZVJlZmVyZW5jZUlkKGV2ZW50KTtcblx0XHRpZiAodGhpcy5faGFzTWFwQ2hhbmdlZCgpKSByZXR1cm4gdGhpcy5yZW5kZXIoKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBGaWx0ZXIgaW5wdXQgY2hhbmdlIGhhbmRsZXJcblx0ICogQHBhcmFtIGV2ZW50XG5cdCAqL1xuXHRfb25DaGFuZ2VGaWx0ZXIoZXZlbnQpIHtcblx0XHRjb25zdCBpbnB1dCA9IGV2ZW50LnRhcmdldDtcblx0XHRjb25zdCBpbnB1dFZhbHVlID0gaW5wdXQ/LnZhbHVlO1xuXHRcdHRoaXMuZmlsdGVyVmFsdWUgPSBpbnB1dFZhbHVlID8/IFwiXCI7XG5cdFx0dGhpcy5kaXNwbGF5ZWRNYXAgPSB0aGlzLl9maWx0ZXJNYXBCeU5hbWUodGhpcy5tYXAsIHRoaXMuZmlsdGVyVmFsdWUpO1xuXG5cdFx0dGhpcy5kaXNwbGF5ZWRSb3dJZHMgPSB0aGlzLmRpc3BsYXllZE1hcC5maWx0ZXIoKHIpID0+ICFyLmhpZGRlbikubWFwKChyKSA9PiByLmlkKTtcblxuXHRcdGNvbnN0IGNvbmRpdGlvblJvd0VscyA9IHRoaXMuX2VsZW1lbnRbMF0ucXVlcnlTZWxlY3RvckFsbChcImxpLnJvd1wiKTtcblx0XHRmb3IgKGNvbnN0IGVsIG9mIGNvbmRpdGlvblJvd0Vscykge1xuXHRcdFx0Y29uc3QgY29uZGl0aW9uSWQgPSBlbC5kYXRhc2V0LmNvbmRpdGlvbklkO1xuXHRcdFx0aWYgKHRoaXMuZGlzcGxheWVkUm93SWRzLmluY2x1ZGVzKGNvbmRpdGlvbklkKSkge1xuXHRcdFx0XHRlbC5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWwuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogRmlsdGVyIHRoZSBnaXZlbiBtYXAgYnkgdGhlIG5hbWUgcHJvcGVydHkgdXNpbmcgdGhlIHN1cHBsaWVkIGZpbHRlciB2YWx1ZSwgbWFya2luZyBmaWx0ZXJlZCBlbnRyaWVzIGFzIFwiaGlkZGVuXCJcblx0ICogQHBhcmFtIHtBcnJheX0gbWFwXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBmaWx0ZXJcblx0ICogQHJldHVybnMgZmlsdGVyZWRNYXBcblx0ICovXG5cdF9maWx0ZXJNYXBCeU5hbWUobWFwLCBmaWx0ZXIpIHtcblx0XHRyZXR1cm4gbWFwLm1hcCgoYykgPT4gKHsgLi4uYywgaGlkZGVuOiAhYy5sYWJlbC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGZpbHRlci50b0xvd2VyQ2FzZSgpKSB9KSk7XG5cdH1cblxuXHQvKipcblx0ICogQ2hhbmdlIE1hcCBUeXBlIGV2ZW50IGhhbmRsZXJcblx0ICogQHBhcmFtIHsqfSBldmVudFxuXHQgKi9cblx0YXN5bmMgX29uQ2hhbmdlTWFwVHlwZShldmVudCkge1xuXHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0Y29uc3Qgc2VsZWN0aW9uID0gJChldmVudC50YXJnZXQpLmZpbmQoXCJvcHRpb246c2VsZWN0ZWRcIik7XG5cdFx0Y29uc3QgbmV3VHlwZSA9ICh0aGlzLm1hcFR5cGUgPSBzZWxlY3Rpb24udmFsKCkpO1xuXG5cdFx0c3dpdGNoIChuZXdUeXBlKSB7XG5cdFx0XHRjYXNlIFwiZGVmYXVsdFwiOlxuXHRcdFx0Y2FzZSBcImN1c3RvbVwiOiB7XG5cdFx0XHRcdGNvbnN0IGRlZmF1bHRNYXAgPSBFbmhhbmNlZENvbmRpdGlvbnMuZ2V0RGVmYXVsdE1hcCh0aGlzLnN5c3RlbSk7XG5cdFx0XHRcdHRoaXMubWFwID0gZGVmYXVsdE1hcD8ubGVuZ3RoID8gRW5oYW5jZWRDb25kaXRpb25zLl9wcmVwYXJlTWFwKGRlZmF1bHRNYXApIDogW107XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXG5cdFx0XHRjYXNlIFwib3RoZXJcIjoge1xuXHRcdFx0XHR0aGlzLm1hcCA9IHRoaXMuaW5pdGlhbE1hcFR5cGUgPT09IFwib3RoZXJcIiA/IHRoaXMuaW5pdGlhbE1hcCA6IFtdO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblxuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXG5cdFx0dGhpcy5kYXRhID0gbnVsbDtcblx0XHR0aGlzLnJlbmRlcigpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEhhbmRsZSBpY29uIHBhdGggY2hhbmdlXG5cdCAqIEBwYXJhbSB7Kn0gZXZlbnRcblx0ICovXG5cdF9vbkNoYW5nZUljb25QYXRoKGV2ZW50KSB7XG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuXHRcdGNvbnN0IHJvdyA9IGV2ZW50LnRhcmdldC5uYW1lLm1hdGNoKC9cXGQrJC8pWzBdO1xuXG5cdFx0Ly8gdGFyZ2V0IHRoZSBpY29uXG5cdFx0Y29uc3QgaWNvbiA9ICQodGhpcy5mb3JtKS5maW5kKGBpbWdbbmFtZT0naWNvbi0ke3Jvd31gKTtcblx0XHRpY29uLmF0dHIoXCJzcmNcIiwgZXZlbnQudGFyZ2V0LnZhbHVlKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBIYW5kbGUgY2xpY2sgQWN0aXZlIEVmZmVjdCBDb25maWcgYnV0dG9uXG5cdCAqIEBwYXJhbSB7Kn0gZXZlbnRcblx0ICovXG5cdGFzeW5jIF9vbkNsaWNrQWN0aXZlRWZmZWN0Q29uZmlnKGV2ZW50KSB7XG5cdFx0Y29uc3QgbGkgPSBldmVudC5jdXJyZW50VGFyZ2V0LmNsb3Nlc3QoXCJsaVwiKTtcblx0XHRjb25zdCBjb25kaXRpb25JZCA9IGxpID8gbGkuZGF0YXNldC5jb25kaXRpb25JZCA6IG51bGw7XG5cblx0XHRpZiAoIWNvbmRpdGlvbklkKSByZXR1cm47XG5cblx0XHRjb25zdCBjb25kaXRpb25zID0gdGhpcy5tYXAgPz8gZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiYWN0aXZlQ29uZGl0aW9uTWFwXCIpO1xuXHRcdGNvbnN0IGNvbmRpdGlvbiA9IGNvbmRpdGlvbnMubGVuZ3RoID8gY29uZGl0aW9ucy5maW5kKChjKSA9PiBjLmlkID09PSBjb25kaXRpb25JZCkgOiBudWxsO1xuXG5cdFx0aWYgKCFjb25kaXRpb24pIHJldHVybjtcblxuXHRcdGNvbnN0IGNvbmRpdGlvbkVmZmVjdCA9IGNvbmRpdGlvbi5hY3RpdmVFZmZlY3QgPz8gRW5oYW5jZWRDb25kaXRpb25zLmdldEFjdGl2ZUVmZmVjdChjb25kaXRpb24pWzBdO1xuXG5cdFx0aWYgKCFjb25kaXRpb25FZmZlY3QpIHJldHVybjtcblxuXHRcdGlmICghaGFzUHJvcGVydHkoY29uZGl0aW9uRWZmZWN0LCBgZmxhZ3MuY29uZGl0aW9uLWxhYi10cmlnZ2xlci5jb25kaXRpb25JZGApKSB7XG5cdFx0XHRzZXRQcm9wZXJ0eShcblx0XHRcdFx0Y29uZGl0aW9uRWZmZWN0LFxuXHRcdFx0XHRgZmxhZ3MuY29uZGl0aW9uLWxhYi10cmlnZ2xlci5jb25kaXRpb25JZGAsXG5cdFx0XHRcdGNvbmRpdGlvbklkXG5cdFx0XHQpO1xuXHRcdH1cblxuXHRcdC8vIEJ1aWxkIGEgZmFrZSBlZmZlY3Qgb2JqZWN0IGZvciB0aGUgQWN0aXZlRWZmZWN0Q29uZmlnIHNoZWV0XG5cdFx0Ly8gQHRvZG8gIzU0NCBtYWtlIENvbmRpdGlvbnMgYW4gQWN0aXZlRWZmZWN0IGV4dGVuc2lvbj9cblx0XHRkZWxldGUgY29uZGl0aW9uRWZmZWN0LmlkO1xuXHRcdGNvbnN0IGVmZmVjdCA9IG5ldyBBY3RpdmVFZmZlY3QoY29uZGl0aW9uRWZmZWN0KTtcblx0XHRlZmZlY3QudGVzdFVzZXJQZXJtaXNzaW9uID0gKC4uLmFyZ3MpID0+IHtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH07XG5cblx0XHRuZXcgRW5oYW5jZWRFZmZlY3RDb25maWcoZWZmZWN0KS5yZW5kZXIodHJ1ZSk7XG5cdH1cblxuXHQvKipcblx0ICogUmVmZXJlbmNlIExpbmsgY2hhbmdlIGhhbmRsZXJcblx0ICogQHBhcmFtIHsqfSBldmVudFxuXHQgKi9cblx0YXN5bmMgX29uQ2hhbmdlUmVmZXJlbmNlSWQoZXZlbnQpIHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0Y29uc3QgaW5wdXQgPSBldmVudC5jdXJyZW50VGFyZ2V0ID8/IGV2ZW50LnRhcmdldDtcblxuXHRcdC8vIFVwZGF0ZSB0aGUgZW5yaWNoZWQgbGlua1xuXHRcdGNvbnN0ICRsaW5rRGl2ID0gJChpbnB1dC5wYXJlbnRFbGVtZW50Lm5leHRFbGVtZW50U2libGluZyk7XG5cdFx0Y29uc3QgJGxpbmsgPSAkbGlua0Rpdi5maXJzdCgpO1xuXHRcdGNvbnN0IG5ld0xpbmsgPSBhd2FpdCBUZXh0RWRpdG9yLmVucmljaEhUTUwoaW5wdXQudmFsdWUsIHsgYXN5bmM6IHRydWUsIGRvY3VtZW50czogdHJ1ZSB9KTtcblxuXHRcdGlmICghJGxpbmsubGVuZ3RoKSB7XG5cdFx0XHQkbGlua0Rpdi5hcHBlbmQobmV3TGluayk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdCRsaW5rRGl2Lmh0bWwobmV3TGluayk7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIE9wZW4gVHJpZ2dsZXIgZm9ybSBldmVudCBoYW5kbGVyXG5cdCAqIEBwYXJhbSB7Kn0gZXZlbnRcblx0ICovXG5cdF9vbk9wZW5UcmlnZ2xlckZvcm0oZXZlbnQpIHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGNvbnN0IGFuY2hvciA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG5cdFx0Y29uc3Qgc2VsZWN0ID0gYW5jaG9yLnBhcmVudEVsZW1lbnQubmV4dEVsZW1lbnRTaWJsaW5nO1xuXHRcdGNvbnN0IGlkID0gc2VsZWN0LnZhbHVlO1xuXHRcdGNvbnN0IGNvbmRpdGlvbkxhYlJvdyA9IHNlbGVjdC5uYW1lLm1hdGNoKC9cXGQrJC8pWzBdO1xuXG5cdFx0Y29uc3QgZGF0YSA9IHtcblx0XHRcdGlkLFxuXHRcdFx0Y29uZGl0aW9uTGFiUm93XG5cdFx0fTtcblxuXHRcdG5ldyBUcmlnZ2xlckZvcm0oZGF0YSwgeyBwYXJlbnQ6IHRoaXMgfSkucmVuZGVyKHRydWUpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEFkZCBSb3cgZXZlbnQgaGFuZGxlclxuXHQgKiBAcGFyYW0geyp9IGV2ZW50XG5cdCAqL1xuXHRfb25BZGRSb3coZXZlbnQpIHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0Y29uc3QgZXhpc3RpbmdOZXdDb25kaXRpb25zID0gdGhpcy5tYXAuZmlsdGVyKChtKSA9PiBtLm5hbWUubWF0Y2goL15OZXcgQ29uZGl0aW9uIFxcZCskLykpO1xuXHRcdGNvbnN0IG5ld0NvbmRpdGlvbkluZGV4ID0gZXhpc3RpbmdOZXdDb25kaXRpb25zLmxlbmd0aFxuXHRcdFx0PyBNYXRoLm1heCguLi5leGlzdGluZ05ld0NvbmRpdGlvbnMubWFwKChtKSA9PiBOdW1iZXIobS5uYW1lLm1hdGNoKC9cXGQrJC9nKVswXSkpKSArIDFcblx0XHRcdDogMTtcblx0XHRjb25zdCBuZXdDb25kaXRpb25OYW1lID0gYE5ldyBDb25kaXRpb24gJHtuZXdDb25kaXRpb25JbmRleH1gO1xuXHRcdGNvbnN0IGZkTWFwID0gdGhpcy51cGRhdGVkTWFwO1xuXG5cdFx0aWYgKHRoaXMubWFwVHlwZSA9PT0gXCJkZWZhdWx0XCIpIHtcblx0XHRcdGNvbnN0IGRlZmF1bHRNYXAgPSBFbmhhbmNlZENvbmRpdGlvbnMuZ2V0RGVmYXVsdE1hcCh0aGlzLnN5c3RlbSk7XG5cdFx0XHR0aGlzLm1hcCA9IG1lcmdlT2JqZWN0KGZkTWFwLCBkZWZhdWx0TWFwKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5tYXAgPSBmZE1hcDtcblx0XHR9XG5cblx0XHRjb25zdCBuZXdNYXAgPSBkdXBsaWNhdGUodGhpcy5tYXApO1xuXHRcdGNvbnN0IGV4aXNpdGluZ0lkcyA9IHRoaXMubWFwLmZpbHRlcigoYykgPT4gYy5pZCkubWFwKChjKSA9PiBjLmlkKTtcblx0XHRjb25zdCBvdXRwdXRDaGF0U2V0dGluZyA9IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImNvbmRpdGlvbnNPdXRwdXRUb0NoYXRcIik7XG5cblx0XHRuZXdNYXAucHVzaCh7XG5cdFx0XHRpZDogU2lkZWtpY2suY3JlYXRlSWQoZXhpc2l0aW5nSWRzKSxcblx0XHRcdG5hbWU6IG5ld0NvbmRpdGlvbk5hbWUsXG5cdFx0XHRpY29uOiBcImljb25zL3N2Zy9kMjAtYmxhY2suc3ZnXCIsXG5cdFx0XHRyZWZlcmVuY2VJZDogXCJcIixcblx0XHRcdHRyaWdnZXI6IFwiXCIsXG5cdFx0XHRvcHRpb25zOiB7XG5cdFx0XHRcdG91dHB1dENoYXQ6IG91dHB1dENoYXRTZXR0aW5nXG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRjb25zdCBuZXdNYXBUeXBlID0gdGhpcy5tYXBUeXBlID09PSBcImRlZmF1bHRcIiA/IFwiY3VzdG9tXCIgOiB0aGlzLm1hcFR5cGU7XG5cblx0XHR0aGlzLm1hcFR5cGUgPSBuZXdNYXBUeXBlO1xuXHRcdHRoaXMubWFwID0gbmV3TWFwO1xuXHRcdHRoaXMuZGF0YSA9IG51bGw7XG5cblx0XHR0aGlzLnJlbmRlcigpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEhhbmRsZXIgZm9yIHJlbW92ZSByb3cgZXZlbnRcblx0ICogQHBhcmFtIHsqfSBldmVudFxuXHQgKi9cblx0X29uUmVtb3ZlUm93KGV2ZW50KSB7XG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuXHRcdHRoaXMubWFwID0gdGhpcy51cGRhdGVkTWFwO1xuXG5cdFx0Y29uc3Qgcm93ID0gZXZlbnQuY3VycmVudFRhcmdldC5uYW1lLm1hdGNoKC9cXGQrJC8pWzBdO1xuXG5cdFx0Y29uc3QgZGlhbG9nID0gbmV3IERpYWxvZyh7XG5cdFx0XHR0aXRsZTogZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuTGFiLkNvbmZpcm1EZWxldGVUaXRsZVwiKSxcblx0XHRcdGNvbnRlbnQ6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkxhYi5Db25maXJtRGVsZXRlQ29udGVudFwiKSxcblx0XHRcdGJ1dHRvbnM6IHtcblx0XHRcdFx0eWVzOiB7XG5cdFx0XHRcdFx0aWNvbjogJzxpIGNsYXNzPVwiZmEgZmEtY2hlY2tcIj48L2k+Jyxcblx0XHRcdFx0XHRsYWJlbDogZ2FtZS5pMThuLmxvY2FsaXplKFwiWWVzXCIpLFxuXHRcdFx0XHRcdGNhbGxiYWNrOiBhc3luYyAoZXZlbnQpID0+IHtcblx0XHRcdFx0XHRcdGNvbnN0IG5ld01hcCA9IGR1cGxpY2F0ZSh0aGlzLm1hcCk7XG5cdFx0XHRcdFx0XHRuZXdNYXAuc3BsaWNlKHJvdywgMSk7XG5cdFx0XHRcdFx0XHR0aGlzLm1hcCA9IG5ld01hcDtcblx0XHRcdFx0XHRcdHRoaXMucmVuZGVyKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9LFxuXHRcdFx0XHRubzoge1xuXHRcdFx0XHRcdGljb246ICc8aSBjbGFzcz1cImZhIGZhLXRpbWVzXCI+PC9pPicsXG5cdFx0XHRcdFx0bGFiZWw6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIk5vXCIpLFxuXHRcdFx0XHRcdGNhbGxiYWNrOiAoZXZlbnQpID0+IHt9XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWZhdWx0OiBcIm5vXCJcblx0XHR9KTtcblxuXHRcdGRpYWxvZy5yZW5kZXIodHJ1ZSk7XG5cdH1cblxuXHQvKipcblx0ICogSGFuZGxlIGEgY2hhbmdlIHNvcnQgb3JkZXIgY2xpY2tcblx0ICogQHBhcmFtIHsqfSBldmVudFxuXHQgKi9cblx0X29uQ2hhbmdlU29ydE9yZGVyKGV2ZW50KSB7XG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuXHRcdGNvbnN0IGFuY2hvciA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG5cdFx0Y29uc3QgbGlSb3cgPSBhbmNob3I/LmNsb3Nlc3QoXCJsaVwiKTtcblx0XHRjb25zdCByb3dOdW1iZXIgPSBwYXJzZUludChsaVJvdz8uZGF0YXNldC5tYXBwaW5nUm93KTtcblx0XHRjb25zdCB0eXBlID0gYW5jaG9yPy5jbGFzc05hbWU7XG5cdFx0Y29uc3QgbmV3TWFwID0gZGVlcENsb25lKHRoaXMubWFwKTtcblx0XHRjb25zdCBtYXBwaW5nUm93ID0gbmV3TWFwPy5zcGxpY2Uocm93TnVtYmVyLCAxKSA/PyBbXTtcblx0XHRsZXQgbmV3SW5kZXggPSAtMTtcblxuXHRcdHN3aXRjaCAodHlwZSkge1xuXHRcdFx0Y2FzZSBcIm1vdmUtdXBcIjpcblx0XHRcdFx0bmV3SW5kZXggPSByb3dOdW1iZXIgLSAxO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSBcIm1vdmUtZG93blwiOlxuXHRcdFx0XHRuZXdJbmRleCA9IHJvd051bWJlciArIDE7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cblx0XHRpZiAobmV3SW5kZXggPD0gLTEpIHJldHVybjtcblxuXHRcdG5ld01hcC5zcGxpY2UobmV3SW5kZXgsIDAsIC4uLm1hcHBpbmdSb3cpO1xuXHRcdHRoaXMubWFwID0gbmV3TWFwO1xuXHRcdHRoaXMucmVuZGVyKCk7XG5cdH1cblxuXHQvKipcblx0ICogU29ydCBidXR0b24gaGFuZGxlclxuXHQgKiBAcGFyYW0geyp9IGV2ZW50XG5cdCAqL1xuXHRfb25DbGlja1NvcnRCdXR0b24oZXZlbnQpIHtcblx0XHRjb25zdCBzb3J0RGlyZWN0aW9uID0gdGhpcy5zb3J0RGlyZWN0aW9uO1xuXHRcdC8vIGNvbnN0IG5ld1NvcnREaXJlY3Rpb24gPSBzb3J0RGlyZWN0aW9uID09PSBcImFzY1wiID8gXCJkZXNjXCIgOiBcImFzY1wiO1xuXHRcdHN3aXRjaCAoc29ydERpcmVjdGlvbikge1xuXHRcdFx0Y2FzZSBcIlwiOlxuXHRcdFx0XHR0aGlzLnNvcnREaXJlY3Rpb24gPSBcImFzY1wiO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSBcImFzY1wiOlxuXHRcdFx0XHR0aGlzLnNvcnREaXJlY3Rpb24gPSBcImRlc2NcIjtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgXCJkZXNjXCI6XG5cdFx0XHRcdHRoaXMuc29ydERpcmVjdGlvbiA9IFwiXCI7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5yZW5kZXIoKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBTb3J0cyB0aGUgZ2l2ZW4gbWFwIGJ5IHRoZSBuYW1lIHByb3BlcnR5XG5cdCAqIEBwYXJhbSB7QXJyYXl9IG1hcFxuXHQgKiBAcGFyYW0geyp9IGRpcmVjdGlvblxuXHQgKiBAcmV0dXJucyB7QXJyYXl9XG5cdCAqL1xuXHRfc29ydE1hcEJ5TmFtZShtYXAsIGRpcmVjdGlvbikge1xuXHRcdHJldHVybiBtYXAuc29ydCgoYSwgYikgPT4ge1xuXHRcdFx0aWYgKGRpcmVjdGlvbiA9PT0gXCJkZXNjXCIpIHJldHVybiBiLm5hbWUubG9jYWxlQ29tcGFyZShhLm5hbWUpO1xuXHRcdFx0cmV0dXJuIGEubmFtZS5sb2NhbGVDb21wYXJlKGIubmFtZSk7XG5cdFx0fSk7XG5cdH1cblxuXHQvKipcblx0ICpcblx0ICogQHBhcmFtIHsqfSBldmVudFxuXHQgKi9cblx0X29uUmVzdG9yZURlZmF1bHRzKGV2ZW50KSB7XG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRjb25zdCBjb250ZW50ID0gZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuTGFiLlJlc3RvcmVEZWZhdWx0c0NvbnRlbnRcIik7XG5cblx0XHRjb25zdCBjb25maXJtYXRpb25EaWFsb2cgPSBuZXcgRGlhbG9nKHtcblx0XHRcdHRpdGxlOiBnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5MYWIuUmVzdG9yZURlZmF1bHRzVGl0bGVcIiksXG5cdFx0XHRjb250ZW50LFxuXHRcdFx0YnV0dG9uczoge1xuXHRcdFx0XHR5ZXM6IHtcblx0XHRcdFx0XHRpY29uOiAnPGkgY2xhc3M9XCJmYXMgZmEtY2hlY2tcIj48L2k+Jyxcblx0XHRcdFx0XHRsYWJlbDogZ2FtZS5pMThuLmxvY2FsaXplKFwiWWVzXCIpLFxuXHRcdFx0XHRcdGNhbGxiYWNrOiAoJGh0bWwpID0+IHtcblx0XHRcdFx0XHRcdGNvbnN0IGNoZWNrYm94ID0gJGh0bWxbMF0ucXVlcnlTZWxlY3RvcihcImlucHV0W25hbWU9J2NsZWFyLWNhY2hlJ11cIik7XG5cdFx0XHRcdFx0XHRjb25zdCBjbGVhckNhY2hlID0gY2hlY2tib3g/LmNoZWNrZWQ7XG5cdFx0XHRcdFx0XHR0aGlzLl9yZXN0b3JlRGVmYXVsdHMoeyBjbGVhckNhY2hlIH0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblx0XHRcdFx0bm86IHtcblx0XHRcdFx0XHRpY29uOiAnPGkgY2xhc3M9XCJmYXMgZmEtdGltZXNcIj48L2k+Jyxcblx0XHRcdFx0XHRsYWJlbDogZ2FtZS5pMThuLmxvY2FsaXplKFwiTm9cIiksXG5cdFx0XHRcdFx0Y2FsbGJhY2s6ICgpID0+IHt9XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWZhdWx0OiBcIm5vXCIsXG5cdFx0XHRjbG9zZTogKCkgPT4ge31cblx0XHR9KTtcblxuXHRcdGNvbmZpcm1hdGlvbkRpYWxvZy5yZW5kZXIodHJ1ZSk7XG5cdH1cblxuXHQvKipcblx0ICogUmVzZXQgZm9ybSBoYW5kbGVyXG5cdCAqIEBwYXJhbSB7Kn0gZXZlbnRcblx0ICovXG5cdF9vblJlc2V0Rm9ybShldmVudCkge1xuXHRcdGNvbnN0IGRpYWxvZyA9IG5ldyBEaWFsb2coe1xuXHRcdFx0dGl0bGU6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkxhYi5SZXNldEZvcm1UaXRsZVwiKSxcblx0XHRcdGNvbnRlbnQ6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkxhYi5SZXNldEZvcm1Db250ZW50XCIpLFxuXHRcdFx0YnV0dG9uczoge1xuXHRcdFx0XHR5ZXM6IHtcblx0XHRcdFx0XHRpY29uOiAnPGkgY2xhc3M9XCJmYSBmYS1jaGVja1wiPjwvaT4nLFxuXHRcdFx0XHRcdGxhYmVsOiBnYW1lLmkxOG4ubG9jYWxpemUoXCJZZXNcIiksXG5cdFx0XHRcdFx0Y2FsbGJhY2s6IChldmVudCkgPT4ge1xuXHRcdFx0XHRcdFx0dGhpcy5tYXAgPSB0aGlzLmluaXRpYWxNYXA7XG5cdFx0XHRcdFx0XHR0aGlzLnJlbmRlcigpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblx0XHRcdFx0bm86IHtcblx0XHRcdFx0XHRpY29uOiAnPGkgY2xhc3M9XCJmYSBmYS10aW1lc1wiPjwvaT4nLFxuXHRcdFx0XHRcdGxhYmVsOiBnYW1lLmkxOG4ubG9jYWxpemUoXCJOb1wiKSxcblx0XHRcdFx0XHRjYWxsYmFjazogKGV2ZW50KSA9PiB7fVxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXHRcdFx0ZGVmYXVsdDogXCJub1wiXG5cdFx0fSk7XG5cdFx0ZGlhbG9nLnJlbmRlcih0cnVlKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBTYXZlIGFuZCBDbG9zZSBoYW5kbGVyXG5cdCAqIEBwYXJhbSB7Kn0gZXZlbnRcblx0ICovXG5cdF9vblNhdmVDbG9zZShldmVudCkge1xuXHRcdHRoaXMuc3VibWl0KClcblx0XHRcdC50aGVuKChyZXN1bHQpID0+IHtcblx0XHRcdFx0dGhpcy5jbG9zZSgpO1xuXHRcdFx0fSlcblx0XHRcdC5jYXRjaCgocmVqZWN0KSA9PiB7XG5cdFx0XHRcdHVpLm5vdGlmaWNhdGlvbnMud2FybihnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5MYWIuU2F2ZUZhaWxlZFwiKSk7XG5cdFx0XHR9KTtcblx0fVxuXG5cdGFzeW5jIF9vbkRyb3AoZXZlbnQpIHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGNvbnN0IGV2ZW50RGF0YSA9IFRleHRFZGl0b3IuZ2V0RHJhZ0V2ZW50RGF0YShldmVudCk7XG5cdFx0Y29uc3QgbGluayA9IGF3YWl0IFRleHRFZGl0b3IuZ2V0Q29udGVudExpbmsoZXZlbnREYXRhKTtcblx0XHRjb25zdCB0YXJnZXRJbnB1dCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG5cdFx0aWYgKGxpbmspIHtcblx0XHRcdHRhcmdldElucHV0LnZhbHVlID0gbGluaztcblx0XHRcdHJldHVybiB0YXJnZXRJbnB1dC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChcImNoYW5nZVwiKSk7XG5cdFx0fVxuXHRcdHJldHVybiB1aS5ub3RpZmljYXRpb25zLmVycm9yKGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkNvbmRpdGlvbkxhYi5CYWRSZWZlcmVuY2VcIikpO1xuXHR9XG5cblx0LyoqXG5cdCAqIE1hY3JvIENvbmZpZyBidXR0b24gY2xpY2sgaGFuZGxlclxuXHQgKiBAcGFyYW0geyp9IGV2ZW50XG5cdCAqL1xuXHRfb25DbGlja01hY3JvQ29uZmlnKGV2ZW50KSB7XG5cdFx0Y29uc3Qgcm93TGkgPSBldmVudC50YXJnZXQuY2xvc2VzdChcImxpXCIpO1xuXHRcdGNvbnN0IGNvbmRpdGlvbklkID0gcm93TGkgPyByb3dMaS5kYXRhc2V0LmNvbmRpdGlvbklkIDogbnVsbDtcblxuXHRcdGlmICghY29uZGl0aW9uSWQpIHJldHVybjtcblxuXHRcdGNvbnN0IGNvbmRpdGlvbiA9IHRoaXMubWFwLmZpbmQoKGMpID0+IGMuaWQgPT09IGNvbmRpdGlvbklkKTtcblxuXHRcdG5ldyBFbmhhbmNlZENvbmRpdGlvbk1hY3JvQ29uZmlnKGNvbmRpdGlvbikucmVuZGVyKHRydWUpO1xuXHR9XG5cblx0LyoqXG5cdCAqIFRyaWdnZXIgQ29uZmlnIGJ1dHRvbiBjbGljayBoYW5kbGVyXG5cdCAqIEBwYXJhbSB7Kn0gZXZlbnRcblx0ICovXG5cdF9vbkNsaWNrVHJpZ2dlckNvbmZpZyhldmVudCkge1xuXHRcdGNvbnN0IHJvd0xpID0gZXZlbnQudGFyZ2V0LmNsb3Nlc3QoXCJsaVwiKTtcblx0XHRjb25zdCBjb25kaXRpb25JZCA9IHJvd0xpID8gcm93TGkuZGF0YXNldC5jb25kaXRpb25JZCA6IG51bGw7XG5cblx0XHRpZiAoIWNvbmRpdGlvbklkKSByZXR1cm47XG5cblx0XHRjb25zdCBjb25kaXRpb24gPSB0aGlzLm1hcC5maW5kKChjKSA9PiBjLmlkID09PSBjb25kaXRpb25JZCk7XG5cblx0XHRuZXcgRW5oYW5jZWRDb25kaXRpb25UcmlnZ2VyQ29uZmlnKGNvbmRpdGlvbikucmVuZGVyKHRydWUpO1xuXHR9XG5cblx0LyoqXG5cdCAqIE9wdGlvbiBDb25maWcgYnV0dG9uIGNsaWNrIGhhbmRsZXJcblx0ICogQHBhcmFtIHsqfSBldmVudFxuXHQgKi9cblx0X29uQ2xpY2tPcHRpb25Db25maWcoZXZlbnQpIHtcblx0XHRjb25zdCByb3dMaSA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KFwibGlcIik7XG5cdFx0Y29uc3QgY29uZGl0aW9uSWQgPSByb3dMaSA/IHJvd0xpLmRhdGFzZXQuY29uZGl0aW9uSWQgOiBudWxsO1xuXG5cdFx0aWYgKCFjb25kaXRpb25JZCkgcmV0dXJuO1xuXG5cdFx0Y29uc3QgY29uZGl0aW9uID0gdGhpcy5tYXAuZmluZCgoYykgPT4gYy5pZCA9PT0gY29uZGl0aW9uSWQpO1xuXG5cdFx0Y29uc3QgY29uZmlnID0gbmV3IEVuaGFuY2VkQ29uZGl0aW9uT3B0aW9uQ29uZmlnKGNvbmRpdGlvbik7XG5cdFx0Y29uZmlnLnBhcmVudCA9IHRoaXM7XG5cdFx0Y29uZmlnLnJlbmRlcih0cnVlKTtcblx0fVxuXG5cdC8vIENoZWNrcyB0aGUgdXBkYXRlZE1hcCBwcm9wZXJ0eSBhZ2FpbnN0IHRoZSBpbml0aWFsIG1hcFxuXHRfaGFzTWFwQ2hhbmdlZCgpIHtcblx0XHRsZXQgaGFzQ2hhbmdlZCA9IGZhbHNlO1xuXHRcdGNvbnN0IGNvbmRpdGlvbk1hcCA9IHRoaXMudXBkYXRlZE1hcDtcblxuXHRcdGNvbmRpdGlvbk1hcC5mb3JFYWNoKChlbnRyeSwgaW5kZXgsIGFycmF5KSA9PiB7XG5cdFx0XHQvLyBDaGVjayBpZiB0aGUgcm93IGV4aXN0cyBpbiB0aGUgc2F2ZWQgbWFwXG5cdFx0XHRjb25zdCBleGlzdGluZ0VudHJ5ID0gdGhpcy5pbml0aWFsTWFwLmZpbmQoKGUpID0+IGUuaWQgPT09IGVudHJ5LmlkKSA/PyBudWxsO1xuXHRcdFx0ZW50cnkuaXNOZXcgPSAhZXhpc3RpbmdFbnRyeTtcblxuXHRcdFx0Ly8gSWYgcm93IGlzIG5ldyBvciBpZiBpdHMgaW5kZXggaGFzIGNoYW5nZWQsIGl0IGlzIGFsc28gY2hhbmdlZFxuXHRcdFx0ZW50cnkuaXNDaGFuZ2VkID0gZW50cnkuaXNOZXcgfHwgaW5kZXggIT09IHRoaXMuaW5pdGlhbE1hcD8uaW5kZXhPZihleGlzdGluZ0VudHJ5KTtcblxuXHRcdFx0Ly8gSWYgaXQncyBub3QgY2hhbmdlZCwgY2hlY2sgaWYgdGhlIGNvbXBhcmVkIGVudHJpZXMgYXJlIGVxdWFsXG5cdFx0XHRpZiAoIWVudHJ5LmlzQ2hhbmdlZCkge1xuXHRcdFx0XHRlbnRyeS5pc0NoYW5nZWQgPSAhZm91bmRyeS51dGlscy5pc0VtcHR5KGZvdW5kcnkudXRpbHMuZGlmZk9iamVjdChleGlzdGluZ0VudHJ5LCBlbnRyeSkpO1xuXHRcdFx0XHRoYXNDaGFuZ2VkIHx8PSBlbnRyeS5pc0NoYW5nZWQ7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gaGFzQ2hhbmdlZDtcblx0fVxuXG5cdF9oYXNFbnRyeUNoYW5nZWQoZW50cnksIGV4aXN0aW5nRW50cnksIGluZGV4KSB7XG5cdFx0Y29uc3QgcHJvcHNUb0NoZWNrID0gW1xuXHRcdFx0XCJuYW1lXCIsXG5cdFx0XHRcImljb25cIixcblx0XHRcdFwib3B0aW9uc1wiLFxuXHRcdFx0XCJyZWZlcmVuY2VJZFwiLFxuXHRcdFx0XCJhcHBseVRyaWdnZXJcIixcblx0XHRcdFwicmVtb3ZlVHJpZ2dlclwiLFxuXHRcdFx0XCJhY3RpdmVFZmZlY3RcIlxuXHRcdF07XG5cblx0XHRjb25zdCBoYXNDaGFuZ2VkID1cblx0XHRcdGVudHJ5LmlzTmV3XG5cdFx0XHR8fCBpbmRleCAhPT0gdGhpcy5pbml0aWFsTWFwPy5pbmRleE9mKGV4aXN0aW5nRW50cnkpXG5cdFx0XHQvLyB8fCAhZm91bmRyeS51dGlscy5pc09iamVjdEVtcHR5KGZvdW5kcnkudXRpbHMuZGlmZk9iamVjdChleGlzdGluZ0VudHJ5LCBlbnRyeSkpO1xuXHRcdFx0fHwgcHJvcHNUb0NoZWNrLnNvbWUoKHApID0+IHRoaXMuX2hhc1Byb3BlcnR5Q2hhbmdlZChwLCBleGlzdGluZ0VudHJ5LCBlbnRyeSkpO1xuXG5cdFx0cmV0dXJuIGhhc0NoYW5nZWQ7XG5cdH1cblxuXHQvKipcblx0ICogQ2hlY2tzIGEgZ2l2ZW4gcHJvcGVydHlOYW1lIG9uIGFuIG9yaWdpbmFsIGFuZCBjb21wYXJpc29uIG9iamVjdCB0byBzZWUgaWYgaXQgaGFzIGNoYW5nZWRcblx0ICogQHBhcmFtIHsqfSBwcm9wZXJ0eU5hbWVcblx0ICogQHBhcmFtIHsqfSBvcmlnaW5hbFxuXHQgKiBAcGFyYW0geyp9IGNvbXBhcmlzb25cblx0ICogQHJldHVybnMge2Jvb2xlYW59XG5cdCAqL1xuXHRfaGFzUHJvcGVydHlDaGFuZ2VkKHByb3BlcnR5TmFtZSwgb3JpZ2luYWwsIGNvbXBhcmlzb24pIHtcblx0XHRsZXQgcHJvcGVydHlDaGFuZ2VkID0gZmFsc2U7XG5cblx0XHRpZiAoXG5cdFx0XHQob3JpZ2luYWxbcHJvcGVydHlOYW1lXSAmJiAhY29tcGFyaXNvbltwcm9wZXJ0eU5hbWVdKVxuXHRcdFx0fHwgKG9yaWdpbmFsICYmIEpTT04uc3RyaW5naWZ5KG9yaWdpbmFsW3Byb3BlcnR5TmFtZV0pICE9PSBKU09OLnN0cmluZ2lmeShjb21wYXJpc29uW1twcm9wZXJ0eU5hbWVdXSkpXG5cdFx0KSB7XG5cdFx0XHRwcm9wZXJ0eUNoYW5nZWQgPSB0cnVlO1xuXHRcdH1cblxuXHRcdHJldHVybiBwcm9wZXJ0eUNoYW5nZWQ7XG5cdH1cblxuXHRfb25FZGl0SW1hZ2UoZXZlbnQpIHtcblx0XHRjb25zdCBjdXJyZW50ID0gZXZlbnQudGFyZ2V0LmdldEF0dHJpYnV0ZShcInNyY1wiKTtcblx0XHRjb25zdCBmcCA9IG5ldyBGaWxlUGlja2VyKHtcblx0XHRcdGN1cnJlbnQsXG5cdFx0XHR0eXBlOiBcImltYWdlXCIsXG5cdFx0XHRjYWxsYmFjazogKHBhdGgpID0+IHtcblx0XHRcdFx0ZXZlbnQuY3VycmVudFRhcmdldC5zcmMgPSBwYXRoO1xuXHRcdFx0XHRjb25zdCBpY29uUGF0aCA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KFwiLmNvbnRlbnQxXCIpLnF1ZXJ5U2VsZWN0b3IoXCIuaWNvbi1wYXRoXCIpO1xuXHRcdFx0XHRpY29uUGF0aC52YWx1ZSA9IHBhdGg7XG5cdFx0XHRcdHRoaXMubWFwID0gdGhpcy51cGRhdGVkTWFwO1xuXHRcdFx0XHRpZiAodGhpcy5faGFzTWFwQ2hhbmdlZCgpKSB0aGlzLnJlbmRlcigpO1xuXHRcdFx0fSxcblx0XHRcdHRvcDogdGhpcy5wb3NpdGlvbi50b3AgKyA0MCxcblx0XHRcdGxlZnQ6IHRoaXMucG9zaXRpb24ubGVmdCArIDEwXG5cdFx0fSk7XG5cdFx0cmV0dXJuIGZwLmJyb3dzZSgpO1xuXHR9XG59XG4iLCJpbXBvcnQgeyBDb25kaXRpb25MYWIgfSBmcm9tIFwiLi9lbmhhbmNlZC1jb25kaXRpb25zL2NvbmRpdGlvbi1sYWIuanNcIjtcbmltcG9ydCB7IEVuaGFuY2VkQ29uZGl0aW9ucyB9IGZyb20gXCIuL2VuaGFuY2VkLWNvbmRpdGlvbnMvZW5oYW5jZWQtY29uZGl0aW9ucy5qc1wiO1xuaW1wb3J0IHsgVHJpZ2dsZXJGb3JtIH0gZnJvbSBcIi4vdHJpZ2dsZXIvdHJpZ2dsZXItZm9ybS5qc1wiO1xuXG4vKipcbiAqXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlclNldHRpbmdzKCkge1xuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXHQvKiAgICAgICAgICAgIFNldHRpbmcgQ29uZmlndXJhdGlvbiAgICAgICAgICAgICAqL1xuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdGdhbWUuc2V0dGluZ3MucmVnaXN0ZXIoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiY29uZGl0aW9uc091dHB1dFRvQ2hhdFwiLCB7XG5cdFx0bmFtZTogXCJDTFQuU0VUVElOR1MuRW5oYW5jZWRDb25kaXRpb25zLk91dHB1dENoYXROXCIsXG5cdFx0aGludDogXCJDTFQuU0VUVElOR1MuRW5oYW5jZWRDb25kaXRpb25zLk91dHB1dENoYXRIXCIsXG5cdFx0c2NvcGU6IFwid29ybGRcIixcblx0XHR0eXBlOiBCb29sZWFuLFxuXHRcdGNvbmZpZzogdHJ1ZSxcblx0XHRkZWZhdWx0OiBmYWxzZSxcblx0XHRvbkNoYW5nZTogKHMpID0+IHtcblx0XHRcdGlmIChzID09PSB0cnVlKSB7XG5cdFx0XHRcdERpYWxvZy5jb25maXJtKHtcblx0XHRcdFx0XHR0aXRsZTogZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuT3V0cHV0Q2hhdENvbmZpcm0uVGl0bGVcIiksXG5cdFx0XHRcdFx0Y29udGVudDogZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuT3V0cHV0Q2hhdENvbmZpcm0uQ29udGVudFwiKSxcblx0XHRcdFx0XHR5ZXM6ICgpID0+IHtcblx0XHRcdFx0XHRcdGNvbnN0IG5ld01hcCA9IGRlZXBDbG9uZShnYW1lLmNsdC5jb25kaXRpb25zKTtcblx0XHRcdFx0XHRcdGlmICghbmV3TWFwLmxlbmd0aCkgcmV0dXJuO1xuXHRcdFx0XHRcdFx0bmV3TWFwLmZvckVhY2goKGMpID0+IChjLm9wdGlvbnMub3V0cHV0Q2hhdCA9IHRydWUpKTtcblx0XHRcdFx0XHRcdGdhbWUuc2V0dGluZ3Muc2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImFjdGl2ZUNvbmRpdGlvbk1hcFwiLCBuZXdNYXApO1xuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0bm86ICgpID0+IHt9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fSk7XG5cblx0Z2FtZS5zZXR0aW5ncy5yZWdpc3RlcihcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJjb25kaXRpb25zT3V0cHV0RHVyaW5nQ29tYmF0XCIsIHtcblx0XHRuYW1lOiBcIkNMVC5TRVRUSU5HUy5FbmhhbmNlZENvbmRpdGlvbnMuT3V0cHV0Q29tYmF0TlwiLFxuXHRcdGhpbnQ6IFwiQ0xULlNFVFRJTkdTLkVuaGFuY2VkQ29uZGl0aW9ucy5PdXRwdXRDb21iYXRIXCIsXG5cdFx0c2NvcGU6IFwid29ybGRcIixcblx0XHR0eXBlOiBCb29sZWFuLFxuXHRcdGNvbmZpZzogdHJ1ZSxcblx0XHRkZWZhdWx0OiBmYWxzZVxuXHR9KTtcblxuXHRnYW1lLnNldHRpbmdzLnJlZ2lzdGVyKFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcInJlbW92ZURlZmF1bHRFZmZlY3RzXCIsIHtcblx0XHRuYW1lOiBcIkNMVC5TRVRUSU5HUy5FbmhhbmNlZENvbmRpdGlvbnMuUmVtb3ZlRGVmYXVsdEVmZmVjdHNOXCIsXG5cdFx0aGludDogXCJDTFQuU0VUVElOR1MuRW5oYW5jZWRDb25kaXRpb25zLlJlbW92ZURlZmF1bHRFZmZlY3RzSFwiLFxuXHRcdHNjb3BlOiBcIndvcmxkXCIsXG5cdFx0dHlwZTogQm9vbGVhbixcblx0XHRjb25maWc6IHRydWUsXG5cdFx0ZGVmYXVsdDogZmFsc2UsXG5cdFx0b25DaGFuZ2U6ICgpID0+IHtcblx0XHRcdEVuaGFuY2VkQ29uZGl0aW9ucy5fdXBkYXRlU3RhdHVzRWZmZWN0cygpO1xuXHRcdH1cblx0fSk7XG5cblx0Z2FtZS5zZXR0aW5ncy5yZWdpc3RlcihcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJlbmhhbmNlZENvbmRpdGlvbnNNaWdyYXRpb25WZXJzaW9uXCIsIHtcblx0XHRuYW1lOiBcIkNMVC5TRVRUSU5HUy5FbmhhbmNlZENvbmRpdGlvbnMuTWlncmF0aW9uVmVyc2lvbk5cIixcblx0XHRoaW50OiBcIkNMVC5TRVRUSU5HUy5FbmhhbmNlZENvbmRpdGlvbnMuTWlncmF0aW9uVmVyc2lvbkhcIixcblx0XHRzY29wZTogXCJ3b3JsZFwiLFxuXHRcdHR5cGU6IFN0cmluZyxcblx0XHRjb25maWc6IGZhbHNlLFxuXHRcdGFwaU9ubHk6IHRydWUsXG5cdFx0ZGVmYXVsdDogXCJcIlxuXHR9KTtcblxuXHRnYW1lLnNldHRpbmdzLnJlZ2lzdGVyKFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcInNob3dTb3J0RGlyZWN0aW9uRGlhbG9nXCIsIHtcblx0XHRuYW1lOiBcIkNMVC5TRVRUSU5HUy5FbmhhbmNlZENvbmRpdGlvbnMuU2hvd1NvcnREaXJlY3Rpb25EaWFsb2dOXCIsXG5cdFx0aGludDogXCJDTFQuU0VUVElOR1MuRW5oYW5jZWRDb25kaXRpb25zLlNob3dTb3J0RGlyZWN0aW9uRGlhbG9nSFwiLFxuXHRcdHNjb3BlOiBcIndvcmxkXCIsXG5cdFx0dHlwZTogQm9vbGVhbixcblx0XHRjb25maWc6IHRydWUsXG5cdFx0ZGVmYXVsdDogdHJ1ZVxuXHR9KTtcblxuXHRnYW1lLnNldHRpbmdzLnJlZ2lzdGVyKFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImRlZmF1bHRTcGVjaWFsU3RhdHVzRWZmZWN0c1wiLCB7XG5cdFx0bmFtZTogXCJDTFQuU0VUVElOR1MuRW5oYW5jZWRDb25kaXRpb25zLkRlZmF1bHRTcGVjaWFsU3RhdHVzRWZmZWN0c05cIixcblx0XHRoaW50OiBcIkNMVC5TRVRUSU5HUy5FbmhhbmNlZENvbmRpdGlvbnMuRGVmYXVsdFNwZWNpYWxTdGF0dXNFZmZlY3RzSFwiLFxuXHRcdHNjb3BlOiBcIndvcmxkXCIsXG5cdFx0dHlwZTogT2JqZWN0LFxuXHRcdGRlZmF1bHQ6IHt9LFxuXHRcdGNvbmZpZzogZmFsc2Vcblx0fSk7XG5cblx0Z2FtZS5zZXR0aW5ncy5yZWdpc3RlcihcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJzcGVjaWFsU3RhdHVzRWZmZWN0TWFwcGluZ1wiLCB7XG5cdFx0bmFtZTogXCJDTFQuU0VUVElOR1MuRW5oYW5jZWRDb25kaXRpb25zLlNwZWNpYWxTdGF0dXNFZmZlY3RNYXBwaW5nTlwiLFxuXHRcdGhpbnQ6IFwiQ0xULlNFVFRJTkdTLkVuaGFuY2VkQ29uZGl0aW9ucy5TcGVjaWFsU3RhdHVzRWZmZWN0TWFwcGluZ0hcIixcblx0XHRzY29wZTogXCJ3b3JsZFwiLFxuXHRcdHR5cGU6IE9iamVjdCxcblx0XHRkZWZhdWx0OiB7fSxcblx0XHRjb25maWc6IGZhbHNlXG5cdH0pO1xuXG5cdC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cdC8qICAgICAgICAgICAgICBFbmhhbmNlZENvbmRpdGlvbnMgICAgICAgICAgICAgICovXG5cdC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Z2FtZS5zZXR0aW5ncy5yZWdpc3Rlck1lbnUoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiZW5jaGFudGVkQ29uZGl0aW9uc01lbnVcIiwge1xuXHRcdG5hbWU6IFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuTGFiLlRpdGxlXCIsXG5cdFx0bGFiZWw6IFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuTGFiLlRpdGxlXCIsXG5cdFx0aGludDogXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5MYWIuSGludFwiLFxuXHRcdGljb246IFwiZmFzIGZhLWZsYXNrXCIsXG5cdFx0dHlwZTogQ29uZGl0aW9uTGFiLFxuXHRcdHJlc3RyaWN0ZWQ6IHRydWVcblx0fSk7XG5cblx0Z2FtZS5zZXR0aW5ncy5yZWdpc3RlcihcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJjb3JlU3RhdHVzSWNvbnNcIiwge1xuXHRcdG5hbWU6IFwiQ0xULlNFVFRJTkdTLkVuaGFuY2VkQ29uZGl0aW9ucy5Db3JlSWNvbnNOXCIsXG5cdFx0aGludDogXCJDTFQuU0VUVElOR1MuRW5oYW5jZWRDb25kaXRpb25zLkNvcmVJY29uc0hcIixcblx0XHRzY29wZTogXCJ3b3JsZFwiLFxuXHRcdHR5cGU6IE9iamVjdCxcblx0XHRkZWZhdWx0OiBbXSxcblx0XHRjb25maWc6IGZhbHNlXG5cdH0pO1xuXG5cdGdhbWUuc2V0dGluZ3MucmVnaXN0ZXIoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiY29yZVN0YXR1c0VmZmVjdHNcIiwge1xuXHRcdG5hbWU6IFwiQ0xULlNFVFRJTkdTLkVuaGFuY2VkQ29uZGl0aW9ucy5Db3JlRWZmZWN0c05cIixcblx0XHRoaW50OiBcIkNMVC5TRVRUSU5HUy5FbmhhbmNlZENvbmRpdGlvbnMuQ29yZUVmZmVjdHNIXCIsXG5cdFx0c2NvcGU6IFwid29ybGRcIixcblx0XHR0eXBlOiBPYmplY3QsXG5cdFx0ZGVmYXVsdDogW10sXG5cdFx0Y29uZmlnOiBmYWxzZVxuXHR9KTtcblxuXHRnYW1lLnNldHRpbmdzLnJlZ2lzdGVyKFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImNvbmRpdGlvbk1hcFR5cGVcIiwge1xuXHRcdG5hbWU6IFwiQ0xULlNFVFRJTkdTLkVuaGFuY2VkQ29uZGl0aW9ucy5NYXBUeXBlTlwiLFxuXHRcdGhpbnQ6IFwiQ0xULlNFVFRJTkdTLkVuaGFuY2VkQ29uZGl0aW9ucy5NYXBUeXBlSFwiLFxuXHRcdHNjb3BlOiBcIndvcmxkXCIsXG5cdFx0dHlwZTogU3RyaW5nLFxuXHRcdGRlZmF1bHQ6IFwiXCIsXG5cdFx0Y2hvaWNlczoge1xuXHRcdFx0ZGVmYXVsdDogZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULlNFVFRJTkdTLkVuaGFuY2VkQ29uZGl0aW9ucy5NYXBUeXBlLkNob2ljZXMuZGVmYXVsdFwiKSxcblx0XHRcdGN1c3RvbTogZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULlNFVFRJTkdTLkVuaGFuY2VkQ29uZGl0aW9ucy5NYXBUeXBlLkNob2ljZXMuY3VzdG9tXCIpLFxuXHRcdFx0b3RoZXI6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5TRVRUSU5HUy5FbmhhbmNlZENvbmRpdGlvbnMuTWFwVHlwZS5DaG9pY2VzLm90aGVyXCIpXG5cdFx0fSxcblx0XHRjb25maWc6IGZhbHNlLFxuXHRcdGFwaU9ubHk6IHRydWVcblx0fSk7XG5cblx0Z2FtZS5zZXR0aW5ncy5yZWdpc3RlcihcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJkZWZhdWx0Q29uZGl0aW9uTWFwc1wiLCB7XG5cdFx0bmFtZTogXCJDTFQuU0VUVElOR1MuRW5oYW5jZWRDb25kaXRpb25zLkRlZmF1bHRNYXBzTlwiLFxuXHRcdGhpbnQ6IFwiQ0xULlNFVFRJTkdTLkVuaGFuY2VkQ29uZGl0aW9ucy5EZWZhdWx0TWFwc0hcIixcblx0XHRzY29wZTogXCJ3b3JsZFwiLFxuXHRcdHR5cGU6IE9iamVjdCxcblx0XHRkZWZhdWx0OiB7fVxuXHR9KTtcblxuXHRnYW1lLnNldHRpbmdzLnJlZ2lzdGVyKFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImFjdGl2ZUNvbmRpdGlvbk1hcFwiLCB7XG5cdFx0bmFtZTogXCJDTFQuU0VUVElOR1MuRW5oYW5jZWRDb25kaXRpb25zLkFjdGl2ZUNvbmRpdGlvbk1hcE5cIixcblx0XHRoaW50OiBcIkNMVC5TRVRUSU5HUy5FbmhhbmNlZENvbmRpdGlvbnMuQWN0aXZlQ29uZGl0aW9uTWFwSFwiLFxuXHRcdHNjb3BlOiBcIndvcmxkXCIsXG5cdFx0dHlwZTogT2JqZWN0LFxuXHRcdGRlZmF1bHQ6IFtdLFxuXHRcdG9uQ2hhbmdlOiBhc3luYyAoY29uZGl0aW9uTWFwKSA9PiB7XG5cdFx0XHRhd2FpdCBFbmhhbmNlZENvbmRpdGlvbnMuX3VwZGF0ZVN0YXR1c0VmZmVjdHMoY29uZGl0aW9uTWFwKTtcblxuXHRcdFx0Ly8gU2F2ZSB0aGUgYWN0aXZlIGNvbmRpdGlvbiBtYXAgdG8gYSBjb252ZW5pZW5jZSBwcm9wZXJ0eVxuXHRcdFx0aWYgKGdhbWUuY2x0KSB7XG5cdFx0XHRcdGdhbWUuY2x0LmNvbmRpdGlvbnMgPSBjb25kaXRpb25NYXA7XG5cdFx0XHR9XG5cdFx0fVxuXHR9KTtcblxuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXHQvKiAgICAgICAgICAgICAgICAgVG9rZW5VdGlsaXR5ICAgICAgICAgICAgICAgICAqL1xuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdGlmICghZ2FtZS5tb2R1bGVzLmdldChcInN0YXR1cy1oYWxvXCIpPy5hY3RpdmUgJiYgIWdhbWUubW9kdWxlcy5nZXQoXCJpbGxhbmRyaWwtdG9rZW4taHVkLXNjYWxlXCIpPy5hY3RpdmUpIHtcblx0XHRnYW1lLnNldHRpbmdzLnJlZ2lzdGVyKFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImVmZmVjdFNpemVcIiwge1xuXHRcdFx0bmFtZTogXCJDTFQuU0VUVElOR1MuVG9rZW5VdGlsaXR5LlRva2VuRWZmZWN0U2l6ZU5cIixcblx0XHRcdGhpbnQ6IFwiQ0xULlNFVFRJTkdTLlRva2VuVXRpbGl0eS5Ub2tlbkVmZmVjdFNpemVIXCIsXG5cdFx0XHRkZWZhdWx0OiBcInNtYWxsXCIsXG5cdFx0XHRzY29wZTogXCJjbGllbnRcIixcblx0XHRcdHR5cGU6IFN0cmluZyxcblx0XHRcdGNob2ljZXM6IHtcblx0XHRcdFx0c21hbGw6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5TRVRUSU5HUy5Ub2tlblV0aWxpdHkuVG9rZW5FZmZlY3RTaXplLmNob2ljZXMuc21hbGxcIiksXG5cdFx0XHRcdG1lZGl1bTogZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULlNFVFRJTkdTLlRva2VuVXRpbGl0eS5Ub2tlbkVmZmVjdFNpemUuY2hvaWNlcy5tZWRpdW1cIiksXG5cdFx0XHRcdGxhcmdlOiBnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuU0VUVElOR1MuVG9rZW5VdGlsaXR5LlRva2VuRWZmZWN0U2l6ZS5jaG9pY2VzLmxhcmdlXCIpLFxuXHRcdFx0XHR4TGFyZ2U6IGdhbWUuaTE4bi5sb2NhbGl6ZShcIkNMVC5TRVRUSU5HUy5Ub2tlblV0aWxpdHkuVG9rZW5FZmZlY3RTaXplLmNob2ljZXMueExhcmdlXCIpXG5cdFx0XHR9LFxuXHRcdFx0Y29uZmlnOiB0cnVlLFxuXHRcdFx0b25DaGFuZ2U6ICgpID0+IHtcblx0XHRcdFx0Y2FudmFzLmRyYXcoKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fVxuXG5cdC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cdC8qICAgICAgICAgICAgICAgICAgICBUcmlnZ2xlciAgICAgICAgICAgICAgICAgICovXG5cdC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Z2FtZS5zZXR0aW5ncy5yZWdpc3Rlck1lbnUoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwidHJpZ2dsZXJNZW51XCIsIHtcblx0XHRuYW1lOiBcIkNMVC5TRVRUSU5HUy5UcmlnZ2xlci5UcmlnZ2Vyc05cIixcblx0XHRsYWJlbDogXCJDTFQuU0VUVElOR1MuVHJpZ2dsZXIuVHJpZ2dlcnNOXCIsXG5cdFx0aGludDogXCJDTFQuU0VUVElOR1MuVHJpZ2dsZXIuVHJpZ2dlcnNIXCIsXG5cdFx0aWNvbjogXCJmYXMgZmEtZXhjbGFtYXRpb25cIixcblx0XHR0eXBlOiBUcmlnZ2xlckZvcm0sXG5cdFx0cmVzdHJpY3RlZDogdHJ1ZVxuXHR9KTtcblxuXHRnYW1lLnNldHRpbmdzLnJlZ2lzdGVyKFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcInN0b3JlZFRyaWdnZXJzXCIsIHtcblx0XHRuYW1lOiBcIkNMVC5TRVRUSU5HUy5UcmlnZ2xlci5UcmlnZ2Vyc05cIixcblx0XHRoaW50OiBcIkNMVC5TRVRUSU5HUy5UcmlnZ2xlci5UcmlnZ2Vyc0hcIixcblx0XHRzY29wZTogXCJ3b3JsZFwiLFxuXHRcdHR5cGU6IE9iamVjdCxcblx0XHRkZWZhdWx0OiBbXSxcblx0XHRvbkNoYW5nZTogKCkgPT4ge31cblx0fSk7XG5cblx0Z2FtZS5zZXR0aW5ncy5yZWdpc3RlcihcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXJcIiwgXCJoYXNSdW5NaWdyYXRpb25cIiwge1xuXHRcdHNjb3BlOiBcIndvcmxkXCIsXG5cdFx0dHlwZTogQm9vbGVhbixcblx0XHRkZWZhdWx0OiBmYWxzZVxuXHR9KTtcblxuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdGdhbWUuc2V0dGluZ3MucmVnaXN0ZXIoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwic2NlbmVDb250cm9sc1wiLCB7XG5cdFx0bmFtZTogXCJDTFQuU0VUVElOR1MuU2NlbmVDb250cm9scy5OYW1lXCIsXG5cdFx0aGludDogXCJDTFQuU0VUVElOR1MuU2NlbmVDb250cm9scy5IaW50XCIsXG5cdFx0c2NvcGU6IFwid29ybGRcIixcblx0XHR0eXBlOiBCb29sZWFuLFxuXHRcdGRlZmF1bHQ6IGZhbHNlLFxuXHRcdGNvbmZpZzogdHJ1ZSxcblx0XHRyZXF1aXJlc1JlbG9hZDogdHJ1ZVxuXHR9KTtcbn1cbiIsImltcG9ydCB7IEVuaGFuY2VkQ29uZGl0aW9ucyB9IGZyb20gXCIuLi9lbmhhbmNlZC1jb25kaXRpb25zL2VuaGFuY2VkLWNvbmRpdGlvbnMuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWlncmF0aW9uSGVscGVyIHtcblx0c3RhdGljIGFzeW5jIF9vblJlYWR5KCkge1xuXHRcdGNvbnN0IGN1YlZlcnNpb24gPSBnYW1lLm1vZHVsZXMuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiKT8udmVyc2lvbjtcblxuXHRcdGF3YWl0IEVuaGFuY2VkQ29uZGl0aW9ucy5fbWlncmF0aW9uSGVscGVyKGN1YlZlcnNpb24pO1xuXHR9XG5cblx0c3RhdGljIF9pbXBvcnRGcm9tQ1VCKCkge1xuXHRcdGlmIChcblx0XHRcdGdhbWUudXNlci5pc0dNXG5cdFx0XHQmJiAhZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiaGFzUnVuTWlncmF0aW9uXCIpXG5cdFx0XHQmJiAoZ2FtZS5tb2R1bGVzLmhhcyhcImNvbWJhdC11dGlsaXR5LWJlbHRcIilcblx0XHRcdFx0fHwgZ2FtZS5zZXR0aW5ncy5zdG9yYWdlLmdldChcIndvcmxkXCIpLmZpbmQoKHNldHRpbmcpID0+IHNldHRpbmcua2V5LmluY2x1ZGVzKFwiY29tYmF0LXV0aWxpdHktYmVsdFwiKSkpXG5cdFx0KSB7XG5cdFx0XHREaWFsb2cuY29uZmlybSh7XG5cdFx0XHRcdHRpdGxlOiBnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuTUlHUkFUSU9OLlRpdGxlXCIpLFxuXHRcdFx0XHRjb250ZW50OiBnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuTUlHUkFUSU9OLkNvbnRlbnRcIiksXG5cdFx0XHRcdHllczogKCkgPT4ge1xuXHRcdFx0XHRcdGNvbnN0IENVQl9TRVRUSU5HUyA9IHt9O1xuXHRcdFx0XHRcdGdhbWUuc2V0dGluZ3Muc3RvcmFnZVxuXHRcdFx0XHRcdFx0LmdldChcIndvcmxkXCIpXG5cdFx0XHRcdFx0XHQuZmlsdGVyKChzZXR0aW5nKSA9PiBzZXR0aW5nLmtleS5pbmNsdWRlcyhcImNvbWJhdC11dGlsaXR5LWJlbHRcIikpXG5cdFx0XHRcdFx0XHQuZm9yRWFjaCgoc2V0dGluZykgPT4ge1xuXHRcdFx0XHRcdFx0XHRDVUJfU0VUVElOR1Nbc2V0dGluZy5rZXkucmVwbGFjZShcImNvbWJhdC11dGlsaXR5LWJlbHQuXCIsIFwiXCIpXSA9IHNldHRpbmcudmFsdWU7XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRpZiAoQ1VCX1NFVFRJTkdTLmFjdGl2ZUNvbmRpdGlvbk1hcCkge1xuXHRcdFx0XHRcdFx0Q1VCX1NFVFRJTkdTLmFjdGl2ZUNvbmRpdGlvbk1hcC5mb3JFYWNoKChzdGF0dXMpID0+IHtcblx0XHRcdFx0XHRcdFx0aWYgKHN0YXR1cy5pY29uLmluY2x1ZGVzKFwiL2NvbWJhdC11dGlsaXR5LWJlbHQvXCIpKSB7XG5cdFx0XHRcdFx0XHRcdFx0c3RhdHVzLmljb24gPSBzdGF0dXMuaWNvbi5yZXBsYWNlKFwiL2NvbWJhdC11dGlsaXR5LWJlbHQvXCIsIFwiL2NvbmRpdGlvbi1sYWItdHJpZ2dsZXIvXCIpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKENVQl9TRVRUSU5HUy5kZWZhdWx0Q29uZGl0aW9uTWFwcykge1xuXHRcdFx0XHRcdFx0T2JqZWN0LmtleXMoQ1VCX1NFVFRJTkdTLmRlZmF1bHRDb25kaXRpb25NYXBzKS5mb3JFYWNoKChtYXApID0+IHtcblx0XHRcdFx0XHRcdFx0Q1VCX1NFVFRJTkdTLmRlZmF1bHRDb25kaXRpb25NYXBzW21hcF0uZm9yRWFjaCgoc3RhdHVzKSA9PiB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKHN0YXR1cy5pY29uLmluY2x1ZGVzKFwiL2NvbWJhdC11dGlsaXR5LWJlbHQvXCIpKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRzdGF0dXMuaWNvbiA9IHN0YXR1cy5pY29uLnJlcGxhY2UoXCIvY29tYmF0LXV0aWxpdHktYmVsdC9cIiwgXCIvY29uZGl0aW9uLWxhYi10cmlnZ2xlci9cIik7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdGlmIChzdGF0dXMucmVmZXJlbmNlSWQuaW5jbHVkZXMoXCJjb21iYXQtdXRpbGl0eS1iZWx0XCIpKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRzdGF0dXMucmVmZXJlbmNlSWQgPSBzdGF0dXMucmVmZXJlbmNlSWQucmVwbGFjZShcblx0XHRcdFx0XHRcdFx0XHRcdFx0XCJjb21iYXQtdXRpbGl0eS1iZWx0XCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiXG5cdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Y29uc3QgbGlzdE9mU2V0dGluZ3MgPSBbXG5cdFx0XHRcdFx0XHRcImFjdGl2ZUNvbmRpdGlvbk1hcFwiLFxuXHRcdFx0XHRcdFx0XCJjb25kaXRpb25NYXBUeXBlXCIsXG5cdFx0XHRcdFx0XHRcImNvbmRpdGlvbnNPdXRwdXREdXJpbmdDb21iYXRcIixcblx0XHRcdFx0XHRcdFwiY29uZGl0aW9uc091dHB1dFRvQ2hhdFwiLFxuXHRcdFx0XHRcdFx0XCJjb3JlU3RhdHVzRWZmZWN0c1wiLFxuXHRcdFx0XHRcdFx0XCJjb3JlU3RhdHVzSWNvbnNcIixcblx0XHRcdFx0XHRcdFwiZGVmYXVsdENvbmRpdGlvbk1hcHNcIixcblx0XHRcdFx0XHRcdFwiZGVmYXVsdFNwZWNpYWxTdGF0dXNFZmZlY3RzXCIsXG5cdFx0XHRcdFx0XHRcImVmZmVjdFNpemVcIixcblx0XHRcdFx0XHRcdFwicmVtb3ZlRGVmYXVsdEVmZmVjdHNcIixcblx0XHRcdFx0XHRcdFwic2hvd1NvcnREaXJlY3Rpb25EaWFsb2dcIixcblx0XHRcdFx0XHRcdFwic3BlY2lhbFN0YXR1c0VmZmVjdE1hcHBpbmdcIixcblx0XHRcdFx0XHRcdFwic3RvcmVkVHJpZ2dlcnNcIlxuXHRcdFx0XHRcdF07XG5cdFx0XHRcdFx0bGlzdE9mU2V0dGluZ3MuZm9yRWFjaCgoc2V0dGluZykgPT4ge1xuXHRcdFx0XHRcdFx0aWYgKENVQl9TRVRUSU5HU1tzZXR0aW5nXSkgZ2FtZS5zZXR0aW5ncy5zZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIHNldHRpbmcsIENVQl9TRVRUSU5HU1tzZXR0aW5nXSk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0Z2FtZS5zZXR0aW5ncy5zZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwiaGFzUnVuTWlncmF0aW9uXCIsIHRydWUpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRubzogKCkgPT4ge1xuXHRcdFx0XHRcdGdhbWUuc2V0dGluZ3Muc2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImhhc1J1bk1pZ3JhdGlvblwiLCB0cnVlKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0fVxuXHR9XG59XG4iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgIEltcG9ydHMgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5pbXBvcnQgeyBCdXRsZXIgYXMgQlVUTEVSIH0gZnJvbSBcIi4vYnV0bGVyLmpzXCI7XG5pbXBvcnQgeyBsaWJXcmFwcGVyIH0gZnJvbSBcIi4vbGliV3JhcHBlci5qc1wiO1xuaW1wb3J0IHsgcmVnaXN0ZXJTZXR0aW5ncyB9IGZyb20gXCIuL3NldHRpbmdzLmpzXCI7XG5pbXBvcnQgeyBTaWRla2ljayB9IGZyb20gXCIuL3NpZGVraWNrLmpzXCI7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLSBHYWRnZXRzIC0tLS0tLS0tLS0tLS0tLS0tICovXG5cbmltcG9ydCB7IEVuaGFuY2VkQ29uZGl0aW9ucyB9IGZyb20gXCIuL2VuaGFuY2VkLWNvbmRpdGlvbnMvZW5oYW5jZWQtY29uZGl0aW9ucy5qc1wiO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tIFV0aWxzIC0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5pbXBvcnQgeyBDb25kaXRpb25MYWIgfSBmcm9tIFwiLi9lbmhhbmNlZC1jb25kaXRpb25zL2NvbmRpdGlvbi1sYWIuanNcIjtcbmltcG9ydCB7IFRyaWdnbGVyRm9ybSB9IGZyb20gXCIuL3RyaWdnbGVyL3RyaWdnbGVyLWZvcm0uanNcIjtcbmltcG9ydCB7IFRyaWdnbGVyIH0gZnJvbSBcIi4vdHJpZ2dsZXIvdHJpZ2dsZXIuanNcIjtcbmltcG9ydCBNaWdyYXRpb25IZWxwZXIgZnJvbSBcIi4vdXRpbHMvbWlncmF0aW9uLmpzXCI7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgU3lzdGVtICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLSBJbml0IC0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuSG9va3Mub24oXCJpbml0XCIsICgpID0+IHtcblx0Ly8gQXNzaWduIHRoZSBuYW1lc3BhY2UgT2JqZWN0IGlmIGl0IGFscmVhZHkgZXhpc3RzIG9yIGluc3RhbnRpYXRlIGl0IGFzIGFuIG9iamVjdCBpZiBub3Rcblx0Z2FtZS5jbHQgPSBuZXcgQlVUTEVSKCk7XG5cdHVpLmNsdCA9IHt9O1xuXG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShnYW1lLCBcImN1YlwiLCB7XG5cdFx0Z2V0KCkge1xuXHRcdFx0Y29uc29sZS53YXJuKFwiQ0xUIHwgZ2FtZS5jdWIgaXMgZGVwcmVjYXRlZCBzaW5jZSB2MS41LiBQbGVhc2UgdXNlIGdhbWUuY2x0IGluc3RlYWQuXCIpO1xuXHRcdFx0cmV0dXJuIHRoaXMuY2x0O1xuXHRcdH1cblx0fSk7XG5cblx0Ly8gRXhlY3V0ZSBob3VzZWtlZXBpbmdcblx0U2lkZWtpY2subG9hZFRlbXBsYXRlcygpO1xuXG5cdC8vIEtleWJpbmRzXG5cdGdhbWUua2V5YmluZGluZ3MucmVnaXN0ZXIoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwib3BlbkNvbmRpdGlvbkxhYlwiLCB7XG5cdFx0bmFtZTogXCJDTFQuS0VZQklORElOR1Mub3BlbkNvbmRpdGlvbkxhYi5uYW1lXCIsXG5cdFx0b25Eb3duOiAoKSA9PiB7XG5cdFx0XHRuZXcgQ29uZGl0aW9uTGFiKCkucmVuZGVyKHRydWUpO1xuXHRcdH0sXG5cdFx0cmVzdHJpY3RlZDogdHJ1ZSxcblx0XHRwcmVjZWRlbmNlOiBDT05TVC5LRVlCSU5ESU5HX1BSRUNFREVOQ0UuTk9STUFMXG5cdH0pO1xuXHRnYW1lLmtleWJpbmRpbmdzLnJlZ2lzdGVyKFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcIm9wZW5UcmlnZ2xlclwiLCB7XG5cdFx0bmFtZTogXCJDTFQuS0VZQklORElOR1Mub3BlblRyaWdnbGVyLm5hbWVcIixcblx0XHRvbkRvd246ICgpID0+IHtcblx0XHRcdG5ldyBUcmlnZ2xlckZvcm0oKS5yZW5kZXIodHJ1ZSk7XG5cdFx0fSxcblx0XHRyZXN0cmljdGVkOiB0cnVlLFxuXHRcdHByZWNlZGVuY2U6IENPTlNULktFWUJJTkRJTkdfUFJFQ0VERU5DRS5OT1JNQUxcblx0fSk7XG59KTtcblxuSG9va3Mub24oXCJpMThuSW5pdFwiLCAoKSA9PiB7XG5cdHJlZ2lzdGVyU2V0dGluZ3MoKTtcblxuXHQvLyBXcmFwcGVyc1xuXHRpZiAoIWdhbWUubW9kdWxlcy5nZXQoXCJzdGF0dXMtaGFsb1wiKT8uYWN0aXZlICYmICFnYW1lLm1vZHVsZXMuZ2V0KFwiaWxsYW5kcmlsLXRva2VuLWh1ZC1zY2FsZVwiKT8uYWN0aXZlKSB7XG5cdFx0Y29uc3QgZWZmZWN0U2l6ZXMgPSB7XG5cdFx0XHR4TGFyZ2U6IHtcblx0XHRcdFx0bXVsdGlwbGllcjogNSxcblx0XHRcdFx0ZGl2aXNvcjogMlxuXHRcdFx0fSxcblx0XHRcdGxhcmdlOiB7XG5cdFx0XHRcdG11bHRpcGxpZXI6IDMuMyxcblx0XHRcdFx0ZGl2aXNvcjogM1xuXHRcdFx0fSxcblx0XHRcdG1lZGl1bToge1xuXHRcdFx0XHRtdWx0aXBsaWVyOiAyLjUsXG5cdFx0XHRcdGRpdmlzb3I6IDRcblx0XHRcdH0sXG5cdFx0XHRzbWFsbDoge1xuXHRcdFx0XHRtdWx0aXBsaWVyOiAyLFxuXHRcdFx0XHRkaXZpc29yOiA1XG5cdFx0XHR9XG5cdFx0fTtcblx0XHRsaWJXcmFwcGVyLnJlZ2lzdGVyKFxuXHRcdFx0XCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsXG5cdFx0XHRcIlRva2VuLnByb3RvdHlwZS5fcmVmcmVzaEVmZmVjdHNcIixcblx0XHRcdGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0Y29uc3QgZWZmZWN0U2l6ZSA9IGdhbWUuc2V0dGluZ3MuZ2V0KFwiY29uZGl0aW9uLWxhYi10cmlnZ2xlclwiLCBcImVmZmVjdFNpemVcIik7XG5cdFx0XHRcdC8vIFVzZSB0aGUgZGVmYXVsdCB2YWx1ZXMgaWYgbm8gc2V0dGluZyBmb3VuZFxuXHRcdFx0XHRjb25zdCBtdWx0aXBsaWVyID0gZWZmZWN0U2l6ZVxuXHRcdFx0XHRcdD8gZWZmZWN0U2l6ZXNbZWZmZWN0U2l6ZV0/Lm11bHRpcGxpZXJcblx0XHRcdFx0XHQ6IDI7XG5cdFx0XHRcdGNvbnN0IGRpdmlzb3IgPSBlZmZlY3RTaXplID8gZWZmZWN0U2l6ZXNbZWZmZWN0U2l6ZV0/LmRpdmlzb3IgOiA1O1xuXG5cdFx0XHRcdGxldCBpID0gMDtcblx0XHRcdFx0Y29uc3QgdyA9IE1hdGgucm91bmQoY2FudmFzLmRpbWVuc2lvbnMuc2l6ZSAvIDIgLyA1KSAqIG11bHRpcGxpZXI7XG5cdFx0XHRcdGNvbnN0IHJvd3MgPSBNYXRoLmZsb29yKHRoaXMuZG9jdW1lbnQuaGVpZ2h0ICogZGl2aXNvcik7XG5cblx0XHRcdFx0Ly8gVW5jaGFuZ2VkXG5cdFx0XHRcdGNvbnN0IGJnID0gdGhpcy5lZmZlY3RzLmJnLmNsZWFyKCkuYmVnaW5GaWxsKDB4MDAwMDAwLCAwLjQpXG5cdFx0XHRcdFx0LmxpbmVTdHlsZSgxLjAsIDB4MDAwMDAwKTtcblx0XHRcdFx0Zm9yIChjb25zdCBlZmZlY3Qgb2YgdGhpcy5lZmZlY3RzLmNoaWxkcmVuKSB7XG5cdFx0XHRcdFx0aWYgKGVmZmVjdCA9PT0gYmcpIGNvbnRpbnVlO1xuXG5cdFx0XHRcdFx0aWYgKGVmZmVjdCA9PT0gdGhpcy5lZmZlY3RzLm92ZXJsYXkpIHtcblx0XHRcdFx0XHRcdGNvbnN0IHNpemUgPSBNYXRoLm1pbih0aGlzLncgKiAwLjYsIHRoaXMuaCAqIDAuNik7XG5cdFx0XHRcdFx0XHRlZmZlY3Qud2lkdGggPSBlZmZlY3QuaGVpZ2h0ID0gc2l6ZTtcblx0XHRcdFx0XHRcdGVmZmVjdC5wb3NpdGlvbi5zZXQoKHRoaXMudyAtIHNpemUpIC8gMiwgKHRoaXMuaCAtIHNpemUpIC8gMik7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGVmZmVjdC53aWR0aCA9IGVmZmVjdC5oZWlnaHQgPSB3O1xuXHRcdFx0XHRcdFx0ZWZmZWN0LnggPSBNYXRoLmZsb29yKGkgLyByb3dzKSAqIHc7XG5cdFx0XHRcdFx0XHRlZmZlY3QueSA9IChpICUgcm93cykgKiB3O1xuXHRcdFx0XHRcdFx0YmcuZHJhd1JvdW5kZWRSZWN0KGVmZmVjdC54ICsgMSwgZWZmZWN0LnkgKyAxLCB3IC0gMiwgdyAtIDIsIDIpO1xuXHRcdFx0XHRcdFx0aSsrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdFwiT1ZFUlJJREVcIlxuXHRcdCk7XG5cdH1cbn0pO1xuXG5Ib29rcy5vbihcInJlYWR5XCIsICgpID0+IHtcblx0TWlncmF0aW9uSGVscGVyLl9pbXBvcnRGcm9tQ1VCKCk7XG5cdEVuaGFuY2VkQ29uZGl0aW9ucy5fb25SZWFkeSgpO1xuXHRNaWdyYXRpb25IZWxwZXIuX29uUmVhZHkoKTtcbn0pO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgIEVudGl0eSAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0gQWN0b3IgLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbkhvb2tzLm9uKFwidXBkYXRlQWN0b3JcIiwgKGFjdG9yLCB1cGRhdGVEYXRhLCBvcHRpb25zLCB1c2VySWQpID0+IHtcblx0Ly8gV29ya2Fyb3VuZCBmb3IgYWN0b3IgYXJyYXkgcmV0dXJuZWQgaW4gaG9vayBmb3Igbm9uIHRyaWdnZXJpbmcgY2xpZW50c1xuXHRpZiAoYWN0b3IgaW5zdGFuY2VvZiBDb2xsZWN0aW9uKSB7XG5cdFx0YWN0b3IgPSBhY3Rvci5jb250ZW50cy5maW5kKChhKSA9PiBhLmlkID09PSB1cGRhdGVEYXRhLmlkKTtcblx0fVxuXHRUcmlnZ2xlci5fb25VcGRhdGVBY3RvcihhY3RvciwgdXBkYXRlRGF0YSwgb3B0aW9ucywgdXNlcklkKTtcbn0pO1xuXG5Ib29rcy5vbihcImNyZWF0ZUFjdGl2ZUVmZmVjdFwiLCAoZWZmZWN0LCBvcHRpb25zLCB1c2VySWQpID0+IHtcblx0RW5oYW5jZWRDb25kaXRpb25zLl9vbkNyZWF0ZUFjdGl2ZUVmZmVjdChlZmZlY3QsIG9wdGlvbnMsIHVzZXJJZCk7XG59KTtcblxuSG9va3Mub24oXCJkZWxldGVBY3RpdmVFZmZlY3RcIiwgKGVmZmVjdCwgb3B0aW9ucywgdXNlcklkKSA9PiB7XG5cdEVuaGFuY2VkQ29uZGl0aW9ucy5fb25EZWxldGVBY3RpdmVFZmZlY3QoZWZmZWN0LCBvcHRpb25zLCB1c2VySWQpO1xufSk7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0gVG9rZW4gLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbkhvb2tzLm9uKFwicHJlVXBkYXRlVG9rZW5cIiwgKHRva2VuRG9jdW1lbnQsIHVwZGF0ZURhdGEsIG9wdGlvbnMsIHVzZXJJZCkgPT4ge1xuXHRFbmhhbmNlZENvbmRpdGlvbnMuX29uUHJlVXBkYXRlVG9rZW4odG9rZW5Eb2N1bWVudCwgdXBkYXRlRGF0YSwgb3B0aW9ucywgdXNlcklkKTtcbn0pO1xuXG5Ib29rcy5vbihcInVwZGF0ZVRva2VuXCIsICh0b2tlbkRvY3VtZW50LCB1cGRhdGVEYXRhLCBvcHRpb25zLCB1c2VySWQpID0+IHtcblx0RW5oYW5jZWRDb25kaXRpb25zLl9vblVwZGF0ZVRva2VuKHRva2VuRG9jdW1lbnQsIHVwZGF0ZURhdGEsIG9wdGlvbnMsIHVzZXJJZCk7XG5cdFRyaWdnbGVyLl9vblVwZGF0ZVRva2VuKHRva2VuRG9jdW1lbnQsIHVwZGF0ZURhdGEsIG9wdGlvbnMsIHVzZXJJZCk7XG59KTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tIENvbWJhdCAtLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuSG9va3Mub24oXCJ1cGRhdGVDb21iYXRcIiwgKGNvbWJhdCwgdXBkYXRlRGF0YSwgb3B0aW9ucywgdXNlcklkKSA9PiB7XG5cdEVuaGFuY2VkQ29uZGl0aW9ucy5fb25VcGRhdGVDb21iYXQoY29tYmF0LCB1cGRhdGVEYXRhLCBvcHRpb25zLCB1c2VySWQpO1xufSk7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgUmVuZGVyICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLyogLS0tLS0tLS0tLS0tLS0gU2NlbmUgQ29udHJvbHMgLS0tLS0tLS0tLS0tLS0gKi9cbkhvb2tzLm9uKFwiZ2V0U2NlbmVDb250cm9sQnV0dG9uc1wiLCBmdW5jdGlvbiAoaHVkQnV0dG9ucykge1xuXHRpZiAoZ2FtZS51c2VyLmlzR00gJiYgZ2FtZS5zZXR0aW5ncy5nZXQoXCJjb25kaXRpb24tbGFiLXRyaWdnbGVyXCIsIFwic2NlbmVDb250cm9sc1wiKSkge1xuXHRcdGxldCBodWQgPSBodWRCdXR0b25zLmZpbmQoKHZhbCkgPT4gdmFsLm5hbWUgPT09IFwidG9rZW5cIik7XG5cdFx0aWYgKGh1ZCkge1xuXHRcdFx0aHVkLnRvb2xzLnB1c2goe1xuXHRcdFx0XHRuYW1lOiBcIkNMVC5FTkhBTkNFRF9DT05ESVRJT05TLkxhYi5UaXRsZVwiLFxuXHRcdFx0XHR0aXRsZTogXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5MYWIuVGl0bGVcIixcblx0XHRcdFx0aWNvbjogXCJmYXMgZmEtZmxhc2tcIixcblx0XHRcdFx0YnV0dG9uOiB0cnVlLFxuXHRcdFx0XHRvbkNsaWNrOiBhc3luYyAoKSA9PiBuZXcgQ29uZGl0aW9uTGFiKCkucmVuZGVyKHRydWUpXG5cdFx0XHR9KTtcblx0XHRcdGh1ZC50b29scy5wdXNoKHtcblx0XHRcdFx0bmFtZTogXCJUcmlnZ2xlclwiLFxuXHRcdFx0XHR0aXRsZTogXCJUcmlnZ2xlclwiLFxuXHRcdFx0XHRpY29uOiBcImZhcyBmYS1leGNsYW1hdGlvblwiLFxuXHRcdFx0XHRidXR0b246IHRydWUsXG5cdFx0XHRcdG9uQ2xpY2s6IGFzeW5jICgpID0+IG5ldyBUcmlnZ2xlckZvcm0oKS5yZW5kZXIodHJ1ZSlcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxufSk7XG5cbkhvb2tzLm9uKFwicmVuZGVyU2NlbmVDb250cm9sc1wiLCAoYXBwLCBodG1sLCBkYXRhKSA9PiB7XG5cdGNvbnN0IHRyaWdnbGVyQnV0dG9uID0gaHRtbC5maW5kKCdsaVtkYXRhLXRvb2w9XCJUcmlnZ2xlclwiXScpWzBdO1xuXHRpZiAodHJpZ2dsZXJCdXR0b24pIHtcblx0XHR0cmlnZ2xlckJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gXCJpbmxpbmUtYmxvY2tcIjtcblx0XHRjb25zdCBleGNsYW1hdGlvbk1hcmsgPSB0cmlnZ2xlckJ1dHRvbi5jaGlsZHJlblswXTtcblx0XHRleGNsYW1hdGlvbk1hcmsuc3R5bGUubWFyZ2luUmlnaHQgPSBcIjBweFwiO1xuXHRcdGNvbnN0IHJpZ2h0Q2hldnJvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpXCIpO1xuXHRcdHJpZ2h0Q2hldnJvbi5jbGFzc0xpc3QuYWRkKFwiZmFzXCIsIFwiZmEtYW5nbGUtcmlnaHRcIik7XG5cdFx0cmlnaHRDaGV2cm9uLnN0eWxlLm1hcmdpblJpZ2h0ID0gXCIwcHhcIjtcblx0XHR0cmlnZ2xlckJ1dHRvbi5pbnNlcnRCZWZvcmUocmlnaHRDaGV2cm9uLCBleGNsYW1hdGlvbk1hcmspO1xuXHRcdGNvbnN0IGxlZnRDaGV2cm9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlcIik7XG5cdFx0bGVmdENoZXZyb24uY2xhc3NMaXN0LmFkZChcImZhc1wiLCBcImZhLWFuZ2xlLWxlZnRcIik7XG5cdFx0ZXhjbGFtYXRpb25NYXJrLmFmdGVyKGxlZnRDaGV2cm9uKTtcblx0fVxufSk7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0gTWlzYyAtLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbkhvb2tzLm9uKFwicmVuZGVyU2V0dGluZ3NDb25maWdcIiwgKGFwcCwgaHRtbCwgZGF0YSkgPT4ge1xuXHRjb25zdCB0cmlnZ2xlck1lbnUgPSBodG1sLmZpbmQoXCJidXR0b25bZGF0YS1rZXk9XFxcImNvbmRpdGlvbi1sYWItdHJpZ2dsZXIudHJpZ2dsZXJNZW51XFxcIl1cIilbMF07XG5cdGlmICh0cmlnZ2xlck1lbnUpIHtcblx0XHRjb25zdCBleGNsYW1hdGlvbk1hcmsgPSB0cmlnZ2xlck1lbnUuY2hpbGRyZW5bMF07XG5cdFx0ZXhjbGFtYXRpb25NYXJrLnN0eWxlLm1hcmdpblJpZ2h0ID0gXCIwcHhcIjtcblx0XHRjb25zdCByaWdodENoZXZyb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaVwiKTtcblx0XHRyaWdodENoZXZyb24uY2xhc3NMaXN0LmFkZChcImZhc1wiLCBcImZhLWFuZ2xlLXJpZ2h0XCIpO1xuXHRcdHJpZ2h0Q2hldnJvbi5zdHlsZS5tYXJnaW5SaWdodCA9IFwiMHB4XCI7XG5cdFx0dHJpZ2dsZXJNZW51Lmluc2VydEJlZm9yZShyaWdodENoZXZyb24sIGV4Y2xhbWF0aW9uTWFyayk7XG5cdFx0Y29uc3QgbGVmdENoZXZyb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaVwiKTtcblx0XHRsZWZ0Q2hldnJvbi5jbGFzc0xpc3QuYWRkKFwiZmFzXCIsIFwiZmEtYW5nbGUtbGVmdFwiKTtcblx0XHRleGNsYW1hdGlvbk1hcmsuYWZ0ZXIobGVmdENoZXZyb24pO1xuXHR9XG59KTtcblxuSG9va3Mub24oXCJyZW5kZXJNYWNyb0NvbmZpZ1wiLCAoYXBwLCBodG1sLCBkYXRhKSA9PiB7XG5cdFRyaWdnbGVyLl9vblJlbmRlck1hY3JvQ29uZmlnKGFwcCwgaHRtbCwgZGF0YSk7XG59KTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLSBDaGF0IC0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuSG9va3Mub24oXCJyZW5kZXJDaGF0TG9nXCIsIChhcHAsIGh0bWwsIGRhdGEpID0+IHtcblx0RW5oYW5jZWRDb25kaXRpb25zLl9vblJlbmRlckNoYXRMb2coYXBwLCBodG1sLCBkYXRhKTtcbn0pO1xuXG5Ib29rcy5vbihcInJlbmRlckNoYXRNZXNzYWdlXCIsIChhcHAsIGh0bWwsIGRhdGEpID0+IHtcblx0RW5oYW5jZWRDb25kaXRpb25zLl9vblJlbmRlckNoYXRNZXNzYWdlKGFwcCwgaHRtbCwgZGF0YSk7XG59KTtcblxuSG9va3Mub24oXCJyZW5kZXJEaWFsb2dcIiwgKGFwcCwgaHRtbCwgZGF0YSkgPT4ge1xuXHRzd2l0Y2ggKGFwcC50aXRsZSkge1xuXHRcdGNhc2UgZ2FtZS5pMThuLmxvY2FsaXplKFwiQ0xULkVOSEFOQ0VEX0NPTkRJVElPTlMuQ29uZGl0aW9uTGFiLlNvcnREaXJlY3Rpb25TYXZlLlRpdGxlXCIpOlxuXHRcdFx0Q29uZGl0aW9uTGFiLl9vblJlbmRlclNhdmVEaWFsb2coYXBwLCBodG1sLCBkYXRhKTtcblx0XHRcdGJyZWFrO1xuXG5cdFx0Y2FzZSBnYW1lLmkxOG4ubG9jYWxpemUoXCJDTFQuRU5IQU5DRURfQ09ORElUSU9OUy5MYWIuUmVzdG9yZURlZmF1bHRzVGl0bGVcIik6XG5cdFx0XHRDb25kaXRpb25MYWIuX29uUmVuZGVyUmVzdG9yZURlZmF1bHRzRGlhbG9nKGFwcCwgaHRtbCwgZGF0YSk7XG5cdFx0XHRicmVhaztcblxuXHRcdGRlZmF1bHQ6XG5cdFx0XHRicmVhaztcblx0fVxufSk7XG5cbi8qIC0tLS0tLS0tLS0tLS0tIENvbWJhdCBUcmFja2VyIC0tLS0tLS0tLS0tLS0tICovXG5cbkhvb2tzLm9uKFwicmVuZGVyQ29tYmF0VHJhY2tlclwiLCAoYXBwLCBodG1sLCBkYXRhKSA9PiB7XG5cdEVuaGFuY2VkQ29uZGl0aW9ucy5fb25SZW5kZXJDb21iYXRUcmFja2VyKGFwcCwgaHRtbCwgZGF0YSk7XG59KTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLSBDdXN0b20gQXBwcyAtLS0tLS0tLS0tLS0tLS0gKi9cblxuSG9va3Mub24oXCJyZW5kZXJDb25kaXRpb25MYWJcIiwgKGFwcCwgaHRtbCwgZGF0YSkgPT4ge1xuXHRDb25kaXRpb25MYWIuX29uUmVuZGVyKGFwcCwgaHRtbCwgZGF0YSk7XG59KTtcbiJdLCJuYW1lcyI6WyJCVVRMRVIi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LElBQUksQ0FBQztBQUM3QixHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztBQUMxQjtBQUNBLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ2pCLEdBQUcsQ0FBQyxDQUFDO0FBQ0wsRUFBRSxlQUFlLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLEtBQUssS0FBSztBQUMxQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0FBQzVDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ2pCLEdBQUcsQ0FBQyxDQUFDO0FBQ0wsRUFBRSxlQUFlLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLEtBQUssS0FBSztBQUMxQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0FBQzVDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ2pCLEdBQUcsQ0FBQyxDQUFDO0FBQ0wsRUFBRSxjQUFjLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLEtBQUssS0FBSztBQUN6QyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0FBQzNDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ2pCLEdBQUcsQ0FBQyxDQUFDO0FBQ0wsRUFBRSxVQUFVLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLEtBQUssS0FBSztBQUNyQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0FBQ3hDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ2pCLEdBQUcsQ0FBQyxDQUFDO0FBQ0w7QUFDQTtBQUNBLEVBQUUsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLFFB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LEVBQUU7QUFDMUIsR0FBRyxNQUFNLFFBQVEsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3RDLEdBQUcsTUFBTSxHQUFHLEdBQUcsUUFBUSxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7QUFDN0M7QUFDQSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUU7QUFDYixJQUFJLFNBQVM7QUFDYixJQUFJO0FBQ0o7QUFDQSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDbEI7QUFDQSxHQUFHLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRTtBQUN6QixJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0IsSUFBSSxNQUFNLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsRUFBRTtBQUN2QyxJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEMsSUFBSSxNQUFNLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsRUFBRTtBQUNsQyxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0IsSUFBSSxNQUFNLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsRUFBRTtBQUN2QyxJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEMsSUFBSTtBQUNKLEdBQUc7QUFDSDtBQUNBLEVBQUUsTUFBTSxVQUFVLEdBQUcsQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDeEM7QUFDQSxFQUFFLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxF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"}