{"version":3,"file":"./index.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./scripts/config.js","webpack:///./scripts/settings.js","webpack:///./scripts/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { MODULE_ID } from \"./main.js\";\r\n\r\nconst ECHItems = {};\r\n\r\nexport function initConfig() {\r\n\r\n    Hooks.on(\"argonInit\", (CoreHUD) => {\r\n        if (game.system.id !== \"dnd5e\") return;\r\n        registerItems();\r\n        const ARGON = CoreHUD.ARGON;\r\n\r\n        const isMIDI = game.modules.get(\"midi-qol\")?.active;\r\n        const getMidiFlag = (actionType) => {\r\n            if (!isMIDI || !ui.ARGON._actor) return null;\r\n            const flag = ui.ARGON._actor.getFlag(\"midi-qol\", \"actions\") ?? {};\r\n            const value = flag[actionType] ?? false;\r\n            const midiAction = value ? 0 : 1;\r\n            return midiAction;\r\n        };\r\n\r\n        const actionTypes = {\r\n            action: [\"action\"],\r\n            bonus: [\"bonus\"],\r\n            reaction: [\"reaction\", \"reactiondamage\", \"reactionmanual\"],\r\n            free: [\"special\"],\r\n        };\r\n\r\n        const itemTypes = {\r\n            spell: [\"spell\"],\r\n            feat: [\"feat\"],\r\n            consumable: [\"consumable\", \"equipment\", \"loot\"],\r\n        };\r\n\r\n        const mainBarFeatures = [];\r\n\r\n        if (game.settings.get(MODULE_ID, \"showWeaponsItems\")) itemTypes.consumable.push(\"weapon\");\r\n        if (game.settings.get(MODULE_ID, \"showClassActions\")) mainBarFeatures.push(\"class\");\r\n\r\n        CoreHUD.DND5E = {\r\n            actionTypes,\r\n            itemTypes,\r\n            mainBarFeatures,\r\n            ECHItems,\r\n        };\r\n\r\n        Hooks.callAll(\"enhanced-combat-hud.dnd5e.initConfig\", { actionTypes, itemTypes, ECHItems });\r\n\r\n        async function getTooltipDetails(item, type) {\r\n            let title, description, itemType, subtitle, target, range, dt;\r\n            let damageTypes = [];\r\n            let properties = [];\r\n            let materialComponents = \"\";\r\n\r\n            if (type == \"skill\") {\r\n                title = CONFIG.DND5E.skills[item].label;\r\n                description = game.i18n.localize(`enhancedcombathud-dnd5e.skills.${item}.tooltip`);\r\n            } else if (type == \"save\") {\r\n                title = CONFIG.DND5E.abilities[item].label;\r\n                description = game.i18n.localize(`enhancedcombathud-dnd5e.abilities.${item}.tooltip`);\r\n            } else {\r\n                if (!item || !item.system) return;\r\n\r\n                title = item.name;\r\n                description = item.system.description.value;\r\n                itemType = item.type;\r\n                target = item.labels?.target || \"-\";\r\n                range = item.labels?.range || \"-\";\r\n                properties = [];\r\n                dt = item.labels?.damageTypes?.split(\", \");\r\n                damageTypes = dt && dt.length ? dt : [];\r\n                materialComponents = \"\";\r\n\r\n                switch (itemType) {\r\n                    case \"weapon\":\r\n                        subtitle = CONFIG.DND5E.weaponTypes[item.system.weaponType];\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[item.system.actionType]);\r\n                        for (let [key, value] of Object.entries(item.system.properties)) {\r\n                            let prop = value && CONFIG.DND5E.weaponProperties[key] ? CONFIG.DND5E.weaponProperties[key] : undefined;\r\n                            if (prop) properties.push(prop);\r\n                        }\r\n                        break;\r\n                    case \"spell\":\r\n                        subtitle = `${item.labels.level} ${item.labels.school}`;\r\n                        properties.push(CONFIG.DND5E.spellSchools[item.system.school]);\r\n                        properties.push(item.labels.duration);\r\n                        properties.push(item.labels.save);\r\n                        for (let comp of item.labels.components.all) {\r\n                            properties.push(comp.abbr);\r\n                        }\r\n                        if (item.labels.materials) materialComponents = item.labels.materials;\r\n                        break;\r\n                    case \"consumable\":\r\n                        subtitle = CONFIG.DND5E.consumableTypes[item.system.consumableType];\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[item.system.actionType]);\r\n                        break;\r\n                    case \"feat\":\r\n                        subtitle = item.system.requirements;\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[item.system.actionType]);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (description) description = await TextEditor.enrichHTML(description);\r\n            let details = [];\r\n            if (target || range) {\r\n                details = [\r\n                    {\r\n                        label: \"enhancedcombathud-dnd5e.tooltip.target.name\",\r\n                        value: target,\r\n                    },\r\n                    {\r\n                        label: \"enhancedcombathud-dnd5e.tooltip.range.name\",\r\n                        value: range,\r\n                    },\r\n                ];\r\n            }\r\n            if (item?.labels?.toHit) {\r\n                details.push({\r\n                    label: \"enhancedcombathud-dnd5e.tooltip.toHit.name\",\r\n                    value: item.labels.toHit,\r\n                });\r\n            }\r\n            if (item?.labels?.derivedDamage?.length) {\r\n                let dmgString = \"\";\r\n                item.labels.derivedDamage.forEach((dDmg) => {\r\n                    dmgString += dDmg.formula + \" \" + getDamageTypeIcon(dDmg.damageType) + \" \";\r\n                });\r\n                details.push({\r\n                    label: \"enhancedcombathud-dnd5e.tooltip.damage.name\",\r\n                    value: dmgString,\r\n                });\r\n            }\r\n\r\n            const tooltipProperties = [];\r\n            if (damageTypes?.length) damageTypes.forEach((d) => tooltipProperties.push({ label: d, primary: true }));\r\n            if (properties?.length) properties.forEach((p) => tooltipProperties.push({ label: p, secondary: true }));\r\n\r\n            return { title, description, subtitle, details, properties: tooltipProperties, footerText: materialComponents };\r\n        }\r\n\r\n        function getDamageTypeIcon(damageType) {\r\n            switch (damageType.toLowerCase()) {\r\n                case \"acid\":\r\n                    return '<i class=\"fas fa-flask\"></i>';\r\n                case \"bludgeoning\":\r\n                    return '<i class=\"fas fa-hammer\"></i>';\r\n                case \"cold\":\r\n                    return '<i class=\"fas fa-snowflake\"></i>';\r\n                case \"fire\":\r\n                    return '<i class=\"fas fa-fire\"></i>';\r\n                case \"force\":\r\n                    return '<i class=\"fas fa-hand-sparkles\"></i>';\r\n                case \"lightning\":\r\n                    return '<i class=\"fas fa-bolt\"></i>';\r\n                case \"necrotic\":\r\n                    return '<i class=\"fas fa-skull\"></i>';\r\n                case \"piercing\":\r\n                    return '<i class=\"fas fa-crosshairs\"></i>';\r\n                case \"poison\":\r\n                    return '<i class=\"fas fa-skull-crossbones\"></i>';\r\n                case \"psychic\":\r\n                    return '<i class=\"fas fa-brain\"></i>';\r\n                case \"radiant\":\r\n                    return '<i class=\"fas fa-sun\"></i>';\r\n                case \"slashing\":\r\n                    return '<i class=\"fas fa-cut\"></i>';\r\n                case \"thunder\":\r\n                    return '<i class=\"fas fa-bell\"></i>';\r\n                case \"healing\":\r\n                    return '<i class=\"fas fa-heart\"></i>';\r\n                default:\r\n                    return \"\";\r\n            }\r\n        }\r\n\r\n        function getProficiencyIcon(proficiency) {\r\n            if (proficiency == 0) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"far fa-circle\"> </i>';\r\n            else if (proficiency == 1) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"fas fa-check\"> </i>';\r\n            else if (proficiency == 2) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"fas fa-check-double\"> </i>';\r\n            else if (proficiency == 0.5) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"fas fa-adjust\"> </i>';\r\n            else return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"far fa-circle\"> </i>';\r\n        }\r\n\r\n        function condenseItemButtons(items) {\r\n            const condenseClassActions = game.settings.get(MODULE_ID, \"condenseClassActions\");\r\n            if (!condenseClassActions) return items.map((item) => new DND5eItemButton({item, inActionPanel: true}));\r\n            const condensedItems = [];\r\n            const barItemsLength = items.length;\r\n            const barItemsMultipleOfTwo = barItemsLength - (barItemsLength % 2);\r\n            let currentSplitButtonItemButton = null;\r\n            for (let i = 0; i < barItemsLength; i++) {\r\n                const isCondensedButton = i < barItemsMultipleOfTwo;\r\n                const item = items[i];\r\n                if (isCondensedButton) {\r\n                    if (currentSplitButtonItemButton) {\r\n                        const button = new DND5eItemButton({item, inActionPanel: false});\r\n                        condensedItems.push(new ARGON.MAIN.BUTTONS.SplitButton(currentSplitButtonItemButton, button));\r\n                        currentSplitButtonItemButton = null;\r\n                    } else {\r\n                        currentSplitButtonItemButton = new DND5eItemButton({item, inActionPanel: false});\r\n                    }\r\n                } else {\r\n                    condensedItems.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                }\r\n            }\r\n            return condensedItems;\r\n        }\r\n\r\n        class DND5ePortraitPanel extends ARGON.PORTRAIT.PortraitPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get description() {\r\n                const { type, system } = this.actor;\r\n                const actor = this.actor;\r\n                const isNPC = type === \"npc\";\r\n                const isPC = type === \"character\";\r\n                if (isNPC) {\r\n                    const creatureType = game.i18n.localize(CONFIG.DND5E.creatureTypes[actor.system.details.type.value] ?? actor.system.details.type.custom);\r\n                    const cr = system.details.cr >= 1 || system.details.cr <= 0 ? system.details.cr : `1/${1 / system.details.cr}`;\r\n                    return `CR ${cr} ${creatureType}`;\r\n                } else if (isPC) {\r\n                    const classes = Object.values(actor.classes)\r\n                        .map((c) => c.name)\r\n                        .join(\" / \");\r\n                    return `Level ${system.details.level} ${classes} (${system.details.race})`;\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            }\r\n\r\n            get isDead() {\r\n                return this.isDying && this.actor.type !== \"character\";\r\n            }\r\n\r\n            get isDying() {\r\n                return this.actor.system.attributes.hp.value <= 0;\r\n            }\r\n\r\n            get successes() {\r\n                return this.actor.system.attributes?.death?.success ?? 0;\r\n            }\r\n\r\n            get failures() {\r\n                return this.actor.system.attributes?.death?.failure ?? 0;\r\n            }\r\n\r\n            get configurationTemplate() {\r\n                return \"modules/enhancedcombathud-dnd5e/templates/argon-actor-config.hbs\";\r\n            }\r\n\r\n            async _onDeathSave(event) {\r\n                this.actor.rollDeathSave({});\r\n            }\r\n\r\n            async getStatBlocks() {\r\n                const HPText = game.i18n\r\n                    .localize(\"DND5E.HitPoints\")\r\n                    .split(\" \")\r\n                    .map((word) => word.charAt(0).toUpperCase())\r\n                    .join(\"\");\r\n                const ACText = game.i18n\r\n                    .localize(\"DND5E.ArmorClass\")\r\n                    .split(\" \")\r\n                    .map((word) => word.charAt(0).toUpperCase())\r\n                    .join(\"\");\r\n                const SpellDC = game.i18n.localize(\"DND5E.SaveDC\").replace(\"{ability}\", \"\").replace(\"{dc}\", \"\").trim();\r\n\r\n                const hpColor = this.actor.system.attributes.hp.temp ? \"#6698f3\" : \"rgb(0 255 170)\";\r\n                const tempMax = this.actor.system.attributes.hp.tempmax;\r\n                const hpMaxColor = tempMax ? (tempMax > 0 ? \"rgb(222 91 255)\" : \"#ffb000\") : \"rgb(255 255 255)\";\r\n\r\n                return [\r\n                    [\r\n                        {\r\n                            text: `${this.actor.system.attributes.hp.value + (this.actor.system.attributes.hp.temp ?? 0)}`,\r\n                            color: hpColor,\r\n                        },\r\n                        {\r\n                            text: `/`,\r\n                        },\r\n                        {\r\n                            text: `${this.actor.system.attributes.hp.max + (this.actor.system.attributes.hp.tempmax ?? 0)}`,\r\n                            color: hpMaxColor,\r\n                        },\r\n                        {\r\n                            text: HPText,\r\n                        },\r\n                    ],\r\n                    [\r\n                        {\r\n                            text: ACText,\r\n                        },\r\n                        {\r\n                            text: this.actor.system.attributes.ac.value,\r\n                            color: \"var(--ech-movement-baseMovement-background)\",\r\n                        },\r\n                    ],\r\n                    [\r\n                        {\r\n                            text: SpellDC,\r\n                        },\r\n                        {\r\n                            text: this.actor.system.attributes.spelldc,\r\n                            color: \"var(--ech-movement-baseMovement-background)\",\r\n                        },\r\n                    ],\r\n                ];\r\n            }\r\n        }\r\n\r\n        class DND5eDrawerButton extends ARGON.DRAWER.DrawerButton {\r\n            constructor(buttons, item, type) {\r\n                super(buttons);\r\n                this.item = item;\r\n                this.type = type;\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            get tooltipOrientation() {\r\n                return TooltipManager.TOOLTIP_DIRECTIONS.RIGHT;\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item, this.type);\r\n                return tooltipData;\r\n            }\r\n        }\r\n\r\n        class DND5eDrawerPanel extends ARGON.DRAWER.DrawerPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get categories() {\r\n                const abilities = this.actor.system.abilities;\r\n                const skills = this.actor.system.skills;\r\n                const tools = this.actor.itemTypes.tool;\r\n\r\n                const addSign = (value) => {\r\n                    if (value >= 0) return `+${value}`;\r\n                    return value;\r\n                };\r\n\r\n                const abilitiesButtons = Object.keys(abilities).map((ability) => {\r\n                    const abilityData = abilities[ability];\r\n                    return new DND5eDrawerButton(\r\n                        [\r\n                            {\r\n                                label: CONFIG.DND5E.abilities[ability].label,\r\n                                onClick: (event) => this.actor.rollAbility(ability, { event }),\r\n                            },\r\n                            {\r\n                                label: addSign(abilityData.mod),\r\n                                onClick: (event) => this.actor.rollAbilityTest(ability, { event }),\r\n                            },\r\n                            {\r\n                                label: addSign(abilityData.save),\r\n                                onClick: (event) => this.actor.rollAbilitySave(ability, { event }),\r\n                            },\r\n                        ],\r\n                        ability,\r\n                        \"save\",\r\n                    );\r\n                });\r\n\r\n                const skillsButtons = Object.keys(skills).map((skill) => {\r\n                    const skillData = skills[skill];\r\n                    return new DND5eDrawerButton(\r\n                        [\r\n                            {\r\n                                label: getProficiencyIcon(skillData.proficient) + CONFIG.DND5E.skills[skill].label,\r\n                                onClick: (event) => this.actor.rollSkill(skill, { event }),\r\n                            },\r\n                            {\r\n                                label: `${addSign(skillData.mod)}<span style=\"margin: 0 1rem; filter: brightness(0.8)\">(${skillData.passive})</span>`,\r\n                                style: \"display: flex; justify-content: flex-end;\",\r\n                            },\r\n                        ],\r\n                        skill,\r\n                        \"skill\",\r\n                    );\r\n                });\r\n\r\n                const toolButtons = tools.map((tool) => {\r\n                    return new DND5eDrawerButton(\r\n                        [\r\n                            {\r\n                                label: getProficiencyIcon(tool.system.proficient) + tool.name,\r\n                                onClick: (event) => tool.rollToolCheck({ event }),\r\n                            },\r\n                            {\r\n                                label: addSign(abilities[tool.abilityMod].mod + tool.system.proficiencyMultiplier * this.actor.system.attributes.prof),\r\n                            },\r\n                        ],\r\n                        tool,\r\n                    );\r\n                });\r\n\r\n                return [\r\n                    {\r\n                        gridCols: \"5fr 2fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Abilities\",\r\n                                align: \"left\",\r\n                            },\r\n                            {\r\n                                label: \"Check\",\r\n                                align: \"center\",\r\n                            },\r\n                            {\r\n                                label: \"Save\",\r\n                                align: \"center\",\r\n                            },\r\n                        ],\r\n                        align: [\"left\", \"center\", \"center\"],\r\n                        buttons: abilitiesButtons,\r\n                    },\r\n                    {\r\n                        gridCols: \"7fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Skills\",\r\n                            },\r\n                            {\r\n                                label: \"\",\r\n                            },\r\n                        ],\r\n                        buttons: skillsButtons,\r\n                    },\r\n                    {\r\n                        gridCols: \"7fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Tools\",\r\n                            },\r\n                            {\r\n                                label: \"\",\r\n                            },\r\n                        ],\r\n                        buttons: toolButtons,\r\n                    },\r\n                ];\r\n            }\r\n\r\n            get title() {\r\n                return `${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.saves.name\")} / ${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.skills.name\")} / ${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.tools.name\")}`;\r\n            }\r\n        }\r\n\r\n        class DND5eActionActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Action\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return getMidiFlag(\"action\") ?? (this.isActionUsed ? 0 : 1);\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const spellItems = this.actor.items.filter((item) => itemTypes.spell.includes(item.type) && actionTypes.action.includes(item.system.activation?.type) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                const featItems = this.actor.items.filter((item) => itemTypes.feat.includes(item.type) && actionTypes.action.includes(item.system.activation?.type) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                const consumableItems = this.actor.items.filter((item) => itemTypes.consumable.includes(item.type) && actionTypes.action.includes(item.system.activation?.type) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n\r\n                const spellButton = !spellItems.length ? [] : [new DND5eButtonPanelButton({ type: \"spell\", items: spellItems, color: 0 })].filter((button) => button.hasContents);\r\n\r\n                const specialActions = Object.values(ECHItems);\r\n\r\n                const showSpecialActions = game.settings.get(MODULE_ID, \"showSpecialActions\");\r\n                const buttons = [];\r\n                if (showSpecialActions) {\r\n                    buttons.push(...[new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true }), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[0]), new DND5eSpecialActionButton(specialActions[1])), ...spellButton, new DND5eButtonPanelButton({ type: \"feat\", items: featItems, color: 0 }), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[2]), new DND5eSpecialActionButton(specialActions[3])), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[4]), new DND5eSpecialActionButton(specialActions[5])), new DND5eButtonPanelButton({ type: \"consumable\", items: consumableItems, color: 0 })]);\r\n                } else {\r\n                    buttons.push(...[new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true }), ...spellButton, new DND5eButtonPanelButton({ type: \"feat\", items: featItems, color: 0 }), new DND5eButtonPanelButton({ type: \"consumable\", items: consumableItems, color: 0 })]); \r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.action.includes(item.system.activation?.type));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n                \r\n                return buttons.filter((button) => button.hasContents || button.items == undefined || button.items.length);\r\n            }\r\n        }\r\n\r\n        class DND5eBonusActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.BonusAction\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return getMidiFlag(\"bonus\") ?? (this.isActionUsed ? 0 : 1);\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: false })];\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.bonus.includes(item.system.activation?.type) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                    if (!items.length) continue;\r\n                    const button = new DND5eButtonPanelButton({ type, items, color: 1 })\r\n                    if(button.hasContents) buttons.push(button);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.bonus.includes(item.system.activation?.type));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eReactionActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Reaction\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return getMidiFlag(\"reaction\") ?? (this.isActionUsed ? 0 : 1);\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true })];\r\n                //buttons.push(new DND5eEquipmentButton({slot: 1}));\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.reaction.includes(item.system.activation?.type) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                    if (!items.length) continue;\r\n                    const button = new DND5eButtonPanelButton({ type, items, color: 3 })\r\n                    if(button.hasContents) buttons.push(button);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.reaction.includes(item.system.activation?.type));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eFreeActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Special\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return this.isActionUsed ? 0 : 1;\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.free.includes(item.system.activation?.type) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                    if (!items.length) continue;\r\n                    const button = new DND5eButtonPanelButton({ type, items, color: 2 })\r\n                    if(button.hasContents) buttons.push(button);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.free.includes(item.system.activation?.type));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eLegActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.LegendaryActionLabel\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor.inCombat ? this.actor.system.resources?.legact?.max ?? null : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return this.actor.system.resources?.legact?.value ?? null;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n                const legendary = this.actor.items.filter((item) => item.system.activation?.type === \"legendary\");\r\n                legendary.forEach((item) => {\r\n                    buttons.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                });\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eLairActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.LairActionLabel\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return this.actor.system.resources.lair?.value * 1;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n                const lair = this.actor.items.filter((item) => item.system.activation?.type === \"lair\");\r\n                lair.forEach((item) => {\r\n                    buttons.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                });\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eItemButton extends ARGON.MAIN.BUTTONS.ItemButton {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            get ranges() {\r\n                const item = this.item;\r\n                const touchRange = item.system.range.units == \"touch\" ? canvas?.scene?.grid?.distance : null;\r\n                return {\r\n                    normal: item.system?.range?.value ?? touchRange,\r\n                    long: item.system?.range?.long ?? null,\r\n                };\r\n            }\r\n\r\n            get targets() {\r\n                const item = this.item;\r\n                const validTargets = [\"creature\", \"ally\", \"enemy\"];\r\n                const actionType = item.system.actionType;\r\n                const targetType = item.system.target?.type;\r\n                if (!item.system.target?.units && validTargets.includes(targetType)) {\r\n                    return item.system.target?.value;\r\n                } else if (actionType === \"mwak\" || actionType === \"rwak\"){\r\n                    return 1;\r\n                }\r\n                return null;\r\n            }\r\n\r\n            get visible() {\r\n                if(!this._isWeaponSet || this._isPrimary) return super.visible;\r\n                return super.visible && this.item?.system?.armor?.type !== \"shield\";\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item);\r\n                tooltipData.propertiesLabel = \"enhancedcombathud-dnd5e.tooltip.properties.name\";\r\n                return tooltipData;\r\n            }\r\n\r\n            async _onLeftClick(event) {\r\n                ui.ARGON.interceptNextDialog(event.currentTarget);\r\n                const used = await this.item.use({ event }, { event });\r\n                if (used) {\r\n                    DND5eItemButton.consumeActionEconomy(this.item);\r\n                }\r\n            }\r\n\r\n            async _onRightClick(event) {\r\n                this.item?.sheet?.render(true);\r\n            }\r\n\r\n            static consumeActionEconomy(item) {\r\n                const activationType = item.system.activation?.type;\r\n                let actionType = null;\r\n                for (const [type, types] of Object.entries(actionTypes)) {\r\n                    if (types.includes(activationType)) actionType = type;\r\n                }\r\n                if (!actionType) return;\r\n                if (game.combat?.combatant?.actor !== item.parent) actionType = \"reaction\";\r\n                if (actionType === \"action\") {\r\n                    ui.ARGON.components.main[0].isActionUsed = true;\r\n                    ui.ARGON.components.main[0].updateActionUse();\r\n                } else if (actionType === \"bonus\") {\r\n                    ui.ARGON.components.main[1].isActionUsed = true;\r\n                    ui.ARGON.components.main[1].updateActionUse();\r\n                } else if (actionType === \"reaction\") {\r\n                    ui.ARGON.components.main[2].isActionUsed = true;\r\n                    ui.ARGON.components.main[2].updateActionUse();\r\n                } else if (actionType === \"free\") {\r\n                    ui.ARGON.components.main[3].isActionUsed = true;\r\n                    ui.ARGON.components.main[3].updateActionUse();\r\n                } else if (actionType === \"legendary\") {\r\n                    ui.ARGON.components.main[4].isActionUsed = true;\r\n                }\r\n            }\r\n\r\n            async render(...args) {\r\n                await super.render(...args);\r\n                if (this.item) {\r\n                    const weapons = this.actor.items.filter((item) => item.system.consume?.target === this.item.id);\r\n                    ui.ARGON.updateItemButtons(weapons);\r\n                }\r\n            }\r\n\r\n            get quantity() {\r\n                if (!this.item?.system) return null;\r\n                const showQuantityItemTypes = [\"consumable\"];\r\n                const consumeType = this.item.system.consume?.type;\r\n                if (consumeType === \"ammo\") {\r\n                    const ammoItem = this.actor.items.get(this.item.system.consume.target);\r\n                    if (!ammoItem) return null;\r\n                    return Math.floor((ammoItem.system.quantity ?? 0) / this.item.system.consume.amount);\r\n                } else if (consumeType === \"attribute\") {\r\n                    return Math.floor(getProperty(this.actor.system, this.item.system.consume.target) / this.item.system.consume.amount);\r\n                } else if (consumeType === \"charges\") {\r\n                    const chargesItem = this.actor.items.get(this.item.system.consume.target);\r\n                    if (!chargesItem) return null;\r\n                    return Math.floor((chargesItem.system.uses?.value ?? 0) / this.item.system.consume.amount);\r\n                } else if (showQuantityItemTypes.includes(this.item.type)) {\r\n                    return this.item.system.uses?.value ?? this.item.system.quantity;\r\n                } else if (this.item.system.uses.value !== null && this.item.system.uses.per !== null) {\r\n                    return this.item.system.uses.value;\r\n                }\r\n                return null;\r\n            }\r\n        }\r\n\r\n        class DND5eButtonPanelButton extends ARGON.MAIN.BUTTONS.ButtonPanelButton {\r\n            constructor({ type, items, color }) {\r\n                super();\r\n                this.type = type;\r\n                this.items = items;\r\n                this.color = color;\r\n                this.itemsWithSpells = [];\r\n                this._spells = this.prePrepareSpells();\r\n            }\r\n\r\n            get hasContents() {\r\n                return this._spells ? !!this._spells.length || !!this.itemsWithSpells.length : !!this.items.length;\r\n            }\r\n\r\n            get colorScheme() {\r\n                return this.color;\r\n            }\r\n\r\n            get id() {\r\n                return `${this.type}-${this.color}`\r\n            }\r\n\r\n            get label() {\r\n                switch (this.type) {\r\n                    case \"spell\":\r\n                        return \"enhancedcombathud-dnd5e.hud.castspell.name\";\r\n                    case \"feat\":\r\n                        return \"enhancedcombathud-dnd5e.hud.usepower.name\";\r\n                    case \"consumable\":\r\n                        return \"enhancedcombathud-dnd5e.hud.useitem.name\";\r\n                }\r\n            }\r\n\r\n            get icon() {\r\n                switch (this.type) {\r\n                    case \"spell\":\r\n                        return \"modules/enhancedcombathud/icons/spell-book.webp\";\r\n                    case \"feat\":\r\n                        return \"modules/enhancedcombathud/icons/mighty-force.webp\";\r\n                    case \"consumable\":\r\n                        return \"modules/enhancedcombathud/icons/drink-me.webp\";\r\n                }\r\n            }\r\n\r\n            get showPreparedOnly() {\r\n                if (this.actor.type !== \"character\") return false;\r\n                const preparedFlag = this.actor.getFlag(MODULE_ID, \"showPrepared\");\r\n                if (preparedFlag === \"all\") return false;\r\n                if (preparedFlag === \"preparedOnly\") return true;\r\n                const classes = Object.keys(this.actor.classes);\r\n                const requiresPreparation = [\"cleric\", \"druid\", \"paladin\", \"wizard\", \"artificer\", \"ranger\"].some((className) => classes.includes(className));\r\n                return requiresPreparation;\r\n            }\r\n\r\n            prePrepareSpells() {\r\n                if (this.type !== \"spell\") return;\r\n                \r\n                const spellLevels = CONFIG.DND5E.spellLevels;\r\n                    const itemsToIgnore = [];\r\n                    if (game.modules.get(\"items-with-spells-5e\")?.active) {\r\n                        const actionType = this.items[0].system.activation?.type;\r\n                        const spellItems = this.actor.items.filter((item) => item.flags[\"items-with-spells-5e\"]?.[\"item-spells\"]?.length);\r\n                        for (const item of spellItems) {\r\n                            const spellData = item.flags[\"items-with-spells-5e\"][\"item-spells\"];\r\n                            const itemsInSpell = spellData.map((spell) => this.actor.items.get(spell.id)).filter((item) => item && item.system.activation?.type === actionType);\r\n                            if(!itemsInSpell.length) continue;\r\n                            itemsToIgnore.push(...itemsInSpell);\r\n                            if(item.system.attunement === 1) continue;\r\n                            this.itemsWithSpells.push({\r\n                                label: item.name,\r\n                                buttons: itemsInSpell.map((item) => new DND5eItemButton({ item })),\r\n                                uses: () => {return { max: item.system.uses?.max, value: item.system.uses?.value }},\r\n                            });\r\n                        }\r\n                        this.items = this.items.filter((item) => !itemsToIgnore.includes(item));\r\n                    }\r\n                    if (this.showPreparedOnly) {\r\n                        const allowIfNotPrepared = [\"atwill\", \"innate\", \"pact\", \"always\"];\r\n                        this.items = this.items.filter((item) => {\r\n                            if (allowIfNotPrepared.includes(item.system.preparation.mode)) return true;\r\n                            if (item.system.level == 0) return true;\r\n                            return item.system.preparation.prepared;\r\n                        });\r\n                    }\r\n\r\n                    const spells = [\r\n                        ...this.itemsWithSpells,\r\n                        {\r\n                            label: \"DND5E.SpellPrepAtWill\",\r\n                            buttons: this.items.filter((item) => item.system.preparation.mode === \"atwill\").map((item) => new DND5eItemButton({ item })),\r\n                            uses: { max: Infinity, value: Infinity },\r\n                        },\r\n                        {\r\n                            label: \"DND5E.SpellPrepInnate\",\r\n                            buttons: this.items.filter((item) => item.system.preparation.mode === \"innate\").map((item) => new DND5eItemButton({ item })),\r\n                            uses: { max: Infinity, value: Infinity },\r\n                        },\r\n                        {\r\n                            label: Object.values(spellLevels)[0],\r\n                            buttons: this.items.filter((item) => item.system.level == 0).map((item) => new DND5eItemButton({ item })),\r\n                            uses: { max: Infinity, value: Infinity },\r\n                        },\r\n                        {\r\n                            label: \"DND5E.PactMagic\",\r\n                            buttons: this.items.filter((item) => item.system.preparation.mode === \"pact\").map((item) => new DND5eItemButton({ item })),\r\n                            uses: () => { return this.actor.system.spells.pact }\r\n                        },\r\n                    ];\r\n                    for (const [level, label] of Object.entries(spellLevels)) {\r\n                        const levelSpells = this.items.filter((item) => item.system.level == level && (item.system.preparation.mode === \"prepared\" || item.system.preparation.mode === \"always\"));\r\n                        if (!levelSpells.length || level == 0) continue;\r\n                        spells.push({\r\n                            label,\r\n                            buttons: levelSpells.map((item) => new DND5eItemButton({ item })),\r\n                            uses: () => { return this.actor.system.spells[`spell${level}`] },\r\n                        });\r\n                }\r\n                return spells.filter((spell) => spell.buttons.length);\r\n            }\r\n\r\n            async _getPanel() {\r\n                if (this.type === \"spell\") {\r\n                    return new ARGON.MAIN.BUTTON_PANELS.ACCORDION.AccordionPanel({ id: this.id, accordionPanelCategories: this._spells.map(({ label, buttons, uses }) => new ARGON.MAIN.BUTTON_PANELS.ACCORDION.AccordionPanelCategory({ label, buttons, uses })) });\r\n                } else {\r\n                    return new ARGON.MAIN.BUTTON_PANELS.ButtonPanel({ id: this.id, buttons: this.items.map((item) => new DND5eItemButton({ item })) });\r\n                }\r\n            }\r\n        }\r\n\r\n        class DND5eSpecialActionButton extends ARGON.MAIN.BUTTONS.ActionButton {\r\n            constructor(specialItem) {\r\n                super();\r\n                const actorItem = this.actor.items.getName(specialItem.name);\r\n                this.item =\r\n                    actorItem ??\r\n                    new CONFIG.Item.documentClass(specialItem, {\r\n                        parent: this.actor,\r\n                    });\r\n            }\r\n\r\n            get label() {\r\n                return this.item.name;\r\n            }\r\n\r\n            get icon() {\r\n                return this.item.img;\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item);\r\n                tooltipData.propertiesLabel = \"enhancedcombathud-dnd5e.tooltip.properties.name\";\r\n                return tooltipData;\r\n            }\r\n\r\n            async _onLeftClick(event) {\r\n                const useCE = game.modules.get(\"dfreds-convenient-effects\")?.active && game.dfreds.effectInterface.findEffectByName(this.label);\r\n                let success = false;\r\n                if (useCE) {\r\n                    success = true;\r\n                    await game.dfreds.effectInterface.toggleEffect(this.label, { overlay: false, uuids: [this.actor.uuid] });\r\n                } else {\r\n                    success = await this.item.use({ event }, { event });\r\n                }\r\n                if (success) {\r\n                    DND5eItemButton.consumeActionEconomy(this.item);\r\n                }\r\n            }\r\n        }\r\n\r\n        class DND5eMovementHud extends ARGON.MovementHud {\r\n\r\n            constructor (...args) {\r\n                super(...args);\r\n                this.getMovementMode = game.modules.get('elevation-drag-ruler')?.api?.getMovementMode;\r\n            }\r\n\r\n            get visible() {\r\n                return game.combat?.started;\r\n            }\r\n\r\n            get movementMode() {\r\n                return this.getMovementMode ? this.getMovementMode(this.token) : 'walk';\r\n            }\r\n\r\n            get movementMax() {\r\n                return this.actor.system.attributes.movement[this.movementMode] / canvas.scene.dimensions.distance;\r\n            }\r\n        }\r\n\r\n        class DND5eButtonHud extends ARGON.ButtonHud {\r\n\r\n            constructor (...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get visible() {\r\n                return !game.combat?.started;\r\n            }\r\n\r\n            async _getButtons() {\r\n                return [\r\n                    {\r\n                        label: \"DND5E.LongRest\",\r\n                        onClick: (event) => this.actor.longRest(),\r\n                        icon: \"fas fa-bed\",\r\n                    },\r\n                    {\r\n                        label: \"DND5E.ShortRest\",\r\n                        onClick: (event) => this.actor.shortRest(),\r\n                        icon: \"fas fa-coffee\",\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n        class DND5eWeaponSets extends ARGON.WeaponSets {\r\n            async getDefaultSets() {\r\n                const sets = await super.getDefaultSets();\r\n                const isTransformed = this.actor.flags?.dnd5e?.isPolymorphed;\r\n                if (this.actor.type !== \"npc\" && !isTransformed) return sets;\r\n                const actions = this.actor.items.filter((item) => item.type === \"weapon\" && item.system.activation?.type === \"action\");\r\n                const bonus = this.actor.items.filter((item) => item.type === \"weapon\" && item.system.activation?.type === \"bonus\");\r\n                return {\r\n                    1: {\r\n                        primary: actions[0]?.uuid ?? null,\r\n                        secondary: bonus[0]?.uuid ?? null,\r\n                    },\r\n                    2: {\r\n                        primary: actions[1]?.uuid ?? null,\r\n                        secondary: bonus[1]?.uuid ?? null,\r\n                    },\r\n                    3: {\r\n                        primary: actions[2]?.uuid ?? null,\r\n                        secondary: bonus[2]?.uuid ?? null,\r\n                    },\r\n                };\r\n            }\r\n\r\n            async _getSets() {\r\n                const isTransformed = this.actor.flags?.dnd5e?.isPolymorphed;\r\n\r\n                const sets = isTransformed ? await this.getDefaultSets() : mergeObject(await this.getDefaultSets(), deepClone(this.actor.getFlag(\"enhancedcombathud\", \"weaponSets\") || {}));\r\n            \r\n                for (const [set, slots] of Object.entries(sets)) {\r\n                  slots.primary = slots.primary ? await fromUuid(slots.primary) : null;\r\n                  slots.secondary = slots.secondary ? await fromUuid(slots.secondary) : null;\r\n                }\r\n                return sets;\r\n            }\r\n\r\n            async _onSetChange({ sets, active }) {\r\n                const switchEquip = game.settings.get(\"enhancedcombathud-dnd5e\", \"switchEquip\");\r\n                if (!switchEquip) return;\r\n                const updates = [];\r\n                const activeSet = sets[active];\r\n                const activeItems = Object.values(activeSet).filter((item) => item);\r\n                const inactiveSets = Object.values(sets).filter((set) => set !== activeSet);\r\n                const inactiveItems = inactiveSets.flatMap((set) => Object.values(set)).filter((item) => item).filter((item) => !activeItems.includes(item));\r\n                activeItems.forEach((item) => {\r\n                    if (!item.system?.equipped) updates.push({ _id: item.id, \"system.equipped\": true });\r\n                });\r\n                inactiveItems.forEach((item) => {\r\n                    if (item.system?.equipped) updates.push({ _id: item.id, \"system.equipped\": false });\r\n                });\r\n                return await this.actor.updateEmbeddedDocuments(\"Item\", updates);\r\n            }\r\n        }\r\n\r\n        CoreHUD.definePortraitPanel(DND5ePortraitPanel);\r\n        CoreHUD.defineDrawerPanel(DND5eDrawerPanel);\r\n        CoreHUD.defineMainPanels([DND5eActionActionPanel, DND5eBonusActionPanel, DND5eReactionActionPanel, DND5eFreeActionPanel, DND5eLegActionPanel, DND5eLairActionPanel, ARGON.PREFAB.PassTurnPanel]);\r\n        CoreHUD.defineMovementHud(DND5eMovementHud);\r\n        CoreHUD.defineButtonHud(DND5eButtonHud);\r\n        CoreHUD.defineWeaponSets(DND5eWeaponSets);\r\n        CoreHUD.defineSupportedActorTypes([\"character\", \"npc\"]);\r\n    });\r\n}\r\n\r\nfunction registerItems() {\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/journey.webp\",\r\n        system: {\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: 1,\r\n                units: \"turn\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n        },\r\n        effects: [\r\n            {\r\n                _id: \"8FtZnIC1vbyKZ6xF\",\r\n                changes: [],\r\n                disabled: false,\r\n                duration: {\r\n                    startTime: null,\r\n                    turns: 1,\r\n                },\r\n                icon: \"modules/enhancedcombathud/icons/journey.webp\",\r\n                label: \"Disengage\",\r\n                origin: \"Item.wyQkeuZkttllAFB1\",\r\n                transfer: false,\r\n                flags: {\r\n                    dae: {\r\n                        stackable: \"none\",\r\n                        macroRepeat: \"none\",\r\n                        specialDuration: [],\r\n                        transfer: false,\r\n                    },\r\n                },\r\n                tint: \"\",\r\n            },\r\n        ],\r\n        sort: 0,\r\n        flags: {\r\n            core: {\r\n                sourceId: \"Item.wyQkeuZkttllAFB1\",\r\n            },\r\n\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/armor-upgrade.webp\",\r\n        system: {\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: 1,\r\n                units: \"round\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        effects: [\r\n            {\r\n                _id: \"2xH2YQ6pm430O0Aq\",\r\n                changes: [],\r\n                disabled: false,\r\n                duration: {\r\n                    startTime: null,\r\n                    rounds: 1,\r\n                },\r\n                icon: \"modules/enhancedcombathud/icons/armor-upgrade.webp\",\r\n                label: \"Dodge\",\r\n                origin: \"Item.pakEYcgLYxtKGv7J\",\r\n                transfer: false,\r\n                flags: {\r\n                    dae: {\r\n                        stackable: \"none\",\r\n                        macroRepeat: \"none\",\r\n                        specialDuration: [],\r\n                        transfer: false,\r\n                    },\r\n                },\r\n                tint: \"\",\r\n            },\r\n        ],\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/clockwork.webp\",\r\n        system: {\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        effects: [\r\n            {\r\n                _id: \"BevDb0J80M9BdoEl\",\r\n                changes: [],\r\n                disabled: false,\r\n                duration: {\r\n                    startTime: null,\r\n                    turns: 1,\r\n                },\r\n                icon: \"modules/enhancedcombathud/icons/clockwork.webp\",\r\n                label: \"Ready\",\r\n                transfer: false,\r\n                flags: {\r\n                    dae: {\r\n                        stackable: \"none\",\r\n                        macroRepeat: \"none\",\r\n                        specialDuration: [],\r\n                        transfer: false,\r\n                    },\r\n                },\r\n                tint: \"\",\r\n            },\r\n        ],\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/cloak-dagger.webp\",\r\n        system: {\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            recharge: {\r\n                value: null,\r\n                charged: false,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        effects: [\r\n            {\r\n                _id: \"SZkbtgGCICrpH0GJ\",\r\n                changes: [],\r\n                disabled: false,\r\n                duration: {\r\n                    startTime: null,\r\n                    turns: 10,\r\n                },\r\n                icon: \"modules/enhancedcombathud/icons/cloak-dagger.webp\",\r\n                label: \"Hide\",\r\n                transfer: false,\r\n                flags: {\r\n                    dae: {\r\n                        stackable: \"none\",\r\n                        macroRepeat: \"none\",\r\n                        specialDuration: [],\r\n                        transfer: false,\r\n                    },\r\n                },\r\n                tint: \"\",\r\n            },\r\n        ],\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/walking-boot.webp\",\r\n        system: {\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        effects: [\r\n            {\r\n                _id: \"PPMPZY1t3AUB7UGA\",\r\n                changes: [],\r\n                disabled: false,\r\n                duration: {\r\n                    startTime: null,\r\n                    rounds: 1,\r\n                },\r\n                icon: \"modules/enhancedcombathud/icons/walking-boot.webp\",\r\n                label: \"Dash\",\r\n                transfer: false,\r\n                flags: {\r\n                    dae: {\r\n                        stackable: \"none\",\r\n                        macroRepeat: \"none\",\r\n                        specialDuration: [],\r\n                        transfer: false,\r\n                    },\r\n                },\r\n                tint: \"\",\r\n            },\r\n        ],\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/shield-bash.webp\",\r\n        system: {\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: 1,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"creature\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"touch\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        effects: [],\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n\r\n    if (game.settings.get(\"enhancedcombathud-dnd5e\", \"noAA\")) {\r\n        for (let key of Object.keys(ECHItems)) {\r\n            delete ECHItems[key].effects;\r\n        }\r\n    }\r\n}","import { MODULE_ID } from \"./main.js\";\r\n\r\nexport function registerSettings() {\r\n    const settings = {\r\n        showWeaponsItems: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showWeaponsItems.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showWeaponsItems.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: false,\r\n            onChange: (sett) => {\r\n                ui.ARGON.constructor.DND5E.itemTypes.consumable = ui.ARGON.constructor.DND5E.itemTypes.consumable.filter(i => i !== \"weapon\");\r\n                if(sett) ui.ARGON.constructor.DND5E.itemTypes.consumable.push(\"weapon\");\r\n                ui.ARGON.refresh()\r\n            },\r\n        },\r\n        showClassActions: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showClassActions.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showClassActions.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: (sett) => {\r\n                ui.ARGON.constructor.DND5E.mainBarFeatures = ui.ARGON.constructor.DND5E.mainBarFeatures.filter(i => i !== \"class\");\r\n                if(sett) ui.ARGON.constructor.DND5E.mainBarFeatures.push(\"class\");\r\n                ui.ARGON.refresh()\r\n            },\r\n        },\r\n        condenseClassActions: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.condenseClassActions.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.condenseClassActions.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        switchEquip: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.switchEquip.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.switchEquip.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        showSpecialActions: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showSpecialActions.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showSpecialActions.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        noAA: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.noAA.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.noAA.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: false,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n    };\r\n\r\n    registerSettingsArray(settings);\r\n}\r\n\r\nexport function getSetting(key) {\r\n    return game.settings.get(MODULE_ID, key);\r\n}\r\n\r\nexport async function setSetting(key, value) {\r\n    return await game.settings.set(MODULE_ID, key, value);\r\n}\r\n\r\nfunction registerSettingsArray(settings) {\r\n    for(const [key, value] of Object.entries(settings)) {\r\n        game.settings.register(MODULE_ID, key, value);\r\n    }\r\n}","import {initConfig} from \"./config.js\";\r\nimport { registerSettings } from \"./settings.js\";\r\n\r\nexport const MODULE_ID = \"enhancedcombathud-dnd5e\";\r\n\r\nHooks.on(\"setup\", () => {\r\n    registerSettings();\r\n    initConfig();\r\n});"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","_regeneratorRuntime","Op","hasOwn","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","input","hint","prim","toPrimitive","res","String","_toPrimitive","_createClass","protoProps","staticProps","_inherits","subClass","superClass","_setPrototypeOf","p","bind","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","arguments","apply","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","ECHItems","_arrayLikeToArray","arr","len","arr2","Array","MODULE_ID","Hooks","on","settings","_i","_Object$entries","entries","_Object$entries$_i","isArray","_arrayWithHoles","_s","_e","_x","_r","_arr","_n","_d","_iterableToArrayLimit","minLen","n","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","game","register","registerSettingsArray","showWeaponsItems","i18n","localize","scope","config","default","onChange","sett","ui","ARGON","DND5E","itemTypes","consumable","filter","refresh","showClassActions","mainBarFeatures","condenseClassActions","switchEquip","showSpecialActions","noAA","CoreHUD","_game$modules$get","system","id","img","description","chat","unidentified","source","quantity","weight","price","attuned","attunement","equipped","rarity","identified","activation","cost","condition","duration","units","width","range","long","consume","amount","ability","actionType","attackBonus","chatFlavor","critical","damage","parts","versatile","formula","save","dc","scaling","effects","_id","changes","disabled","startTime","turns","icon","label","origin","transfer","flags","dae","stackable","macroRepeat","specialDuration","tint","sort","core","sourceId","onUseMacroName","consumableType","rounds","recharge","charged","_i8","_Object$keys","registerItems","isMIDI","modules","active","getMidiFlag","_ui$ARGON$_actor$getF","_flag$actionType","_actor","getFlag","actionTypes","action","bonus","reaction","free","spell","feat","callAll","DND5ePortraitPanel","_ARGON$PORTRAIT$Portr","_getStatBlocks","_onDeathSave2","_super","_len","_key","concat","_this$actor","this","actor","isPC","_CONFIG$DND5E$creatur","creatureType","CONFIG","creatureTypes","details","custom","cr","classes","map","c","join","level","race","isDying","attributes","hp","_this$actor$system$at","_this$actor$system$at2","death","success","_this$actor$system$at3","_this$actor$system$at4","failure","_callee","event","_context","rollDeathSave","_x3","_callee2","_this$actor$system$at5","_this$actor$system$at6","HPText","ACText","SpellDC","hpColor","tempMax","hpMaxColor","_context2","split","word","toUpperCase","replace","trim","temp","tempmax","text","color","max","ac","spelldc","PORTRAIT","PortraitPanel","DND5eDrawerButton","_ARGON$DRAWER$DrawerB","_getTooltipData","_super2","buttons","item","_this","TooltipManager","TOOLTIP_DIRECTIONS","RIGHT","_callee3","tooltipData","_context3","getTooltipDetails","DRAWER","DrawerButton","DND5eDrawerPanel","_ARGON$DRAWER$DrawerP","_super3","_len2","_key2","_this2","abilities","skills","tools","tool","addSign","gridCols","captions","align","abilityData","onClick","rollAbility","mod","rollAbilityTest","rollAbilitySave","skill","skillData","getProficiencyIcon","proficient","rollSkill","passive","style","rollToolCheck","abilityMod","proficiencyMultiplier","prof","DrawerPanel","DND5eActionActionPanel","_ARGON$MAIN$ActionPan","_getButtons2","_super4","_len3","_key3","inCombat","_getMidiFlag","isActionUsed","combat","updateActionUse","_callee4","spellItems","featItems","consumableItems","spellButton","specialActions","barItems","_context4","items","_item$system$activati","_item$system$type","includes","_item$system$activati2","_item$system$type2","_item$system$activati3","_item$system$type3","DND5eButtonPanelButton","button","hasContents","DND5eItemButton","isWeaponSet","isPrimary","MAIN","BUTTONS","SplitButton","DND5eSpecialActionButton","_toConsumableArray","_item$system$type4","_item$system$activati4","condenseItemButtons","ActionPanel","DND5eBonusActionPanel","_ARGON$MAIN$ActionPan2","_getButtons3","_super5","_len4","_key4","_getMidiFlag2","_callee5","_loop","_this3","_context6","types","_context5","_slicedToArray","_item$system$activati5","_item$system$type5","t0","_item$system$type6","_item$system$activati6","DND5eReactionActionPanel","_ARGON$MAIN$ActionPan3","_getButtons4","_super6","_len5","_key5","_getMidiFlag3","_callee6","_loop2","_i2","_Object$entries2","_this4","_context8","_Object$entries2$_i","_context7","_item$system$activati7","_item$system$type7","_item$system$type8","_item$system$activati8","DND5eFreeActionPanel","_ARGON$MAIN$ActionPan4","_getButtons5","_super7","_len6","_key6","_callee7","_loop3","_i3","_Object$entries3","_this5","_context10","_Object$entries3$_i","_context9","_item$system$activati9","_item$system$type9","_item$system$type10","_item$system$activati10","DND5eLegActionPanel","_ARGON$MAIN$ActionPan5","_getButtons6","_super8","_len7","_key7","_this$actor$system$re","_this$actor$system$re2","resources","legact","_this$actor$system$re3","_this$actor$system$re4","_callee8","_context11","_item$system$activati11","inActionPanel","DND5eLairActionPanel","_ARGON$MAIN$ActionPan6","_getButtons7","_super9","_len8","_key8","_this$actor$system$re5","lair","_callee9","_context12","_item$system$activati12","_ARGON$MAIN$BUTTONS$I","_render","_onRightClick2","_onLeftClick2","_getTooltipData2","_super10","_len9","_key9","_canvas","_item$system$range$va","_item$system","_item$system$range$lo","_item$system2","touchRange","canvas","scene","grid","distance","normal","_item$system$target","_item$system$target2","_item$system$target3","targetType","_this$item","_isWeaponSet","_isPrimary","_get","armor","_callee10","_context13","propertiesLabel","_callee11","_context14","interceptNextDialog","currentTarget","use","consumeActionEconomy","_x4","_callee12","_this$item2","_context15","sheet","render","_x5","_callee13","_get2","_len10","_key10","weapons","_this6","_args16","_context16","_item$system$consume","updateItemButtons","_this$item3","_this$item$system$con","_this$item$system$use","_this$item$system$use2","consumeType","_ammoItem$system$quan","ammoItem","Math","floor","getProperty","_chargesItem$system$u","_chargesItem$system$u2","chargesItem","uses","per","_item$system$activati13","_game$combat","activationType","_i4","_Object$entries4","_Object$entries4$_i","combatant","parent","components","main","ItemButton","_ARGON$MAIN$BUTTONS$B","_getPanel2","_super11","_ref","_this7","itemsWithSpells","_spells","prePrepareSpells","preparedFlag","some","className","_game$modules$get2","_this8","spellLevels","itemsToIgnore","_this$items$0$system$","_step","_iterator","_createForOfIteratorHelper","_item$flags$itemsWit","_loop4","itemsInSpell","_item$system$activati14","_item$system$uses","_item$system$uses2","s","f","showPreparedOnly","allowIfNotPrepared","preparation","mode","prepared","spells","Infinity","pact","_loop5","_Object$entries5$_i","_Object$entries5","_i5","levelSpells","_callee14","_context17","BUTTON_PANELS","ACCORDION","AccordionPanel","accordionPanelCategories","_ref2","AccordionPanelCategory","ButtonPanel","ButtonPanelButton","_ARGON$MAIN$BUTTONS$A","_onLeftClick3","_getTooltipData3","_super12","specialItem","_this9","actorItem","getName","Item","documentClass","_callee15","_context18","_callee16","_game$modules$get3","useCE","_context19","dfreds","effectInterface","findEffectByName","toggleEffect","overlay","uuids","uuid","_x6","ActionButton","DND5eMovementHud","_ARGON$MovementHud","_super13","_game$modules$get4","_this10","_len11","_key11","getMovementMode","api","_game$combat2","started","token","movement","movementMode","dimensions","MovementHud","DND5eButtonHud","_ARGON$ButtonHud","_getButtons8","_super14","_len12","_key12","_game$combat3","_callee17","_this11","_context20","longRest","shortRest","ButtonHud","DND5eWeaponSets","_ARGON$WeaponSets","_onSetChange2","_getSets2","_getDefaultSets","_super15","_callee18","_this$actor$flags","_actions$0$uuid","_actions$","_bonus$0$uuid","_bonus$","_actions$1$uuid","_actions$2","_bonus$1$uuid","_bonus$2","_actions$2$uuid","_actions$3","_bonus$2$uuid","_bonus$3","sets","isTransformed","actions","_context21","dnd5e","isPolymorphed","_item$system$activati15","_item$system$activati16","primary","secondary","_callee19","_this$actor$flags2","_i6","_Object$entries6","_Object$entries6$_i","slots","_context22","getDefaultSets","t1","mergeObject","t2","t3","deepClone","fromUuid","t4","t5","_callee20","_ref3","updates","activeSet","activeItems","inactiveSets","inactiveItems","_context23","set","flatMap","_item$system3","_item$system4","updateEmbeddedDocuments","_x7","WeaponSets","definePortraitPanel","defineDrawerPanel","defineMainPanels","PREFAB","PassTurnPanel","defineMovementHud","defineButtonHud","defineWeaponSets","defineSupportedActorTypes","_x2","_getTooltipDetails","_callee21","_item$labels4","_item$labels5","_damageTypes","_properties","title","itemType","subtitle","dt","damageTypes","properties","materialComponents","_item$labels","_item$labels2","_item$labels3","_i7","_Object$entries7","_Object$entries7$_i","_iterator2","_step2","comp","dmgString","tooltipProperties","_context24","labels","weaponTypes","weaponType","itemActionTypes","weaponProperties","school","spellSchools","all","abbr","materials","consumableTypes","requirements","TextEditor","enrichHTML","toHit","derivedDamage","dDmg","getDamageTypeIcon","damageType","d","footerText","toLowerCase","proficiency","condensedItems","barItemsLength","barItemsMultipleOfTwo","currentSplitButtonItemButton","isCondensedButton"],"sourceRoot":""}