{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/archive/df-chat-archive.ts","webpack:///./src/archive/DFChatArchiveNew.ts","webpack:///./src/archive/DFChatArchive.ts","webpack:///../common/Settings.ts","webpack:///./src/archive/DFChatArchiveManager.ts","webpack:///./src/archive/DFChatArchiveViewer.ts","webpack:///./src/edit/df-chat-edit.ts","webpack:///./src/edit/DFChatEditor.ts","webpack:///./src/logger/df-adventure-log.ts","webpack:///./src/logger/DFAdventureLogConfig.ts","webpack:///./src/logger/DFAdventureLogProcessor.ts","webpack:///./src/merge/chat-merge.ts","webpack:///./src/privacy/df-chat-privacy.ts","webpack:///./src/CONFIG.ts","webpack:///./src/scroll-manage/scroll-manage.ts","webpack:///./src/whisper-trunc/whisper-trunc.ts","webpack:///./src/player-color/PlayerColor.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/df-chat-enhance.ts"],"sourcesContent":["import DFChatArchiveNew from \"./DFChatArchiveNew\";\nimport DFChatArchiveManager from \"./DFChatArchiveManager\";\nimport { DFChatArchive } from \"./DFChatArchive\";\nimport SETTINGS from \"../../../common/Settings\";\n\n\nexport function init() {\n\n\tlet archiveNew: DFChatArchiveNew = null;\n\tlet archiveManager: DFChatArchiveManager = null;\n\n\tDFChatArchive.registerSettings();\n\tDFChatArchiveNew.registerSettings();\n\n\tSETTINGS.register(DFChatArchiveNew.PREF_HIDE_EXPORT, {\n\t\tname: 'DF_CHAT_ARCHIVE.Settings.HideExport',\n\t\tscope: 'world',\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\tconfig: true,\n\t\tonChange: (newValue) => {\n\t\t\tif (!newValue)\n\t\t\t\t$('#chat-controls .export-log').show();\n\t\t\telse\n\t\t\t\t$('#chat-controls .export-log').hide();\n\t\t}\n\t});\n\n\tSETTINGS.register(DFChatArchiveManager.PREF_REVERSE_SORT, {\n\t\tscope: 'world',\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\tconfig: false\n\t});\n\n\tHooks.on('renderChatLog', function (chatLog: ChatLog, html: JQuery<HTMLElement>) {\n\t\tconst archiveButton = $(`<a class=\"button chat-archive\" title=\"${'DF_CHAT_ARCHIVE.ExportButtonTitle'.localize()}\">\n\t\t<i class=\"fas fa-archive\"></i></a>`);\n\t\tarchiveButton.on('click', () => {\n\t\t\tif (archiveNew == null) {\n\t\t\t\tarchiveNew = new DFChatArchiveNew({});\n\t\t\t\tarchiveNew.render(true);\n\t\t\t} else {\n\t\t\t\tarchiveNew.bringToTop();\n\t\t\t}\n\t\t});\n\t\thtml.find('.control-buttons')\n\t\t\t.prepend(archiveButton)\n\t\t\t.attr('style', 'flex:0 0 auto;');\n\t\tif (SETTINGS.get(DFChatArchiveNew.PREF_HIDE_EXPORT)) {\n\t\t\thtml.find('.control-buttons .export-log').hide();\n\t\t}\n\t});\n\n\tHooks.on('renderSettings', function (settings: Settings, html: JQuery<HTMLElement>) {\n\t\tconst archiveManagerHtml = $(`<div id=\"df-chat-enhance-settings\" style=\"margin:0\">\n\t<h4>${'DF_CHAT_ARCHIVE.ChatEnhanceSettingGroup'.localize()}</h4>\n\t<button data-action=\"archive\"><i class=\"fas fa-archive\"></i>${'DF_CHAT_ARCHIVE.OpenChatArchive'.localize()}</button>\n</div>`);\n\t\tarchiveManagerHtml.on('click', () => {\n\t\t\tif (archiveManager == null || ![Application.RENDER_STATES.RENDERED, Application.RENDER_STATES.RENDERING].includes((<any>archiveManager)._state)) {\n\t\t\t\tarchiveManager = new DFChatArchiveManager();\n\t\t\t\tarchiveManager.render(true);\n\t\t\t} else {\n\t\t\t\tarchiveManager.bringToTop();\n\t\t\t}\n\t\t});\n\t\thtml.find('#settings-game').append(archiveManagerHtml);\n\t});\n\tHooks.on('closeDFChatArchiveNew', () => { archiveNew = null; });\n\tHooks.on('closeDFChatArchiveManager', () => { archiveNew = null; });\n\tHooks.on(`renderDFChatArchiveNew`, function (app: any, html: JQuery) {\n\t\thtml.find('input[type=\"text\"]')[0].focus();\n\t});\n}\n","import { DFChatArchive } from \"./DFChatArchive\";\nimport SETTINGS from \"../../../common/Settings\";\n\nexport default class DFChatArchiveNew extends FormApplication<FormApplication.Options, { shouldDelete: boolean }> {\n\tstatic readonly PREF_DELETE = 'new-should-delete';\n\tstatic readonly PREF_HIDE_EXPORT = 'hide-export';\n\tstatic get defaultOptions() {\n\t\treturn mergeObject(FormApplication.defaultOptions, {\n\t\t\ttemplate: \"modules/df-chat-enhance/templates/archive-new.hbs\",\n\t\t\tresizable: false,\n\t\t\tminimizable: false,\n\t\t\ttitle: \"DF_CHAT_ARCHIVE.ArchiveNew_Title\".localize()\n\t\t});\n\t}\n\n\tstatic registerSettings() {\n\t\tSETTINGS.register(DFChatArchiveNew.PREF_DELETE, {\n\t\t\tconfig: false,\n\t\t\tscope: 'world',\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t});\n\t}\n\n\tgetData(options?: any) {\n\t\treturn mergeObject(super.getData(options), {\n\t\t\tshouldDelete: SETTINGS.get(DFChatArchiveNew.PREF_DELETE) as boolean\n\t\t});\n\t}\n\n\tasync _updateObject(_event?: any, formData?: any) {\n\t\tSETTINGS.set(DFChatArchiveNew.PREF_DELETE, formData.delete);\n\n\t\tconst name = formData.name;\n\t\tif (!name) {\n\t\t\tui.notifications.warn('DF_CHAT_ARCHIVE.ArchiveNew_ErrorNameMissing'.localize());\n\t\t\tthrow Error('DF_CHAT_ARCHIVE.ArchiveNew_ErrorNameMissing'.localize());\n\t\t}\n\n\t\tlet chats = <ChatMessage[]>[...(ui.chat.collection.values())];\n\n\t\t// If we are selecting a date range\n\t\tif (formData['date-or-all'] === 'date') {\n\t\t\tconst fromDate = new Date(formData.from).getTime();\n\t\t\tconst toDate = new Date(formData.to).getTime();\n\t\t\tif (isNaN(fromDate) || isNaN(toDate)) {\n\t\t\t\tui.notifications.warn('DF_CHAT_ARCHIVE.ArchiveNew_ErrorDatesMissing'.localize());\n\t\t\t\tthrow Error('Missing \"from\" and/or \"to\" dates');\n\t\t\t}\n\t\t\tchats = chats.filter((value) => value.data.timestamp >= fromDate && value.data.timestamp <= toDate);\n\t\t}\n\n\t\tui.notifications.info('DF_CHAT_ARCHIVE.ArchiveNew_NoticeSuccess'.localize().replace('{0}', name));\n\t\ttry {\n\t\t\tawait DFChatArchive.createChatArchive(name, chats, formData['visible']);\n\t\t}\n\t\tcatch (e) {\n\t\t\t// We have failed to create an archive so we should return immediately\n\t\t\treturn;\n\t\t}\n\t\t// If we don't want to delete the messages, return\n\t\tif (!formData.delete) return;\n\n\t\tfor (const chat of chats) {\n\t\t\tchat.delete();\n\t\t}\n\t}\n\n\t_renderInner(data: { shouldDelete: boolean }): Promise<JQuery<HTMLElement>> {\n\t\treturn super._renderInner(data)\n\t\t\t.then((html) => {\n\t\t\t\tconst from = html.find('#dfca-from');\n\t\t\t\tconst to = html.find('#dfca-to');\n\t\t\t\thtml.find('#dfca-all').on('change', () => {\n\t\t\t\t\tfrom.prop('disabled', true);\n\t\t\t\t\tto.prop('disabled', true);\n\t\t\t\t\tthis._recalculateDimensions();\n\t\t\t\t});\n\t\t\t\thtml.find('#dfca-date').on('change', () => {\n\t\t\t\t\tfrom.prop('disabled', false);\n\t\t\t\t\tto.prop('disabled', false);\n\t\t\t\t\tthis._recalculateDimensions();\n\t\t\t\t});\n\t\t\t\treturn html;\n\t\t\t});\n\t}\n}","import { ChatMessageData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs\";\nimport SETTINGS from \"../../../common/Settings\";\n\nexport interface DFChatArchiveEntry {\n\tid: number;\n\tname: string;\n\tvisible: boolean;\n\tfilename: string;\n\tfilepath: string;\n}\n\n\nclass ArchiveFolderMenu extends FormApplication {\n\tstatic get defaultOptions() {\n\t\treturn mergeObject(FormApplication.defaultOptions as Partial<FormApplication.Options>, {\n\t\t\twidth: 400,\n\t\t\theight: 125,\n\t\t\tresizable: false,\n\t\t\tminimizable: false,\n\t\t\ttitle: 'DF_CHAT_ARCHIVE.Settings.ArchiveFolder_Name',\n\t\t\ttemplate: \"modules/df-chat-enhance/templates/archive-folder.hbs\",\n\t\t\tsubmitOnClose: false,\n\t\t\tsubmitOnChange: false,\n\t\t\tcloseOnSubmit: true\n\t\t}) as FormApplication.Options;\n\t}\n\n\tprivate folder = SETTINGS.get<string>(DFChatArchive.PREF_FOLDER);\n\tprivate source = SETTINGS.get<string>(DFChatArchive.PREF_FOLDER_SOURCE);\n\n\tgetData(_options: any): any {\n\t\treturn { path: this.folder };\n\t}\n\n\tasync _renderInner(data: any): Promise<JQuery<HTMLElement>> {\n\t\tconst html = await super._renderInner(data);\n\t\tconst input = html.find('input#dfce-ca-folder-path')[0] as HTMLInputElement;\n\t\thtml.find('label>button').on('click', async event => {\n\t\t\tevent.preventDefault();\n\t\t\tconst fp = new FilePicker(<any>{\n\t\t\t\tcurrent: SETTINGS.get(DFChatArchive.PREF_FOLDER),\n\t\t\t\ttitle: 'DF_CHAT_ARCHIVE.Settings.ArchiveFolder_Name',\n\t\t\t\ttype: 'folder',\n\t\t\t\tfield: input,\n\t\t\t\tcallback: async (path: string) => {\n\t\t\t\t\tthis.source = fp.activeSource;\n\t\t\t\t\tthis.folder = path;\n\t\t\t\t},\n\t\t\t\tbutton: event.currentTarget\n\t\t\t});\n\t\t\tawait fp.browse();\n\t\t});\n\t\treturn html;\n\t}\n\tprotected async _updateObject() {\n\t\tawait SETTINGS.set<string>(DFChatArchive.PREF_FOLDER, this.folder);\n\t\tawait SETTINGS.set<string>(DFChatArchive.PREF_FOLDER_SOURCE, this.source);\n\t}\n}\n\nexport class DFChatArchive {\n\tprivate static readonly PREF_LOGS = 'logs';\n\tprivate static readonly PREF_CID = 'currentId';\n\tstatic readonly PREF_FOLDER = 'archiveFolder';\n\tstatic readonly PREF_FOLDER_SOURCE = 'archiveFolderSource';\n\tprivate static readonly PREF_FOLDER_MENU = 'archiveFolderMenu';\n\tprivate static _updateListener: () => void = null;\n\n\tprivate static get DATA_FOLDER(): FilePicker.DataSource { return SETTINGS.get(DFChatArchive.PREF_FOLDER_SOURCE); }\n\n\tstatic setUpdateListener(listener: () => void) {\n\t\tthis._updateListener = listener;\n\t}\n\n\tstatic registerSettings() {\n\t\tSETTINGS.register(this.PREF_LOGS, {\n\t\t\tscope: 'world',\n\t\t\tconfig: false,\n\t\t\ttype: Object,\n\t\t\tdefault: [],\n\t\t\tonChange: () => {\n\t\t\t\tif (this._updateListener != null)\n\t\t\t\t\tthis._updateListener();\n\t\t\t}\n\t\t});\n\t\tSETTINGS.register(this.PREF_CID, {\n\t\t\tscope: 'world',\n\t\t\tconfig: false,\n\t\t\ttype: Number,\n\t\t\tdefault: 0\n\t\t});\n\n\t\tSETTINGS.registerMenu(this.PREF_FOLDER_MENU, {\n\t\t\tlabel: 'DF_CHAT_ARCHIVE.Settings.ArchiveFolder_Name',\n\t\t\thint: 'DF_CHAT_ARCHIVE.Settings.ArchiveFolder_Hint',\n\t\t\trestricted: true,\n\t\t\ttype: <any>ArchiveFolderMenu\n\t\t});\n\n\t\tSETTINGS.register(this.PREF_FOLDER, {\n\t\t\tscope: 'world',\n\t\t\tconfig: false,\n\t\t\ttype: String,\n\t\t\tdefault: `worlds/${game.world.id}/chat-archive`,\n\t\t\tonChange: async () => {\n\t\t\t\tawait this.createArchiveFolderIfMissing();\n\t\t\t\tif (this._updateListener != null)\n\t\t\t\t\tthis._updateListener();\n\t\t\t}\n\t\t});\n\t\tSETTINGS.register(this.PREF_FOLDER_SOURCE, {\n\t\t\tscope: 'world',\n\t\t\tconfig: false,\n\t\t\ttype: String,\n\t\t\tdefault: 'data',\n\t\t});\n\t\tthis.createArchiveFolderIfMissing();\n\t}\n\n\tprivate static async createArchiveFolderIfMissing() {\n\t\tconst folder: string = SETTINGS.get(this.PREF_FOLDER);\n\t\tawait FilePicker.browse(this.DATA_FOLDER, folder)\n\t\t\t.catch(async _ => {\n\t\t\t\tif (!await FilePicker.createDirectory(this.DATA_FOLDER, folder, {}))\n\t\t\t\t\tthrow new Error('Could not access the archive folder: ' + folder);\n\t\t\t});\n\t}\n\n\tstatic getLogs(): DFChatArchiveEntry[] { return SETTINGS.get<DFChatArchiveEntry[]>(this.PREF_LOGS); }\n\tstatic getArchive(id: number): DFChatArchiveEntry { return this.getLogs().find(x => x.id == id); }\n\tstatic exists(id: number): boolean { return !!this.getLogs().find(x => x.id == id); }\n\n\tprivate static async _generateChatArchiveFile(id: number, name: string, chats: ChatMessage[] | ChatMessageData[], visible: boolean): Promise<DFChatArchiveEntry> {\n\t\t// Get the folder path\n\t\tconst folderPath = SETTINGS.get<string>(this.PREF_FOLDER);\n\t\t// Generate the system safe filename\n\t\tconst fileName = encodeURI(`${id}_${name}.json`);\n\t\t// Create the File and contents\n\t\tconst file = new File([JSON.stringify(chats, null, '')], fileName, { type: 'application/json' });\n\t\tconst response: { path?: string; message?: string } = <any>await FilePicker.upload(this.DATA_FOLDER, folderPath, file);\n\t\tif (!response.path) {\n\t\t\tconsole.error(`Could not create archive ${fileName}\\nReason: ${response}`);\n\t\t\tthrow new Error('Could not upload the archive to server: ' + fileName);\n\t\t}\n\t\tconst entry: DFChatArchiveEntry = {\n\t\t\tid: id,\n\t\t\tname: name,\n\t\t\tvisible: visible,\n\t\t\tfilepath: response.path,\n\t\t\tfilename: fileName\n\t\t};\n\t\treturn entry;\n\t}\n\n\tstatic async createChatArchive(name: string, chats: ChatMessage[], visible: boolean): Promise<DFChatArchiveEntry> {\n\t\tconst newId = SETTINGS.get<number>(this.PREF_CID) + 1;\n\t\tSETTINGS.set(this.PREF_CID, newId);\n\t\tconst entry = await this._generateChatArchiveFile(newId, name, chats, visible);\n\t\tconst logs = SETTINGS.get<DFChatArchiveEntry[]>(this.PREF_LOGS);\n\t\tlogs.push(entry);\n\t\tawait SETTINGS.set(this.PREF_LOGS, logs);\n\t\tif (this._updateListener != null)\n\t\t\tthis._updateListener();\n\t\treturn entry;\n\t}\n\n\tstatic async getArchiveContents(archive: DFChatArchiveEntry): Promise<(ChatMessage | ChatMessageData)[]> {\n\t\tconst response = await fetch(archive.filepath);\n\t\tconst data = await response.json().catch(error => console.error(`Failed to read JSON for archive ${archive.filepath}\\n${error}`));\n\t\tif (response.ok)\n\t\t\treturn data as (ChatMessage | ChatMessageData)[];\n\t\telse\n\t\t\tthrow new Error('Could not access the archive from server side: ' + archive.filepath);\n\t}\n\n\tstatic async updateChatArchive(archive: DFChatArchiveEntry, newChatData?: (ChatMessage | ChatMessageData)[]): Promise<DFChatArchiveEntry> {\n\t\tif (!this.getLogs().find(x => x.id == archive.id))\n\t\t\tthrow new Error('Could not locate an archive for the given ID: ' + archive.id.toString());\n\t\t// If we are updating the contents of an archive\n\t\tif (newChatData) {\n\t\t\tconst folderPath = SETTINGS.get<string>(this.PREF_FOLDER);\n\t\t\tconst file = new File([JSON.stringify(newChatData)], archive.filename, { type: 'application/json' });\n\t\t\tconst response: {\n\t\t\t\tpath?: string;\n\t\t\t\tmessage?: string;\n\t\t\t} = <any>await FilePicker.upload(this.DATA_FOLDER, folderPath, file, {});\n\t\t\tif (!response.path)\n\t\t\t\tthrow new Error('Could not upload the archive to server side: ' + archive.id.toString());\n\t\t}\n\t\tconst logs = this.getLogs();\n\t\tconst idx = logs.findIndex(x => x.id === archive.id);\n\t\tif (idx < 0) return archive;\n\t\tlogs[idx] = archive;\n\t\tawait SETTINGS.set(DFChatArchive.PREF_LOGS, logs);\n\t\treturn archive;\n\t}\n\n\tstatic async deleteAll() {\n\t\tconst folderPath = SETTINGS.get<string>(this.PREF_FOLDER);\n\t\tconst logs = SETTINGS.get<DFChatArchiveEntry[]>(this.PREF_LOGS);\n\t\t// Can not delete files currently, truncate instead to make filtering easier.\n\t\tawait Promise.all(logs.map(archive => {\n\t\t\tconst file = new File([''], archive.filename, { type: 'application/json' });\n\t\t\treturn FilePicker.upload(this.DATA_FOLDER, folderPath, file, {});\n\t\t}));\n\t\tawait SETTINGS.set(this.PREF_LOGS, []);\n\t\tif (this._updateListener != null)\n\t\t\tthis._updateListener();\n\t}\n\n\tstatic async deleteChatArchive(id: number) {\n\t\tconst folderPath = SETTINGS.get<string>(this.PREF_FOLDER);\n\t\tconst logs = SETTINGS.get<DFChatArchiveEntry[]>(this.PREF_LOGS);\n\t\tconst entryIdx = logs.findIndex(x => x.id === id);\n\t\tif (entryIdx < 0) {\n\t\t\tconsole.error(`Could not find entry for ID#${id}`);\n\t\t\treturn;\n\t\t}\n\t\tconst entry = logs[entryIdx];\n\t\t// Cannot delete file currently, instead truncate the file and move along.\n\t\tconst file = new File([''], entry.filename, { type: 'application/json' });\n\t\tawait FilePicker.upload(this.DATA_FOLDER, folderPath, file, {});\n\t\tlogs.splice(entryIdx, 1);\n\t\tawait SETTINGS.set(this.PREF_LOGS, logs);\n\t\tif (this._updateListener != null)\n\t\t\tthis._updateListener();\n\t}\n}\n","\ndeclare global {\n\tinterface LenientGlobalVariableTypes {\n\t\tgame: never;\n\t\tcanvas: never;\n\t}\n\tinterface String {\n\t\t/** Localizes the string via the global `game.i18n.localize()` function. */\n\t\tlocalize(): string\n\t}\n\ttype AnyFunction = (...args: any) => any;\n}\n\nexport default class SETTINGS {\n\tstatic MOD_NAME: string;\n\tstatic init(moduleName: string) {\n\t\tthis.MOD_NAME = moduleName;\n\t\tif (!String.prototype.localize) {\n\t\t\tString.prototype.localize = function () {\n\t\t\t\treturn game.i18n.localize(this.valueOf());\n\t\t\t};\n\t\t}\n\t}\n\tstatic register<T>(key: string, config: ClientSettings.PartialSetting<T>) { game.settings.register(SETTINGS.MOD_NAME, key, config); }\n\tstatic registerMenu(key: string, config: ClientSettings.PartialMenuSetting) { game.settings.registerMenu(SETTINGS.MOD_NAME, key, config); }\n\tstatic get<T>(key: string): T { return <T>game.settings.get(SETTINGS.MOD_NAME, key); }\n\tstatic async set<T>(key: string, value: T): Promise<T> { return await game.settings.set(SETTINGS.MOD_NAME, key, value); }\n\tstatic default<T>(key: string): T { return <T>game.settings.settings.get(SETTINGS.MOD_NAME + '.' + key).default; }\n\t/** helper for referencing a Typed constructor for the `type` field of a setting { type: SETTINGS.typeOf<MyClass>() } */\n\tstatic typeOf<T>(): ConstructorOf<T> { return Object as any; }\n}\n","import SETTINGS from \"../../../common/Settings\";\nimport { DFChatArchive } from \"./DFChatArchive\";\nimport DFChatArchiveViewer from \"./DFChatArchiveViewer\";\n\nexport default class DFChatArchiveManager extends Application {\n\tstatic readonly PREF_REVERSE_SORT = 'dfca-manager-reverseSort';\n\tstatic chatViewers: Map<number, DFChatArchiveViewer> = new Map();\n\n\tstatic get defaultOptions() {\n\t\treturn mergeObject(Application.defaultOptions as Partial<Application.Options>, {\n\t\t\ttemplate: \"modules/df-chat-enhance/templates/archive-manager.hbs\",\n\t\t\tresizable: true,\n\t\t\tminimizable: true,\n\t\t\twidth: 300,\n\t\t\theight: 500,\n\t\t\ttitle: \"DF_CHAT_ARCHIVE.ArchiveManager_Title\".localize()\n\t\t}) as Application.Options;\n\t}\n\n\tgetData(options?: any) {\n\t\tconst data = super.getData(options);\n\t\tlet messages = DFChatArchive.getLogs();\n\t\tif (!game.user.isGM)\n\t\t\tmessages = messages.filter(x => x.visible);\n\t\tmessages = messages.sort((a, b) => a.name.localeCompare(b.name));\n\t\tconst reverseSort = SETTINGS.get<boolean>(DFChatArchiveManager.PREF_REVERSE_SORT);\n\t\tmergeObject(data, {\n\t\t\tmessages: reverseSort ? messages.reverse() : messages,\n\t\t\tisGM: game.user.isGM,\n\t\t\treverseSort\n\t\t});\n\t\treturn data;\n\t}\n\n\tprivate _subscribeView(element: JQuery) {\n\t\telement.on('click', function () {\n\t\t\tconst id = parseInt($(this).attr('data-id'));\n\t\t\tif (isNaN(id) || !DFChatArchive.exists(id)) {\n\t\t\t\tui.notifications.error('DF_CHAT_ARCHIVE.ArchiveManager_ErrorBadId'.localize());\n\t\t\t\tthrow Error(`Invalid id for Chat Archive: '${$(this).attr('data-id')}'`);\n\t\t\t}\n\t\t\tif (DFChatArchiveManager.chatViewers.has(id)) {\n\t\t\t\tDFChatArchiveManager.chatViewers.get(id).bringToTop();\n\t\t\t} else {\n\t\t\t\tDFChatArchiveManager.chatViewers.set(id, new DFChatArchiveViewer(DFChatArchive.getArchive(id), view => {\n\t\t\t\t\tDFChatArchiveManager.chatViewers.delete(view.archive.id);\n\t\t\t\t}));\n\t\t\t\tDFChatArchiveManager.chatViewers.get(id).render(true);\n\t\t\t}\n\t\t});\n\t}\n\tprivate _subscribeDelete(element: JQuery) {\n\t\telement.on('click', async function () {\n\t\t\tconst id = parseInt($(this).attr('data-id'));\n\t\t\tif (isNaN(id) || !DFChatArchive.exists(id)) {\n\t\t\t\tui.notifications.error('DF_CHAT_ARCHIVE.ArchiveManager_ErrorBadId'.localize());\n\t\t\t\tthrow Error(`Invalid id for Chat Archive: '${$(this).attr('data-id')}'`);\n\t\t\t}\n\t\t\tconst archive = DFChatArchive.getArchive(id);\n\t\t\tawait Dialog.confirm({\n\t\t\t\ttitle: 'DF_CHAT_ARCHIVE.ArchiveManager_ConfirmDeleteArchiveTitle'.localize(),\n\t\t\t\tcontent: 'DF_CHAT_ARCHIVE.ArchiveManager_ConfirmDeleteArchiveContent'.localize().replace('{name}', archive.name),\n\t\t\t\tdefaultYes: false,\n\t\t\t\tyes: async () => await DFChatArchive.deleteChatArchive(id)\n\t\t\t});\n\t\t});\n\t}\n\n\tactivateListeners(html: JQuery) {\n\t\tDFChatArchive.setUpdateListener(this._archiveChanged.bind(this));\n\t\tif (DFChatArchive.getLogs().length > 0)\n\t\t\thtml.find('p.dfca-no-items').hide();\n\t\thtml.find('a[data-type=\"view\"]').each((i, element) => { this._subscribeView($(element)); });\n\t\thtml.find('a[data-type=\"delete\"]').each((i, element) => { this._subscribeDelete($(element)); });\n\t\thtml.find('#dfca-delete-all').on('click', async function () {\n\t\t\tawait Dialog.confirm({\n\t\t\t\ttitle: 'DF_CHAT_ARCHIVE.ArchiveManager_ConfirmDeleteAllTitle'.localize(),\n\t\t\t\tcontent: 'DF_CHAT_ARCHIVE.ArchiveManager_ConfirmDeleteAllMessage1'.localize(),\n\t\t\t\tdefaultYes: false,\n\t\t\t\tyes: async () => {\n\t\t\t\t\tawait Dialog.confirm({\n\t\t\t\t\t\ttitle: 'DF_CHAT_ARCHIVE.ArchiveManager_ConfirmDeleteAllTitle'.localize(),\n\t\t\t\t\t\tcontent: 'DF_CHAT_ARCHIVE.ArchiveManager_ConfirmDeleteAllMessage2'.localize(),\n\t\t\t\t\t\tdefaultYes: false,\n\t\t\t\t\t\tyes: async () => {\n\t\t\t\t\t\t\tawait DFChatArchive.deleteAll();\n\t\t\t\t\t\t\tui.notifications.info('DF_CHAT_ARCHIVE.ArchiveManager_ConfirmDeleteAllComplete'.localize());\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tconst asc = html.find('#dfca-sort-asc');\n\t\tconst dsc = html.find('#dfca-sort-dsc');\n\t\tasc.on('click', async () => {\n\t\t\tawait SETTINGS.set(DFChatArchiveManager.PREF_REVERSE_SORT, true);\n\t\t\tasc.hide();\n\t\t\tdsc.show();\n\t\t\tthis.render();\n\t\t});\n\t\tdsc.on('click', async () => {\n\t\t\tawait SETTINGS.set(DFChatArchiveManager.PREF_REVERSE_SORT, false);\n\t\t\tdsc.hide();\n\t\t\tasc.show();\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\tclose(options?: any): Promise<void> {\n\t\tDFChatArchive.setUpdateListener(null);\n\t\treturn super.close(options);\n\t}\n\n\tprivate async _archiveChanged() {\n\t\tlet logs = DFChatArchive.getLogs();\n\t\tif (!game.user.isGM)\n\t\t\tlogs = logs.filter(x => x.visible);\n\t\tconst archiveContainer = this.element.find('#dfca-archives');\n\t\tarchiveContainer.empty();\n\t\t// Add new items\n\t\tfor (const archive of logs) {\n\t\t\tconst visible = archive.visible === true\n\t\t\t\t? `<i class=\"dfca-visible fas fa-users\" title=\"${'DF_CHAT_ARCHIVE.ArchiveManager_VisibleToPlayers'.localize()}\"></i>` : '';\n\t\t\tconst html = $(`\n\t\t<li class=\"dfca-archive-item\" data-id=\"${archive.id}\">\n\t\t\t<div>\n\t\t\t\t<a class=\"button dfca-view\" data-type=\"view\" data-id=\"${archive.id}\"><i class=\"fas fa-eye\"></i>\n\t\t\t\t\t<span>${archive.name}</span>\n\t\t\t\t</a>\n\t\t\t\t${visible}\n\t\t\t\t<a class=\"button dfca-delete\" data-type=\"delete\" data-id=\"${archive.id}\"><i class=\"fas fa-trash\"></i></a>\n\t\t\t</div>\n\t\t</li>`);\n\t\t\tthis._subscribeView(html.find('a[data-type=\"view\"]'));\n\t\t\tthis._subscribeDelete(html.find('a[data-type=\"delete\"]'));\n\t\t\tarchiveContainer.append(html);\n\t\t}\n\t\tif (archiveContainer[0].children.length == 0)\n\t\t\tthis.element.find('p.dfca-no-items').show();\n\t\telse\n\t\t\tthis.element.find('p.dfca-no-items').hide();\n\t}\n}","import { ChatMessageData } from '@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs';\nimport { DFChatArchive, DFChatArchiveEntry } from './DFChatArchive';\n\nexport default class DFChatArchiveViewer extends Application {\n\tarchive: DFChatArchiveEntry;\n\tmessages: (ChatMessage | ChatMessageData)[];\n\tonCloseCallBack: (view: DFChatArchiveViewer) => void;\n\tconstructor(archive: DFChatArchiveEntry, onCloseCallBack: (view: DFChatArchiveViewer) => void) {\n\t\tsuper();\n\t\tthis.archive = archive;\n\t\tthis.onCloseCallBack = onCloseCallBack;\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn mergeObject(Application.defaultOptions as Partial<Application.Options>, {\n\t\t\ttemplate: \"modules/df-chat-enhance/templates/archive-viewer.hbs\",\n\t\t\twidth: 300,\n\t\t\theight: 500,\n\t\t\tresizable: true,\n\t\t\ttitle: 'DF_CHAT_ARCHIVE.ArchiveViewer_Title',\n\t\t\tclasses: ['df-chat-log-window']\n\t\t}) as Application.Options;\n\t}\n\n\tgetData(options = {}) {\n\t\tsuper.getData(options);\n\t\treturn {\n\t\t\tname: this.archive.name,\n\t\t\tisGM: game.user.isGM,\n\t\t\tvisible: this.archive.visible ?? false,\n\t\t\tlogId: 'df-chat-log-' + this.archive.id\n\t\t};\n\t}\n\n\t_renderInner(data: any): Promise<JQuery> {\n\t\treturn (super._renderInner(data) as Promise<JQuery>)\n\t\t\t.then(async (html: JQuery<HTMLElement>) => {\n\t\t\t\thtml.find(\"#visible-df-chat-log-\" + this.archive.id).on('change', async (element) => {\n\t\t\t\t\tthis.archive.visible = (element.target as HTMLInputElement).checked;\n\t\t\t\t\tawait DFChatArchive.updateChatArchive(this.archive);\n\t\t\t\t});\n\t\t\t\thtml.find(\"#edit\").on('click', async () => {\n\t\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\t\tconst dialog = new Dialog({\n\t\t\t\t\t\t\ttitle: \"DF_CHAT_ARCHIVE.ArchiveViewer_NameEdit_Title\".localize(),\n\t\t\t\t\t\t\tcontent: `<input id=\"name\" type=\"text\" value=\"${this.archive.name}\"/>`,\n\t\t\t\t\t\t\tbuttons: {\n\t\t\t\t\t\t\t\tsave: {\n\t\t\t\t\t\t\t\t\ticon: '<i class=\"fas fa-save\"></i>',\n\t\t\t\t\t\t\t\t\tlabel: 'DF_CHAT_ARCHIVE.ArchiveViewer_NameEdit_Save'.localize(),\n\t\t\t\t\t\t\t\t\tcallback: async (html) => {\n\t\t\t\t\t\t\t\t\t\tthis.archive.name = $(html).find('#name').val() as string;\n\t\t\t\t\t\t\t\t\t\tawait dialog.close();\n\t\t\t\t\t\t\t\t\t\tawait DFChatArchive.updateChatArchive(this.archive);\n\t\t\t\t\t\t\t\t\t\tawait this.render(false);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tclose: {\n\t\t\t\t\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\t\t\t\t\tlabel: 'DF_CHAT_ARCHIVE.ArchiveViewer_NameEdit_Cancel'.localize(),\n\t\t\t\t\t\t\t\t\tcallback: async () => {\n\t\t\t\t\t\t\t\t\t\tawait dialog.close();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdefault: 'save'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdialog.render(true);\n\t\t\t\t\t}, 1);\n\t\t\t\t});\n\t\t\t\thtml.find('#print').on('click', async () => {\n\t\t\t\t\tconst clone = html.find('#df-chat-log').clone();\n\t\t\t\t\tclone.addClass('df-chat-print');\n\t\t\t\t\t$('body').hide();\n\t\t\t\t\t$('html').addClass('df-chat-print');\n\t\t\t\t\t$('html').append(clone);\n\t\t\t\t\twindow.print();\n\t\t\t\t\tclone.remove();\n\t\t\t\t\t$('html').removeClass('df-chat-print');\n\t\t\t\t\t$('body').show();\n\t\t\t\t});\n\t\t\t\thtml.find('#merge').on('click', async () => {\n\t\t\t\t\tif (DFChatArchive.getLogs().length == 1) {\n\t\t\t\t\t\tui.notifications.info('DF_CHAT_ARCHIVE.ArchiveViewer_Merge_OnlyOneArchive'.localize());\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst dialog: Dialog = new Dialog({\n\t\t\t\t\t\ttitle: 'DF_CHAT_ARCHIVE.ArchiveViewer_Merge_Title'.localize(),\n\t\t\t\t\t\tdefault: 'merge',\n\t\t\t\t\t\tcontent: await renderTemplate('modules/df-chat-enhance/templates/archive-merge.hbs', {\n\t\t\t\t\t\t\tname: this.archive.name,\n\t\t\t\t\t\t\tarchives: DFChatArchive.getLogs().filter(x => x.id != this.archive.id)\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tbuttons: {\n\t\t\t\t\t\t\tcancel: {\n\t\t\t\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\t\t\t\tlabel: 'DF_CHAT_ARCHIVE.ArchiveViewer_Merge_Cancel'.localize(),\n\t\t\t\t\t\t\t\tcallback: async () => await dialog.close()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmerge: {\n\t\t\t\t\t\t\t\ticon: '<i class=\"fas fa-sitemap\"></i>',\n\t\t\t\t\t\t\t\tlabel: 'DF_CHAT_ARCHIVE.ArchiveViewer_Merge_Merge'.localize(),\n\t\t\t\t\t\t\t\tcallback: async (html) => {\n\t\t\t\t\t\t\t\t\tconst val = $(html).find('#archive').val() as string;\n\t\t\t\t\t\t\t\t\tif (isNaN(parseInt(val))) return;\n\t\t\t\t\t\t\t\t\tconst id = parseInt(val);\n\t\t\t\t\t\t\t\t\tconst source = DFChatArchive.getLogs().find(x => x.id == id);\n\t\t\t\t\t\t\t\t\tconst currentChats = await DFChatArchive.getArchiveContents(this.archive);\n\t\t\t\t\t\t\t\t\tconst sourceChats = await DFChatArchive.getArchiveContents(source);\n\t\t\t\t\t\t\t\t\tconst mergedChats = (currentChats as ChatMessageData[])\n\t\t\t\t\t\t\t\t\t\t.concat(sourceChats as ChatMessageData[])\n\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.timestamp - b.timestamp);\n\t\t\t\t\t\t\t\t\tDFChatArchive.updateChatArchive(this.archive, mergedChats);\n\t\t\t\t\t\t\t\t\tthis.render(false);\n\t\t\t\t\t\t\t\t\tif (($(html).find('#delete')[0] as HTMLInputElement).checked) {\n\t\t\t\t\t\t\t\t\t\tDFChatArchive.deleteChatArchive(id);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tawait dialog.render(true);\n\t\t\t\t});\n\n\t\t\t\thtml.find('#html').on('click', () => {\n\t\t\t\t\tconst data = $('<div></div>').append(html.find('#df-chat-log').clone()).html();\n\t\t\t\t\tconst anchor = document.createElement('a');\n\t\t\t\t\tanchor.download = encodeURI(this.archive.name) + '.html';\n\t\t\t\t\tanchor.href = \"data:text/html;base64,\" + btoa(data);\n\t\t\t\t\tanchor.click();\n\t\t\t\t});\n\n\t\t\t\tconst log = html.find('#df-chat-log');\n\t\t\t\tconst messageHtml = [];\n\t\t\t\tthis.messages = await DFChatArchive.getArchiveContents(this.archive);\n\t\t\t\tconst deletionList: string[] = [];\n\t\t\t\tconst deleteButton = html.find('#dfal-save-changes');\n\t\t\t\tfor (const value of this.messages as ChatMessageData[]) {\n\t\t\t\t\tconst chatMessage = value instanceof ChatMessage ? value : new ChatMessage(value);\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tconst html = await chatMessage.getHTML();\n\t\t\t\t\t\t// if we only have 1 message, don't allow it to be deleted. They might as well just delete the archive\n\t\t\t\t\t\tif (this.messages.length == 1)\n\t\t\t\t\t\t\thtml.find('a.message-delete').hide();\n\t\t\t\t\t\thtml.find('a.message-delete').on('click', (event: JQuery.ClickEvent) => {\n\t\t\t\t\t\t\tconst messageHtml = $(event.target.parentElement?.parentElement?.parentElement?.parentElement);\n\t\t\t\t\t\t\tconst buttonIcon = $(event.target);\n\t\t\t\t\t\t\tif (messageHtml.hasClass('dfal-deleted')) {\n\t\t\t\t\t\t\t\tmessageHtml.removeClass('dfal-deleted');\n\t\t\t\t\t\t\t\tbuttonIcon.removeClass('fa-redo-alt');\n\t\t\t\t\t\t\t\tbuttonIcon.addClass('fa-trash');\n\t\t\t\t\t\t\t\tdeletionList.splice(deletionList.findIndex(x => x === messageHtml.attr('data-message-id')), 1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmessageHtml.addClass('dfal-deleted');\n\t\t\t\t\t\t\t\tbuttonIcon.removeClass('fa-trash');\n\t\t\t\t\t\t\t\tbuttonIcon.addClass('fa-redo-alt');\n\t\t\t\t\t\t\t\tdeletionList.push(messageHtml.attr('data-message-id'));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (deletionList.length > 0) deleteButton.show();\n\t\t\t\t\t\t\telse deleteButton.hide();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tmessageHtml.push(html);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error(`Chat message ${chatMessage.id} failed to render.\\n${err})`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Prepend the HTML\n\t\t\t\tlog.prepend(messageHtml);\n\n\t\t\t\tdeleteButton.hide();\n\t\t\t\tdeleteButton.on('click', async () => {\n\t\t\t\t\tconsole.log(deletionList);\n\t\t\t\t\tif (deletionList.length === this.messages.length) {\n\t\t\t\t\t\tui.notifications.warn('DF_CHAT_ARCHIVE.ArchiveViewer_Error_Delete_All'.localize());\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tDialog.confirm({\n\t\t\t\t\t\ttitle: \"DF_CHAT_ARCHIVE.ArchiveViewer_DeleteTitle\".localize(),\n\t\t\t\t\t\tcontent: \"DF_CHAT_ARCHIVE.ArchiveViewer_DeleteContent\".localize(),\n\t\t\t\t\t\tdefaultYes: false,\n\t\t\t\t\t\tyes: async () => {\n\t\t\t\t\t\t\tfor (const id of deletionList) {\n\t\t\t\t\t\t\t\tconst message = html.find(`li[data-message-id=\"${id}\"]`);\n\t\t\t\t\t\t\t\tmessage.hide(500, () => message.remove());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.messages = this.messages.filter((x: any) => !deletionList.includes(x._id));\n\t\t\t\t\t\t\tawait DFChatArchive.updateChatArchive(this.archive, this.messages);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\treturn html;\n\t\t\t});\n\t}\n\tclose(options?: Application.CloseOptions): Promise<void> {\n\t\tthis.onCloseCallBack(this);\n\t\treturn super.close(options);\n\t}\n}","import SETTINGS from \"../../../common/Settings\";\nimport DFChatEditor from './DFChatEditor';\n\nconst PREF_EDIT_ALLOWED = 'edit-allowed';\nconst PREF_GM_ALL = 'gm-edit-all';\nconst PREF_IGNORE_HTML = 'edit-ignore-html';\n\nexport default class DFChatEdit {\n\tstatic ready() {\n\t\tSETTINGS.register(DFChatEditor.PREF_MARKDOWN, {\n\t\t\tname: 'DF_CHAT_EDIT.Settings_MarkdownName',\n\t\t\thint: 'DF_CHAT_EDIT.Settings_MarkdownHint',\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t\tconfig: true,\n\t\t\tscope: 'world'\n\t\t});\n\t\tSETTINGS.register(PREF_EDIT_ALLOWED, {\n\t\t\tname: 'DF_CHAT_EDIT.Settings_AllowEditName',\n\t\t\thint: 'DF_CHAT_EDIT.Settings_AllowEditHint',\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t\tscope: 'world',\n\t\t\tconfig: true\n\t\t});\n\t\tSETTINGS.register(PREF_GM_ALL, {\n\t\t\tname: 'DF_CHAT_EDIT.Settings_GMEditAllName',\n\t\t\thint: 'DF_CHAT_EDIT.Settings_GMEditAllHint',\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t\tconfig: true,\n\t\t\tscope: 'world'\n\t\t});\n\t\tSETTINGS.register(PREF_IGNORE_HTML, {\n\t\t\tname: 'DF_CHAT_EDIT.Settings_IgnoreHtmlName',\n\t\t\thint: 'DF_CHAT_EDIT.Settings_IgnoreHtmlHint',\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t\tconfig: true,\n\t\t\tscope: 'world'\n\t\t});\n\n\t\tlibWrapper.register(SETTINGS.MOD_NAME, 'ChatLog.prototype._onChatKeyDown', (wrapper: (..._: any) => void, ...args: any) => {\n\t\t\tconst event = args[0] as KeyboardEvent;\n\t\t\tconst code = game.keyboard.getKey(event);\n\t\t\t// We have used the Shift+Up combo to edit previously sent message\n\t\t\tif (code === \"ArrowUp\" && event.ctrlKey) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tlet messages = <ChatMessage[]>[...(ui.chat.collection.values())];\n\t\t\t\t// Perform an inverted sort ( n<0 before, n=0 same, n>0 after )\n\t\t\t\tmessages = messages.sort((a, b) => b.data.timestamp - a.data.timestamp);\n\t\t\t\tconst message = messages.find(x => x.data.user === game.user.id);\n\t\t\t\tif (!message) return;\n\t\t\t\tDFChatEdit.editChatMessage.bind(message)();\n\t\t\t}\n\t\t\telse\n\t\t\t\twrapper(...args);\n\t\t}, 'MIXED');\n\n\t\tlibWrapper.register(SETTINGS.MOD_NAME, 'ChatLog.prototype.processMessage', function (this: ChatLog, wrapper: AnyFunction, message: string) {\n\t\t\tlet originalMessage: string = null;\n\t\t\tif (SETTINGS.get(DFChatEditor.PREF_MARKDOWN) && !message.trim().startsWith('/')) {\n\t\t\t\t[originalMessage, message] = DFChatEditor.processMarkdown(message);\n\t\t\t}\n\t\t\tconst result = wrapper(message);\n\t\t\tif (originalMessage) {\n\t\t\t\tthis._sentMessages.splice(0, 1);\n\t\t\t\tthis._sentMessages.unshift(originalMessage);\n\t\t\t}\n\t\t\treturn result;\n\t\t}, 'WRAPPER');\n\t}\n\n\tstatic appendChatContextMenuOptions(options: ContextMenu.Item[]) {\n\t\toptions.push({\n\t\t\tname: 'DF_CHAT_EDIT.ContextOption',\n\t\t\ticon: '<i class=\"fas fa-pencil-alt\"></i>',\n\t\t\tcondition: (header) => {\n\t\t\t\tconst chatData: ChatMessage = ui.chat.collection.get($(header).attr('data-message-id'));\n\t\t\t\treturn this.processChatMessage(chatData);\n\t\t\t},\n\t\t\tcallback: (header) => {\n\t\t\t\tconst chatData = ui.chat.collection.get($(header).attr('data-message-id'));\n\t\t\t\tDFChatEdit.editChatMessage.bind(chatData)();\n\t\t\t\treturn {};\n\t\t\t}\n\t\t});\n\t}\n\n\t// Will be bound to the instance of ChatMessage we are observing\n\tstatic editChatMessage(this: ChatMessage) {\n\t\t// Double check permissions\n\t\tif (!SETTINGS.get(PREF_EDIT_ALLOWED)) {\n\t\t\tui.notifications.warn('DF_CHAT_EDIT.Error_NoPermission'.localize());\n\t\t\treturn;\n\t\t}\n\t\tif ((<any>this).chatEditor) {\n\t\t\t(<any>this).chatEditor.bringToTop();\n\t\t} else {\n\t\t\t(<any>this).chatEditor = new DFChatEditor(this);\n\t\t\t(<any>this).chatEditor.render(true);\n\t\t}\n\t}\n\n\tstatic isHTML(str: string): boolean {\n\t\tconst doc = new DOMParser().parseFromString(str, \"text/html\");\n\t\treturn Array.from(doc.body.childNodes).some(node => {\n\t\t\treturn (node instanceof HTMLElement && !node.classList.contains('df-edited'))\n\t\t\t\t&& !(node instanceof HTMLBRElement)\n\t\t\t\t&& node.nodeType === 1;\n\t\t});\n\t}\n\n\tstatic processChatMessage(chatMessage: ChatMessage/*, html: JQuery<HTMLElement>*/): boolean {\n\t\t// If we are catching the render of an archived message\n\t\tif (!ui.chat.collection.has(chatMessage.id))\n\t\t\treturn false;\n\t\t// // If an edit button has already been placed\n\t\t// if (html.find('a.button.message-edit').length != 0) {\n\t\t// \thtml.find('a.button.message-edit').remove();// remove the old edit button\n\t\t// }\n\t\t// Ignore rolls and other people's messages, unless we are the GM and PREF_GM_ALL is true\n\t\tif (!SETTINGS.get(PREF_EDIT_ALLOWED) || chatMessage.isRoll\n\t\t\t|| (chatMessage.data.user !== game.userId && !(game.user.isGM && SETTINGS.get(PREF_GM_ALL))))\n\t\t\treturn false;\n\t\t// If we ignore html and message contains html, return\n\t\tif (SETTINGS.get(PREF_IGNORE_HTML) && DFChatEdit.isHTML(chatMessage.data.content)) return false;\n\n\t\treturn true;\n\t\t// const header = html.find('header.message-header');\n\t\t// const editButton = $(`<a class=\"button message-edit\"><i class=\"fas fa-pencil-alt\"></i></a>`);\n\t\t// header.prepend(editButton);\n\t\t// editButton.on('click', DFChatEdit.editChatMessage.bind(chatMessage));\n\t}\n}","import SETTINGS from \"../../../common/Settings\";\n\n\ndeclare namespace marked {\n\tfunction parse(md: string, options: any): string;\n}\n\nexport default class DFChatEditor extends FormApplication {\n\tprivate chatMessage: ChatMessage;\n\tpublic static readonly PREF_MARKDOWN = 'edit-markdown';\n\n\t/**\n\t * Assign the default options which are supported by the entity edit sheet.\n\t * @returns The default options for this FormApplication class\n\t * @override\n\t * @see {@link Application.defaultOptions}\n\t */\n\tstatic get defaultOptions(): FormApplication.Options {\n\t\treturn mergeObject(FormApplication.defaultOptions as Partial<FormApplication.Options>, {\n\t\t\tcloseOnSubmit: true,\n\t\t\teditable: true,\n\t\t\tresizable: true,\n\t\t\twidth: 400,\n\t\t\tpopOut: true,\n\t\t\ttitle: 'DF_CHAT_EDIT.Editor_Title',\n\t\t\ttemplate: 'modules/df-chat-enhance/templates/chat-edit.hbs'\n\t\t}) as FormApplication.Options;\n\t}\n\n\tconstructor(chatMessage: ChatMessage) {\n\t\tsuper({});\n\t\tthis.chatMessage = chatMessage;\n\t}\n\n\t/** @override */\n\tgetData(options?: any): any {\n\t\treturn mergeObject(options, {\n\t\t\tmessageText: this.chatMessage.data.content\n\t\t\t\t.replace(/< *br *\\/?>/gm, '\\n')\n\t\t\t\t.replace(/<p +class=\"df-edited\">.+/, '')\n\t\t});\n\t}\n\n\t/** @override */\n\tactivateListeners(html: JQuery): void {\n\t\tsuper.activateListeners(html);\n\t\thtml.find('#cancel').on('click', async () => await this.close());\n\t}\n\n\t/** @override */\n\tasync _updateObject(_event?: any, formData?: any) {\n\t\tlet data = formData.content as string;\n\t\tif (SETTINGS.get(DFChatEditor.PREF_MARKDOWN)) {\n\t\t\tdata = DFChatEditor.processMarkdown(data)[1];\n\t\t} else {\n\t\t\tdata = data.replace(/\\r?\\n/gm, '<br/>');\n\t\t}\n\t\tif (data.search(/<p +class=\"df-edited\">/) < 0) {\n\t\t\tdata += `<p class=\"df-edited\">${'DF_CHAT_EDIT.EditedFlag'.localize()}</p>`;\n\t\t}\n\t\tthis.chatMessage.update({\n\t\t\tcontent: data\n\t\t});\n\t}\n\t/** @override */\n\tclose(options?: FormApplication.CloseOptions) {\n\t\tdelete (<any>this.chatMessage).chatEditor;\n\t\treturn super.close(options);\n\t}\n\n\tpublic static processMarkdown(message: string) {\n\t\tconst originalMessage = message;\n\t\tmessage = marked.parse(message, {\n\t\t\theaderIds: false,\n\t\t\tbreaks: true\n\t\t}).trimEnd();\n\t\tif (message.startsWith('<p>'))\n\t\t\tmessage = message.substr(3);\n\t\tif (message.endsWith('</p>'))\n\t\t\tmessage = message.substr(0, message.length - 4);\n\t\tconst newLine = /(<\\/?[ a-z]+>)\\n(<\\/?[ a-z]+>?)/;\n\t\twhile (newLine.test(message))\n\t\t\tmessage = message.replace(newLine, '$1$2');\n\t\treturn [originalMessage, message];\n\t}\n}","import DFAdventureLogConfig from \"./DFAdventureLogConfig\";\nimport DFAdventureLogProcessor from \"./DFAdventureLogProcessor\";\n\n\ninterface AdventurLogApi {\n\tevent(message: string, postToChat?: boolean): Promise<void>\n\tgmevent(message: string, postToChat?: boolean): Promise<void>\n\tquote(speaker: string, message: string, postToChat?: boolean): Promise<void>\n\tgmquote(speaker: string, message: string, postToChat?: boolean): Promise<void>\n}\ndeclare global {\n\tconst AdventureLog: AdventurLogApi;\n}\n\nexport function init() {\n\tconst api: AdventurLogApi = {\n\t\tevent: (async function (message: string, postToChat = false) {\n\t\t\tDFAdventureLogProcessor.commandProcessor('event ' + message, false, !postToChat);\n\t\t}).bind(DFAdventureLogProcessor),\n\n\t\tgmevent: (async function (message: string, postToChat = false) {\n\t\t\tif (game.user.isGM)\n\t\t\t\tDFAdventureLogProcessor.commandProcessor('event ' + message, true, !postToChat);\n\t\t\telse ui.notifications.warn(\"DF_CHAT_LOG.Error.ApiLog_NotGm\".localize());\n\t\t}).bind(DFAdventureLogProcessor),\n\n\t\tquote: (async function (speaker: string, message: string, postToChat = false) {\n\t\t\tDFAdventureLogProcessor.commandProcessor(`quote \"${speaker}\" ${message}`, false, !postToChat);\n\t\t}).bind(DFAdventureLogProcessor),\n\n\t\tgmquote: (async function (speaker: string, message: string, postToChat = false) {\n\t\t\tif (game.user.isGM)\n\t\t\t\tDFAdventureLogProcessor.commandProcessor(`quote \"${speaker}\" ${message}`, true, !postToChat);\n\t\t\telse ui.notifications.warn(\"DF_CHAT_LOG.Error.ApiLog_NotGm\".localize());\n\t\t}).bind(DFAdventureLogProcessor)\n\t};\n\t// @ts-expect-error\n\twindow.AdventureLog = api;\n}\nexport function ready() {\n\tif (!game.modules.get('lib-wrapper')?.active) return;\n\tDFAdventureLogConfig.setupSettings();\n\tDFAdventureLogProcessor.setupSettings();\n}","import SETTINGS from \"../../../common/Settings\";\nimport DFAdventureLogProcessor from \"./DFAdventureLogProcessor\";\n\n\nexport default class DFAdventureLogConfig extends FormApplication {\n\tstatic readonly PREF_JOURNAL = 'log-journal';\n\tstatic readonly PREF_JOURNAL_GM = 'gmlog-journal';\n\tstatic readonly PREF_CONFIG = 'log-config-menu';\n\n\tstatic get defaultOptions() {\n\t\treturn mergeObject(FormApplication.defaultOptions as Partial<FormApplication.Options>, {\n\t\t\ttemplate: \"modules/df-chat-enhance/templates/log-config.hbs\",\n\t\t\tresizable: false,\n\t\t\tminimizable: false,\n\t\t\ttitle: \"DF_CHAT_LOG.Config_Title\".localize()\n\t\t}) as FormApplication.Options;\n\t}\n\n\tstatic setupSettings() {\n\t\tSETTINGS.register(DFAdventureLogConfig.PREF_JOURNAL, {\n\t\t\tscope: 'world',\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t\tconfig: false\n\t\t});\n\t\tSETTINGS.register(DFAdventureLogConfig.PREF_JOURNAL_GM, {\n\t\t\tscope: 'world',\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t\tconfig: false\n\t\t});\n\t\tSETTINGS.registerMenu(DFAdventureLogConfig.PREF_CONFIG, {\n\t\t\trestricted: true,\n\t\t\ttype: DFAdventureLogConfig,\n\t\t\tlabel: \"DF_CHAT_LOG.Config_Title\",\n\t\t\ticon: 'fas fa-edit'\n\t\t});\n\t}\n\n\tgetData(options?: any) {\n\t\tconst data = super.getData(options);\n\t\tconst keys = game.journal.keys();\n\t\tconst selectedLog = SETTINGS.get(DFAdventureLogConfig.PREF_JOURNAL) as string;\n\t\tconst selectedGMLog = SETTINGS.get(DFAdventureLogConfig.PREF_JOURNAL_GM) as string;\n\t\tlet logJournals = [];\n\t\tlet gmlogJournals = [];\n\t\tfor (const key of keys) {\n\t\t\tlogJournals.push({\n\t\t\t\tid: key,\n\t\t\t\tname: game.journal.get(key).data.name,\n\t\t\t\tselected: key === selectedLog\n\t\t\t});\n\t\t\tgmlogJournals.push({\n\t\t\t\tid: key,\n\t\t\t\tname: game.journal.get(key).data.name,\n\t\t\t\tselected: key === selectedGMLog\n\t\t\t});\n\t\t}\n\t\tlogJournals = logJournals.sort((a, b) => a.name.localeCompare(b.name));\n\t\tgmlogJournals = gmlogJournals.sort((a, b) => a.name.localeCompare(b.name));\n\n\t\tmergeObject(data as any, {\n\t\t\tlogJournals: logJournals,\n\t\t\tgmlogJournals: gmlogJournals,\n\t\t});\n\t\treturn data;\n\t}\n\n\tasync _updateObject(_event?: any, formData?: any) {\n\t\tconst logJournal = formData['dfal-journal'];\n\t\tconst gmlogJournal = formData['dfal-journal-gm'];\n\t\tconst clear = formData['dfal-clear'];\n\t\tconst gmClear = formData['dfal-clear-gm'];\n\t\tSETTINGS.set(DFAdventureLogConfig.PREF_JOURNAL, logJournal);\n\t\tSETTINGS.set(DFAdventureLogConfig.PREF_JOURNAL_GM, gmlogJournal);\n\t\tawait DFAdventureLogConfig.initializeJournal(logJournal, clear, false);\n\t\tawait DFAdventureLogConfig.initializeJournal(gmlogJournal, gmClear, true);\n\t}\n\n\tstatic async initializeJournal(id: string, clear: boolean, isGMOnly: boolean) {\n\t\tif (!game.journal.has(id)) return;\n\t\tconst journal = game.journal.get(id);\n\t\tif (clear || journal.data.content === null)\n\t\t\tjournal.data.content = '';\n\t\tconst html = $(journal.data.content);\n\t\tconst article = html.find('article[class=\"df-adventure-log\"]');\n\t\tif (article.length != 0) {\n\t\t\tawait DFAdventureLogProcessor.resortLog();\n\t\t\treturn;\n\t\t}\n\t\tawait journal.update({\n\t\t\tcontent: journal.data.content + `\n\t\t\t<section>\n\t\t\t\t<h2>${game.i18n.localize(isGMOnly ? 'DF_CHAT_LOG.GMLog_Header' : 'DF_CHAT_LOG.Log_Header')}</h2>\n\t\t\t\t<section class=\"df-adventure-log\"></section>\n\t\t\t\t<hr />\n\t\t\t</section>\n\t\t\t`\n\t\t});\n\t}\n}","\nimport { ChatMessageDataConstructorData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs/chatMessageData\";\nimport SETTINGS from \"../../../common/Settings\";\nimport DFAdventureLogConfig from './DFAdventureLogConfig';\n\ndeclare global {\n\tnamespace SimpleCalendar.api {\n\t\tfunction formatDateTime(time: {\n\t\t\tyear: number,\n\t\t\tmonth: number,\n\t\t\tday: number,\n\t\t\thour: number,\n\t\t\tminute: number,\n\t\t\tsecond: number\n\t\t}): { date: string, time: string }\n\t\tfunction timestamp(): number\n\t\tfunction timestampToDate(timestamp: number): {\n\t\t\tyear: number,\n\t\t\tmonth: number,\n\t\t\tday: number,\n\t\t\thour: number,\n\t\t\tminute: number,\n\t\t\tsecond: number\n\t\t}\n\t}\n}\n\ndeclare global {\n\tinterface String {\n\t\ttrimStart(): string\n\t}\n}\nif (!String.prototype.trimStart) {\n\tString.prototype.trimStart = function () {\n\t\tconst whitespace = [' ', '\\n', '\\r'];\n\t\tlet index = -1;\n\t\tfor (let c = 0; c < this.length; c++) {\n\t\t\tif (whitespace.every(x => x !== this[c])) break;\n\t\t\tindex = c;\n\t\t}\n\t\treturn this.substr(index + 1);\n\t};\n}\n\ndeclare interface ChatCommand {\n\tcommandKey: string;\n\tshouldDisplayToChat: boolean;\n\tinvokeOnCommand: () => void;\n\tcreatedMessageType: number;\n\ticonClass: string;\n\tdescription: string;\n\tgmOnly: boolean;\n}\n\ndeclare class ChatCommands {\n\t/**\n\t * Registers a Chat Command to be handled\n\t */\n\tregisterCommand(command: ChatCommand): void;\n\t/**\n\t * Deregister a Chat Command\n\t */\n\tderegisterCommand(command: ChatCommand): void;\n\tcreateCommandFromData(data: any): ChatCommand;\n}\n\ndeclare class GameExt extends Game {\n\tchatCommands: ChatCommands;\n}\n\nexport default class DFAdventureLogProcessor {\n\tstatic readonly PREF_ENABLE = 'enable-command';\n\tstatic readonly PREF_GMONLY = 'df-log-gmonly';\n\tstatic readonly PREF_GMONLY_WHISPER = 'df-log-gmonly-whisper';\n\tstatic readonly PREF_MESSAGES = 'df-log-messages';\n\tstatic readonly PREF_SORTDESC = 'df-log-sortdesc';\n\tstatic readonly PREF_SIMPLE_CALENDAR = 'df-log-use-simple-calendar';\n\tstatic readonly PREF_USE_TIME = 'df-log-use-time';\n\tstatic logCommand: ChatCommand = null;\n\tstatic gmlogCommand: ChatCommand = null;\n\n\tstatic appendChatContextMenuOptions(options: ContextMenu.Item[]) {\n\t\toptions.push({\n\t\t\tname: 'DF_CHAT_LOG.ContextMenu_AsEvent',\n\t\t\ticon: '<i style=\"color:SeaGreen\" class=\"fas fa-edit\"></i>',\n\t\t\tcondition: () => {\n\t\t\t\tconst enabled = SETTINGS.get(DFAdventureLogProcessor.PREF_ENABLE);\n\t\t\t\tconst isGM = game.user.isGM;\n\t\t\t\tconst gmOnly = SETTINGS.get(DFAdventureLogProcessor.PREF_GMONLY);\n\t\t\t\treturn enabled && (!gmOnly || isGM);\n\t\t\t},\n\t\t\tcallback: (header) => {\n\t\t\t\tconst chatData = ui.chat.collection.get($(header).attr('data-message-id')).data;\n\t\t\t\tDFAdventureLogProcessor.commandProcessor(chatData.content, false);\n\t\t\t\treturn {};\n\t\t\t}\n\t\t});\n\t\toptions.push({\n\t\t\tname: 'DF_CHAT_LOG.ContextMenu_AsQuote',\n\t\t\ticon: '<i style=\"color:SeaGreen\" class=\"fas fa-quote-right\"></i>',\n\t\t\tcondition: () => {\n\t\t\t\tconst enabled = SETTINGS.get(DFAdventureLogProcessor.PREF_ENABLE);\n\t\t\t\tconst isGM = game.user.isGM;\n\t\t\t\tconst gmOnly = SETTINGS.get(DFAdventureLogProcessor.PREF_GMONLY);\n\t\t\t\treturn enabled && (!gmOnly || isGM);\n\t\t\t},\n\t\t\tcallback: (header) => {\n\t\t\t\tconst chatData = ui.chat.collection.get($(header).attr('data-message-id')).data;\n\t\t\t\tif (chatData.content.trimStart().startsWith('\"'))\n\t\t\t\t\tDFAdventureLogProcessor.commandProcessor('q ' + chatData.content, false);\n\t\t\t\telse\n\t\t\t\t\tDFAdventureLogProcessor.commandProcessor(`q \"${game.users.get(chatData.user).name}\" ${chatData.content}`, false);\n\t\t\t\treturn {};\n\t\t\t}\n\t\t});\n\t\toptions.push({\n\t\t\tname: 'DF_CHAT_LOG.ContextMenu_AsGmEvent',\n\t\t\ticon: '<i style=\"color:FireBrick\" class=\"fas fa-edit\"></i>',\n\t\t\tcondition: () => {\n\t\t\t\tconst enabled = SETTINGS.get(DFAdventureLogProcessor.PREF_ENABLE);\n\t\t\t\tconst isGM = game.user.isGM;\n\t\t\t\treturn enabled && isGM;\n\t\t\t},\n\t\t\tcallback: (header) => {\n\t\t\t\tconst chatData = ui.chat.collection.get($(header).attr('data-message-id')).data;\n\t\t\t\tDFAdventureLogProcessor.commandProcessor(chatData.content, true);\n\t\t\t\treturn {};\n\t\t\t}\n\t\t});\n\t\toptions.push({\n\t\t\tname: 'DF_CHAT_LOG.ContextMenu_AsGmQuote',\n\t\t\ticon: '<i style=\"color:FireBrick\" class=\"fas fa-quote-right\"></i>',\n\t\t\tcondition: () => {\n\t\t\t\tconst enabled = SETTINGS.get(DFAdventureLogProcessor.PREF_ENABLE);\n\t\t\t\tconst isGM = game.user.isGM;\n\t\t\t\treturn enabled && isGM;\n\t\t\t},\n\t\t\tcallback: (header) => {\n\t\t\t\tconst chatData = ui.chat.collection.get($(header).attr('data-message-id')).data;\n\t\t\t\tif (chatData.content.trimStart().startsWith('\"'))\n\t\t\t\t\tDFAdventureLogProcessor.commandProcessor('q ' + chatData.content, true);\n\t\t\t\telse\n\t\t\t\t\tDFAdventureLogProcessor.commandProcessor(`q \"${game.users.get(chatData.user).name}\" ${chatData.content}`, true);\n\t\t\t\treturn {};\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic setupSettings() {\n\t\tSETTINGS.register(DFAdventureLogProcessor.PREF_ENABLE, {\n\t\t\tscope: 'world',\n\t\t\tname: 'DF_CHAT_LOG.Setting.EnableTitle',\n\t\t\thint: 'DF_CHAT_LOG.Setting.EnableHint',\n\t\t\tconfig: true,\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t\tonChange: (enabled: boolean) => {\n\t\t\t\tif (!enabled && !!DFAdventureLogProcessor.logCommand)\n\t\t\t\t\tDFAdventureLogProcessor.deregisterCommand();\n\t\t\t\telse\n\t\t\t\t\tDFAdventureLogProcessor.registerCommand();\n\t\t\t}\n\t\t});\n\t\tSETTINGS.register(DFAdventureLogProcessor.PREF_GMONLY, {\n\t\t\tname: 'DF_CHAT_LOG.Setting.GmOnlyTitle',\n\t\t\thint: 'DF_CHAT_LOG.Setting.GmOnlyHint',\n\t\t\tscope: 'world',\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t\tconfig: true,\n\t\t\tonChange: (gmOnly) => {\n\t\t\t\tif (gmOnly && !game.user.isGM)\n\t\t\t\t\tDFAdventureLogProcessor.deregisterCommand();\n\t\t\t\telse\n\t\t\t\t\tDFAdventureLogProcessor.registerCommand();\n\t\t\t}\n\t\t});\n\t\tSETTINGS.register(DFAdventureLogProcessor.PREF_GMONLY_WHISPER, {\n\t\t\tname: 'DF_CHAT_LOG.Setting.GmOnlyWhisperName',\n\t\t\thint: 'DF_CHAT_LOG.Setting.GmOnlyWhisperHint',\n\t\t\tscope: 'world',\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t\tconfig: true\n\t\t});\n\t\tSETTINGS.register(DFAdventureLogProcessor.PREF_USE_TIME, {\n\t\t\tscope: 'world',\n\t\t\ttype: Boolean,\n\t\t\tname: \"DF_CHAT_LOG.Setting.UseTimeName\",\n\t\t\thint: \"DF_CHAT_LOG.Setting.UseTimeHint\",\n\t\t\tdefault: true,\n\t\t\tconfig: true\n\t\t});\n\t\tSETTINGS.register(DFAdventureLogProcessor.PREF_MESSAGES, {\n\t\t\tname: 'DF_CHAT_LOG.Setting.PrintMessagesName',\n\t\t\thint: 'DF_CHAT_LOG.Setting.PrintMessagesHint',\n\t\t\tscope: 'world',\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t\tconfig: true\n\t\t});\n\t\tSETTINGS.register(DFAdventureLogProcessor.PREF_SORTDESC, {\n\t\t\tname: 'DF_CHAT_LOG.Setting.SortDescendingName',\n\t\t\thint: 'DF_CHAT_LOG.Setting.SortDescendingHint',\n\t\t\tscope: 'world',\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t\tconfig: true,\n\t\t\tonChange: () => this.resortLog()\n\t\t});\n\t\t// If Simple Calendar is enabled\n\t\tif (game.modules.get('foundryvtt-simple-calendar')?.active) {\n\t\t\tSETTINGS.register(DFAdventureLogProcessor.PREF_SIMPLE_CALENDAR, {\n\t\t\t\tscope: 'world',\n\t\t\t\ttype: Boolean,\n\t\t\t\tname: \"DF_CHAT_LOG.Setting.SimpleCalendarName\",\n\t\t\t\thint: \"DF_CHAT_LOG.Setting.SimpleCalendarHint\",\n\t\t\t\tdefault: false,\n\t\t\t\tconfig: true\n\t\t\t});\n\t\t}\n\n\t\tHooks.on('closeDFAdventureLogConfig', () => { DFAdventureLogProcessor.logConfig = null; });\n\t\tif ((game as GameExt).chatCommands)\n\t\t\tDFAdventureLogProcessor.registerCommand();\n\t\telse\n\t\t\tHooks.on('chatCommandsReady', function () { DFAdventureLogProcessor.registerCommand(); });\n\t}\n\n\tstatic deregisterCommand() {\n\t\t(game as GameExt).chatCommands.deregisterCommand(DFAdventureLogProcessor.logCommand);\n\t\tif (DFAdventureLogProcessor.gmlogCommand)\n\t\t\t(game as GameExt).chatCommands.deregisterCommand(DFAdventureLogProcessor.gmlogCommand);\n\t\tDFAdventureLogProcessor.logCommand = null;\n\t\tDFAdventureLogProcessor.gmlogCommand = null;\n\t}\n\tstatic registerCommand() {\n\t\tif (!SETTINGS.get(DFAdventureLogProcessor.PREF_ENABLE))\n\t\t\treturn;\n\t\tif (SETTINGS.get(DFAdventureLogProcessor.PREF_GMONLY) && !game.user.isGM)\n\t\t\treturn;\n\t\tif (DFAdventureLogProcessor.logCommand)\n\t\t\treturn;\n\n\t\tDFAdventureLogProcessor.logCommand = (game as GameExt).chatCommands.createCommandFromData({\n\t\t\tcommandKey: \"/log\",\n\t\t\tinvokeOnCommand: async (_cl: any, msg: string, _cd: any) => await DFAdventureLogProcessor.commandProcessor(msg, false),\n\t\t\tshouldDisplayToChat: false,\n\t\t\ticonClass: \"fa-edit\",\n\t\t\tdescription: \"DF_CHAT_LOG.CommandDescription\".localize()\n\t\t});\n\t\t(game as GameExt).chatCommands.registerCommand(DFAdventureLogProcessor.logCommand);\n\n\t\t// If we are not the GM, early return to avoid registering the /gmlog command\n\t\tif (!game.user.isGM) return;\n\t\t// Register the /gmlog command\n\t\tDFAdventureLogProcessor.gmlogCommand = (game as GameExt).chatCommands.createCommandFromData({\n\t\t\tcommandKey: \"/gmlog\",\n\t\t\tinvokeOnCommand: async (_cl: any, msg: string, _cd: any) => await DFAdventureLogProcessor.commandProcessor(msg, true),\n\t\t\tshouldDisplayToChat: false,\n\t\t\ticonClass: \"fa-edit\",\n\t\t\tdescription: \"DF_CHAT_LOG.GMCommandDescription\".localize()\n\t\t});\n\t\t(game as GameExt).chatCommands.registerCommand(DFAdventureLogProcessor.gmlogCommand);\n\t}\n\n\tprivate static _getTimestamp() {\n\t\tconst useTime = SETTINGS.get(DFAdventureLogProcessor.PREF_USE_TIME);\n\t\tif (game.modules.get('foundryvtt-simple-calendar')?.active && SETTINGS.get(DFAdventureLogProcessor.PREF_SIMPLE_CALENDAR)) {\n\t\t\tconst stamp = SimpleCalendar.api.formatDateTime(SimpleCalendar.api.timestampToDate(SimpleCalendar.api.timestamp()));\n\t\t\treturn useTime ? `${stamp.date} ${stamp.time}` : stamp.date;\n\t\t}\n\t\telse if (useTime)\n\t\t\treturn new Date().toLocaleString('sv').replace(',', '').replace(/ ([AP])/, '$1');\n\t\telse {\n\t\t\treturn new Date().toLocaleString('sv').replace(',', '').replace(/ ([AP])/, '$1').split(' ')[0];\n\t\t}\n\t}\n\n\tprivate static logConfig: DFAdventureLogConfig = null;\n\tstatic async commandProcessor(messageText: string, gmLog: boolean, preventPostToChat = false): Promise<void> {\n\t\tmessageText = messageText.trim();\n\t\tconst tokens = messageText.split(' ');\n\n\t\tif (!SETTINGS.get(DFAdventureLogProcessor.PREF_ENABLE)) {\n\t\t\t(game as GameExt).chatCommands.deregisterCommand(DFAdventureLogProcessor.logCommand);\n\t\t\tui.notifications.warn('DF_CHAT_LOG.Error.Disabled'.localize());\n\t\t\treturn;\n\t\t}\n\n\t\t// If the user did not enter anything, send them a help message\n\t\tif (messageText.length == 0 || tokens.every(x => x.length == 0)) {\n\t\t\tsetTimeout(async () => {\n\t\t\t\tawait Dialog.prompt({\n\t\t\t\t\ttitle: 'DF_CHAT_LOG.HelpDialog_Title'.localize(),\n\t\t\t\t\tlabel: 'OK',\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\t\t\tcallback: () => { },\n\t\t\t\t\tcontent: await renderTemplate(`modules/df-chat-enhance/templates/lang/log-help.${'DF_CHAT_ENHANCE.LANG'.localize()}.hbs`, {\n\t\t\t\t\t\tisGM: game.user.isGM\n\t\t\t\t\t}),\n\t\t\t\t\toptions: { width: 800 }\n\t\t\t\t});\n\t\t\t}, 1);\n\t\t\treturn;\n\t\t}\n\n\t\tconst speaker = ChatMessage.getSpeaker(<any>{ user: game.user });\n\t\tconst messageData: DeepPartial<ChatMessageDataConstructorData> = {\n\t\t\tflavor: '',\n\t\t\tuser: game.user.id,\n\t\t\tspeaker: speaker,\n\t\t\ttype: CONST.CHAT_MESSAGE_TYPES.OOC,\n\t\t\tcontent: '',\n\t\t};\n\t\tlet line: string;\n\t\tswitch (tokens[0].toLowerCase()) {\n\t\t\tcase 'config':\n\t\t\t\tif (!game.user.isGM) {\n\t\t\t\t\tui.notifications.warn('DF_CHAT_LOG.Error.ConfigGmOnly'.localize());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\tif (DFAdventureLogProcessor.logConfig)\n\t\t\t\t\t\tDFAdventureLogProcessor.logConfig.bringToTop();\n\t\t\t\t\telse {\n\t\t\t\t\t\tDFAdventureLogProcessor.logConfig = new DFAdventureLogConfig({});\n\t\t\t\t\t\tDFAdventureLogProcessor.logConfig.render(true);\n\t\t\t\t\t}\n\t\t\t\t}, 1);\n\t\t\t\treturn;\n\t\t\tcase 'q':\n\t\t\tcase 'quote':\n\t\t\t\tmessageText = messageText.replace(tokens[0], '').trimStart();\n\t\t\t\tlet source: string;\n\t\t\t\t// If the token starts with a quote, but does not end with one\n\t\t\t\tif (tokens[1][0] === '\"' && tokens[1][tokens[1].length - 1] !== '\"') {\n\t\t\t\t\t// Extract the quoted Source\n\t\t\t\t\tlet index = -1;\n\t\t\t\t\tfor (let c = 1; c < messageText.length; c++) {\n\t\t\t\t\t\tif (messageText[c] === '\"') {\n\t\t\t\t\t\t\tindex = c;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (index < 0) {\n\t\t\t\t\t\tui.notifications.error('DF_CHAT_LOG.Error.MissingQuote'.localize().replace('{0}', tokens[1]));\n\t\t\t\t\t\tsetTimeout(() => $('#chat-message').val('/log q ' + messageText), 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tsource = messageText.slice(0, index + 1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tsource = tokens[1];\n\t\t\t\tmessageText = messageText.replace(source, '').trim();\n\t\t\t\t// Remove any double-quotes surrounding the source token\n\t\t\t\tsource = source.replace(/\"/gm, '');\n\t\t\t\tmessageData.flavor = `${game.user.name} quoted ${source}`;\n\t\t\t\tmessageData.content = `<span class=\"dfal-qu\">${messageText}</span>`;\n\t\t\t\tif (messageText.length == 0) {\n\t\t\t\t\tui.notifications.error('DF_CHAT_LOG.Error.MissingMessage'.localize());\n\t\t\t\t\tsetTimeout(() => $('#chat-message').val(`/log q \"${source}\" ${messageText}`), 1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tline = 'DF_CHAT_LOG.Log_Quote'.localize();\n\t\t\t\tline = line.replace('{0}', this._getTimestamp());\n\t\t\t\tline = line.replace('{1}', game.user.name);\n\t\t\t\tline = line.replace('{2}', source);\n\t\t\t\tmessageText = line.replace('{3}', messageText);\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'event':\n\t\t\t\tmessageText = messageText.replace(tokens[0], '').trim();\n\t\t\t\t// fallthrough\n\t\t\tdefault:\n\t\t\t\tmessageText = messageText.trim();\n\t\t\t\tmessageData.flavor = 'Event Logged';\n\t\t\t\tmessageData.content = `<span class=\"dfal-ev\">${messageText}</span>`;\n\t\t\t\tline = 'DF_CHAT_LOG.Log_Event'.localize();\n\t\t\t\tline = line.replace('{0}', this._getTimestamp());\n\t\t\t\tline = line.replace('{1}', game.user.name);\n\t\t\t\tmessageText = line.replace('{2}', messageText);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// fetch the log to submit to\n\t\tconst journalId = SETTINGS.get(gmLog ? DFAdventureLogConfig.PREF_JOURNAL_GM : DFAdventureLogConfig.PREF_JOURNAL) as string;\n\t\tif (!game.journal.has(journalId)) {\n\t\t\tif (game.user.isGM)\n\t\t\t\tui.notifications.error('DF_CHAT_LOG.Error.NoJournalSetGM'.localize(), { permanent: true });\n\t\t\telse\n\t\t\t\tui.notifications.warn('DF_CHAT_LOG.Error.NoJournalSet'.localize());\n\t\t\treturn;\n\t\t}\n\t\tconst journal = game.journal.get(journalId);\n\t\tlet html = $(journal.data.content);\n\t\tlet messageHtml = $(messageText);\n\t\tlet section = html.find('section.df-adventure-log');\n\t\tif (section.length == 0) {\n\t\t\tawait DFAdventureLogConfig.initializeJournal(journalId, false, gmLog);\n\t\t\thtml = $(journal.data.content);\n\t\t\tmessageHtml = $(messageText);\n\t\t\tsection = html.find('section.df-adventure-log');\n\t\t}\n\t\tconst descending = SETTINGS.get(this.PREF_SORTDESC) as boolean;\n\t\tif (descending) section.prepend(messageHtml); else section.append(messageHtml);\n\t\tawait journal.update({ content: $('<div></div>').append(html).html() });\n\t\tconst rollType = game.settings.get(\"core\", \"rollMode\");\n\t\tif (game.user.isGM) {\n\t\t\tif (\n\t\t\t\t// If the roll type is anything but Public\n\t\t\t\trollType !== 'roll'\n\t\t\t\t// If logs are GM Only and the Whisper All settings is true\n\t\t\t\t|| (SETTINGS.get(DFAdventureLogProcessor.PREF_GMONLY) &&\n\t\t\t\t\tSETTINGS.get(DFAdventureLogProcessor.PREF_GMONLY_WHISPER))\n\t\t\t) {\n\t\t\t\t// Make the message a whisper\n\t\t\t\tmessageData.whisper = [game.user.id];\n\t\t\t}\n\t\t}\n\t\t// All GM logs are whispered\n\t\tif (gmLog) {\n\t\t\tmessageData.whisper = [game.user.id];\n\t\t}\n\t\t// Post message to chat if Messages are enabled\n\t\tif (!preventPostToChat && SETTINGS.get(DFAdventureLogProcessor.PREF_MESSAGES))\n\t\t\tawait ChatMessage.create(messageData, {});\n\t}\n\n\tstatic async resortLog() {\n\t\tconst descending = SETTINGS.get(this.PREF_SORTDESC) as boolean;\n\t\tconst journalAll = SETTINGS.get(DFAdventureLogConfig.PREF_JOURNAL) as string;\n\t\tconst journalGM = SETTINGS.get(DFAdventureLogConfig.PREF_JOURNAL_GM) as string;\n\n\t\tconst journalSort = async (journal: JournalEntry) => {\n\t\t\tconst html = $(journal.data.content);\n\t\t\tconst article = html.find('article.df-adventure-log');\n\t\t\tconst result = (article.find('p') as any).sort(function (a: HTMLElement, b: HTMLElement) {\n\t\t\t\treturn descending ?\n\t\t\t\t\t$(b).find('span.dfal-ts').text().localeCompare($(a).find('span.dfal-ts').text()) :\n\t\t\t\t\t$(a).find('span.dfal-ts').text().localeCompare($(b).find('span.dfal-ts').text());\n\n\t\t\t});\n\t\t\tarticle.html(result);\n\t\t\tawait journal.update({ content: $('<div></div>').append(html).html() });\n\t\t};\n\n\t\tif (game.journal.has(journalAll))\n\t\t\tawait journalSort(game.journal.get(journalAll));\n\t\tif (game.journal.has(journalGM))\n\t\t\tawait journalSort(game.journal.get(journalGM));\n\t}\n}","import { ChatMessageData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs\";\nimport SETTINGS from \"../../../common/Settings\";\nimport DFChatArchiveManager from \"../archive/DFChatArchiveManager\";\n\n\nexport default class ChatMerge {\n\n\tprivate static readonly PREF_ENABLED = 'chat-merge-enabled';\n\tprivate static readonly PREF_SPLIT_SPEAKER = 'chat-merge-split-speaker';\n\tprivate static readonly PREF_EPOCH = 'chat-merge-epoch';\n\tprivate static readonly PREF_ALLOW_ROLLS = 'chat-merge-allowRolls';\n\tprivate static readonly PREF_SEPARATE = 'chat-merge-separateWithBorder';\n\tprivate static readonly PREF_HOVER = 'chat-merge-showhover';\n\tprivate static readonly PREF_SHOW_HEADER = 'chat-merge-showheader';\n\n\tprivate static get _enabled(): boolean { return SETTINGS.get(this.PREF_ENABLED); }\n\tprivate static get _epoch(): number { return SETTINGS.get(this.PREF_EPOCH); }\n\tprivate static get _allowRolls(): string { return SETTINGS.get(this.PREF_ALLOW_ROLLS); }\n\tprivate static get _separateWithBorder(): boolean { return SETTINGS.get(this.PREF_SEPARATE); }\n\tprivate static get _showHover(): boolean { return SETTINGS.get(this.PREF_HOVER); }\n\tprivate static get _showHeader(): boolean { return SETTINGS.get(this.PREF_SHOW_HEADER); }\n\n\tstatic init() {\n\t\tSETTINGS.register(this.PREF_ENABLED, {\n\t\t\tname: 'DF_CHAT_MERGE.EnableName',\n\t\t\thint: 'DF_CHAT_MERGE.EnableHint',\n\t\t\tconfig: true,\n\t\t\tscope: 'client',\n\t\t\tdefault: true,\n\t\t\ttype: Boolean,\n\t\t\tonChange: () => this._processAllMessage()\n\t\t});\n\t\tSETTINGS.register(this.PREF_SHOW_HEADER, {\n\t\t\tname: 'DF_CHAT_MERGE.ShowHeaderName',\n\t\t\thint: 'DF_CHAT_MERGE.ShowHeaderHint',\n\t\t\tconfig: true,\n\t\t\tscope: 'client',\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t\tonChange: (newValue: boolean) => {\n\t\t\t\tconst style = (<HTMLElement>document.querySelector(':root')).style;\n\t\t\t\tstyle.setProperty('--dfce-cm-header', newValue ? '' : 'none');\n\t\t\t\tif (game.user.isGM) {\n\t\t\t\t\tstyle.setProperty('--dfce-cm-header-delete', newValue ? '' : '0');\n\t\t\t\t\tstyle.setProperty('--dfce-cm-header-delete-pad', newValue ? '' : '16px');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tSETTINGS.register(this.PREF_SPLIT_SPEAKER, {\n\t\t\tname: 'DF_CHAT_MERGE.SplitSpeakerName',\n\t\t\thint: 'DF_CHAT_MERGE.SplitSpeakerHint',\n\t\t\tconfig: true,\n\t\t\tscope: 'client',\n\t\t\tdefault: true,\n\t\t\ttype: Boolean,\n\t\t\tonChange: () => this._processAllMessage()\n\t\t});\n\t\tSETTINGS.register(this.PREF_ALLOW_ROLLS, {\n\t\t\tname: 'DF_CHAT_MERGE.AllowRollsName',\n\t\t\thint: 'DF_CHAT_MERGE.AllowRollsHint',\n\t\t\tconfig: true,\n\t\t\tscope: 'client',\n\t\t\tdefault: 'rolls',\n\t\t\ttype: String,\n\t\t\tchoices: {\n\t\t\t\tnone: 'DF_CHAT_MERGE.AllowRollsOptions.none'.localize(),\n\t\t\t\trolls: 'DF_CHAT_MERGE.AllowRollsOptions.rolls'.localize(),\n\t\t\t\tall: 'DF_CHAT_MERGE.AllowRollsOptions.all'.localize()\n\t\t\t},\n\t\t\tonChange: () => this._processAllMessage()\n\t\t});\n\t\tSETTINGS.register(this.PREF_SEPARATE, {\n\t\t\tname: 'DF_CHAT_MERGE.SeparateName',\n\t\t\thint: 'DF_CHAT_MERGE.SeparateHint',\n\t\t\tconfig: true,\n\t\t\tscope: 'client',\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t\tonChange: (newValue: boolean) => {\n\t\t\t\tconst style = (<HTMLElement>document.querySelector(':root')).style;\n\t\t\t\tstyle.setProperty('--dfce-cm-separation', newValue ? '' : '0');\n\t\t\t}\n\t\t});\n\t\tSETTINGS.register(this.PREF_HOVER, {\n\t\t\tname: 'DF_CHAT_MERGE.HoverName',\n\t\t\thint: 'DF_CHAT_MERGE.HoverHint',\n\t\t\tconfig: true,\n\t\t\tscope: 'client',\n\t\t\tdefault: true,\n\t\t\ttype: Boolean,\n\t\t\tonChange: (newValue: boolean) => {\n\t\t\t\tconst style = (<HTMLElement>document.querySelector(':root')).style;\n\t\t\t\tstyle.setProperty('--dfce-cm-hover-shadow', newValue ? '' : '0');\n\t\t\t}\n\t\t});\n\t\tSETTINGS.register<number>(this.PREF_EPOCH, {\n\t\t\tname: 'DF_CHAT_MERGE.EpochName',\n\t\t\thint: 'DF_CHAT_MERGE.EpochHint',\n\t\t\tconfig: true,\n\t\t\tscope: 'client',\n\t\t\tdefault: 10,\n\t\t\ttype: Number,\n\t\t\trange: {\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 60,\n\t\t\t\tstep: 1\n\t\t\t},\n\t\t\tonChange: () => this._processAllMessage()\n\t\t});\n\n\t\tlibWrapper.register(SETTINGS.MOD_NAME, 'ChatLog.prototype.deleteMessage', this._deleteMessage.bind(this), 'WRAPPER');\n\t\tHooks.on(\"renderChatMessage\", this._renderChatMessage);\n\t}\n\tstatic ready() {\n\t\tconst style = (<HTMLElement>document.querySelector(':root')).style;\n\t\tstyle.setProperty('--dfce-cm-separation', this._separateWithBorder ? '' : '0');\n\t\tstyle.setProperty('--dfce-cm-hover-shadow', this._showHover ? '' : '0');\n\t\tstyle.setProperty('--dfce-cm-header', this._showHeader ? '' : 'none');\n\t\tif (game.user.isGM) {\n\t\t\tstyle.setProperty('--dfce-cm-header-delete', this._showHeader ? '' : '0');\n\t\t\tstyle.setProperty('--dfce-cm-header-delete-pad', this._showHeader ? '' : '16px');\n\t\t}\n\t\tthis._processAllMessage(ui.chat.element);\n\t\tHooks.on('renderChatLog', (_: any, html: JQuery<HTMLElement>) => this._processAllMessage(html));\n\t\tHooks.on('renderDFChatArchiveViewer', (_: any, html: JQuery<HTMLElement>) => this._processAllMessage(html));\n\t}\n\n\tprivate static _deleteMessage(wrapper: (arg0: any, arg1: any) => any, messageId: string, { deleteAll = false } = {}) {\n\t\t// Ignore the Delete All process. Everything is being obliterated, who cares about the styling\n\t\tif (!deleteAll && this._enabled) {\n\t\t\tconst element = document.querySelector(`li[data-message-id=\"${messageId}\"`);\n\t\t\t// If we were a TOP\n\t\t\tif (element?.classList?.contains('dfce-cm-top')) {\n\t\t\t\telement.classList.remove('dfce-cm-top');\n\t\t\t\t// If the next element was a middle, make it a top\n\t\t\t\tif (element.nextElementSibling.classList.contains('dfce-cm-middle')) {\n\t\t\t\t\telement.nextElementSibling.classList.remove('dfce-cm-middle');\n\t\t\t\t\telement.nextElementSibling.classList.add('dfce-cm-top');\n\t\t\t\t}\n\t\t\t\t// Otherwise, it was a bottom and should now become a normal message again\n\t\t\t\telse element.nextElementSibling.classList.remove('dfce-cm-bottom');\n\t\t\t}\n\t\t\t// If we were a BOTTOM\n\t\t\telse if (element?.classList?.contains('dfce-cm-bottom')) {\n\t\t\t\telement.classList.remove('dfce-cm-bottom');\n\t\t\t\t// If the previous element was a middle, make it a bottom\n\t\t\t\tif (element.previousElementSibling.classList.contains('dfce-cm-middle')) {\n\t\t\t\t\telement.previousElementSibling.classList.remove('dfce-cm-middle');\n\t\t\t\t\telement.previousElementSibling.classList.add('dfce-cm-bottom');\n\t\t\t\t}\n\t\t\t\t// Otherwise, it was a top and should now become a normal message again\n\t\t\t\telse element.previousElementSibling.classList.remove('dfce-cm-top');\n\t\t\t}\n\t\t\t// If we were a MIDDLE, let the above and below snug and they'll be fine\n\t\t\telse if (element?.classList?.contains('dfce-cm-middle'))\n\t\t\t\telement.classList.remove('dfce-cm-middle');\n\t\t}\n\t\treturn wrapper(messageId, { deleteAll });\n\t}\n\n\tprivate static _processAllMessage(element?: JQuery<HTMLElement>) {\n\t\telement = element ?? $(document.body);\n\t\t// Remove the old CSS class designations\n\t\telement.find('.dfce-cm-top').removeClass('dfce-cm-top');\n\t\telement.find('.dfce-cm-middle').removeClass('dfce-cm-middle');\n\t\telement.find('.dfce-cm-bottom').removeClass('dfce-cm-bottom');\n\t\t// If we are disabled, return\n\t\tif (!ChatMerge._enabled) return;\n\t\t// Collect all rendered chat messages\n\t\tconst messages = element.find('li.chat-message');\n\t\t// Return if there are no messages rendered\n\t\tif (messages.length === 0) return;\n\t\t// Make sure to set the hover colour for the first message since we skip it in the processor bellow.\n\t\tif (messages[0].hasAttribute('style')) {\n\t\t\tmessages[0].style.setProperty('--dfce-mc-border-color', messages[0].style.borderColor);\n\t\t}\n\t\t// Process each message after the first\n\t\tfor (let c = 1; c < messages.length; c++) {\n\t\t\t// Update styling of the chat messages\n\t\t\tthis._styleChatMessages(\n\t\t\t\tgame.messages.get(messages[c].getAttribute('data-message-id')),\n\t\t\t\tmessages[c],\n\t\t\t\tgame.messages.get(messages[c - 1].getAttribute('data-message-id')),\n\t\t\t\tmessages[c - 1]);\n\t\t}\n\t}\n\n\tprivate static _renderChatMessage(message: ChatMessage, html: JQuery<HTMLElement>, _cmd: ChatMessageData) {\n\t\tif (!ChatMerge._enabled) return;\n\t\t// Find the most recent message in the chat log\n\t\tconst partnerElem = $(`li.chat-message`).last()[0];\n\t\t// If there is no message, return\n\t\tif (partnerElem === null || partnerElem === undefined) return;\n\t\t// get the ChatMessage document associated with the html\n\t\tconst partner = game.messages.get(partnerElem.getAttribute('data-message-id'));\n\t\t// Update styling of the chat messages\n\t\tChatMerge._styleChatMessages(message, html[0], partner, partnerElem);\n\t}\n\n\tprivate static _inTimeFrame(current: number, previous: number): boolean {\n\t\treturn current > previous && (current - previous) < (this._epoch * 1000);\n\t}\n\n\tprivate static _isValidMessage(current: ChatMessage, previous: ChatMessage) {\n\t\tconst rolls = this._allowRolls;\n\t\tconst splitSpeaker = SETTINGS.get<boolean>(this.PREF_SPLIT_SPEAKER);\n\t\tlet userCompare = false;\n\n\t\tconst currData = current.data ?? <ChatMessageData><any>current;\n\t\tconst prevData = previous.data ?? <ChatMessageData><any>previous;\n\n\t\tif (splitSpeaker) {\n\t\t\t// this is a bit complex, basically we want to group by actors, but if you're not using an actor, group by user instead\n\t\t\tuserCompare = ( // If actors are equal and NOT null\n\t\t\t\tcurrData.speaker.actor === prevData.speaker.actor\n\t\t\t\t&& !currData.speaker.actor\n\t\t\t) ||\n\t\t\t\t( // If BOTH actors are null and users are equal\n\t\t\t\t\t!currData.speaker.actor\n\t\t\t\t\t&& !prevData.speaker.actor\n\t\t\t\t\t&& currData.user === prevData.user\n\t\t\t\t);\n\t\t} else {\n\t\t\t// If we are not splitting by speaker, just do the simple option of comparing the users\n\t\t\tuserCompare = currData.user === prevData.user;\n\t\t}\n\t\treturn userCompare\n\t\t\t&& this._inTimeFrame(currData.timestamp, prevData.timestamp)\n\t\t\t// Check for merging with roll types\n\t\t\t&& (rolls === 'all'\n\t\t\t\t|| (rolls === 'rolls' && current.isRoll === previous.isRoll)\n\t\t\t\t|| (rolls === 'none' && !current.isRoll && !previous.isRoll));\n\t}\n\n\tprivate static _styleChatMessages(curr: ChatMessage, currElem: HTMLElement, prev: ChatMessage, prevElem: HTMLElement) {\n\t\tif (currElem.hasAttribute('style')) {\n\t\t\tcurrElem.style.setProperty('--dfce-mc-border-color', currElem.style.borderColor);\n\t\t}\n\t\t// If we are running in a Chat Archive\n\t\tif (curr === undefined && prev === undefined) {\n\t\t\tconst logId = parseInt(/df-chat-log-(\\d+)/.exec(currElem.parentElement.parentElement.id)[1]);\n\t\t\tif (isNaN(logId)) return;\n\t\t\tconst chatLog = DFChatArchiveManager.chatViewers.get(logId);\n\t\t\tcurr = <ChatMessage>chatLog.messages.find(x => x._id == currElem.dataset.messageId);\n\t\t\tprev = <ChatMessage>chatLog.messages.find(x => x._id == prevElem.dataset.messageId);\n\t\t}\n\t\tif (!ChatMerge._isValidMessage(curr, prev)) return;\n\t\tif (prevElem.classList.contains('dfce-cm-bottom')) {\n\t\t\tprevElem.classList.remove('dfce-cm-bottom');\n\t\t\tprevElem.classList.add('dfce-cm-middle');\n\t\t} else prevElem.classList.add('dfce-cm-top');\n\t\tcurrElem.classList.add('dfce-cm-bottom');\n\t}\n}","import SETTINGS from \"../../../common/Settings\";\nimport CONFIG from \"../CONFIG\";\n\n\nconst ICONS_FOR_KNOWN_ROLL_TYPES: {\n\t[key: string]: string;\n\troll: string;\n\tgmroll: string;\n\tblindroll: string;\n\tselfroll: string;\n} = {\n\troll: 'fas fa-dice-d20',\n\tgmroll: 'fas fa-user-secret',\n\tblindroll: 'fas fa-user-ninja',\n\tselfroll: 'fas fa-ghost'\n};\n\nfunction calcColour(current: number, count: number): string {\n\treturn `rgb(${(current / count) * 255},${(1 - (current / count)) * 255},0)`;\n}\n\ninterface ChatLogData {\n\tuser: User,\n\trollMode: string,\n\trollModes: any,\n\tisStream: boolean\n}\n\nasync function handleChatLogRendering(chat: ChatLog, html: JQuery<HTMLElement>, data: ChatLogData) {\n\tconst modes = Object.keys(data.rollModes);\n\tconst buttons: any[] = [];\n\tconst iconKeys = Object.keys(ICONS_FOR_KNOWN_ROLL_TYPES);\n\tfor (let c = 0; c < modes.length; c++) {\n\t\tconst rt = modes[c];\n\t\tif (!(rt in ICONS_FOR_KNOWN_ROLL_TYPES)) {\n\t\t\tconsole.warn(Error(`Unknown roll type '${rt}'`));\n\t\t\tcontinue;\n\t\t}\n\t\tbuttons.push({\n\t\t\trt: rt,\n\t\t\tname: data.rollModes[rt],\n\t\t\tactive: data.rollMode === rt,\n\t\t\ticon: ICONS_FOR_KNOWN_ROLL_TYPES[rt],\n\t\t\tcolour: calcColour(iconKeys.findIndex(x => x == rt), iconKeys.length)\n\t\t});\n\t}\n\tconst buttonHtml = $(await renderTemplate('modules/df-chat-enhance/templates/privacy-button.hbs', { buttons }));\n\tbuttonHtml.find('button').on('click', function () {\n\t\tconst rollType = $(this).attr('data-id');\n\t\tgame.settings.set(\"core\", \"rollMode\", <any>rollType);\n\t\tbuttonHtml.find('button.active').removeClass('active');\n\t\t$(this).addClass('active');\n\t});\n\thtml.find('select[name=rollMode]').after(buttonHtml);\n\thtml.find('select[name=rollMode]').remove();\n\n\tif (!SETTINGS.get('replace-buttons'))\n\t\treturn;\n\n\t// Adjust the button container to remove the extra margin since those buttons are now moving in.\n\tbuttonHtml.attr('style', 'margin:0 0 0 0.5em');\n\n\t// Convert the old <a> tag elements to <button> tags\n\tlet first = true;\n\thtml.find('#chat-controls div.control-buttons a').each(function() {\n\t\tconst html = $(this).html();\n\t\tconst classes = $(this).attr('class');\n\t\tconst title = $(this).attr('title');\n\t\tconst style = $(this).attr('style');\n\t\tconst click = ($ as any)._data(this, 'events')['click'][0].handler;\n\t\tconst button = $(`<button class=\"${classes}\" title=\"${title}\" style=\"${style}\">${html}</button>`);\n\t\tbutton.on('click', click);\n\t\t// Add a small margin between the first button and the RollTypes\n\t\tif (first) {\n\t\t\tbutton.attr('style', 'margin-left:0.5em');\n\t\t\tfirst = false;\n\t\t}\n\t\tbuttonHtml.append(button);\n\t});\n\n\thtml.find('#chat-controls div.control-buttons').remove();\n}\n\nexport default function initDFChatPrivacy() {\n\tSETTINGS.register('enabled', {\n\t\tname: 'DF_CHAT_PRIVACY.Settings_EnableTitle',\n\t\thint: 'DF_CHAT_PRIVACY.Settings_EnableHint',\n\t\tscope: 'client',\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t\tconfig: true,\n\t\tonChange: CONFIG.requestReload\n\t});\n\tSETTINGS.register('replace-buttons', {\n\t\tname: 'DF_CHAT_PRIVACY.Settings_ReplaceButtonsTitle',\n\t\thint: 'DF_CHAT_PRIVACY.Settings_ReplaceButtonsHint',\n\t\tscope: 'client',\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t\tconfig: true,\n\t\tonChange: CONFIG.requestReload\n\t});\n\n\tif (SETTINGS.get('enabled') === false)\n\t\treturn;\n\n\tHooks.on('renderChatLog', handleChatLogRendering);\n}\n","export default class CONFIG {\n\tstatic async requestReload() {\n\t\tif (await Dialog.confirm({\n\t\t\ttitle: \"DF_CHAT_ENHANCE.ReloadGameTitle\".localize(),\n\t\t\tcontent: \"DF_CHAT_ENHANCE.ReloadGameContent\".localize(),\n\t\t\tdefaultYes: true\n\t\t})) {\n\t\t\twindow.location.reload();\n\t\t}\n\t}\n}","import SETTINGS from \"../../../common/Settings\";\n\n\nexport default class ScrollManage {\n\tprivate static readonly PREF_ENABLED = 'scroll-manage-enabled';\n\tprivate static readonly PREF_SCROLL_IF_YOU = 'scroll-manage-scroll-if-you';\n\tprivate static readonly ScrollThreshold = 50;\n\tprivate static _scrollToBottomButton: JQuery<HTMLElement>;\n\n\n\tstatic get enabled(): boolean { return SETTINGS.get(this.PREF_ENABLED); }\n\tstatic get scrollToBottomIfYouSendMessage(): boolean { return SETTINGS.get(this.PREF_SCROLL_IF_YOU); }\n\n\tstatic init() {\n\t\tHooks.on('renderChatLog', this._renderChatLog.bind(this));\n\n\t\tSETTINGS.register(this.PREF_ENABLED, {\n\t\t\tname: 'DF_CHAT_SCROLL.EnableName',\n\t\t\thint: 'DF_CHAT_SCROLL.EnableHint',\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t\tonChange: (newValue) => {\n\t\t\t\tif (newValue) {\n\t\t\t\t\tlibWrapper.register(SETTINGS.MOD_NAME, 'ChatLog.prototype.postOne', this._ChatLog_postOne, 'OVERRIDE');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlibWrapper.unregister(SETTINGS.MOD_NAME, 'ChatLog.prototype.postOne', false);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tSETTINGS.register(this.PREF_SCROLL_IF_YOU, {\n\t\t\tname: 'DF_CHAT_SCROLL.ScrollIfYouName',\n\t\t\thint: 'DF_CHAT_SCROLL.ScrollIfYouHint',\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t});\n\t}\n\n\tstatic ready() {\n\t\tif (this.enabled)\n\t\t\tlibWrapper.register(SETTINGS.MOD_NAME, 'ChatLog.prototype.postOne', this._ChatLog_postOne, 'OVERRIDE');\n\t}\n\n\tprivate static _renderChatLog(app: ChatLog, html: JQuery<HTMLElement>) {\n\t\tthis._scrollToBottomButton = $(`<div id=\"scrollToBottom\" style=\"display:none\">\n\t<span>${'DF_CHAT_SCROLL.NewMessage'.localize()}</span> ${'DF_CHAT_SCROLL.ScrollButton'.localize()}\n</div>`);\n\t\tthis._scrollToBottomButton.on('click', () => {\n\t\t\tconst el = app.element;\n\t\t\tconst log = el.length ? el[0].querySelector(\"#chat-log\") : null;\n\t\t\tif (log) {\n\t\t\t\tlog.scrollTo({ behavior: \"smooth\", top: log.scrollHeight });\n\t\t\t}\n\t\t});\n\t\thtml.find('div#chat-controls').before(this._scrollToBottomButton);\n\n\t\thtml.find('ol#chat-log').on('scroll', (event) => {\n\t\t\tif (!this._scrollToBottomButton) return;\n\t\t\tconst element = <HTMLOListElement>event.currentTarget;\n\t\t\t// Ignore events when the scroll height is too small to matter\n\t\t\tif (element.clientHeight > element.scrollHeight - this.ScrollThreshold) return;\n\t\t\tif (element.scrollTop < (element.scrollHeight - element.clientHeight) - this.ScrollThreshold)\n\t\t\t\tthis._scrollToBottomButton.show();\n\t\t\telse {\n\t\t\t\tthis._scrollToBottomButton.hide();\n\t\t\t\tthis._scrollToBottomButton.removeClass('new');\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static async _ChatLog_postOne(this: ChatLog, message: ChatMessage, notify = false) {\n\t\tif (!message.visible) return;\n\n\t\t// Track internal flags\n\t\tif (!this._lastId) this._lastId = message.id; // Ensure that new messages don't result in batched scrolling\n\t\tif ((message.data.whisper || []).includes(game.user.id) && !message.isRoll) {\n\t\t\tthis._lastWhisper = message;\n\t\t}\n\n\t\t// Render the message to the log\n\t\tconst element = this.element.find(\"#chat-log\");\n\t\tconst atBottom = element[0].scrollTop >= ((element[0].scrollHeight - element[0].clientHeight) - ScrollManage.ScrollThreshold);\n\t\tconst html = await (<any>message).getHTML();\n\t\telement.append(html);\n\t\tif (atBottom || (ScrollManage.scrollToBottomIfYouSendMessage && message.isAuthor))\n\t\t\telement[0].scrollTo({ top: element[0].scrollHeight, behavior: 'smooth' });\n\t\t// this.scrollBottom();\n\t\telse {\n\t\t\tScrollManage._scrollToBottomButton.addClass('new');\n\t\t}\n\n\t\t// Post notification\n\t\tif (notify) this.notify(message);\n\n\t\t// Update popout tab\n\t\tif (this._popout) await (<any>this._popout).postOne(message, false);\n\t\tif (this.popOut) this.setPosition();\n\t}\n}","import { ChatMessageData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs\";\nimport SETTINGS from \"../../../common/Settings\";\n\n\nconst TEMPLATE = \"$0: $1 (+$2&nbsp;more)\";\nconst LENGTH_ADJUST = '&nbsp;'.length - 1;\n\n\nexport default class WhisperTruncation {\n\n\tprivate static readonly PREF_ENABLED = 'whisper-trunc_enabled';\n\tprivate static readonly PREF_CHAR_LIMIT = 'whisper-trunc_char-limit';\n\n\tstatic init() {\n\t\tHooks.on('renderChatMessage', this._messageRender.bind(this));\n\t\tSETTINGS.register(this.PREF_ENABLED, {\n\t\t\tname: 'DF_CHAT_WHISPER_TRUNC.SettingEnabledName',\n\t\t\thint: 'DF_CHAT_WHISPER_TRUNC.SettingEnabledHint',\n\t\t\tconfig: true,\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t\tscope: 'world',\n\t\t\tonChange: async () => {\n\t\t\t\t(<any>ui.chat)._state = 0;\n\t\t\t\t(<any>ui.chat)._lastId = null;\n\t\t\t\tawait ui.chat.render(true);\n\t\t\t}\n\t\t});\n\t\tSETTINGS.register(this.PREF_CHAR_LIMIT, {\n\t\t\tname: 'DF_CHAT_WHISPER_TRUNC.SettingCharLimitName',\n\t\t\thint: 'DF_CHAT_WHISPER_TRUNC.SettingCharLimitHint',\n\t\t\tconfig: true,\n\t\t\ttype: Number,\n\t\t\tdefault: 50,\n\t\t\tscope: 'world',\n\t\t\tonChange: async () => {\n\t\t\t\t(<any>ui.chat)._state = 0;\n\t\t\t\t(<any>ui.chat)._lastId = null;\n\t\t\t\tawait ui.chat.render(true);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static _messageRender(message: ChatMessage, html: JQuery<HTMLElement>, _cmd: ChatMessageData) {\n\t\t// ignore regular messages, or whispers with only 1 recipient\n\t\tif (!SETTINGS.get(this.PREF_ENABLED) || !(message.data.whisper) || message.data.whisper.length <= 1) return;\n\t\tconst users = message.data.whisper.map(x => game.users.get(x));\n\t\tlet accum = users[0].data.name;\n\t\tlet title = this._formatTitle(accum, users.length - 1);\n\t\tlet c = 1;\n\t\tconst CHAR_LIMIT = SETTINGS.get<number>(this.PREF_CHAR_LIMIT);\n\t\tfor (; c < users.length; c++) {\n\t\t\t// Append name to names string\n\t\t\tconst tmpNames = accum + ', ' + users[c].data.name;\n\t\t\t// Generate a temp title\n\t\t\tconst tmpTitle = this._formatTitle(tmpNames, users.length - c - 1);\n\t\t\t// If the potential title is too large, break so we can use the previous iteration's results\n\t\t\tif (tmpTitle.length - LENGTH_ADJUST > CHAR_LIMIT) break;\n\t\t\t// Set the accum and title to the newly generated values\n\t\t\taccum = tmpNames;\n\t\t\ttitle = tmpTitle;\n\t\t}\n\t\t// If we never ran out of room, exit\n\t\tif (c === users.length) return;\n\t\t// Update the HTML\n\t\tconst newHeader = `<span class=\"whisper-to\" title=\"${users.slice(c).map(x => x.data.name).join(', ')}\">${title}</span>`;\n\t\thtml.find('span.whisper-to').replaceWith(newHeader);\n\t}\n\n\tprivate static _formatTitle(names: string, count: number): string {\n\t\treturn count > 0\n\t\t\t? TEMPLATE\n\t\t\t\t.replace('$0', 'CHAT.To'.localize())\n\t\t\t\t.replace('$1', names)\n\t\t\t\t.replace('$2', count.toString())\n\t\t\t: names;\n\t}\n}","import SETTINGS from \"../../../common/Settings\";\n\nexport default class PlayerColor {\n\tstatic readonly PREF_TINT_BG = 'PlayerColor_TintBackground';\n\tstatic readonly FLAG_CHAT_COLOR = 'chat-color';\n\n\tstatic init() {\n\t\tSETTINGS.register(PlayerColor.PREF_TINT_BG, {\n\t\t\tconfig: true,\n\t\t\tname: 'DF_CHAT_PLAYER_COLOR.SettingTintBackgroundName',\n\t\t\thint: 'DF_CHAT_PLAYER_COLOR.SettingTintBackgroundHint',\n\t\t\tscope: 'world',\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t});\n\n\t\tHooks.on('renderUserConfig', (app: UserConfig, html: JQuery<HTMLElement>, data: UserConfig.Data<any>) => {\n\t\t\tconst color = data.user.getFlag(SETTINGS.MOD_NAME, PlayerColor.FLAG_CHAT_COLOR) ?? '';\n\t\t\thtml.find('input[name=\"color\"]').parent().after(`\n<div class=\"form-group\">\n\t<label for=\"chat-color\">${'DF_CHAT_PLAYER_COLOR.Label'.localize()}</label>\n\t<input id=\"chat-color\" type=\"text\" name=\"chat-color\" value=\"${color}\" style=\"flex:1.35\">\n\t<input type=\"color\" value=\"${color}\" data-edit=\"chat-color\">\n</div>`);\n\t\t\tconst chatField = html.find('#chat-color');\n\t\t\tconst chatPicker = html.find('[data-edit=\"chat-color\"]');\n\t\t\t// Make sure to update the color selector if a manual entry occurs\n\t\t\tchatField.on('change', () => chatPicker.val(chatField.val()));\n\t\t\t// Resize the window to encompass the new fields\n\t\t\tapp.element[0].style.height = '';\n\t\t\tapp.setPosition({});\n\t\t});\n\n\t\tlibWrapper.register(SETTINGS.MOD_NAME, 'UserConfig.prototype._updateObject',\n\t\t\tasync function (this: UserConfig, wrapped: (arg0: any, arg1: any) => any, event: any, formData: { \"chat-color\": string }) {\n\t\t\t\tawait this.object.setFlag(SETTINGS.MOD_NAME, PlayerColor.FLAG_CHAT_COLOR, formData[\"chat-color\"]);\n\t\t\t\tawait wrapped(event, formData);\n\t\t\t}, 'WRAPPER');\n\n\t\tlibWrapper.register(SETTINGS.MOD_NAME, 'ChatMessage.prototype.getHTML', async function (this: ChatMessage, wrapper: (...arg: any) => Promise<JQuery<HTMLElement>>, ...args: any) {\n\t\t\tconst html = await wrapper(...args);\n\t\t\tlet chatColor = (<string>this.user.getFlag(SETTINGS.MOD_NAME, PlayerColor.FLAG_CHAT_COLOR))?.trim();\n\t\t\t// If it is a valid color\n\t\t\tif (!chatColor || !/#[a-fA-F0-9]{6,8}/.test(chatColor)) {\n\t\t\t\tchatColor = this.user.color;\n\t\t\t}\n\t\t\thtml[0].style.borderColor = chatColor;\n\t\t\thtml[0].style.setProperty('--dfce-mc-border-color', chatColor);\n\t\t\tif (SETTINGS.get(PlayerColor.PREF_TINT_BG)) {\n\t\t\t\thtml[0].style.backgroundColor = chatColor;\n\t\t\t\thtml[0].style.backgroundImage = 'url(../ui/parchment.jpg)';\n\t\t\t\thtml[0].style.backgroundRepeat = 'repeat';\n\t\t\t\thtml[0].style.backgroundBlendMode = 'screen';\n\t\t\t}\n\t\t\treturn html;\n\t\t}, 'WRAPPER');\n\t}\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as DFChatArchive from \"./archive/df-chat-archive\";\nimport DFChatEdit from \"./edit/df-chat-edit\";\nimport * as DFAdventureLog from \"./logger/df-adventure-log\";\nimport DFAdventureLogProcessor from \"./logger/DFAdventureLogProcessor\";\nimport ChatMerge from \"./merge/chat-merge\";\nimport initDFChatPrivacy from \"./privacy/df-chat-privacy\";\nimport ScrollManage from \"./scroll-manage/scroll-manage\";\nimport SETTINGS from \"../../common/Settings\";\nimport WhisperTruncation from \"./whisper-trunc/whisper-trunc\";\nimport PlayerColor from './player-color/PlayerColor';\nSETTINGS.init('df-chat-enhance');\n\ndeclare global {\n\tinterface Application {\n\t\t_recalculateDimensions(): void;\n\t}\n}\n\n(<any>Application.prototype)._recalculateDimensions = function () {\n\tthis.element[0].style.height = '';\n\tthis.element[0].style.width = '';\n\tthis.setPosition({});\n};\n\nHooks.once('init', function () {\n\t/**\n\t * Order here matters! The archive adds a button to the\n\t * chat window, while the privacy changes those buttons\n\t * from <a> tags to <button> tags if enabled.\n\t */\n\tDFChatArchive.init();\n\tinitDFChatPrivacy();\n\tDFAdventureLog.init();\n\tChatMerge.init();\n\tScrollManage.init();\n\tWhisperTruncation.init();\n\tPlayerColor.init();\n\n\tlibWrapper.register(SETTINGS.MOD_NAME, 'ChatLog.prototype._getEntryContextOptions', function (wrapped: (...args: any) => ContextMenu.Item[], ...args: any) {\n\t\tconst options = wrapped(...args);\n\t\tDFChatEdit.appendChatContextMenuOptions(options);\n\t\tDFAdventureLogProcessor.appendChatContextMenuOptions(options);\n\t\treturn options;\n\t}, 'WRAPPER');\n});\n\nHooks.once('ready', function () {\n\tif (!game.modules.get('lib-wrapper')?.active) {\n\t\tconsole.error('Missing libWrapper module dependency');\n\t\tif (game.user.isGM)\n\t\t\tui.notifications.error('DF_CHAT_LOG.Error.LibWrapperMissing'.localize());\n\t}\n\tDFAdventureLog.ready();\n\tDFChatEdit.ready();\n\tChatMerge.ready();\n\tScrollManage.ready();\n});\n"],"names":["init","archiveNew","archiveManager","DFChatArchive","name","scope","type","Boolean","default","config","onChange","newValue","$","hide","show","Hooks","on","chatLog","html","archiveButton","localize","render","bringToTop","find","prepend","attr","settings","archiveManagerHtml","Application","RENDER_STATES","RENDERED","RENDERING","includes","_state","append","app","focus","DFChatArchiveNew","FormApplication","defaultOptions","mergeObject","template","resizable","minimizable","title","static","PREF_DELETE","getData","options","super","shouldDelete","async","_event","formData","delete","ui","notifications","warn","Error","chats","chat","collection","values","fromDate","Date","from","getTime","toDate","to","isNaN","filter","value","data","timestamp","info","replace","e","_renderInner","then","prop","this","_recalculateDimensions","PREF_HIDE_EXPORT","ArchiveFolderMenu","folder","PREF_FOLDER","source","PREF_FOLDER_SOURCE","width","height","submitOnClose","submitOnChange","closeOnSubmit","_options","path","input","event","preventDefault","fp","FilePicker","current","field","callback","activeSource","button","currentTarget","browse","DATA_FOLDER","listener","_updateListener","PREF_LOGS","Object","PREF_CID","Number","PREF_FOLDER_MENU","label","hint","restricted","String","game","world","id","createArchiveFolderIfMissing","catch","_","createDirectory","getLogs","x","visible","folderPath","fileName","encodeURI","file","File","JSON","stringify","response","upload","console","error","filepath","filename","newId","entry","_generateChatArchiveFile","logs","push","archive","fetch","json","ok","newChatData","toString","idx","findIndex","Promise","all","map","entryIdx","splice","SETTINGS","moduleName","MOD_NAME","prototype","i18n","valueOf","key","register","registerMenu","get","set","DFChatArchiveManager","messages","user","isGM","sort","a","b","localeCompare","reverseSort","PREF_REVERSE_SORT","reverse","_subscribeView","element","parseInt","chatViewers","has","view","_subscribeDelete","Dialog","confirm","content","defaultYes","yes","activateListeners","_archiveChanged","bind","length","each","i","asc","dsc","close","archiveContainer","empty","children","Map","DFChatArchiveViewer","constructor","onCloseCallBack","classes","logId","target","checked","setTimeout","dialog","buttons","save","icon","val","clone","addClass","window","print","remove","removeClass","renderTemplate","archives","cancel","merge","currentChats","sourceChats","mergedChats","concat","anchor","document","createElement","download","href","btoa","click","log","messageHtml","deletionList","deleteButton","chatMessage","ChatMessage","getHTML","parentElement","buttonIcon","hasClass","err","message","_id","PREF_EDIT_ALLOWED","PREF_GM_ALL","PREF_IGNORE_HTML","DFChatEdit","libWrapper","wrapper","args","keyboard","getKey","ctrlKey","editChatMessage","originalMessage","trim","startsWith","result","_sentMessages","unshift","condition","header","chatData","processChatMessage","chatEditor","str","doc","DOMParser","parseFromString","Array","body","childNodes","some","node","HTMLElement","classList","contains","HTMLBRElement","nodeType","isRoll","userId","isHTML","DFChatEditor","editable","popOut","messageText","PREF_MARKDOWN","processMarkdown","search","update","marked","parse","headerIds","breaks","trimEnd","substr","endsWith","newLine","test","api","postToChat","gmevent","quote","speaker","gmquote","AdventureLog","ready","modules","active","DFAdventureLogConfig","PREF_JOURNAL","PREF_JOURNAL_GM","PREF_CONFIG","keys","journal","selectedLog","selectedGMLog","logJournals","gmlogJournals","selected","logJournal","gmlogJournal","clear","gmClear","initializeJournal","isGMOnly","trimStart","whitespace","index","c","every","DFAdventureLogProcessor","enabled","PREF_ENABLE","gmOnly","PREF_GMONLY","commandProcessor","users","logCommand","deregisterCommand","registerCommand","PREF_GMONLY_WHISPER","PREF_USE_TIME","PREF_MESSAGES","PREF_SORTDESC","resortLog","PREF_SIMPLE_CALENDAR","logConfig","chatCommands","gmlogCommand","createCommandFromData","commandKey","invokeOnCommand","_cl","msg","_cd","shouldDisplayToChat","iconClass","description","useTime","stamp","SimpleCalendar","formatDateTime","timestampToDate","date","time","toLocaleString","split","gmLog","preventPostToChat","tokens","prompt","getSpeaker","messageData","flavor","CONST","CHAT_MESSAGE_TYPES","OOC","line","toLowerCase","slice","_getTimestamp","journalId","permanent","section","rollType","whisper","create","descending","journalAll","journalGM","journalSort","article","text","ChatMerge","_enabled","PREF_ENABLED","_epoch","PREF_EPOCH","_allowRolls","PREF_ALLOW_ROLLS","_separateWithBorder","PREF_SEPARATE","_showHover","PREF_HOVER","_showHeader","PREF_SHOW_HEADER","_processAllMessage","style","querySelector","setProperty","PREF_SPLIT_SPEAKER","choices","none","rolls","range","min","max","step","_deleteMessage","_renderChatMessage","messageId","deleteAll","nextElementSibling","add","previousElementSibling","hasAttribute","borderColor","_styleChatMessages","getAttribute","_cmd","partnerElem","last","partner","previous","splitSpeaker","userCompare","currData","prevData","actor","_inTimeFrame","curr","currElem","prev","prevElem","undefined","exec","dataset","_isValidMessage","ICONS_FOR_KNOWN_ROLL_TYPES","roll","gmroll","blindroll","selfroll","handleChatLogRendering","modes","rollModes","iconKeys","rt","rollMode","colour","count","buttonHtml","after","first","_data","handler","initDFChatPrivacy","CONFIG","location","reload","ScrollManage","scrollToBottomIfYouSendMessage","PREF_SCROLL_IF_YOU","_renderChatLog","_ChatLog_postOne","unregister","_scrollToBottomButton","el","scrollTo","behavior","top","scrollHeight","before","clientHeight","ScrollThreshold","scrollTop","notify","_lastId","_lastWhisper","atBottom","isAuthor","_popout","postOne","setPosition","LENGTH_ADJUST","WhisperTruncation","_messageRender","PREF_CHAR_LIMIT","accum","_formatTitle","CHAR_LIMIT","tmpNames","tmpTitle","newHeader","join","replaceWith","names","PlayerColor","PREF_TINT_BG","color","getFlag","FLAG_CHAT_COLOR","parent","chatField","chatPicker","wrapped","object","setFlag","chatColor","backgroundColor","backgroundImage","backgroundRepeat","backgroundBlendMode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","o","defineProperty","enumerable","obj","hasOwnProperty","call","r","Symbol","toStringTag","once"],"sourceRoot":""}