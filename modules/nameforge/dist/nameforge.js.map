{"version":3,"file":"nameforge.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/create fake namespace object","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/ensure chunk","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/load script","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///./src/NameForge.js","webpack:///./src/GenerateApplication.js","webpack:///./src/TrainApplication.js","webpack:///./src/ConfigMenu.js","webpack:///./src/UploadMenu.js","webpack:///./src/module.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + {\"348\":\"worker\",\"736\":\"vendor\"}[chunkId] + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"@elvispereira/nameforge:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/modules/nameforge/dist/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t426: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_elvispereira_nameforge\"] = self[\"webpackChunk_elvispereira_nameforge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","export default class NameForge {\n  /**\n   * Prepare the data needed to train a model from the provided list of names.\n   * @param {string} listOfNames A list of names separated by a comma (\",\").\n   * @returns {Array} Array containing each name in the list.\n   */\n  prepareData (listOfNames) {\n    if (!listOfNames || listOfNames?.length === 0) {\n      throw new Error('Provided list don\\'t contain any names.');\n    }\n\n    const names = [...new Set(listOfNames.toLowerCase().split(','))].sort();\n\n    if (names.length === 1) {\n      throw new Error('The list is too short');\n    }\n\n    return names.map(name => name.trim());\n  }\n\n  /**\n   * A brain.js neural network used for training and inference.\n   * @typedef {Object} NeuralNetwork\n   */\n\n  /**\n   * Create a brain.js LSTM model to be used later.\n   * @param {Object} options Path to JSON file or string containing a pre-trained model.\n   * @returns {(NeuralNetwork|null)} A new model or pre-trained model (null if not found).\n   */\n  async createModel (options = { path: null, json: null }) {\n    const { recurrent } = await import('brain.js');\n    const model = new recurrent.LSTM({\n      activation: 'tanh'\n    });\n\n    if (options.path) {\n      const response = await fetch(options.path);\n      if (response.ok) {\n        model.fromJSON(await response.json());\n        return model;\n      }\n      return null;\n    }\n\n    if (options.json) {\n      model.fromJSON(JSON.parse(options.json));\n    }\n\n    return model;\n  }\n\n  /**\n   * Train a model in a list of names to be later used for predictions.\n   * @param {Array} trainingData Array of names that the model will be trained on.\n   * @param {NeuralNetwork} model Brain.js model to train data on.\n   * @param {Object} userOptions User supplied option to fine tune the training.\n   * @returns {NeuralNetwork} The trained brain.js model.\n   */\n  trainModel (trainingData, model, userOptions = {}) {\n    const options = {\n      iterations: 500,\n      errorThreshold: 0.10,\n      callback: null,\n      callbackPeriod: 10,\n      learningRate: 0.01,\n      timeout: 'Infinity',\n      ...userOptions\n    };\n\n    const result = model.train(trainingData, options);\n\n    console.info(`Training completed after ${result.iterations} iterations, loss ${result.error}`);\n\n    return model;\n  }\n\n  /**\n   * Get a list of available pre-trained models to be used.\n   * @returns {Object} An object containing each pre-trained model.\n   */\n  static async getModels () {\n    const models = {\n      userModels: null,\n      defaultModels: null\n    };\n\n    const userModels = await fetch('nameforge-models/models.json');\n    const defaultModels = await fetch('modules/nameforge/models/models.json');\n\n    if (userModels.ok) {\n      models.userModels = await userModels.json();\n    }\n\n    if (defaultModels.ok) {\n      models.defaultModels = await defaultModels.json();\n    }\n\n    return models;\n  }\n\n  /**\n   * Filter models by type.\n   * @param {Object} models Object containing all the grouped models.\n   * @returns {Object} An object containing the grouped models separated by type.\n   */\n  static filterModels (models) {\n    return {\n      userModels: {\n        names: Object.values(models.userModels).filter(model => !model?.type || model?.type === 'name'),\n        surnames: Object.values(models.userModels).filter(model => model?.type === 'surname')\n      },\n      defaultModels: {\n        names: Object.values(models.defaultModels).filter(model => !model?.type || model?.type === 'name'),\n        surnames: Object.values(models.defaultModels).filter(model => model?.type === 'surname')\n      }\n    };\n  }\n\n  /**\n   * Simple or weighted random selection.\n   * @param {Array} data Array with the possible options that can be selected.\n   * @returns The randomly selected entry.\n   */\n  selectRandom (data) {\n    const entries = data.map(entry => {\n      const weight = entry?.weight ?? 1;\n      return { value: entry, weight };\n    });\n\n    const weightSum = entries.reduce((accumulator, entry) => accumulator + Number(entry.weight), 0);\n    let selectedWeight = Math.random() * weightSum;\n\n    for (let index = 0; index < entries.length; index++) {\n      const entry = entries[index];\n\n      if (selectedWeight < entry.weight) {\n        return entry.value;\n      }\n\n      selectedWeight -= entry.weight;\n    }\n  }\n\n  /**\n   * Capitalize the first letter of a string (with internationalization support).\n   * @param {string} string A string to be capitalized.\n   * @param {string} locale Language code used to define the correct capitalization.\n   * @returns {string} The capitalized string.\n   * @see https://stackoverflow.com/a/53930826/38522\n   */\n  capitalize (string, locale = game.i18n.lang) {\n    const [firstLetter, ...rest] = string;\n    return firstLetter === undefined ? '' : firstLetter.toLocaleUpperCase(locale) + rest.join('');\n  }\n\n  /**\n   * Generate one or more names using the supplied model.\n   * @param {NeuralNetwork} model Pre-trained model that will be used for predictions.\n   * @param {Object} userOptions User supplied option to fine tune predictions.\n   * @returns {Array} An array with each predicted name.\n   */\n  generateName (model, userOptions = {}) {\n    const options = {\n      count: 1,\n      original: false,\n      seed: '',\n      temperature: 1,\n      ...userOptions\n    };\n\n    const originalNames = model.options.dataFormatter.values;\n\n    if (options.temperature <= 0 || isNaN(options.temperature)) {\n      options.temperature = 1;\n    }\n\n    if (options.count > 1) {\n      const names = new Set();\n\n      while (names.size < options.count) {\n        if (options.original) {\n          if (options.count > originalNames.length) {\n            options.count = originalNames.length;\n          }\n          names.add(this.capitalize(this.selectRandom(originalNames)));\n        } else {\n          names.add(this.capitalize(options.seed + model.run(options.seed.toLowerCase(), true, options.temperature)));\n        }\n      }\n\n      return Array.from(names);\n    }\n\n    if (options.original) {\n      return [this.capitalize(this.selectRandom(originalNames))];\n    }\n\n    const name = this.capitalize(options.seed + model.run(options.seed.toLowerCase(), true, options.temperature));\n\n    return [name];\n  }\n\n  /**\n   * Generate one or more full names using the supplied models.\n   * @param {NeuralNetwork} nameModel Pre-trained model that will be used to predict names.\n   * @param {NeuralNetwork} surnameModel Pre-trained model that will be used to predict surnames.\n   * @param {Object} userOptions User supplied option to fine tune predictions.\n   * @returns {Array} An array with each predicted full name.\n   */\n  generateFullName (nameModel, surnameModel, userOptions = { name: {}, surname: {} }) {\n    const options = {\n      name: {\n        count: 1,\n        original: false,\n        seed: '',\n        temperature: 1,\n        ...userOptions.name\n      },\n      surname: {\n        count: 1,\n        original: false,\n        seed: '',\n        temperature: 1,\n        ...userOptions.surname\n      }\n    };\n\n    const names = this.generateName(nameModel, options.name);\n    const fullNames = names.map(name => {\n      const surnameCount = Math.round(Math.random() * (options.surname.count - 1) + 1);\n      const surnames = this.generateName(surnameModel, { ...options.surname, ...{ count: surnameCount } });\n      return `${name} ${surnames.join(' ')}`;\n    });\n\n    return fullNames;\n  }\n}\n","import NameForge from './NameForge.js';\n\nexport default class GenerateApplication extends Application {\n  /**\n   * @param {Object} sheet Actor sheet\n   */\n  constructor (sheet = false) {\n    super();\n    this.sheet = sheet;\n  }\n\n  /**\n   * Encode a string, removing any special characters from it.\n   * @param {string} name Displayed model name.\n   * @returns {string} Lowercase name withow spaces or special characters.\n   */\n  encodeName (name) {\n    return name.toLowerCase().replace(/\\s/g, '-').replace(/[^a-z0-9_-]/g, '');\n  }\n\n  /**\n   * Add names to an HTML document element.\n   * @param {Element} container The document element where names will be added.\n   * @param {Array} names Array containing the names that should be added.\n   * @param {string('name' | 'surname' | 'fullName')} type The type of names contained in the array.\n   */\n  addNames (container, names, type) {\n    container.replaceChildren();\n\n    names.forEach(name => {\n      const anchor = document.createElement('a');\n      anchor.classList = 'nf-tag';\n      anchor.innerText = name;\n      if (!this.sheet) {\n        anchor.addEventListener('click', () => {\n          navigator.clipboard.writeText(anchor.innerText);\n          ui.notifications.info(game.i18n.localize('NAMEFORGE.GENERATE.clipboard'));\n        });\n      } else if (this.sheet) {\n        const actor = this.sheet.actor;\n        anchor.addEventListener('click', async () => {\n          const newName = type === 'surname' ? `${actor.name} ${name}` : name;\n          await actor.update({ name: newName });\n          ui.notifications.info(game.i18n.localize('NAMEFORGE.GENERATE.actorUpdated'));\n        });\n      }\n      container.appendChild(anchor);\n    });\n  }\n\n  /**\n   * Add an auto name changer to an HTML document element and actor.\n   * @param {Element} container The document element where the auto name changer will be added.\n   * @param {Object} actor The actor where the auto name changer flag will be set.\n   * @param {Object} data Object containing the data used to set the actor flag.\n   */\n  async addNameChanger (container, actor, data) {\n    const encodedName = this.encodeName(data.name);\n    await actor.setFlag('nameforge', 'models', {\n      ...actor.getFlag('nameforge', 'models'),\n      [encodedName]: data\n    });\n\n    const anchor = document.createElement('a');\n    anchor.classList = 'nf-tag';\n    anchor.innerText = data.name;\n    anchor.id = encodedName;\n    anchor.addEventListener('click', async () => await this.removeNameChanger(actor, anchor));\n\n    const tag = container.querySelector(`#${anchor.id}`);\n    if (tag) {\n      tag.remove();\n      container.appendChild(anchor);\n    } else {\n      container.appendChild(anchor);\n    }\n  }\n\n  /**\n   * Remove an auto name changer and update actor flag.\n   * @param {Object} actor Foundry actor.\n   * @param {Element} element HTML element that should be removed.\n   */\n  async removeNameChanger (actor, element) {\n    const modelsFlag = actor.getFlag('nameforge', 'models');\n    delete modelsFlag[element.id];\n    await actor.unsetFlag('nameforge', 'models');\n    await actor.setFlag('nameforge', 'models', modelsFlag);\n    element.remove();\n  }\n\n  /**\n   * @override\n   * @see https://foundryvtt.com/api/interfaces/client.ApplicationOptions.html\n   */\n  static get defaultOptions () {\n    const options = super.defaultOptions;\n    options.template = 'modules/nameforge/templates/generate-names.hbs';\n    options.width = 800;\n    options.resizable = true;\n    options.title = game.i18n.localize('NAMEFORGE.TITLE.generate');\n\n    return options;\n  }\n\n  /**\n   * @override\n   * @see https://foundryvtt.com/api/classes/client.Application.html#getData\n   */\n  async getData () {\n    return {\n      actor: this.sheet ? this.sheet.actor : false,\n      config: game.settings.get('nameforge', 'defaultConfig'),\n      models: NameForge.filterModels(game.modules.get('nameforge').models),\n      show: {\n        seed: true,\n        temperature: true,\n        count: true,\n        weight: this.sheet\n      }\n    };\n  }\n\n  /**\n   * @override\n   * @see https://foundryvtt.com/api/classes/client.Application.html#activateListeners\n   */\n  async activateListeners (html) {\n    const namesContainer = html[0].querySelector('#names');\n    const nameChangersContainer = html[0].querySelector('#nameChangers');\n    const originalNameContainer = html[0].querySelector('p[name=\"original\"]');\n    const form = html[0].querySelector('#nameforge');\n\n    if (this.sheet) {\n      const actor = this.sheet.actor;\n      const models = actor.getFlag('nameforge', 'models');\n\n      const originalName = document.createElement('a');\n      originalName.classList = 'nf-tag';\n      originalName.innerText = actor.name;\n      originalName.addEventListener('click', async () => await actor.update({ name: originalName.innerText }));\n      originalNameContainer.appendChild(originalName);\n\n      for (const key in models) {\n        const anchor = document.createElement('a');\n        anchor.classList = 'nf-tag';\n        anchor.innerText = models[key].name;\n        anchor.id = key;\n        anchor.addEventListener('click', async () => await this.removeNameChanger(actor, anchor));\n        nameChangersContainer.appendChild(anchor);\n      }\n    }\n\n    form.addEventListener('submit', async (event) => {\n      await event.preventDefault();\n\n      const nameforge = new NameForge();\n      const action = event.submitter.name;\n      const formData = new FormData(form);\n      const data = {\n        name: {\n          model: formData.get('nameModel'),\n          count: formData.get('nameCount'),\n          seed: formData.get('nameSeed'),\n          temperature: formData.get('nameTemperature'),\n          weight: formData.get('nameWeight'),\n          original: form.querySelector('input[name=\"nameOriginal\"]').checked\n        },\n        surname: {\n          model: formData.get('surnameModel'),\n          count: formData.get('surnameCount'),\n          seed: formData.get('surnameSeed'),\n          temperature: formData.get('surnameTemperature'),\n          weight: formData.get('surnameWeight'),\n          original: form.querySelector('input[name=\"surnameOriginal\"]').checked\n        }\n      };\n      const nameSelect = form.querySelector('select[name=\"nameModel\"]');\n      const surnameSelect = form.querySelector('select[name=\"surnameModel\"]');\n      const optionText = {\n        name: nameSelect.options[nameSelect.selectedIndex].text,\n        surname: surnameSelect.options[surnameSelect.selectedIndex].text\n      };\n\n      if (data.name.model === 'none' ^ data.surname.model === 'none') {\n        const type = data.name.model !== 'none' ? 'name' : 'surname';\n        const options = {\n          count: data[type].count,\n          original: data[type].original,\n          seed: data[type].seed,\n          temperature: data[type].temperature\n        };\n\n        if (action === 'generate') {\n          const model = await nameforge.createModel({ path: data[type].model });\n          const names = nameforge.generateName(model, options);\n          this.addNames(namesContainer, names, type);\n        } else if (action === 'add') {\n          this.addNameChanger(nameChangersContainer, this.sheet.actor, {\n            name: optionText[type],\n            model: data[type].model,\n            options,\n            type,\n            weight: data[type].weight\n          });\n        }\n      } else if (data.name.model !== 'none' && data.surname.model !== 'none') {\n        const options = {\n          name: {\n            count: data.name.count,\n            seed: data.name.seed,\n            temperature: data.name.temperature\n          },\n          surname: {\n            count: data.surname.count,\n            seed: data.surname.seed,\n            temperature: data.surname.temperature\n          }\n        };\n\n        if (action === 'generate') {\n          const nameModel = await nameforge.createModel({ path: data.name.model });\n          const surnameModel = await nameforge.createModel({ path: data.surname.model });\n          const names = nameforge.generateFullName(nameModel, surnameModel, options);\n          this.addNames(namesContainer, names, 'fullName');\n        } else if (action === 'add') {\n          this.addNameChanger(nameChangersContainer, this.sheet.actor, {\n            name: `${optionText.name}/${optionText.surname}`,\n            model: { name: data.name.model, surname: data.surname.model },\n            options,\n            type: 'fullName',\n            weight: data.name.weight\n          });\n        }\n      }\n      super.setPosition({ height: 'auto' });\n    });\n  }\n}\n","import NameForge from './NameForge.js';\n\nexport default class TrainApplication extends Application {\n  /**\n   * Save model to disk and update models list.\n   * @param {string} modelName Display name of the model\n   * @param {string} model JSON encoded model.\n   * @param {string('name' | 'surname')} type The type of the model.\n   */\n  async saveModel (modelName, model, type) {\n    const fileName = modelName.toLowerCase().replace(/\\s/g, '-').replace(/[^a-z0-9_-]/g, '');\n    const response = await fetch('nameforge-models/models.json');\n    const userModels = await response.json();\n    userModels[fileName] = { name: modelName, path: `nameforge-models/${fileName}.json`, type };\n\n    await FilePicker.upload('data', 'nameforge-models', new File([model], `${fileName}.json`, { type: 'application/json' }), {}, { notify: false });\n    await FilePicker.upload('data', 'nameforge-models', new File([JSON.stringify(userModels, null, 2)], 'models.json', { type: 'application/json' }));\n\n    game.modules.get('nameforge').models.userModels[fileName] = { name: modelName, path: `nameforge-models/${fileName}.json`, type };\n  }\n\n  /**\n   * @override\n   * @see https://foundryvtt.com/api/interfaces/client.ApplicationOptions.html\n   */\n  static get defaultOptions () {\n    const options = super.defaultOptions;\n    options.template = 'modules/nameforge/templates/train-model.hbs';\n    options.width = 600;\n    options.resizable = true;\n    options.title = game.i18n.localize('NAMEFORGE.TITLE.train');\n\n    return options;\n  }\n\n  /**\n   * @override\n   * @see https://foundryvtt.com/api/classes/client.Application.html#activateListeners\n   */\n  activateListeners (html) {\n    const form = html[0].querySelector('#train-model');\n    const submitButton = html[0].querySelector('#train-model button[name=\"train\"]');\n    const stopButton = html[0].querySelector('#train-model button[name=\"stop\"]');\n    const resultsContainer = html[0].querySelector('#results');\n    const namesPreview = html[0].querySelector('#results p');\n    const progressBar = document.createElement('progress');\n    progressBar.classList = 'nf-progress';\n\n    form.addEventListener('submit', async (event) => {\n      await event.preventDefault();\n\n      submitButton.disabled = true;\n      stopButton.disabled = false;\n\n      const formData = Object.fromEntries(new FormData(form).entries());\n      const { modelName, errorThreshold, iterations, learningRate, timeout, trainingData, type } = formData;\n      const options = {\n        ...(timeout > 0 && { timeout: timeout * 60000 }),\n        ...(iterations > 0 && { iterations }),\n        ...((learningRate >= 0 && learningRate <= 1) && { learningRate }),\n        ...((errorThreshold >= 0 && errorThreshold <= 1) && { errorThreshold })\n      };\n\n      progressBar.max = iterations - 1;\n      resultsContainer.append(progressBar);\n\n      const worker = new Worker(\n        /* webpackChunkName: \"worker\" */\n        new URL('worker.js', import.meta.url)\n      );\n\n      stopButton.addEventListener('click', async () => {\n        worker.terminate();\n\n        await this.saveModel(modelName, bestIteration.model, type);\n\n        submitButton.disabled = false;\n        stopButton.disabled = true;\n      });\n\n      const bestIteration = { number: 0, error: 1, model: null };\n      const nameforge = new NameForge();\n\n      worker.postMessage({ name: 'train', options, names: trainingData });\n      worker.onmessage = async (message) => {\n        const { name, details, model } = message.data;\n        if (name === 'progress') {\n          progressBar.value = details.iterations;\n\n          if (details.error < bestIteration.error) {\n            bestIteration.iteration = details.iterations;\n            bestIteration.error = details.error;\n            bestIteration.model = await nameforge.createModel({ json: model });\n            const names = nameforge.generateName(bestIteration.model, { count: 5 });\n            namesPreview.innerText = `Best iteration (${bestIteration.iteration}) -> Loss: ${bestIteration.error.toPrecision(2)} | ${names.join(', ')}`;\n          }\n        }\n\n        if (name === 'complete') {\n          await this.saveModel(modelName, model, type);\n\n          submitButton.disabled = false;\n          stopButton.disabled = true;\n        }\n      };\n      worker.onerror = (error) => {\n        console.log(`Worker error: ${error.message}`);\n        throw error;\n      };\n\n      super.setPosition({ height: 'auto' });\n    });\n  }\n}\n","import NameForge from './NameForge.js';\n\nexport default class ConfigMenu extends FormApplication {\n  /**\n   * @override\n   * @see https://foundryvtt.com/api/interfaces/client.ApplicationOptions.html\n   */\n  static get defaultOptions () {\n    const options = super.defaultOptions;\n    options.closeOnSubmit = false;\n    options.template = 'modules/nameforge/templates/config-menu.hbs';\n    options.width = 600;\n    options.resizable = true;\n    options.title = game.i18n.localize('NAMEFORGE.TITLE.config');\n\n    return options;\n  }\n\n  /**\n   * @override\n   * @see https://foundryvtt.com/api/classes/client.Application.html#getData\n   */\n  async getData () {\n    return {\n      config: game.settings.get('nameforge', 'defaultConfig'),\n      models: NameForge.filterModels(game.modules.get('nameforge').models),\n      show: {\n        seed: false,\n        temperature: true,\n        count: true,\n        weight: false\n      }\n    };\n  }\n\n  /**\n   * @override\n   * @see https://foundryvtt.com/api/classes/client.FormApplication.html#_updateObject\n   */\n  async _updateObject (event, formData) {\n    if (event.type === 'submit') {\n      const data = {\n        name: {\n          model: formData.nameModel,\n          count: formData.nameCount,\n          temperature: formData.nameTemperature,\n          original: formData.nameOriginal\n        },\n        surname: {\n          model: formData.surnameModel,\n          count: formData.surnameCount,\n          temperature: formData.surnameTemperature,\n          original: formData.surnameOriginal\n        }\n      };\n\n      game.settings.set('nameforge', 'defaultConfig', data);\n      ui.notifications.info(game.i18n.localize('NAMEFORGE.SETTINGS.saved'));\n    }\n  }\n}\n","export default class UploadMenu extends FormApplication {\n  /**\n   * @override\n   * @see https://foundryvtt.com/api/interfaces/client.ApplicationOptions.html\n   */\n  static get defaultOptions () {\n    const options = super.defaultOptions;\n    options.closeOnSubmit = false;\n    options.template = 'modules/nameforge/templates/upload-menu.hbs';\n    options.width = 600;\n    options.resizable = true;\n    options.title = game.i18n.localize('NAMEFORGE.TITLE.upload');\n\n    return options;\n  }\n\n  /**\n   * @override\n   * @see https://foundryvtt.com/api/classes/client.FormApplication.html#_updateObject\n   */\n  async _updateObject (event, formData) {\n    if (event.type === 'submit') {\n      const file = event.currentTarget[2].files[0];\n      const modelName = formData.name.toLowerCase().replace(/\\s/g, '-').replace(/[^a-z0-9_-]/g, '');\n      const response = await fetch('nameforge-models/models.json');\n      const userModels = await response.json();\n      userModels[modelName] = { name: formData.name, path: `nameforge-models/${file.name}`, type: formData.type };\n\n      await FilePicker.upload('data', 'nameforge-models', file);\n      await FilePicker.upload('data', 'nameforge-models', new File([JSON.stringify(userModels, null, 2)], 'models.json', { type: 'application/json' }), {}, { notify: false });\n\n      game.modules.get('nameforge').models.userModels[file.name] = { name: formData.name, path: `nameforge-models/${file.name}`, type: formData.type };\n    }\n  }\n}\n","import NameForge from './NameForge.js';\nimport GenerateApplication from './GenerateApplication.js';\nimport TrainApplication from './TrainApplication.js';\nimport ConfigMenu from './ConfigMenu.js';\nimport UploadMenu from './UploadMenu.js';\n\nconst nameforge = new NameForge();\n\nHooks.once('init', () => {\n  game.settings.register('nameforge', 'defaultConfig', {\n    scope: 'client',\n    config: false,\n    requiresReload: false,\n    type: Object,\n    default: {\n      name: {\n        model: null,\n        temperature: 1,\n        count: 1,\n        original: false\n      },\n      surname: {\n        model: 'none',\n        temperature: 1,\n        count: 1,\n        original: false\n      }\n    }\n  });\n\n  game.settings.registerMenu('nameforge', 'defaultConfigMenu', {\n    name: game.i18n.localize('NAMEFORGE.SETTINGS.name'),\n    label: game.i18n.localize('NAMEFORGE.SETTINGS.label'),\n    hint: game.i18n.localize('NAMEFORGE.SETTINGS.hint'),\n    icon: 'fas fa-wrench',\n    type: ConfigMenu,\n    restricted: false\n  });\n\n  game.settings.registerMenu('nameforge', 'modelUpload', {\n    name: game.i18n.localize('NAMEFORGE.SETTINGS.UPLOAD.name'),\n    label: game.i18n.localize('NAMEFORGE.SETTINGS.UPLOAD.label'),\n    hint: game.i18n.localize('NAMEFORGE.SETTINGS.UPLOAD.hint'),\n    icon: 'fas fa-upload',\n    type: UploadMenu,\n    restricted: true\n  });\n\n  loadTemplates([\n    'modules/nameforge/templates/partials/generate-options.hbs'\n  ]);\n});\n\nHooks.on('ready', async () => {\n  if (game.user.hasPermission('FILES_UPLOAD') && game.user.hasPermission('FILES_BROWSE')) {\n    try {\n      await FilePicker.createDirectory('data', 'nameforge-models');\n    } catch (error) {\n      console.log('Folder already exists, skipping creation');\n    }\n\n    const { files } = await FilePicker.browse('data', 'nameforge-models');\n    if (!files.includes('nameforge-models/models.json')) {\n      await FilePicker.upload('data', 'nameforge-models', new File([JSON.stringify({}, null, 2)], 'models.json', { type: 'application/json' }), {}, { notify: false });\n    }\n  }\n\n  game.modules.get('nameforge').api = new NameForge();\n  game.modules.get('nameforge').models = await NameForge.getModels();\n});\n\nHooks.on('renderActorDirectory', (sidebar, html) => {\n  const footerButtons = html[0].querySelector('footer.directory-footer.action-buttons');\n  footerButtons.insertAdjacentHTML('afterbegin', `<button id=\"generate-names\"><i class=\"fas fa-plus\"></i>${game.i18n.localize('NAMEFORGE.BUTTON.generate')}</button>`);\n\n  const generateButton = html[0].querySelector('#generate-names');\n  generateButton.addEventListener('click', () => new GenerateApplication().render(true));\n  if (game.user.hasPermission('FILES_UPLOAD')) {\n    footerButtons.insertAdjacentHTML('beforeend', `<button id=\"train-model\"><i class=\"fas fa-head-side-brain\"></i>${game.i18n.localize('NAMEFORGE.BUTTON.train')}</button>`);\n    const trainButton = html[0].querySelector('#train-model');\n    trainButton.addEventListener('click', () => new TrainApplication().render(true));\n  }\n});\n\nHooks.on('renderDialog', async (dialog, html) => {\n  if (dialog.data.title === game.i18n.format('DOCUMENT.Create', { type: game.i18n.localize('DOCUMENT.Actor') })) {\n    const models = NameForge.filterModels(game.modules.get('nameforge').models);\n    const template = await renderTemplate('modules/nameforge/templates/create-new-actor.hbs', {\n      config: game.settings.get('nameforge', 'defaultConfig'),\n      models,\n      show: {\n        seed: true,\n        temperature: false,\n        count: false,\n        weight: false\n      }\n    });\n\n    const actorCreateForm = html[0].querySelector('#document-create');\n    actorCreateForm.insertAdjacentHTML('afterend', template);\n\n    const dialogButtons = html[0].querySelector('div.dialog-buttons');\n    dialogButtons.insertAdjacentHTML('afterbegin', `<button form=\"nameforge\" class=\"dialog-button default\"><i class=\"fas fa-plus\"></i>${game.i18n.localize('NAMEFORGE.BUTTON.generate')}</button>`);\n\n    const form = html[0].querySelector('#nameforge');\n\n    form.addEventListener('submit', async (event) => {\n      await event.preventDefault();\n      const formData = new FormData(form);\n      let name;\n\n      const data = {\n        name: {\n          model: formData.get('nameModel'),\n          seed: formData.get('nameSeed'),\n          temperature: formData.get('nameTemperature')\n        },\n        surname: {\n          model: formData.get('surnameModel'),\n          seed: formData.get('surnameSeed'),\n          temperature: formData.get('surnameTemperature')\n        }\n      };\n\n      if (data.name.model === 'none' ^ data.surname.model === 'none') {\n        const type = data.name.model !== 'none' ? 'name' : 'surname';\n        const options = {\n          count: data[type].count,\n          seed: data[type].seed,\n          temperature: data[type].temperature\n        };\n        const model = await nameforge.createModel({ path: data[type].model });\n        name = nameforge.generateName(model, options);\n      } else if (data.name.model !== 'none' && data.surname.model !== 'none') {\n        const options = {\n          name: {\n            count: data.name.count,\n            seed: data.name.seed,\n            temperature: data.name.temperature\n          },\n          surname: {\n            count: data.surname.count,\n            seed: data.surname.seed,\n            temperature: data.surname.temperature\n          }\n        };\n\n        const nameModel = await nameforge.createModel({ path: data.name.model });\n        const surnameModel = await nameforge.createModel({ path: data.surname.model });\n        [name] = nameforge.generateFullName(nameModel, surnameModel, options);\n      }\n\n      const nameInput = html[0].querySelector('input[name=\"name\"]');\n      nameInput.value = name;\n    });\n\n    dialog.setPosition({ height: 'auto' });\n  }\n});\n\nHooks.on('getActorSheetHeaderButtons', (sheet, buttons) => {\n  buttons.unshift({\n    label: 'NameForge',\n    class: 'nameforge',\n    icon: 'fas fa-user-edit',\n    onclick: () => new GenerateApplication(sheet).render(true)\n  });\n});\n\nHooks.on('createToken', async (token, data) => {\n  const modelsFlag = token.actor.getFlag('nameforge', 'models');\n  if (!modelsFlag || Object.values(modelsFlag || {}).length === 0) {\n    return;\n  }\n\n  const drawnEntry = nameforge.selectRandom(Object.values(modelsFlag));\n  const type = drawnEntry?.type ?? 'name';\n  let tokenName;\n\n  if (type === 'fullName') {\n    const nameModel = await nameforge.createModel({ path: drawnEntry.model.name });\n    const surnameModel = await nameforge.createModel({ path: drawnEntry.model.surname });\n    [tokenName] = nameforge.generateFullName(nameModel, surnameModel, drawnEntry.options);\n  } else if (type === 'name' || type === 'surname') {\n    const model = await nameforge.createModel({ path: drawnEntry.model });\n\n    if (type === 'name') {\n      delete drawnEntry.options.count;\n      [tokenName] = nameforge.generateName(model, drawnEntry.options);\n    } else {\n      const surname = nameforge.generateName(model, drawnEntry.options).join(' ');\n      tokenName = `${token.name} ${surname}`;\n    }\n  }\n\n  token.update({ name: tokenName });\n});\n\nHooks.on('hotReload', (hotReloadData) => {\n  const { packageType, packageId, extension } = hotReloadData;\n\n  if (packageType === 'module' && packageId === 'nameforge' && extension === 'js') {\n    location.reload();\n  }\n});\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","getProto","obj","leafPrototypes","value","mode","ns","def","current","key","exports","definition","chunkId","promises","prop","inProgress","dataWebpackPrefix","url","done","script","needAttach","scripts","i","s","onScriptComplete","prev","event","timeout","doneFns","fn","installedChunks","installedChunkData","promise","resolve","reject","error","loadingEnded","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","id","result","chunkLoadingGlobal","NameForge","listOfNames","names","name","options","recurrent","model","response","trainingData","userOptions","models","userModels","defaultModels","entries","entry","weight","weightSum","accumulator","selectedWeight","index","string","locale","firstLetter","rest","originalNames","nameModel","surnameModel","surnameCount","surnames","GenerateApplication","sheet","container","type","anchor","actor","newName","encodedName","tag","element","modelsFlag","html","namesContainer","nameChangersContainer","originalNameContainer","form","originalName","nameforge","action","formData","nameSelect","surnameSelect","optionText","TrainApplication","modelName","fileName","submitButton","stopButton","resultsContainer","namesPreview","progressBar","errorThreshold","iterations","learningRate","worker","bestIteration","message","details","ConfigMenu","UploadMenu","file","files","sidebar","footerButtons","dialog","template","nameInput","buttons","token","drawnEntry","tokenName","surname","hotReloadData","packageType","packageId","extension"],"sourceRoot":""}