const e={colemak:{keycodeDisplayMapping:{IntlBackslash:"-",KeyD:"S",KeyE:"F",KeyF:"T",KeyG:"D",KeyI:"U",KeyJ:"N",KeyK:"E",KeyL:"I",KeyN:"K",KeyO:"Y",KeyP:";",KeyR:"P",KeyS:"R",KeyT:"G",KeyU:"L",KeyY:"J",Semicolon:"O"},keybindingMapping:{KeyD:"KeyG",KeyE:"KeyK",KeyF:"KeyE",KeyG:"KeyT",KeyI:"KeyL",KeyJ:"KeyY",KeyK:"KeyN",KeyL:"KeyU",KeyN:"KeyJ",KeyO:"Semicolon",KeyP:"KeyR",KeyR:"KeyS",KeyS:"KeyD",KeyT:"KeyF",KeyU:"KeyI",KeyY:"KeyO",Semicolon:"KeyP"},i18n:"KEYBOARDLAYOUT.KeyboardLayoutColemak"},deLatin1:{keycodeDisplayMapping:{Minus:"ß",Equal:"´",Backquote:"^",Backslash:"#",BracketLeft:"Ü",BracketRight:"+",IntlBackslash:"<",KeyY:"Z",KeyZ:"Y",Quote:"Ä",Semicolon:"Ö",Slash:"-"},keybindingMapping:{KeyY:"KeyZ",KeyZ:"KeyY",Minus:"Slash"},i18n:"KEYBOARDLAYOUT.KeyboardLayoutDeLatin1"},dvorak:{keycodeDisplayMapping:{BracketLeft:"/",BracketRight:"=",Comma:"W",Equal:"]",IntlBackslash:"<",KeyA:"A",KeyB:"X",KeyC:"J",KeyD:"E",KeyE:".",KeyF:"U",KeyG:"I",KeyH:"D",KeyI:"C",KeyJ:"H",KeyK:"T",KeyL:"N",KeyM:"M",KeyN:"B",KeyO:"R",KeyP:"L",KeyQ:"'",KeyR:"P",KeyS:"O",KeyT:"Y",KeyU:"G",KeyV:"K",KeyW:",",KeyX:"Q",KeyY:"F",KeyZ:";",Minus:"[",Period:"V",Quote:"-",Semicolon:"S",Slash:"Z"},keybindingMapping:{BracketLeft:"Minus",BracketRight:"Equal",Comma:"KeyW",Equal:"BracketRight",KeyA:"KeyA",KeyB:"KeyN",KeyC:"KeyI",KeyD:"KeyH",KeyE:"KeyD",KeyF:"KeyY",KeyG:"KeyU",KeyH:"KeyJ",KeyI:"KeyG",KeyJ:"KeyC",KeyK:"KeyV",KeyL:"KeyP",KeyM:"KeyM",KeyN:"KeyL",KeyO:"KeyS",KeyP:"KeyR",KeyQ:"KeyX",KeyR:"KeyO",KeyS:"Semicolon",KeyT:"KeyK",KeyU:"KeyF",KeyV:"Period",KeyW:"Comma",KeyX:"KeyB",KeyY:"KeyT",KeyZ:"Slash",Minus:"Quote",Period:"KeyE",Quote:"KeyQ",Semicolon:"KeyZ",Slash:"BracketLeft"},i18n:"KEYBOARDLAYOUT.KeyboardLayoutDvorak"},fr:{keycodeDisplayMapping:{KeyW:"Z",KeyZ:"W",KeyQ:"A",KeyA:"Q",KeyM:",",Minus:")",Equal:"=",BracketRight:"$",BracketLeft:"^",Digit0:"à",Digit1:"&",Digit2:"é",Digit3:'"',Digit4:"'",Digit5:"(",Digit6:"-",Digit7:"è",Digit8:"_",Digit9:"ç",Semicolon:"M",Period:":",Backquote:"²",Quote:"ù",IntlBackslash:"<",Backslash:"*",Slash:"!",Comma:";"},keybindingMapping:{KeyZ:"KeyW",Minus:"Digit6"},i18n:"KEYBOARDLAYOUT.KeyboardLayoutFr"},svLatin1:{keycodeDisplayMapping:{Backquote:"§",Minus:"+",IntlBackslash:"<",Slash:"-",Backslash:"'",BracketLeft:"Å",Quote:"Ä",Semicolon:"Ö",Equal:"`",BracketRight:"¨"},keybindingMapping:{Minus:"Slash"},i18n:"KEYBOARDLAYOUT.KeyboardLayoutSvLatin1"},us:{i18n:"KEYBOARDLAYOUT.KeyboardLayoutUS"}},y=KeyboardManager.KEYCODE_DISPLAY_MAPPING;function adjustKeycodeDisplayMapping(i){const{keycodeDisplayMapping:K={}}=e[i];KeyboardManager.KEYCODE_DISPLAY_MAPPING=foundry.utils.mergeObject(y,K,{inplace:!1})}function _onChangeKeyboardLayout(e){adjustKeycodeDisplayMapping(e),game.keybindings.initialize(),Object.values(ui.windows).filter((e=>e instanceof KeybindingsConfig)).forEach((e=>e.render()))}const getLoggingFunction=(e="info")=>{const y={debug:console.debug,info:console.info,warning:console.warn,error:console.error}[e];return(...e)=>y("keyboard-layout","|",...e)},i=Object.freeze({debug:getLoggingFunction("debug"),info:getLoggingFunction("info"),warn:getLoggingFunction("warning"),error:getLoggingFunction("error"),getLoggingFunction});let K=null;function initialize(e){null===K&&(K=this.actions);for(const[,e]of K)e.editable=e.editable.map(_mapKeyCodeInBinding),e.uneditable=e.uneditable.map(_mapKeyCodeInBinding);e.call(this)}function _mapKeyCodeInBinding(e){return{...e,key:_mapKeyCode(e.key)}}function _mapKeyCode(y){const i=game.settings.get("keyboard-layout","keyboard-layout");return e[i].keybindingMapping?.[y]??y}function init(){!function registerSettings(){game.settings.register("keyboard-layout","keyboard-layout",{name:"KEYBOARDLAYOUT.SettingsKeyboardLayoutName",hint:"KEYBOARDLAYOUT.SettingsKeyboardLayoutHint",scope:"client",config:!0,default:"us",type:String,choices:Object.fromEntries(Object.entries(e).map((([e,y])=>[e,y.i18n]))),onChange:_onChangeKeyboardLayout})}(),adjustKeycodeDisplayMapping(game.settings.get("keyboard-layout","keyboard-layout")),function registerClientKeybindingWrappers(){const e="ClientKeybindings.prototype.initialize";try{libWrapper.register("keyboard-layout",e,initialize,"WRAPPER")}catch(y){i.warn(`Failed to override ${e}, some things might not work correctly:`,y)}}()}!function registerForHookEvents(){!function registerForInitHookEvent(){Hooks.on("init",init)}()}();
//# sourceMappingURL=keyboard-layout.js.map
