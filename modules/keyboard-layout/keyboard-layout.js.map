{"version":3,"file":"keyboard-layout.js","sources":["../src/keyboard-layouts/colemak.js","../src/keyboard-layouts/index.js","../src/keyboard-layouts/de-latin1.js","../src/keyboard-layouts/dvorak.js","../src/keyboard-layouts/fr.js","../src/keyboard-layouts/sv-latin1.js","../src/keyboard-layouts/us.js","../src/adjust-keycode-display-mapping.js","../src/settings.js","../src/logger.js","../src/const.js","../src/wrappers/clientKeybindings.js","../src/hooks/init.js","../src/hooks/index.js","../src/keyboard-layout.js"],"sourcesContent":["// SPDX-FileCopyrightText: 2021 Johannes Loher\n//\n// SPDX-License-Identifier: MIT\n\nexport const colemak = {\n  keycodeDisplayMapping: {\n    IntlBackslash: '-',\n    KeyD: 'S',\n    KeyE: 'F',\n    KeyF: 'T',\n    KeyG: 'D',\n    KeyI: 'U',\n    KeyJ: 'N',\n    KeyK: 'E',\n    KeyL: 'I',\n    KeyN: 'K',\n    KeyO: 'Y',\n    KeyP: ';',\n    KeyR: 'P',\n    KeyS: 'R',\n    KeyT: 'G',\n    KeyU: 'L',\n    KeyY: 'J',\n    Semicolon: 'O',\n  },\n\n  keybindingMapping: {\n    KeyD: 'KeyG',\n    KeyE: 'KeyK',\n    KeyF: 'KeyE',\n    KeyG: 'KeyT',\n    KeyI: 'KeyL',\n    KeyJ: 'KeyY',\n    KeyK: 'KeyN',\n    KeyL: 'KeyU',\n    KeyN: 'KeyJ',\n    KeyO: 'Semicolon',\n    KeyP: 'KeyR',\n    KeyR: 'KeyS',\n    KeyS: 'KeyD',\n    KeyT: 'KeyF',\n    KeyU: 'KeyI',\n    KeyY: 'KeyO',\n    Semicolon: 'KeyP',\n  },\n\n  i18n: 'KEYBOARDLAYOUT.KeyboardLayoutColemak',\n};\n","// SPDX-FileCopyrightText: 2021 Johannes Loher\n// SPDX-FileCopyrightText: 2021 Martin (fohswe#8355), GH: plutoneld\n// SPDX-FileCopyrightText: 2021 Max VS (Maximus#6001)\n//\n// SPDX-License-Identifier: MIT\n\nimport { colemak } from './colemak.js';\nimport { deLatin1 } from './de-latin1.js';\nimport { dvorak } from './dvorak.js';\nimport { fr } from './fr.js';\nimport { svLatin1 } from './sv-latin1.js';\nimport { us } from './us.js';\n\nexport const keyboardLayouts = {\n  colemak,\n  deLatin1,\n  dvorak,\n  fr,\n  svLatin1,\n  us,\n};\n","// SPDX-FileCopyrightText: 2021 Johannes Loher\n//\n// SPDX-License-Identifier: MIT\n\nexport const deLatin1 = {\n  keycodeDisplayMapping: {\n    Minus: 'ß',\n    Equal: '´',\n    Backquote: '^',\n    Backslash: '#',\n    BracketLeft: 'Ü',\n    BracketRight: '+',\n    IntlBackslash: '<',\n    KeyY: 'Z',\n    KeyZ: 'Y',\n    Quote: 'Ä',\n    Semicolon: 'Ö',\n    Slash: '-',\n  },\n\n  keybindingMapping: {\n    KeyY: 'KeyZ',\n    KeyZ: 'KeyY',\n    Minus: 'Slash',\n  },\n\n  i18n: 'KEYBOARDLAYOUT.KeyboardLayoutDeLatin1',\n};\n","// SPDX-FileCopyrightText: 2021 Johannes Loher\n//\n// SPDX-License-Identifier: MIT\n\nexport const dvorak = {\n  keycodeDisplayMapping: {\n    BracketLeft: '/',\n    BracketRight: '=',\n    Comma: 'W',\n    Equal: ']',\n    IntlBackslash: '<',\n    KeyA: 'A',\n    KeyB: 'X',\n    KeyC: 'J',\n    KeyD: 'E',\n    KeyE: '.',\n    KeyF: 'U',\n    KeyG: 'I',\n    KeyH: 'D',\n    KeyI: 'C',\n    KeyJ: 'H',\n    KeyK: 'T',\n    KeyL: 'N',\n    KeyM: 'M',\n    KeyN: 'B',\n    KeyO: 'R',\n    KeyP: 'L',\n    KeyQ: \"'\",\n    KeyR: 'P',\n    KeyS: 'O',\n    KeyT: 'Y',\n    KeyU: 'G',\n    KeyV: 'K',\n    KeyW: ',',\n    KeyX: 'Q',\n    KeyY: 'F',\n    KeyZ: ';',\n    Minus: '[',\n    Period: 'V',\n    Quote: '-',\n    Semicolon: 'S',\n    Slash: 'Z',\n  },\n\n  keybindingMapping: {\n    BracketLeft: 'Minus',\n    BracketRight: 'Equal',\n    Comma: 'KeyW',\n    Equal: 'BracketRight',\n    KeyA: 'KeyA',\n    KeyB: 'KeyN',\n    KeyC: 'KeyI',\n    KeyD: 'KeyH',\n    KeyE: 'KeyD',\n    KeyF: 'KeyY',\n    KeyG: 'KeyU',\n    KeyH: 'KeyJ',\n    KeyI: 'KeyG',\n    KeyJ: 'KeyC',\n    KeyK: 'KeyV',\n    KeyL: 'KeyP',\n    KeyM: 'KeyM',\n    KeyN: 'KeyL',\n    KeyO: 'KeyS',\n    KeyP: 'KeyR',\n    KeyQ: 'KeyX',\n    KeyR: 'KeyO',\n    KeyS: 'Semicolon',\n    KeyT: 'KeyK',\n    KeyU: 'KeyF',\n    KeyV: 'Period',\n    KeyW: 'Comma',\n    KeyX: 'KeyB',\n    KeyY: 'KeyT',\n    KeyZ: 'Slash',\n    Minus: 'Quote',\n    Period: 'KeyE',\n    Quote: 'KeyQ',\n    Semicolon: 'KeyZ',\n    Slash: 'BracketLeft',\n  },\n\n  i18n: 'KEYBOARDLAYOUT.KeyboardLayoutDvorak',\n};\n","// SPDX-FileCopyrightText: 2021 Max VS (Maximus#6001)\n//\n// SPDX-License-Identifier: MIT\n\nexport const fr = {\n  keycodeDisplayMapping: {\n    KeyW: 'Z',\n    KeyZ: 'W',\n    KeyQ: 'A',\n    KeyA: 'Q',\n    KeyM: ',',\n    Minus: ')',\n    Equal: '=',\n    BracketRight: '$',\n    BracketLeft: '^',\n    Digit0: 'à',\n    Digit1: '&',\n    Digit2: 'é',\n    Digit3: '\"',\n    Digit4: \"'\",\n    Digit5: '(',\n    Digit6: '-',\n    Digit7: 'è',\n    Digit8: '_',\n    Digit9: 'ç',\n    Semicolon: 'M',\n    Period: ':',\n    Backquote: '²',\n    Quote: 'ù',\n    IntlBackslash: '<',\n    Backslash: '*',\n    Slash: '!',\n    Comma: ';',\n  },\n\n  keybindingMapping: {\n    KeyZ: 'KeyW',\n    Minus: 'Digit6',\n  },\n\n  i18n: 'KEYBOARDLAYOUT.KeyboardLayoutFr',\n};\n","//SPDX-FileCopyrightText: 2021 Martin (fohswe#8355), GH: plutoneld\n//\n// SPDX-License-Identifier: MIT\n\nexport const svLatin1 = {\n  keycodeDisplayMapping: {\n    Backquote: '§',\n    Minus: '+',\n    IntlBackslash: '<',\n    Slash: '-',\n    Backslash: \"'\",\n    BracketLeft: 'Å',\n    Quote: 'Ä',\n    Semicolon: 'Ö',\n    Equal: '`',\n    BracketRight: '¨',\n  },\n\n  keybindingMapping: {\n    Minus: 'Slash',\n  },\n\n  i18n: 'KEYBOARDLAYOUT.KeyboardLayoutSvLatin1',\n};\n","// SPDX-FileCopyrightText: 2021 Johannes Loher\n//\n// SPDX-License-Identifier: MIT\n\nexport const us = {\n  i18n: 'KEYBOARDLAYOUT.KeyboardLayoutUS',\n};\n","// SPDX-FileCopyrightText: 2021 Johannes Loher\n//\n// SPDX-License-Identifier: MIT\n\nimport { keyboardLayouts } from './keyboard-layouts/index.js';\n\nconst DEFAULT_KEYCODE_DISPLAY_MAPPING = KeyboardManager.KEYCODE_DISPLAY_MAPPING;\n\n/**\n * Adjust {@link KeyboardManager#KEYCODE_DISPLAY_MAPPING} to a given keyboard layout.\n * @param {string} keyboardLayoutId The id of the keyboard layout to use\n */\nexport function adjustKeycodeDisplayMapping(keyboardLayoutId) {\n  const { keycodeDisplayMapping = {} } = keyboardLayouts[keyboardLayoutId];\n  KeyboardManager.KEYCODE_DISPLAY_MAPPING = foundry.utils.mergeObject(\n    DEFAULT_KEYCODE_DISPLAY_MAPPING,\n    keycodeDisplayMapping,\n    {\n      inplace: false,\n    },\n  );\n}\n","// SPDX-FileCopyrightText: 2021 Johannes Loher\n//\n// SPDX-License-Identifier: MIT\n\nimport { adjustKeycodeDisplayMapping } from './adjust-keycode-display-mapping.js';\nimport { packageName } from './const.js';\nimport { keyboardLayouts } from './keyboard-layouts/index.js';\n\nexport function registerSettings() {\n  game.settings.register(packageName, 'keyboard-layout', {\n    name: 'KEYBOARDLAYOUT.SettingsKeyboardLayoutName',\n    hint: 'KEYBOARDLAYOUT.SettingsKeyboardLayoutHint',\n    scope: 'client',\n    config: true,\n    default: 'us',\n    type: String,\n    choices: Object.fromEntries(\n      Object.entries(keyboardLayouts).map(([id, keyboardLayout]) => [id, keyboardLayout.i18n]),\n    ),\n    onChange: _onChangeKeyboardLayout,\n  });\n}\n\nfunction _onChangeKeyboardLayout(keyboardLayoutId) {\n  adjustKeycodeDisplayMapping(keyboardLayoutId);\n  game.keybindings.initialize();\n  Object.values(ui.windows)\n    .filter((app) => app instanceof KeybindingsConfig)\n    .forEach((keybindingsConfig) => keybindingsConfig.render());\n}\n","// SPDX-FileCopyrightText: 2021 Johannes Loher\n//\n// SPDX-License-Identifier: MIT\n\nimport { packageName } from './const.js';\n\nconst loggingContext = packageName;\nconst loggingSeparator = '|';\n\nconst getLoggingFunction = (type = 'info') => {\n  const log = { debug: console.debug, info: console.info, warning: console.warn, error: console.error }[type];\n  return (...data) => log(loggingContext, loggingSeparator, ...data);\n};\n\nexport const logger = Object.freeze({\n  debug: getLoggingFunction('debug'),\n  info: getLoggingFunction('info'),\n  warn: getLoggingFunction('warning'),\n  error: getLoggingFunction('error'),\n  getLoggingFunction,\n});\n","// SPDX-FileCopyrightText: 2021 Johannes Loher\n//\n// SPDX-License-Identifier: MIT\n\nexport const packageName = 'keyboard-layout';\n","// SPDX-FileCopyrightText: 2021 Johannes Loher\n//\n// SPDX-License-Identifier: MIT\n\nimport { packageName } from '../const.js';\nimport { keyboardLayouts } from '../keyboard-layouts/index.js';\nimport { logger } from '../logger.js';\n\nexport function registerClientKeybindingWrappers() {\n  const target = 'ClientKeybindings.prototype.initialize';\n  try {\n    libWrapper.register(packageName, target, initialize, 'WRAPPER');\n  } catch (e) {\n    logger.warn(`Failed to override ${target}, some things might not work correctly:`, e);\n  }\n}\n\nlet initialActions = null;\n\nfunction initialize(wrapped) {\n  if (initialActions === null) {\n    initialActions = this.actions;\n  }\n\n  for (const [, action] of initialActions) {\n    action.editable = action.editable.map(_mapKeyCodeInBinding);\n    action.uneditable = action.uneditable.map(_mapKeyCodeInBinding);\n  }\n\n  wrapped.call(this);\n}\n\n/**\n * Map the key of a binding according to the selected keyboard layout.\n * @param {{key: string, modifiers: Array<string>}} binding The binding for which to map the key\n * @returns {{key: string, modifiers: Array<string>}} The mapped binding\n */\nfunction _mapKeyCodeInBinding(binding) {\n  return { ...binding, key: _mapKeyCode(binding.key) };\n}\n\n/**\n * Map a key code according to the selected keyboard layout.\n * @param {string} keyCode The original key code\n * @returns {string} The mapped key code\n */\nfunction _mapKeyCode(keyCode) {\n  const keyboardLayoutId = game.settings.get(packageName, 'keyboard-layout');\n  return keyboardLayouts[keyboardLayoutId].keybindingMapping?.[keyCode] ?? keyCode;\n}\n","// SPDX-FileCopyrightText: 2021 Johannes Loher\n//\n// SPDX-License-Identifier: MIT\n\nimport { adjustKeycodeDisplayMapping } from '../adjust-keycode-display-mapping.js';\nimport { packageName } from '../const.js';\nimport { registerSettings } from '../settings.js';\nimport { registerClientKeybindingWrappers } from '../wrappers/clientKeybindings.js';\n\nexport function registerForInitHookEvent() {\n  Hooks.on('init', init);\n}\n\nfunction init() {\n  registerSettings();\n  adjustKeycodeDisplayMapping(game.settings.get(packageName, 'keyboard-layout'));\n  registerClientKeybindingWrappers();\n}\n","// SPDX-FileCopyrightText: 2021 Johannes Loher\n//\n// SPDX-License-Identifier: MIT\n\nimport { registerForInitHookEvent } from './init.js';\n\nexport function registerForHookEvents() {\n  registerForInitHookEvent();\n}\n","// SPDX-FileCopyrightText: 2021 Johannes Loher\n//\n// SPDX-License-Identifier: MIT\n\nimport { registerForHookEvents } from './hooks/index.js';\n\nregisterForHookEvents();\n"],"names":["keyboardLayouts","colemak","keycodeDisplayMapping","IntlBackslash","KeyD","KeyE","KeyF","KeyG","KeyI","KeyJ","KeyK","KeyL","KeyN","KeyO","KeyP","KeyR","KeyS","KeyT","KeyU","KeyY","Semicolon","keybindingMapping","i18n","deLatin1","Minus","Equal","Backquote","Backslash","BracketLeft","BracketRight","KeyZ","Quote","Slash","dvorak","Comma","KeyA","KeyB","KeyC","KeyH","KeyM","KeyQ","KeyV","KeyW","KeyX","Period","fr","Digit0","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","svLatin1","us","DEFAULT_KEYCODE_DISPLAY_MAPPING","KeyboardManager","KEYCODE_DISPLAY_MAPPING","adjustKeycodeDisplayMapping","keyboardLayoutId","foundry","utils","mergeObject","inplace","_onChangeKeyboardLayout","game","keybindings","initialize","Object","values","ui","windows","filter","app","KeybindingsConfig","forEach","keybindingsConfig","render","getLoggingFunction","type","log","debug","console","info","warning","warn","error","data","logger","freeze","initialActions","wrapped","this","actions","action","editable","map","_mapKeyCodeInBinding","uneditable","call","binding","key","_mapKeyCode","keyCode","settings","get","init","registerSettings","register","name","hint","scope","config","default","String","choices","fromEntries","entries","id","keyboardLayout","onChange","registerClientKeybindingWrappers","target","libWrapper","e","registerForHookEvents","registerForInitHookEvent","Hooks","on"],"mappings":"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"}