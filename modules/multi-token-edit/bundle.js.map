{"mappings":"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ACA;YACA;YACA;YACA;SACD;QACD,cAAc;YACZ;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,gBAAgB;YACd;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA,QAAQ;QACN,UAAU;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,cAAc;YAAC;YAAO;YAAO;YAAO;YAAQ;YAAK;YAAK;YAAK;YAAK;YAAK;YAAO;YAAO;SAAO;QAC1F,gBAAgB;YAAC;YAAK;YAAK;YAAK;YAAK;YAAK;YAAM;YAAM;YAAO;YAAO;YAAO;YAAQ;SAAO;IAC5F;IACA,YAAY;QACV,SAAS;YACP;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,UAAU;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA,cAAc;QACZ,aAAa;YACX;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,wBAAwB;YACtB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,QAAQ;YACN;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,cAAc;YACZ;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,gBAAgB;YACd;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA,WAAW;QACT,UAAU;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,cAAc;YAAC;YAAQ;YAAQ;YAAO;YAAQ;YAAS;YAAQ;YAAQ;YAAQ;YAAS;YAAQ;YAAQ;SAAO;QAC/G,gBAAgB;YAAC;YAAQ;YAAQ;YAAQ;YAAQ;YAAQ;YAAQ;YAAQ;YAAQ;YAAQ;YAAQ;YAAQ;SAAO;IAClH;IACA,sBAAsB;QACpB,UAAU;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,cAAc;YAAC;YAAO;YAAQ;YAAS;YAAQ;YAAO;YAAQ;YAAO;YAAO;YAAS;YAAQ;YAAO;SAAO;QAC3G,gBAAgB;YAAC;YAAO;YAAQ;YAAM;YAAQ;YAAO;YAAQ;YAAO;YAAO;YAAQ;YAAM;YAAQ;SAAM;IACzG;IACA,aAAa;QACX,mBAAmB;YACjB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,4BAA4B;YAC1B;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,QAAQ;YACN;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,cAAc;YACZ;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,gBAAgB;YACd;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA,YAAY;QACV,UAAU;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,cAAc;YACZ;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,gBAAgB;YACd;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA,UAAU;QACR,UAAU;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,UAAU;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA,UAAU;QACR,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,QAAQ;YACN;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA,UAAU;QACR,UAAU;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA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O,4BAAM,SAAS,QAAQ,CAAC,KAAK,MAAM,KAAK,WAAW,4BAAM,SAAS,SAAS,QAAQ,CAAC;QAE/F,IAAI,KAAK,YAAY,IAAI,IAAI;YAC3B,OAAO,KAAK,OAAO,GAAG,KAAK,YAAY,QAAQ,MAAM,KAAK,OAAO,KAAK,YAAY,OAAO,IAAI,2CAA2C;YAExI,IAAI,KAAK,MAAM,QAAQ,QAAQ,KAAK,MAAM,QAAQ,MAChD,OAAO,4BAAM,SAAS,MAAM,CAAC,KAAK,MAAM,KAAK,WAAW,4BAAM,SAAS,OAAO,QAAQ,CAAC,eAAe;iBACjG,IAAI,KAAK,MAAM,QAAQ,MAC5B,OAAO,4BAAM,SAAS,MAAM,CAAC,KAAK,MAAM,KAAK,WAAW,GAAG,CAAC,eAAe;iBAE3E,OAAO,4BAAM,SAAS,MAAM,CAAC,KAAK,MAAM,KAAK,WAAW,KAAK,EAAE,CAAC,eAAe;QAEnF,OACE,QAAQ,4BAAM,SAAS,cAAc,CAAC,KAAK,MAAM,KAAK,WAAW,4BAAM,SAAS,eAAe,QAAQ;QAGzG,OAAO;IACT;AACF;;;AErmFA,IAAI,8BAAQ;IACV,cAAc;IACdeAAe;IACfiBAAiB;IACjB;QACE;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,iBAAiB;IACjiB;IAC5B,gBAAgB;QACd,IAAI,MAAM,KAAK,MAAM,KAAK,WAAW,MAAM,GACzC,OAAO,IACP,cACA;QAEF,IAAI,MAAM,GACR,MAAM;QACN,OAAO,2BAAK,CAAC,EAAE,CAAC,KAAK,MAAM,KAAK,WAAW,2BAAK,CAAC,EAAE,CAAC,QAAQ;aACvD,IAAI,MAAM,IACf,MAAM;QACN,OAAO,2BAAK,CAAC,EAAE,CAAC,KAAK,MAAM,KAAK,WAAW,2BAAK,CAAC,EAAE,CAAC,QAAQ;aACvD,IAAI,MAAM,IACf,MAAM;QACN,OAAO,2BAAK,CAAC,EAAE,CAAC,KAAK,MAAM,KAAK,WAAW,2BAAK,CAAC,EAAE,CAAC,QAAQ;aACvD,IAAI,QAAQ,IACjB,KAAK;QACL,OAAO,2BAAK,CAAC,EAAE,CAAC,KAAK,MAAM,KAAK,WAAW,2BAAK,CAAC,EAAE,CAAC,QAAQ;aACvD,IAAI,QAAQ,IACjB,KAAK;QACL,OACE,2BAAK,CAAC,EAAE,CAAC,KAAK,MAAM,KAAK,WAAW,2BAAK,CAAC,EAAE,CAAC,QAAQ,GACrD,MACA,2BAAK,CAAC,EAAE,CAAC,KAAK,MAAM,KAAK,WAAW,2BAAK,CAAC,EAAE,CAAC,QAAQ;aAClD,IAAI,QAAQ,IACjB,KAAK;QACL,OACE,2BAAK,CAAC,EAAE,CAAC,KAAK,MAAM,KAAK,WAAW,2BAAK,CAAC,EAAE,CAAC,QAAQ,GACrD,MACA,2BAAK,CAAC,EAAE,CAAC,KAAK,MAAM,KAAK,WAAW,2BAAK,CAAC,EAAE,CAAC,QAAQ;aAClD;YACL,KAAK;YACL,eAAe,2BAAK,CAAC,KAAK,MAAM,KAAK,WAAW,4BAAM,QAAQ;YAC9D,gBAAgB,2BAAK,CAAC,KAAK,MAAM,KAAK,WAAW,4BAAM,QAAQ;YAE/D,OACE,YAAY,CAAC,KAAK,MAAM,KAAK,WAAW,aAAa,QAAQ,GAC7D,MACA,aAAa,CAAC,KAAK,MAAM,KAAK,WAAW,cAAc,QAAQ;QACnE;QAEA,OAAO;IACT;AACF;;;ADrmSA,IAAI,oCAAc;IACd,UAAU;QACR;QACA;QACA;QACA;KACD;IACD,OAAO;QACL,SAAS;YACP;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,QAAQ;YACN;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA,aAAa;QACX,SAAS;YACP;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,QAAQ;YACN;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA,UAAU;QACR;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;AACH,GACA,qCAAe;IACb,UAAU;QACR;QACA;QACA;QACA;KACD;IACD,QAAQ;QACN,MAAM;QACN;YACE;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,UAAU;QACV;YACE;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,SAAS;QACT;YACE;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,aAAa;QACb;YAAC;YAAW;YAAc;YAAa;YAAa;YAAW;YAAW;SAAU;QACpF,MAAM;QACN;YACE;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,WAAW;QACX;YACE;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;KACF;IACD,aAAa;QACX,QAAQ;YAAC;YAAS;YAAS;YAAO;YAAQ;YAAU;YAAQ;YAAQ;YAAS;SAAO;QACpF,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA,QAAQ;QACN,MAAM;YAAC;YAAU;YAAW;YAAS;YAAQ;YAAQ;YAAQ;YAAS;YAAO;YAAQ;YAAS;YAAS;SAAO;QAC9G,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;AACF,GACA,4CAAsB;IACpB,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA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YACR,MAAM;gBACJ,OAAO;oBACL,OAAO;oBACP,KAAK;oBACL,KAAK;oBACL,MAAM;gBACR;YACF;QACF;IACF;IACA,MAAM;QACJ,WAAW;YACT,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,OAAO;YACL,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,UAAU;YACR,WAAW;gBACT,UAAU;oBACR,QAAQ;oBACR,SAAS;wBACP;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA,MAAM;oBACJ,OAAO;oBACP,KAAK;oBACL,KAAK;oBACL,MAAM;gBACR;gBACA,MAAM;oBACJ,OAAO;oBACP,KAAK;oBACL,KAAK;oBACL,MAAM;gBACR;gBACA,cAAc;oBACZ,OAAO;oBACP,KAAK;oBACL,KAAK;oBACL,MAAM;gBACR;YACF;YACA,WAAW;gBACT,UAAU;oBACR,QAAQ;oBACR,SAAS;wBACP;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA,cAAc;oBACZ,OAAO;oBACP,KAAK;oBACL,KAAK;oBACL,MAAM;gBACR;gBACA,MAAM;oBACJ,OAAO;oBACP,KAAK;oBACL,KAAK;oBACL,MAAM;gBACR;gBACA,MAAM;oBACJ,OAAO;oBACP,KAAK;oBACL,KAAK;oBACL,MAAM;gBACR;YACF;QACF;QACA,WAAW;YACT,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;IACF;IACA,UAAU;QACR,OAAO;YACL,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;IACF;IACA,OAAO;QACL,UAAU;YACR,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,OAAO;YACL,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,eAAe;YACb,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,kBAAkB;YAChB,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,WAAW;YACT,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,WAAW;YACT,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;IACF;IACA,MAAM;QACJ,eAAe;YACb,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,eAAe;YACb,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,SAAS;YACP,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,OAAO;YACL,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;IACF;IACA,WAAW;QACT,gBAAgB;YACd,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;IACF;IACA,QAAQ;QACN,WAAW;YACT,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,aAAa;YACX,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,QAAQ;YACN,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,QAAQ;YACN,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,cAAc;YACZ,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,cAAc;YACZ,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,UAAU;YACR,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,OAAO;YACL,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;IACF;IACA,OAAO;QACL,OAAO;YACL,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,WAAW;YACT,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,YAAY;YACV,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,QAAQ;YACN,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,QAAQ;YACN,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,UAAU;YACR,MAAM;gBACJ,OAAO;oBACL,OAAO;oBACP,KAAK;oBACL,KAAK;oBACL,MAAM;gBACR;YACF;QACF;IACF;IACA,WAAW;QACT,aAAa;YACX,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,QAAQ;YACN,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,QAAQ;YACN,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;IACF;IACA,OAAO;QACL,UAAU;YACR,MAAM;gBACJ,MAAM;oBACJ,OAAO;oBACP,KAAK;oBACL,KAAK;oBACL,MAAM;gBACR;gBACA,MAAM;oBACJ,OAAO;oBACP,KAAK;oBACL,KAAK;oBACL,MAAM;gBACR;YACF;QACF;QACA,MAAM;YACJ,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;IACF;IACA,KAAK;QACH,OAAO;YACL,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,OAAO;YACL,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;IACF;IACA,QAAQ;QACN,WAAW;YACT,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,SAAS;YACP,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;IACF;IACA,UAAU;QACR,MAAM;YACJ,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,MAAM;YACJ,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,QAAQ;YACN,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,QAAQ;YACN,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,OAAO;YACL,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;QACA,OAAO;YACL,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;IACF;IACA,WAAW;QACT,MAAM;YACJ,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;IACF;IACA,QAAQ;QACN,MAAM;YACJ,OAAO;YACP,KAAK;YACL,KAAK;YACL,MAAM;QACR;IACF;IAC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","sources":["node_modules/@parcel/runtime-js/lib/runtime-1b8d6694d3c95148.js","git-projects/multi-token-edit/multi-token-edit/multi-token-edit.mjs","git-projects/multi-token-edit/multi-token-edit/applications/multiConfig.js","git-projects/multi-token-edit/multi-token-edit/scripts/dialogs.js","git-projects/multi-token-edit/multi-token-edit/scripts/utils.js","git-projects/multi-token-edit/multi-token-edit/applications/dataAdapters.js","git-projects/multi-token-edit/multi-token-edit/scripts/presets/forms.js","git-projects/multi-token-edit/multi-token-edit/applications/forms.js","git-projects/multi-token-edit/multi-token-edit/scripts/brush.js","git-projects/multi-token-edit/multi-token-edit/scripts/presets/preset.js","git-projects/multi-token-edit/multi-token-edit/scripts/presets/collection.js","git-projects/multi-token-edit/multi-token-edit/scripts/picker.js","git-projects/multi-token-edit/multi-token-edit/scripts/randomizer/randomizerUtils.js","git-projects/multi-token-edit/multi-token-edit/scripts/color/color.js","git-projects/multi-token-edit/multi-token-edit/scripts/presets/utils.js","git-projects/multi-token-edit/multi-token-edit/scripts/randomizer/slider.js","git-projects/multi-token-edit/multi-token-edit/scripts/fieldInjector.js","git-projects/multi-token-edit/multi-token-edit/applications/generic/navGenerator.js","git-projects/multi-token-edit/multi-token-edit/scripts/randomizer/randomizerForm.js","git-projects/multi-token-edit/multi-token-edit/scripts/generator/fantasticSpeciesGenerator.js","git-projects/multi-token-edit/multi-token-edit/scripts/generator/groupNamesGenerator.js","git-projects/multi-token-edit/multi-token-edit/scripts/generator/nameGenerator.js","git-projects/multi-token-edit/multi-token-edit/scripts/generator/tavernGenerator.js","git-projects/multi-token-edit/multi-token-edit/scripts/tmfx.js","git-projects/multi-token-edit/multi-token-edit/applications/cssEdit.js","git-projects/multi-token-edit/multi-token-edit/applications/history.js","git-projects/multi-token-edit/multi-token-edit/applications/macro.js","git-projects/multi-token-edit/multi-token-edit/scripts/macro/generator.js","git-projects/multi-token-edit/multi-token-edit/scripts/macro/action.js","git-projects/multi-token-edit/multi-token-edit/scripts/macro/targets.js","git-projects/multi-token-edit/multi-token-edit/applications/progressDialog.js","git-projects/multi-token-edit/multi-token-edit/scripts/fixedSort.js","git-projects/multi-token-edit/multi-token-edit/applications/generic/genericForm.js","git-projects/multi-token-edit/multi-token-edit/data/custom-controls.js","git-projects/multi-token-edit/multi-token-edit/scripts/shim/shim.js","git-projects/multi-token-edit/multi-token-edit/scripts/selectTool.js","git-projects/multi-token-edit/multi-token-edit/scripts/settings.js"],"sourcesContent":["module.exports = (__parcel__import__(\"./\" + \"jquery-ui.3eaa8b4e.js\" + \"?\" + Date.now())).then(() => parcelRequire('6NmQU'));","import { pasteData, showMassEdit, showGenericForm } from './applications/multiConfig.js';\r\n\r\nimport {\r\n  checkApplySpecialFields,\r\n  deleteFromClipboard,\r\n  getObjFormData,\r\n  performMassSearch,\r\n  performMassUpdate,\r\n} from './applications/forms.js';\r\nimport { MassEditGenericForm } from './applications/generic/genericForm.js';\r\nimport {\r\n  activeEffectPresetSelect,\r\n  applyAddSubtract,\r\n  createDocuments,\r\n  flagCompare,\r\n  MODULE_ID,\r\n  resolveCreateDocumentRequest,\r\n  SUPPORTED_HISTORY_DOCS,\r\n  SUPPORTED_PLACEABLES,\r\n  TagInput,\r\n} from './scripts/utils.js';\r\nimport { GeneralDataAdapter } from './applications/dataAdapters.js';\r\nimport { applyRandomization } from './scripts/randomizer/randomizerUtils.js';\r\nimport { libWrapper } from './scripts/shim/shim.js';\r\nimport { enableUniversalSelectTool } from './scripts/selectTool.js';\r\nimport { Preset } from './scripts/presets/preset.js';\r\nimport { DEFAULT_PACK, META_INDEX_ID, PresetAPI, PresetCollection } from './scripts/presets/collection.js';\r\nimport { MassEditPresets, PresetConfig } from './scripts/presets/forms.js';\r\nimport { registerKeybinds, registerSettings } from './scripts/settings.js';\r\n\r\nexport const HISTORY = {};\r\n\r\n// Initialize module\r\nHooks.once('init', () => {\r\n  TagInput.registerHandlebarsHelper();\r\n\r\n  registerSettings();\r\n  registerKeybinds();\r\n  enableUniversalSelectTool(); // Enable select tool for all layers\r\n\r\n  // Register history related hooks\r\n  if (game.settings.get(MODULE_ID, 'enableHistory'))\r\n    SUPPORTED_HISTORY_DOCS.forEach((docName) => {\r\n      Hooks.on(`preUpdate${docName}`, (doc, update, options, userId) => {\r\n        updateHistory(doc, update, options, userId);\r\n      });\r\n    });\r\n\r\n  // Register copy-paste wrappers\r\n  libWrapper.register(\r\n    MODULE_ID,\r\n    'ClientKeybindings._onCopy',\r\n    function (wrapped, ...args) {\r\n      if (window.getSelection().toString() === '') {\r\n        // Check if a Mass Config form is open and if so copy data from there\r\n        const meForm = Object.values(ui.windows).find((app) => app.meObjects != null);\r\n        if (meForm?.performMassCopy()) return true;\r\n      }\r\n\r\n      const result = wrapped(...args);\r\n      // Clear Mass Edit clipboard to allows core pasting again\r\n      if (result) deleteFromClipboard(canvas.activeLayer.constructor.documentName);\r\n      return result;\r\n    },\r\n    'MIXED'\r\n  );\r\n  libWrapper.register(\r\n    MODULE_ID,\r\n    'ClientKeybindings._onPaste',\r\n    function (wrapped, ...args) {\r\n      if (pasteData()) return true;\r\n      return wrapped(...args);\r\n    },\r\n    'MIXED'\r\n  );\r\n\r\n  // Add SceneControl option to open Mass Edit form\r\n  if (game.settings.get(MODULE_ID, 'presetSceneControl')) {\r\n    libWrapper.register(\r\n      MODULE_ID,\r\n      'SceneNavigation.prototype._getContextMenuOptions',\r\n      function (wrapped, ...args) {\r\n        const options = wrapped(...args);\r\n        options.push({\r\n          name: 'Mass Edit',\r\n          icon: '<i class=\"fa-solid fa-pen-to-square\"></i>',\r\n          condition: game.user.isGM,\r\n          callback: (li) => {\r\n            const sceneId = li.attr('data-scene-id');\r\n            showMassEdit(game.scenes.get(sceneId));\r\n          },\r\n        });\r\n        return options;\r\n      },\r\n      'WRAPPER'\r\n    );\r\n  }\r\n\r\n  // Intercept and prevent certain placeable drag and drop if they are hovering over the MassEditPresets form\r\n  // passing on the placeable to it to perform preset creation.\r\n  const dragDropHandler = function (wrapped, ...args) {\r\n    if (MassEditPresets.objectHover || PresetConfig.objectHover) {\r\n      this.mouseInteractionManager.cancel(...args);\r\n      const app = Object.values(ui.windows).find(\r\n        (x) =>\r\n          (MassEditPresets.objectHover && x instanceof MassEditPresets) ||\r\n          (PresetConfig.objectHover && x instanceof PresetConfig)\r\n      );\r\n      if (app) {\r\n        const placeables = canvas.activeLayer.controlled.length ? [...canvas.activeLayer.controlled] : [this];\r\n        app.dropPlaceable(placeables, ...args);\r\n      }\r\n      // Pass in a fake event that hopefully is enough to allow other modules to function\r\n      this._onDragLeftCancel(...args);\r\n    } else {\r\n      return wrapped(...args);\r\n    }\r\n  };\r\n\r\n  SUPPORTED_PLACEABLES.forEach((name) => {\r\n    libWrapper.register(MODULE_ID, `${name}.prototype._onDragLeftDrop`, dragDropHandler, 'MIXED');\r\n  });\r\n\r\n  // Handle broadcasts\r\n  // Needed to allow players to spawn Presets by delegating create document request to GMs\r\n  game.socket?.on(`module.${MODULE_ID}`, async (message) => {\r\n    const args = message.args;\r\n\r\n    if (message.handlerName === 'document' && message.type === 'CREATE') {\r\n      const isResponsibleGM = !game.users\r\n        .filter((user) => user.isGM && (user.active || user.isActive))\r\n        .some((other) => other.id < game.user.id);\r\n      if (!isResponsibleGM) return;\r\n\r\n      const documents = await createDocuments(args.documentName, args.data, args.sceneID);\r\n      const documentIDs = documents.map((d) => d.id);\r\n\r\n      const message = {\r\n        handlerName: 'document',\r\n        args: {\r\n          requestID: args.requestID,\r\n          sceneID: args.sceneID,\r\n          documentName: args.documentName,\r\n          documentIDs,\r\n        },\r\n        type: 'RESOLVE',\r\n      };\r\n      game.socket.emit(`module.${MODULE_ID}`, message);\r\n    } else if (message.handlerName === 'document' && message.type === 'RESOLVE') {\r\n      resolveCreateDocumentRequest(args);\r\n    }\r\n  });\r\n\r\n  // 'Spotlight Omnisearch' support\r\n\r\n  Hooks.on('spotlightOmnisearch.indexBuilt', (INDEX, promises) => {\r\n    // First turn-off preset compendium from being included in omnisearch indexing\r\n    const old = game.settings.get('spotlight-omnisearch', 'compendiumConfig');\r\n    game.packs\r\n      .filter((p) => p.documentName === 'JournalEntry' && p.index.get(META_INDEX_ID))\r\n      .forEach((p) => (old[p.collection] = false));\r\n    game.settings.set('spotlight-omnisearch', 'compendiumConfig', old);\r\n\r\n    // Insert preset index\r\n    const promise = PresetCollection.buildSpotlightOmnisearchIndex(INDEX);\r\n    promises.push(promise);\r\n  });\r\n\r\n  globalThis.MassEdit = {\r\n    GeneralDataAdapter,\r\n    MassEditGenericForm,\r\n    showGenericForm,\r\n    performMassUpdate,\r\n    performMassSearch,\r\n    showMassEdit,\r\n    getPreset: PresetAPI.getPreset,\r\n    getPresets: PresetAPI.getPresets,\r\n    createPreset: PresetAPI.createPreset,\r\n    spawnPreset: PresetAPI.spawnPreset,\r\n  };\r\n\r\n  game.modules.get(MODULE_ID).api = {\r\n    ...globalThis.MassEdit,\r\n    applyRandomization, // Deprecated\r\n    applyAddSubtract, // Deprecated\r\n    checkApplySpecialFields, // Deprecated\r\n  };\r\n});\r\n\r\n// Preset Scene Control\r\nHooks.on('renderSceneControls', (sceneControls, html, options) => {\r\n  if (!game.user.isGM) return;\r\n  if (!game.settings.get(MODULE_ID, 'presetSceneControl')) return;\r\n\r\n  const presetControl = $(`\r\n<li class=\"scene-control mass-edit-scene-control\" data-control=\"me-presets\" aria-label=\"Mass Edit: Presets\" role=\"tab\" data-tooltip=\"Mass Edit: Presets\">\r\n  <i class=\"fa-solid fa-books\"></i>\r\n</li>\r\n  `);\r\n\r\n  presetControl.on('click', () => {\r\n    let docName = canvas.activeLayer.constructor.documentName;\r\n    if (!SUPPORTED_PLACEABLES.includes(docName)) docName = 'ALL';\r\n\r\n    const presetForm = Object.values(ui.windows).find((app) => app instanceof MassEditPresets);\r\n    if (presetForm) {\r\n      presetForm.close();\r\n      return;\r\n    }\r\n\r\n    new MassEditPresets(null, null, docName, {\r\n      left: presetControl.position().left + presetControl.width() + 40,\r\n    }).render(true);\r\n  });\r\n\r\n  html.find('.control-tools').find('.scene-control').last().after(presetControl);\r\n});\r\n\r\n// Migrate Presets (02/11/2023)\r\nHooks.on('ready', async () => {\r\n  if (!game.packs.get(PresetCollection.workingPack)) {\r\n    game.settings.set(MODULE_ID, 'workingPack', DEFAULT_PACK);\r\n  }\r\n\r\n  if (!game.settings.get(MODULE_ID, 'presetsMigrated')) {\r\n    const presets = game.settings.get(MODULE_ID, 'presets');\r\n    if (foundry.utils.getType(presets) === 'Object' && !foundry.utils.isEmpty(presets)) {\r\n      let newPresets = [];\r\n      for (const documentName of Object.keys(presets)) {\r\n        for (const name of Object.keys(presets[documentName])) {\r\n          let oldPreset = presets[documentName][name];\r\n          let newPreset = { id: foundry.utils.randomID() };\r\n\r\n          newPreset.name = name;\r\n          newPreset.documentName = documentName;\r\n          newPreset.color =\r\n            oldPreset['mass-edit-preset-color'] !== '#ffffff' ? oldPreset['mass-edit-preset-color'] : null;\r\n          newPreset.order = oldPreset['mass-edit-preset-order'] ?? -1;\r\n          newPreset.addSubtract = oldPreset['mass-edit-addSubtract'] ?? {};\r\n          newPreset.randomize = oldPreset['mass-edit-randomize'] ?? {};\r\n\r\n          delete oldPreset['mass-edit-preset-color'];\r\n          delete oldPreset['mass-edit-preset-order'];\r\n          delete oldPreset['mass-edit-addSubtract'];\r\n          delete oldPreset['mass-edit-randomize'];\r\n          delete oldPreset['mass-edit-keybind'];\r\n          newPreset.data = foundry.utils.deepClone(oldPreset);\r\n\r\n          newPresets.push(newPreset);\r\n        }\r\n        game.settings.set(MODULE_ID, 'docPresets', newPresets);\r\n      }\r\n    }\r\n\r\n    game.settings.set(MODULE_ID, 'presetsMigrated', true);\r\n  }\r\n\r\n  if (!game.settings.get(MODULE_ID, 'presetsCompMigrated')) {\r\n    const docPresets = game.settings.get(MODULE_ID, 'docPresets');\r\n    const presets = docPresets.map((p) => new Preset(p));\r\n    if (presets.length) PresetCollection.set(presets);\r\n    game.settings.set(MODULE_ID, 'presetsCompMigrated', true);\r\n  }\r\n});\r\n\r\n// Attach Mass Config buttons to Token and Tile HUDs\r\n\r\nHooks.on('renderTokenHUD', (hud, html, tokenData) => {\r\n  if (canvas.tokens.controlled.length >= 2) {\r\n    $(html)\r\n      .find('.control-icon[data-action=\"config\"]')\r\n      .after(\r\n        `<div class=\"control-icon\" data-action=\"massConfig\">\r\n          <i class=\"fas fa-cogs\"></i>\r\n        </div>`\r\n      );\r\n    $(html).on('click', '[data-action=\"massConfig\"]', () => {\r\n      showMassEdit();\r\n    });\r\n  }\r\n});\r\nHooks.on('renderTileHUD', (hud, html, tileData) => {\r\n  const controlledTiles = canvas.background\r\n    ? canvas.background.controlled.concat(canvas.foreground.controlled)\r\n    : canvas.tiles.controlled;\r\n\r\n  if (controlledTiles.length >= 2) {\r\n    $(html)\r\n      .find('.control-icon[data-action=\"underfoot\"]')\r\n      .after(\r\n        `<div class=\"control-icon\" data-action=\"massConfig\">\r\n          <i class=\"fas fa-cogs\"></i>\r\n        </div>`\r\n      );\r\n    $(html).on('click', '[data-action=\"massConfig\"]', () => {\r\n      showMassEdit();\r\n    });\r\n  }\r\n});\r\n\r\n//\r\n// History Utilities\r\n//\r\n\r\n// Retrieve only the data that is different\r\nfunction getDiffData(obj, docName, update, protoData = true) {\r\n  const flatUpdate = foundry.utils.flattenObject(update);\r\n  const flatObjData = getObjFormData(obj, docName, protoData);\r\n  const diff = foundry.utils.diffObject(flatObjData, flatUpdate);\r\n\r\n  for (const [k, v] of Object.entries(diff)) {\r\n    // Special handling for empty/undefined data\r\n    if ((v === '' || v == null) && (flatObjData[k] === '' || flatObjData[k] == null)) {\r\n      // matches\r\n      delete diff[k];\r\n    }\r\n\r\n    if (k.startsWith('flags.'))\r\n      if (flagCompare(flatObjData, k, v)) {\r\n        delete diff[k];\r\n      }\r\n\r\n    if (docName === 'Token' && ['light.angle', 'rotation'].includes(k)) {\r\n      if (v % 360 === flatObjData[k] % 360) {\r\n        delete diff[k];\r\n      }\r\n    }\r\n  }\r\n\r\n  return diff;\r\n}\r\n\r\nfunction updateHistory(obj, update, options, userId) {\r\n  if (game.user.id !== userId || !game.settings.get(MODULE_ID, 'enableHistory')) return;\r\n\r\n  const historyItem = { timestamp: new Date().toLocaleTimeString(), ctrl: {} };\r\n  ['mass-edit-randomize', 'mass-edit-addSubtract'].forEach((ctrl) => {\r\n    if (ctrl in options) {\r\n      historyItem.ctrl[ctrl] = options[ctrl][0];\r\n    }\r\n  });\r\n  let cUpdate = foundry.utils.deepClone(update);\r\n  delete cUpdate._id;\r\n\r\n  let docName = obj.document ? obj.document.documentName : obj.documentName;\r\n  if (docName === 'Actor') {\r\n    if (cUpdate.prototypeToken || cUpdate.token) {\r\n      saveHistory(\r\n        obj.prototypeToken ?? obj.token,\r\n        cUpdate.prototypeToken ?? cUpdate.token,\r\n        foundry.utils.deepClone(historyItem),\r\n        update._id,\r\n        'Token'\r\n      );\r\n    }\r\n  }\r\n\r\n  saveHistory(obj, cUpdate, historyItem, update._id, docName);\r\n}\r\n\r\nfunction saveHistory(obj, update, historyItem, _id, docName) {\r\n  if (!obj || foundry.utils.isEmpty(update)) return;\r\n\r\n  historyItem.update = foundry.utils.flattenObject(update);\r\n  historyItem.diff = getDiffData(obj, docName, update);\r\n  historyItem._id = _id;\r\n\r\n  const maxLength = game.settings.get(MODULE_ID, 'historyMaxLength') ?? 0;\r\n  const docHistory = HISTORY[docName] ?? [];\r\n  docHistory.push(historyItem);\r\n\r\n  if (docHistory.length > maxLength) {\r\n    docHistory.splice(0, 1);\r\n  }\r\n\r\n  HISTORY[docName] = docHistory;\r\n}\r\n\r\nHooks.on('renderActiveEffectConfig', (app) => {\r\n  const el = $(app.form).find('.effects-header .key');\r\n  if (el.length) {\r\n    const me = $('<i title=\"Apply \\'Mass Edit\\' preset\" style=\"font-size:smaller;color:brown;\"> <a>[ME]</a></i>');\r\n    me.on('click', () => activeEffectPresetSelect(app));\r\n    el.append(me);\r\n  }\r\n});\r\n","import { showPlaceableTypeSelectDialog } from '../scripts/dialogs.js';\r\nimport { PresetAPI } from '../scripts/presets/collection.js';\r\nimport { IS_PRIVATE } from '../scripts/randomizer/randomizerForm.js';\r\nimport { getData, getDocumentName, MODULE_ID, SUPPORT_SHEET_CONFIGS, SUPPORTED_COLLECTIONS } from '../scripts/utils.js';\r\nimport { getClipboardData, pasteDataUpdate, WithMassConfig } from './forms.js';\r\nimport { MassEditGenericForm } from './generic/genericForm.js';\r\n\r\nexport const LAYER_MAPPINGS = {\r\n  Token: 'tokens',\r\n  Tile: 'tiles',\r\n  Drawing: 'drawings',\r\n  Wall: 'walls',\r\n  AmbientLight: 'lighting',\r\n  AmbientSound: 'sounds',\r\n  MeasuredTemplate: 'templates',\r\n  Note: 'notes',\r\n};\r\n\r\nexport const SCENE_DOC_MAPPINGS = {\r\n  Token: 'tokens',\r\n  Tile: 'tiles',\r\n  Drawing: 'drawings',\r\n  Wall: 'walls',\r\n  AmbientLight: 'lights',\r\n  AmbientSound: 'sounds',\r\n  MeasuredTemplate: 'templates',\r\n  Note: 'notes',\r\n};\r\n\r\n// Retrieve currently controlled placeables\r\nexport function getControlled() {\r\n  if (canvas.activeLayer.controlled.length) {\r\n    return canvas.activeLayer.controlled;\r\n  }\r\n  return null;\r\n}\r\n\r\n// Retrieve hovered over placeable\r\nfunction getHover() {\r\n  let docName = canvas.activeLayer.constructor.documentName;\r\n  // Walls do not properly cleanup hover state\r\n  if (!['Wall'].includes(docName)) {\r\n    if (canvas.activeLayer.hover) {\r\n      return [canvas.activeLayer.hover];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// Retrieve documents selected using Multiple Document Selection module (https://github.com/ironmonk88/multiple-document-selection)\r\nfunction getSelectedDocuments(placeableSelect) {\r\n  const supportedDocs = [\r\n    { name: 'Actor', class: 'actor' },\r\n    { name: 'Scene', class: 'scene' },\r\n    { name: 'JournalEntry', class: 'journalentry' },\r\n    { name: 'Playlist', class: 'sound' },\r\n    { name: 'Item', class: 'item' },\r\n    { name: 'RollTable', class: 'rolltable' },\r\n    { name: 'Cards', class: 'cards' },\r\n  ];\r\n  for (const doc of supportedDocs) {\r\n    const selected = [];\r\n    $(`.directory-list .${doc.class}.selected`).each(function (_) {\r\n      let d;\r\n      if (doc.name === 'Playlist') {\r\n        d = game.collections.get(doc.name).get(this.dataset.playlistId)?.sounds.get(this.dataset.soundId);\r\n      } else {\r\n        d = game.collections.get(doc.name).get(this.dataset.documentId);\r\n      }\r\n\r\n      if (d) {\r\n        // JournalEntries themselves do not have configs, but notes that they correspond to on the scene do\r\n        if (placeableSelect && doc.name === 'JournalEntry') {\r\n          game.collections.get('Scene').forEach((s) =>\r\n            s.notes.forEach((n) => {\r\n              const eid = n.entryId ?? n.data.entryId;\r\n              if (d.id === eid) {\r\n                selected.push(n);\r\n              }\r\n            })\r\n          );\r\n          // canvas.notes.placeables\r\n          //   .filter((n) => d.id === (n.entryId ?? n.data.entryId))\r\n          //   .forEach((n) => selected.push(n));\r\n        } else {\r\n          if (d) selected.push(d);\r\n        }\r\n      }\r\n    });\r\n    if (selected.length) {\r\n      return selected;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function getSelected(base, placeable = true) {\r\n  let selected;\r\n  if (base) {\r\n    if (Array.isArray(base)) selected = base;\r\n    else selected = [base];\r\n  }\r\n  if (!selected) selected = getSelectedDocuments(placeable);\r\n  if (!selected) selected = getControlled();\r\n\r\n  // Sort placeable on the scene using their (x, y) coordinates\r\n  if (selected && selected.length > 1 && selected[0].x != null && selected[0].y != null) {\r\n    selected.sort((p1, p2) => {\r\n      const c = p1.y - p2.y;\r\n      if (c === 0) {\r\n        return p1.x - p2.x;\r\n      }\r\n      return c;\r\n    });\r\n  }\r\n\r\n  // We want one object to be treated as the target for the form\r\n  // Will prioritize hovered placeable for this purpose\r\n  let hover = getHover();\r\n  hover = hover ? hover[0] : hover;\r\n\r\n  if (!selected && hover) selected = [hover];\r\n  if (!hover && selected) hover = selected[0];\r\n\r\n  if (!hover && !selected) return [null, null];\r\n\r\n  if (hover && getDocumentName(hover) !== getDocumentName(selected[0])) {\r\n    hover = selected[0];\r\n  }\r\n\r\n  return [hover, selected];\r\n}\r\n\r\n// Show placeable search\r\nexport function showMassSelect(basePlaceable) {\r\n  let [target, selected] = getSelected(basePlaceable);\r\n\r\n  if (!target) {\r\n    showPlaceableTypeSelectDialog();\r\n    return;\r\n  }\r\n\r\n  const docName = getDocumentName(target);\r\n\r\n  const options = {\r\n    commonData: foundry.utils.flattenObject(getData(target).toObject()),\r\n    massSelect: true,\r\n    documentName: docName,\r\n  };\r\n\r\n  if (SUPPORT_SHEET_CONFIGS.includes(docName) && docName !== 'Actor') {\r\n    const MassConfig = WithMassConfig(docName);\r\n    new MassConfig(target, selected, options).render(true, {});\r\n  } else if (SUPPORTED_COLLECTIONS.includes(docName)) {\r\n    new MassEditGenericForm(selected, options).render(true);\r\n  }\r\n}\r\n\r\n// show placeable edit\r\nexport async function showMassEdit(found = null, documentName, options = {}) {\r\n  let [target, selected] = getSelected(found);\r\n\r\n  // If there are no placeable in control or just one, then either exit or display the default config window\r\n  if (!selected || !selected.length) return;\r\n\r\n  if (!options.forceForm && game.settings.get(MODULE_ID, 'singleDocDefaultConfig')) {\r\n    if (selected.length === 1) {\r\n      if (selected[0].sheet) selected[0].sheet.render(true, {});\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Display modified config window\r\n  if (!documentName) documentName = getDocumentName(target);\r\n  options = { ...options, massEdit: true, documentName };\r\n  if (SUPPORT_SHEET_CONFIGS.includes(documentName)) {\r\n    if (documentName === 'Actor') {\r\n      target = target.prototypeToken;\r\n      selected = selected.map((s) => s.prototypeToken);\r\n      options.documentName = 'Token';\r\n    }\r\n    const MassConfig = WithMassConfig(options.documentName);\r\n    return new MassConfig(target, selected, options).render(true, {});\r\n  } else {\r\n    return new MassEditGenericForm(selected, options).render(true);\r\n  }\r\n}\r\n\r\nexport function showMassActorForm(selectedTokens, options) {\r\n  const tokens = [];\r\n  const actors = [];\r\n  selectedTokens.forEach((s) => {\r\n    if (s.actor) {\r\n      tokens.push(s);\r\n      actors.push(s.actor);\r\n    }\r\n  });\r\n\r\n  if (actors.length) {\r\n    new MassEditGenericForm(actors, {\r\n      tokens,\r\n      documentName: 'Actor',\r\n      ...options,\r\n    }).render(true);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function pasteData() {\r\n  let selected;\r\n  if (!selected) selected = getSelectedDocuments();\r\n  if (!selected) selected = getControlled();\r\n  if (!selected) selected = getHover();\r\n\r\n  if (selected) return pasteDataUpdate(selected);\r\n  else if (IS_PRIVATE) {\r\n    let docName = canvas.activeLayer.constructor.documentName;\r\n    const preset = getClipboardData(docName);\r\n    if (preset) {\r\n      PresetAPI.spawnPreset({ preset });\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Displays a Generic Mass Edit form for the passed in data object/s\r\n * @param {Array|Object} data Object/s to be edited using the form\r\n * @param {String} name the name to be assigned internally to this data which will be used to manage presets and pins\r\n * @returns Promised resolved once the opened form is submitted\r\n */\r\nexport function showGenericForm(data, name = 'GenericData', options) {\r\n  return new Promise((resolve) => {\r\n    new MassEditGenericForm(Array.isArray(data) ? data : [data], {\r\n      documentName: name,\r\n      callback: () => resolve(),\r\n      ...options,\r\n    }).render(true);\r\n  });\r\n}\r\n","import { LAYER_MAPPINGS, showMassSelect } from '../applications/multiConfig.js';\r\nimport { SUPPORTED_COLLECTIONS, SUPPORTED_PLACEABLES, localFormat, localize } from './utils.js';\r\n\r\nexport function showPlaceableTypeSelectDialog() {\r\n  let content = '';\r\n  for (const config of SUPPORTED_PLACEABLES.concat(SUPPORTED_COLLECTIONS)) {\r\n    content += `<option value=\"${config}\">${config}</option>`;\r\n  }\r\n  content = `<label>${localize('dialog.search-document')}</label>\r\n    <select style=\"width: 100%;\" name=\"documentName\">${content}</select>`;\r\n\r\n  new Dialog({\r\n    title: 'Document SEARCH',\r\n    content: content,\r\n    buttons: {\r\n      select: {\r\n        icon: '<i class=\"fas fa-check\"></i>',\r\n        label: 'Select',\r\n        callback: (html) => {\r\n          const documentName = html.find(\"select[name='documentName']\").val();\r\n\r\n          let docs = [];\r\n          if (SUPPORTED_PLACEABLES.includes(documentName)) {\r\n            const layer = LAYER_MAPPINGS[documentName];\r\n            if (layer && canvas[layer].placeables.length) {\r\n              docs = canvas[layer].placeables;\r\n            }\r\n          } else {\r\n            docs = Array.from(game.collections.get(documentName));\r\n          }\r\n\r\n          if (docs.length) {\r\n            showMassSelect(docs[0]);\r\n          } else {\r\n            ui.notifications.warn(localFormat('dialog.document-not-found', { document: documentName }));\r\n          }\r\n        },\r\n      },\r\n    },\r\n  }).render(true);\r\n}\r\n\r\nexport async function importPresetFromJSONDialog() {\r\n  const content = `\r\n  <div class=\"form-group\">\r\n      <label for=\"data\">${localize('FILES.SelectFile', false)} </label>\r\n      <input type=\"file\" name=\"data\">\r\n  </div>\r\n  `;\r\n\r\n  let dialog = new Promise((resolve, reject) => {\r\n    new Dialog(\r\n      {\r\n        title: localize('presets.import'),\r\n        content: content,\r\n        buttons: {\r\n          import: {\r\n            icon: '<i class=\"fas fa-file-import\"></i>',\r\n            label: localize('common.import'),\r\n            callback: async (html) => {\r\n              let presets;\r\n              readTextFromFile(html.find('[name=\"data\"]')[0].files[0]).then((json) => {\r\n                try {\r\n                  presets = JSON.parse(json);\r\n                } catch (e) {}\r\n                resolve(presets);\r\n              });\r\n            },\r\n          },\r\n          no: {\r\n            icon: '<i class=\"fas fa-times\"></i>',\r\n            label: localize('Cancel', false),\r\n            callback: () => resolve(false),\r\n          },\r\n        },\r\n        default: 'no',\r\n      },\r\n      {\r\n        width: 400,\r\n      }\r\n    ).render(true);\r\n  });\r\n  return await dialog;\r\n}\r\n","import { GeneralDataAdapter } from '../applications/dataAdapters.js';\r\nimport { MassEditPresets } from './presets/forms.js';\r\nimport { applyRandomization } from './randomizer/randomizerUtils.js';\r\n\r\nexport const SUPPORTED_PLACEABLES = [\r\n  'Token',\r\n  'MeasuredTemplate',\r\n  'Tile',\r\n  'Drawing',\r\n  'Wall',\r\n  'AmbientLight',\r\n  'AmbientSound',\r\n  'Note',\r\n];\r\n\r\nexport const UI_DOCS = ['ALL', ...SUPPORTED_PLACEABLES];\r\n\r\nexport const SUPPORT_SHEET_CONFIGS = [...SUPPORTED_PLACEABLES, 'Actor', 'PlaylistSound', 'Scene'];\r\n\r\nexport const SUPPORTED_HISTORY_DOCS = [...SUPPORTED_PLACEABLES, 'Scene', 'Actor', 'PlaylistSound'];\r\n\r\nexport const SUPPORTED_COLLECTIONS = ['Item', 'Cards', 'RollTable', 'Actor', 'JournalEntry', 'Scene'];\r\n\r\nexport function interpolateColor(u, c1, c2) {\r\n  return c1.map((a, i) => Math.floor((1 - u) * a + u * c2[i]));\r\n}\r\n\r\nexport const MODULE_ID = 'multi-token-edit';\r\n\r\n/**\r\n * Returns true of provided path points to an image\r\n */\r\nexport function isImage(path) {\r\n  var extension = path.split('.');\r\n  extension = extension[extension.length - 1].toLowerCase();\r\n  return ['jpg', 'jpeg', 'png', 'svg', 'webp', 'gif'].includes(extension);\r\n}\r\n\r\n/**\r\n * Returns true of provided path points to a video\r\n */\r\nexport function isVideo(path) {\r\n  var extension = path.split('.');\r\n  extension = extension[extension.length - 1].toLowerCase();\r\n  return ['mp4', 'ogg', 'webm', 'm4v'].includes(extension);\r\n}\r\n\r\nexport async function recursiveTraverse(path, source, bucket, files = []) {\r\n  const result = await FilePicker.browse(source, path, {\r\n    bucket: bucket,\r\n  });\r\n\r\n  if (result) {\r\n    for (const file of result.files) {\r\n      files.push(file);\r\n    }\r\n\r\n    for (const dir of result.dirs) {\r\n      await recursiveTraverse(dir, source, bucket, files);\r\n    }\r\n  }\r\n\r\n  return files;\r\n}\r\n\r\n// To get rid of v10 warnings\r\nexport function getData(obj) {\r\n  return obj.document ? obj.document : obj;\r\n}\r\n\r\n// Flags are stored inconsistently. Absence of a flag, being set to null, undefined, empty object or empty string\r\n// should all be considered equal\r\nexport function flagCompare(data, flag, flagVal) {\r\n  if (data[flag] == flagVal) return true;\r\n\r\n  const falseyFlagVal =\r\n    flagVal == null ||\r\n    flagVal === false ||\r\n    flagVal === '' ||\r\n    (foundry.utils.getType(flagVal) === 'Object' && foundry.utils.isEmpty(flagVal));\r\n\r\n  const falseyDataVal =\r\n    data[flag] == null ||\r\n    data[flag] === false ||\r\n    data[flag] === '' ||\r\n    (foundry.utils.getType(data[flag]) === 'Object' && foundry.utils.isEmpty(data[flag]));\r\n\r\n  if (falseyFlagVal && falseyDataVal) return true;\r\n\r\n  // Special treatment for Tagger module's tags\r\n  // Instead of directly comparing string we check if it contains the string\r\n  if (flag === 'flags.tagger.tags') {\r\n    const tags = data[flag] || [];\r\n    let compTags = flagVal;\r\n    if (!Array.isArray(compTags)) {\r\n      compTags = flagVal ? flagVal.split(',').map((s) => s.trim()) : [];\r\n    }\r\n    for (const t of compTags) {\r\n      if (!tags.includes(t)) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  if (flagVal && typeof flagVal === 'string' && flagVal.includes('*')) {\r\n    return wildcardStringMatch(flagVal, data[flag]);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function hasFlagRemove(flag, formData) {\r\n  const comp = flag.split('.');\r\n  for (let i = comp.length - 1; i >= 1; i--) {\r\n    const tempFlag = comp.slice(0, i).join('.') + '.-=' + comp[i];\r\n    if (tempFlag in formData) {\r\n      return tempFlag;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function selectAddSubtractFields(form, fields) {\r\n  if (!fields) return;\r\n  for (const key of Object.keys(fields)) {\r\n    form\r\n      .find(`[name=\"${key}\"]`)\r\n      .removeClass('me-add')\r\n      .removeClass('me-subtract')\r\n      .addClass(fields[key].method === 'add' ? 'me-add' : 'me-subtract')\r\n      .attr(\r\n        'title',\r\n        fields[key].method === 'add' ? `+ ${localize('form.adding')}` : `- ${localize('form.subtracting')}`\r\n      );\r\n  }\r\n}\r\n\r\nexport function applyAddSubtract(updates, objects, docName, addSubtractFields) {\r\n  // See if any field need to be added or subtracted\r\n  if (!addSubtractFields || foundry.utils.isEmpty(addSubtractFields)) return;\r\n\r\n  for (let i = 0; i < updates.length; i++) {\r\n    const update = updates[i];\r\n    const data = foundry.utils.flattenObject(getData(objects[i]).toObject());\r\n\r\n    GeneralDataAdapter.dataToForm(docName, objects[i], data);\r\n\r\n    for (const field of Object.keys(update)) {\r\n      if (field in addSubtractFields && field in data) {\r\n        const ctrl = addSubtractFields[field];\r\n        let val = data[field];\r\n\r\n        // Special processing for Tagger module fields\r\n        if (field === 'flags.tagger.tags') {\r\n          const currentTags = Array.isArray(val) ? val : (val ?? '').split(',').map((s) => s.trim());\r\n          const modTags = (update[field] ?? '').split(',').map((s) => s.trim());\r\n          for (const tag of modTags) {\r\n            if (ctrl.method === 'add') {\r\n              if (!currentTags.includes(tag)) currentTags.push(tag);\r\n            } else if (ctrl.method === 'subtract') {\r\n              const index = currentTags.indexOf(tag);\r\n              if (index > -1) currentTags.splice(index, 1);\r\n            }\r\n          }\r\n          update[field] = currentTags.filter((t) => t).join(',');\r\n          continue;\r\n        } else if (ctrl.type === 'text') {\r\n          if (ctrl.method === 'add') {\r\n            const toAdd = 'value' in ctrl ? ctrl.value : update[field];\r\n            if (toAdd.startsWith('>>')) {\r\n              val = toAdd.replace('>>', '') + val;\r\n            } else {\r\n              val += toAdd;\r\n            }\r\n          } else {\r\n            val = val.replace('value' in ctrl ? ctrl.value : update[field], '');\r\n          }\r\n          update[field] = val;\r\n          continue;\r\n        }\r\n\r\n        if (ctrl.method === 'add') {\r\n          val += 'value' in ctrl ? ctrl.value : update[field];\r\n        } else {\r\n          val -= 'value' in ctrl ? ctrl.value : update[field];\r\n        }\r\n        if ('min' in ctrl && val < ctrl.min) {\r\n          val = ctrl.min;\r\n        } else if ('max' in ctrl && val > ctrl.max) {\r\n          val = ctrl.max;\r\n        }\r\n        update[field] = val;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function getCommonData(objects) {\r\n  if (!objects || !objects.length) return {};\r\n  const commonData = foundry.utils.flattenObject(objects[0]);\r\n  for (let i = 1; i < objects.length; i++) {\r\n    const diff = foundry.utils.flattenObject(\r\n      foundry.utils.diffObject(commonData, foundry.utils.flattenObject(objects[i]))\r\n    );\r\n    for (const k of Object.keys(diff)) {\r\n      // Special handling for empty/undefined data\r\n      if ((diff[k] === '' || diff[k] == null) && (commonData[k] === '' || commonData[k] == null)) {\r\n        // matches, do not remove\r\n      } else {\r\n        delete commonData[k];\r\n      }\r\n    }\r\n  }\r\n  return commonData;\r\n}\r\n\r\n/**\r\n * Merges 'other' into 'original' without expanding and duplicating the 'original' if it contains dot notation using keys\r\n */\r\nexport function mergeObjectPreserveDot(original, other = {}, nestedKey = '') {\r\n  if (!other) return;\r\n  for (const [key, val] of Object.entries(original)) {\r\n    const fullKey = nestedKey ? nestedKey + '.' + key : key;\r\n    const t = foundry.utils.getType(val);\r\n    if (t === 'Object') mergeObjectPreserveDot(val, other, fullKey);\r\n    else {\r\n      const prop = getProperty(other, fullKey);\r\n      if (prop !== undefined) {\r\n        original[key] = prop;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function panToFitPlaceables(placeables) {\r\n  placeables = placeables.map((p) => p.object ?? p).filter((p) => p.center);\r\n  if (placeables.length) {\r\n    if (placeables.length === 1) {\r\n      if (placeables[0].center?.x) {\r\n        canvas.animatePan({ x: placeables[0].center.x, y: placeables[0].center.y, duration: 250 });\r\n      }\r\n    } else {\r\n      // Determine top left and bottom right corners to later determine the view's center position and scale\r\n      const topLeft = { x: 999999999, y: 999999999 };\r\n      const bottomRight = { x: -999999999, y: -999999999 };\r\n\r\n      for (let p of placeables) {\r\n        let tlc = p;\r\n        if (p instanceof Wall) {\r\n          tlc = { x: p.center.x - p.width / 2, y: p.center.y - p.height / 2 };\r\n        }\r\n\r\n        if (tlc.x < topLeft.x) topLeft.x = tlc.x;\r\n        if (tlc.y < topLeft.y) topLeft.y = tlc.y;\r\n        if (tlc.x + p.width > bottomRight.x) bottomRight.x = tlc.x + p.width;\r\n        if (tlc.y + p.height > bottomRight.y) bottomRight.y = tlc.y + p.height;\r\n      }\r\n\r\n      // Checking if screen at current scale fits placeables along x and y axis\r\n      let scale = canvas.scene._viewPosition.scale;\r\n      // Adjust the size of the rectangle that placeable occupy in our scale calculations\r\n      // to account for UI elements\r\n      const padding = 100;\r\n      if (bottomRight.x - topLeft.x + padding > canvas.screenDimensions[0] / scale) {\r\n        scale = canvas.screenDimensions[0] / (bottomRight.x - topLeft.x + padding);\r\n      }\r\n      if (bottomRight.y - topLeft.y + padding > canvas.screenDimensions[1] / scale) {\r\n        scale = canvas.screenDimensions[1] / (bottomRight.y - topLeft.y + padding);\r\n      }\r\n\r\n      canvas.animatePan({\r\n        duration: 250,\r\n        scale,\r\n        x: (bottomRight.x - topLeft.x) / 2 + topLeft.x,\r\n        y: (bottomRight.y - topLeft.y) / 2 + topLeft.y,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a hash code from a string\r\n * @param  {String} str The string to hash.\r\n * @return {Number}    A 32bit integer\r\n * @see http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\r\n */\r\nexport function hashCode(str) {\r\n  let hash = 0;\r\n  for (let i = 0, len = str.length; i < len; i++) {\r\n    let chr = str.charCodeAt(i);\r\n    hash = (hash << 5) - hash + chr;\r\n    hash |= 0; // Convert to 32bit integer\r\n  }\r\n  return hash;\r\n}\r\n\r\nfunction escapeRegex(string) {\r\n  return string.replace(/[/\\-\\\\^$+?.()|[\\]{}]/g, '\\\\$&');\r\n}\r\n\r\nexport function wildcardStringMatch(sw, s2) {\r\n  return new RegExp('^' + escapeRegex(sw).replaceAll('*', '.*') + '$').test(s2);\r\n}\r\n\r\nexport function wildcardStringReplace(sw, replaceWith, s2) {\r\n  let re = new RegExp(escapeRegex(sw).replaceAll('*', '.*'), 'g');\r\n  return s2.replaceAll(re, replaceWith);\r\n}\r\n\r\nexport function regexStringReplace(sw, replaceWith, s2) {\r\n  try {\r\n    let re = new RegExp(sw, 'g');\r\n    return s2.replaceAll(re, replaceWith);\r\n  } catch (e) {}\r\n  return s2;\r\n}\r\n\r\nexport function flattenToDepth(obj, d = 0) {\r\n  if (d === 0) return obj;\r\n\r\n  const flat = {};\r\n  for (let [k, v] of Object.entries(obj)) {\r\n    let t = foundry.utils.getType(v);\r\n    if (t === 'Object') {\r\n      if (foundry.utils.isEmpty(v)) flat[k] = v;\r\n      let inner = flattenToDepth(v, d - 1);\r\n      for (let [ik, iv] of Object.entries(inner)) {\r\n        flat[`${k}.${ik}`] = iv;\r\n      }\r\n    } else flat[k] = v;\r\n  }\r\n  return flat;\r\n}\r\n\r\n// TODO\r\nexport function activeEffectPresetSelect(aeConfig) {\r\n  const showPresetGeneric = function (docName) {\r\n    new MassEditPresets(\r\n      aeConfig,\r\n      async (preset) => {\r\n        if (!foundry.utils.isEmpty(preset.randomize)) {\r\n          await applyRandomization(preset.data, null, preset.randomize);\r\n        }\r\n\r\n        const changes = aeConfig.object.changes ?? [];\r\n        let nChanges = [];\r\n\r\n        Object.keys(preset.data[0]).forEach((k) => {\r\n          let value;\r\n          if (foundry.utils.getType(preset.data[0][k]) === 'string') value = preset.data[0][k];\r\n          else value = JSON.stringify(preset.data[0][k]);\r\n\r\n          nChanges.push({\r\n            key: docName === 'Token' ? 'ATL.' + k : k,\r\n            mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\r\n            priority: 20,\r\n            value,\r\n          });\r\n        });\r\n\r\n        for (let i = changes.length - 1; i >= 0; i--) {\r\n          if (!nChanges.find((nc) => nc.key === changes[i].key)) nChanges.unshift(changes[i]);\r\n        }\r\n\r\n        aeConfig.object.update({ changes: nChanges });\r\n      },\r\n      docName\r\n    ).render(true);\r\n  };\r\n\r\n  const showPresetActiveEffect = function () {\r\n    new MassEditPresets(\r\n      aeConfig,\r\n      (preset) => {\r\n        const changes = aeConfig.object.changes ?? [];\r\n        let nChanges = [];\r\n\r\n        preset.data[0].changes?.forEach((change) => {\r\n          if (change.key) {\r\n            nChanges.push(\r\n              foundry.utils.mergeObject({ mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE, priority: 20 }, change)\r\n            );\r\n          }\r\n        });\r\n\r\n        for (let i = changes.length - 1; i >= 0; i--) {\r\n          if (!nChanges.find((nc) => nc.key === changes[i].key)) nChanges.unshift(changes[i]);\r\n        }\r\n\r\n        aeConfig.object.update({ changes: nChanges });\r\n      },\r\n      'ActiveEffect'\r\n    ).render(true);\r\n  };\r\n\r\n  new Dialog({\r\n    title: localize('common.presets'),\r\n    content: ``,\r\n    buttons: {\r\n      activeEffect: {\r\n        label: 'ActiveEffect',\r\n        callback: () => showPresetActiveEffect(),\r\n      },\r\n      token: {\r\n        label: 'Token',\r\n        callback: () => showPresetGeneric('Token'),\r\n      },\r\n      actor: {\r\n        label: 'Actor',\r\n        callback: () => showPresetGeneric('Actor'),\r\n      },\r\n    },\r\n  }).render(true);\r\n}\r\n\r\nexport function getDocumentName(doc) {\r\n  const docName = doc.document ? doc.document.documentName : doc.documentName;\r\n  return docName ?? 'NONE';\r\n}\r\n\r\nexport const DOCUMENT_CREATE_REQUESTS = {};\r\n\r\n/**\r\n * Creates documents either directly or by delegating the task to a GM\r\n * @param {String} documentName  document type to be created\r\n * @param {Array[Object]} data   data defining the documents\r\n * @param {String} sceneID       scene the documents should be created on\r\n * @returns placeable documents that have been created\r\n */\r\nexport async function createDocuments(documentName, data, sceneID) {\r\n  if (game.user.isGM) {\r\n    return game.scenes.get(sceneID).createEmbeddedDocuments(documentName, data);\r\n  }\r\n\r\n  const requestID = foundry.utils.randomID();\r\n\r\n  const message = {\r\n    handlerName: 'document',\r\n    args: { sceneID, documentName, data, requestID },\r\n    type: 'CREATE',\r\n  };\r\n  game.socket.emit(`module.${MODULE_ID}`, message);\r\n\r\n  // Self resolve in 4s if no response from a GM is received\r\n  setTimeout(() => {\r\n    DOCUMENT_CREATE_REQUESTS[requestID]?.([]);\r\n  }, 4000);\r\n\r\n  return new Promise((resolve) => {\r\n    DOCUMENT_CREATE_REQUESTS[requestID] = resolve;\r\n  });\r\n}\r\n\r\n/**\r\n * Resolves the delegated create documents request\r\n * @param {object} options\r\n * @param {String} options.requestID          request to be resolved\r\n * @param {String} options.sceneID            scene the documents have been created on\r\n * @param {String} options.documentName       type of document that has been created\r\n * @param {Array[String]} options.documentIDs array of document ids that have been created\r\n */\r\nexport function resolveCreateDocumentRequest({ requestID, sceneID, documentName, documentIDs } = {}) {\r\n  if (!DOCUMENT_CREATE_REQUESTS.hasOwnProperty(requestID)) return;\r\n\r\n  const scene = game.scenes.get(sceneID);\r\n  const documents = [];\r\n  for (const docID of documentIDs) {\r\n    documents.push(scene.getEmbeddedDocument(documentName, docID));\r\n  }\r\n\r\n  DOCUMENT_CREATE_REQUESTS[requestID](documents);\r\n  delete DOCUMENT_CREATE_REQUESTS[requestID];\r\n}\r\n\r\nexport function localize(path, moduleLocalization = true) {\r\n  if (moduleLocalization) return game.i18n.localize(`MassEdit.${path}`);\r\n  return game.i18n.localize(path);\r\n}\r\n\r\nexport function localFormat(path, insert, moduleLocalization = true) {\r\n  if (moduleLocalization) return game.i18n.format(`MassEdit.${path}`, insert);\r\n  return game.i18n.format(path, insert);\r\n}\r\n\r\nexport async function applyPresetToScene(preset) {\r\n  if (preset && canvas.scene) {\r\n    await preset.load();\r\n    const data = foundry.utils.flattenObject(preset.data[0]);\r\n\r\n    const randomizer = preset.randomize;\r\n    if (!foundry.utils.isEmpty(randomizer)) {\r\n      await applyRandomization([data], null, randomizer);\r\n    }\r\n\r\n    await canvas.scene.update(data);\r\n\r\n    // Grid doesn't redraw on scene update, do it manually here\r\n    if ('grid.color' in data || 'grid.alpha' in data) {\r\n      canvas.grid.grid.draw({\r\n        color: (data['grid.color'] ?? canvas.scene.grid.color).replace('#', '0x'),\r\n        alpha: Number(data['grid.alpha'] ?? canvas.scene.grid.alpha),\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport async function executeScript(command, { actor, token, ...scope } = {}) {\r\n  // Add variables to the evaluation scope\r\n  const speaker = ChatMessage.implementation.getSpeaker({ actor, token });\r\n  const character = game.user.character;\r\n  token = token || (canvas.ready ? canvas.tokens.get(speaker.token) : null);\r\n  actor = actor || token?.actor || game.actors.get(speaker.actor);\r\n\r\n  // Unpack argument names and values\r\n  const argNames = Object.keys(scope);\r\n  if (argNames.some((k) => Number.isNumeric(k))) {\r\n    throw new Error('Illegal numeric Macro parameter passed to execution scope.');\r\n  }\r\n  const argValues = Object.values(scope);\r\n\r\n  // Define an AsyncFunction that wraps the macro content\r\n  const AsyncFunction = async function () {}.constructor;\r\n  // eslint-disable-next-line no-new-func\r\n  const fn = new AsyncFunction('speaker', 'actor', 'token', 'character', 'scope', ...argNames, `{${command}\\n}`);\r\n\r\n  // Attempt macro execution\r\n  try {\r\n    return await fn.call(this, speaker, actor, token, character, scope, ...argValues);\r\n  } catch (err) {\r\n    ui.notifications.error('MACRO.Error', { localize: true });\r\n  }\r\n}\r\n\r\nexport class SeededRandom {\r\n  /**\r\n   * Seeded variation of the Foundry's randomID(...) function.\r\n   * Generate a random string ID of a given requested length.\r\n   * @param {String} seed      Seed to be fed into random number generator\r\n   * @param {number} length    The length of the random ID to generate\r\n   * @return {string}          Return a string containing random letters and numbers\r\n   */\r\n  static randomID(seed, length = 16) {\r\n    seed = this.cyrb128(seed);\r\n    const random = this.sfc32(seed[0], seed[1], seed[2], seed[3]);\r\n\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    const r = Array.from({ length }, () => (random() * chars.length) >> 0);\r\n    return r.map((i) => chars[i]).join('');\r\n  }\r\n\r\n  // Courtesy of bryc\r\n  // github.com/bryc\r\n  static cyrb128(str) {\r\n    let h1 = 1779033703,\r\n      h2 = 3144134277,\r\n      h3 = 1013904242,\r\n      h4 = 2773480762;\r\n    for (let i = 0, k; i < str.length; i++) {\r\n      k = str.charCodeAt(i);\r\n      h1 = h2 ^ Math.imul(h1 ^ k, 597399067);\r\n      h2 = h3 ^ Math.imul(h2 ^ k, 2869860233);\r\n      h3 = h4 ^ Math.imul(h3 ^ k, 951274213);\r\n      h4 = h1 ^ Math.imul(h4 ^ k, 2716044179);\r\n    }\r\n    h1 = Math.imul(h3 ^ (h1 >>> 18), 597399067);\r\n    h2 = Math.imul(h4 ^ (h2 >>> 22), 2869860233);\r\n    h3 = Math.imul(h1 ^ (h3 >>> 17), 951274213);\r\n    h4 = Math.imul(h2 ^ (h4 >>> 19), 2716044179);\r\n    (h1 ^= h2 ^ h3 ^ h4), (h2 ^= h1), (h3 ^= h1), (h4 ^= h1);\r\n    return [h1 >>> 0, h2 >>> 0, h3 >>> 0, h4 >>> 0];\r\n  }\r\n\r\n  // Courtesy of Chris Doty-Humphrey\r\n  // https://pracrand.sourceforge.net/\r\n  static sfc32(a, b, c, d) {\r\n    return function () {\r\n      a |= 0;\r\n      b |= 0;\r\n      c |= 0;\r\n      d |= 0;\r\n      var t = (((a + b) | 0) + d) | 0;\r\n      d = (d + 1) | 0;\r\n      a = b ^ (b >>> 9);\r\n      b = (c + (c << 3)) | 0;\r\n      c = (c << 21) | (c >>> 11);\r\n      c = (c + t) | 0;\r\n      return (t >>> 0) / 4294967296;\r\n    };\r\n  }\r\n}\r\n\r\nexport class TagInput {\r\n  static registerHandlebarsHelper() {\r\n    Handlebars.registerHelper('tagInput', (options) => {\r\n      const name = options.hash.name;\r\n      const label = options.hash.label ?? 'Tags';\r\n\r\n      let tags = options.hash.tags;\r\n      if (!Handlebars.Utils.isArray(tags)) tags = [];\r\n\r\n      // Construct the HTML\r\n      let tagHtml = '';\r\n      tags.forEach((tag) => {\r\n        tagHtml += this._tagField(tag);\r\n      });\r\n\r\n      return new Handlebars.SafeString(`\r\n      <fieldset>\r\n        <legend>${label}</legend>\r\n        <div class=\"form-group me-tags\">\r\n            <input type=\"text\" class=\"tag-input\">  \r\n            <input type=\"text\" class=\"tag-hidden-input\" name=\"${name}\" value=\"${tags.join(',')}\" hidden>\r\n            <button type=\"button\" class=\"add-tag\"><i class=\"fas fa-save\"></i></button>\r\n            <div class=\"tag-container\">${tagHtml}</div>\r\n        </div>\r\n      </fieldset>\r\n    `);\r\n    });\r\n  }\r\n\r\n  static _tagField(tag) {\r\n    return `<div class=\"tag\"><span>${tag}</span> <a class=\"delete-tag\"><i class=\"fa-solid fa-x fa-xs\"></i></a></div>`;\r\n  }\r\n\r\n  static activateListeners(html, resize) {\r\n    html.find('.me-tags .add-tag').on('click', (event) => {\r\n      const meTags = $(event.target).closest('.me-tags');\r\n      const input = meTags.find('.tag-input');\r\n      const tag = input\r\n        .val()\r\n        .trim()\r\n        .replace(/[^0-9a-zA-Z_\\- ]/gi, '')\r\n        .toLowerCase();\r\n      if (tag) {\r\n        input.val('');\r\n        const hiddenInput = meTags.find('.tag-hidden-input');\r\n        const currentTags = hiddenInput.val().split(',').filter(Boolean);\r\n        if (!currentTags.includes(tag)) {\r\n          hiddenInput.attr('value', [...currentTags, tag].join(','));\r\n          meTags.find('.tag-container').append(this._tagField(tag));\r\n          if (resize) resize();\r\n        }\r\n      }\r\n    });\r\n\r\n    html.find('.me-tags').on('click', '.delete-tag', (event) => {\r\n      const tag = $(event.target).closest('.tag');\r\n\r\n      // Remove tag from hidden input\r\n      const tagValue = tag.find('span').text();\r\n      const hiddenInput = tag.closest('.me-tags').find('.tag-hidden-input');\r\n      const newTags = hiddenInput\r\n        .val()\r\n        .split(',')\r\n        .filter((t) => t !== tagValue)\r\n        .join(',');\r\n      hiddenInput.attr('value', newTags);\r\n\r\n      // Remove the tag element itself\r\n      tag.remove();\r\n\r\n      if (resize) resize();\r\n    });\r\n  }\r\n}\r\n","class PlaylistSoundDataAdapter {\r\n  static formToData(obj, formData) {\r\n    if ('lvolume' in formData) {\r\n      formData['volume'] = AudioHelper.inputToVolume(formData['lvolume']);\r\n      delete formData['lvolume'];\r\n    }\r\n  }\r\n\r\n  static dataToForm(note, data) {\r\n    data['lvolume'] = (note.document ?? note).volume;\r\n  }\r\n\r\n  static updateToForm(update) {\r\n    if ('volume' in update) {\r\n      update['lvolume'] = AudioHelper.volumeToInput(update['volume']);\r\n      delete update.volume;\r\n    }\r\n  }\r\n}\r\n\r\nclass TileDataAdapter {\r\n  static formToData(tile, formData) {\r\n    if ('massedit.scale' in formData) {\r\n      formData.width = (tile.document ?? tile).width * formData['massedit.scale'];\r\n      formData.height = (tile.document ?? tile).height * formData['massedit.scale'];\r\n      delete formData['massedit.scale'];\r\n    }\r\n    if ('massedit.texture.scale' in formData) {\r\n      formData['texture.scaleX'] = formData['massedit.texture.scale'];\r\n      formData['texture.scaleY'] = formData['massedit.texture.scale'];\r\n      delete formData['massedit.texture.scale'];\r\n    }\r\n  }\r\n}\r\n\r\nclass NoteDataAdapter {\r\n  static formToData(obj, formData) {\r\n    if ('icon.selected' in formData || 'icon.custom' in formData) {\r\n      formData['texture.src'] = formData['icon.selected'] || formData['icon.custom'];\r\n      delete formData['icon.selected'];\r\n      delete formData['icon.custom'];\r\n    }\r\n  }\r\n\r\n  static dataToForm(note, data) {\r\n    const doc = note.document ?? note;\r\n    if (doc.texture?.src != null) {\r\n      data['icon.selected'] = doc.texture.src;\r\n      data['icon.custom'] = doc.texture.src;\r\n    }\r\n  }\r\n}\r\n\r\nexport class TokenDataAdapter {\r\n  static updateToForm(update) {\r\n    if ('texture.scaleX' in update) {\r\n      update.mirrorX = update['texture.scaleX'] < 0;\r\n      update.scale = Math.abs(update['texture.scaleX']);\r\n    }\r\n    if ('texture.scaleY' in update) {\r\n      update.mirrorY = update['texture.scaleY'] < 0;\r\n      update.scale = Math.abs(update['texture.scaleY']);\r\n    }\r\n  }\r\n\r\n  static dataToForm(token, data) {\r\n    const doc = token.document ?? token;\r\n    if (doc.texture?.scaleX != null) data.scale = Math.abs(doc.texture.scaleX);\r\n    if (doc.texture?.scaleX != null) data.mirrorX = doc.texture.scaleX < 0;\r\n    if (doc.texture?.scaleY != null) data.mirrorY = doc.texture.scaleY < 0;\r\n  }\r\n\r\n  static formToData(token, formData) {\r\n    const doc = token.document ?? token;\r\n\r\n    // Scale/mirroring\r\n    if ('scale' in formData || 'mirrorX' in formData || 'mirrorY' in formData) {\r\n      if (!('scale' in formData)) formData.scale = Math.abs(doc.texture.scaleX);\r\n      if (!('mirrorX' in formData)) formData.mirrorX = doc.texture.scaleX < 0;\r\n      if (!('mirrorY' in formData)) formData.mirrorY = doc.texture.scaleY < 0;\r\n      formData['texture.scaleX'] = formData.scale * (formData.mirrorX ? -1 : 1);\r\n      formData['texture.scaleY'] = formData.scale * (formData.mirrorY ? -1 : 1);\r\n      ['scale', 'mirrorX', 'mirrorY'].forEach((k) => delete formData[k]);\r\n    }\r\n\r\n    // Detection modes\r\n    TokenDataAdapter.correctDetectionModes(doc, formData);\r\n  }\r\n\r\n  static correctDetectionModeOrder(data, randomizeFields) {\r\n    const indexMap = {};\r\n    let i = 0;\r\n    for (const [k, v] of Object.entries(data)) {\r\n      if (k.startsWith('detectionModes')) {\r\n        const comps = k.split('.');\r\n        if (!(comps[1] in indexMap)) {\r\n          indexMap[comps[1]] = i;\r\n          i++;\r\n        }\r\n        const newKey = `detectionModes.${indexMap[comps[1]]}.${comps[2]}`;\r\n        delete data[k];\r\n        data[newKey] = v;\r\n        if (randomizeFields && k in randomizeFields) {\r\n          const rVal = randomizeFields[k];\r\n          delete randomizeFields[k];\r\n          randomizeFields[newKey] = rVal;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static detectionModeMatch(searchModes, tokenModes) {\r\n    for (const m1 of searchModes) {\r\n      if (!('id' in m1)) continue; // Ignore mode search attempts without ids as they can't be matched up\r\n      for (const m2 of tokenModes) {\r\n        if (m1.id === m2.id) {\r\n          if ('enabled' in m1 && m1.enabled !== m2.enabled) return false;\r\n          if ('range' in m1 && m1.range !== m2.range) return false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static correctDetectionModes(token, data) {\r\n    const detectionModes = [];\r\n    const indexMap = {};\r\n    let i = 0;\r\n    for (const [k, v] of Object.entries(data)) {\r\n      if (k.startsWith('detectionModes')) {\r\n        const comps = k.split('.');\r\n        if (!(comps[1] in indexMap)) {\r\n          indexMap[comps[1]] = i;\r\n          detectionModes.push({});\r\n          i++;\r\n        }\r\n        const dm = detectionModes[indexMap[comps[1]]];\r\n        dm[comps[2]] = v;\r\n        // data[`${comps[0]}.${indexMap[comps[1]]}.${comps[2]}`] = v;\r\n        delete data[k];\r\n      }\r\n    }\r\n\r\n    if (!detectionModes.length) return;\r\n\r\n    // Merge current detectionModes assigned to the token and the new ones being added\r\n    const mergedModes = foundry.utils.deepClone(token.detectionModes).filter((d) => d.id);\r\n    for (const dm of detectionModes) {\r\n      if (dm.id == null) continue;\r\n\r\n      let found = false;\r\n      for (const tdm of mergedModes) {\r\n        if (tdm.id === dm.id) {\r\n          foundry.utils.mergeObject(tdm, dm);\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!found) mergedModes.push(foundry.utils.mergeObject({ id: '', range: 0, enabled: true }, dm));\r\n    }\r\n    data.detectionModes = mergedModes;\r\n  }\r\n\r\n  static modifyPresetData(app, data) {\r\n    const pModes = Object.values(foundry.utils.expandObject(data)?.detectionModes || {});\r\n    if (!pModes.length) return;\r\n\r\n    const modes = Object.values(foundry.utils.expandObject(app._getSubmitData())?.detectionModes || {});\r\n\r\n    const dataClone = foundry.utils.deepClone(data);\r\n    const randomize = data['mass-edit-randomize'] ?? {};\r\n    const addSubtract = data['mass-edit-addSubtract'] ?? {};\r\n\r\n    const modCustomFields = function (fields, key, i, k, data) {\r\n      if (`detectionModes.${i}.${k}` in fields) {\r\n        delete fields[`detectionModes.${i}.${k}`];\r\n        fields[`detectionModes.${j}.${k}`] = data[key][`detectionModes.${i}.${k}`];\r\n      }\r\n    };\r\n\r\n    const startingModeLength = modes.length;\r\n    for (let i = 0; i < pModes.length; i++) {\r\n      if (!('id' in pModes[i])) continue;\r\n      let found = false;\r\n      for (let j = 0; j < startingModeLength; j++) {\r\n        if (pModes[i].id === modes[j].id) {\r\n          found = true;\r\n          Object.keys(pModes[i]).forEach((k) => {\r\n            delete data[`detectionModes.${i}.${k}`];\r\n            data[`detectionModes.${j}.${k}`] = dataClone[`detectionModes.${i}.${k}`];\r\n            modCustomFields(randomize, 'mass-edit-randomize', i, k, dataClone);\r\n            modCustomFields(addSubtract, 'mass-edit-addSubtract', i, k, dataClone);\r\n          });\r\n        }\r\n      }\r\n      if (!found) {\r\n        modes.push({ id: '', range: 0, enabled: true });\r\n        Object.keys(pModes[i]).forEach((k) => {\r\n          delete data[`detectionModes.${i}.${k}`];\r\n          data[`detectionModes.${modes.length - 1}.${k}`] = dataClone[`detectionModes.${i}.${k}`];\r\n\r\n          if (`detectionModes.${i}.${k}` in randomize) {\r\n            delete randomize[`detectionModes.${i}.${k}`];\r\n            randomize[`detectionModes.${modes.length - 1}.${k}`] =\r\n              dataClone['mass-edit-randomize'][`detectionModes.${i}.${k}`];\r\n          }\r\n          if (`detectionModes.${i}.${k}` in addSubtract) {\r\n            delete addSubtract[`detectionModes.${i}.${k}`];\r\n            addSubtract[`detectionModes.${modes.length - 1}.${k}`] =\r\n              dataClone['mass-edit-addSubtract'][`detectionModes.${i}.${k}`];\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (startingModeLength !== modes.length) {\r\n      app._previewChanges({ detectionModes: modes });\r\n      app.render();\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nconst ADAPTERS = {\r\n  Token: TokenDataAdapter,\r\n  PlaylistSound: PlaylistSoundDataAdapter,\r\n  Note: NoteDataAdapter,\r\n  Tile: TileDataAdapter,\r\n};\r\n\r\nexport class GeneralDataAdapter {\r\n  static formToData(docName, obj, formData) {\r\n    const adapter = ADAPTERS[docName];\r\n    if (adapter && adapter.formToData) {\r\n      adapter.formToData(obj, formData);\r\n    }\r\n  }\r\n\r\n  static dataToForm(docName, obj, formData) {\r\n    const adapter = ADAPTERS[docName];\r\n    if (adapter && adapter.dataToForm) {\r\n      adapter.dataToForm(obj, formData);\r\n    }\r\n  }\r\n\r\n  static updateToForm(docName, update) {\r\n    const adapter = ADAPTERS[docName];\r\n    if (adapter && adapter.updateToForm) {\r\n      adapter.updateToForm(update);\r\n    }\r\n  }\r\n}\r\n","import { TokenDataAdapter } from '../../applications/dataAdapters.js';\r\nimport { copyToClipboard, pasteDataUpdate } from '../../applications/forms.js';\r\nimport { showMassEdit } from '../../applications/multiConfig.js';\r\nimport { countFolderItems, trackProgress } from '../../applications/progressDialog.js';\r\nimport { Brush } from '../brush.js';\r\nimport { importPresetFromJSONDialog } from '../dialogs.js';\r\nimport { SortingHelpersFixed } from '../fixedSort.js';\r\nimport {\r\n  MODULE_ID,\r\n  SUPPORTED_PLACEABLES,\r\n  TagInput,\r\n  UI_DOCS,\r\n  applyPresetToScene,\r\n  localFormat,\r\n  localize,\r\n} from '../utils.js';\r\nimport { META_INDEX_ID, PresetAPI, PresetCollection, PresetPackFolder, PresetVirtualFolder } from './collection.js';\r\nimport { DOC_ICONS, Preset } from './preset.js';\r\nimport { FolderState, mergePresetDataToDefaultDoc, placeableToData, randomizeChildrenFolderColors } from './utils.js';\r\n\r\nconst SEARCH_MIN_CHAR = 2;\r\n\r\n// const FLAG_DATA = {\r\n//   documentName: null,\r\n//   data: null,\r\n//   addSubtract: null,\r\n//   randomize: null,\r\n// };\r\n\r\nconst SORT_MODES = {\r\n  manual: {\r\n    get tooltip() {\r\n      return localize('SIDEBAR.SortModeManual', false);\r\n    },\r\n    icon: '<i class=\"fa-solid fa-arrow-down-short-wide\"></i>',\r\n  },\r\n  alphabetical: {\r\n    get tooltip() {\r\n      return localize('SIDEBAR.SortModeAlpha', false);\r\n    },\r\n    icon: '<i class=\"fa-solid fa-arrow-down-a-z\"></i>',\r\n  },\r\n};\r\n\r\nconst SEARCH_MODES = {\r\n  p: {\r\n    get tooltip() {\r\n      return localize('presets.search-presets');\r\n    },\r\n    icon: '<i class=\"fas fa-search\"></i>',\r\n  },\r\n  pf: {\r\n    get tooltip() {\r\n      return localize('presets.search-presets-folders');\r\n    },\r\n    icon: '<i class=\"fa-solid fa-folder-magnifying-glass\"></i>',\r\n  },\r\n};\r\n\r\nexport class MassEditPresets extends FormApplication {\r\n  static objectHover = false;\r\n  static lastSearch;\r\n\r\n  constructor(configApp, callback, docName, options = {}) {\r\n    // Restore position and dimensions the previously closed window\r\n    if (!options.preventPositionOverride && MassEditPresets.previousPosition) {\r\n      options = { ...options, ...MassEditPresets.previousPosition };\r\n    }\r\n\r\n    super({}, options);\r\n    this.callback = callback;\r\n\r\n    // Drag/Drop tracking\r\n    this.dragType = null;\r\n    this.dragData = null;\r\n    this.draggedElements = null;\r\n\r\n    if (!configApp && UI_DOCS.includes(docName)) {\r\n      const docLock = game.settings.get(MODULE_ID, 'presetDocLock');\r\n      this.docName = docLock || docName;\r\n    } else {\r\n      this.configApp = configApp;\r\n      this.docName = docName || this.configApp.documentName;\r\n    }\r\n\r\n    this.canvas3dActive = Boolean(game.Levels3DPreview?._active);\r\n  }\r\n\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      id: 'mass-edit-presets',\r\n      classes: ['sheet'],\r\n      template: `modules/${MODULE_ID}/templates/preset/presets.html`,\r\n      resizable: true,\r\n      minimizable: true,\r\n      width: 350,\r\n      height: 900,\r\n      scrollY: ['ol.item-list'],\r\n    });\r\n  }\r\n\r\n  get title() {\r\n    let title = localize('common.presets');\r\n    if (!UI_DOCS.includes(this.docName)) title += ` [${this.docName}]`;\r\n    else title += ` [${localize('common.placeable')}]`;\r\n    return title;\r\n  }\r\n\r\n  async getData(options) {\r\n    const data = super.getData(options);\r\n    // If we're re-rendering deactivate the brush\r\n    if (this._activeBrush) Brush.deactivate();\r\n\r\n    // Cache partials\r\n    await getTemplate(`modules/${MODULE_ID}/templates/preset/preset.html`, 'me-preset');\r\n    await getTemplate(`modules/${MODULE_ID}/templates/preset/presetFolder.html`, 'me-preset-folder');\r\n    await getTemplate(`modules/${MODULE_ID}/templates/preset/presetsContent.html`, 'me-presets-content');\r\n\r\n    const displayExtCompendiums = game.settings.get(MODULE_ID, 'presetExtComp');\r\n\r\n    this.tree = await PresetCollection.getTree(this.docName, !displayExtCompendiums);\r\n    data.presets = this.tree.presets;\r\n    data.folders = this.tree.folders;\r\n    data.extFolders = this.tree.extFolders.length ? this.tree.extFolders : null;\r\n\r\n    data.createEnabled = Boolean(this.configApp);\r\n    data.isPlaceable = SUPPORTED_PLACEABLES.includes(this.docName) || this.docName === 'ALL';\r\n    data.allowDocumentSwap = UI_DOCS.includes(this.docName) && !this.configApp;\r\n    data.docLockActive = game.settings.get(MODULE_ID, 'presetDocLock') === this.docName;\r\n    data.layerSwitchActive = game.settings.get(MODULE_ID, 'presetLayerSwitch');\r\n    data.scaling = game.settings.get(MODULE_ID, 'presetScaling');\r\n    data.extCompActive = displayExtCompendiums;\r\n    data.sortMode = SORT_MODES[game.settings.get(MODULE_ID, 'presetSortMode')];\r\n    data.searchMode = SEARCH_MODES[game.settings.get(MODULE_ID, 'presetSearchMode')];\r\n    data.displayDragDropMessage = data.allowDocumentSwap && !(this.tree.presets.length || this.tree.folders.length);\r\n    data.canvas3dActive = this.canvas3dActive;\r\n\r\n    data.lastSearch = MassEditPresets.lastSearch;\r\n\r\n    data.docs = UI_DOCS.reduce((obj, key) => {\r\n      return {\r\n        ...obj,\r\n        [key]: DOC_ICONS[key],\r\n      };\r\n    }, {});\r\n\r\n    data.documents = UI_DOCS;\r\n    data.currentDocument = this.docName;\r\n\r\n    data.callback = Boolean(this.callback);\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @param {JQuery} html\r\n   */\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n\r\n    const hoverOverlay = html.closest('.window-content').find('.drag-drop-overlay');\r\n    html\r\n      .closest('.window-content')\r\n      .on('mouseover', (event) => {\r\n        if (canvas.activeLayer?.preview?.children.some((c) => c._original?.mouseInteractionManager?.isDragging)) {\r\n          hoverOverlay.show();\r\n          MassEditPresets.objectHover = true;\r\n        } else {\r\n          hoverOverlay.hide();\r\n          MassEditPresets.objectHover = false;\r\n        }\r\n      })\r\n      .on('mouseout', () => {\r\n        hoverOverlay.hide();\r\n        MassEditPresets.objectHover = false;\r\n      });\r\n\r\n    // Create Preset from Selected\r\n    html.find('.create-preset').on('click', () => {\r\n      const controlled = canvas.activeLayer.controlled;\r\n      if (controlled.length && SUPPORTED_PLACEABLES.includes(controlled[0].document.documentName)) {\r\n        this.dropPlaceable(controlled);\r\n      }\r\n    });\r\n\r\n    // =====================\r\n    // Preset multi-select & drag Listeners\r\n    const itemList = html.find('.item-list');\r\n\r\n    // Multi-select\r\n    html.on('click', '.item', (event) => {\r\n      itemSelect(event, itemList);\r\n      if (this._activeBrush) this._toggleBrush(event);\r\n    });\r\n\r\n    // Hide/Show preset tags\r\n    html.on('mouseenter', '.item', (event) => {\r\n      $(event.currentTarget).find('.tags').addClass('show');\r\n    });\r\n\r\n    html.on('mouseleave', '.item', (event) => {\r\n      $(event.currentTarget).find('.tags').removeClass('show');\r\n    });\r\n\r\n    html.on('dragstart', '.item', (event) => {\r\n      this.dragType = 'item';\r\n\r\n      const item = $(event.target).closest('.item');\r\n\r\n      // Drag has been started on an item that hasn't been selected\r\n      // Assume that this is the only item to be dragged and select it\r\n      if (!item.hasClass('selected')) {\r\n        itemList.find('.item.selected').removeClass('selected').removeClass('last-selected');\r\n        item.addClass('selected').addClass('last-selected');\r\n      }\r\n\r\n      const uuids = [];\r\n      itemList.find('.item.selected').each(function () {\r\n        uuids.push($(this).data('uuid'));\r\n      });\r\n      this.dragData = uuids;\r\n      this.draggedElements = itemList.find('.item.selected');\r\n    });\r\n    html.on('dragleave', '.item.editable', (event) => {\r\n      $(event.target).closest('.item').removeClass('drag-bot').removeClass('drag-top');\r\n    });\r\n\r\n    html.on('dragover', '.item.editable', (event) => {\r\n      if (this.dragType !== 'item') return;\r\n      if (!this.draggedElements.hasClass('editable')) return;\r\n\r\n      const targetItem = $(event.target).closest('.item');\r\n\r\n      // Check that we're not above a selected item  (i.e. item being dragged)\r\n      if (targetItem.hasClass('selected')) return;\r\n\r\n      // Determine if mouse is hovered over top, middle, or bottom\r\n      var domRect = event.currentTarget.getBoundingClientRect();\r\n      let prc = event.offsetY / domRect.height;\r\n\r\n      if (prc < 0.2) {\r\n        targetItem.removeClass('drag-bot').addClass('drag-top');\r\n      } else if (prc > 0.8) {\r\n        targetItem.removeClass('drag-top').addClass('drag-bot');\r\n      }\r\n    });\r\n\r\n    html.on('drop', '.item.editable', (event) => {\r\n      if (this.dragType !== 'item') return;\r\n      if (!this.draggedElements.hasClass('editable')) return;\r\n\r\n      const targetItem = $(event.target).closest('.item');\r\n\r\n      const top = targetItem.hasClass('drag-top');\r\n      targetItem.removeClass('drag-bot').removeClass('drag-top');\r\n\r\n      const uuids = this.dragData;\r\n      if (uuids) {\r\n        if (!targetItem.hasClass('selected')) {\r\n          // Move HTML Elements\r\n          (top ? uuids : uuids.reverse()).forEach((uuid) => {\r\n            const item = itemList.find(`.item[data-uuid=\"${uuid}\"]`);\r\n            if (item) {\r\n              if (top) item.insertBefore(targetItem);\r\n              else item.insertAfter(targetItem);\r\n            }\r\n          });\r\n\r\n          this._onItemSort(uuids, targetItem.data('uuid'), {\r\n            before: top,\r\n            folderUuid: targetItem.closest('.folder').data('uuid'),\r\n          });\r\n        }\r\n      }\r\n\r\n      this.dragType = null;\r\n      this.dragData = null;\r\n      this.draggedElements = null;\r\n    });\r\n\r\n    html.on('dragend', '.item', (event) => {\r\n      if (!checkMouseInWindow(event)) {\r\n        this._onPresetDragOut(event);\r\n      }\r\n    });\r\n\r\n    // ================\r\n    // Folder Listeners\r\n    html.on('click', '.folder > header', (event) => this._folderToggle($(event.target).closest('.folder')));\r\n\r\n    html.on('dragstart', '.folder.editable', (event) => {\r\n      if (this.dragType == 'item') return;\r\n      this.dragType = 'folder';\r\n\r\n      const folder = $(event.target).closest('.folder');\r\n      const uuids = [folder.data('uuid')];\r\n\r\n      $(event.target)\r\n        .find('.folder')\r\n        .each(function () {\r\n          uuids.push($(this).data('uuid'));\r\n        });\r\n\r\n      this.dragData = uuids;\r\n    });\r\n\r\n    html.on('dragleave', '.folder.editable header', (event) => {\r\n      $(event.target).closest('.folder').removeClass('drag-mid').removeClass('drag-top');\r\n    });\r\n\r\n    html.on('dragover', '.folder.editable header', (event) => {\r\n      const targetFolder = $(event.target).closest('.folder');\r\n\r\n      if (this.dragType === 'folder') {\r\n        // Check that we're not above folders being dragged\r\n        if (this.dragData.includes(targetFolder.data('uuid'))) return;\r\n\r\n        // Determine if mouse is hovered over top, middle, or bottom\r\n        var domRect = event.currentTarget.getBoundingClientRect();\r\n        let prc = event.offsetY / domRect.height;\r\n\r\n        if (prc < 0.2) {\r\n          targetFolder.removeClass('drag-mid').addClass('drag-top');\r\n        } else {\r\n          targetFolder.removeClass('drag-top').addClass('drag-mid');\r\n        }\r\n      } else if (this.dragType === 'item' && this.draggedElements.hasClass('editable')) {\r\n        targetFolder.addClass('drag-mid');\r\n      }\r\n    });\r\n\r\n    html.on('drop', '.folder.editable header', (event) => {\r\n      if (this._foundryDrop(event)) return;\r\n      const targetFolder = $(event.target).closest('.folder');\r\n\r\n      if (this.dragType === 'folder') {\r\n        const top = targetFolder.hasClass('drag-top');\r\n        targetFolder.removeClass('drag-mid').removeClass('drag-top');\r\n\r\n        const uuids = this.dragData;\r\n        if (uuids) {\r\n          if (uuids.includes(targetFolder.data('uuid'))) return;\r\n\r\n          const uuid = uuids[0];\r\n          const folder = html.find(`.folder[data-uuid=\"${uuid}\"]`);\r\n          if (folder) {\r\n            // Move HTML Elements\r\n            if (top) folder.insertBefore(targetFolder);\r\n            else targetFolder.find('.folder-items').first().append(folder);\r\n\r\n            if (top) {\r\n              this._onFolderSort(uuid, targetFolder.data('uuid'), {\r\n                inside: false,\r\n                folderUuid: targetFolder.parent().closest('.folder').data('uuid') ?? null,\r\n              });\r\n            } else {\r\n              this._onFolderSort(uuid, null, {\r\n                inside: true,\r\n                folderUuid: targetFolder.data('uuid'),\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } else if (this.dragType === 'item' && this.draggedElements.hasClass('editable')) {\r\n        targetFolder.removeClass('drag-mid');\r\n        const uuids = this.dragData;\r\n\r\n        // Move HTML Elements\r\n        const presetItems = targetFolder.children('.preset-items');\r\n        uuids?.forEach((uuid) => {\r\n          const item = itemList.find(`.item[data-uuid=\"${uuid}\"]`);\r\n          if (item.length) presetItems.append(item);\r\n        });\r\n\r\n        this._onItemSort(uuids, null, {\r\n          folderUuid: targetFolder.data('uuid'),\r\n        });\r\n      }\r\n\r\n      this.dragType = null;\r\n      this.dragData = null;\r\n      this.draggedElements = null;\r\n    });\r\n\r\n    html.on('drop', '.top-level-preset-items', (event) => {\r\n      if (this._foundryDrop(event)) return;\r\n      if (this.dragType === 'folder') {\r\n        // Move HTML Elements\r\n        const target = html.find('.top-level-folder-items');\r\n        const folder = html.find(`.folder[data-uuid=\"${this.dragData[0]}\"]`);\r\n        target.append(folder);\r\n\r\n        this._onFolderSort(this.dragData[0], null);\r\n      } else if (this.dragType === 'item' && this.draggedElements.hasClass('editable')) {\r\n        const uuids = this.dragData;\r\n\r\n        // Move HTML Elements\r\n        const target = html.find('.top-level-preset-items');\r\n        uuids?.forEach((uuid) => {\r\n          const item = itemList.find(`.item[data-uuid=\"${uuid}\"]`);\r\n          if (item.length) target.append(item);\r\n        });\r\n\r\n        this._onItemSort(uuids, null);\r\n      }\r\n\r\n      this.dragType = null;\r\n      this.dragData = null;\r\n      this.draggedElements = null;\r\n    });\r\n    // End of Folder Listeners\r\n    // ================\r\n\r\n    html.on('click', '.toggle-sort', this._onToggleSort.bind(this));\r\n    html.on('click', '.toggle-search-mode', this._onToggleSearch.bind(this));\r\n    html.on('click', '.toggle-doc-lock', this._onToggleLock.bind(this));\r\n    html.on('click', '.toggle-ext-comp', this._onToggleExtComp.bind(this));\r\n    html.on('click', '.toggle-scaling', this._onToggleScaling.bind(this));\r\n    html.on('click', '.toggle-layer-switch', this._onToggleLayerSwitch.bind(this));\r\n    html.on('click', '.document-select', this._onDocumentChange.bind(this));\r\n    html.on('dblclick', '.item', this._onDoubleClickPreset.bind(this));\r\n    html.on('click', '.create-folder', this._onCreateFolder.bind(this));\r\n    html.on('click', '.preset-create', this._onPresetCreate.bind(this));\r\n    html.on('click', '.preset-update a', this._onPresetUpdate.bind(this));\r\n    html.on('click', '.preset-brush', this._toggleBrush.bind(this));\r\n    html.on('click', '.preset-callback', this._onApplyPreset.bind(this));\r\n\r\n    const headerSearch = html.find('.header-search input');\r\n    headerSearch.on('input', (event) => this._onSearchInput(event));\r\n    if ((MassEditPresets.lastSearch?.length ?? 0) >= SEARCH_MIN_CHAR) headerSearch.trigger('input');\r\n\r\n    // Activate context menu\r\n    this._contextMenu(html.find('.item-list'));\r\n  }\r\n\r\n  _folderToggle(folderElement) {\r\n    const uuid = folderElement.data('uuid');\r\n\r\n    const folder = this.tree.allFolders.get(uuid);\r\n    if (folder.expanded) this._folderCollapse(folderElement, folder);\r\n    else this._folderExpand(folderElement, folder);\r\n  }\r\n\r\n  async _folderExpand(folderElement, folder) {\r\n    FolderState.setExpanded(folder.uuid, true);\r\n    folder.expanded = true;\r\n\r\n    if (folderElement.find('.folder-items').length) {\r\n      folderElement.removeClass('collapsed');\r\n      folderElement.find('header h3 i').first().removeClass('fa-folder-closed').addClass('fa-folder-open');\r\n    } else {\r\n      let content = await renderTemplate(`modules/${MODULE_ID}/templates/preset/presetFolder.html`, {\r\n        folder,\r\n        createEnabled: Boolean(this.configApp),\r\n        callback: Boolean(this.callback),\r\n        editable: fromUuidSync(folder.uuid)?.pack === PresetCollection.workingPack,\r\n      });\r\n      folderElement.replaceWith(content);\r\n    }\r\n  }\r\n\r\n  _folderCollapse(folderElement, folder) {\r\n    folderElement.addClass('collapsed');\r\n    folderElement.find('header h3 i').first().removeClass('fa-folder-open').addClass('fa-folder-closed');\r\n\r\n    FolderState.setExpanded(folder.uuid, false);\r\n    folder.expanded = false;\r\n  }\r\n\r\n  /**\r\n   * Process drag and drop of an Actor or Folder of actors\r\n   * @param {*} event\r\n   * @returns\r\n   */\r\n  _foundryDrop(event) {\r\n    const data = TextEditor.getDragEventData(event.originalEvent);\r\n    if (!isEmpty(data)) {\r\n      if (data.type === 'Folder') {\r\n        const folder = fromUuidSync(data.uuid);\r\n        if (folder.type !== 'Actor') return false;\r\n        if (this._importTracker?.active) return false;\r\n\r\n        trackProgress({\r\n          title: 'Converting Actors',\r\n          total: countFolderItems(folder),\r\n        }).then(async (tracker) => {\r\n          this._importTracker = tracker;\r\n          await this._importActorFolder(folder, null, { keepId: true });\r\n          this._importTracker?.stop();\r\n        });\r\n        return true;\r\n      } else if (data.type === 'Actor') {\r\n        PresetAPI.createPresetFromActorUuid(data.uuid, { keepId: true }).then((preset) => {\r\n          if (preset) this.render(true);\r\n        });\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async _importActorFolder(folder, parentFolder = null, options = {}) {\r\n    let nFolder = new Folder.implementation(\r\n      {\r\n        _id: options.keepId ? folder.id : null,\r\n        name: folder.name,\r\n        type: 'JournalEntry',\r\n        sorting: folder.sorting,\r\n        folder: parentFolder,\r\n        color: folder.color ?? '#000000',\r\n        flags: { [MODULE_ID]: { types: ['ALL', 'Token'] } },\r\n      },\r\n      { pack: PresetCollection.workingPack }\r\n    );\r\n\r\n    nFolder = await Folder.create(nFolder, { pack: nFolder.pack, keepId: options.keepId });\r\n\r\n    for (const child of folder.children) {\r\n      if (!this._importTracker?.active) break;\r\n      await this._importActorFolder(child.folder, nFolder.id, options);\r\n    }\r\n\r\n    for (const actor of folder.contents) {\r\n      if (!this._importTracker?.active) break;\r\n      await PresetAPI.createPresetFromActorUuid(actor.uuid, { folder: nFolder.id, keepId: options.keepId });\r\n      this._importTracker.incrementCount();\r\n    }\r\n\r\n    this.render(true);\r\n  }\r\n\r\n  async _onDoubleClickPreset(event) {\r\n    if (this.canvas3dActive) return;\r\n    const uuid = $(event.target).closest('.item').data('uuid');\r\n    if (!uuid) return;\r\n\r\n    const preset = await PresetAPI.getPreset({ uuid });\r\n    if (!preset) return;\r\n\r\n    if (preset.documentName === 'Scene') {\r\n      ui.notifications.info(`Mass Edit: ${localize('common.apply')} [${preset.name}]`);\r\n      applyPresetToScene(preset);\r\n    }\r\n\r\n    if (!SUPPORTED_PLACEABLES.includes(preset.documentName)) return;\r\n\r\n    ui.notifications.info(`Mass Edit: ${localize('presets.spawning')} [${preset.name}]`);\r\n\r\n    this._setInteractivityState(false);\r\n    await PresetAPI.spawnPreset({\r\n      preset,\r\n      coordPicker: true,\r\n      taPreview: 'ALL',\r\n      layerSwitch: game.settings.get(MODULE_ID, 'presetLayerSwitch'),\r\n      scaleToGrid: game.settings.get(MODULE_ID, 'presetScaling'),\r\n    });\r\n    this._setInteractivityState(true);\r\n  }\r\n\r\n  /**\r\n   * Sets the window app as translucent and inactive to mouse pointer events\r\n   * @param {Boolean} state true = active, false = inactive\r\n   */\r\n  _setInteractivityState(state) {\r\n    if (state) this.element.removeClass('inactive');\r\n    else this.element.addClass('inactive');\r\n  }\r\n\r\n  _contextMenu(html) {\r\n    ContextMenu.create(this, html, '.item', this._getItemContextOptions(), {\r\n      hookName: 'MassEditPresetContext',\r\n      onOpen: this._onRightClickPreset.bind(this),\r\n    });\r\n    ContextMenu.create(this, html, '.folder header', this._getFolderContextOptions(), {\r\n      hookName: 'MassEditFolderContext',\r\n    });\r\n  }\r\n\r\n  _getItemContextOptions() {\r\n    return [\r\n      {\r\n        name: localize('CONTROLS.CommonEdit', false),\r\n        icon: '<i class=\"fas fa-edit\"></i>',\r\n        condition: (item) => item.hasClass('editable'),\r\n        callback: (item) => this._onEditSelectedPresets(item),\r\n      },\r\n      {\r\n        name: localize('presets.open-journal'),\r\n        icon: '<i class=\"fas fa-book-open\"></i>',\r\n        callback: (item) => this._onOpenJournal(item),\r\n      },\r\n      {\r\n        name: localize('presets.apply-to-selected'),\r\n        icon: '<i class=\"fas fa-arrow-circle-right\"></i>',\r\n        condition: (item) =>\r\n          SUPPORTED_PLACEABLES.includes(item.data('doc-name')) &&\r\n          canvas.getLayerByEmbeddedName(item.data('doc-name')).controlled.length,\r\n        callback: (item) => this._onApplyToSelected(item),\r\n      },\r\n      {\r\n        name: localize('Duplicate', false),\r\n        icon: '<i class=\"fa-solid fa-copy\"></i>',\r\n        condition: (item) => item.hasClass('editable'),\r\n        callback: (item) => this._onCopySelectedPresets(null, { keepFolder: true, keepId: false }),\r\n      },\r\n      {\r\n        name: localize('presets.copy-to-clipboard'),\r\n        icon: '<i class=\"fa-solid fa-copy\"></i>',\r\n        condition: (item) => $(this.form).find('.item-list').find('.item.selected').length === 1,\r\n        callback: (item) => this._onCopyPresetToClipboard(),\r\n      },\r\n      {\r\n        name: localize('presets.export-as-json'),\r\n        icon: '<i class=\"fas fa-file-export fa-fw\"></i>',\r\n        callback: (item) => this._onExportSelectedPresets(),\r\n      },\r\n      {\r\n        name: localize('presets.export-to-compendium'),\r\n        icon: '<i class=\"fas fa-file-export fa-fw\"></i>',\r\n        callback: (item) => this._onExportSelectedPresetsToComp(),\r\n      },\r\n      {\r\n        name: localize('CONTROLS.CommonDelete', false),\r\n        icon: '<i class=\"fas fa-trash fa-fw\"></i>',\r\n        condition: (item) => item.hasClass('editable'),\r\n        callback: (item) => this._onDeleteSelectedPresets(item),\r\n      },\r\n    ];\r\n  }\r\n\r\n  _getFolderContextOptions() {\r\n    return [\r\n      {\r\n        name: 'Edit',\r\n        icon: '<i class=\"fas fa-edit\"></i>',\r\n        condition: (header) => {\r\n          const folder = this.tree.allFolders.get(header.closest('.folder').data('uuid'));\r\n          return !(folder instanceof PresetVirtualFolder) || folder instanceof PresetPackFolder;\r\n        },\r\n        callback: (header) => this._onFolderEdit(header),\r\n      },\r\n      {\r\n        name: 'Export to Compendium',\r\n        icon: '<i class=\"fas fa-file-export fa-fw\"></i>',\r\n        callback: (header) => this._onExportFolder(header.closest('.folder').data('uuid')),\r\n      },\r\n      {\r\n        name: localize('FOLDER.Remove', false),\r\n        icon: '<i class=\"fas fa-trash fa-fw\"></i>',\r\n        condition: (header) => header.closest('.folder').hasClass('editable'),\r\n        callback: (header) => this._onFolderDelete(header.closest('.folder').data('uuid')),\r\n      },\r\n      {\r\n        name: localize('FOLDER.Delete', false),\r\n        icon: '<i class=\"fas fa-dumpster\"></i>',\r\n        condition: (header) => header.closest('.folder').hasClass('editable'),\r\n        callback: (header) =>\r\n          this._onFolderDelete(header.closest('.folder').data('uuid'), {\r\n            deleteAll: true,\r\n          }),\r\n      },\r\n      {\r\n        name: 'Randomize Child Folder Colors',\r\n        icon: '<i class=\"fas fa-dice\"></i>',\r\n        condition: () => CONFIG.debug.MassEdit,\r\n        callback: (header) =>\r\n          randomizeChildrenFolderColors(header.closest('.folder').data('uuid'), this.tree, () => this.render(true)),\r\n      },\r\n    ];\r\n  }\r\n\r\n  async _onExportFolder(uuid) {\r\n    let { pack, keepId } = await new Promise((resolve) =>\r\n      getCompendiumDialog(resolve, { exportTo: true, keepIdSelect: true })\r\n    );\r\n    if (pack && !this._importTracker?.active) {\r\n      const folder = this.tree.allFolders.get(uuid);\r\n      if (folder) {\r\n        this._importTracker = await trackProgress({\r\n          title: 'Exporting Folder',\r\n          total: countFolderItems(this.tree.allFolders.get(uuid)),\r\n        });\r\n        await this._onCopyFolder(uuid, null, pack, true, keepId);\r\n        this._importTracker?.stop();\r\n      }\r\n    }\r\n  }\r\n\r\n  async _onCopyFolder(uuid, parentId = null, pack, render = true, keepId = true) {\r\n    if (!pack) pack = PresetCollection.workingPack;\r\n\r\n    const folder = this.tree.allFolders.get(uuid);\r\n    const folderDoc = await fromUuid(uuid);\r\n\r\n    if (folder) {\r\n      let types;\r\n      if (folderDoc) types = folderDoc.flags[MODULE_ID]?.types ?? ['ALL'];\r\n      else types = ['ALL'];\r\n\r\n      const data = {\r\n        _id: keepId ? folder.id : null,\r\n        name: folder.name,\r\n        color: folder.color,\r\n        sorting: folder.sorting,\r\n        folder: parentId,\r\n        flags: { [MODULE_ID]: { types } },\r\n        type: 'JournalEntry',\r\n      };\r\n      const nFolder = await Folder.create(data, { pack, keepId });\r\n\r\n      for (const preset of folder.presets) {\r\n        if (!this._importTracker?.active) break;\r\n        const p = (await preset.load()).clone();\r\n        p.folder = nFolder.id;\r\n        if (!keepId) p.id = foundry.utils.randomID();\r\n        await PresetCollection.set(p, pack);\r\n        this._importTracker?.incrementCount();\r\n      }\r\n\r\n      for (const child of folder.children) {\r\n        if (!this._importTracker?.active) break;\r\n        await this._onCopyFolder(child.uuid, nFolder.id, pack, false, keepId);\r\n      }\r\n\r\n      if (render) this.render(true);\r\n    }\r\n  }\r\n\r\n  async _onExportSelectedPresetsToComp() {\r\n    let { pack, keepId } = await new Promise((resolve) =>\r\n      getCompendiumDialog(resolve, { exportTo: true, keepIdSelect: true })\r\n    );\r\n    if (pack) this._onCopySelectedPresets(pack, { keepId });\r\n  }\r\n\r\n  async _onCopySelectedPresets(pack, { keepFolder = false, keepId = true } = {}) {\r\n    const [selected, _] = await this._getSelectedPresets();\r\n    for (const preset of selected) {\r\n      const p = preset.clone();\r\n      if (!keepFolder) p.folder = null;\r\n      if (!keepId) p.id = foundry.utils.randomID();\r\n      await PresetCollection.set(p, pack);\r\n    }\r\n    if (selected.length) this.render(true);\r\n  }\r\n\r\n  async _onCopyPresetToClipboard() {\r\n    const [selected, _] = await this._getSelectedPresets();\r\n    if (selected.length) copyToClipboard(selected[0]);\r\n  }\r\n\r\n  async _getSelectedPresets({ editableOnly = false, full = true } = {}) {\r\n    const uuids = [];\r\n    const items = this.element.find('.item-list').find('.item.selected' + (editableOnly ? '.editable' : ''));\r\n    items.each(function () {\r\n      const uuid = $(this).data('uuid');\r\n      uuids.push(uuid);\r\n    });\r\n\r\n    const selected = [];\r\n    for (const uuid of uuids) {\r\n      const preset = await PresetCollection.get(uuid, { full });\r\n      if (preset) selected.push(preset);\r\n    }\r\n    return [selected, items];\r\n  }\r\n\r\n  async _onExportSelectedPresets() {\r\n    const [selected, _] = await this._getSelectedPresets();\r\n    exportPresets(selected);\r\n  }\r\n\r\n  async _onEditSelectedPresets(item) {\r\n    const [selected, _] = await this._getSelectedPresets({ editableOnly: true });\r\n    if (selected.length) {\r\n      // Position edit window just bellow the item\r\n      const options = item.offset();\r\n      options.top += item.height();\r\n\r\n      this._editPresets(selected, options);\r\n    }\r\n  }\r\n\r\n  async _onDeleteSelectedPresets(item) {\r\n    const [selected, items] = await this._getSelectedPresets({ editableOnly: true, full: false });\r\n    if (selected.length) {\r\n      const confirm =\r\n        selected.length === 0\r\n          ? true\r\n          : await Dialog.confirm({\r\n              title: `${localize('common.delete')} [ ${selected.length} ]`,\r\n              content: `<p>${localize('AreYouSure', false)}</p><p>${localFormat('presets.delete-presets-warn', {\r\n                count: selected.length,\r\n              })}</p>`,\r\n            });\r\n\r\n      if (confirm) {\r\n        await PresetCollection.delete(selected);\r\n        items.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  async _onOpenJournal(item) {\r\n    const [selected, _] = await this._getSelectedPresets({ editableOnly: false });\r\n    selected.forEach((p) => p.openJournal());\r\n  }\r\n\r\n  async _onApplyToSelected(item) {\r\n    const [selected, _] = await this._getSelectedPresets({ editableOnly: false });\r\n    if (!selected.length) return;\r\n\r\n    // Confirm that all presets are of the same document type\r\n    const types = new Set();\r\n    for (const s of selected) {\r\n      types.add(s.documentName);\r\n      if (types.size > 1) {\r\n        ui.notifications.warn(localize('presets.apply-to-selected-warn'));\r\n        return;\r\n      }\r\n    }\r\n\r\n    const controlled = canvas.getLayerByEmbeddedName(selected[0].documentName).controlled;\r\n    if (!controlled.length) return;\r\n\r\n    for (const s of selected) {\r\n      pasteDataUpdate(controlled, s, false, true);\r\n    }\r\n  }\r\n\r\n  async _onCreateFolder(event) {\r\n    const types = [];\r\n    if (this.docName === 'ALL') {\r\n      types.push('ALL');\r\n    } else if (UI_DOCS.includes(this.docName)) {\r\n      types.push('ALL', this.docName);\r\n    } else {\r\n      types.push(this.docName);\r\n    }\r\n\r\n    const folder = new Folder.implementation(\r\n      {\r\n        name: Folder.defaultName(),\r\n        type: 'JournalEntry',\r\n        sorting: 'm',\r\n        flags: { [MODULE_ID]: { types } },\r\n      },\r\n      { pack: PresetCollection.workingPack }\r\n    );\r\n\r\n    await new Promise((resolve) => {\r\n      new PresetFolderConfig(folder, { resolve }).render(true);\r\n    });\r\n\r\n    this.render(true);\r\n  }\r\n\r\n  async _onFolderEdit(header) {\r\n    const uuid = $(header).closest('.folder').data('uuid');\r\n    const pFolder = this.tree.allFolders.get(uuid);\r\n\r\n    let folder;\r\n    if (pFolder instanceof PresetPackFolder) {\r\n      // This is a virtual pack folder\r\n      folder = new Folder.implementation(\r\n        {\r\n          _id: pFolder.id,\r\n          name: pFolder.name,\r\n          type: 'JournalEntry',\r\n          color: pFolder.color,\r\n          sorting: pFolder.sorting,\r\n        },\r\n        { pack: pFolder.uuid }\r\n      );\r\n    } else {\r\n      folder = await fromUuid($(header).closest('.folder').data('uuid'));\r\n    }\r\n\r\n    new Promise((resolve) => {\r\n      const options = { resolve, ...header.offset(), folder: pFolder };\r\n      options.top += header.height();\r\n\r\n      new PresetFolderConfig(folder, options).render(true);\r\n    }).then(() => this.render(true));\r\n  }\r\n\r\n  async _onFolderDelete(uuid, { render = true, deleteAll = false } = {}) {\r\n    const folder = this.tree.allFolders.get(uuid);\r\n    if (folder) {\r\n      let confirm;\r\n\r\n      if (deleteAll) {\r\n        confirm = await Dialog.confirm({\r\n          title: `${localize('FOLDER.Delete', false)}: ${folder.name}`,\r\n          content: `<div style=\"color:red;\"><h4>${localize('AreYouSure', false)}</h4><p>${localize(\r\n            'FOLDER.DeleteWarning',\r\n            false\r\n          )}</p></div>`,\r\n        });\r\n      } else {\r\n        confirm = await Dialog.confirm({\r\n          title: `${localize('FOLDER.Remove', false)}: ${folder.name}`,\r\n          content: `<h4>${localize('AreYouSure', false)}</h4><p>${localize('FOLDER.RemoveWarning', false)}</p>`,\r\n        });\r\n      }\r\n\r\n      if (confirm) {\r\n        await PresetCollection.deleteFolder(uuid, deleteAll);\r\n        if (render) this.render(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Throttle input and perform preset search\r\n  _onSearchInput(event) {\r\n    clearTimeout(this._searchTimer);\r\n    this._searchTimer = setTimeout(() => this._onSearch(event), 250);\r\n  }\r\n\r\n  async _onSearch(event) {\r\n    let newSearch = event.target.value;\r\n    let previousSearch = MassEditPresets.lastSearch || '';\r\n    MassEditPresets.lastSearch = newSearch;\r\n\r\n    if (previousSearch.length >= SEARCH_MIN_CHAR && newSearch.length < SEARCH_MIN_CHAR) {\r\n      $(event.target).removeClass('active');\r\n      this._resetSearchState();\r\n      this._renderContent();\r\n      return;\r\n    }\r\n\r\n    if (newSearch.length < SEARCH_MIN_CHAR) return;\r\n\r\n    const filter = event.target.value.trim().toLowerCase();\r\n    $(event.target).addClass('active');\r\n\r\n    this.tree.folders.forEach((f) => this._searchFolder(filter, f));\r\n    this.tree.extFolders.forEach((f) => this._searchFolder(filter, f));\r\n    this.tree.presets.forEach((p) => this._searchPreset(filter, p));\r\n\r\n    this._renderContent();\r\n  }\r\n\r\n  _searchFolder(filter, folder, forceRender = false) {\r\n    let match = folder.name.toLowerCase().includes(filter);\r\n\r\n    let childFolderMatch = false;\r\n    for (const f of folder.children) {\r\n      if (this._searchFolder(filter, f, match || forceRender)) childFolderMatch = true;\r\n    }\r\n\r\n    let presetMatch = false;\r\n    for (const p of folder.presets) {\r\n      if (this._searchPreset(filter, p, match || forceRender)) presetMatch = true;\r\n    }\r\n\r\n    const containsMatch = match || childFolderMatch || presetMatch;\r\n    folder.expanded = childFolderMatch || presetMatch;\r\n    folder.render = containsMatch || forceRender;\r\n\r\n    return containsMatch;\r\n  }\r\n\r\n  _searchPreset(filter, preset, forceRender = false) {\r\n    if (preset.name.toLowerCase().includes(filter) || preset.tags.includes(filter)) {\r\n      preset._render = true;\r\n      return true;\r\n    } else {\r\n      preset._render = false || forceRender;\r\n      return false;\r\n    }\r\n  }\r\n\r\n  _resetSearchState() {\r\n    this.tree.folders.forEach((f) => this._resetSearchStateFolder(f));\r\n    this.tree.extFolders.forEach((f) => this._resetSearchStateFolder(f));\r\n    this.tree.presets.forEach((p) => this._resetSearchStatePreset(p));\r\n  }\r\n\r\n  _resetSearchStateFolder(folder) {\r\n    folder.expanded = FolderState.expanded(folder.uuid);\r\n    folder.render = true;\r\n    folder.children.forEach((f) => this._resetSearchStateFolder(f));\r\n    folder.presets.forEach((p) => this._resetSearchStatePreset(p));\r\n  }\r\n\r\n  _resetSearchStatePreset(preset) {\r\n    preset._render = true;\r\n  }\r\n\r\n  async _renderContent() {\r\n    const content = await renderTemplate(`modules/${MODULE_ID}/templates/preset/presetsContent.html`, {\r\n      callback: Boolean(this.callback),\r\n      presets: this.tree.presets,\r\n      folders: this.tree.folders,\r\n      createEnabled: Boolean(this.configApp),\r\n      extFolders: this.tree.extFolders.length ? this.tree.extFolders : null,\r\n    });\r\n    this.element.find('.item-list').html(content);\r\n  }\r\n\r\n  async _onFolderSort(sourceUuid, targetUuid, { inside = true, folderUuid = null } = {}) {\r\n    let source = this.tree.allFolders.get(sourceUuid);\r\n    let target = this.tree.allFolders.get(targetUuid);\r\n\r\n    let folders;\r\n    if (folderUuid) folders = this.tree.allFolders.get(folderUuid).children;\r\n    else folders = this.tree.folders;\r\n\r\n    const siblings = [];\r\n    for (const folder of folders) {\r\n      if (folder.uuid !== sourceUuid) siblings.push(folder);\r\n    }\r\n\r\n    const result = SortingHelpersFixed.performIntegerSort(source, {\r\n      target,\r\n      siblings,\r\n      sortBefore: true,\r\n    });\r\n\r\n    if (result.length) {\r\n      const updates = [];\r\n      result.forEach((ctrl) => {\r\n        const update = ctrl.update;\r\n        update._id = ctrl.target.id;\r\n        update.folder = this.tree.allFolders.get(folderUuid)?.id ?? null;\r\n        updates.push(update);\r\n\r\n        ctrl.target.sort = update.sort;\r\n      });\r\n      await Folder.updateDocuments(updates, { pack: PresetCollection.workingPack });\r\n    }\r\n    this.render(true);\r\n  }\r\n\r\n  async _onItemSort(sourceUuids, targetUuid, { before = true, folderUuid = null } = {}) {\r\n    const sourceUuidsSet = new Set(sourceUuids);\r\n    const sources = this.tree.allPresets.filter((p) => sourceUuidsSet.has(p.uuid));\r\n\r\n    let target = this.tree.allPresets.find((p) => p.uuid === targetUuid);\r\n\r\n    // Determine siblings based on folder\r\n    let presets;\r\n    if (folderUuid) presets = this.tree.allFolders.get(folderUuid).presets;\r\n    else presets = this.tree.presets;\r\n\r\n    const siblings = [];\r\n    for (const preset of presets) {\r\n      if (!sourceUuidsSet.has(preset.uuid)) siblings.push(preset);\r\n    }\r\n\r\n    const result = SortingHelpersFixed.performIntegerSortMulti(sources, {\r\n      target,\r\n      siblings,\r\n      sortBefore: before,\r\n    });\r\n\r\n    if (result.length) {\r\n      const updates = [];\r\n      result.forEach((ctrl) => {\r\n        const update = ctrl.update;\r\n        update._id = ctrl.target.id;\r\n        update.folder = this.tree.allFolders.get(folderUuid)?.id ?? null;\r\n        updates.push(update);\r\n\r\n        ctrl.target.sort = update.sort;\r\n      });\r\n      await PresetCollection.updatePresets(updates);\r\n    }\r\n\r\n    this.render(true);\r\n  }\r\n\r\n  async _onToggleSort(event) {\r\n    const currentSort = game.settings.get(MODULE_ID, 'presetSortMode');\r\n    const newSort = currentSort === 'manual' ? 'alphabetical' : 'manual';\r\n    await game.settings.set(MODULE_ID, 'presetSortMode', newSort);\r\n\r\n    this.render(true);\r\n  }\r\n\r\n  async _onToggleSearch(event) {\r\n    const searchControl = $(event.target).closest('.toggle-search-mode');\r\n\r\n    const currentMode = game.settings.get(MODULE_ID, 'presetSearchMode');\r\n    const newMode = currentMode === 'p' ? 'pf' : 'p';\r\n    await game.settings.set(MODULE_ID, 'presetSearchMode', newMode);\r\n\r\n    const mode = SEARCH_MODES[newMode];\r\n    searchControl.attr('data-tooltip', mode.tooltip).html(mode.icon);\r\n\r\n    $(this.form).find('.header-search input').trigger('input');\r\n  }\r\n\r\n  _onToggleLock(event) {\r\n    const lockControl = $(event.target).closest('.toggle-doc-lock');\r\n\r\n    let currentLock = game.settings.get(MODULE_ID, 'presetDocLock');\r\n    let newLock = this.docName;\r\n\r\n    if (newLock !== currentLock) lockControl.addClass('active');\r\n    else {\r\n      lockControl.removeClass('active');\r\n      newLock = '';\r\n    }\r\n\r\n    game.settings.set(MODULE_ID, 'presetDocLock', newLock);\r\n  }\r\n\r\n  _onToggleLayerSwitch(event) {\r\n    const switchControl = $(event.target).closest('.toggle-layer-switch');\r\n\r\n    const value = !game.settings.get(MODULE_ID, 'presetLayerSwitch');\r\n    if (value) switchControl.addClass('active');\r\n    else switchControl.removeClass('active');\r\n\r\n    game.settings.set(MODULE_ID, 'presetLayerSwitch', value);\r\n  }\r\n\r\n  async _onToggleExtComp(event) {\r\n    const switchControl = $(event.target).closest('.toggle-ext-comp');\r\n\r\n    const value = !game.settings.get(MODULE_ID, 'presetExtComp');\r\n    if (value) switchControl.addClass('active');\r\n    else switchControl.removeClass('active');\r\n\r\n    await game.settings.set(MODULE_ID, 'presetExtComp', value);\r\n    this.render(true);\r\n  }\r\n\r\n  async _onToggleScaling(event) {\r\n    const switchControl = $(event.target).closest('.toggle-scaling');\r\n\r\n    const value = !game.settings.get(MODULE_ID, 'presetScaling');\r\n    if (value) switchControl.addClass('active');\r\n    else switchControl.removeClass('active');\r\n\r\n    game.settings.set(MODULE_ID, 'presetScaling', value);\r\n  }\r\n\r\n  _onDocumentChange(event) {\r\n    const newDocName = $(event.target).closest('.document-select').data('name');\r\n    if (newDocName != this.docName) {\r\n      this.docName = newDocName;\r\n\r\n      if (this.docName !== 'ALL') {\r\n        if (game.settings.get(MODULE_ID, 'presetLayerSwitch'))\r\n          canvas.getLayerByEmbeddedName(this.docName === 'Actor' ? 'Token' : this.docName)?.activate();\r\n      }\r\n\r\n      this.render(true);\r\n    }\r\n  }\r\n\r\n  async _onRightClickPreset(eventTarget) {\r\n    const item = $(eventTarget).closest('.item');\r\n\r\n    // If right-clicked item is not selected, de-select the others and select it\r\n    if (!item.hasClass('selected')) {\r\n      item.closest('.item-list').find('.item.selected').removeClass('selected').removeClass('last-selected');\r\n      item.addClass('selected').addClass('last-selected');\r\n    }\r\n  }\r\n\r\n  _editPresets(presets, options = {}, event) {\r\n    options.callback = () => this.render(true);\r\n    if (!('left' in options) && event) {\r\n      options.left = event.originalEvent.x - PresetConfig.defaultOptions.width / 2;\r\n      options.top = event.originalEvent.y;\r\n    }\r\n    new PresetConfig(presets, options).render(true);\r\n  }\r\n\r\n  async _onApplyPreset(event) {\r\n    if (this.callback) {\r\n      const uuid = $(event.target).closest('.item').data('uuid');\r\n      this.callback(await PresetCollection.get(uuid));\r\n    }\r\n  }\r\n\r\n  async _onPresetDragOut(event) {\r\n    const uuid = $(event.originalEvent.target).closest('.item').data('uuid');\r\n    const preset = await PresetCollection.get(uuid);\r\n    if (!preset) return;\r\n\r\n    // If released on top of a Mass Edit form, apply the preset to it instead of spawning it\r\n    const form = hoverMassEditForm(event.pageX, event.pageY, preset.documentName);\r\n    if (form) {\r\n      form._applyPreset(preset);\r\n      return;\r\n    }\r\n\r\n    // If it's a scene preset apply it to the currently active scene\r\n    if (preset.documentName === 'Scene') {\r\n      applyPresetToScene(preset);\r\n      return;\r\n    }\r\n\r\n    if (!SUPPORTED_PLACEABLES.includes(preset.documentName)) return;\r\n\r\n    // For some reason canvas.mousePosition does not get updated during drag and drop\r\n    // Acquire the cursor position transformed to Canvas coordinates\r\n    let mouseX;\r\n    let mouseY;\r\n    let mouseZ;\r\n\r\n    if (this.canvas3dActive) {\r\n      game.Levels3DPreview.interactionManager._onMouseMove(event, true);\r\n      const { x, y, z } = game.Levels3DPreview.interactionManager.canvas2dMousePosition;\r\n      mouseX = x;\r\n      mouseY = y;\r\n      mouseZ = z;\r\n    } else {\r\n      const [x, y] = [event.clientX, event.clientY];\r\n      const t = canvas.stage.worldTransform;\r\n\r\n      mouseX = (x - t.tx) / canvas.stage.scale.x;\r\n      mouseY = (y - t.ty) / canvas.stage.scale.y;\r\n\r\n      if (preset.documentName === 'Token' || preset.documentName === 'Tile') {\r\n        mouseX -= canvas.dimensions.size / 2;\r\n        mouseY -= canvas.dimensions.size / 2;\r\n      }\r\n    }\r\n\r\n    PresetAPI.spawnPreset({\r\n      preset,\r\n      x: mouseX,\r\n      y: mouseY,\r\n      z: mouseZ,\r\n      mousePosition: false,\r\n      layerSwitch: game.settings.get(MODULE_ID, 'presetLayerSwitch'),\r\n      scaleToGrid: game.settings.get(MODULE_ID, 'presetScaling'),\r\n    });\r\n  }\r\n\r\n  async _toggleBrush(event) {\r\n    const item = $(event.target).closest('.item');\r\n    const brushControl = item.find('.preset-brush');\r\n\r\n    if (brushControl.hasClass('active')) {\r\n      Brush.deactivate();\r\n      this._onPresetBrushDeactivate();\r\n    } else {\r\n      const uuid = item.data('uuid');\r\n      const preset = await PresetCollection.get(uuid);\r\n      if (!preset) {\r\n        Brush.deactivate();\r\n        this._onPresetBrushDeactivate();\r\n        return;\r\n      }\r\n\r\n      if (this._activeBrush) Brush.deactivate();\r\n\r\n      const activated = Brush.activate({\r\n        preset,\r\n        deactivateCallback: this._onPresetBrushDeactivate.bind(this),\r\n      });\r\n\r\n      if (activated) {\r\n        brushControl.addClass('active').addClass('fa-bounce');\r\n        this._activeBrush = true;\r\n      } else {\r\n        this._onPresetBrushDeactivate();\r\n      }\r\n    }\r\n  }\r\n\r\n  _onPresetBrushDeactivate() {\r\n    $(this.form).find('.preset-brush').removeClass('active').removeClass('fa-bounce');\r\n    this._activeBrush = false;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * Application.setPosition(...) has been modified to use css transform for window translation across the screen\r\n   * instead of top/left css properties which force full-window style recomputation\r\n   */\r\n  setPosition({ left, top, width, height, scale } = {}) {\r\n    if (!this.popOut && !this.options.resizable) return; // Only configure position for popout or resizable apps.\r\n    const el = this.element[0];\r\n    const currentPosition = this.position;\r\n    const pop = this.popOut;\r\n    const styles = window.getComputedStyle(el);\r\n    if (scale === null) scale = 1;\r\n    scale = scale ?? currentPosition.scale ?? 1;\r\n\r\n    // If Height is \"auto\" unset current preference\r\n    if (height === 'auto' || this.options.height === 'auto') {\r\n      el.style.height = '';\r\n      height = null;\r\n    }\r\n\r\n    // Update width if an explicit value is passed, or if no width value is set on the element\r\n    if (!el.style.width || width) {\r\n      const tarW = width || el.offsetWidth;\r\n      const minW = parseInt(styles.minWidth) || (pop ? MIN_WINDOW_WIDTH : 0);\r\n      const maxW = el.style.maxWidth || window.innerWidth / scale;\r\n      currentPosition.width = width = Math.clamped(tarW, minW, maxW);\r\n      el.style.width = `${width}px`;\r\n      if (width * scale + currentPosition.left > window.innerWidth) left = currentPosition.left;\r\n    }\r\n    width = el.offsetWidth;\r\n\r\n    // Update height if an explicit value is passed, or if no height value is set on the element\r\n    if (!el.style.height || height) {\r\n      const tarH = height || el.offsetHeight + 1;\r\n      const minH = parseInt(styles.minHeight) || (pop ? MIN_WINDOW_HEIGHT : 0);\r\n      const maxH = el.style.maxHeight || window.innerHeight / scale;\r\n      currentPosition.height = height = Math.clamped(tarH, minH, maxH);\r\n      el.style.height = `${height}px`;\r\n      if (height * scale + currentPosition.top > window.innerHeight + 1) top = currentPosition.top - 1;\r\n    }\r\n    height = el.offsetHeight;\r\n\r\n    let leftT, topT;\r\n    // Update Left\r\n    if ((pop && !this.posSet) || Number.isFinite(left)) {\r\n      const scaledWidth = width * scale;\r\n      const tarL = Number.isFinite(left) ? left : (window.innerWidth - scaledWidth) / 2;\r\n      const maxL = Math.max(window.innerWidth - scaledWidth, 0);\r\n      currentPosition.left = left = Math.clamped(tarL, 0, maxL);\r\n      leftT = left;\r\n    }\r\n\r\n    // Update Top\r\n    if ((pop && !this.posSet) || Number.isFinite(top)) {\r\n      const scaledHeight = height * scale;\r\n      const tarT = Number.isFinite(top) ? top : (window.innerHeight - scaledHeight) / 2;\r\n      const maxT = Math.max(window.innerHeight - scaledHeight, 0);\r\n      currentPosition.top = Math.clamped(tarT, 0, maxT);\r\n\r\n      topT = currentPosition.top;\r\n    }\r\n\r\n    let transform = '';\r\n\r\n    // Update Scale\r\n    if (scale) {\r\n      currentPosition.scale = Math.max(scale, 0);\r\n\r\n      if (scale === 1) transform += ``;\r\n      else transform += `scale(${scale})`;\r\n    }\r\n\r\n    if (leftT || topT) {\r\n      this.posSet = true;\r\n      transform += 'translate(' + leftT + 'px,' + topT + 'px)';\r\n    }\r\n\r\n    if (transform) {\r\n      el.style.transform = transform;\r\n    }\r\n\r\n    // Track position post window close\r\n    if (!this.options.preventPositionOverride) {\r\n      const { left, top, width, height } = this.position;\r\n      MassEditPresets.previousPosition = { left, top, width, height };\r\n    }\r\n\r\n    // Return the updated position object\r\n    return currentPosition;\r\n  }\r\n\r\n  async close(options = {}) {\r\n    if (!Boolean(this.configApp)) Brush.deactivate();\r\n    MassEditPresets.objectHover = false;\r\n    return super.close(options);\r\n  }\r\n\r\n  async _onPresetUpdate(event) {\r\n    const preset = await PresetCollection.get($(event.target).closest('.item').data('uuid'));\r\n    if (!preset) return;\r\n\r\n    const selectedFields =\r\n      this.configApp instanceof ActiveEffectConfig ? this._getActiveEffectFields() : this.configApp.getSelectedFields();\r\n    if (!selectedFields || foundry.utils.isEmpty(selectedFields)) {\r\n      ui.notifications.warn(localize('presets.warn-no-fields'));\r\n      return;\r\n    }\r\n\r\n    const randomize = foundry.utils.deepClone(this.configApp.randomizeFields || {});\r\n    const addSubtract = foundry.utils.deepClone(this.configApp.addSubtractFields || {});\r\n\r\n    // Detection modes may have been selected out of order\r\n    // Fix that here\r\n    if (this.docName === 'Token') {\r\n      TokenDataAdapter.correctDetectionModeOrder(selectedFields, randomize);\r\n    }\r\n\r\n    preset.update({ data: selectedFields, randomize, addSubtract });\r\n\r\n    ui.notifications.info(`Preset \"${preset.name}\" updated`);\r\n\r\n    this.render(true);\r\n  }\r\n\r\n  async _onPresetCreate(event) {\r\n    const selectedFields =\r\n      this.configApp instanceof ActiveEffectConfig ? this._getActiveEffectFields() : this.configApp.getSelectedFields();\r\n    if (!selectedFields || foundry.utils.isEmpty(selectedFields)) {\r\n      ui.notifications.warn(localize('presets.warn-no-fields'));\r\n      return;\r\n    }\r\n\r\n    const preset = new Preset({\r\n      name: localize('presets.default-name'),\r\n      documentName: this.docName,\r\n      data: selectedFields,\r\n      addSubtract: this.configApp.addSubtractFields,\r\n      randomize: this.configApp.randomizeFields,\r\n    });\r\n\r\n    await PresetCollection.set(preset);\r\n    this.render(true);\r\n\r\n    this._editPresets([preset], { isCreate: true }, event);\r\n  }\r\n\r\n  /**\r\n   * Create a preset from placeables dragged and dropped on the form\r\n   * @param {Array[Placeable]} placeables\r\n   * @param {Event} event\r\n   */\r\n  async dropPlaceable(placeables, event) {\r\n    const presets = await PresetAPI.createPreset(placeables);\r\n\r\n    // Switch to just created preset's category before rendering if not set to 'ALL'\r\n    const documentName = placeables[0].document.documentName;\r\n    if (this.docName !== 'ALL' && this.docName !== documentName) this.docName = documentName;\r\n\r\n    const options = { isCreate: true };\r\n    options.left = this.position.left + this.position.width + 20;\r\n    options.top = this.position.top;\r\n\r\n    this._editPresets(presets, options, event);\r\n    this.render(true);\r\n  }\r\n\r\n  async actorToPreset(actor) {\r\n    const presets = await PresetAPI.createPreset(placeables);\r\n  }\r\n\r\n  _getActiveEffectFields() {\r\n    return { changes: foundry.utils.deepClone(this.configApp.object.changes ?? []) };\r\n  }\r\n\r\n  _getHeaderButtons() {\r\n    const buttons = super._getHeaderButtons();\r\n\r\n    buttons.unshift({\r\n      label: '',\r\n      class: 'mass-edit-change-compendium',\r\n      icon: 'fa-solid fa-gear',\r\n      onclick: (ev) => this._onWorkingPackChange(),\r\n    });\r\n    buttons.unshift({\r\n      label: '',\r\n      class: 'mass-edit-export',\r\n      icon: 'fas fa-file-export',\r\n      onclick: (ev) => this._onExport(ev),\r\n    });\r\n    buttons.unshift({\r\n      label: '',\r\n      class: 'mass-edit-import',\r\n      icon: 'fas fa-file-import',\r\n      onclick: (ev) => this._onImport(ev),\r\n    });\r\n\r\n    if (CONFIG.debug.MassEdit) {\r\n      buttons.unshift({\r\n        label: 'Debug',\r\n        class: 'mass-edit-debug',\r\n        icon: 'fas fa-bug',\r\n        onclick: (ev) => {\r\n          console.log({\r\n            index: game.packs.get(PresetCollection.workingPack).get(META_INDEX_ID)?.flags[MODULE_ID]?.index,\r\n            tree: this.tree,\r\n          });\r\n        },\r\n      });\r\n    }\r\n\r\n    return buttons;\r\n  }\r\n\r\n  async _onWorkingPackChange() {\r\n    let pack = await new Promise((resolve) => getCompendiumDialog(resolve, {}));\r\n    if (pack && pack !== PresetCollection.workingPack) {\r\n      await game.settings.set(MODULE_ID, 'workingPack', pack);\r\n      this.render(true);\r\n    }\r\n  }\r\n\r\n  async _onExport() {\r\n    const tree = await PresetCollection.getTree(null, true);\r\n    exportPresets(tree.allPresets);\r\n  }\r\n\r\n  async _onImport() {\r\n    const json = await importPresetFromJSONDialog();\r\n    if (!json) return;\r\n\r\n    let importCount = 0;\r\n\r\n    if (foundry.utils.getType(json) === 'Array') {\r\n      for (const p of json) {\r\n        if (!('documentName' in p)) continue;\r\n        if (!('data' in p) || foundry.utils.isEmpty(p.data)) continue;\r\n\r\n        const preset = new Preset(p);\r\n        preset._pages = p.pages;\r\n\r\n        await PresetCollection.set(preset);\r\n        importCount++;\r\n      }\r\n    }\r\n\r\n    ui.notifications.info(`Mass Edit: ${localFormat('presets.imported', { count: importCount })}`);\r\n\r\n    if (importCount) this.render(true);\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event\r\n   * @param {Object} formData\r\n   */\r\n  async _updateObject(event, formData) {\r\n    if (this.callback) {\r\n      this.callback(await PresetCollection.get(event.submitter.data.id));\r\n    }\r\n  }\r\n}\r\n\r\nasync function exportPresets(presets, fileName) {\r\n  if (!presets.length) return;\r\n\r\n  for (const preset of presets) {\r\n    await preset.load();\r\n  }\r\n\r\n  presets = presets.map((p) => {\r\n    const preset = p.clone();\r\n    preset.folder = null;\r\n    preset.uuid = null;\r\n    return preset;\r\n  });\r\n\r\n  saveDataToFile(JSON.stringify(presets, null, 2), 'text/json', (fileName ?? 'mass-edit-presets') + '.json');\r\n}\r\n\r\nexport class PresetConfig extends FormApplication {\r\n  static name = 'PresetConfig';\r\n\r\n  /**\r\n   * @param {Array[Preset]} presets\r\n   */\r\n  constructor(presets, options = {}) {\r\n    super({}, options);\r\n    this.presets = presets;\r\n    this.callback = options.callback;\r\n    this.isCreate = options.isCreate;\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      classes: ['sheet'],\r\n      template: `modules/${MODULE_ID}/templates/preset/presetEdit.html`,\r\n      width: 360,\r\n    });\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  get id() {\r\n    return 'mass-edit-preset-edit';\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  get title() {\r\n    if (this.presets.length > 1) return `Presets [${this.presets.length}]`;\r\n    else return `Preset: ${this.presets[0].name.substring(0, 20)}${this.presets[0].name.length > 20 ? '...' : ''}`;\r\n  }\r\n\r\n  _getHeaderButtons() {\r\n    const buttons = super._getHeaderButtons();\r\n\r\n    buttons.unshift({\r\n      label: '',\r\n      class: 'mass-edit-export',\r\n      icon: 'fas fa-file-export',\r\n      onclick: (ev) => this._onExport(ev),\r\n    });\r\n    return buttons;\r\n  }\r\n\r\n  _onExport() {\r\n    let fileName;\r\n    if (this.presets.length === 1) {\r\n      fileName = 'mass-edit-preset-' + this.presets[0].name.replace(' ', '_').replace(/\\W/g, '');\r\n    }\r\n    exportPresets(this.presets, fileName);\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @inheritdoc */\r\n  async close(options = {}) {\r\n    if (!this.options.submitOnClose) this.options.resolve?.(null);\r\n    return super.close(options);\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  async getData(options = {}) {\r\n    const data = {};\r\n    data.advancedOpen = this.advancedOpen;\r\n\r\n    data.preset = {};\r\n    if (this.presets.length === 1) {\r\n      data.preset = this.presets[0];\r\n      data.displayFieldDelete = true;\r\n      data.displayFieldModify = true;\r\n\r\n      data.attached = this.attached || data.preset.attached;\r\n      if (data.attached) {\r\n        data.attached = data.attached.map((at) => {\r\n          let tooltip = at.documentName;\r\n          if (at.documentName === 'Token' && at.data.name) tooltip += ': ' + at.data.name;\r\n          return {\r\n            icon: DOC_ICONS[at.documentName] ?? DOC_ICONS.DEFAULT,\r\n            tooltip,\r\n          };\r\n        });\r\n      }\r\n    } else {\r\n      data.multiEdit = true;\r\n    }\r\n\r\n    data.minlength = this.presets.length > 1 ? 0 : 1;\r\n    data.tva = game.modules.get('token-variants')?.active;\r\n\r\n    if (this.data && !(this.data instanceof Array)) {\r\n      data.modifyDisabled = true;\r\n      data.deleteDisabled = true;\r\n    }\r\n\r\n    // Check if all presets are for the same document type and thus can be edited using a Mass Edit form\r\n    const docName = this.presets[0].documentName;\r\n    if (docName !== 'Actor' && this.presets.every((p) => p.documentName === docName)) {\r\n      data.documentEdit = docName;\r\n      data.isPlaceable = SUPPORTED_PLACEABLES.includes(docName);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n\r\n    // Auto-select so that the pre-defined names can be conveniently erased\r\n    html.find('[name=\"name\"]').select();\r\n\r\n    html.find('.edit-document').on('click', this._onEditDocument.bind(this));\r\n    html.find('.assign-document').on('click', this._onAssignDocument.bind(this));\r\n    html.find('.delete-fields').on('click', this._onDeleteFields.bind(this));\r\n    html.find('.spawn-fields').on('click', this._onSpawnFields.bind(this));\r\n    html.find('summary').on('click', () => setTimeout(() => this.setPosition({ height: 'auto' }), 30));\r\n    html.find('.attached').on('click', this.onAttachedRemove.bind(this));\r\n    html.find('.attach-selected').on('click', () => {\r\n      const controlled = canvas.activeLayer.controlled;\r\n      if (controlled.length && SUPPORTED_PLACEABLES.includes(controlled[0].document.documentName)) {\r\n        this.dropPlaceable(controlled);\r\n      }\r\n    });\r\n\r\n    // TVA Support\r\n    const tvaButton = html.find('.token-variants-image-select-button');\r\n    tvaButton.on('click', (event) => {\r\n      game.modules.get('token-variants').api.showArtSelect('Preset', {\r\n        callback: (imgSrc, name) => {\r\n          tvaButton.siblings(`[name=\"${tvaButton.data('target')}\"]`).val(imgSrc);\r\n        },\r\n        searchType: 'Item',\r\n      });\r\n    });\r\n\r\n    // Advanced Options tracking between renders\r\n    html.find('details').on('toggle', (event) => {\r\n      this.advancedOpen = Boolean($(event.target).attr('open'));\r\n    });\r\n\r\n    //Hover\r\n    const hoverOverlay = html.closest('.window-content').find('.drag-drop-overlay');\r\n    html\r\n      .closest('.window-content')\r\n      .on('mouseover', (event) => {\r\n        if (this.presets.length !== 1) return;\r\n        if (canvas.activeLayer?.preview?.children.some((c) => c._original?.mouseInteractionManager?.isDragging)) {\r\n          hoverOverlay.show();\r\n          PresetConfig.objectHover = true;\r\n        } else {\r\n          hoverOverlay.hide();\r\n          PresetConfig.objectHover = false;\r\n        }\r\n      })\r\n      .on('mouseout', () => {\r\n        if (this.presets.length !== 1) return;\r\n        hoverOverlay.hide();\r\n        PresetConfig.objectHover = false;\r\n      });\r\n\r\n    //Tags\r\n    TagInput.activateListeners(html, () => this.setPosition({ height: 'auto' }));\r\n  }\r\n\r\n  /**\r\n   * Create a preset from placeables dragged and dropped ont he form\r\n   * @param {Array[Placeable]} placeables\r\n   * @param {Event} event\r\n   */\r\n  async dropPlaceable(placeables, event) {\r\n    this.advancedOpen = true;\r\n\r\n    if (!this.attached) this.attached = deepClone(this.presets[0].attached ?? []);\r\n    placeables.forEach((p) => this.attached.push({ documentName: p.document.documentName, data: placeableToData(p) }));\r\n\r\n    await this.render(true);\r\n    setTimeout(() => this.setPosition({ height: 'auto' }), 30);\r\n  }\r\n\r\n  async onAttachedRemove(event) {\r\n    const index = $(event.target).closest('.attached').data('index');\r\n    this.attached = this.attached || deepClone(this.presets[0].attached);\r\n    this.attached.splice(index, 1);\r\n    await this.render(true);\r\n    setTimeout(() => this.setPosition({ height: 'auto' }), 30);\r\n  }\r\n\r\n  async _onSpawnFields() {\r\n    new PresetFieldModify(\r\n      this.data ?? this.presets[0].data,\r\n      (modifyOnSpawn) => {\r\n        this.modifyOnSpawn = modifyOnSpawn;\r\n      },\r\n      this.modifyOnSpawn ?? this.presets[0].modifyOnSpawn\r\n    ).render(true);\r\n  }\r\n\r\n  async _onDeleteFields() {\r\n    new PresetFieldDelete(this.data ?? this.presets[0].data, (data) => {\r\n      this.data = data;\r\n    }).render(true);\r\n  }\r\n\r\n  async _onAssignDocument() {\r\n    const layer = canvas.getLayerByEmbeddedName(this.presets[0].documentName);\r\n    if (!layer) return;\r\n\r\n    const data = layer.controlled.map((p) => placeableToData(p));\r\n    if (data.length) {\r\n      this.data = data;\r\n      ui.notifications.info(\r\n        localFormat('presets.assign', {\r\n          count: data.length,\r\n          document: this.presets[0].documentName,\r\n        })\r\n      );\r\n      this.gridSize = canvas.grid.size;\r\n      this.modifyOnSpawn = [];\r\n      this.render(true);\r\n    }\r\n  }\r\n\r\n  async _onEditDocument() {\r\n    const documents = [];\r\n    const cls = CONFIG[this.presets[0].documentName].documentClass;\r\n\r\n    for (const p of this.presets) {\r\n      p.data.forEach((d) => documents.push(new cls(mergePresetDataToDefaultDoc(p, d))));\r\n    }\r\n\r\n    const app = await showMassEdit(documents, null, {\r\n      presetEdit: true,\r\n      callback: (obj) => {\r\n        this.addSubtract = {};\r\n        this.randomize = {};\r\n        for (const k of Object.keys(obj.data)) {\r\n          if (k in obj.randomize) this.randomize[k] = obj.randomize[k];\r\n          if (k in obj.addSubtract) this.addSubtract[k] = obj.addSubtract[k];\r\n        }\r\n        this.data = obj.data;\r\n        this.render(true);\r\n      },\r\n      forceForm: true,\r\n    });\r\n\r\n    // For randomize and addSubtract only take into account the first preset\r\n    // and apply them to the form\r\n    const preset = new Preset({\r\n      data: {},\r\n      randomize: this.presets[0].randomize,\r\n      addSubtract: this.presets[0].addSubtract,\r\n    });\r\n    setTimeout(() => {\r\n      app._applyPreset(preset);\r\n    }, 400);\r\n  }\r\n\r\n  async _updatePresets(formData) {\r\n    formData.name = formData.name.trim();\r\n    formData.img = formData.img.trim() || null;\r\n    formData.preSpawnScript = formData.preSpawnScript?.trim();\r\n    formData.postSpawnScript = formData.postSpawnScript?.trim();\r\n    formData.tags = formData.tags ? formData.tags.split(',') : [];\r\n    formData.addTags = formData.addTags ? formData.addTags.split(',') : [];\r\n    formData.removeTags = formData.removeTags ? formData.removeTags.split(',') : [];\r\n\r\n    for (const preset of this.presets) {\r\n      let update;\r\n      if (this.isCreate) {\r\n        update = {\r\n          name: formData.name || preset.name || localize('presets.default-name'),\r\n          img: formData.img ?? preset.img,\r\n        };\r\n      } else {\r\n        update = {\r\n          name: formData.name || preset.name,\r\n          img: formData.img || preset.img,\r\n        };\r\n      }\r\n\r\n      if (this.data) update.data = this.data;\r\n      if (this.addSubtract) update.addSubtract = this.addSubtract;\r\n      if (this.randomize) update.randomize = this.randomize;\r\n      if (this.modifyOnSpawn) update.modifyOnSpawn = this.modifyOnSpawn;\r\n      if (this.gridSize) update.gridSize = this.gridSize;\r\n      if (this.attached) update.attached = this.attached;\r\n      if (formData.preSpawnScript != null) update.preSpawnScript = formData.preSpawnScript;\r\n      if (formData.postSpawnScript != null) update.postSpawnScript = formData.postSpawnScript;\r\n      if (formData.spawnRandom != null) update.spawnRandom = formData.spawnRandom;\r\n\r\n      // If this is a single preset config, we override all tags\r\n      // If not we merge\r\n      if (this.presets.length === 1) {\r\n        update.tags = formData.tags;\r\n      } else if (formData.addTags.length || formData.removeTags.length) {\r\n        let tags = preset.tags ?? [];\r\n        if (formData.addTags.length) tags = Array.from(new Set(tags.concat(formData.addTags)));\r\n        if (formData.removeTags.length) tags = tags.filter((t) => !formData.removeTags.includes(t));\r\n        update.tags = tags;\r\n      }\r\n\r\n      await preset.update(update);\r\n    }\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  async _updateObject(event, formData) {\r\n    await this._updatePresets(formData);\r\n\r\n    if (this.callback) this.callback(this.presets);\r\n    return this.presets;\r\n  }\r\n\r\n  /** @inheritDoc */\r\n  async _renderOuter() {\r\n    const html = await super._renderOuter();\r\n    this._createDocumentIdLink(html);\r\n    return html;\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /**\r\n   * Create an ID link button in the header which displays the JournalEntry ID and copies it to clipboard\r\n   * @param {jQuery} html\r\n   * @protected\r\n   */\r\n  _createDocumentIdLink(html) {\r\n    const title = html.find('.window-title');\r\n    const label = localize('DOCUMENT.JournalEntry', false);\r\n    const idLink = document.createElement('a');\r\n    idLink.classList.add('document-id-link');\r\n    idLink.setAttribute('alt', 'Copy document id');\r\n    idLink.dataset.tooltip = `${label}: ${this.presets.map((p) => p.id).join(', ')}`;\r\n    idLink.dataset.tooltipDirection = 'UP';\r\n    idLink.innerHTML = '<i class=\"fa-solid fa-passport\"></i>';\r\n    idLink.addEventListener('click', (event) => {\r\n      event.preventDefault();\r\n      game.clipboard.copyPlainText(this.presets.map((p) => p.id).join(', '));\r\n      ui.notifications.info(\r\n        game.i18n.format('DOCUMENT.IdCopiedClipboard', {\r\n          label,\r\n          type: 'id',\r\n          id: this.presets.map((p) => p.id).join(', '),\r\n        })\r\n      );\r\n    });\r\n    idLink.addEventListener('contextmenu', (event) => {\r\n      event.preventDefault();\r\n      game.clipboard.copyPlainText(this.presets.map((p) => p.uuid).join(', '));\r\n      ui.notifications.info(\r\n        game.i18n.format('DOCUMENT.IdCopiedClipboard', {\r\n          label,\r\n          type: 'uuid',\r\n          id: this.presets.map((p) => p.uuid).join(', '),\r\n        })\r\n      );\r\n    });\r\n    title.append(idLink);\r\n  }\r\n}\r\n\r\nclass PresetFieldSelect extends FormApplication {\r\n  static name = 'PresetFieldSelect';\r\n\r\n  constructor(data, callback) {\r\n    super();\r\n    this.presetData = data;\r\n    this.isObject = !(data instanceof Array);\r\n    this.callback = callback;\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      classes: ['sheet', 'preset-field-select'],\r\n      template: `modules/${MODULE_ID}/templates/preset/presetFieldSelect.html`,\r\n      width: 600,\r\n      resizable: false,\r\n    });\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n    html.find('.item').on('click', this._onFieldClick);\r\n  }\r\n\r\n  _onFieldClick(e) {\r\n    itemSelect(e, $(e.target).closest('.preset-field-list'));\r\n  }\r\n\r\n  /** @override */\r\n  async getData(options = {}) {\r\n    let data = foundry.utils.flattenObject(this.presetData);\r\n\r\n    const singleData = !this.isObject && this.presetData.length === 1;\r\n\r\n    let index;\r\n    let fields = [];\r\n    for (const [k, v] of Object.entries(data)) {\r\n      if (!singleData) {\r\n        const i = k.split('.')[0];\r\n        if (!index) {\r\n          fields.push({ header: true, index: 0 });\r\n        } else if (i !== index) {\r\n          fields.push({ header: true, index: i });\r\n        }\r\n        index = i;\r\n      }\r\n\r\n      let label = k;\r\n      if (singleData) label = label.substring(label.indexOf('.') + 1);\r\n\r\n      let value;\r\n      const t = foundry.utils.getType(v);\r\n      if (t === 'Object' || t === 'Array' || t === 'null') value = JSON.stringify(v);\r\n      else value = v;\r\n\r\n      fields.push({ name: k, label, value, selected: false });\r\n    }\r\n\r\n    return { fields };\r\n  }\r\n}\r\n\r\nclass PresetFieldDelete extends PresetFieldSelect {\r\n  static name = 'PresetFieldDelete';\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  get title() {\r\n    return localize('presets.select-delete');\r\n  }\r\n\r\n  /** @override */\r\n  async getData(options = {}) {\r\n    const data = await super.getData(options);\r\n    data.button = { icon: '<i class=\"fas fa-trash\"></i>', text: localize('common.delete') };\r\n    return data;\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  async _updateObject(event, formData) {\r\n    let data = foundry.utils.flattenObject(this.presetData);\r\n\r\n    const form = $(event.target).closest('form');\r\n    form.find('.item.selected').each(function () {\r\n      const name = $(this).attr('name');\r\n      delete data[name];\r\n    });\r\n    data = expandObject(data);\r\n\r\n    if (!this.isObject) {\r\n      let reorganizedData = [];\r\n      for (let i = 0; i < this.presetData.length; i++) {\r\n        if (!data[i]) continue;\r\n        reorganizedData.push(data[i]);\r\n      }\r\n      data = reorganizedData;\r\n    }\r\n\r\n    this.callback(data);\r\n  }\r\n}\r\n\r\nclass PresetFieldModify extends PresetFieldSelect {\r\n  static name = 'PresetFieldModify';\r\n\r\n  constructor(data, callback, modifyOnSpawn) {\r\n    super(data, callback);\r\n    this.modifyOnSpawn = modifyOnSpawn ?? [];\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  get title() {\r\n    return localize('presets.select-modify');\r\n  }\r\n\r\n  /** @override */\r\n  async getData(options = {}) {\r\n    const data = await super.getData(options);\r\n    data.button = { icon: '<i class=\"fas fa-check\"></i>', text: localize('CONTROLS.CommonSelect', false) };\r\n    for (const field of data.fields) {\r\n      if (this.modifyOnSpawn.includes(field.name)) field.selected = true;\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  async _updateObject(event, formData) {\r\n    const form = $(event.target).closest('form');\r\n    const modifyOnSpawn = [];\r\n    form.find('.item.selected').each(function () {\r\n      let name = $(this).attr('name');\r\n      modifyOnSpawn.push(name);\r\n    });\r\n\r\n    this.callback(modifyOnSpawn);\r\n  }\r\n}\r\n\r\nclass PresetFolderConfig extends FolderConfig {\r\n  static name = 'PresetFolderConfig';\r\n\r\n  /** @inheritdoc */\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      classes: ['sheet', 'folder-edit'],\r\n      template: `modules/${MODULE_ID}/templates/preset/presetFolderEdit.html`,\r\n      width: 360,\r\n    });\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  get id() {\r\n    return this.object.id ? super.id : 'folder-create';\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  get title() {\r\n    if (this.object.id) return `${localize('FOLDER.Update', false)}: ${this.object.name}`;\r\n    return localize('FOLDER.Create', false);\r\n  }\r\n\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n    html.find('.document-select').on('click', this._onDocumentChange.bind(this));\r\n  }\r\n\r\n  _onDocumentChange(event) {\r\n    $(event.target).closest('.document-select').toggleClass('active');\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @inheritdoc */\r\n  async close(options = {}) {\r\n    if (!this.options.submitOnClose) this.options.resolve?.(null);\r\n    return super.close(options);\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  async getData(options = {}) {\r\n    const folder = this.document.toObject();\r\n    const label = localize(Folder.implementation.metadata.label, false);\r\n\r\n    let folderDocs = folder.flags[MODULE_ID]?.types ?? ['ALL'];\r\n\r\n    let docs;\r\n\r\n    // This is a non-placeable folder type, so we will not display controls to change types\r\n    if (\r\n      this.options?.folder instanceof PresetPackFolder ||\r\n      (folderDocs.length === 1 && !UI_DOCS.includes(folderDocs[0]))\r\n    ) {\r\n      this.displayTypes = false;\r\n    } else {\r\n      this.displayTypes = true;\r\n      docs = [];\r\n      UI_DOCS.forEach((type) => {\r\n        docs.push({ name: type, icon: DOC_ICONS[type], active: folderDocs.includes(type) });\r\n      });\r\n    }\r\n\r\n    return {\r\n      folder: folder,\r\n      name: folder._id ? folder.name : '',\r\n      newName: localFormat('DOCUMENT.New', { type: label }, false),\r\n      safeColor: folder.color ?? '#000000',\r\n      sortingModes: { a: 'FOLDER.SortAlphabetical', m: 'FOLDER.SortManual' },\r\n      submitText: localize(folder._id ? 'FOLDER.Update' : 'FOLDER.Create', false),\r\n      docs,\r\n      virtualPackFolder: this.options.folder instanceof PresetPackFolder,\r\n      group: this.options.folder?.group,\r\n    };\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  async _updateObject(event, formData) {\r\n    if (this.displayTypes) {\r\n      let visibleTypes = [];\r\n      $(this.form)\r\n        .find('.document-select.active')\r\n        .each(function () {\r\n          visibleTypes.push($(this).data('name'));\r\n        });\r\n      if (!visibleTypes.length) visibleTypes.push('ALL');\r\n\r\n      formData[`flags.${MODULE_ID}.types`] = visibleTypes;\r\n    }\r\n\r\n    let document = this.object;\r\n    if (this.options.folder instanceof PresetPackFolder) {\r\n      // This is a virtual folder used to store Compendium contents within\r\n      // Update using the provided interface\r\n      let update = {};\r\n      ['name', 'color', 'group'].forEach((k) => {\r\n        if (!formData[k]?.trim()) update['-=' + k] = null;\r\n        else update[k] = formData[k].trim();\r\n      });\r\n\r\n      await this.options.folder.update(update);\r\n    } else {\r\n      // This is a real folder, update/create it\r\n      if (!formData.name?.trim()) formData.name = Folder.implementation.defaultName();\r\n      if (this.object.id) await this.object.update(formData);\r\n      else {\r\n        this.object.updateSource(formData);\r\n        document = await Folder.create(this.object, { pack: this.object.pack });\r\n      }\r\n    }\r\n\r\n    this.options.resolve?.(document);\r\n    return document;\r\n  }\r\n}\r\n\r\nfunction checkMouseInWindow(event) {\r\n  let app = $(event.target).closest('.window-app');\r\n  var offset = app.offset();\r\n  let appX = offset.left;\r\n  let appY = offset.top;\r\n  let appW = app.width();\r\n  let appH = app.height();\r\n\r\n  var mouseX = event.pageX;\r\n  var mouseY = event.pageY;\r\n\r\n  if (mouseX > appX && mouseX < appX + appW && mouseY > appY && mouseY < appY + appH) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction getCompendiumDialog(resolve, { excludePack, exportTo = false, keepIdSelect = false } = {}) {\r\n  let config;\r\n  if (exportTo) {\r\n    config = {\r\n      title: localize('presets.select-compendium'),\r\n      message: localize('presets.export-directory-message'),\r\n      buttonLabel: localize('FOLDER.Export', false),\r\n    };\r\n  } else {\r\n    config = {\r\n      title: localize('presets.select-compendium'),\r\n      message: localize('presets.working-directory-message'),\r\n      buttonLabel: localize('common.swap'),\r\n    };\r\n  }\r\n\r\n  let options = '';\r\n  for (const p of game.packs) {\r\n    if (!p.locked && p.documentName === 'JournalEntry') {\r\n      if (p.collection === excludePack) continue;\r\n      const workingPack = p.collection === PresetCollection.workingPack;\r\n      options += `<option value=\"${p.collection}\" ${workingPack ? 'selected=\"selected\"' : ''}>${p.title}</option>`;\r\n    }\r\n  }\r\n\r\n  let content = `\r\n  <p style=\"color: orangered;\">${config.message}</p>\r\n  <div class=\"form-group\">\r\n    <label>${localize('PACKAGE.TagCompendium', false)}</label>\r\n    <div class=\"form-fields\">\r\n      <select style=\"width: 100%; margin-bottom: 10px;\">${options}</select>\r\n    </div>\r\n  </div>`;\r\n\r\n  if (keepIdSelect) {\r\n    content += `\r\n<div class=\"form-group\">\r\n    <label>${localize('presets.keep-ids')}</label>\r\n    <input type=\"checkbox\" name=\"keepId\" checked>\r\n    <p style=\"font-size: smaller;\">${localize('presets.keep-ids-hint')}</p>\r\n</div>`;\r\n  }\r\n\r\n  new Dialog({\r\n    title: config.title,\r\n    content: content,\r\n    buttons: {\r\n      export: {\r\n        label: config.buttonLabel,\r\n        callback: (html) => {\r\n          const pack = $(html).find('select').val();\r\n          if (keepIdSelect) resolve({ pack, keepId: $(html).find('[name=\"keepId\"]').is(':checked') });\r\n          else resolve(pack);\r\n        },\r\n      },\r\n      cancel: {\r\n        label: localize('Cancel', false),\r\n        callback: () => resolve(keepIdSelect ? {} : null),\r\n      },\r\n    },\r\n    close: () => resolve(keepIdSelect ? {} : null),\r\n    default: 'cancel',\r\n  }).render(true);\r\n}\r\n\r\n/**\r\n * Controls select/multi-select flow for item lists\r\n * @param {*} e item click event\r\n * @param {*} itemList list of items that this item exists within\r\n */\r\nfunction itemSelect(e, itemList) {\r\n  const item = $(e.target).closest('.item');\r\n  const items = itemList.find('.item');\r\n  const lastSelected = items.filter('.last-selected');\r\n\r\n  if (!e.ctrlKey && !e.metaKey && !e.shiftKey) {\r\n    lastSelected.removeClass('last-selected');\r\n    items.removeClass('selected');\r\n    item.addClass('selected').addClass('last-selected');\r\n  } else if (e.ctrlKey || e.metaKey) {\r\n    item.toggleClass('selected');\r\n    if (item.hasClass('selected')) {\r\n      lastSelected.removeClass('last-selected');\r\n      item.addClass('last-selected');\r\n    } else item.removeClass('last-index');\r\n  } else if (e.shiftKey) {\r\n    if (lastSelected.length) {\r\n      let itemIndex = items.index(item);\r\n      let lastSelectedIndex = items.index(lastSelected);\r\n\r\n      if (itemIndex === lastSelectedIndex) {\r\n        item.toggleClass('selected');\r\n        if (item.hasClass('selected')) item.addClass('last-selected');\r\n        else lastSelected.removeClass('last-selected');\r\n      } else {\r\n        let itemArr = items.toArray();\r\n        if (itemIndex > lastSelectedIndex) {\r\n          for (let i = lastSelectedIndex; i <= itemIndex; i++) $(itemArr[i]).addClass('selected');\r\n        } else {\r\n          for (let i = lastSelectedIndex; i >= itemIndex; i--) $(itemArr[i]).addClass('selected');\r\n        }\r\n      }\r\n    } else {\r\n      lastSelected.removeClass('last-selected');\r\n      item.toggleClass('selected');\r\n      if (item.hasClass('selected')) item.addClass('last-selected');\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Return Mass Edit form that the mouse is over if any\r\n * @param {Number} mouseX\r\n * @param {Number} mouseY\r\n * @param {String} documentName\r\n * @returns {Application|null} MassEdit form\r\n */\r\nfunction hoverMassEditForm(mouseX, mouseY, documentName) {\r\n  const hitTest = function (app) {\r\n    const position = app.position;\r\n    const appX = position.left;\r\n    const appY = position.top;\r\n\r\n    if (mouseX > appX && mouseX < appX + position.width && mouseY > appY && mouseY < appY + position.height)\r\n      return true;\r\n    return false;\r\n  };\r\n\r\n  return Object.values(ui.windows).find((app) => app.meForm && app.documentName === documentName && hitTest(app));\r\n}\r\n","import { Brush } from '../scripts/brush.js';\r\nimport { injectFlagTab, injectVisibility } from '../scripts/fieldInjector.js';\r\nimport { MassEditPresets } from '../scripts/presets/forms.js';\r\nimport { Preset } from '../scripts/presets/preset.js';\r\nimport { IS_PRIVATE, showRandomizeDialog } from '../scripts/randomizer/randomizerForm.js';\r\nimport { applyRandomization, selectRandomizerFields } from '../scripts/randomizer/randomizerUtils.js';\r\nimport { applyDDTint, applyTMFXPreset, getDDTint } from '../scripts/tmfx.js';\r\nimport {\r\n  applyAddSubtract,\r\n  flagCompare,\r\n  getCommonData,\r\n  getData,\r\n  getDocumentName,\r\n  hasFlagRemove,\r\n  localFormat,\r\n  localize,\r\n  mergeObjectPreserveDot,\r\n  MODULE_ID,\r\n  panToFitPlaceables,\r\n  selectAddSubtractFields,\r\n  SUPPORTED_COLLECTIONS,\r\n  SUPPORTED_HISTORY_DOCS,\r\n  SUPPORTED_PLACEABLES,\r\n  wildcardStringMatch,\r\n} from '../scripts/utils.js';\r\nimport { getInUseStyle } from './cssEdit.js';\r\nimport { GeneralDataAdapter, TokenDataAdapter } from './dataAdapters.js';\r\nimport MassEditHistory from './history.js';\r\nimport MacroForm from './macro.js';\r\nimport { SCENE_DOC_MAPPINGS, showMassActorForm, showMassEdit } from './multiConfig.js';\r\n\r\n// ==================================\r\n// ========= Applications ===========\r\n// ==================================\r\n\r\nexport const WithMassEditForm = (cls) => {\r\n  class MassEditForm extends cls {\r\n    constructor(doc, docs, options) {\r\n      super(doc, options);\r\n      this.meObjects = docs;\r\n      this.documentName = options.documentName ?? doc.document?.documentName ?? doc.documentName ?? 'NONE';\r\n      this.commonData = options.commonData || {};\r\n      this.randomizerEnabled = IS_PRIVATE && options.massEdit;\r\n      this.massFormButtons = [\r\n        {\r\n          title: localize(`common.apply`),\r\n          value: 'permissions',\r\n          icon: 'far fa-save',\r\n        },\r\n      ];\r\n\r\n      this.randomizeFields = {};\r\n      this.addSubtractFields = {};\r\n      this.meForm = true;\r\n    }\r\n\r\n    async getData(options) {\r\n      // During Preset editing we will be editing AmbientLight document directly, which causes the preview to be set to null\r\n      // and Foundry complaining about being unable to read data from it. So we set the preview manually here\r\n      if (this.documentName === 'AmbientLight' && !this.preview) {\r\n        this.preview = this.meObjects[0].clone();\r\n      }\r\n      const data = super.getData(options);\r\n      return data;\r\n    }\r\n\r\n    // Add styles and controls to the sheet\r\n    async activateListeners(html) {\r\n      await super.activateListeners(html);\r\n      injectVisibility(this);\r\n\r\n      if (SUPPORTED_PLACEABLES.includes(this.documentName) || SUPPORTED_COLLECTIONS.includes(this.documentName))\r\n        this._injectGlobalDeleteButton(html);\r\n\r\n      // Set style\r\n      const [styleName, css] = getInUseStyle();\r\n      $(html).prepend(`<style>${css}</style>`);\r\n\r\n      // On any field being changed we want to automatically select the form-group to be included in the update\r\n      html.on('input', 'textarea, input[type=\"text\"], input[type=\"number\"]', onInputChange.bind(this));\r\n      html.on('change', 'textarea, input, select', onInputChange.bind(this));\r\n      html.on('paste', 'input', onInputChange.bind(this));\r\n      html.on('click', 'button', onInputChange.bind(this));\r\n\r\n      const rangeSpanToTextbox = game.settings.get(MODULE_ID, 'rangeToTextbox');\r\n\r\n      // Attach classes and controls to all relevant form-groups\r\n      const commonData = foundry.utils.flattenObject(this.commonData || {});\r\n      const insertRNGControl = this.randomizerEnabled;\r\n      const processFormGroup = function (formGroup, typeOverride = null) {\r\n        // We only want to attach extra controls if the form-group contains named fields\r\n        if (!$(formGroup).find('[name]').length) return;\r\n        // Return if a checkbox is already inserted\r\n        if ($(formGroup).find('.mass-edit-checkbox').length) return;\r\n        // if ($(formGroup).find('[name]:disabled').length) return;\r\n\r\n        // Check if fields within this form-group are part of common data or control a flag\r\n        let fieldType = 'meCommon';\r\n        if (commonData) {\r\n          $(formGroup)\r\n            .find('[name]')\r\n            .each(function () {\r\n              const name = $(this).attr('name');\r\n\r\n              if (rangeSpanToTextbox && $(this).attr('type') === 'range') {\r\n                const span = $(formGroup).find('span.range-value');\r\n                if (span.length) {\r\n                  span.replaceWith(\r\n                    $(\r\n                      `<input name=\"${name}\" class=\"range-value\" type=\"number\" step=\"any\" value=\"${this.defaultValue}\" min=\"${this.min}\" max=\"${this.max}\"></input>`\r\n                    )\r\n                  );\r\n                  $(this).removeAttr('name');\r\n                }\r\n              }\r\n\r\n              if (name.startsWith('flags.')) {\r\n                fieldType = 'meFlag';\r\n              } else if (!(name in commonData)) {\r\n                // We want to ignore certain fields from commonData checks e.g. light invert-radius\r\n\r\n                if (name === 'invert-radius') {\r\n                } else {\r\n                  fieldType = 'meDiff';\r\n                }\r\n              }\r\n            });\r\n        }\r\n\r\n        // Add randomizer controls\r\n        let randomControl = '';\r\n        if (insertRNGControl) {\r\n          randomControl = '<div class=\"mass-edit-randomize\"></div>';\r\n        }\r\n\r\n        fieldType = typeOverride ?? fieldType;\r\n\r\n        // Insert the checkbox\r\n        const checkbox = $(\r\n          `<div class=\"mass-edit-checkbox ${fieldType}\">${randomControl}<input class=\"mass-edit-control\" type=\"checkbox\" data-dtype=\"Boolean\"}></div>`\r\n        );\r\n        if ($(formGroup).find('p.hint, p.notes').length) {\r\n          $(formGroup).find('p.hint, p.notes').first().before(checkbox);\r\n        } else {\r\n          $(formGroup).append(checkbox);\r\n        }\r\n\r\n        // Assign field type to the form group. Will be used to set appropriate visual look\r\n        $(formGroup).addClass(fieldType);\r\n      };\r\n\r\n      // Add checkboxes to each form-group to control highlighting and which fields are to be saved\r\n      $(html)\r\n        .find('.form-group')\r\n        .each(function (_) {\r\n          processFormGroup(this);\r\n        });\r\n      const context = this;\r\n\r\n      // Register randomize listener if enabled\r\n      if (this.randomizerEnabled) {\r\n        $(html).on('contextmenu', '.mass-edit-checkbox', (event) => {\r\n          showRandomizeDialog($(event.target).closest('.form-group'), context);\r\n        });\r\n      }\r\n\r\n      // Register numerical input listeners to toggle between subtract, and add modes\r\n      $(html).on(\r\n        'contextmenu',\r\n        'input[type=range], input[type=number], input[name=\"flags.tagger.tags\"], input[type=\"text\"], input[name=\"tokenmagic.preset\"]',\r\n        (event) => {\r\n          const name = event.target.name;\r\n          if (!name) return;\r\n\r\n          const input = $(event.target);\r\n          if (name in this.addSubtractFields) {\r\n            if (this.addSubtractFields[name].method === 'add') {\r\n              this.addSubtractFields[name].method = 'subtract';\r\n              input.removeClass('me-add').addClass('me-subtract');\r\n              input.attr('title', '- Subtracting');\r\n              const ctrl = { method: 'subtract' };\r\n              if (event.target.min) {\r\n                ctrl.min = parseFloat(event.target.min);\r\n              }\r\n              ctrl.type = input.attr('type');\r\n              this.addSubtractFields[name] = ctrl;\r\n            } else {\r\n              delete this.addSubtractFields[name];\r\n              input.removeClass('me-subtract');\r\n              input.attr('title', '');\r\n            }\r\n          } else {\r\n            input.addClass('me-add');\r\n            input.attr('title', '+ Adding');\r\n            const ctrl = { method: 'add' };\r\n            if (event.target.max) {\r\n              ctrl.max = parseFloat(event.target.max);\r\n            }\r\n            ctrl.type = input.attr('type');\r\n            this.addSubtractFields[name] = ctrl;\r\n          }\r\n\r\n          // Select nearest mass edit checkbox\r\n          onInputChange(event);\r\n\r\n          // Make brush aware of add/subtract changes\r\n          Brush.refreshPreset();\r\n        }\r\n      );\r\n\r\n      // Remove all buttons in the footer\r\n      $(html).find('.sheet-footer > button').remove();\r\n\r\n      // Special handling for Walls sheet\r\n      $(html).find('button[type=\"submit\"]').remove();\r\n\r\n      // Add submit buttons\r\n      let htmlButtons = '';\r\n      if (!this._meSubmitInserted) {\r\n        this._meSubmitInserted = true;\r\n        for (const button of this.massFormButtons) {\r\n          htmlButtons += `<button class=\"me-submit\" type=\"submit\" value=\"${button.value}\"><i class=\"${button.icon}\"></i> ${button.title}</button>`;\r\n          // Auto update control\r\n          if (this.options.massEdit && !this.options.simplified && !this.options.presetEdit)\r\n            htmlButtons += `<div class=\"me-mod-update\" title=\"${localize(\r\n              `form.immediate-update-title`\r\n            )}\"><input type=\"checkbox\" data-submit=\"${button.value}\"><i class=\"fas fa-cogs\"></i></div>`;\r\n        }\r\n        if (this.options.massSelect && SUPPORTED_PLACEABLES.includes(this.documentName)) {\r\n          htmlButtons += `<div class=\"me-mod-update\" title=\"${localize(\r\n            `form.global-search-title`\r\n          )}\"><input type=\"checkbox\" data-submit=\"world\"><i class=\"far fa-globe\"></i></div>`;\r\n        }\r\n\r\n        let footer = $(html).find('.sheet-footer').last();\r\n        if (footer.length) {\r\n          footer.append(htmlButtons);\r\n        } else {\r\n          footer = $(`<footer class=\"sheet-footer flexrow\">${htmlButtons}</footer>`);\r\n          $(html).closest('form').append(footer);\r\n        }\r\n\r\n        // Auto update listeners\r\n        footer.find('.me-mod-update > input').on('change', (event) => {\r\n          event.stopPropagation();\r\n          const isChecked = event.target.checked;\r\n          footer.find('.me-mod-update > input').not(this).prop('checked', false);\r\n          $(event.target).prop('checked', isChecked);\r\n          this.modUpdate = isChecked;\r\n          this.modUpdateType = event.target.dataset?.submit;\r\n        });\r\n      }\r\n\r\n      if (this.options.inputChangeCallback) {\r\n        html.on('change', 'input, select', async (event) => {\r\n          setTimeout(() => this.options.inputChangeCallback(this.getSelectedFields()), 100);\r\n        });\r\n      }\r\n\r\n      // Select/Deselect all Mass Edit checkboxes when right-clicking the navigation tabs\r\n      html.on('contextmenu', 'nav > .item', (event) => {\r\n        const tab = event.target.dataset?.tab;\r\n        if (tab) {\r\n          const group = $(event.target).closest('nav').attr('data-group');\r\n          let meCheckboxes;\r\n          if (group) {\r\n            meCheckboxes = $(event.target)\r\n              .closest('form')\r\n              .find(\r\n                `.tab[data-tab=\"${tab}\"][data-group=\"${group}\"], .matt-tab[data-tab=\"${tab}\"][data-group=\"${group}\"]`\r\n              )\r\n              .find('.mass-edit-control');\r\n          }\r\n          if (!meCheckboxes || meCheckboxes.length === 0) {\r\n            meCheckboxes = $(event.target)\r\n              .closest('form')\r\n              .find(`.tab[data-tab=\"${tab}\"], .matt-tab[data-tab=\"${tab}\"]`)\r\n              .find('.mass-edit-control');\r\n          }\r\n\r\n          let selecting = true;\r\n\r\n          if (meCheckboxes.not(':checked').length === 0) {\r\n            selecting = false;\r\n          }\r\n          meCheckboxes.prop('checked', selecting);\r\n\r\n          // Select/Deselect tabs\r\n          meCheckboxes.each(function () {\r\n            if (selecting) selectTabs(this);\r\n            else deselectTabs(this);\r\n          });\r\n\r\n          // Trigger change on one of the checkboxes to initiate processes that respond to them\r\n          // being toggled\r\n          meCheckboxes.first().trigger('change');\r\n        }\r\n      });\r\n\r\n      // =====================\r\n      // Module specific logic\r\n      // =====================\r\n\r\n      // Monk's Active Tiles\r\n      if (this.documentName === 'Tile' && this._createAction) {\r\n        let chk = $(`\r\n          <div class=\"form-group\">\r\n            <label>Mass Edit: ${localize(`form.actions`)}</label>\r\n            <div class=\"form-fields\">\r\n                <input type=\"hidden\" name=\"flags.monks-active-tiles.actions\">\r\n            </div>\r\n          `);\r\n        $(html).find('.matt-tab[data-tab=\"trigger-actions\"]').prepend(chk);\r\n        processFormGroup(chk, 'meInsert');\r\n\r\n        chk = $(`\r\n          <div class=\"form-group\">\r\n            <label>Mass Edit: ${localize(`form.images`)}</label>\r\n            <div class=\"form-fields\">\r\n                <input type=\"hidden\" name=\"flags.monks-active-tiles.files\">\r\n            </div>\r\n          `);\r\n        chk.insertBefore('.matt-tab[data-tab=\"trigger-images\"] .files-list');\r\n        processFormGroup(chk, 'meInsert');\r\n      }\r\n\r\n      // 3D Canvas\r\n      if ((this.documentName === 'Tile' || this.documentName === 'Token') && game.Levels3DPreview) {\r\n        let chk = $(`\r\n          <div class=\"form-group\">\r\n            <label>Mass Edit: ${localize(`form.shaders`)}</label>\r\n            <div class=\"form-fields\">\r\n                <input type=\"hidden\" name=\"flags.levels-3d-preview.shaders\">\r\n            </div>\r\n          `);\r\n        $(html).find('#shader-config').after(chk);\r\n        processFormGroup(chk, 'meInsert');\r\n      }\r\n      //\r\n\r\n      // =====================\r\n      // = Additional Fields =\r\n      // =====================\r\n\r\n      // // Token Magic FX\r\n      if (\r\n        (this.documentName === 'Tile' || this.documentName === 'Token') &&\r\n        !this.options?.simplified &&\r\n        game.modules.get('tokenmagic')?.active &&\r\n        game.settings.get(MODULE_ID, 'tmfxFieldsEnable')\r\n      ) {\r\n        let content = '<datalist id=\"tmfxPresets\"><option value=\"DELETE ALL\">';\r\n        TokenMagic.getPresets().forEach((p) => (content += `<option value=\"${p.name}\">`));\r\n        content += `</datalist><input list=\"tmfxPresets\" name=\"tokenmagic.preset\">`;\r\n\r\n        let chk = $(`\r\n          <div class=\"form-group\">\r\n            <label>${localize('common.preset')} <span class=\"units\">(TMFX)</span></label>\r\n            <div class=\"form-fields\">\r\n              ${content}\r\n            </div>\r\n          `);\r\n        $(html).find('[name=\"texture.tint\"]').closest('.form-group').after(chk);\r\n        processFormGroup(chk, 'meInsert');\r\n\r\n        const currentDDTint = getDDTint(this.object.object ?? this.object);\r\n        chk = $(`\r\n          <div class=\"form-group\">\r\n            <label>DungeonDraft <span class=\"units\">(TMFX)</span></label>\r\n            <div class=\"form-fields\">\r\n              <input class=\"color\" type=\"text\" name=\"tokenmagic.ddTint\" value=\"${currentDDTint}\">\r\n              <input type=\"color\" value=\"${currentDDTint}\" data-edit=\"tokenmagic.ddTint\">\r\n            </div>\r\n          `);\r\n        $(html).find('[name=\"texture.tint\"]').closest('.form-group').after(chk);\r\n        processFormGroup(chk, 'meInsert');\r\n      }\r\n\r\n      if (this.documentName === 'Tile') {\r\n        let scaleInput = $(`\r\n        <div class=\"form-group slim\">\r\n          <label>${localize('Scale', false)} <span class=\"units\">(${localize('common.ratio')})</span></label>\r\n          <div class=\"form-fields\">\r\n            <label>${localize('Width', false)} | ${localize('Height', false)}</label>\r\n            <input type=\"number\" value=\"1\" step=\"any\" name=\"massedit.scale\" min=\"0\">\r\n          </div>\r\n        </div>`);\r\n        $(html).find('[name=\"width\"]').closest('.form-group').before(scaleInput);\r\n        processFormGroup(scaleInput, 'meInsert');\r\n\r\n        if (IS_PRIVATE) {\r\n          scaleInput = $(`\r\n          <div class=\"form-group slim\">\r\n            <label>${localize('TILE.Scale', false)} <span class=\"units\">(${localize('common.ratio')})</span></label>\r\n            <div class=\"form-fields\">\r\n              <label>${localize('TILE.ScaleX', false)} | ${localize('TILE.ScaleY', false)}</label>\r\n              <input type=\"number\" value=\"1\" step=\"any\" name=\"massedit.texture.scale\" min=\"0\">\r\n            </div>\r\n          </div>`);\r\n          $(html).find('[name=\"texture.scaleX\"]').closest('.form-group').before(scaleInput);\r\n          processFormGroup(scaleInput, 'meInsert');\r\n        }\r\n      }\r\n\r\n      // Resizes the window\r\n      this.setPosition();\r\n      this.element[0].style.height = ''; // don't want a statically set height\r\n\r\n      // TokenConfig might be changed by some modules after activateListeners is processed\r\n      // Look out for these updates and add checkboxes for any newly added form-groups\r\n      const mutate = (mutations) => {\r\n        mutations.forEach((mutation) => {\r\n          mutation.addedNodes.forEach((node) => {\r\n            if ($(node).hasClass('form-group')) {\r\n              processFormGroup(node);\r\n            } else {\r\n              $(node)\r\n                .find('.form-group')\r\n                .each(function () {\r\n                  if (!$(this).find('.mass-edit-checkbox').length) {\r\n                    processFormGroup(this);\r\n                  }\r\n                });\r\n            }\r\n          });\r\n        });\r\n      };\r\n\r\n      const observer = new MutationObserver(mutate);\r\n      observer.observe(html[0], {\r\n        characterData: false,\r\n        attributes: false,\r\n        childList: true,\r\n        subtree: true,\r\n      });\r\n\r\n      if (this.documentName === 'Token') {\r\n        $(html)\r\n          .find('fieldset.detection-mode')\r\n          .each(function (_) {\r\n            $(this).wrap('<div class=\"form-group\"></div>');\r\n          });\r\n      }\r\n\r\n      // Inject Flags tab\r\n      injectFlagTab(this);\r\n    }\r\n\r\n    getSelectedFields(formData) {\r\n      if (!formData) formData = this._getSubmitData();\r\n\r\n      // Some module flags get un-flattened\r\n      // Flatten them again before attempting to find selected\r\n      formData = foundry.utils.flattenObject(formData);\r\n\r\n      // Modules Specific Logic\r\n      // 3D Canvas\r\n      if ('flags.levels-3d-preview.shaders' in formData) {\r\n        formData['flags.levels-3d-preview.shaders'] = this.object.getFlag('levels-3d-preview', 'shaders');\r\n      }\r\n      // == End of Module specific logic\r\n\r\n      // Token _getSubmitData() performs conversions related to scale, we need to undo them here\r\n      // so that named fields on the form match up and can be selected\r\n      if (this.documentName === 'Token') {\r\n        if (formData['texture.scaleX']) {\r\n          formData.scale = Math.abs(formData['texture.scaleX']);\r\n          formData.mirrorX = formData['texture.scaleX'] < 0;\r\n          formData.mirrorY = formData['texture.scaleY'] < 0;\r\n        }\r\n      } else if (this.documentName === 'Note') {\r\n        if (formData['texture.src']) {\r\n          formData['icon.selected'] = formData['texture.src'];\r\n          formData['icon.custom'] = formData['texture.src'];\r\n        }\r\n      }\r\n\r\n      const selectedFields = {};\r\n      const form = $(this.form);\r\n      const addSubtractFields = this.addSubtractFields;\r\n      const app = this;\r\n\r\n      form.find('.form-group').each(function (_) {\r\n        const me_checkbox = $(this).find('.mass-edit-checkbox > input');\r\n        if (me_checkbox.length && me_checkbox.is(':checked')) {\r\n          $(this)\r\n            .find('[name]')\r\n            .each(function (_) {\r\n              const name = $(this).attr('name');\r\n\r\n              // Module specific logic\r\n              if (name === 'flags.limits') {\r\n                const limits = foundry.utils.flattenObject(app.object.toObject().flags['limits'] ?? {});\r\n                for (const [k, v] of Object.entries(limits)) {\r\n                  selectedFields['flags.limits.' + k] = v;\r\n                }\r\n              }\r\n              // == End of Module specific logic\r\n\r\n              // Some modules will process their flags to remove them using -= notation\r\n              // Need to account for this when selecting fields\r\n              if (formData[name] === undefined && name.startsWith('flags.')) {\r\n                const removeFlag = hasFlagRemove(name, formData);\r\n                if (removeFlag) {\r\n                  selectedFields[removeFlag] = null;\r\n                }\r\n              } else {\r\n                selectedFields[name] = formData[name];\r\n                if (name in addSubtractFields) {\r\n                  addSubtractFields[name].value = formData[name];\r\n                }\r\n              }\r\n\r\n              if (foundry.utils.getType(selectedFields[name]) === 'string') {\r\n                const input = $(this);\r\n                if (input.hasClass('tva-array')) {\r\n                  if (v.trim()) {\r\n                    selectedFields[name] = selectedFields[name]\r\n                      .trim()\r\n                      .split(',')\r\n                      .map((s) => s.trim());\r\n                  } else {\r\n                    selectedFields[name] = [];\r\n                  }\r\n                } else if (input.hasClass('tva-jsonArray')) {\r\n                  try {\r\n                    selectedFields[name] = JSON.parse(selectedFields[name]);\r\n                  } catch (e) {\r\n                    selectedFields[name] = [];\r\n                  }\r\n                }\r\n              }\r\n            });\r\n        }\r\n      });\r\n\r\n      // // Module specific logic\r\n      // if (game.modules.get('barbrawl')?.active) {\r\n      //   for (const [k, v] of Object.entries(selectedFields)) {\r\n      //     if (k.startsWith('flags.barbrawl')) {\r\n      //       let details = form.find(`[name=\"${k}\"]`).closest('.indent-details');\r\n      //       let id = details.attr('id');\r\n      //       if (id) selectedFields[`flags.barbrawl.resourceBars.${id}.id`] = id;\r\n      //     }\r\n      //   }\r\n      // }\r\n      // // End of Module specific logic\r\n\r\n      return selectedFields;\r\n    }\r\n\r\n    // Overriding here to prevent the underlying object from being updated as inputs change on the form\r\n    // Relevant for AmbientLight, Tile, and Token sheets\r\n    async _onChangeInput(event) {\r\n      if (!['AmbientLight', 'Tile', 'Token'].includes(this.documentName)) {\r\n        super._onChangeInput(event);\r\n        return;\r\n      }\r\n\r\n      // // Handle form element updates\r\n      const el = event.target;\r\n      if (el.type === 'color' && el.dataset.edit) this._onChangeColorPicker(event);\r\n      else if (el.type === 'range') this._onChangeRange(event);\r\n    }\r\n\r\n    _getHeaderButtons() {\r\n      let buttons = super._getHeaderButtons();\r\n      return buttons.filter((b) => b.class !== 'configure-sheet');\r\n    }\r\n\r\n    _injectGlobalDeleteButton(html) {\r\n      const control = $(\r\n        `<div class=\"me-global-delete\"><a title=\"${localize(\r\n          'form.global-delete-title'\r\n        )}\"><i class=\"far fa-times-octagon fa-2x\"></i></a></div>`\r\n      );\r\n      control.click((event) => {\r\n        new Dialog({\r\n          title: 'Confirm',\r\n          content: `\r\n          <h2 style=\"color: red; text-align: center;\">${localFormat('form.delete-warning', {\r\n            count: this.meObjects.length,\r\n            document: this.documentName,\r\n          })}</h2>\r\n          <p>${localize('form.proceed')}</p>`,\r\n          buttons: {\r\n            buttonA: {\r\n              label: localize('Yes', false),\r\n              callback: () => {\r\n                this.meObjects.forEach((obj) => {\r\n                  let doc = obj.document ?? obj;\r\n                  if (doc.delete) doc.delete();\r\n                });\r\n                this.close();\r\n              },\r\n            },\r\n            no: {\r\n              label: localize('No', false),\r\n            },\r\n          },\r\n          default: 'buttonA',\r\n        }).render(true);\r\n      });\r\n      html.closest('form').append(control);\r\n    }\r\n  }\r\n\r\n  return MassEditForm;\r\n};\r\n\r\nexport const WithMassConfig = (docName = 'NONE') => {\r\n  let cls;\r\n  const sheets = CONFIG[docName]?.sheetClasses;\r\n  if (!sheets || docName === 'Actor') {\r\n    cls = FormApplication;\r\n\r\n    cls = FormApplication;\r\n  } else {\r\n    cls = Object.values(Object.values(sheets).pop() ?? {}).pop()?.cls;\r\n  }\r\n\r\n  const MEF = WithMassEditForm(cls);\r\n\r\n  class MassConfig extends MEF {\r\n    constructor(target, docs, options) {\r\n      if (options.massSelect) options.randomizerEnabled = false;\r\n      const docName = options.documentName ?? getDocumentName(target);\r\n      if (!options.commonData) options.commonData = getCommonDocData(docs, docName);\r\n\r\n      super(target.document ? target.document : target, docs, options);\r\n      this.docName = docName;\r\n\r\n      // Add submit buttons\r\n      let buttons = [];\r\n      if (this.options.massSelect) {\r\n        buttons = [\r\n          { title: localize('FILES.Search', false), value: 'search', icon: 'fas fa-search' },\r\n          { title: localize('form.search-and-edit'), value: 'searchAndEdit', icon: 'fas fa-search' },\r\n        ];\r\n      } else if (this.documentName === 'Note' && !this.options.presetEdit) {\r\n        // If we're editing notes and there are some on a different scene\r\n        if (this.meObjects.filter((n) => (n.scene ?? n.parent).id === canvas.scene.id).length) {\r\n          buttons.push({\r\n            title: localize('form.apply-on-current-scene'),\r\n            value: 'currentScene',\r\n            icon: 'far fa-save',\r\n          });\r\n        }\r\n        if (this.meObjects.filter((n) => (n.scene ?? n.parent).id !== canvas.scene.id).length) {\r\n          buttons.push({\r\n            title: localize('form.apply-on-all-scenes'),\r\n            value: 'allScenes',\r\n            icon: 'fas fa-globe',\r\n          });\r\n        }\r\n      } else {\r\n        buttons = [{ title: localize('common.apply'), value: 'apply', icon: 'far fa-save' }];\r\n        // Extra control for Tokens to update their Actors Token prototype\r\n        if (\r\n          this.documentName === 'Token' &&\r\n          !this.options.simplified &&\r\n          !this.meObjects[0].constructor?.name?.startsWith('PrototypeToken') &&\r\n          !this.options.presetEdit\r\n        ) {\r\n          buttons.push({\r\n            title: localize('form.apply-update-proto'),\r\n            value: 'applyToPrototype',\r\n            icon: 'far fa-save',\r\n          });\r\n        }\r\n      }\r\n\r\n      this.massFormButtons = buttons;\r\n    }\r\n\r\n    async _updateObject(event, formData) {\r\n      await this.massUpdateObject(event, formData);\r\n\r\n      // On v11 certain placeable will freeze the canvas layer if parent _updateObject is not called\r\n      if (['Token', 'AmbientLight'].includes(this.docName) && this.preview?.object) {\r\n        this._resetPreview();\r\n      }\r\n    }\r\n\r\n    async massUpdateObject(event, formData) {\r\n      if (!event.submitter?.value) return;\r\n\r\n      // Gather up all named fields that have mass-edit-checkbox checked\r\n      const selectedFields = this.getSelectedFields(formData);\r\n\r\n      // Detection modes may have been selected out of order\r\n      // Fix that here\r\n      if (this.docName === 'Token') {\r\n        TokenDataAdapter.correctDetectionModeOrder(selectedFields, this.randomizeFields);\r\n      }\r\n\r\n      // Preset editing\r\n      if (this.options.presetEdit) {\r\n        this.options.callback?.({\r\n          data: selectedFields,\r\n          addSubtract: this.addSubtractFields,\r\n          randomize: this.randomizeFields,\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Search and Select mode\r\n      if (this.options.massSelect) {\r\n        return performMassSearch(event.submitter.value, this.docName, selectedFields, {\r\n          scope: this.modUpdate ? this.modUpdateType : null,\r\n        });\r\n      } else {\r\n        // Edit mode\r\n        return performMassUpdate.call(this, selectedFields, this.meObjects, this.docName, event.submitter.value);\r\n      }\r\n    }\r\n\r\n    _performOnInputChangeUpdate() {\r\n      const selectedFields = this.getSelectedFields();\r\n      performMassUpdate.call(this, selectedFields, this.meObjects, this.docName, this.modUpdateType);\r\n    }\r\n\r\n    /**\r\n     * Copy currently selected field to the clipboard\r\n     */\r\n    performMassCopy({ command = '', selectedFields = null } = {}) {\r\n      if (!selectedFields) {\r\n        selectedFields = this.getSelectedFields();\r\n        if (this.documentName === 'Token') {\r\n          TokenDataAdapter.correctDetectionModeOrder(selectedFields, this.randomizeFields);\r\n        }\r\n      }\r\n\r\n      if (foundry.utils.isEmpty(selectedFields)) return false;\r\n\r\n      const preset = new Preset({\r\n        documentName: this.documentName,\r\n        data: selectedFields,\r\n        randomize: this.randomizeFields,\r\n        addSubtract: this.addSubtractFields,\r\n      });\r\n\r\n      copyToClipboard(preset, command, this.isPrototype);\r\n      return true;\r\n    }\r\n\r\n    _getHeaderButtons() {\r\n      const buttons = super._getHeaderButtons();\r\n      if (this.options.presetEdit) return buttons;\r\n\r\n      // Macro Generator\r\n      if (SUPPORTED_PLACEABLES.includes(this.docName) || SUPPORTED_COLLECTIONS.includes(this.docName)) {\r\n        buttons.unshift({\r\n          label: '',\r\n          class: 'mass-edit-macro',\r\n          icon: 'fas fa-terminal',\r\n          onclick: () => {\r\n            const selectedFields = this.getSelectedFields();\r\n            new MacroForm(\r\n              this.object,\r\n              this.meObjects,\r\n              this.docName,\r\n              selectedFields,\r\n              this.randomizeFields,\r\n              this.addSubtractFields\r\n            ).render(true);\r\n          },\r\n        });\r\n      }\r\n\r\n      // Brush Tool\r\n      if (SUPPORTED_PLACEABLES.includes(this.docName)) {\r\n        buttons.unshift({\r\n          label: '',\r\n          class: 'mass-edit-brush',\r\n          icon: 'fas fa-paint-brush',\r\n          onclick: () => {\r\n            Brush.activate({ app: this });\r\n          },\r\n        });\r\n      }\r\n\r\n      // Edit Permissions\r\n      if (['Token', 'Note', 'Actor'].includes(this.docName)) {\r\n        let docs = [];\r\n        const ids = new Set();\r\n        for (const p of this.meObjects) {\r\n          let d;\r\n          if (this.docName === 'Actor' || this.docName === 'JournalEntry') d = p;\r\n          else if (this.docName === 'Token' && p.actor) d = p.actor;\r\n          else if (this.docName === 'Note' && p.entry) d = p.entry;\r\n\r\n          // Only retain unique docs\r\n          if (d && !ids.has(d.id)) {\r\n            docs.push(d);\r\n            ids.add(d.id);\r\n          }\r\n        }\r\n\r\n        if (docs.length)\r\n          buttons.unshift({\r\n            label: '',\r\n            class: 'mass-edit-permissions',\r\n            icon: 'fas fa-lock fa-fw',\r\n            onclick: () => {\r\n              let MP = WithMassPermissions();\r\n              new MP(docs[0], docs).render(true);\r\n            },\r\n          });\r\n      }\r\n\r\n      if (!this.options.simplified) {\r\n        // Open Preset form\r\n        buttons.unshift({\r\n          label: '',\r\n          class: 'mass-edit-presets',\r\n          icon: 'fas fa-box',\r\n          onclick: () => {\r\n            this.linkedPresetForm = new MassEditPresets(this, null, this.docName, {\r\n              left: this.position.left - 370,\r\n              top: this.position.top,\r\n              preventPositionOverride: true,\r\n            });\r\n            this.linkedPresetForm.render(true);\r\n          },\r\n        });\r\n      }\r\n\r\n      // Apply JSON data onto the form\r\n      buttons.unshift({\r\n        label: '',\r\n        class: 'mass-edit-apply',\r\n        icon: 'far fa-money-check-edit',\r\n        onclick: (ev) => {\r\n          let selFields = expandObject(this.getSelectedFields());\r\n          if (foundry.utils.isEmpty(selFields)) selFields = '';\r\n          else selFields = JSON.stringify(selFields, null, 2);\r\n          let content = `<textarea class=\"json\" style=\"width:100%; height: 300px;\">${selFields}</textarea>`;\r\n          new Dialog({\r\n            title: localize('form.apply-json'),\r\n            content: content,\r\n            buttons: {\r\n              apply: {\r\n                label: localize('common.apply'),\r\n                callback: (html) => {\r\n                  let json = {};\r\n                  try {\r\n                    json = JSON.parse(html.find('.json').val());\r\n                  } catch (e) {}\r\n\r\n                  if (!foundry.utils.isEmpty(json)) {\r\n                    const preset = new Preset({\r\n                      documentName: this.docName,\r\n                      data: foundry.utils.flattenObject(json),\r\n                    });\r\n                    this._processPreset(preset);\r\n                  }\r\n                },\r\n              },\r\n            },\r\n          }).render(true);\r\n        },\r\n      });\r\n\r\n      // History\r\n      if (game.settings.get(MODULE_ID, 'enableHistory') && SUPPORTED_HISTORY_DOCS.includes(this.docName)) {\r\n        buttons.unshift({\r\n          label: '',\r\n          class: 'mass-edit-history',\r\n          icon: 'fas fa-history',\r\n          onclick: () => {\r\n            new MassEditHistory(this.docName, async (preset) => this._processPreset(preset)).render(true);\r\n          },\r\n        });\r\n      }\r\n\r\n      // Toggle between Token and Actor forms\r\n      if (this.documentName === 'Token' && this.meObjects.filter((t) => t.actor).length) {\r\n        buttons.unshift({\r\n          label: '',\r\n          class: 'mass-edit-actors',\r\n          icon: 'fas fa-user',\r\n          onclick: () => {\r\n            if (\r\n              showMassActorForm(this.meObjects, {\r\n                massEdit: this.options.massEdit,\r\n              })\r\n            ) {\r\n              this.close();\r\n            }\r\n          },\r\n        });\r\n      }\r\n\r\n      return buttons;\r\n    }\r\n\r\n    async activateListeners(html) {\r\n      await super.activateListeners(html);\r\n      // We want to update fields used by brush control every time a field changes on the form\r\n      html.on('input', 'textarea, input[type=\"text\"], input[type=\"number\"]', () => Brush.refreshPreset());\r\n      html.on('change', 'textarea, input, select', () => Brush.refreshPreset());\r\n      html.on('paste', 'input', () => Brush.refreshPreset());\r\n      html.on('click', 'button', () => Brush.refreshPreset());\r\n    }\r\n\r\n    async close(options = {}) {\r\n      Brush.deactivate();\r\n      options.force = true;\r\n\r\n      if (['Token', 'AmbientLight'].includes(this.docName) && this.preview?.object) {\r\n        this._resetPreview();\r\n      }\r\n      if (this.linkedPresetForm) this.linkedPresetForm.close();\r\n      return super.close(options);\r\n    }\r\n\r\n    // Some forms will manipulate themselves via modifying internal objects and re-rendering\r\n    // In such cases we want to preserve the selected fields\r\n    render(force, options = {}) {\r\n      // If it's being re-rendered with an action \"update\" in means it's ClientDocumentMixin response to _onUpdate\r\n      // We can ignore these\r\n      if (options.action === 'update') return;\r\n      // Form hasn't been rendered yet, aka first render pass, ignore it\r\n      if (!this.form) return super.render(force, options);\r\n\r\n      // Fetch the currently selected fields before re-rendering\r\n      const selectedFields = this.getSelectedFields();\r\n      const randomize = this.randomizeFields;\r\n      const addSubtract = this.addSubtractFields;\r\n\r\n      // Render, the selections will be wiped\r\n      super.render(force, options);\r\n\r\n      // Re-select fields, we're reusing preset functions here.\r\n      // Timeout require for this module including others to apply their\r\n      // modifications to the configuration window\r\n      setTimeout(() => {\r\n        if (this.form) {\r\n          this._applyPreset(\r\n            new Preset({\r\n              data: selectedFields,\r\n              randomize,\r\n              addSubtract,\r\n            })\r\n          );\r\n        }\r\n      }, 1000);\r\n    }\r\n\r\n    async _processPreset(preset) {\r\n      // This will be called when a preset or history item is selected or JSON data is being directly applied\r\n      // The code bellow handles it being applied to the current form\r\n\r\n      // =====================\r\n      // Module specific logic\r\n      // =====================\r\n      let timeoutRequired = false;\r\n\r\n      const data = foundry.utils.flattenObject(preset.data[0]);\r\n\r\n      // Monk's Active Tiles\r\n      if ('flags.monks-active-tiles.actions' in data) {\r\n        timeoutRequired = true;\r\n        await this.object.setFlag('monks-active-tiles', 'actions', data['flags.monks-active-tiles.actions']);\r\n      }\r\n\r\n      if ('flags.monks-active-tiles.files' in data) {\r\n        timeoutRequired = true;\r\n        await this.object.setFlag('monks-active-tiles', 'files', data['flags.monks-active-tiles.files']);\r\n      }\r\n\r\n      // 3D Canvas\r\n      if ('flags.levels-3d-preview.shaders' in data) {\r\n        timeoutRequired = true;\r\n        await this.object.setFlag('levels-3d-preview', 'shaders', data['flags.levels-3d-preview.shaders']);\r\n      }\r\n\r\n      // Limits\r\n      if ('flags.limits.light.enabled' in data) {\r\n        timeoutRequired = true;\r\n        await this.object.update({ flags: { limits: expandObject(data).flags.limits } });\r\n      }\r\n\r\n      if (this.documentName === 'Token') {\r\n        timeoutRequired = TokenDataAdapter.modifyPresetData(this, data);\r\n      }\r\n\r\n      if (timeoutRequired) {\r\n        setTimeout(() => {\r\n          this._applyPreset(preset);\r\n        }, 250);\r\n        return;\r\n      }\r\n\r\n      this._applyPreset(preset);\r\n    }\r\n\r\n    _applyPreset(preset) {\r\n      const form = $(this.form);\r\n\r\n      const customMerge = (obj1, obj2) => {\r\n        if (!obj2) return obj1;\r\n        for (const [k, v] of Object.entries(obj2)) {\r\n          obj1[k] = v;\r\n        }\r\n        return obj1;\r\n      };\r\n\r\n      this.randomizeFields = customMerge(this.randomizeFields, preset.randomize);\r\n      this.addSubtractFields = customMerge(this.addSubtractFields, preset.addSubtract);\r\n      selectRandomizerFields(form, this.randomizeFields);\r\n      selectAddSubtractFields(form, this.addSubtractFields);\r\n\r\n      const data = foundry.utils.flattenObject(preset.data[0]);\r\n      GeneralDataAdapter.dataToForm(this.documentName, preset.data[0], data);\r\n      for (const key of Object.keys(data)) {\r\n        const el = form.find(`[name=\"${key}\"]`);\r\n        if (el.is(':checkbox')) {\r\n          el.prop('checked', data[key]);\r\n        } else {\r\n          el.val(data[key]);\r\n        }\r\n        el.trigger('change');\r\n      }\r\n\r\n      // Make brush aware of randomized field changes\r\n      Brush.refreshPreset();\r\n    }\r\n\r\n    get title() {\r\n      if (this.options.massSelect) return localFormat('form.mass-search-title', { document: this.documentName });\r\n      return localFormat('form.mass-edit-title', { document: this.documentName, count: this.meObjects.length });\r\n    }\r\n  }\r\n\r\n  const constructorName = `Mass${docName}Config`;\r\n  Object.defineProperty(MassConfig.prototype.constructor, 'name', { value: constructorName });\r\n  return MassConfig;\r\n};\r\n\r\n// ====================\r\n// ===== UTILS ========\r\n// ====================\r\n\r\n/**\r\n *\r\n * @param {Document} docs\r\n * @param {Preset} preset\r\n * @param {boolean} suppressNotif\r\n * @returns\r\n */\r\nexport function pasteDataUpdate(docs, preset, suppressNotif = false, excludePosition = false) {\r\n  if (!docs || !docs.length) return false;\r\n\r\n  let docName = docs[0].document ? docs[0].document.documentName : docs[0].documentName;\r\n\r\n  preset = preset ?? getClipboardData(docName);\r\n  let applyType;\r\n\r\n  // Special handling for Tokens/Actors\r\n  if (!preset) {\r\n    if (docName === 'Token') {\r\n      if (!preset) {\r\n        preset = getClipboardData('TokenProto');\r\n        applyType = 'applyToPrototype';\r\n      }\r\n\r\n      if (!preset) {\r\n        preset = getClipboardData('Actor');\r\n        docName = 'Actor';\r\n        docs = docs.filter((d) => d.actor).map((d) => d.actor);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (preset) {\r\n    if (preset.documentName !== docName) return;\r\n\r\n    const context = { meObjects: docs };\r\n    if (!foundry.utils.isEmpty(preset.randomize)) context.randomizeFields = preset.randomize;\r\n    if (!foundry.utils.isEmpty(preset.addSubtract)) context.addSubtractFields = preset.addSubtract;\r\n\r\n    let data = foundry.utils.deepClone(preset.data[Math.floor(Math.random() * preset.data.length)]);\r\n    if (excludePosition) {\r\n      delete data.x;\r\n      delete data.y;\r\n      delete data.c;\r\n    }\r\n\r\n    performMassUpdate.call(context, foundry.utils.flattenObject(data), docs, preset.documentName, applyType);\r\n    if (!suppressNotif)\r\n      ui.notifications.info(\r\n        localFormat('clipboard.paste', {\r\n          document: preset.documentName,\r\n          count: docs.length,\r\n        })\r\n      );\r\n\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function performMassSearch(\r\n  command,\r\n  docName,\r\n  selectedFields,\r\n  { scope = null, selected = null, control = true, pan = true } = {}\r\n) {\r\n  const found = [];\r\n\r\n  if (scope === 'selected') {\r\n    performDocSearch(selected, docName, selectedFields, found);\r\n  } else if (SUPPORTED_COLLECTIONS.includes(docName)) {\r\n    performDocSearch(Array.from(game.collections.get(docName)), docName, selectedFields, found);\r\n  } else {\r\n    let scenes = [];\r\n    if (scope === 'world') scenes = Array.from(game.scenes);\r\n    else if (canvas.scene) scenes = [canvas.scene];\r\n\r\n    for (const scene of scenes) {\r\n      performMassSearchScene(scene, docName, selectedFields, found);\r\n    }\r\n  }\r\n\r\n  // Select found placeables/documents\r\n  if (control) {\r\n    // First release/de-select the currently selected placeable on the current scene\r\n    canvas.activeLayer.controlled.map((c) => c).forEach((c) => c.release());\r\n\r\n    setTimeout(() => {\r\n      found.forEach((f) => {\r\n        let obj = f.object ?? f;\r\n        if (obj.control) obj.control({ releaseOthers: false });\r\n      });\r\n\r\n      if (pan && found.length && game.settings.get(MODULE_ID, 'panToSearch')) {\r\n        panToFitPlaceables(found);\r\n      }\r\n    }, 100);\r\n  }\r\n  if (command === 'searchAndEdit') {\r\n    setTimeout(() => {\r\n      showMassEdit(found, docName);\r\n    }, 500);\r\n  }\r\n  return found;\r\n}\r\n\r\nfunction performMassSearchScene(scene, docName, selectedFields, found) {\r\n  const docs = Array.from(scene[SCENE_DOC_MAPPINGS[docName]]);\r\n  performDocSearch(docs, docName, selectedFields, found);\r\n}\r\n\r\nfunction performDocSearch(docs, docName, selectedFields, found) {\r\n  // Next select objects that match the selected fields\r\n  for (const c of docs) {\r\n    let matches = true;\r\n    const data = foundry.utils.flattenObject(getData(c).toObject());\r\n\r\n    // Special processing for some placeable types\r\n    // Necessary when form data is not directly mappable to placeable\r\n    GeneralDataAdapter.dataToForm(docName, c, data);\r\n\r\n    for (const [k, v] of Object.entries(selectedFields)) {\r\n      // Special handling for flags\r\n      if (k.startsWith('flags.')) {\r\n        if (!flagCompare(data, k, v)) {\r\n          matches = false;\r\n          break;\r\n        }\r\n        // Special handling for empty strings and undefined\r\n      } else if ((v === '' || v == null) && (data[k] !== '' || data[k] != null)) {\r\n        // matches\r\n      } else if (typeof v === 'string' && v.includes('*') && wildcardStringMatch(v, data[k])) {\r\n        // Wildcard matched\r\n      } else if (data[k] != v) {\r\n        // Detection mode keys cannot be treated in isolation\r\n        // We skip them here and will check them later\r\n        if (docName === 'Token') {\r\n          if (k.startsWith('detectionModes')) {\r\n            continue;\r\n          }\r\n        }\r\n\r\n        matches = false;\r\n        break;\r\n      }\r\n    }\r\n    if (matches) {\r\n      // We skipped detectionMode matching in the previous step and do it now instead\r\n      if (docName === 'Token') {\r\n        const modes = Object.values(foundry.utils.expandObject(selectedFields)?.detectionModes || {});\r\n\r\n        if (!TokenDataAdapter.detectionModeMatch(modes, c.detectionModes)) {\r\n          continue;\r\n        }\r\n      }\r\n\r\n      found.push(c);\r\n    }\r\n  }\r\n}\r\n\r\nexport async function performMassUpdate(data, objects, docName, applyType) {\r\n  // Used by GenericForms, we want just the data, and no updates\r\n  if (this.options?.simplified) {\r\n    if (this.options.callback) this.options.callback(data);\r\n    return;\r\n  }\r\n  if (foundry.utils.isEmpty(data)) {\r\n    if (this.callbackOnUpdate) {\r\n      this.callbackOnUpdate(objects);\r\n    }\r\n    return;\r\n  }\r\n\r\n  // Make sure we're working with documents and not placeables\r\n  objects = objects.map((o) => o.document ?? o);\r\n\r\n  // Update docs\r\n  const updates = [];\r\n  const context = {};\r\n\r\n  const total = objects.length;\r\n  for (let i = 0; i < total; i++) {\r\n    const update = foundry.utils.deepClone(data);\r\n    update._id = objects[i].id;\r\n\r\n    // push update\r\n    updates.push(update);\r\n  }\r\n\r\n  // If history is enabled we'll want to attach additional controls to the updates\r\n  // so that they can be tracked.\r\n  if (game.settings.get(MODULE_ID, 'enableHistory')) {\r\n    context['mass-edit-randomize'] = [foundry.utils.deepClone(this.randomizeFields)];\r\n    context['mass-edit-addSubtract'] = [foundry.utils.deepClone(this.addSubtractFields)];\r\n  }\r\n\r\n  // Applies randomization\r\n  if (this) await applyRandomization(updates, objects, this.randomizeFields);\r\n  if (this) applyAddSubtract(updates, objects, docName, this.addSubtractFields);\r\n\r\n  // Special processing for some placeable types\r\n  // Necessary when form data is not directly mappable to placeable\r\n  for (let i = 0; i < total; i++) {\r\n    GeneralDataAdapter.formToData(docName, objects[i], updates[i]);\r\n  }\r\n\r\n  await checkApplySpecialFields(docName, updates, objects);\r\n\r\n  if (docName === 'Actor') {\r\n    // Perform Updates\r\n    // There is a lot of wonkiness related to updating of real/synthetic actors. It's probably best\r\n    // to simply update the Actors directly\r\n\r\n    for (let i = 0; i < updates.length; i++) {\r\n      const update = updates[i];\r\n      delete update._id;\r\n      if (this.options?.tokens) this.options.tokens[i].actor.update(update);\r\n      else objects[i].update(update);\r\n    }\r\n  } else if (docName === 'Scene') {\r\n    Scene.updateDocuments(updates, context);\r\n  } else if (docName === 'PlaylistSound') {\r\n    for (let i = 0; i < objects.length; i++) {\r\n      delete updates[i]._id;\r\n      objects[i].update(updates[i], context);\r\n    }\r\n  } else if (docName === 'Note') {\r\n    // Notes can be updated across different scenes\r\n    const splitUpdates = {};\r\n    for (let i = 0; i < updates.length; i++) {\r\n      const scene = objects[i].scene ?? objects[i].parent;\r\n      if (applyType === 'currentScene' && scene.id !== canvas.scene.id) continue;\r\n      if (!(scene.id in splitUpdates)) {\r\n        splitUpdates[scene.id] = { scene: scene, updates: [] };\r\n      }\r\n      splitUpdates[scene.id].updates.push(updates[i]);\r\n    }\r\n    for (const sceneUpdate of Object.values(splitUpdates)) {\r\n      sceneUpdate.scene.updateEmbeddedDocuments(docName, sceneUpdate.updates, context);\r\n    }\r\n  } else if (!this.isPrototype && SUPPORTED_PLACEABLES.includes(docName)) {\r\n    const splitUpdates = {};\r\n    for (let i = 0; i < updates.length; i++) {\r\n      const scene = objects[i].parent;\r\n      if (!splitUpdates[scene.id]) splitUpdates[scene.id] = [];\r\n      splitUpdates[scene.id].push(updates[i]);\r\n    }\r\n\r\n    for (const sceneId of Object.keys(splitUpdates)) {\r\n      game.scenes.get(sceneId)?.updateEmbeddedDocuments(docName, splitUpdates[sceneId], context);\r\n    }\r\n  } else if (SUPPORTED_COLLECTIONS.includes(docName)) {\r\n    objects[0].constructor?.updateDocuments(updates, context);\r\n  } else {\r\n    // Note a placeable or otherwise specially handled doc type\r\n    // Simply merge the fields directly into the object\r\n    for (let i = 0; i < updates.length; i++) {\r\n      const update = updates[i];\r\n      delete update._id;\r\n      mergeObjectPreserveDot(objects[i], foundry.utils.mergeObject(objects[i], update));\r\n    }\r\n    if (this.callbackOnUpdate) {\r\n      this.callbackOnUpdate(objects);\r\n    }\r\n  }\r\n\r\n  // May need to also update Token prototypes\r\n  if ((applyType === 'applyToPrototype' || this.isPrototype) && docName === 'Token') {\r\n    const actorUpdates = {};\r\n    for (let i = 0; i < objects.length; i++) {\r\n      const actor = objects[i].actor;\r\n      if (actor) actorUpdates[actor.id] = { _id: actor.id, prototypeToken: updates[i] };\r\n    }\r\n    if (!foundry.utils.isEmpty(actorUpdates)) {\r\n      const updates = [];\r\n      for (const id of Object.keys(actorUpdates)) {\r\n        updates.push(actorUpdates[id]);\r\n      }\r\n      Actor.updateDocuments(updates);\r\n    }\r\n  }\r\n}\r\n\r\nexport async function checkApplySpecialFields(docName, updates, objects) {\r\n  // Token Magic FX specific processing\r\n  if (typeof TokenMagic !== 'undefined' && (docName === 'Token' || docName === 'Tile')) {\r\n    for (let i = 0; i < updates.length; i++) {\r\n      if ('tokenmagic.ddTint' in updates[i]) {\r\n        await applyDDTint(objects[i], updates[i]['tokenmagic.ddTint']);\r\n      }\r\n      if ('tokenmagic.preset' in updates[i]) {\r\n        await applyTMFXPreset(\r\n          objects[i],\r\n          updates[i]['tokenmagic.preset'],\r\n          this?.addSubtractFields?.['tokenmagic.preset']?.method === 'subtract'\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Toggle checkbox if input has been detected inside it's form-group\r\nasync function onInputChange(event) {\r\n  if (event.target.className === 'mass-edit-control') {\r\n    if (!event.target.checked) {\r\n      // If the checkbox has been unchecked we may need to remove highlighting from tabs\r\n      deselectTabs(event.target);\r\n      return;\r\n    }\r\n  }\r\n\r\n  const meChk = $(event.target).closest('.form-group').find('.mass-edit-checkbox input');\r\n  meChk.prop('checked', true);\r\n\r\n  // Highlight tabs if they exist\r\n  selectTabs(meChk[0]);\r\n\r\n  // Immediately update the placeables\r\n  if (this && this.options.massEdit && this._performOnInputChangeUpdate && this.modUpdate)\r\n    this._performOnInputChangeUpdate();\r\n}\r\n\r\nfunction selectTabs(target) {\r\n  const tab = $(target).parent().closest('div.tab, div.matt-tab');\r\n  if (tab.length) {\r\n    tab\r\n      .siblings('nav.tabs')\r\n      .find(`[data-tab=\"${tab.attr('data-tab')}\"]`)\r\n      .addClass('mass-edit-tab-selected');\r\n    selectTabs(tab[0]);\r\n  }\r\n}\r\n\r\nfunction deselectTabs(target) {\r\n  const tab = $(target).parent().closest('div.tab, div.matt-tab');\r\n  if (tab.length && tab.find('.mass-edit-checkbox input:checked').length === 0) {\r\n    tab\r\n      .siblings('nav.tabs')\r\n      .find(`[data-tab=\"${tab.attr('data-tab')}\"]`)\r\n      .removeClass('mass-edit-tab-selected');\r\n    deselectTabs(tab[0]);\r\n  }\r\n}\r\n\r\nexport function getObjFormData(obj, docName) {\r\n  const data = foundry.utils.flattenObject(getData(obj).toObject());\r\n\r\n  // Special processing for some placeable types\r\n  // Necessary when form data is not directly mappable to placeable\r\n  GeneralDataAdapter.dataToForm(docName, obj, data);\r\n\r\n  return data;\r\n}\r\n\r\n// Merge all data and determine what is common between the docs\r\nfunction getCommonDocData(docs, docName) {\r\n  if (!docName) getDocumentName(docs[0]);\r\n  const objects = docs.map((d) => getObjFormData(d, docName));\r\n  return getCommonData(objects);\r\n}\r\n\r\nexport const WithMassPermissions = () => {\r\n  let MEF = WithMassEditForm(DocumentOwnershipConfig);\r\n\r\n  class MassPermissions extends MEF {\r\n    constructor(target, docs, options = {}) {\r\n      // Generate common permissions\r\n      const data = getData(docs[0]);\r\n      const commonData = foundry.utils.flattenObject(data.ownership);\r\n\r\n      const metaLevels = CONST.DOCUMENT_META_OWNERSHIP_LEVELS;\r\n\r\n      // Permissions are only present if they differ from default, for simplicity simple add them before comparing\r\n      const addMissingPerms = function (perms) {\r\n        game.users.forEach((u) => {\r\n          if (!(u.id in perms)) perms[u.id] = metaLevels.DEFAULT;\r\n        });\r\n\r\n        if (!('default' in perms)) perms.default = metaLevels.DEFAULT;\r\n      };\r\n      addMissingPerms(commonData);\r\n\r\n      for (let i = 1; i < docs.length; i++) {\r\n        const data = getData(docs[i]);\r\n        const flatData = foundry.utils.flattenObject(data.ownership);\r\n        addMissingPerms(flatData);\r\n        const diff = foundry.utils.flattenObject(foundry.utils.diffObject(commonData, flatData));\r\n        for (const k of Object.keys(diff)) {\r\n          delete commonData[k];\r\n        }\r\n      }\r\n\r\n      options.commonData = commonData;\r\n      options.massPermissions = true;\r\n\r\n      super(target, docs, options);\r\n    }\r\n\r\n    async _updateObject(event, formData) {\r\n      const selectedFields = this.getSelectedFields(formData);\r\n\r\n      const metaLevels = CONST.DOCUMENT_META_OWNERSHIP_LEVELS;\r\n\r\n      if (foundry.utils.isEmpty(selectedFields)) return;\r\n\r\n      const ids = new Set();\r\n      const updates = [];\r\n      for (const d of this.meObjects) {\r\n        if (!ids.has(d.id)) {\r\n          const data = getData(d);\r\n          const ownership = foundry.utils.deepClone(data.ownership);\r\n\r\n          for (let [user, level] of Object.entries(selectedFields)) {\r\n            if (level === metaLevels.DEFAULT) delete ownership[user];\r\n            else ownership[user] = level;\r\n          }\r\n\r\n          ids.add(d.id);\r\n          updates.push({ _id: d.id, ownership: ownership });\r\n        }\r\n      }\r\n\r\n      this.meObjects[0].constructor.updateDocuments(updates, {\r\n        diff: false,\r\n        recursive: false,\r\n        noHook: true,\r\n      });\r\n    }\r\n\r\n    get title() {\r\n      return `Mass-${this.documentName} PERMISSIONS EDIT [ ${this.meObjects.length} ]`;\r\n    }\r\n  }\r\n\r\n  return MassPermissions;\r\n};\r\n\r\n// ==================================\r\n// ========== CLIPBOARD =============\r\n// ==================================\r\n\r\nconst CLIPBOARD = {};\r\n\r\nexport function copyToClipboard(preset, command, isPrototype) {\r\n  CLIPBOARD[preset.documentName] = preset;\r\n\r\n  // Special handling for Actors/Tokens\r\n  if (preset.documentName === 'Token' && isPrototype) {\r\n    CLIPBOARD['TokenProto'] = preset;\r\n  } else if (preset.documentName === 'Token') {\r\n    if (command === 'copyProto') {\r\n      delete CLIPBOARD['Token'];\r\n      CLIPBOARD['TokenProto'] = preset;\r\n    }\r\n  }\r\n\r\n  // Also copy the fields to the game clipboard as plain text\r\n  game.clipboard.copyPlainText(\r\n    JSON.stringify(foundry.utils.deepClone(preset.data.length === 1 ? preset.data[0] : preset.data), null, 2)\r\n  );\r\n\r\n  ui.notifications.info(\r\n    localFormat('clipboard.copy', {\r\n      document: preset.documentName,\r\n    })\r\n  );\r\n}\r\n\r\nexport function deleteFromClipboard(docName) {\r\n  delete CLIPBOARD[docName];\r\n  if (docName === 'Token') delete CLIPBOARD['TokenProto'];\r\n}\r\n\r\nexport function getClipboardData(docName) {\r\n  return CLIPBOARD[docName];\r\n}\r\n","import { pasteDataUpdate } from '../applications/forms.js';\r\nimport { Preset } from './presets/preset.js';\r\nimport { MODULE_ID } from './utils.js';\r\n\r\nexport class Brush {\r\n  static app;\r\n  static deactivateCallback;\r\n  // @type {Preset}\r\n  static preset;\r\n  static brushOverlay;\r\n  static updatedPlaceables = new Map();\r\n  static hoveredPlaceables = new Set();\r\n  static hoveredPlaceable;\r\n  static documentName;\r\n  static active = false;\r\n  static hitTest;\r\n\r\n  static registered3dListener = false;\r\n  // Truck to keep consistent signatures for bound 3d brush callbacks\r\n  // Required to be able to remove these function once the 3d brush is deactivated\r\n  static {\r\n    this._boundOn3DBrushClick = this._on3DBrushClick.bind(this);\r\n    this._boundOn3dMouseMove = this._on3dMouseMove.bind(this);\r\n  }\r\n\r\n  static _performBrushDocumentUpdate(pos, placeable) {\r\n    if (pos) this._animateCrossTranslate(pos.x, pos.y);\r\n    pasteDataUpdate([placeable], this.preset, true, true);\r\n    this.updatedPlaceables.set(placeable.id, placeable);\r\n  }\r\n\r\n  static _hitTestWall(point, wall) {\r\n    return wall.line.hitArea.contains(point.x, point.y);\r\n  }\r\n\r\n  static _hitTestControlIcon(point, placeable) {\r\n    return (\r\n      Number.between(\r\n        point.x,\r\n        placeable.x - placeable.controlIcon.width / 2,\r\n        placeable.x + placeable.controlIcon.width / 2\r\n      ) &&\r\n      Number.between(\r\n        point.y,\r\n        placeable.y - placeable.controlIcon.height / 2,\r\n        placeable.y + placeable.controlIcon.height / 2\r\n      )\r\n    );\r\n  }\r\n\r\n  static _hitTestTile(point, placeable) {\r\n    const foreground = ui.controls.control.foreground ?? false;\r\n    if (placeable.document.overhead !== foreground) return false;\r\n    return this._hitTestArea(point, placeable);\r\n  }\r\n\r\n  static _hoverTestArea(placeable) {\r\n    return (\r\n      this.hoveredPlaceable &&\r\n      this.hoveredPlaceable.hitArea.width * this.hoveredPlaceable.hitArea.height >\r\n        placeable.hitArea.width * placeable.hitArea.height\r\n    );\r\n  }\r\n\r\n  static _hitTestArea(point, placeable) {\r\n    return (\r\n      Number.between(point.x, placeable.x, placeable.x + placeable.hitArea.width) &&\r\n      Number.between(point.y, placeable.y, placeable.y + placeable.hitArea.height)\r\n    );\r\n  }\r\n\r\n  static _onBrushMove(event) {\r\n    const pos = event.data.getLocalPosition(this.brushOverlay);\r\n    const layer = canvas.getLayerByEmbeddedName(this.documentName);\r\n    this._clearHover(event, pos);\r\n\r\n    for (const p of layer.placeables) {\r\n      if (p.visible && this.hitTest(pos, p) && !this.updatedPlaceables.has(p.id) && this.hoveredPlaceable !== p) {\r\n        if (this.hoverTest?.(p)) {\r\n          this.hoveredPlaceable._onHoverOut(event);\r\n          this.hoveredPlaceable = p;\r\n        } else if (!this.hoverTest && this.hoveredPlaceable && this.hoveredPlaceable !== p) {\r\n          this.hoveredPlaceable._onHoverOut(event);\r\n          this.hoveredPlaceable = p;\r\n        } else if (!this.hoveredPlaceable) {\r\n          this.hoveredPlaceable = p;\r\n        }\r\n\r\n        this.hoveredPlaceable._onHoverIn(event);\r\n      }\r\n    }\r\n  }\r\n\r\n  static _clearHover(event, pos, force = false) {\r\n    if (this.hoveredPlaceable) {\r\n      if (force || !this.hoveredPlaceable.visible || !this.hitTest(pos, this.hoveredPlaceable)) {\r\n        this.hoveredPlaceable._onHoverOut(event);\r\n        this.hoveredPlaceable = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  static _onBrushClickMove(event) {\r\n    if (\r\n      this.hoveredPlaceable &&\r\n      this.hoveredPlaceable.visible &&\r\n      !this.updatedPlaceables.has(this.hoveredPlaceable.id)\r\n    ) {\r\n      this._performBrushDocumentUpdate(event.data.getLocalPosition(this.brushOverlay), this.hoveredPlaceable);\r\n    }\r\n  }\r\n\r\n  static _on3DBrushClick(event) {\r\n    if (this.brush3d) {\r\n      const p = game.Levels3DPreview.interactionManager.currentHover?.placeable;\r\n      if (p && p.document.documentName === this.documentName) {\r\n        game.Levels3DPreview.interactionManager._downCameraPosition.set(0, 0, 0);\r\n        this._performBrushDocumentUpdate(null, p);\r\n      }\r\n      this.updatedPlaceables.clear();\r\n    }\r\n  }\r\n\r\n  static refreshPreset() {\r\n    if (this.active && this.app) {\r\n      this.preset = new Preset({\r\n        documentName: this.documentName,\r\n        data: this.app.getSelectedFields(),\r\n        randomize: this.app.randomizeFields,\r\n        addSubtract: this.app.addSubtractFields,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Object} options\r\n   * @param {MassEditForm} options.app\r\n   * @param {Preset} options.preset\r\n   * @returns\r\n   */\r\n  static activate({ app = null, preset = null, deactivateCallback = null } = {}) {\r\n    if (this.deactivate() || !canvas.ready) return false;\r\n    if (!app && !preset) return false;\r\n\r\n    if (this.brushOverlay) {\r\n      this.brushOverlay.destroy(true);\r\n    }\r\n\r\n    // Setup fields to be used for updates\r\n    this.app = app;\r\n    this.preset = preset;\r\n    this.deactivateCallback = deactivateCallback;\r\n    if (this.app) {\r\n      this.documentName = this.app.documentName;\r\n    } else {\r\n      this.documentName = this.preset.documentName;\r\n    }\r\n    this.updatedPlaceables.clear();\r\n\r\n    const interaction = canvas.app.renderer.events;\r\n    if (!interaction.cursorStyles['brush']) {\r\n      interaction.cursorStyles['brush'] = `url('modules/${MODULE_ID}/images/brush_icon.png'), auto`;\r\n    }\r\n\r\n    this.active = true;\r\n    this.refreshPreset();\r\n\r\n    if (game.Levels3DPreview?._active) {\r\n      return this._activate3d();\r\n    }\r\n\r\n    // Determine hit test test function to be used for pointer hover detection\r\n    switch (this.documentName) {\r\n      case 'Wall':\r\n        this.hitTest = this._hitTestWall;\r\n        break;\r\n      case 'AmbientLight':\r\n      case 'MeasuredTemplate':\r\n      case 'AmbientSound':\r\n      case 'Note':\r\n        this.hitTest = this._hitTestControlIcon;\r\n        break;\r\n      case 'Tile':\r\n        this.hitTest = this._hitTestTile;\r\n        this.hoverTest = this._hoverTestArea;\r\n        break;\r\n      default:\r\n        this.hitTest = this._hitTestArea;\r\n        this.hoverTest = this._hoverTestArea;\r\n    }\r\n\r\n    // Create the brush overlay\r\n    this.brushOverlay = new PIXI.Container();\r\n    this.brushOverlay.hitArea = canvas.dimensions.rect;\r\n    this.brushOverlay.cursor = 'brush';\r\n    this.brushOverlay.interactive = true;\r\n    this.brushOverlay.zIndex = Infinity;\r\n\r\n    this.brushOverlay.on('mousemove', (event) => {\r\n      this._onBrushMove(event);\r\n      if (event.buttons === 1) this._onBrushClickMove(event);\r\n    });\r\n    this.brushOverlay.on('mouseup', (event) => {\r\n      if (event.nativeEvent.which !== 2) {\r\n        this._onBrushClickMove(event);\r\n      }\r\n      this.updatedPlaceables.clear();\r\n    });\r\n\r\n    this.brushOverlay.on('click', (event) => {\r\n      if (event.nativeEvent.which == 2) {\r\n        this.deactivate();\r\n      }\r\n    });\r\n\r\n    canvas.stage.addChild(this.brushOverlay);\r\n\r\n    // Disable canvas events to prevent selects and object placements on click\r\n    canvas.mouseInteractionManager.permissions.clickLeft = false;\r\n    // canvas.mouseInteractionManager.permissions.longPress = false;\r\n\r\n    return true;\r\n  }\r\n\r\n  static brush3dDelayMoveTimer;\r\n\r\n  static _on3dMouseMove() {\r\n    if (!this.brush3d || this.brush3dDelayMoveTimer) return;\r\n\r\n    const brush = this;\r\n    this.brush3dDelayMoveTimer = setTimeout(function () {\r\n      const mPos = game.Levels3DPreview.interactionManager.canvas3dMousePosition;\r\n      const cPos = game.Levels3DPreview.interactionManager.camera.position;\r\n\r\n      const intersects = game.Levels3DPreview.interactionManager.computeSightCollisionFrom3DPositions(\r\n        cPos,\r\n        mPos,\r\n        'collision',\r\n        false,\r\n        false,\r\n        false,\r\n        true\r\n      );\r\n\r\n      if (intersects[0]) {\r\n        const intersect = intersects[0];\r\n        brush.brush3d.position.set(intersect.point.x, intersect.point.y, intersect.point.z);\r\n      }\r\n      brush.brush3dDelayMoveTimer = null;\r\n    }, 100); // Will do the ajax stuff after 1000 ms, or 1 s\r\n  }\r\n\r\n  static deactivate3DListeners() {\r\n    game.Levels3DPreview.renderer.domElement.removeEventListener('click', this._boundOn3DBrushClick, false);\r\n    game.Levels3DPreview.renderer.domElement.removeEventListener('mousemove', this._boundOn3dMouseMove, false);\r\n  }\r\n\r\n  static _activate3DListeners() {\r\n    // Remove listeners if they are already set\r\n    this.deactivate3DListeners();\r\n\r\n    game.Levels3DPreview.renderer.domElement.addEventListener('click', this._boundOn3DBrushClick, false);\r\n    game.Levels3DPreview.renderer.domElement.addEventListener('mousemove', this._boundOn3dMouseMove, false);\r\n  }\r\n\r\n  static _activate3d() {\r\n    const THREE = game.Levels3DPreview.THREE;\r\n\r\n    if (!this.brush3d) {\r\n      this.brush3d = new THREE.Mesh(\r\n        new THREE.SphereGeometry(0.01, 8, 8),\r\n        new THREE.MeshBasicMaterial({\r\n          opacity: 0.5,\r\n          transparent: true,\r\n          color: 0x00ff00,\r\n          wireframe: true,\r\n        })\r\n      );\r\n\r\n      this.brush3d.userData.interactive = false;\r\n      this.brush3d.userData.ignoreHover = true;\r\n\r\n      const mPos = game.Levels3DPreview.interactionManager.canvas3dMousePosition;\r\n      this.brush3d.position.set(mPos.x, mPos.y, mPos.z);\r\n\r\n      game.Levels3DPreview.scene.add(this.brush3d);\r\n    }\r\n\r\n    // Activate listeners\r\n    this._activate3DListeners();\r\n\r\n    return true;\r\n  }\r\n\r\n  static deactivate() {\r\n    if (this.active) {\r\n      canvas.mouseInteractionManager.permissions.clickLeft = true;\r\n      //canvas.mouseInteractionManager.permissions.longPress = true;\r\n      if (this.brushOverlay) this.brushOverlay.parent?.removeChild(this.brushOverlay);\r\n      if (this.brush3d && game.Levels3DPreview?._active) {\r\n        game.Levels3DPreview.scene.remove(this.brush3d);\r\n        this.brush3d = null;\r\n        this.deactivate3DListeners();\r\n      }\r\n      this.active = false;\r\n      this.updatedPlaceables.clear();\r\n      this._clearHover(null, null, true);\r\n      this.hoverTest = null;\r\n      this.deactivateCallback?.();\r\n      this.deactivateCallback = null;\r\n      this.app = null;\r\n      this.preset = null;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async _animateCrossTranslate(x, y) {\r\n    let cross = new PIXI.Text('+', {\r\n      fontFamily: 'Arial',\r\n      fontSize: 11,\r\n      fill: 0x00ff11,\r\n      align: 'center',\r\n    });\r\n    cross = this.brushOverlay.addChild(cross);\r\n    cross.x = x + Math.random() * 16 - 8;\r\n    cross.y = y;\r\n    const translate = [{ parent: cross, attribute: 'y', to: y - 50 }];\r\n\r\n    const completed = await CanvasAnimation.animate(translate, {\r\n      duration: 700,\r\n      name: foundry.utils.randomID(5),\r\n    });\r\n    if (completed) {\r\n      this.brushOverlay.removeChild(cross).destroy();\r\n    }\r\n  }\r\n}\r\n","import { MODULE_ID, SUPPORTED_PLACEABLES } from '../utils.js';\r\nimport { META_INDEX_FIELDS, META_INDEX_ID } from './collection.js';\r\nimport { placeableToData } from './utils.js';\r\n\r\nconst DOCUMENT_FIELDS = ['id', 'name', 'sort', 'folder'];\r\n\r\nconst PRESET_FIELDS = [\r\n  'id',\r\n  'name',\r\n  'data',\r\n  'sort',\r\n  'folder',\r\n  'uuid',\r\n  'documentName',\r\n  'addSubtract',\r\n  'randomize',\r\n  'img',\r\n  'gridSize',\r\n  'modifyOnSpawn',\r\n  'preSpawnScript',\r\n  'postSpawnScript',\r\n  'spawnRandom',\r\n  'attached',\r\n  'tags',\r\n];\r\n\r\nexport const DOC_ICONS = {\r\n  ALL: 'fas fa-globe',\r\n  Token: 'fas fa-user-circle',\r\n  MeasuredTemplate: 'fas fa-ruler-combined',\r\n  Tile: 'fa-solid fa-cubes',\r\n  Drawing: 'fa-solid fa-pencil-alt',\r\n  Wall: 'fa-solid fa-block-brick',\r\n  AmbientLight: 'fa-regular fa-lightbulb',\r\n  AmbientSound: 'fa-solid fa-music',\r\n  Note: 'fa-solid fa-bookmark',\r\n  Actor: 'fas fa-user-alt',\r\n  Scene: 'fas fa-map',\r\n  DEFAULT: 'fa-solid fa-question',\r\n};\r\n\r\nexport class Preset {\r\n  static name = 'Preset';\r\n  document;\r\n\r\n  constructor(data) {\r\n    this.id = data.id ?? data._id ?? foundry.utils.randomID();\r\n    this.name = data.name ?? 'Mass Edit Preset';\r\n    this.documentName = data.documentName;\r\n    this.sort = data.sort ?? 0;\r\n    this.tags = data.tags ?? [];\r\n    this.addSubtract =\r\n      data.addSubtract instanceof Array\r\n        ? Object.fromEntries(data.addSubtract)\r\n        : foundry.utils.deepClone(data.addSubtract ?? {});\r\n    this.randomize =\r\n      data.randomize instanceof Array\r\n        ? Object.fromEntries(data.randomize)\r\n        : foundry.utils.deepClone(data.randomize ?? {});\r\n    this.data = foundry.utils.deepClone(data.data);\r\n    this.img = data.img;\r\n    this.folder = data.folder;\r\n    this.uuid = data.uuid;\r\n    this.gridSize = data.gridSize;\r\n    this.modifyOnSpawn = data.modifyOnSpawn;\r\n    this.preSpawnScript = data.preSpawnScript;\r\n    this.postSpawnScript = data.postSpawnScript;\r\n    this.attached = data.attached;\r\n    this.spawnRandom = data.spawnRandom;\r\n    this._visible = true;\r\n    this._render = true;\r\n  }\r\n\r\n  get visible() {\r\n    return this._visible && this._render;\r\n  }\r\n\r\n  get icon() {\r\n    return DOC_ICONS[this.documentName] ?? DOC_ICONS.DEFAULT;\r\n  }\r\n\r\n  get thumbnail() {\r\n    return this.img || CONST.DEFAULT_TOKEN;\r\n  }\r\n\r\n  get pages() {\r\n    if (this.document?.pages.size) return this.document.toJSON().pages;\r\n    else if (this._pages) return this._pages;\r\n    return null;\r\n  }\r\n\r\n  set data(data) {\r\n    if (data instanceof Array) this._data = data;\r\n    else if (data == null) this._data = null;\r\n    else this._data = [data];\r\n  }\r\n\r\n  get isPlaceable() {\r\n    return SUPPORTED_PLACEABLES.includes(this.documentName);\r\n  }\r\n\r\n  get data() {\r\n    return this._data;\r\n  }\r\n\r\n  /**\r\n   * Loads underlying JournalEntry document from the compendium\r\n   * @returns this\r\n   */\r\n  async load() {\r\n    if (!this.document && this.uuid) {\r\n      this.document = await fromUuid(this.uuid);\r\n      if (this.document) {\r\n        const preset = this.document.getFlag(MODULE_ID, 'preset') ?? {};\r\n        this.documentName = preset.documentName;\r\n        this.img = preset.img;\r\n        this.data = preset.data;\r\n        this.randomize =\r\n          foundry.utils.getType(preset.randomize) === 'Object'\r\n            ? preset.randomize\r\n            : Object.fromEntries(preset.randomize ?? []);\r\n        this.addSubtract =\r\n          foundry.utils.getType(preset.addSubtract) === 'Object'\r\n            ? preset.addSubtract\r\n            : Object.fromEntries(preset.addSubtract ?? []);\r\n        this.gridSize = preset.gridSize;\r\n        this.modifyOnSpawn = preset.modifyOnSpawn;\r\n        this.preSpawnScript = preset.preSpawnScript;\r\n        this.postSpawnScript = preset.postSpawnScript;\r\n        this.attached = preset.attached;\r\n        this.spawnRandom = preset.spawnRandom;\r\n        this.tags = preset.tags ?? [];\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  async openJournal() {\r\n    if (!this.document) await this.load();\r\n    if (this.document) this.document.sheet.render(true);\r\n  }\r\n\r\n  /**\r\n   * Attach placeables\r\n   * @param {Placeable|Array[Placeable]} placeables\r\n   * @returns\r\n   */\r\n  async attach(placeables) {\r\n    if (!placeables) return;\r\n    if (!(placeables instanceof Array)) placeables = [placeables];\r\n\r\n    if (!this.attached) this.attached = [];\r\n    for (const placeable of placeables) {\r\n      this.attached.push({ documentName: placeable.document.documentName, data: placeableToData(placeable) });\r\n    }\r\n\r\n    await this.update({ attached: this.attached });\r\n  }\r\n\r\n  /**\r\n   * Update preset with the provided data\r\n   * @param {Object} update\r\n   */\r\n  async update(update) {\r\n    if (this.document) {\r\n      const flagUpdate = {};\r\n      Object.keys(update).forEach((k) => {\r\n        if (k === 'randomize' || k === 'addSubtract') {\r\n          flagUpdate[k] = Object.entries(update[k]);\r\n          this[k] = update[k];\r\n        } else if (k === 'data' && !(update.data instanceof Array)) {\r\n          flagUpdate.data = this.data.map((d) => {\r\n            return foundry.utils.mergeObject(d, update.data);\r\n          });\r\n          this.data = flagUpdate.data;\r\n        } else if (PRESET_FIELDS.includes(k) && update[k] !== this[k]) {\r\n          flagUpdate[k] = update[k];\r\n          this[k] = update[k];\r\n        }\r\n      });\r\n\r\n      if (!foundry.utils.isEmpty(flagUpdate)) {\r\n        const docUpdate = { flags: { [MODULE_ID]: { preset: flagUpdate } } };\r\n        DOCUMENT_FIELDS.forEach((field) => {\r\n          if (field in flagUpdate && this.document[field] !== flagUpdate[field]) {\r\n            docUpdate[field] = flagUpdate[field];\r\n          }\r\n        });\r\n\r\n        await this.document.update(docUpdate);\r\n      }\r\n      await this._updateIndex(flagUpdate);\r\n    } else {\r\n      console.warn('Updating preset without document', this.id, this.uuid, this.name);\r\n    }\r\n  }\r\n\r\n  async _updateIndex(data) {\r\n    const update = {};\r\n\r\n    META_INDEX_FIELDS.forEach((field) => {\r\n      if (field in data) update[field] = data[field];\r\n    });\r\n\r\n    if (!foundry.utils.isEmpty(update)) {\r\n      const pack = game.packs.get(this.document.pack);\r\n      const metaDoc = await pack.getDocument(META_INDEX_ID);\r\n      if (metaDoc) {\r\n        let tmp = {};\r\n        tmp[this.id] = update;\r\n        await metaDoc.setFlag(MODULE_ID, 'index', tmp);\r\n      } else {\r\n        console.warn(`META INDEX missing in ${this.document.pack}`);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  toJSON() {\r\n    let json = {};\r\n    PRESET_FIELDS.forEach((field) => {\r\n      json[field] = this[field];\r\n    });\r\n\r\n    json.randomize = Object.entries(json.randomize ?? {});\r\n    json.addSubtract = Object.entries(json.addSubtract ?? []);\r\n    const pages = this.pages;\r\n    if (pages) json.pages = pages;\r\n\r\n    return json;\r\n  }\r\n\r\n  clone() {\r\n    const clone = new Preset(this.toJSON());\r\n    clone.document = this.document;\r\n    return clone;\r\n  }\r\n}\r\n","import { Brush } from '../brush.js';\r\nimport { Picker } from '../picker.js';\r\nimport { applyRandomization } from '../randomizer/randomizerUtils.js';\r\nimport {\r\n  MODULE_ID,\r\n  SUPPORTED_PLACEABLES,\r\n  SeededRandom,\r\n  UI_DOCS,\r\n  applyPresetToScene,\r\n  createDocuments,\r\n  executeScript,\r\n  localize,\r\n} from '../utils.js';\r\nimport { Preset } from './preset.js';\r\nimport {\r\n  FolderState,\r\n  mergePresetDataToDefaultDoc,\r\n  modifySpawnData,\r\n  placeableToData,\r\n  scaleDataToGrid,\r\n} from './utils.js';\r\n\r\nexport const DEFAULT_PACK = 'world.mass-edit-presets-main';\r\nexport const META_INDEX_ID = 'MassEditMetaData';\r\nexport const META_INDEX_FIELDS = ['id', 'img', 'documentName', 'tags'];\r\n\r\nexport class PresetCollection {\r\n  static presets;\r\n\r\n  static workingPack;\r\n\r\n  static async getTree(type, mainOnly = false) {\r\n    let pack;\r\n    let mainTree;\r\n    try {\r\n      pack = await this._initCompendium(this.workingPack);\r\n      mainTree = await this.packToTree(pack, type);\r\n    } catch (e) {\r\n      // Fail-safe. Return back to DEFAULT_PACK\r\n      console.log(e);\r\n      console.log(`FAILED TO LOAD WORKING COMPENDIUM {${this.workingPack}}`);\r\n      console.log('RETURNING TO DEFAULT');\r\n      await game.settings.set(MODULE_ID, 'workingPack', DEFAULT_PACK);\r\n      this.workingPack = DEFAULT_PACK;\r\n      pack = await this._initCompendium(this.workingPack);\r\n      mainTree = await this.packToTree(pack, type);\r\n    }\r\n\r\n    const extFolders = [];\r\n\r\n    if (!mainOnly) {\r\n      for (const p of game.packs) {\r\n        if (p.collection !== this.workingPack && p.index.get(META_INDEX_ID)) {\r\n          const tree = await this.packToTree(p, type);\r\n          if (!tree.hasVisible) continue;\r\n\r\n          const topFolder = new PresetPackFolder({ pack: p, tree });\r\n          extFolders.push(topFolder);\r\n\r\n          // Collate all folders with the main tree\r\n          mainTree.allFolders.set(topFolder.uuid, topFolder);\r\n          for (const [uuid, folder] of tree.allFolders) {\r\n            mainTree.allFolders.set(uuid, folder);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    mainTree.extFolders = this._groupExtFolders(extFolders, mainTree.allFolders);\r\n\r\n    return mainTree;\r\n  }\r\n\r\n  static async packToTree(pack, type) {\r\n    if (!pack) return null;\r\n\r\n    // Setup folders ready for parent/children processing\r\n    const folders = new Map();\r\n    const topLevelFolders = new Map();\r\n    const folderContents = pack.folders.contents;\r\n    for (const f of folderContents) {\r\n      const folder = new PresetFolder({\r\n        id: f._id,\r\n        uuid: f.uuid,\r\n        name: f.name,\r\n        sorting: f.sorting,\r\n        color: f.color,\r\n        sort: f.sort,\r\n        draggable: f.pack === this.workingPack,\r\n        folder: f.folder?.uuid,\r\n        visible: type ? (f.flags[MODULE_ID]?.types || ['ALL']).includes(type) : true,\r\n      });\r\n      folders.set(folder.uuid, folder);\r\n      topLevelFolders.set(f.uuid, folder);\r\n    }\r\n\r\n    // If folders have parent folders add them as children and remove them as a top level folder\r\n    for (const f of folderContents) {\r\n      if (f.folder) {\r\n        const parent = folders.get(f.folder.uuid);\r\n        parent.children.push(folders.get(f.uuid));\r\n        topLevelFolders.delete(f.uuid);\r\n      }\r\n    }\r\n\r\n    // Process presets\r\n    const allPresets = [];\r\n    const topLevelPresets = [];\r\n    let hasVisible = false; // tracks whether there exists at least one visible preset within this tree\r\n    const metaDoc = await pack.getDocument(META_INDEX_ID);\r\n    let metaIndex = metaDoc?.getFlag(MODULE_ID, 'index');\r\n\r\n    const index = pack.index.contents;\r\n\r\n    // TEMP - 06/03/2024\r\n    // Due to poor implementation of Folder+Folder Content delete, there are likely to be some indexes which were not removed\r\n    // Lets clean them up here for now\r\n    PresetCollection._cleanIndex(pack, metaDoc, metaIndex);\r\n\r\n    // Remove after sufficient enough time has passed to have reasonable confidence that All/Most users have executed this ^\r\n\r\n    for (const idx of index) {\r\n      if (idx._id === META_INDEX_ID) continue;\r\n      const mIndex = metaIndex[idx._id];\r\n      const preset = new Preset({ ...idx, ...mIndex, pack: pack.collection });\r\n\r\n      // If no document name is available (missing metadata) attempt to load the preset to retrieve it\r\n      // If still no name is found, skip it\r\n      if (!preset.documentName) {\r\n        console.log(`Missing MetaData. Attempting document load: ${preset.id} | ${preset.name}`);\r\n        await preset.load();\r\n        if (!preset.documentName) continue;\r\n        if (!pack.locked) preset._updateIndex(preset); // Insert missing preset into metadata index\r\n      }\r\n\r\n      if (preset.folder) {\r\n        let matched = false;\r\n        for (const [uuid, folder] of folders) {\r\n          if (folder.id === preset.folder) {\r\n            folder.presets.push(preset);\r\n            matched = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!matched) topLevelPresets.push(preset);\r\n      } else topLevelPresets.push(preset);\r\n\r\n      if (type) {\r\n        if (type === 'ALL') {\r\n          if (!UI_DOCS.includes(preset.documentName)) preset._visible = false;\r\n        } else if (preset.documentName !== type) preset._visible = false;\r\n      }\r\n\r\n      allPresets.push(preset);\r\n      hasVisible |= preset._visible;\r\n    }\r\n\r\n    // Sort folders\r\n    const sorting = game.settings.get(MODULE_ID, 'presetSortMode') === 'manual' ? 'm' : 'a';\r\n    const sortedFolders = this._sortFolders(Array.from(topLevelFolders.values()), sorting);\r\n    const sortedPresets = this._sortPresets(topLevelPresets, sorting);\r\n\r\n    return {\r\n      folders: sortedFolders,\r\n      presets: sortedPresets,\r\n      allPresets,\r\n      allFolders: folders,\r\n      hasVisible,\r\n      metaDoc,\r\n    };\r\n  }\r\n\r\n  static _groupExtFolders(folders, allFolders) {\r\n    folders = folders.sort((f1, f2) => f1.name.localeCompare(f2.name));\r\n\r\n    const groups = {};\r\n    const groupless = [];\r\n    folders.forEach((f) => {\r\n      if (f.group) {\r\n        if (!(f.group in groups)) groups[f.group] = [];\r\n        groups[f.group].push(f);\r\n      } else {\r\n        groupless.push(f);\r\n      }\r\n    });\r\n\r\n    const newExtFolders = [];\r\n    for (const [group, folders] of Object.entries(groups)) {\r\n      const id = SeededRandom.randomID(group); // For export operation a real ID is needed. Lets keep it consistent by seeding\r\n      const uuid = 'virtual.' + group; // faux uuid\r\n\r\n      const groupFolder = new PresetVirtualFolder({\r\n        id,\r\n        uuid,\r\n        name: group,\r\n        children: folders,\r\n        draggable: false,\r\n      });\r\n\r\n      allFolders.set(uuid, groupFolder);\r\n      newExtFolders.push(groupFolder);\r\n    }\r\n\r\n    return newExtFolders.concat(groupless).sort((f1, f2) => f1.name.localeCompare(f2.name));\r\n  }\r\n\r\n  // Fixing meta index by removing loose indexes\r\n  // 06/03/2024\r\n  static async _cleanIndex(pack, metaDoc, metaIndex) {\r\n    if (pack.locked || !metaDoc || foundry.utils.isEmpty(metaIndex)) return;\r\n    const index = pack.index;\r\n\r\n    const update = {};\r\n    for (const idx of Object.keys(metaIndex)) {\r\n      if (!index.has(idx)) update['-=' + idx] = null;\r\n    }\r\n\r\n    if (!foundry.utils.isEmpty(update)) metaDoc.setFlag(MODULE_ID, 'index', update);\r\n  }\r\n\r\n  static _sortFolders(folders, sorting = 'a') {\r\n    for (const folder of folders) {\r\n      folder.children = this._sortFolders(folder.children, folder.sorting);\r\n      folder.presets = this._sortPresets(folder.presets, folder.sorting);\r\n    }\r\n\r\n    if (sorting === 'a') return folders.sort((f1, f2) => f1.name.localeCompare(f2.name, 'en', { numeric: true }));\r\n    else return folders.sort((f1, f2) => f1.sort - f2.sort);\r\n  }\r\n\r\n  static _sortPresets(presets, sorting = 'a') {\r\n    if (sorting === 'a') return presets.sort((p1, p2) => p1.name.localeCompare(p2.name, 'en', { numeric: true }));\r\n    else return presets.sort((p1, p2) => p1.sort - p2.sort);\r\n  }\r\n\r\n  static async packToPresets(pack) {\r\n    if (!pack) return [];\r\n\r\n    const presets = [];\r\n\r\n    let metaIndex = (await pack.getDocument(META_INDEX_ID))?.getFlag(MODULE_ID, 'index');\r\n\r\n    const index = pack.index.contents;\r\n    for (const idx of index) {\r\n      if (idx._id === META_INDEX_ID) continue;\r\n      const mIndex = metaIndex[idx._id];\r\n      const preset = new Preset({ ...idx, ...mIndex, pack: pack.collection });\r\n      presets.push(preset);\r\n    }\r\n\r\n    return presets;\r\n  }\r\n\r\n  static async update(preset) {\r\n    const compendium = await this._initCompendium(this.workingPack);\r\n    const doc = await compendium.getDocument(preset.id);\r\n    const updateDoc = {\r\n      name: preset.name,\r\n      flags: { [MODULE_ID]: { preset: preset.toJSON() } },\r\n    };\r\n    const pages = preset.pages;\r\n    if (pages) updateDoc.pages = pages;\r\n    await doc.update(updateDoc);\r\n\r\n    const metaDoc = await this._initMetaDocument(this.workingPack);\r\n    const update = {};\r\n    META_INDEX_FIELDS.forEach((f) => {\r\n      update[f] = preset[f];\r\n    });\r\n\r\n    await metaDoc.setFlag(MODULE_ID, 'index', { [preset.id]: update });\r\n  }\r\n\r\n  /**\r\n   * Update multiple presets at the same time\r\n   * @param {*} updates\r\n   */\r\n  static async updatePresets(updates) {\r\n    // TODO update meta and preset itself\r\n    await JournalEntry.updateDocuments(updates, { pack: this.workingPack });\r\n  }\r\n\r\n  /**\r\n   * @param {Preset|Array[Preset]} preset\r\n   */\r\n  static async set(preset, pack) {\r\n    if (!pack) pack = this.workingPack;\r\n\r\n    if (preset instanceof Array) {\r\n      for (const p of preset) {\r\n        await PresetCollection.set(p, pack);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const compendium = await this._initCompendium(pack);\r\n    if (compendium.index.get(preset.id)) {\r\n      await this.update(preset);\r\n      return;\r\n    }\r\n\r\n    const documents = await JournalEntry.createDocuments(\r\n      [\r\n        {\r\n          _id: preset.id,\r\n          name: preset.name,\r\n          pages: preset.pages ?? [],\r\n          folder: preset.folder,\r\n          flags: { [MODULE_ID]: { preset: preset.toJSON() } },\r\n        },\r\n      ],\r\n      {\r\n        pack: pack,\r\n        keepId: true,\r\n      }\r\n    );\r\n\r\n    preset.uuid = documents[0].uuid;\r\n    preset.document = documents[0];\r\n\r\n    const metaDoc = await this._initMetaDocument(pack);\r\n    const update = {};\r\n\r\n    META_INDEX_FIELDS.forEach((f) => {\r\n      update[f] = preset[f];\r\n    });\r\n\r\n    await metaDoc.setFlag(MODULE_ID, 'index', { [preset.id]: update });\r\n  }\r\n\r\n  static async get(uuid, { full = true } = {}) {\r\n    let { collection, documentId, documentType, embedded, doc } = foundry.utils.parseUuid(uuid);\r\n    const index = collection.index.get(documentId);\r\n\r\n    if (index) {\r\n      const metaIndex = (await collection.getDocument(META_INDEX_ID))?.getFlag(MODULE_ID, 'index');\r\n      const mIndex = metaIndex[index._id];\r\n\r\n      const preset = new Preset({ ...index, ...mIndex, pack: collection.collection });\r\n      if (full) await preset.load();\r\n      return preset;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @param {Preset|Array[Preset]} preset\r\n   */\r\n  static async delete(presets) {\r\n    if (!presets) return;\r\n    if (!(presets instanceof Array)) presets = [presets];\r\n\r\n    // Sort by compendium\r\n    const sorted = {};\r\n    for (const preset of presets) {\r\n      let { collection } = foundry.utils.parseUuid(preset.uuid);\r\n      collection = collection.collection;\r\n      if (!sorted[collection]) sorted[collection] = [preset];\r\n      else sorted[collection].push(preset);\r\n    }\r\n\r\n    for (const pack of Object.keys(sorted)) {\r\n      const compendium = await game.packs.get(pack);\r\n      if (!compendium) continue;\r\n\r\n      const metaDoc = await this._initMetaDocument(pack);\r\n      const metaUpdate = {};\r\n\r\n      const deleteIds = [];\r\n      for (const preset of sorted[pack]) {\r\n        deleteIds.push(preset.id);\r\n        metaUpdate['-=' + preset.id] = null;\r\n      }\r\n\r\n      await JournalEntry.deleteDocuments(deleteIds, { pack });\r\n      metaDoc.setFlag(MODULE_ID, 'index', metaUpdate);\r\n    }\r\n  }\r\n\r\n  static async _initCompendium(pack) {\r\n    let compendium = game.packs.get(pack);\r\n    if (!compendium && pack === DEFAULT_PACK) {\r\n      compendium = await CompendiumCollection.createCompendium({\r\n        label: 'Mass Edit: Presets (MAIN)',\r\n        type: 'JournalEntry',\r\n        ownership: {\r\n          GAMEMASTER: 'NONE',\r\n          PLAYER: 'NONE',\r\n          ASSISTANT: 'NONE',\r\n        },\r\n        packageType: 'world',\r\n      });\r\n\r\n      await this._initMetaDocument(pack);\r\n    }\r\n\r\n    return compendium;\r\n  }\r\n\r\n  static async _initMetaDocument(pack) {\r\n    const compendium = game.packs.get(pack);\r\n    const metaDoc = await compendium.getDocument(META_INDEX_ID);\r\n    if (metaDoc) return metaDoc;\r\n\r\n    const documents = await JournalEntry.createDocuments(\r\n      [\r\n        {\r\n          _id: META_INDEX_ID,\r\n          name: '!!! METADATA: DO NOT DELETE !!!',\r\n          flags: { [MODULE_ID]: { index: {} } },\r\n        },\r\n      ],\r\n      {\r\n        pack: pack,\r\n        keepId: true,\r\n      }\r\n    );\r\n    return documents[0];\r\n  }\r\n\r\n  static async deleteFolder(uuid, deleteAll = false) {\r\n    const folderDoc = await fromUuid(uuid);\r\n    if (folderDoc.compendium.locked) return;\r\n\r\n    if (deleteAll) {\r\n      const metaDoc = folderDoc.compendium.get(META_INDEX_ID);\r\n      if (!metaDoc) return;\r\n\r\n      const metaUpdate = {};\r\n      const traverseFolder = function (folder) {\r\n        folder.contents.forEach((j) => (metaUpdate['-=' + j._id] = null));\r\n        folder.children.forEach((c) => traverseFolder(c.folder));\r\n      };\r\n      traverseFolder(folderDoc);\r\n\r\n      metaDoc.setFlag(MODULE_ID, 'index', metaUpdate);\r\n    }\r\n\r\n    return await folderDoc.delete({ deleteSubfolders: deleteAll, deleteContents: deleteAll });\r\n  }\r\n\r\n  static _searchPresetTree(tree, options) {\r\n    const presets = [];\r\n\r\n    if (!options.folder) this._searchPresetList(tree.allPresets, presets, options);\r\n    tree.allFolders.forEach((folder) => this._searchPresetFolder(folder, presets, options));\r\n\r\n    return presets;\r\n  }\r\n\r\n  static _searchPresetFolder(folder, presets, options) {\r\n    if (options.folder && folder.name !== options.folder) return;\r\n    this._searchPresetList(folder.presets, presets, options, folder.name);\r\n  }\r\n\r\n  static _searchPresetList(toSearch, presets, { name, type, tags } = {}, folderName) {\r\n    for (const preset of toSearch) {\r\n      let match = true;\r\n      if (name && name !== preset.name) match = false;\r\n      if (type && type !== preset.documentName) match = false;\r\n      if (match && tags) {\r\n        if (tags.matchAny) match = tags.tags.some((t) => preset.tags.includes(t));\r\n        else match = tags.tags.every((t) => preset.tags.includes(t));\r\n      }\r\n\r\n      if (match) presets.push(preset);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Build preset index for 'Spotlight Omnisearch' module\r\n   * @param {Array[CONFIG.SpotlightOmniseach.SearchTerm]} soIndex\r\n   */\r\n  static async buildSpotlightOmnisearchIndex(soIndex) {\r\n    const tree = await PresetCollection.getTree();\r\n\r\n    const SearchTerm = CONFIG.SpotlightOmniseach.SearchTerm;\r\n\r\n    const onClick = async function () {\r\n      if (SUPPORTED_PLACEABLES.includes(this.data.documentName)) {\r\n        ui.spotlightOmnisearch?.setDraggingState(true);\r\n        await PresetAPI.spawnPreset({\r\n          preset: this.data,\r\n          coordPicker: true,\r\n          taPreview: 'ALL',\r\n          scaleToGrid: game.settings.get(MODULE_ID, 'presetScaling'),\r\n        });\r\n        ui.spotlightOmnisearch?.setDraggingState(false);\r\n      }\r\n    };\r\n\r\n    const onDragEnd = function (event) {\r\n      if (SUPPORTED_PLACEABLES.includes(this.data.documentName)) {\r\n        const { x, y } = canvas.canvasCoordinatesFromClient({ x: event.clientX, y: event.clientY });\r\n        PresetAPI.spawnPreset({\r\n          preset: this.data,\r\n          x,\r\n          y,\r\n          scaleToGrid: game.settings.get(MODULE_ID, 'presetScaling'),\r\n        });\r\n      } else if (this.data.documentName === 'Scene') {\r\n        applyPresetToScene(this.data);\r\n      }\r\n    };\r\n\r\n    const deactivateCallback = function () {\r\n      ui.spotlightOmnisearch?.setDraggingState(false);\r\n    };\r\n\r\n    const getActions = function () {\r\n      const actions = [\r\n        {\r\n          name: 'MassEdit.presets.open-journal',\r\n          icon: '<i class=\"fas fa-book-open fa-fw\"></i>',\r\n          callback: () => {\r\n            this.data.openJournal();\r\n          },\r\n        },\r\n      ];\r\n      if (SUPPORTED_PLACEABLES.includes(this.data.documentName)) {\r\n        actions.push({\r\n          name: `MassEdit.presets.controls.activate-brush`,\r\n          icon: '<i class=\"fas fa-paint-brush\"></i>',\r\n          callback: async () => {\r\n            canvas.getLayerByEmbeddedName(this.data.documentName)?.activate();\r\n            if (Brush.activate({ preset: await this.data.load(), deactivateCallback })) {\r\n              ui.spotlightOmnisearch.setDraggingState(true);\r\n            }\r\n          },\r\n        });\r\n      }\r\n      return actions;\r\n    };\r\n\r\n    const buildTerm = function (preset) {\r\n      soIndex.push(\r\n        new SearchTerm({\r\n          name: preset.name,\r\n          description: 'Mass Edit: Preset',\r\n          type: preset.documentName + ' preset',\r\n          img: preset.img,\r\n          icon: ['fa-solid fa-books', preset.icon],\r\n          keywords: preset.tags,\r\n          onClick,\r\n          onDragEnd,\r\n          data: preset,\r\n          actions: getActions,\r\n        })\r\n      );\r\n    };\r\n\r\n    tree.presets.forEach(buildTerm);\r\n    tree.allFolders.forEach((f) => f.presets.forEach(buildTerm));\r\n  }\r\n}\r\n\r\nexport class PresetAPI {\r\n  static name = 'PresetAPI';\r\n\r\n  /**\r\n   * Retrieve preset\r\n   * @param {object} [options={}]\r\n   * @param {String} [options.uuid]                      Preset UUID\r\n   * @param {String} [options.name]                      Preset name\r\n   * @param {String} [options.type]                      Preset type (\"Token\", \"Tile\", etc)\r\n   * @param {String|Array[String]|Object} [options.tags] Tags to match a preset against. Can be provided as an object containing 'tags' array and 'match' any flag.\r\n   *                                                     Comma separated string, or a list of strings. In the latter 2 case 'matchAny' is assumed true\r\n   * @param {String} [options.folder]  Folder name\r\n   * @returns {Preset}\r\n   */\r\n  static async getPreset({ uuid, name, type, folder, tags } = {}) {\r\n    if (uuid) return await PresetCollection.get(uuid);\r\n    else if (!name && !type && !folder && !tags)\r\n      throw Error('UUID, Name, Type, and/or Folder required to retrieve a Preset.');\r\n\r\n    if (tags) {\r\n      if (Array.isArray(tags)) tags = { tags, matchAny: true };\r\n      else if (typeof tags === 'string') tags = { tags: tags.split(','), matchAny: true };\r\n    }\r\n\r\n    const presets = PresetCollection._searchPresetTree(await PresetCollection.getTree(), {\r\n      name,\r\n      type,\r\n      folder,\r\n      tags,\r\n    });\r\n\r\n    const preset = presets[Math.floor(Math.random() * presets.length)];\r\n    return preset?.clone().load();\r\n  }\r\n\r\n  /**\r\n   * Retrieve presets\r\n   * @param {object} [options={}]\r\n   * @param {String} [options.uuid]                      Preset UUID\r\n   * @param {String} [options.name]                      Preset name\r\n   * @param {String} [options.type]                      Preset type (\"Token\", \"Tile\", etc)\r\n   * @param {String} [options.folder]                    Folder name\r\n   * @param {String|Array[String]|Object} [options.tags] See PresetAPI.getPreset\r\n   * @param {String} [options.format]                    The form to return placeables in ('preset', 'name', 'nameAndFolder')\r\n   * @returns {Array[Preset]|Array[String]|Array[Object]}\r\n   */\r\n  static async getPresets({ uuid, name, type, folder, format = 'preset', tags } = {}) {\r\n    if (uuid) return await PresetCollection.get(uuid);\r\n    else if (!name && !type && !folder && !tags)\r\n      throw Error('UUID, Name, Type, Folder and/or Tags required to retrieve a Preset.');\r\n\r\n    if (tags) {\r\n      if (Array.isArray(tags)) tags = { tags, matchAny: true };\r\n      else if (typeof tags === 'string') tags = { tags: tags.split(','), matchAny: true };\r\n    }\r\n\r\n    const presets = PresetCollection._searchPresetTree(await PresetCollection.getTree(), {\r\n      name,\r\n      type,\r\n      folder,\r\n      tags,\r\n    });\r\n\r\n    if (format === 'name') return presets.map((p) => p.name);\r\n    else if (format === 'nameAndFolder')\r\n      return presets.map((p) => {\r\n        return { name: p.name, folder: p._folderName };\r\n      });\r\n    return presets;\r\n  }\r\n\r\n  /**\r\n   * Create a Token preset from the provided Actor\r\n   */\r\n  static async createPresetFromActor(actor, { keepId = false, folder } = {}) {\r\n    if (!actor || actor.documentName !== 'Actor') return;\r\n\r\n    const presetData = {\r\n      id: keepId ? actor.id : null,\r\n      name: actor.name,\r\n      documentName: 'Token',\r\n      img: actor.img,\r\n      data: [actor.prototypeToken.toJSON()],\r\n      folder: folder,\r\n    };\r\n\r\n    presetData.gridSize = canvas.scene.grid.size;\r\n\r\n    const preset = new Preset(presetData);\r\n    await PresetCollection.set(preset);\r\n    return preset;\r\n  }\r\n\r\n  static async createPresetFromActorUuid(uuid, options = {}) {\r\n    const actor = await fromUuid(uuid);\r\n    if (!actor.documentName === 'Actor') return;\r\n\r\n    return await this.createPresetFromActor(actor, options);\r\n  }\r\n\r\n  /**\r\n   * Create Presets from passed in placeables\r\n   * @param {PlaceableObject|Array[PlaceableObject]} placeables Placeable/s to create the presets from.\r\n   * @param {object} [options={}]                               Optional Preset information\r\n   * @param {String} [options.name]                             Preset name\r\n   * @param {String} [options.img]                              Preset thumbnail image\r\n   * @returns {Preset|Array[Preset]}\r\n   */\r\n  static async createPreset(placeables, options = {}) {\r\n    if (!placeables) return;\r\n    if (!(placeables instanceof Array)) placeables = [placeables];\r\n\r\n    // Alike placeables will be made into single presets. Lets batch them up together.\r\n\r\n    const groups = {};\r\n    for (const placeable of placeables) {\r\n      const docName = placeable.document.documentName;\r\n      if (!groups.hasOwnProperty(docName)) groups[docName] = [];\r\n      groups[docName].push(placeable);\r\n    }\r\n\r\n    const presets = [];\r\n    for (const [docName, placeables] of Object.entries(groups)) {\r\n      const data = [];\r\n      for (const placeable of placeables) {\r\n        data.push(placeableToData(placeable));\r\n      }\r\n\r\n      // Preset data before merging with user provided\r\n      const defPreset = {\r\n        name: localize('presets.default-name'),\r\n        documentName: docName,\r\n        data: data,\r\n      };\r\n\r\n      // Assign preset image\r\n      switch (defPreset.documentName) {\r\n        case 'Token':\r\n        case 'Tile':\r\n        case 'Note':\r\n          defPreset.img = data[0].texture.src;\r\n          break;\r\n        case 'AmbientSound':\r\n          defPreset.img = 'icons/svg/sound.svg';\r\n          break;\r\n        case 'AmbientLight':\r\n          defPreset.img = 'icons/svg/light.svg';\r\n          break;\r\n        case 'Drawing':\r\n          defPreset.img = 'icons/svg/acid.svg';\r\n          break;\r\n        case 'MeasuredTemplate':\r\n          defPreset.img = 'icons/svg/circle.svg';\r\n          break;\r\n      }\r\n\r\n      //  Assign preset name\r\n      switch (defPreset.documentName) {\r\n        case 'Token':\r\n          defPreset.name = data[0].name;\r\n          break;\r\n        default:\r\n          const taggerTag = data[0].flags?.tagger?.tags?.[0];\r\n          if (taggerTag) defPreset.name = taggerTag;\r\n          break;\r\n      }\r\n\r\n      defPreset.gridSize = placeables[0].document.parent.grid.size;\r\n\r\n      foundry.utils.mergeObject(defPreset, options, { inplace: true });\r\n\r\n      const preset = new Preset(defPreset);\r\n      await PresetCollection.set(preset);\r\n      presets.push(preset);\r\n    }\r\n\r\n    return presets;\r\n  }\r\n\r\n  /**\r\n   * Spawn a preset on the scene (uuid, name or preset itself are required).\r\n   * By default the current mouse position is used.\r\n   * @param {object} [options={}]\r\n   * @param {Preset} [options.preset]                    Preset\r\n   * @param {String} [options.uuid]                      Preset UUID\r\n   * @param {String} [options.name]                      Preset name\r\n   * @param {String} [options.type]                      Preset type (\"Token\", \"Tile\", etc)\r\n   * @param {String|Array[String]|Object} [options.tags] Preset tags, See PresetAPI.getPreset\r\n   * @param {Number} [options.x]                         Spawn canvas x coordinate (mouse position used if x or y are null)\r\n   * @param {Number} [options.y]                         Spawn canvas y coordinate (mouse position used if x or y are null)\r\n   * @param {Number} [options.z]                         Spawn canvas z coordinate (3D Canvas)\r\n   * @param {Boolean} [options.snapToGrid]               If 'true' snaps spawn position to the grid.\r\n   * @param {Boolean} [options.hidden]                   If 'true' preset will be spawned hidden.\r\n   * @param {Boolean} [options.layerSwitch]              If 'true' the layer of the spawned preset will be activated.\r\n   * @param {Boolean} [options.scaleToGrid]              If 'true' Tiles, Drawings, and Walls will be scaled relative to grid size.\r\n   * @param {Boolean} [options.modifyPrompt]             If 'true' a field modification prompt will be shown if configured via `Preset Edit > Modify` form\r\n   * @param {Boolean} [options.coordPicker]              If 'true' a crosshair and preview will be enabled allowing spawn position to be picked\r\n   * @param {String} [options.pickerLabel]               Label displayed above crosshair when `coordPicker` is enabled\r\n   * @param {String} [options.taPreview]                 Designates the preview placeable when spawning a `Token Attacher` prefab.\r\n   *                                                      Accepted values are \"ALL\" (for all elements) and document name optionally followed by an index number\r\n   *                                                      e.g. \"ALL\", \"Tile\", \"AmbientLight.1\"\r\n   * @returns {Array[Document]}\r\n   */\r\n  static async spawnPreset({\r\n    uuid,\r\n    preset,\r\n    name,\r\n    type,\r\n    folder,\r\n    tags,\r\n    x,\r\n    y,\r\n    z,\r\n    coordPicker = false,\r\n    pickerLabel,\r\n    taPreview,\r\n    snapToGrid = true,\r\n    hidden = false,\r\n    layerSwitch = false,\r\n    scaleToGrid = false,\r\n    modifyPrompt = true,\r\n  } = {}) {\r\n    if (!canvas.ready) throw Error(\"Canvas need to be 'ready' for a preset to be spawned.\");\r\n    if (!(uuid || preset || name || type || folder || tags))\r\n      throw Error('ID, Name, Folder, Tags, or Preset is needed to spawn it.');\r\n    if (!coordPicker && ((x == null && y != null) || (x != null && y == null)))\r\n      throw Error('Need both X and Y coordinates to spawn a preset.');\r\n\r\n    if (preset) await preset.load();\r\n    preset = preset ?? (await PresetAPI.getPreset({ uuid, name, type, folder, tags }));\r\n    if (!preset) throw Error(`No preset could be found matching: { uuid: \"${uuid}\", name: \"${name}\", type: \"${type}\"}`);\r\n\r\n    let presetData = deepClone(preset.data);\r\n\r\n    // Instead of using the entire data group use only one random one\r\n    if (preset.spawnRandom && presetData.length)\r\n      presetData = [presetData[Math.floor(Math.random() * presetData.length)]];\r\n\r\n    // Display prompt to modify data if needed\r\n    if (modifyPrompt && preset.modifyOnSpawn?.length) {\r\n      presetData = await modifySpawnData(presetData, preset.modifyOnSpawn);\r\n      // presetData being returned as null means that the modify field form has been canceled\r\n      // in which case we should cancel spawning as well\r\n      if (presetData == null) return;\r\n    }\r\n\r\n    // Populate preset data with default placeable data\r\n    presetData = presetData.map((data) => {\r\n      return mergePresetDataToDefaultDoc(preset, data);\r\n    });\r\n\r\n    // Randomize data if needed\r\n    const randomizer = preset.randomize;\r\n    if (!foundry.utils.isEmpty(randomizer)) {\r\n      // Flat data required for randomizer\r\n      presetData = presetData.map((d) => foundry.utils.flattenObject(d));\r\n      await applyRandomization(presetData, null, randomizer);\r\n      presetData = presetData.map((d) => foundry.utils.expandObject(d));\r\n    }\r\n\r\n    // Scale dimensions relative to grid size\r\n    if (scaleToGrid) {\r\n      scaleDataToGrid(presetData, preset.documentName, preset.gridSize);\r\n    }\r\n\r\n    if (preset.preSpawnScript) {\r\n      await executeScript(preset.preSpawnScript, { data: presetData });\r\n    }\r\n\r\n    // Lets sort the preset data as well as any attached placeable data into document groups\r\n    // documentName -> data array\r\n    const docToData = new Map();\r\n    docToData.set(preset.documentName, presetData);\r\n    if (preset.attached) {\r\n      for (const attached of preset.attached) {\r\n        if (!docToData.get(attached.documentName)) docToData.set(attached.documentName, []);\r\n        const data = deepClone(attached.data);\r\n        if (scaleToGrid) scaleDataToGrid([data], attached.documentName, preset.gridSize);\r\n        docToData.get(attached.documentName).push(data);\r\n      }\r\n    }\r\n\r\n    // ==================\r\n    // Determine spawn position\r\n    if (coordPicker) {\r\n      const coords = await new Promise(async (resolve) => {\r\n        Picker.activate(resolve, {\r\n          documentName: preset.documentName,\r\n          previewData: docToData,\r\n          snap: snapToGrid,\r\n          label: pickerLabel,\r\n          taPreview: taPreview,\r\n        });\r\n      });\r\n      if (coords == null) return [];\r\n      x = coords.end.x;\r\n      y = coords.end.y;\r\n    } else if (x == null || y == null) {\r\n      if (game.Levels3DPreview?._active) {\r\n        const pos3d = game.Levels3DPreview.interactionManager.canvas2dMousePosition;\r\n        x = pos3d.x;\r\n        y = pos3d.y;\r\n        z = pos3d.z;\r\n      } else {\r\n        x = canvas.mousePosition.x;\r\n        y = canvas.mousePosition.y;\r\n\r\n        if (preset.documentName === 'Token' || preset.documentName === 'Tile') {\r\n          x -= canvas.dimensions.size / 2;\r\n          y -= canvas.dimensions.size / 2;\r\n        }\r\n      }\r\n    }\r\n\r\n    let pos = { x, y };\r\n\r\n    if (snapToGrid && !game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.SHIFT)) {\r\n      pos = canvas.grid.getSnappedPosition(\r\n        pos.x,\r\n        pos.y,\r\n        canvas.getLayerByEmbeddedName(preset.documentName).gridPrecision\r\n      );\r\n    }\r\n    // ==================\r\n\r\n    // ==================\r\n    // Set positions taking into account relative distances between each object\r\n    let diffX, diffY, diffZ;\r\n    docToData.forEach((dataArr, documentName) => {\r\n      for (const data of dataArr) {\r\n        // We need to establish the first found coordinate as the reference point\r\n        if (diffX == null || diffY == null) {\r\n          if (documentName === 'Wall') {\r\n            if (data.c) {\r\n              diffX = pos.x - data.c[0];\r\n              diffY = pos.y - data.c[1];\r\n            }\r\n          } else {\r\n            if (data.x != null && data.y != null) {\r\n              diffX = pos.x - data.x;\r\n              diffY = pos.y - data.y;\r\n            }\r\n          }\r\n\r\n          // 3D Canvas\r\n          if (z != null) {\r\n            const property = documentName === 'Token' ? 'elevation' : 'flags.levels.rangeBottom';\r\n            if (getProperty(data, property) != null) {\r\n              diffZ = z - getProperty(data, property);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Assign relative position\r\n        if (documentName === 'Wall') {\r\n          if (!data.c || diffX == null) data.c = [pos.x, pos.y, pos.x + canvas.grid.w * 2, pos.y];\r\n          else {\r\n            data.c[0] += diffX;\r\n            data.c[1] += diffY;\r\n            data.c[2] += diffX;\r\n            data.c[3] += diffY;\r\n          }\r\n        } else {\r\n          data.x = data.x == null || diffX == null ? pos.x : data.x + diffX;\r\n          data.y = data.y == null || diffY == null ? pos.y : data.y + diffY;\r\n        }\r\n\r\n        // 3D Canvas\r\n        if (z != null) {\r\n          delete data.z;\r\n          let elevation;\r\n\r\n          const property = documentName === 'Token' ? 'elevation' : 'flags.levels.rangeBottom';\r\n\r\n          if (diffZ !== null && getProperty(data, property) != null) elevation = getProperty(data, property) + diffZ;\r\n          else elevation = z;\r\n\r\n          setProperty(data, property, elevation);\r\n\r\n          if (documentName !== 'Token') {\r\n            setProperty(data, 'flags.levels.rangeTop', elevation);\r\n          }\r\n        }\r\n\r\n        // Assign ownership for Drawings and MeasuredTemplates\r\n        if (['Drawing', 'MeasuredTemplate'].includes(documentName)) {\r\n          if (documentName === 'Drawing') data.author = game.user.id;\r\n          else if (documentName === 'MeasuredTemplate') data.user = game.user.id;\r\n        }\r\n\r\n        // Hide\r\n        if (hidden || game.keyboard.downKeys.has('AltLeft')) data.hidden = true;\r\n      }\r\n    });\r\n\r\n    // ==================\r\n\r\n    if (layerSwitch) {\r\n      if (game.user.isGM || ['Token', 'MeasuredTemplate', 'Note'].includes(preset.documentName))\r\n        canvas.getLayerByEmbeddedName(preset.documentName)?.activate();\r\n    }\r\n\r\n    // Create Documents\r\n    const allDocuments = [];\r\n\r\n    for (const [documentName, dataArr] of docToData.entries()) {\r\n      const documents = await createDocuments(documentName, dataArr, canvas.scene.id);\r\n      documents.forEach((d) => allDocuments.push(d));\r\n    }\r\n\r\n    // Execute post spawn scripts\r\n    if (preset.postSpawnScript) {\r\n      await executeScript(preset.postSpawnScript, {\r\n        documents: allDocuments,\r\n        objects: documents.map((d) => d.object).filter(Boolean),\r\n      });\r\n    }\r\n\r\n    return allDocuments;\r\n  }\r\n}\r\n\r\nclass PresetFolder {\r\n  constructor({\r\n    id,\r\n    uuid,\r\n    name,\r\n    sorting = 'm',\r\n    color = '#000000',\r\n    sort = 0,\r\n    children = [],\r\n    presets = [],\r\n    draggable = true,\r\n    folder = null,\r\n    visible = true,\r\n    render = true,\r\n  } = {}) {\r\n    this.id = id;\r\n    this.uuid = uuid;\r\n    this.name = name;\r\n    this.sorting = sorting;\r\n    this.color = color;\r\n    this.sort = sort;\r\n    this.children = children;\r\n    this.children.forEach((c) => {\r\n      c.folder = this.id;\r\n    });\r\n    this.presets = presets;\r\n    this.draggable = draggable;\r\n    this.folder = folder;\r\n    this.visible = visible;\r\n    this.render = render;\r\n    this.expanded = FolderState.expanded(this.uuid);\r\n  }\r\n\r\n  async update(data) {\r\n    const doc = await fromUuid(this.uuid);\r\n    if (doc) await doc.update(data);\r\n  }\r\n}\r\n\r\nexport class PresetVirtualFolder extends PresetFolder {\r\n  constructor(options) {\r\n    super(options);\r\n    this.virtual = true;\r\n  }\r\n\r\n  async update(data) {}\r\n}\r\n\r\nexport class PresetPackFolder extends PresetVirtualFolder {\r\n  constructor(options) {\r\n    const tree = options.tree;\r\n    const pack = options.pack;\r\n    const packFolderData = tree.metaDoc.getFlag(MODULE_ID, 'folder') ?? {};\r\n    const uuid = pack.collection;\r\n    super({\r\n      uuid,\r\n      id: SeededRandom.randomID(uuid),\r\n      name: packFolderData.name ?? pack.title,\r\n      children: tree.folders,\r\n      presets: tree.presets,\r\n      draggable: false,\r\n      color: packFolderData.color ?? '#000000',\r\n    });\r\n    this.group = packFolderData.group;\r\n  }\r\n\r\n  get pack() {\r\n    return this.uuid;\r\n  }\r\n\r\n  async update(data = {}) {\r\n    const pack = game.packs.get(this.pack);\r\n    if (pack.locked) return;\r\n    if (data.hasOwnProperty('name') && data.name === pack.title) delete data.name;\r\n    if (foundry.utils.isEmpty(data)) return;\r\n\r\n    const metaDoc = await PresetCollection._initMetaDocument(this.pack);\r\n    await metaDoc.setFlag(MODULE_ID, 'folder', data);\r\n  }\r\n}\r\n","/**\r\n * Cross-hair and optional preview image/label that can be activated to allow the user to select\r\n * an area on the screen.\r\n */\r\nexport class Picker {\r\n  static pickerOverlay;\r\n  static boundStart;\r\n  static boundEnd;\r\n  static callback;\r\n\r\n  /**\r\n   * Activates the picker overlay.\r\n   * @param {Function} callback callback function with coordinates returned as starting and ending bounds of a rectangles\r\n   *                            { start: {x1, y1}, end: {x2, y2} }\r\n   * @param {Object}  preview\r\n   * @param {String}  preview.documentName (optional) preview placeables document name\r\n   * @param {Map[String,Array]}  preview.previewData    (req) preview placeables data\r\n   * @param {String}  preview.taPreview            (optional) Designates the preview placeable when spawning a `Token Attacher` prefab.\r\n   *                                                e.g. \"Tile\", \"Tile.1\", \"MeasuredTemplate.3\"\r\n   * @param {Boolean} preview.snap                  (optional) if true returned coordinates will be snapped to grid\r\n   * @param {String}  preview.label                  (optional) preview placeables document name\r\n   */\r\n  static async activate(callback, preview) {\r\n    this.destroy();\r\n\r\n    const pickerOverlay = new PIXI.Container();\r\n    this.callback = callback;\r\n\r\n    if (preview) {\r\n      let label;\r\n      if (preview.label) {\r\n        label = new PreciseText(preview.label, { ...CONFIG.canvasTextStyle, _fontSize: 24 });\r\n        label.anchor.set(0.5, 1);\r\n        pickerOverlay.addChild(label);\r\n      }\r\n\r\n      const { previews, layer, previewDocuments } = await this._genPreviews(preview);\r\n\r\n      const setPositions = function (pos) {\r\n        if (!pos) return;\r\n        if (preview.snap && layer && !game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.SHIFT))\r\n          pos = canvas.grid.getSnappedPosition(pos.x, pos.y, layer.gridPrecision);\r\n\r\n        for (const preview of previews) {\r\n          if (preview.document.documentName === 'Wall') {\r\n            const c = preview.document.c;\r\n            c[0] = pos.x + preview._previewOffset[0];\r\n            c[1] = pos.y + preview._previewOffset[1];\r\n            c[2] = pos.x + preview._previewOffset[2];\r\n            c[3] = pos.y + preview._previewOffset[3];\r\n            preview.document.c = c;\r\n          } else {\r\n            preview.document.x = pos.x + preview._previewOffset.x;\r\n            preview.document.y = pos.y + preview._previewOffset.y;\r\n          }\r\n          preview.document.alpha = 0.4;\r\n          preview.renderFlags.set({ refresh: true });\r\n          preview.visible = true;\r\n\r\n          if (preview.controlIcon && !preview.controlIcon._meVInsert) {\r\n            preview.controlIcon.alpha = 0.4;\r\n\r\n            // ControlIcon visibility is difficult to set and keep as true\r\n            // Lets hack it by defining a getter that always returns true\r\n            Object.defineProperty(preview.controlIcon, 'visible', {\r\n              get: function () {\r\n                return true;\r\n              },\r\n              set: function () {},\r\n            });\r\n            preview.controlIcon._meVInsert = true;\r\n          }\r\n        }\r\n\r\n        if (label) {\r\n          label.x = pos.x;\r\n          label.y = pos.y - 38;\r\n        }\r\n\r\n        pickerOverlay.previewDocuments = previewDocuments;\r\n      };\r\n\r\n      pickerOverlay.on('pointermove', (event) => {\r\n        setPositions(event.data.getLocalPosition(pickerOverlay));\r\n      });\r\n      setPositions(canvas.mousePosition);\r\n    }\r\n\r\n    pickerOverlay.hitArea = canvas.dimensions.rect;\r\n    pickerOverlay.cursor = 'crosshair';\r\n    pickerOverlay.interactive = true;\r\n    pickerOverlay.zIndex = Infinity;\r\n    pickerOverlay.on('remove', () => pickerOverlay.off('pick'));\r\n    pickerOverlay.on('mousedown', (event) => {\r\n      Picker.boundStart = event.data.getLocalPosition(pickerOverlay);\r\n    });\r\n    pickerOverlay.on('mouseup', (event) => (Picker.boundEnd = event.data.getLocalPosition(pickerOverlay)));\r\n    pickerOverlay.on('click', (event) => {\r\n      if (event.nativeEvent.which == 2) {\r\n        this.callback?.(null);\r\n      } else {\r\n        this.callback?.({ start: this.boundStart, end: this.boundEnd });\r\n      }\r\n      pickerOverlay.parent.removeChild(pickerOverlay);\r\n      if (pickerOverlay.previewDocuments)\r\n        pickerOverlay.previewDocuments.forEach((name) => canvas.getLayerByEmbeddedName(name)?.clearPreviewContainer());\r\n      this.destroy();\r\n    });\r\n\r\n    this.pickerOverlay = pickerOverlay;\r\n\r\n    canvas.stage.addChild(this.pickerOverlay);\r\n  }\r\n\r\n  static destroy() {\r\n    if (this.pickerOverlay) {\r\n      canvas.stage.removeChild(this.pickerOverlay);\r\n      this.pickerOverlay.destroy(true);\r\n      this.pickerOverlay.children?.forEach((c) => c.destroy(true));\r\n      this.callback?.(null);\r\n      this.pickerOverlay = null;\r\n      this.callback = null;\r\n    }\r\n  }\r\n\r\n  // Modified Foundry _createPreview\r\n  // Does not throw warning if user lacks document create permissions\r\n  static async _createPreview(createData) {\r\n    const documentName = this.constructor.documentName;\r\n    const cls = getDocumentClass(documentName);\r\n    createData._id = foundry.utils.randomID(); // Needed to allow rendering of multiple previews at the same time\r\n    const document = new cls(createData, { parent: canvas.scene });\r\n\r\n    const object = new CONFIG[documentName].objectClass(document);\r\n    this.preview.addChild(object);\r\n    await object.draw();\r\n\r\n    return object;\r\n  }\r\n\r\n  static async _genPreviews(preview) {\r\n    if (!preview.previewData) return { previews: [] };\r\n\r\n    const previewDocuments = new Set();\r\n    const previews = [];\r\n\r\n    let mainPreviewX;\r\n    let mainPreviewY;\r\n\r\n    for (const [documentName, dataArr] of preview.previewData.entries()) {\r\n      const layer = canvas.getLayerByEmbeddedName(documentName);\r\n      for (const data of dataArr) {\r\n        // Create Preview\r\n        const previewObject = await this._createPreview.call(layer, deepClone(data));\r\n        previews.push(previewObject);\r\n        previewDocuments.add(documentName);\r\n\r\n        // Determine point around which other previews are to be placed\r\n        if (mainPreviewX == null) {\r\n          if (documentName === 'Wall') {\r\n            if (data.c != null) {\r\n              mainPreviewX = previewObject.document.c[0];\r\n              mainPreviewY = previewObject.document.c[1];\r\n            }\r\n          } else {\r\n            if (data.x != null && data.y != null) {\r\n              mainPreviewX = previewObject.document.x;\r\n              mainPreviewY = previewObject.document.y;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Calculate offset from first preview\r\n        if (documentName === 'Wall') {\r\n          const off = [\r\n            previewObject.document.c[0] - (mainPreviewX ?? 0),\r\n            previewObject.document.c[1] - (mainPreviewY ?? 0),\r\n            previewObject.document.c[2] - (mainPreviewX ?? 0),\r\n            previewObject.document.c[3] - (mainPreviewY ?? 0),\r\n          ];\r\n          previewObject._previewOffset = off;\r\n        } else {\r\n          previewObject._previewOffset = {\r\n            x: previewObject.document.x - (mainPreviewX ?? 0),\r\n            y: previewObject.document.y - (mainPreviewY ?? 0),\r\n          };\r\n        }\r\n\r\n        if (preview.taPreview && documentName === 'Token') {\r\n          const documentNames = await this._genTAPreviews(data, preview.taPreview, previewObject, previews);\r\n          documentNames.forEach((dName) => previewDocuments.add(dName));\r\n        }\r\n      }\r\n    }\r\n\r\n    return { previews, layer: canvas.getLayerByEmbeddedName(preview.documentName), previewDocuments };\r\n  }\r\n\r\n  static _parseTAPreview(taPreview, attached) {\r\n    if (taPreview === 'ALL') return attached;\r\n\r\n    const attachedData = {};\r\n    taPreview = taPreview.split(',');\r\n\r\n    for (const taIndex of taPreview) {\r\n      let [name, index] = taIndex.trim().split('.');\r\n      if (!attached[name]) continue;\r\n\r\n      if (index == null) {\r\n        attachedData[name] = attached[name];\r\n      } else {\r\n        if (attached[name][index]) {\r\n          if (!attachedData[name]) attachedData[name] = [];\r\n          attachedData[name].push(attached[name][index]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return attachedData;\r\n  }\r\n\r\n  static async _genTAPreviews(data, taPreview, parent, previews) {\r\n    if (!game.modules.get('token-attacher')?.active) return [];\r\n\r\n    const attached = getProperty(data, 'flags.token-attacher.prototypeAttached');\r\n    const pos = getProperty(data, 'flags.token-attacher.pos');\r\n    const grid = getProperty(data, 'flags.token-attacher.grid');\r\n\r\n    if (!(attached && pos && grid)) return [];\r\n\r\n    const documentNames = new Set();\r\n\r\n    const ratio = canvas.grid.size / grid.size;\r\n    const attachedData = this._parseTAPreview(taPreview, attached);\r\n\r\n    for (const [name, dataList] of Object.entries(attachedData)) {\r\n      for (const data of dataList) {\r\n        if (['Token', 'Tile', 'Drawing'].includes(name)) {\r\n          data.width *= ratio;\r\n          data.height *= ratio;\r\n        }\r\n\r\n        const taPreviewObject = await this._createPreview.call(canvas.getLayerByEmbeddedName(name), data);\r\n        documentNames.add(name);\r\n        previews.push(taPreviewObject);\r\n\r\n        // Calculate offset from parent preview\r\n        if (name === 'Wall') {\r\n          taPreviewObject._previewOffset = [\r\n            (data.c[0] - pos.xy.x) * ratio + parent._previewOffset.x,\r\n            (data.c[1] - pos.xy.y) * ratio + parent._previewOffset.y,\r\n            (data.c[2] - pos.xy.x) * ratio + parent._previewOffset.x,\r\n            (data.c[3] - pos.xy.y) * ratio + parent._previewOffset.y,\r\n          ];\r\n        } else {\r\n          taPreviewObject._previewOffset = {\r\n            x: (data.x - pos.xy.x) * ratio + parent._previewOffset.x,\r\n            y: (data.y - pos.xy.y) * ratio + parent._previewOffset.y,\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    return documentNames;\r\n  }\r\n}\r\n","import Color from '../color/color.js';\r\nimport { getData, regexStringReplace, wildcardStringReplace } from '../utils.js';\r\n\r\nexport function selectField(control) {\r\n  const formGroup = control.closest('.form-group');\r\n  formGroup.find('.mass-edit-checkbox input').prop('checked', true).trigger('change');\r\n  formGroup.find('.mass-edit-randomize').addClass('active');\r\n}\r\n\r\nexport function deselectField(control, configApp) {\r\n  const formGroup = control.closest('.form-group');\r\n\r\n  let allRandomizedRemoved = true;\r\n  if (configApp) {\r\n    formGroup.find('[name]').each(function () {\r\n      if (allRandomizedRemoved) allRandomizedRemoved = !Boolean(configApp.randomizeFields[this.name]);\r\n    });\r\n  }\r\n\r\n  if (allRandomizedRemoved) {\r\n    formGroup.find('.mass-edit-checkbox input').prop('checked', false).trigger('change');\r\n    formGroup.find('.mass-edit-randomize').removeClass('active');\r\n  }\r\n}\r\n\r\nexport function selectRandomizerFields(form, fields) {\r\n  if (!fields) return;\r\n  for (const key of Object.keys(fields)) {\r\n    selectField(form.find(`[name=\"${key}\"]`));\r\n  }\r\n}\r\n\r\nexport async function applyRandomization(updates, objects, randomizeFields) {\r\n  // See if any field is to be randomized\r\n  if (!randomizeFields || foundry.utils.isEmpty(randomizeFields)) return;\r\n\r\n  let requiresCoordRandomization = false;\r\n\r\n  for (let i = 0; i < updates.length; i++) {\r\n    const update = updates[i];\r\n    for (const field of Object.keys(update)) {\r\n      if (field in randomizeFields) {\r\n        const obj = randomizeFields[field];\r\n\r\n        if (obj.type === 'select') {\r\n          update[field] = obj.selection[Math.floor(Math.random() * obj.selection.length)];\r\n        } else if (obj.type === 'number') {\r\n          if (obj.step === 'any') obj.step = 1; // default to integer 1 just to avoid very large decimals\r\n          else obj.step = Number(obj.step);\r\n\r\n          if (obj.method === 'interpolate') {\r\n            const stepsInRange = (obj.max - obj.min) / obj.step + 1;\r\n            update[field] = (i % stepsInRange) * obj.step + obj.min;\r\n          } else if (obj.method === 'interpolateReverse') {\r\n            const stepsInRange = (obj.max - obj.min) / obj.step;\r\n            update[field] = (stepsInRange - (i % (stepsInRange + 1))) * obj.step + obj.min;\r\n          } else {\r\n            const stepsInRange = (obj.max - obj.min + (Number.isInteger(obj.step) ? 1 : 0)) / obj.step;\r\n            update[field] = Math.floor(Math.random() * stepsInRange) * obj.step + obj.min;\r\n          }\r\n        } else if (obj.type === 'boolean') {\r\n          update[field] = Math.random() < 0.5;\r\n        } else if (obj.type === 'color') {\r\n          // Convert to new format if needed\r\n          if (obj.color1) {\r\n            obj.colors = [\r\n              { hex: obj.color1, offset: 0 },\r\n              { hex: obj.color2, offset: 100 },\r\n            ];\r\n          }\r\n\r\n          // If space is discrete we simple choose a color, no blending required\r\n          if (obj.space === 'discrete') {\r\n            if (obj.method === 'interpolate') {\r\n              update[field] = obj.colors[i % obj.colors.length].hex;\r\n            } else if (obj.method === 'interpolateReverse') {\r\n              update[field] = obj.colors[obj.colors.length - 1 - (i % obj.colors.length)].hex;\r\n            } else {\r\n              update[field] = obj.colors[Math.floor(Math.random() * obj.colors.length)].hex;\r\n            }\r\n            continue;\r\n          }\r\n\r\n          let colors = obj.colors.map((c) => c);\r\n          if (colors[0].offset > 0) {\r\n            colors.unshift({ hex: colors[0].hex, offset: 0 });\r\n          }\r\n          if (colors[colors.length - 1].offset < 100) {\r\n            colors.push({ hex: colors[colors.length - 1].hex, offset: 100 });\r\n          }\r\n\r\n          // Calculate random offset\r\n          let rOffset;\r\n          if (obj.method === 'interpolate') {\r\n            rOffset = 1 - (i + 1) / updates.length;\r\n          } else if (obj.method === 'interpolateReverse') {\r\n            rOffset = (i + 1) / updates.length;\r\n          } else {\r\n            rOffset = Math.random();\r\n          }\r\n          rOffset *= 100;\r\n\r\n          // Find the two colors the random offset falls between\r\n          let j = 0;\r\n          while (j < colors.length - 1 && colors[j + 1].offset < rOffset) j++;\r\n          let color1, color2;\r\n          if (j === colors.length - 1) {\r\n            color1 = colors[j - 1];\r\n            color2 = colors[j];\r\n          } else {\r\n            color1 = colors[j];\r\n            color2 = colors[j + 1];\r\n          }\r\n\r\n          // Normalize the random offset\r\n          let rnOffset = rOffset - color1.offset;\r\n          rnOffset = rnOffset / (color2.offset - color1.offset);\r\n\r\n          // Create a Color.js range\r\n          color1 = new Color(color1.hex);\r\n          color2 = new Color(color2.hex);\r\n          const space = obj.space || 'srgb';\r\n          const hue = obj.hue || 'shorter';\r\n          let range = color1.range(color2, {\r\n            space: space, // interpolation space\r\n            hue: hue,\r\n            outputSpace: 'srgb',\r\n          });\r\n\r\n          // Pick a color from range using normalized random offset\r\n          let rgb3 = range(rnOffset);\r\n          let hexColor = rgb3.toString({ format: 'hex' });\r\n          if (hexColor.length < 7) {\r\n            // 3 char hex, duplicate chars\r\n            hexColor = '#' + hexColor[1] + hexColor[1] + hexColor[2] + hexColor[2] + hexColor[3] + hexColor[3];\r\n          }\r\n          update[field] = hexColor;\r\n        } else if (obj.type === 'image') {\r\n          if (obj.method === 'sequential') {\r\n            update[field] = obj.images[i % obj.images.length];\r\n          } else {\r\n            update[field] = obj.images[Math.floor(Math.random() * obj.images.length)];\r\n          }\r\n\r\n          if (obj.maintainAspect) {\r\n            const width = objects?.[i]?.width ?? update.width;\r\n            const height = objects?.[i]?.height ?? update.height;\r\n            if (height != null && width != null) {\r\n              try {\r\n                const tex = await loadTexture(update[field]);\r\n                if (tex) {\r\n                  const tileRatio = width / height;\r\n                  const texRatio = tex.width / tex.height;\r\n                  if (texRatio !== tileRatio) {\r\n                    if (texRatio > tileRatio) {\r\n                      update['texture.scaleX'] = 1;\r\n                      update['texture.scaleY'] = tileRatio;\r\n                    } else {\r\n                      update['texture.scaleX'] = height / width;\r\n                      update['texture.scaleY'] = 1;\r\n                    }\r\n                  }\r\n                }\r\n              } catch (e) {}\r\n            }\r\n          }\r\n        } else if (obj.type === 'text') {\r\n          if (obj.method === 'findAndReplace' || obj.method === 'findAndReplaceRegex') {\r\n            if (objects) {\r\n              const data = foundry.utils.flattenObject(getData(objects[i]).toObject());\r\n              if (!data[field] && !obj.find) {\r\n                update[field] = obj.replace;\r\n              } else if (data[field]) {\r\n                // special handling for Tagger tags\r\n                if (field === 'flags.tagger.tags') {\r\n                  data[field] = data[field].join(',');\r\n                }\r\n\r\n                if (obj.method === 'findAndReplaceRegex') {\r\n                  update[field] = regexStringReplace(obj.find, obj.replace, data[field]);\r\n                } else {\r\n                  update[field] = wildcardStringReplace(obj.find, obj.replace, data[field]);\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            if (obj.method === 'unique') {\r\n              if (!obj.shuffled) {\r\n                shuffleArray(obj.strings);\r\n                obj.shuffled = true;\r\n                obj.i = -1;\r\n              }\r\n              obj.i++;\r\n              update[field] = obj.strings[obj.i % obj.strings.length];\r\n            } else {\r\n              update[field] = obj.strings[Math.floor(Math.random() * obj.strings.length)];\r\n            }\r\n          }\r\n        } else if (obj.type === 'coordinate') {\r\n          requiresCoordRandomization = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (requiresCoordRandomization) {\r\n    let coordCtrl;\r\n\r\n    // Sort placeables based on size\r\n    let pUpdates = [];\r\n    for (let i = 0; i < objects.length; i++) {\r\n      pUpdates.push({ p: objects[i], update: updates[i] });\r\n    }\r\n    pUpdates.sort(\r\n      (a, b) =>\r\n        (b.p.w ?? b.p.width ?? 0) + (b.p.h ?? b.p.height ?? 0) - (a.p.w ?? a.p.width ?? 0) - (a.p.h ?? a.p.height ?? 0)\r\n    );\r\n\r\n    for (const pUpdate of pUpdates) {\r\n      const obj = randomizeFields.x ?? randomizeFields.y;\r\n      if (obj.method === 'noOverlap') {\r\n        if (!coordCtrl) {\r\n          coordCtrl = {\r\n            freeId: 0,\r\n            boundingBox: obj.boundingBox,\r\n            freeRectangles: { 0: obj.boundingBox },\r\n            stepX: obj.stepX,\r\n            stepY: obj.stepY,\r\n          };\r\n        }\r\n        const [x, y] = randomPlace(pUpdate.p, coordCtrl);\r\n        pUpdate.update.x = x;\r\n        pUpdate.update.y = y;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the closest step increment to the provided number\r\n * @param {*} num\r\n * @param {*} step\r\n * @returns\r\n */\r\nexport function nearestStep(num, step) {\r\n  if (num % step <= step / 2) {\r\n    return num - (num % step);\r\n  }\r\n  return num - (num % step) + step;\r\n}\r\n\r\n/**\r\n * Generates a random number within the given range and step increment\r\n * @param {*} min\r\n * @param {*} max\r\n * @param {*} step\r\n * @returns\r\n */\r\nfunction randomNum(min, max, step) {\r\n  if (step === 'any') step = 1; // default to integer 1 just to avoid very large decimals\r\n  else step = Number(step);\r\n  const stepsInRange = (max - min) / step;\r\n  return Math.floor(Math.random() * (stepsInRange + (Number.isInteger(step) ? 1 : 0))) * step + min;\r\n}\r\n\r\n/**\r\n * In-place random shuffle of an array\r\n * @param {*} array\r\n * @returns\r\n */\r\nfunction shuffleArray(array) {\r\n  var i = array.length,\r\n    j = 0,\r\n    temp;\r\n\r\n  while (i--) {\r\n    j = Math.floor(Math.random() * (i + 1));\r\n\r\n    // swap randomly chosen element with current element\r\n    temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\n/* ================================\r\n * === Coordinate Randomization ==\r\n * =============================== */\r\n\r\nfunction randomPlace(placeable, ctrl) {\r\n  const width = nearestStep(placeable.w ?? placeable.width, ctrl.stepX);\r\n  const height = nearestStep(placeable.h ?? placeable.height, ctrl.stepY);\r\n\r\n  const rec = { x: 0, y: 0, width: width, height: height };\r\n  const freeRectangles = ctrl.freeRectangles;\r\n\r\n  // get all free rectangles that can contain rec\r\n  let fittingRecs = Object.keys(freeRectangles).filter((id) => _canFit(freeRectangles[id], rec));\r\n\r\n  // if there are no fitting places left, then place it randomly anywhere within the bounding box\r\n\r\n  if (fittingRecs.length) {\r\n    // Pick a random free rectangle and choose a random location within so that it fits rec\r\n    const i = fittingRecs[Math.floor(Math.random() * fittingRecs.length)];\r\n    rec.x = randomNum(\r\n      freeRectangles[i].x,\r\n      Math.max(freeRectangles[i].x + freeRectangles[i].width - rec.width, 0),\r\n      ctrl.stepX\r\n    );\r\n    rec.y = randomNum(\r\n      freeRectangles[i].y,\r\n      Math.max(freeRectangles[i].y + freeRectangles[i].height - rec.height, 0),\r\n      ctrl.stepY\r\n    );\r\n  } else {\r\n    // if there are no fitting places left, then place it randomly anywhere within the bounding box\r\n    rec.x = randomNum(\r\n      ctrl.boundingBox.x,\r\n      Math.max(ctrl.boundingBox.x + ctrl.boundingBox.width - rec.width, ctrl.boundingBox.x),\r\n      ctrl.stepX\r\n    );\r\n    rec.y = randomNum(\r\n      ctrl.boundingBox.y,\r\n      Math.max(ctrl.boundingBox.y + ctrl.boundingBox.height - rec.height, ctrl.boundingBox.y),\r\n      ctrl.stepY\r\n    );\r\n  }\r\n\r\n  // Find all free rectangles that this spot overlaps\r\n  let overlaps = Object.keys(freeRectangles).filter((id) => _intersectRec(freeRectangles[id], rec));\r\n\r\n  for (const id of overlaps) {\r\n    const overlap = freeRectangles[id];\r\n    // remove original rectangle\r\n    delete freeRectangles[id];\r\n\r\n    // left split\r\n    if (overlap.x < rec.x) {\r\n      _addAndMergeFreeRectangle(\r\n        freeRectangles,\r\n        {\r\n          x: overlap.x,\r\n          y: overlap.y,\r\n          width: rec.x - overlap.x,\r\n          height: overlap.height,\r\n        },\r\n        ctrl\r\n      );\r\n    }\r\n\r\n    // right split\r\n    if (overlap.x + overlap.width > rec.x + rec.width) {\r\n      _addAndMergeFreeRectangle(\r\n        freeRectangles,\r\n        {\r\n          x: rec.x + rec.width,\r\n          y: overlap.y,\r\n          width: overlap.x + overlap.width - (rec.x + rec.width),\r\n          height: overlap.height,\r\n        },\r\n        ctrl\r\n      );\r\n    }\r\n\r\n    // top split\r\n    if (overlap.y < rec.y) {\r\n      _addAndMergeFreeRectangle(\r\n        freeRectangles,\r\n        {\r\n          x: overlap.x,\r\n          y: overlap.y,\r\n          width: overlap.width,\r\n          height: rec.y - overlap.y,\r\n        },\r\n        ctrl\r\n      );\r\n    }\r\n\r\n    // bottom split\r\n    if (overlap.y + overlap.height > rec.y + rec.height) {\r\n      _addAndMergeFreeRectangle(\r\n        freeRectangles,\r\n        {\r\n          x: overlap.x,\r\n          y: rec.y + rec.height,\r\n          width: overlap.width,\r\n          height: overlap.y + overlap.height - (rec.y + rec.height),\r\n        },\r\n        ctrl\r\n      );\r\n    }\r\n  }\r\n\r\n  return [rec.x, rec.y];\r\n}\r\n\r\n/**\r\n * Checks if rectangle rec2 can fit within rectangle rec1\r\n * @param {*} rec1\r\n * @param {*} rec2\r\n * @returns\r\n */\r\nfunction _canFit(rec1, rec2) {\r\n  return rec2.width <= rec1.width && rec2.height <= rec1.height;\r\n}\r\n\r\n/**\r\n * Checks whether rectangle rec1 and rectangle rec2 intersect\r\n * @param {*} rec1\r\n * @param {*} rec2\r\n * @returns\r\n */\r\nfunction _intersectRec(rec1, rec2) {\r\n  if (rec1.x < rec2.x + rec2.width && rec2.x < rec1.x + rec1.width && rec1.y < rec2.y + rec2.height)\r\n    return rec2.y < rec1.y + rec1.height;\r\n  else return false;\r\n}\r\n\r\n/**\r\n * Check if rectangle rec1 fully contains rectangle rec2\r\n * @param {*} rec1\r\n * @param {*} rec\r\n * @returns\r\n */\r\nfunction _fullyContains(rec1, rec2) {\r\n  return (\r\n    rec1.x <= rec2.x &&\r\n    rec1.x + rec1.width >= rec2.x + rec2.width &&\r\n    rec1.y <= rec2.y &&\r\n    rec1.y + rec1.height >= rec2.y + rec2.height\r\n  );\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} freeRectangles\r\n * @param {*} rec\r\n * @param {*} ctrl\r\n * @returns\r\n */\r\nfunction _addAndMergeFreeRectangle(freeRectangles, rec, ctrl) {\r\n  const keys = Object.keys(freeRectangles);\r\n  for (const key of keys) {\r\n    if (_fullyContains(freeRectangles[key], rec)) {\r\n      return;\r\n    }\r\n  }\r\n  ctrl.freeId++;\r\n  freeRectangles[ctrl.freeId] = rec;\r\n}\r\n","// MIT License\r\n\r\n// Original Library\r\n//   - Copyright (c) Marak Squires\r\n\r\n// Additional Functionality\r\n//  - Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\n// A is m x n. B is n x p. product is m x p.\r\nfunction multiplyMatrices(A, B) {\r\n  let m = A.length;\r\n\r\n  if (!Array.isArray(A[0])) {\r\n    // A is vector, convert to [[a, b, c, ...]]\r\n    A = [A];\r\n  }\r\n\r\n  if (!Array.isArray(B[0])) {\r\n    // B is vector, convert to [[a], [b], [c], ...]]\r\n    B = B.map((x) => [x]);\r\n  }\r\n\r\n  let p = B[0].length;\r\n  let B_cols = B[0].map((_, i) => B.map((x) => x[i])); // transpose B\r\n  let product = A.map((row) =>\r\n    B_cols.map((col) => {\r\n      let ret = 0;\r\n\r\n      if (!Array.isArray(row)) {\r\n        for (let c of col) {\r\n          ret += row * c;\r\n        }\r\n\r\n        return ret;\r\n      }\r\n\r\n      for (let i = 0; i < row.length; i++) {\r\n        ret += row[i] * (col[i] || 0);\r\n      }\r\n\r\n      return ret;\r\n    })\r\n  );\r\n\r\n  if (m === 1) {\r\n    product = product[0]; // Avoid [[a, b, c, ...]]\r\n  }\r\n\r\n  if (p === 1) {\r\n    return product.map((x) => x[0]); // Avoid [[a], [b], [c], ...]]\r\n  }\r\n\r\n  return product;\r\n}\r\n\r\n/**\r\n * Various utility functions\r\n */\r\n\r\n/**\r\n * Check if a value is a string (including a String object)\r\n * @param {*} str - Value to check\r\n * @returns {boolean}\r\n */\r\nfunction isString(str) {\r\n  return type(str) === 'string';\r\n}\r\n\r\n/**\r\n * Determine the internal JavaScript [[Class]] of an object.\r\n * @param {*} o - Value to check\r\n * @returns {string}\r\n */\r\nfunction type(o) {\r\n  let str = Object.prototype.toString.call(o);\r\n\r\n  return (str.match(/^\\[object\\s+(.*?)\\]$/)[1] || '').toLowerCase();\r\n}\r\n\r\n/**\r\n * Round a number to a certain number of significant digits\r\n * @param {number} n - The number to round\r\n * @param {number} precision - Number of significant digits\r\n */\r\nfunction toPrecision(n, precision) {\r\n  n = +n;\r\n  precision = +precision;\r\n  let integerLength = (Math.floor(n) + '').length;\r\n\r\n  if (precision > integerLength) {\r\n    return +n.toFixed(precision - integerLength);\r\n  } else {\r\n    let p10 = 10 ** (integerLength - precision);\r\n    return Math.round(n / p10) * p10;\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a CSS function, regardless of its name and arguments\r\n * @param String str String to parse\r\n * @return {{name, args, rawArgs}}\r\n */\r\nfunction parseFunction(str) {\r\n  if (!str) {\r\n    return;\r\n  }\r\n\r\n  str = str.trim();\r\n\r\n  const isFunctionRegex = /^([a-z]+)\\((.+?)\\)$/i;\r\n  const isNumberRegex = /^-?[\\d.]+$/;\r\n  let parts = str.match(isFunctionRegex);\r\n\r\n  if (parts) {\r\n    // It is a function, parse args\r\n    let args = [];\r\n    parts[2].replace(/\\/?\\s*([-\\w.]+(?:%|deg)?)/g, ($0, arg) => {\r\n      if (/%$/.test(arg)) {\r\n        // Convert percentages to 0-1 numbers\r\n        arg = new Number(arg.slice(0, -1) / 100);\r\n        arg.type = '<percentage>';\r\n      } else if (/deg$/.test(arg)) {\r\n        // Drop deg from degrees and convert to number\r\n        // TODO handle other units too\r\n        arg = new Number(+arg.slice(0, -3));\r\n        arg.type = '<angle>';\r\n        arg.unit = 'deg';\r\n      } else if (isNumberRegex.test(arg)) {\r\n        // Convert numerical args to numbers\r\n        arg = new Number(arg);\r\n        arg.type = '<number>';\r\n      }\r\n\r\n      if ($0.startsWith('/')) {\r\n        // It's alpha\r\n        arg = arg instanceof Number ? arg : new Number(arg);\r\n        arg.alpha = true;\r\n      }\r\n\r\n      args.push(arg);\r\n    });\r\n\r\n    return {\r\n      name: parts[1].toLowerCase(),\r\n      rawName: parts[1],\r\n      rawArgs: parts[2],\r\n      // An argument could be (as of css-color-4):\r\n      // a number, percentage, degrees (hue), ident (in color())\r\n      args,\r\n    };\r\n  }\r\n}\r\n\r\nfunction last(arr) {\r\n  return arr[arr.length - 1];\r\n}\r\n\r\nfunction interpolate(start, end, p) {\r\n  if (isNaN(start)) {\r\n    return end;\r\n  }\r\n\r\n  if (isNaN(end)) {\r\n    return start;\r\n  }\r\n\r\n  return start + (end - start) * p;\r\n}\r\n\r\nfunction interpolateInv(start, end, value) {\r\n  return (value - start) / (end - start);\r\n}\r\n\r\nfunction mapRange(from, to, value) {\r\n  return interpolate(to[0], to[1], interpolateInv(from[0], from[1], value));\r\n}\r\n\r\nfunction parseCoordGrammar(coordGrammars) {\r\n  return coordGrammars.map((coordGrammar) => {\r\n    return coordGrammar.split('|').map((type) => {\r\n      type = type.trim();\r\n      let range = type.match(/^(<[a-z]+>)\\[(-?[.\\d]+),\\s*(-?[.\\d]+)\\]?$/);\r\n\r\n      if (range) {\r\n        let ret = new String(range[1]);\r\n        ret.range = [+range[2], +range[3]];\r\n        return ret;\r\n      }\r\n\r\n      return type;\r\n    });\r\n  });\r\n}\r\n\r\nvar util = /*#__PURE__*/ Object.freeze({\r\n  __proto__: null,\r\n  isString: isString,\r\n  type: type,\r\n  toPrecision: toPrecision,\r\n  parseFunction: parseFunction,\r\n  last: last,\r\n  interpolate: interpolate,\r\n  interpolateInv: interpolateInv,\r\n  mapRange: mapRange,\r\n  parseCoordGrammar: parseCoordGrammar,\r\n  multiplyMatrices: multiplyMatrices,\r\n});\r\n\r\n/**\r\n * A class for adding deep extensibility to any piece of JS code\r\n */\r\nclass Hooks {\r\n  add(name, callback, first) {\r\n    if (typeof arguments[0] != 'string') {\r\n      // Multiple hooks\r\n      for (var name in arguments[0]) {\r\n        this.add(name, arguments[0][name], arguments[1]);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    (Array.isArray(name) ? name : [name]).forEach(function (name) {\r\n      this[name] = this[name] || [];\r\n\r\n      if (callback) {\r\n        this[name][first ? 'unshift' : 'push'](callback);\r\n      }\r\n    }, this);\r\n  }\r\n\r\n  run(name, env) {\r\n    this[name] = this[name] || [];\r\n    this[name].forEach(function (callback) {\r\n      callback.call(env && env.context ? env.context : env, env);\r\n    });\r\n  }\r\n}\r\n/**\r\n * The instance of {@link Hooks} used throughout Color.js\r\n */\r\nconst hooks = new Hooks();\r\n\r\n// Global defaults one may want to configure\r\n\r\nvar defaults = {\r\n  gamut_mapping: 'lch.c',\r\n  precision: 5,\r\n  deltaE: '76', // Default deltaE method\r\n};\r\n\r\nconst WHITES = {\r\n  // for compatibility, the four-digit chromaticity-derived ones everyone else uses\r\n  D50: [0.3457 / 0.3585, 1.0, (1.0 - 0.3457 - 0.3585) / 0.3585],\r\n  D65: [0.3127 / 0.329, 1.0, (1.0 - 0.3127 - 0.329) / 0.329],\r\n};\r\n\r\nfunction getWhite(name) {\r\n  if (Array.isArray(name)) {\r\n    return name;\r\n  }\r\n\r\n  return WHITES[name];\r\n}\r\n\r\n// Adapt XYZ from white point W1 to W2\r\nfunction adapt$1(W1, W2, XYZ, options = {}) {\r\n  W1 = getWhite(W1);\r\n  W2 = getWhite(W2);\r\n\r\n  if (!W1 || !W2) {\r\n    throw new TypeError(\r\n      `Missing white point to convert ${!W1 ? 'from' : ''}${!W1 && !W2 ? '/' : ''}${!W2 ? 'to' : ''}`\r\n    );\r\n  }\r\n\r\n  if (W1 === W2) {\r\n    // Same whitepoints, no conversion needed\r\n    return XYZ;\r\n  }\r\n\r\n  let env = { W1, W2, XYZ, options };\r\n\r\n  hooks.run('chromatic-adaptation-start', env);\r\n\r\n  if (!env.M) {\r\n    if (env.W1 === WHITES.D65 && env.W2 === WHITES.D50) {\r\n      env.M = [\r\n        [1.0479298208405488, 0.022946793341019088, -0.05019222954313557],\r\n        [0.029627815688159344, 0.990434484573249, -0.01707382502938514],\r\n        [-0.009243058152591178, 0.015055144896577895, 0.7518742899580008],\r\n      ];\r\n    } else if (env.W1 === WHITES.D50 && env.W2 === WHITES.D65) {\r\n      env.M = [\r\n        [0.9554734527042182, -0.023098536874261423, 0.0632593086610217],\r\n        [-0.028369706963208136, 1.0099954580058226, 0.021041398966943008],\r\n        [0.012314001688319899, -0.020507696433477912, 1.3303659366080753],\r\n      ];\r\n    }\r\n  }\r\n\r\n  hooks.run('chromatic-adaptation-end', env);\r\n\r\n  if (env.M) {\r\n    return multiplyMatrices(env.M, env.XYZ);\r\n  } else {\r\n    throw new TypeError('Only Bradford CAT with white points D50 and D65 supported for now.');\r\n  }\r\n}\r\n\r\nconst ε$4 = 0.000075;\r\n\r\n/**\r\n * Class to represent a color space\r\n */\r\nclass ColorSpace {\r\n  constructor(options) {\r\n    this.id = options.id;\r\n    this.name = options.name;\r\n    this.base = options.base ? ColorSpace.get(options.base) : null;\r\n    this.aliases = options.aliases;\r\n\r\n    if (this.base) {\r\n      this.fromBase = options.fromBase;\r\n      this.toBase = options.toBase;\r\n    }\r\n\r\n    // Coordinate metadata\r\n\r\n    let coords = options.coords ?? this.base.coords;\r\n    this.coords = coords;\r\n\r\n    // White point\r\n\r\n    let white = options.white ?? this.base.white ?? 'D65';\r\n    this.white = getWhite(white);\r\n\r\n    // Sort out formats\r\n\r\n    this.formats = options.formats ?? {};\r\n\r\n    for (let name in this.formats) {\r\n      let format = this.formats[name];\r\n      format.type ||= 'function';\r\n      format.name ||= name;\r\n    }\r\n\r\n    if (options.cssId && !this.formats.functions?.color) {\r\n      this.formats.color = { id: options.cssId };\r\n      Object.defineProperty(this, 'cssId', { value: options.cssId });\r\n    } else if (this.formats?.color && !this.formats?.color.id) {\r\n      this.formats.color.id = this.id;\r\n    }\r\n\r\n    // Other stuff\r\n    this.referred = options.referred;\r\n\r\n    // Compute ancestors and store them, since they will never change\r\n    this.#path = this.#getPath().reverse();\r\n\r\n    hooks.run('colorspace-init-end', this);\r\n  }\r\n\r\n  inGamut(coords, { epsilon = ε$4 } = {}) {\r\n    if (this.isPolar) {\r\n      // Do not check gamut through polar coordinates\r\n      coords = this.toBase(coords);\r\n\r\n      return this.base.inGamut(coords, { epsilon });\r\n    }\r\n\r\n    let coordMeta = Object.values(this.coords);\r\n\r\n    return coords.every((c, i) => {\r\n      let meta = coordMeta[i];\r\n\r\n      if (meta.type !== 'angle' && meta.range) {\r\n        if (Number.isNaN(c)) {\r\n          // NaN is always in gamut\r\n          return true;\r\n        }\r\n\r\n        let [min, max] = meta.range;\r\n        return (min === undefined || c >= min - epsilon) && (max === undefined || c <= max + epsilon);\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  get cssId() {\r\n    return this.formats.functions?.color?.id || this.id;\r\n  }\r\n\r\n  get isPolar() {\r\n    for (let id in this.coords) {\r\n      if (this.coords[id].type === 'angle') {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  #processFormat(format) {\r\n    if (format.coords && !format.coordGrammar) {\r\n      format.type ||= 'function';\r\n      format.name ||= 'color';\r\n\r\n      // Format has not been processed\r\n      format.coordGrammar = parseCoordGrammar(format.coords);\r\n\r\n      let coordFormats = Object.entries(this.coords).map(([id, coordMeta], i) => {\r\n        // Preferred format for each coord is the first one\r\n        let outputType = format.coordGrammar[i][0];\r\n\r\n        let fromRange = coordMeta.range || coordMeta.refRange;\r\n        let toRange = outputType.range,\r\n          suffix = '';\r\n\r\n        // Non-strict equals intentional since outputType could be a string object\r\n        if (outputType == '<percentage>') {\r\n          toRange = [0, 100];\r\n          suffix = '%';\r\n        } else if (outputType == '<angle>') {\r\n          suffix = 'deg';\r\n        }\r\n\r\n        return { fromRange, toRange, suffix };\r\n      });\r\n\r\n      format.serializeCoords = (coords, precision) => {\r\n        return coords.map((c, i) => {\r\n          let { fromRange, toRange, suffix } = coordFormats[i];\r\n\r\n          if (fromRange && toRange) {\r\n            c = mapRange(fromRange, toRange, c);\r\n          }\r\n\r\n          c = toPrecision(c, precision);\r\n\r\n          if (suffix) {\r\n            c += suffix;\r\n          }\r\n\r\n          return c;\r\n        });\r\n      };\r\n    }\r\n\r\n    return format;\r\n  }\r\n\r\n  getFormat(format) {\r\n    if (typeof format === 'object') {\r\n      format = this.#processFormat(format);\r\n      return format;\r\n    }\r\n\r\n    let ret;\r\n    if (format === 'default') {\r\n      // Get first format\r\n      ret = Object.values(this.formats)[0];\r\n    } else {\r\n      ret = this.formats[format];\r\n    }\r\n\r\n    if (ret) {\r\n      ret = this.#processFormat(ret);\r\n      return ret;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  #path;\r\n\r\n  #getPath() {\r\n    let ret = [this];\r\n\r\n    for (let space = this; (space = space.base); ) {\r\n      ret.push(space);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  to(space, coords) {\r\n    if (arguments.length === 1) {\r\n      [space, coords] = [space.space, space.coords];\r\n    }\r\n\r\n    space = ColorSpace.get(space);\r\n\r\n    if (this === space) {\r\n      // Same space, no change needed\r\n      return coords;\r\n    }\r\n\r\n    // Convert NaN to 0, which seems to be valid in every coordinate of every color space\r\n    coords = coords.map((c) => (Number.isNaN(c) ? 0 : c));\r\n\r\n    // Find connection space = lowest common ancestor in the base tree\r\n    let myPath = this.#path;\r\n    let otherPath = space.#path;\r\n\r\n    let connectionSpace, connectionSpaceIndex;\r\n\r\n    for (let i = 0; i < myPath.length; i++) {\r\n      if (myPath[i] === otherPath[i]) {\r\n        connectionSpace = myPath[i];\r\n        connectionSpaceIndex = i;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!connectionSpace) {\r\n      // This should never happen\r\n      throw new Error(`Cannot convert between color spaces ${this} and ${space}: no connection space was found`);\r\n    }\r\n\r\n    // Go up from current space to connection space\r\n    for (let i = myPath.length - 1; i > connectionSpaceIndex; i--) {\r\n      coords = myPath[i].toBase(coords);\r\n    }\r\n\r\n    // Go down from connection space to target space\r\n    for (let i = connectionSpaceIndex + 1; i < otherPath.length; i++) {\r\n      coords = otherPath[i].fromBase(coords);\r\n    }\r\n\r\n    return coords;\r\n  }\r\n\r\n  from(space, coords) {\r\n    if (arguments.length === 1) {\r\n      [space, coords] = [space.space, space.coords];\r\n    }\r\n\r\n    space = ColorSpace.get(space);\r\n\r\n    return space.to(this, coords);\r\n  }\r\n\r\n  toString() {\r\n    return `${this.name} (${this.id})`;\r\n  }\r\n\r\n  getMinCoords() {\r\n    let ret = [];\r\n\r\n    for (let id in this.coords) {\r\n      let meta = this.coords[id];\r\n      let range = meta.range || meta.refRange;\r\n      ret.push(range?.min ?? 0);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  static registry = {};\r\n\r\n  // Returns array of unique color spaces\r\n  static get all() {\r\n    return [...new Set(Object.values(ColorSpace.registry))];\r\n  }\r\n\r\n  static register(id, space) {\r\n    if (arguments.length === 1) {\r\n      space = arguments[0];\r\n      id = space.id;\r\n    }\r\n\r\n    space = this.get(space);\r\n\r\n    if (this.registry[id] && this.registry[id] !== space) {\r\n      throw new Error(`Duplicate color space registration: '${id}'`);\r\n    }\r\n    this.registry[id] = space;\r\n\r\n    // Register aliases when called without an explicit ID.\r\n    if (arguments.length === 1 && space.aliases) {\r\n      for (let alias of space.aliases) {\r\n        this.register(alias, space);\r\n      }\r\n    }\r\n\r\n    return space;\r\n  }\r\n\r\n  /**\r\n   * Lookup ColorSpace object by name\r\n   * @param {ColorSpace | string} name\r\n   */\r\n  static get(space, ...alternatives) {\r\n    if (!space || space instanceof ColorSpace) {\r\n      return space;\r\n    }\r\n\r\n    let argType = type(space);\r\n\r\n    if (argType === 'string') {\r\n      // It's a color space id\r\n      let ret = ColorSpace.registry[space.toLowerCase()];\r\n\r\n      if (!ret) {\r\n        throw new TypeError(`No color space found with id = \"${space}\"`);\r\n      }\r\n\r\n      return ret;\r\n    }\r\n\r\n    if (alternatives.length) {\r\n      return ColorSpace.get(...alternatives);\r\n    }\r\n\r\n    throw new TypeError(`${space} is not a valid color space`);\r\n  }\r\n\r\n  /**\r\n   * Get metadata about a coordinate of a color space\r\n   *\r\n   * @static\r\n   * @param {Array | string} ref\r\n   * @param {ColorSpace | string} [workingSpace]\r\n   * @return {Object}\r\n   */\r\n  static resolveCoord(ref, workingSpace) {\r\n    let coordType = type(ref);\r\n    let space, coord;\r\n\r\n    if (coordType === 'string') {\r\n      if (ref.includes('.')) {\r\n        // Absolute coordinate\r\n        [space, coord] = ref.split('.');\r\n      } else {\r\n        // Relative coordinate\r\n        [space, coord] = [, ref];\r\n      }\r\n    } else if (Array.isArray(ref)) {\r\n      [space, coord] = ref;\r\n    } else {\r\n      // Object\r\n      space = ref.space;\r\n      coord = ref.coordId;\r\n    }\r\n\r\n    space = ColorSpace.get(space);\r\n\r\n    if (!space) {\r\n      space = workingSpace;\r\n    }\r\n\r\n    if (!space) {\r\n      throw new TypeError(\r\n        `Cannot resolve coordinate reference ${ref}: No color space specified and relative references are not allowed here`\r\n      );\r\n    }\r\n\r\n    coordType = type(coord);\r\n\r\n    if (coordType === 'number' || (coordType === 'string' && coord >= 0)) {\r\n      // Resolve numerical coord\r\n      let meta = Object.entries(space.coords)[coord];\r\n\r\n      if (meta) {\r\n        return { space, id: meta[0], index: coord, ...meta[1] };\r\n      }\r\n    }\r\n\r\n    space = ColorSpace.get(space);\r\n\r\n    let normalizedCoord = coord.toLowerCase();\r\n\r\n    let i = 0;\r\n    for (let id in space.coords) {\r\n      let meta = space.coords[id];\r\n\r\n      if (id.toLowerCase() === normalizedCoord || meta.name?.toLowerCase() === normalizedCoord) {\r\n        return { space, id, index: i, ...meta };\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    throw new TypeError(\r\n      `No \"${coord}\" coordinate found in ${space.name}. Its coordinates are: ${Object.keys(space.coords).join(', ')}`\r\n    );\r\n  }\r\n\r\n  static DEFAULT_FORMAT = {\r\n    type: 'functions',\r\n    name: 'color',\r\n  };\r\n}\r\n\r\nvar XYZ_D65 = new ColorSpace({\r\n  id: 'xyz-d65',\r\n  name: 'XYZ D65',\r\n  coords: {\r\n    x: { name: 'X' },\r\n    y: { name: 'Y' },\r\n    z: { name: 'Z' },\r\n  },\r\n  white: 'D65',\r\n  formats: {\r\n    color: {\r\n      ids: ['xyz-d65', 'xyz'],\r\n    },\r\n  },\r\n  aliases: ['xyz'],\r\n});\r\n\r\n/**\r\n * Convenience class for RGB color spaces\r\n * @extends {ColorSpace}\r\n */\r\nclass RGBColorSpace extends ColorSpace {\r\n  /**\r\n   * Creates a new RGB ColorSpace.\r\n   * If coords are not specified, they will use the default RGB coords.\r\n   * Instead of `fromBase()` and `toBase()` functions,\r\n   * you can specify to/from XYZ matrices and have `toBase()` and `fromBase()` automatically generated.\r\n   * @param {*} options - Same options as {@link ColorSpace} plus:\r\n   * @param {number[][]} options.toXYZ_M - Matrix to convert to XYZ\r\n   * @param {number[][]} options.fromXYZ_M - Matrix to convert from XYZ\r\n   */\r\n  constructor(options) {\r\n    if (!options.coords) {\r\n      options.coords = {\r\n        r: {\r\n          range: [0, 1],\r\n          name: 'Red',\r\n        },\r\n        g: {\r\n          range: [0, 1],\r\n          name: 'Green',\r\n        },\r\n        b: {\r\n          range: [0, 1],\r\n          name: 'Blue',\r\n        },\r\n      };\r\n    }\r\n\r\n    if (!options.base) {\r\n      options.base = XYZ_D65;\r\n    }\r\n\r\n    if (options.toXYZ_M && options.fromXYZ_M) {\r\n      options.toBase ??= (rgb) => {\r\n        let xyz = multiplyMatrices(options.toXYZ_M, rgb);\r\n\r\n        if (this.white !== this.base.white) {\r\n          // Perform chromatic adaptation\r\n          xyz = adapt$1(this.white, this.base.white, xyz);\r\n        }\r\n\r\n        return xyz;\r\n      };\r\n\r\n      options.fromBase ??= (xyz) => {\r\n        xyz = adapt$1(this.base.white, this.white, xyz);\r\n        return multiplyMatrices(options.fromXYZ_M, xyz);\r\n      };\r\n    }\r\n\r\n    options.referred ??= 'display';\r\n\r\n    super(options);\r\n  }\r\n}\r\n\r\n// CSS color to Color object\r\nfunction parse(str) {\r\n  let env = { str: String(str)?.trim() };\r\n  hooks.run('parse-start', env);\r\n\r\n  if (env.color) {\r\n    return env.color;\r\n  }\r\n\r\n  env.parsed = parseFunction(env.str);\r\n\r\n  if (env.parsed) {\r\n    // Is a functional syntax\r\n    let name = env.parsed.name;\r\n\r\n    if (name === 'color') {\r\n      // color() function\r\n      let id = env.parsed.args.shift();\r\n      let alpha = env.parsed.rawArgs.indexOf('/') > 0 ? env.parsed.args.pop() : 1;\r\n\r\n      for (let space of ColorSpace.all) {\r\n        let colorSpec = space.getFormat('color');\r\n\r\n        if (colorSpec) {\r\n          if (id === colorSpec.id || colorSpec.ids?.includes(id)) {\r\n            // From https://drafts.csswg.org/css-color-4/#color-function\r\n            // If more <number>s or <percentage>s are provided than parameters that the colorspace takes, the excess <number>s at the end are ignored.\r\n            // If less <number>s or <percentage>s are provided than parameters that the colorspace takes, the missing parameters default to 0. (This is particularly convenient for multichannel printers where the additional inks are spot colors or varnishes that most colors on the page won’t use.)\r\n            let argCount = Object.keys(space.coords).length;\r\n            let coords = Array(argCount).fill(0);\r\n            coords.forEach((_, i) => (coords[i] = env.parsed.args[i] || 0));\r\n\r\n            return { spaceId: space.id, coords, alpha };\r\n          }\r\n        }\r\n      }\r\n\r\n      // Not found\r\n      let didYouMean = '';\r\n      if (id in ColorSpace.registry) {\r\n        // Used color space id instead of color() id, these are often different\r\n        let cssId = ColorSpace.registry[id].formats?.functions?.color?.id;\r\n\r\n        if (cssId) {\r\n          didYouMean = `Did you mean color(${cssId})?`;\r\n        }\r\n      }\r\n      throw new TypeError(`Cannot parse color(${id}). ` + (didYouMean || 'Missing a plugin?'));\r\n    } else {\r\n      for (let space of ColorSpace.all) {\r\n        // color space specific function\r\n        let format = space.getFormat(name);\r\n        if (format && format.type === 'function') {\r\n          let alpha = 1;\r\n\r\n          if (format.lastAlpha || last(env.parsed.args).alpha) {\r\n            alpha = env.parsed.args.pop();\r\n          }\r\n\r\n          let coords = env.parsed.args;\r\n\r\n          if (format.coordGrammar) {\r\n            Object.entries(space.coords).forEach(([id, coordMeta], i) => {\r\n              let coordGrammar = format.coordGrammar[i];\r\n              let providedType = coords[i]?.type;\r\n\r\n              // Find grammar alternative that matches the provided type\r\n              // Non-strict equals is intentional because we are comparing w/ string objects\r\n              coordGrammar = coordGrammar.find((c) => c == providedType);\r\n\r\n              // Check that each coord conforms to its grammar\r\n              if (!coordGrammar) {\r\n                // Type does not exist in the grammar, throw\r\n                let coordName = coordMeta.name || id;\r\n                throw new TypeError(`${providedType} not allowed for ${coordName} in ${name}()`);\r\n              }\r\n\r\n              let fromRange = coordGrammar.range;\r\n\r\n              if (providedType === '<percentage>') {\r\n                fromRange ||= [0, 1];\r\n              }\r\n\r\n              let toRange = coordMeta.range || coordMeta.refRange;\r\n\r\n              if (fromRange && toRange) {\r\n                coords[i] = mapRange(fromRange, toRange, coords[i]);\r\n              }\r\n            });\r\n          }\r\n\r\n          return {\r\n            spaceId: space.id,\r\n            coords,\r\n            alpha,\r\n          };\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // Custom, colorspace-specific format\r\n    for (let space of ColorSpace.all) {\r\n      for (let formatId in space.formats) {\r\n        let format = space.formats[formatId];\r\n\r\n        if (format.type !== 'custom') {\r\n          continue;\r\n        }\r\n\r\n        if (format.test && !format.test(env.str)) {\r\n          continue;\r\n        }\r\n\r\n        let color = format.parse(env.str);\r\n\r\n        if (color) {\r\n          color.alpha ??= 1;\r\n          return color;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // If we're here, we couldn't parse\r\n  throw new TypeError(`Could not parse ${str} as a color. Missing a plugin?`);\r\n}\r\n\r\n/**\r\n * Resolves a color reference (object or string) to a plain color object\r\n * @param {Color | {space, coords, alpha} | string} color\r\n * @returns {{space, coords, alpha}}\r\n */\r\nfunction getColor(color) {\r\n  if (!color) {\r\n    throw new TypeError('Empty color reference');\r\n  }\r\n\r\n  if (isString(color)) {\r\n    color = parse(color);\r\n  }\r\n\r\n  // Object fixup\r\n  let space = color.space || color.spaceId;\r\n\r\n  if (!(space instanceof ColorSpace)) {\r\n    // Convert string id to color space object\r\n    color.space = ColorSpace.get(space);\r\n  }\r\n\r\n  if (color.alpha === undefined) {\r\n    color.alpha = 1;\r\n  }\r\n\r\n  return color;\r\n}\r\n\r\n/**\r\n * Get the coordinates of a color in another color space\r\n *\r\n * @param {string | ColorSpace} space\r\n * @returns {number[]}\r\n */\r\nfunction getAll(color, space) {\r\n  space = ColorSpace.get(space);\r\n  return space.from(color);\r\n}\r\n\r\nfunction get(color, prop) {\r\n  let { space, index } = ColorSpace.resolveCoord(prop, color.space);\r\n  let coords = getAll(color, space);\r\n  return coords[index];\r\n}\r\n\r\nfunction setAll(color, space, coords) {\r\n  space = ColorSpace.get(space);\r\n  color.coords = space.to(color.space, coords);\r\n  return color;\r\n}\r\n\r\n// Set properties and return current instance\r\nfunction set$1(color, prop, value) {\r\n  color = getColor(color);\r\n\r\n  if (arguments.length === 2 && type(arguments[1]) === 'object') {\r\n    // Argument is an object literal\r\n    let object = arguments[1];\r\n    for (let p in object) {\r\n      set$1(color, p, object[p]);\r\n    }\r\n  } else {\r\n    if (typeof value === 'function') {\r\n      value = value(get(color, prop));\r\n    }\r\n\r\n    let { space, index } = ColorSpace.resolveCoord(prop, color.space);\r\n    let coords = getAll(color, space);\r\n    coords[index] = value;\r\n    setAll(color, space, coords);\r\n  }\r\n\r\n  return color;\r\n}\r\n\r\nvar XYZ_D50 = new ColorSpace({\r\n  id: 'xyz-d50',\r\n  name: 'XYZ D50',\r\n  white: 'D50',\r\n  base: XYZ_D65,\r\n  fromBase: (coords) => adapt$1(XYZ_D65.white, 'D50', coords),\r\n  toBase: (coords) => adapt$1('D50', XYZ_D65.white, coords),\r\n  formats: {\r\n    color: {},\r\n  },\r\n});\r\n\r\n// κ * ε  = 2^3 = 8\r\nconst ε$3 = 216 / 24389; // 6^3/29^3 == (24/116)^3\r\nconst ε3$1 = 24 / 116;\r\nconst κ$1 = 24389 / 27; // 29^3/3^3\r\n\r\nlet white$1 = WHITES.D50;\r\n\r\nvar lab = new ColorSpace({\r\n  id: 'lab',\r\n  name: 'Lab',\r\n  coords: {\r\n    l: {\r\n      refRange: [0, 100],\r\n      name: 'L',\r\n    },\r\n    a: {\r\n      refRange: [-125, 125],\r\n    },\r\n    b: {\r\n      refRange: [-125, 125],\r\n    },\r\n  },\r\n\r\n  // Assuming XYZ is relative to D50, convert to CIE Lab\r\n  // from CIE standard, which now defines these as a rational fraction\r\n  white: white$1,\r\n\r\n  base: XYZ_D50,\r\n  // Convert D50-adapted XYX to Lab\r\n  //  CIE 15.3:2004 section 8.2.1.1\r\n  fromBase(XYZ) {\r\n    // compute xyz, which is XYZ scaled relative to reference white\r\n    let xyz = XYZ.map((value, i) => value / white$1[i]);\r\n\r\n    // now compute f\r\n    let f = xyz.map((value) => (value > ε$3 ? Math.cbrt(value) : (κ$1 * value + 16) / 116));\r\n\r\n    return [\r\n      116 * f[1] - 16, // L\r\n      500 * (f[0] - f[1]), // a\r\n      200 * (f[1] - f[2]), // b\r\n    ];\r\n  },\r\n  // Convert Lab to D50-adapted XYZ\r\n  // Same result as CIE 15.3:2004 Appendix D although the derivation is different\r\n  // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\r\n  toBase(Lab) {\r\n    // compute f, starting with the luminance-related term\r\n    let f = [];\r\n    f[1] = (Lab[0] + 16) / 116;\r\n    f[0] = Lab[1] / 500 + f[1];\r\n    f[2] = f[1] - Lab[2] / 200;\r\n\r\n    // compute xyz\r\n    let xyz = [\r\n      f[0] > ε3$1 ? Math.pow(f[0], 3) : (116 * f[0] - 16) / κ$1,\r\n      Lab[0] > 8 ? Math.pow((Lab[0] + 16) / 116, 3) : Lab[0] / κ$1,\r\n      f[2] > ε3$1 ? Math.pow(f[2], 3) : (116 * f[2] - 16) / κ$1,\r\n    ];\r\n\r\n    // Compute XYZ by scaling xyz by reference white\r\n    return xyz.map((value, i) => value * white$1[i]);\r\n  },\r\n\r\n  formats: {\r\n    lab: {\r\n      coords: ['<percentage> | <number>', '<number>', '<number>'],\r\n    },\r\n  },\r\n});\r\n\r\nfunction constrain(angle) {\r\n  return ((angle % 360) + 360) % 360;\r\n}\r\n\r\nfunction adjust(arc, angles) {\r\n  if (arc === 'raw') {\r\n    return angles;\r\n  }\r\n\r\n  let [a1, a2] = angles.map(constrain);\r\n\r\n  let angleDiff = a2 - a1;\r\n\r\n  if (arc === 'increasing') {\r\n    if (angleDiff < 0) {\r\n      a2 += 360;\r\n    }\r\n  } else if (arc === 'decreasing') {\r\n    if (angleDiff > 0) {\r\n      a1 += 360;\r\n    }\r\n  } else if (arc === 'longer') {\r\n    if (-180 < angleDiff && angleDiff < 180) {\r\n      if (angleDiff > 0) {\r\n        a2 += 360;\r\n      } else {\r\n        a1 += 360;\r\n      }\r\n    }\r\n  } else if (arc === 'shorter') {\r\n    if (angleDiff > 180) {\r\n      a1 += 360;\r\n    } else if (angleDiff < -180) {\r\n      a2 += 360;\r\n    }\r\n  }\r\n\r\n  return [a1, a2];\r\n}\r\n\r\nvar lch = new ColorSpace({\r\n  id: 'lch',\r\n  name: 'LCH',\r\n  coords: {\r\n    l: {\r\n      refRange: [0, 100],\r\n      name: 'Lightness',\r\n    },\r\n    c: {\r\n      refRange: [0, 150],\r\n      name: 'Chroma',\r\n    },\r\n    h: {\r\n      refRange: [0, 360],\r\n      type: 'angle',\r\n      name: 'Hue',\r\n    },\r\n  },\r\n\r\n  base: lab,\r\n  fromBase(Lab) {\r\n    // Convert to polar form\r\n    let [L, a, b] = Lab;\r\n    let hue;\r\n    const ε = 0.02;\r\n\r\n    if (Math.abs(a) < ε && Math.abs(b) < ε) {\r\n      hue = NaN;\r\n    } else {\r\n      hue = (Math.atan2(b, a) * 180) / Math.PI;\r\n    }\r\n\r\n    return [\r\n      L, // L is still L\r\n      Math.sqrt(a ** 2 + b ** 2), // Chroma\r\n      constrain(hue), // Hue, in degrees [0 to 360)\r\n    ];\r\n  },\r\n  toBase(LCH) {\r\n    // Convert from polar form\r\n    let [Lightness, Chroma, Hue] = LCH;\r\n    // Clamp any negative Chroma\r\n    if (Chroma < 0) {\r\n      Chroma = 0;\r\n    } // Deal with NaN Hue\r\n    if (isNaN(Hue)) {\r\n      Hue = 0;\r\n    }\r\n    return [\r\n      Lightness, // L is still L\r\n      Chroma * Math.cos((Hue * Math.PI) / 180), // a\r\n      Chroma * Math.sin((Hue * Math.PI) / 180), // b\r\n    ];\r\n  },\r\n\r\n  formats: {\r\n    lch: {\r\n      coords: ['<percentage> | <number>', '<number>', '<number> | <angle>'],\r\n    },\r\n  },\r\n});\r\n\r\n// deltaE2000 is a statistically significant improvement\r\n// and is recommended by the CIE and Idealliance\r\n// especially for color differences less than 10 deltaE76\r\n// but is wicked complicated\r\n// and many implementations have small errors!\r\n// DeltaE2000 is also discontinuous; in case this\r\n// matters to you, use deltaECMC instead.\r\n\r\nconst Gfactor = 25 ** 7;\r\nconst π$1 = Math.PI;\r\nconst r2d = 180 / π$1;\r\nconst d2r$1 = π$1 / 180;\r\n\r\nfunction deltaE2000(color, sample, { kL = 1, kC = 1, kH = 1 } = {}) {\r\n  // Given this color as the reference\r\n  // and the function parameter as the sample,\r\n  // calculate deltaE 2000.\r\n\r\n  // This implementation assumes the parametric\r\n  // weighting factors kL, kC and kH\r\n  // for the influence of viewing conditions\r\n  // are all 1, as sadly seems typical.\r\n  // kL should be increased for lightness texture or noise\r\n  // and kC increased for chroma noise\r\n\r\n  let [L1, a1, b1] = lab.from(color);\r\n  let C1 = lch.from(lab, [L1, a1, b1])[1];\r\n  let [L2, a2, b2] = lab.from(sample);\r\n  let C2 = lch.from(lab, [L2, a2, b2])[1];\r\n\r\n  // Check for negative Chroma,\r\n  // which might happen through\r\n  // direct user input of LCH values\r\n\r\n  if (C1 < 0) {\r\n    C1 = 0;\r\n  }\r\n  if (C2 < 0) {\r\n    C2 = 0;\r\n  }\r\n\r\n  let Cbar = (C1 + C2) / 2; // mean Chroma\r\n\r\n  // calculate a-axis asymmetry factor from mean Chroma\r\n  // this turns JND ellipses for near-neutral colors back into circles\r\n  let C7 = Cbar ** 7;\r\n\r\n  let G = 0.5 * (1 - Math.sqrt(C7 / (C7 + Gfactor)));\r\n\r\n  // scale a axes by asymmetry factor\r\n  // this by the way is why there is no Lab2000 colorspace\r\n  let adash1 = (1 + G) * a1;\r\n  let adash2 = (1 + G) * a2;\r\n\r\n  // calculate new Chroma from scaled a and original b axes\r\n  let Cdash1 = Math.sqrt(adash1 ** 2 + b1 ** 2);\r\n  let Cdash2 = Math.sqrt(adash2 ** 2 + b2 ** 2);\r\n\r\n  // calculate new hues, with zero hue for true neutrals\r\n  // and in degrees, not radians\r\n\r\n  let h1 = adash1 === 0 && b1 === 0 ? 0 : Math.atan2(b1, adash1);\r\n  let h2 = adash2 === 0 && b2 === 0 ? 0 : Math.atan2(b2, adash2);\r\n\r\n  if (h1 < 0) {\r\n    h1 += 2 * π$1;\r\n  }\r\n  if (h2 < 0) {\r\n    h2 += 2 * π$1;\r\n  }\r\n\r\n  h1 *= r2d;\r\n  h2 *= r2d;\r\n\r\n  // Lightness and Chroma differences; sign matters\r\n  let ΔL = L2 - L1;\r\n  let ΔC = Cdash2 - Cdash1;\r\n\r\n  // Hue difference, getting the sign correct\r\n  let hdiff = h2 - h1;\r\n  let hsum = h1 + h2;\r\n  let habs = Math.abs(hdiff);\r\n  let Δh;\r\n\r\n  if (Cdash1 * Cdash2 === 0) {\r\n    Δh = 0;\r\n  } else if (habs <= 180) {\r\n    Δh = hdiff;\r\n  } else if (hdiff > 180) {\r\n    Δh = hdiff - 360;\r\n  } else if (hdiff < -180) {\r\n    Δh = hdiff + 360;\r\n  } else {\r\n    console.log('the unthinkable has happened');\r\n  }\r\n\r\n  // weighted Hue difference, more for larger Chroma\r\n  let ΔH = 2 * Math.sqrt(Cdash2 * Cdash1) * Math.sin((Δh * d2r$1) / 2);\r\n\r\n  // calculate mean Lightness and Chroma\r\n  let Ldash = (L1 + L2) / 2;\r\n  let Cdash = (Cdash1 + Cdash2) / 2;\r\n  let Cdash7 = Math.pow(Cdash, 7);\r\n\r\n  // Compensate for non-linearity in the blue region of Lab.\r\n  // Four possibilities for hue weighting factor,\r\n  // depending on the angles, to get the correct sign\r\n  let hdash;\r\n  if (Cdash1 * Cdash2 === 0) {\r\n    hdash = hsum; // which should be zero\r\n  } else if (habs <= 180) {\r\n    hdash = hsum / 2;\r\n  } else if (hsum < 360) {\r\n    hdash = (hsum + 360) / 2;\r\n  } else {\r\n    hdash = (hsum - 360) / 2;\r\n  }\r\n\r\n  // positional corrections to the lack of uniformity of CIELAB\r\n  // These are all trying to make JND ellipsoids more like spheres\r\n\r\n  // SL Lightness crispening factor\r\n  // a background with L=50 is assumed\r\n  let lsq = (Ldash - 50) ** 2;\r\n  let SL = 1 + (0.015 * lsq) / Math.sqrt(20 + lsq);\r\n\r\n  // SC Chroma factor, similar to those in CMC and deltaE 94 formulae\r\n  let SC = 1 + 0.045 * Cdash;\r\n\r\n  // Cross term T for blue non-linearity\r\n  let T = 1;\r\n  T -= 0.17 * Math.cos((hdash - 30) * d2r$1);\r\n  T += 0.24 * Math.cos(2 * hdash * d2r$1);\r\n  T += 0.32 * Math.cos((3 * hdash + 6) * d2r$1);\r\n  T -= 0.2 * Math.cos((4 * hdash - 63) * d2r$1);\r\n\r\n  // SH Hue factor depends on Chroma,\r\n  // as well as adjusted hue angle like deltaE94.\r\n  let SH = 1 + 0.015 * Cdash * T;\r\n\r\n  // RT Hue rotation term compensates for rotation of JND ellipses\r\n  // and Munsell constant hue lines\r\n  // in the medium-high Chroma blue region\r\n  // (Hue 225 to 315)\r\n  let Δθ = 30 * Math.exp(-1 * ((hdash - 275) / 25) ** 2);\r\n  let RC = 2 * Math.sqrt(Cdash7 / (Cdash7 + Gfactor));\r\n  let RT = -1 * Math.sin(2 * Δθ * d2r$1) * RC;\r\n\r\n  // Finally calculate the deltaE, term by term as root sume of squares\r\n  let dE = (ΔL / (kL * SL)) ** 2;\r\n  dE += (ΔC / (kC * SC)) ** 2;\r\n  dE += (ΔH / (kH * SH)) ** 2;\r\n  dE += RT * (ΔC / (kC * SC)) * (ΔH / (kH * SH));\r\n  return Math.sqrt(dE);\r\n  // Yay!!!\r\n}\r\n\r\nconst ε$2 = 0.000075;\r\n\r\n/**\r\n * Check if a color is in gamut of either its own or another color space\r\n * @return {Boolean} Is the color in gamut?\r\n */\r\nfunction inGamut(color, space = color.space, { epsilon = ε$2 } = {}) {\r\n  color = getColor(color);\r\n  space = ColorSpace.get(space);\r\n  let coords = color.coords;\r\n\r\n  if (space !== color.space) {\r\n    coords = space.from(color);\r\n  }\r\n\r\n  return space.inGamut(coords, { epsilon });\r\n}\r\n\r\nfunction clone(color) {\r\n  return {\r\n    space: color.space,\r\n    coords: color.coords.slice(),\r\n    alpha: color.alpha,\r\n  };\r\n}\r\n\r\n/**\r\n * Force coordinates to be in gamut of a certain color space.\r\n * Mutates the color it is passed.\r\n * @param {Object} options\r\n * @param {string} options.method - How to force into gamut.\r\n *        If \"clip\", coordinates are just clipped to their reference range.\r\n *        If in the form [colorSpaceId].[coordName], that coordinate is reduced\r\n *        until the color is in gamut. Please note that this may produce nonsensical\r\n *        results for certain coordinates (e.g. hue) or infinite loops if reducing the coordinate never brings the color in gamut.\r\n * @param {ColorSpace|string} options.space - The space whose gamut we want to map to\r\n */\r\nfunction toGamut(color, { method = defaults.gamut_mapping, space = color.space } = {}) {\r\n  if (isString(arguments[1])) {\r\n    space = arguments[1];\r\n  }\r\n\r\n  space = ColorSpace.get(space);\r\n\r\n  if (inGamut(color, space, { epsilon: 0 })) {\r\n    return color;\r\n  }\r\n\r\n  // 3 spaces:\r\n  // color.space: current color space\r\n  // space: space whose gamut we are mapping to\r\n  // mapSpace: space with the coord we're reducing\r\n  let spaceColor = to(color, space);\r\n\r\n  if (method !== 'clip' && !inGamut(color, space)) {\r\n    let clipped = toGamut(clone(spaceColor), { method: 'clip', space });\r\n    if (deltaE2000(color, clipped) > 2) {\r\n      // Reduce a coordinate of a certain color space until the color is in gamut\r\n      let coordMeta = ColorSpace.resolveCoord(method);\r\n      let mapSpace = coordMeta.space;\r\n      let coordId = coordMeta.id;\r\n\r\n      let mappedColor = to(spaceColor, mapSpace);\r\n      let bounds = coordMeta.range || coordMeta.refRange;\r\n      let min = bounds[0];\r\n      let ε = 0.01; // for deltaE\r\n      let low = min;\r\n      let high = get(mappedColor, coordId);\r\n\r\n      while (high - low > ε) {\r\n        let clipped = clone(mappedColor);\r\n        clipped = toGamut(clipped, { space, method: 'clip' });\r\n        let deltaE = deltaE2000(mappedColor, clipped);\r\n\r\n        if (deltaE - 2 < ε) {\r\n          low = get(mappedColor, coordId);\r\n        } else {\r\n          high = get(mappedColor, coordId);\r\n        }\r\n\r\n        set$1(mappedColor, coordId, (low + high) / 2);\r\n      }\r\n\r\n      spaceColor = to(mappedColor, space);\r\n    } else {\r\n      spaceColor = clipped;\r\n    }\r\n  }\r\n\r\n  if (\r\n    method === 'clip' || // Dumb coord clipping\r\n    // finish off smarter gamut mapping with clip to get rid of ε, see #17\r\n    !inGamut(spaceColor, space, { epsilon: 0 })\r\n  ) {\r\n    let bounds = Object.values(space.coords).map((c) => c.range || []);\r\n\r\n    spaceColor.coords = spaceColor.coords.map((c, i) => {\r\n      let [min, max] = bounds[i];\r\n\r\n      if (min !== undefined) {\r\n        c = Math.max(min, c);\r\n      }\r\n\r\n      if (max !== undefined) {\r\n        c = Math.min(c, max);\r\n      }\r\n\r\n      return c;\r\n    });\r\n  }\r\n\r\n  if (space !== color.space) {\r\n    spaceColor = to(spaceColor, color.space);\r\n  }\r\n\r\n  color.coords = spaceColor.coords;\r\n  return color;\r\n}\r\n\r\ntoGamut.returns = 'color';\r\n\r\n/**\r\n * Convert to color space and return a new color\r\n * @param {Object|string} space - Color space object or id\r\n * @param {Object} options\r\n * @param {boolean} options.inGamut - Whether to force resulting color in gamut\r\n * @returns {Color}\r\n */\r\nfunction to(color, space, { inGamut } = {}) {\r\n  color = getColor(color);\r\n  space = ColorSpace.get(space);\r\n\r\n  let coords = space.from(color);\r\n  let ret = { space, coords, alpha: color.alpha };\r\n\r\n  if (inGamut) {\r\n    ret = toGamut(ret);\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nto.returns = 'color';\r\n\r\n/**\r\n * Generic toString() method, outputs a color(spaceId ...coords) function, a functional syntax, or custom formats defined by the color space\r\n * @param {Object} options\r\n * @param {number} options.precision - Significant digits\r\n * @param {boolean} options.inGamut - Adjust coordinates to fit in gamut first? [default: false]\r\n */\r\nfunction serialize(\r\n  color,\r\n  { precision = defaults.precision, format = 'default', inGamut: inGamut$1 = true, ...customOptions } = {}\r\n) {\r\n  let ret;\r\n\r\n  color = getColor(color);\r\n\r\n  let formatId = format;\r\n  format = color.space.getFormat(format) ?? color.space.getFormat('default') ?? ColorSpace.DEFAULT_FORMAT;\r\n\r\n  inGamut$1 ||= format.toGamut;\r\n\r\n  let coords = color.coords;\r\n\r\n  // Convert NaN to zeros to have a chance at a valid CSS color\r\n  // Also convert -0 to 0\r\n  // This also clones it so we can manipulate it\r\n  coords = coords.map((c) => (c ? c : 0));\r\n\r\n  if (inGamut$1 && !inGamut(color)) {\r\n    coords = toGamut(clone(color), inGamut$1 === true ? undefined : inGamut$1).coords;\r\n  }\r\n\r\n  if (format.type === 'custom') {\r\n    customOptions.precision = precision;\r\n\r\n    if (format.serialize) {\r\n      ret = format.serialize(coords, color.alpha, customOptions);\r\n    } else {\r\n      throw new TypeError(`format ${formatId} can only be used to parse colors, not for serialization`);\r\n    }\r\n  } else {\r\n    // Functional syntax\r\n    let name = format.name || 'color';\r\n\r\n    if (format.serializeCoords) {\r\n      coords = format.serializeCoords(coords, precision);\r\n    } else {\r\n      if (precision !== null) {\r\n        coords = coords.map((c) => toPrecision(c, precision));\r\n      }\r\n    }\r\n\r\n    let args = [...coords];\r\n\r\n    if (name === 'color') {\r\n      // If output is a color() function, add colorspace id as first argument\r\n      let cssId = format.id || format.ids?.[0] || color.space.id;\r\n      args.unshift(cssId);\r\n    }\r\n\r\n    let alpha = color.alpha;\r\n    if (precision !== null) {\r\n      alpha = toPrecision(alpha, precision);\r\n    }\r\n\r\n    let strAlpha = color.alpha < 1 ? ` ${format.commas ? ',' : '/'} ${alpha}` : '';\r\n    ret = `${name}(${args.join(format.commas ? ', ' : ' ')}${strAlpha})`;\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n// convert an array of linear-light rec2020 values to CIE XYZ\r\n// using  D65 (no chromatic adaptation)\r\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\r\n// 0 is actually calculated as  4.994106574466076e-17\r\nconst toXYZ_M$5 = [\r\n  [0.6369580483012914, 0.14461690358620832, 0.1688809751641721],\r\n  [0.2627002120112671, 0.6779980715188708, 0.05930171646986196],\r\n  [0.0, 0.028072693049087428, 1.060985057710791],\r\n];\r\n\r\n// from ITU-R BT.2124-0 Annex 2 p.3\r\nconst fromXYZ_M$5 = [\r\n  [1.716651187971268, -0.355670783776392, -0.25336628137366],\r\n  [-0.666684351832489, 1.616481236634939, 0.0157685458139111],\r\n  [0.017639857445311, -0.042770613257809, 0.942103121235474],\r\n];\r\n\r\nvar REC2020Linear = new RGBColorSpace({\r\n  id: 'rec2020-linear',\r\n  name: 'Linear REC.2020',\r\n  white: 'D65',\r\n  toXYZ_M: toXYZ_M$5,\r\n  fromXYZ_M: fromXYZ_M$5,\r\n});\r\n\r\n// import sRGB from \"./srgb.js\";\r\n\r\nconst α = 1.09929682680944;\r\nconst β = 0.018053968510807;\r\n\r\nvar REC2020 = new RGBColorSpace({\r\n  id: 'rec2020',\r\n  name: 'REC.2020',\r\n  base: REC2020Linear,\r\n  // Non-linear transfer function from Rec. ITU-R BT.2020-2 table 4\r\n  toBase(RGB) {\r\n    return RGB.map(function (val) {\r\n      if (val < β * 4.5) {\r\n        return val / 4.5;\r\n      }\r\n\r\n      return Math.pow((val + α - 1) / α, 1 / 0.45);\r\n    });\r\n  },\r\n  fromBase(RGB) {\r\n    return RGB.map(function (val) {\r\n      if (val >= β) {\r\n        return α * Math.pow(val, 0.45) - (α - 1);\r\n      }\r\n\r\n      return 4.5 * val;\r\n    });\r\n  },\r\n  formats: {\r\n    color: {},\r\n  },\r\n});\r\n\r\nconst toXYZ_M$4 = [\r\n  [0.4865709486482162, 0.26566769316909306, 0.1982172852343625],\r\n  [0.2289745640697488, 0.6917385218365064, 0.079286914093745],\r\n  [0.0, 0.04511338185890264, 1.043944368900976],\r\n];\r\n\r\nconst fromXYZ_M$4 = [\r\n  [2.493496911941425, -0.9313836179191239, -0.40271078445071684],\r\n  [-0.8294889695615747, 1.7626640603183463, 0.023624685841943577],\r\n  [0.03584583024378447, -0.07617238926804182, 0.9568845240076872],\r\n];\r\n\r\nvar P3Linear = new RGBColorSpace({\r\n  id: 'p3-linear',\r\n  name: 'Linear P3',\r\n  white: 'D65',\r\n  toXYZ_M: toXYZ_M$4,\r\n  fromXYZ_M: fromXYZ_M$4,\r\n});\r\n\r\n// This is the linear-light version of sRGB\r\n// as used for example in SVG filters\r\n// or in Canvas\r\n\r\n// This matrix was calculated directly from the RGB and white chromaticities\r\n// when rounded to 8 decimal places, it agrees completely with the official matrix\r\n// see https://github.com/w3c/csswg-drafts/issues/5922\r\nconst toXYZ_M$3 = [\r\n  [0.41239079926595934, 0.357584339383878, 0.1804807884018343],\r\n  [0.21263900587151027, 0.715168678767756, 0.07219231536073371],\r\n  [0.01933081871559182, 0.11919477979462598, 0.9505321522496607],\r\n];\r\n\r\n// This matrix is the inverse of the above;\r\n// again it agrees with the official definition when rounded to 8 decimal places\r\nconst fromXYZ_M$3 = [\r\n  [3.2409699419045226, -1.537383177570094, -0.4986107602930034],\r\n  [-0.9692436362808796, 1.8759675015077202, 0.04155505740717559],\r\n  [0.05563007969699366, -0.20397695888897652, 1.0569715142428786],\r\n];\r\n\r\nvar sRGBLinear = new RGBColorSpace({\r\n  id: 'srgb-linear',\r\n  name: 'Linear sRGB',\r\n  white: 'D65',\r\n  toXYZ_M: toXYZ_M$3,\r\n  fromXYZ_M: fromXYZ_M$3,\r\n  formats: {\r\n    color: {},\r\n  },\r\n});\r\n\r\n/* List of CSS color keywords\r\n * Note that this does not include currentColor, transparent,\r\n * or system colors\r\n */\r\n\r\n// To produce: Visit https://www.w3.org/TR/css-color-4/#named-colors\r\n// and run in the console:\r\n// copy($$(\"tr\", $(\".named-color-table tbody\")).map(tr => `\"${tr.cells[2].textContent.trim()}\": [${tr.cells[4].textContent.trim().split(/\\s+/).map(c => c === \"0\"? \"0\" : c === \"255\"? \"1\" : c + \" / 255\").join(\", \")}]`).join(\",\\n\"))\r\nvar KEYWORDS = {\r\n  aliceblue: [240 / 255, 248 / 255, 1],\r\n  antiquewhite: [250 / 255, 235 / 255, 215 / 255],\r\n  aqua: [0, 1, 1],\r\n  aquamarine: [127 / 255, 1, 212 / 255],\r\n  azure: [240 / 255, 1, 1],\r\n  beige: [245 / 255, 245 / 255, 220 / 255],\r\n  bisque: [1, 228 / 255, 196 / 255],\r\n  black: [0, 0, 0],\r\n  blanchedalmond: [1, 235 / 255, 205 / 255],\r\n  blue: [0, 0, 1],\r\n  blueviolet: [138 / 255, 43 / 255, 226 / 255],\r\n  brown: [165 / 255, 42 / 255, 42 / 255],\r\n  burlywood: [222 / 255, 184 / 255, 135 / 255],\r\n  cadetblue: [95 / 255, 158 / 255, 160 / 255],\r\n  chartreuse: [127 / 255, 1, 0],\r\n  chocolate: [210 / 255, 105 / 255, 30 / 255],\r\n  coral: [1, 127 / 255, 80 / 255],\r\n  cornflowerblue: [100 / 255, 149 / 255, 237 / 255],\r\n  cornsilk: [1, 248 / 255, 220 / 255],\r\n  crimson: [220 / 255, 20 / 255, 60 / 255],\r\n  cyan: [0, 1, 1],\r\n  darkblue: [0, 0, 139 / 255],\r\n  darkcyan: [0, 139 / 255, 139 / 255],\r\n  darkgoldenrod: [184 / 255, 134 / 255, 11 / 255],\r\n  darkgray: [169 / 255, 169 / 255, 169 / 255],\r\n  darkgreen: [0, 100 / 255, 0],\r\n  darkgrey: [169 / 255, 169 / 255, 169 / 255],\r\n  darkkhaki: [189 / 255, 183 / 255, 107 / 255],\r\n  darkmagenta: [139 / 255, 0, 139 / 255],\r\n  darkolivegreen: [85 / 255, 107 / 255, 47 / 255],\r\n  darkorange: [1, 140 / 255, 0],\r\n  darkorchid: [153 / 255, 50 / 255, 204 / 255],\r\n  darkred: [139 / 255, 0, 0],\r\n  darksalmon: [233 / 255, 150 / 255, 122 / 255],\r\n  darkseagreen: [143 / 255, 188 / 255, 143 / 255],\r\n  darkslateblue: [72 / 255, 61 / 255, 139 / 255],\r\n  darkslategray: [47 / 255, 79 / 255, 79 / 255],\r\n  darkslategrey: [47 / 255, 79 / 255, 79 / 255],\r\n  darkturquoise: [0, 206 / 255, 209 / 255],\r\n  darkviolet: [148 / 255, 0, 211 / 255],\r\n  deeppink: [1, 20 / 255, 147 / 255],\r\n  deepskyblue: [0, 191 / 255, 1],\r\n  dimgray: [105 / 255, 105 / 255, 105 / 255],\r\n  dimgrey: [105 / 255, 105 / 255, 105 / 255],\r\n  dodgerblue: [30 / 255, 144 / 255, 1],\r\n  firebrick: [178 / 255, 34 / 255, 34 / 255],\r\n  floralwhite: [1, 250 / 255, 240 / 255],\r\n  forestgreen: [34 / 255, 139 / 255, 34 / 255],\r\n  fuchsia: [1, 0, 1],\r\n  gainsboro: [220 / 255, 220 / 255, 220 / 255],\r\n  ghostwhite: [248 / 255, 248 / 255, 1],\r\n  gold: [1, 215 / 255, 0],\r\n  goldenrod: [218 / 255, 165 / 255, 32 / 255],\r\n  gray: [128 / 255, 128 / 255, 128 / 255],\r\n  green: [0, 128 / 255, 0],\r\n  greenyellow: [173 / 255, 1, 47 / 255],\r\n  grey: [128 / 255, 128 / 255, 128 / 255],\r\n  honeydew: [240 / 255, 1, 240 / 255],\r\n  hotpink: [1, 105 / 255, 180 / 255],\r\n  indianred: [205 / 255, 92 / 255, 92 / 255],\r\n  indigo: [75 / 255, 0, 130 / 255],\r\n  ivory: [1, 1, 240 / 255],\r\n  khaki: [240 / 255, 230 / 255, 140 / 255],\r\n  lavender: [230 / 255, 230 / 255, 250 / 255],\r\n  lavenderblush: [1, 240 / 255, 245 / 255],\r\n  lawngreen: [124 / 255, 252 / 255, 0],\r\n  lemonchiffon: [1, 250 / 255, 205 / 255],\r\n  lightblue: [173 / 255, 216 / 255, 230 / 255],\r\n  lightcoral: [240 / 255, 128 / 255, 128 / 255],\r\n  lightcyan: [224 / 255, 1, 1],\r\n  lightgoldenrodyellow: [250 / 255, 250 / 255, 210 / 255],\r\n  lightgray: [211 / 255, 211 / 255, 211 / 255],\r\n  lightgreen: [144 / 255, 238 / 255, 144 / 255],\r\n  lightgrey: [211 / 255, 211 / 255, 211 / 255],\r\n  lightpink: [1, 182 / 255, 193 / 255],\r\n  lightsalmon: [1, 160 / 255, 122 / 255],\r\n  lightseagreen: [32 / 255, 178 / 255, 170 / 255],\r\n  lightskyblue: [135 / 255, 206 / 255, 250 / 255],\r\n  lightslategray: [119 / 255, 136 / 255, 153 / 255],\r\n  lightslategrey: [119 / 255, 136 / 255, 153 / 255],\r\n  lightsteelblue: [176 / 255, 196 / 255, 222 / 255],\r\n  lightyellow: [1, 1, 224 / 255],\r\n  lime: [0, 1, 0],\r\n  limegreen: [50 / 255, 205 / 255, 50 / 255],\r\n  linen: [250 / 255, 240 / 255, 230 / 255],\r\n  magenta: [1, 0, 1],\r\n  maroon: [128 / 255, 0, 0],\r\n  mediumaquamarine: [102 / 255, 205 / 255, 170 / 255],\r\n  mediumblue: [0, 0, 205 / 255],\r\n  mediumorchid: [186 / 255, 85 / 255, 211 / 255],\r\n  mediumpurple: [147 / 255, 112 / 255, 219 / 255],\r\n  mediumseagreen: [60 / 255, 179 / 255, 113 / 255],\r\n  mediumslateblue: [123 / 255, 104 / 255, 238 / 255],\r\n  mediumspringgreen: [0, 250 / 255, 154 / 255],\r\n  mediumturquoise: [72 / 255, 209 / 255, 204 / 255],\r\n  mediumvioletred: [199 / 255, 21 / 255, 133 / 255],\r\n  midnightblue: [25 / 255, 25 / 255, 112 / 255],\r\n  mintcream: [245 / 255, 1, 250 / 255],\r\n  mistyrose: [1, 228 / 255, 225 / 255],\r\n  moccasin: [1, 228 / 255, 181 / 255],\r\n  navajowhite: [1, 222 / 255, 173 / 255],\r\n  navy: [0, 0, 128 / 255],\r\n  oldlace: [253 / 255, 245 / 255, 230 / 255],\r\n  olive: [128 / 255, 128 / 255, 0],\r\n  olivedrab: [107 / 255, 142 / 255, 35 / 255],\r\n  orange: [1, 165 / 255, 0],\r\n  orangered: [1, 69 / 255, 0],\r\n  orchid: [218 / 255, 112 / 255, 214 / 255],\r\n  palegoldenrod: [238 / 255, 232 / 255, 170 / 255],\r\n  palegreen: [152 / 255, 251 / 255, 152 / 255],\r\n  paleturquoise: [175 / 255, 238 / 255, 238 / 255],\r\n  palevioletred: [219 / 255, 112 / 255, 147 / 255],\r\n  papayawhip: [1, 239 / 255, 213 / 255],\r\n  peachpuff: [1, 218 / 255, 185 / 255],\r\n  peru: [205 / 255, 133 / 255, 63 / 255],\r\n  pink: [1, 192 / 255, 203 / 255],\r\n  plum: [221 / 255, 160 / 255, 221 / 255],\r\n  powderblue: [176 / 255, 224 / 255, 230 / 255],\r\n  purple: [128 / 255, 0, 128 / 255],\r\n  rebeccapurple: [102 / 255, 51 / 255, 153 / 255],\r\n  red: [1, 0, 0],\r\n  rosybrown: [188 / 255, 143 / 255, 143 / 255],\r\n  royalblue: [65 / 255, 105 / 255, 225 / 255],\r\n  saddlebrown: [139 / 255, 69 / 255, 19 / 255],\r\n  salmon: [250 / 255, 128 / 255, 114 / 255],\r\n  sandybrown: [244 / 255, 164 / 255, 96 / 255],\r\n  seagreen: [46 / 255, 139 / 255, 87 / 255],\r\n  seashell: [1, 245 / 255, 238 / 255],\r\n  sienna: [160 / 255, 82 / 255, 45 / 255],\r\n  silver: [192 / 255, 192 / 255, 192 / 255],\r\n  skyblue: [135 / 255, 206 / 255, 235 / 255],\r\n  slateblue: [106 / 255, 90 / 255, 205 / 255],\r\n  slategray: [112 / 255, 128 / 255, 144 / 255],\r\n  slategrey: [112 / 255, 128 / 255, 144 / 255],\r\n  snow: [1, 250 / 255, 250 / 255],\r\n  springgreen: [0, 1, 127 / 255],\r\n  steelblue: [70 / 255, 130 / 255, 180 / 255],\r\n  tan: [210 / 255, 180 / 255, 140 / 255],\r\n  teal: [0, 128 / 255, 128 / 255],\r\n  thistle: [216 / 255, 191 / 255, 216 / 255],\r\n  tomato: [1, 99 / 255, 71 / 255],\r\n  turquoise: [64 / 255, 224 / 255, 208 / 255],\r\n  violet: [238 / 255, 130 / 255, 238 / 255],\r\n  wheat: [245 / 255, 222 / 255, 179 / 255],\r\n  white: [1, 1, 1],\r\n  whitesmoke: [245 / 255, 245 / 255, 245 / 255],\r\n  yellow: [1, 1, 0],\r\n  yellowgreen: [154 / 255, 205 / 255, 50 / 255],\r\n};\r\n\r\nlet coordGrammar = Array(3).fill('<percentage> | <number>[0, 255]');\r\n\r\nvar sRGB = new RGBColorSpace({\r\n  id: 'srgb',\r\n  name: 'sRGB',\r\n  base: sRGBLinear,\r\n  fromBase: (rgb) => {\r\n    // convert an array of linear-light sRGB values in the range 0.0-1.0\r\n    // to gamma corrected form\r\n    // https://en.wikipedia.org/wiki/SRGB\r\n    return rgb.map((val) => {\r\n      let sign = val < 0 ? -1 : 1;\r\n      let abs = val * sign;\r\n\r\n      if (abs > 0.0031308) {\r\n        return sign * (1.055 * abs ** (1 / 2.4) - 0.055);\r\n      }\r\n\r\n      return 12.92 * val;\r\n    });\r\n  },\r\n  toBase: (rgb) => {\r\n    // convert an array of sRGB values in the range 0.0 - 1.0\r\n    // to linear light (un-companded) form.\r\n    // https://en.wikipedia.org/wiki/SRGB\r\n    return rgb.map((val) => {\r\n      let sign = val < 0 ? -1 : 1;\r\n      let abs = val * sign;\r\n\r\n      if (abs < 0.04045) {\r\n        return val / 12.92;\r\n      }\r\n\r\n      return sign * ((abs + 0.055) / 1.055) ** 2.4;\r\n    });\r\n  },\r\n  formats: {\r\n    rgb: {\r\n      coords: coordGrammar,\r\n    },\r\n    color: {\r\n      /* use defaults */\r\n    },\r\n    rgba: {\r\n      coords: coordGrammar,\r\n      commas: true,\r\n      lastAlpha: true,\r\n    },\r\n    hex: {\r\n      type: 'custom',\r\n      toGamut: true,\r\n      test: (str) => /^#([a-f0-9]{3,4}){1,2}$/i.test(str),\r\n      parse(str) {\r\n        if (str.length <= 5) {\r\n          // #rgb or #rgba, duplicate digits\r\n          str = str.replace(/[a-f0-9]/gi, '$&$&');\r\n        }\r\n\r\n        let rgba = [];\r\n        str.replace(/[a-f0-9]{2}/gi, (component) => {\r\n          rgba.push(parseInt(component, 16) / 255);\r\n        });\r\n\r\n        return {\r\n          spaceId: 'srgb',\r\n          coords: rgba.slice(0, 3),\r\n          alpha: rgba.slice(3)[0],\r\n        };\r\n      },\r\n      serialize: (\r\n        coords,\r\n        alpha,\r\n        {\r\n          collapse = true, // collapse to 3-4 digit hex when possible?\r\n        } = {}\r\n      ) => {\r\n        if (alpha < 1) {\r\n          coords.push(alpha);\r\n        }\r\n\r\n        coords = coords.map((c) => Math.round(c * 255));\r\n\r\n        let collapsible = collapse && coords.every((c) => c % 17 === 0);\r\n\r\n        let hex = coords\r\n          .map((c) => {\r\n            if (collapsible) {\r\n              return (c / 17).toString(16);\r\n            }\r\n\r\n            return c.toString(16).padStart(2, '0');\r\n          })\r\n          .join('');\r\n\r\n        return '#' + hex;\r\n      },\r\n    },\r\n    keyword: {\r\n      type: 'custom',\r\n      test: (str) => /^[a-z]+$/i.test(str),\r\n      parse(str) {\r\n        str = str.toLowerCase();\r\n        let ret = { spaceId: 'srgb', coords: null, alpha: 1 };\r\n\r\n        if (str === 'transparent') {\r\n          ret.coords = KEYWORDS.black;\r\n          ret.alpha = 0;\r\n        } else {\r\n          ret.coords = KEYWORDS[str];\r\n        }\r\n\r\n        if (ret.coords) {\r\n          return ret;\r\n        }\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nvar P3 = new RGBColorSpace({\r\n  id: 'p3',\r\n  name: 'P3',\r\n  base: P3Linear,\r\n  // Gamma encoding/decoding is the same as sRGB\r\n  fromBase: sRGB.fromBase,\r\n  toBase: sRGB.toBase,\r\n  formats: {\r\n    color: {\r\n      id: 'display-p3',\r\n    },\r\n  },\r\n});\r\n\r\n// Default space for CSS output. Code in Color.js makes this wider if there's a DOM available\r\ndefaults.display_space = sRGB;\r\n\r\nif (typeof CSS !== 'undefined' && CSS.supports) {\r\n  // Find widest supported color space for CSS\r\n  for (let space of [lab, REC2020, P3]) {\r\n    let coords = space.getMinCoords();\r\n    let color = { space, coords, alpha: 1 };\r\n    let str = serialize(color);\r\n\r\n    if (CSS.supports('color', str)) {\r\n      defaults.display_space = space;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a serialization of the color that can actually be displayed in the browser.\r\n * If the default serialization can be displayed, it is returned.\r\n * Otherwise, the color is converted to Lab, REC2020, or P3, whichever is the widest supported.\r\n * In Node.js, this is basically equivalent to `serialize()` but returns a `String` object instead.\r\n *\r\n * @export\r\n * @param {{space, coords} | Color | string} color\r\n * @param {*} [options={}] Options to be passed to serialize()\r\n * @param {ColorSpace | string} [options.space = defaults.display_space] Color space to use for serialization if default is not supported\r\n * @returns {String} String object containing the serialized color with a color property containing the converted color (or the original, if no conversion was necessary)\r\n */\r\nfunction display(color, { space = defaults.display_space, ...options } = {}) {\r\n  let ret = serialize(color, options);\r\n\r\n  if (typeof CSS === 'undefined' || CSS.supports('color', ret) || !defaults.display_space) {\r\n    ret = new String(ret);\r\n    ret.color = color;\r\n  } else {\r\n    // If we're here, what we were about to output is not supported\r\n    // Fall back to fallback space\r\n    let fallbackColor = to(color, space);\r\n    ret = new String(serialize(fallbackColor, options));\r\n    ret.color = fallbackColor;\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Euclidean distance of colors in an arbitrary color space\r\n */\r\nfunction distance(color1, color2, space = 'lab') {\r\n  space = ColorSpace.get(space);\r\n\r\n  let coords1 = space.from(color1);\r\n  let coords2 = space.from(color2);\r\n\r\n  return Math.sqrt(\r\n    coords1.reduce((acc, c1, i) => {\r\n      let c2 = coords2[i];\r\n      if (isNaN(c1) || isNaN(c2)) {\r\n        return acc;\r\n      }\r\n\r\n      return acc + (c2 - c1) ** 2;\r\n    }, 0)\r\n  );\r\n}\r\n\r\nfunction equals(color1, color2) {\r\n  color1 = getColor(color1);\r\n  color2 = getColor(color2);\r\n\r\n  return (\r\n    color1.space === color2.space &&\r\n    color1.alpha === color2.alpha &&\r\n    color1.coords.every((c, i) => c === color2.coords[i])\r\n  );\r\n}\r\n\r\n/**\r\n * Relative luminance\r\n */\r\n\r\nfunction getLuminance(color) {\r\n  return get(color, [XYZ_D65, 'y']);\r\n}\r\n\r\nfunction setLuminance(color) {\r\n  set(color, [XYZ_D65, 'y'], value);\r\n}\r\n\r\nfunction register$2(Color) {\r\n  Object.defineProperty(Color.prototype, 'luminance', {\r\n    get() {\r\n      return getLuminance(this);\r\n    },\r\n    set(value) {\r\n      setLuminance(this);\r\n    },\r\n  });\r\n}\r\n\r\nvar luminance = /*#__PURE__*/ Object.freeze({\r\n  __proto__: null,\r\n  getLuminance: getLuminance,\r\n  setLuminance: setLuminance,\r\n  register: register$2,\r\n});\r\n\r\n// WCAG 2.0 contrast https://www.w3.org/TR/WCAG20-TECHS/G18.html\r\n\r\nfunction contrastWCAG21(color1, color2) {\r\n  color1 = getColor(color1);\r\n  color2 = getColor(color2);\r\n\r\n  let Y1 = Math.max(getLuminance(color1), 0);\r\n  let Y2 = Math.max(getLuminance(color2), 0);\r\n\r\n  if (Y2 > Y1) {\r\n    [Y1, Y2] = [Y2, Y1];\r\n  }\r\n\r\n  return (Y1 + 0.05) / (Y2 + 0.05);\r\n}\r\n\r\n// APCA 0.0.98G\r\n\r\n// exponents\r\nconst normBG = 0.56;\r\nconst normTXT = 0.57;\r\nconst revTXT = 0.62;\r\nconst revBG = 0.65;\r\n\r\n// clamps\r\nconst blkThrs = 0.022;\r\nconst blkClmp = 1.414;\r\nconst loClip = 0.1;\r\nconst deltaYmin = 0.0005;\r\n\r\n// scalers\r\n// see https://github.com/w3c/silver/issues/645\r\nconst scaleBoW = 1.14;\r\nconst loBoWoffset = 0.027;\r\nconst scaleWoB = 1.14;\r\n\r\nfunction fclamp(Y) {\r\n  if (Y >= blkThrs) return Y;\r\n  return Y + (blkThrs - Y) ** blkClmp;\r\n}\r\n\r\nfunction linearize(val) {\r\n  let sign = val < 0 ? -1 : 1;\r\n  let abs = Math.abs(val);\r\n  return sign * Math.pow(abs, 2.4);\r\n}\r\n\r\n// Not symmetric, requires a foreground (text) color, and a background color\r\nfunction contrastAPCA(background, foreground) {\r\n  foreground = getColor(foreground);\r\n  background = getColor(background);\r\n\r\n  let S;\r\n  let C;\r\n  let Sapc;\r\n\r\n  // Myndex as-published, assumes sRGB inputs\r\n  let R, G, B;\r\n\r\n  foreground = to(foreground, 'srgb');\r\n  // Should these be clamped to in-gamut values?\r\n\r\n  // Calculates \"screen luminance\" with non-standard simple gamma EOTF\r\n  // weights should be from CSS Color 4, not the ones here which are via Myndex and copied from Lindbloom\r\n  [R, G, B] = foreground.coords;\r\n  let lumTxt = linearize(R) * 0.2126729 + linearize(G) * 0.7151522 + linearize(B) * 0.072175;\r\n\r\n  background = to(background, 'srgb');\r\n  [R, G, B] = background.coords;\r\n  let lumBg = linearize(R) * 0.2126729 + linearize(G) * 0.7151522 + linearize(B) * 0.072175;\r\n\r\n  // toe clamping of very dark values to account for flare\r\n  let Ytxt = fclamp(lumTxt);\r\n  let Ybg = fclamp(lumBg);\r\n\r\n  // are we \"Black on White\" (dark on light), or light on dark?\r\n  let BoW = Ybg > Ytxt;\r\n\r\n  // why is this a delta, when Y is not perceptually uniform?\r\n  // Answer: it is a noise gate, see\r\n  // https://github.com/LeaVerou/color.js/issues/208\r\n  if (Math.abs(Ybg - Ytxt) < deltaYmin) {\r\n    C = 0;\r\n  } else {\r\n    if (BoW) {\r\n      // dark text on light background\r\n      S = Ybg ** normBG - Ytxt ** normTXT;\r\n      C = S * scaleBoW;\r\n    } else {\r\n      // light text on dark background\r\n      S = Ybg ** revBG - Ytxt ** revTXT;\r\n      C = S * scaleWoB;\r\n    }\r\n  }\r\n  if (Math.abs(C) < loClip) {\r\n    Sapc = 0;\r\n  } else if (C > 0) {\r\n    // not clear whether Woffset is loBoWoffset or loWoBoffset\r\n    // but they have the same value\r\n    Sapc = C - loBoWoffset;\r\n  } else {\r\n    Sapc = C + loBoWoffset;\r\n  }\r\n\r\n  return Sapc * 100;\r\n}\r\n\r\n// Michelson  luminance contrast\r\n\r\nfunction contrastMichelson(color1, color2) {\r\n  color1 = getColor(color1);\r\n  color2 = getColor(color2);\r\n\r\n  let Y1 = Math.max(getLuminance(color1), 0);\r\n  let Y2 = Math.max(getLuminance(color2), 0);\r\n\r\n  if (Y2 > Y1) {\r\n    [Y1, Y2] = [Y2, Y1];\r\n  }\r\n\r\n  let denom = Y1 + Y2;\r\n  return denom === 0 ? 0 : (Y1 - Y2) / denom;\r\n}\r\n\r\n// Weber luminance contrast\r\n\r\n// the darkest sRGB color above black is #000001 and this produces\r\n// a plain Weber contrast of ~45647.\r\n// So, setting the divide-by-zero result at 50000 is a reasonable\r\n// max clamp for the plain Weber\r\nconst max = 50000;\r\n\r\nfunction contrastWeber(color1, color2) {\r\n  color1 = getColor(color1);\r\n  color2 = getColor(color2);\r\n\r\n  let Y1 = Math.max(getLuminance(color1), 0);\r\n  let Y2 = Math.max(getLuminance(color2), 0);\r\n\r\n  if (Y2 > Y1) {\r\n    [Y1, Y2] = [Y2, Y1];\r\n  }\r\n\r\n  return Y2 === 0 ? max : (Y1 - Y2) / Y2;\r\n}\r\n\r\n// CIE Lightness difference, as used by Google Material Design\r\n\r\nfunction contrastLstar(color1, color2) {\r\n  color1 = getColor(color1);\r\n  color2 = getColor(color2);\r\n\r\n  let L1 = get(color1, [lab, 'l']);\r\n  let L2 = get(color2, [lab, 'l']);\r\n\r\n  return Math.abs(L1 - L2);\r\n}\r\n\r\n// κ * ε  = 2^3 = 8\r\nconst ε$1 = 216 / 24389; // 6^3/29^3 == (24/116)^3\r\nconst ε3 = 24 / 116;\r\nconst κ = 24389 / 27; // 29^3/3^3\r\n\r\nlet white = WHITES.D65;\r\n\r\nvar lab_d65 = new ColorSpace({\r\n  id: 'lab-d65',\r\n  name: 'Lab D65',\r\n  coords: {\r\n    l: {\r\n      refRange: [0, 100],\r\n      name: 'L',\r\n    },\r\n    a: {\r\n      refRange: [-125, 125],\r\n    },\r\n    b: {\r\n      refRange: [-125, 125],\r\n    },\r\n  },\r\n\r\n  // Assuming XYZ is relative to D65, convert to CIE Lab\r\n  // from CIE standard, which now defines these as a rational fraction\r\n  white,\r\n\r\n  base: XYZ_D65,\r\n  // Convert D65-adapted XYZ to Lab\r\n  //  CIE 15.3:2004 section 8.2.1.1\r\n  fromBase(XYZ) {\r\n    // compute xyz, which is XYZ scaled relative to reference white\r\n    let xyz = XYZ.map((value, i) => value / white[i]);\r\n\r\n    // now compute f\r\n    let f = xyz.map((value) => (value > ε$1 ? Math.cbrt(value) : (κ * value + 16) / 116));\r\n\r\n    return [\r\n      116 * f[1] - 16, // L\r\n      500 * (f[0] - f[1]), // a\r\n      200 * (f[1] - f[2]), // b\r\n    ];\r\n  },\r\n  // Convert Lab to D65-adapted XYZ\r\n  // Same result as CIE 15.3:2004 Appendix D although the derivation is different\r\n  // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\r\n  toBase(Lab) {\r\n    // compute f, starting with the luminance-related term\r\n    let f = [];\r\n    f[1] = (Lab[0] + 16) / 116;\r\n    f[0] = Lab[1] / 500 + f[1];\r\n    f[2] = f[1] - Lab[2] / 200;\r\n\r\n    // compute xyz\r\n    let xyz = [\r\n      f[0] > ε3 ? Math.pow(f[0], 3) : (116 * f[0] - 16) / κ,\r\n      Lab[0] > 8 ? Math.pow((Lab[0] + 16) / 116, 3) : Lab[0] / κ,\r\n      f[2] > ε3 ? Math.pow(f[2], 3) : (116 * f[2] - 16) / κ,\r\n    ];\r\n\r\n    // Compute XYZ by scaling xyz by reference white\r\n    return xyz.map((value, i) => value * white[i]);\r\n  },\r\n\r\n  formats: {\r\n    'lab-d65': {\r\n      coords: ['<percentage> | <number>', '<number>', '<number>'],\r\n    },\r\n  },\r\n});\r\n\r\n// Delta Phi Star perceptual lightness contrast\r\n\r\nconst phi = Math.pow(5, 0.5) * 0.5 + 0.5; // Math.phi can be used if Math.js\r\n\r\nfunction contrastDeltaPhi(color1, color2) {\r\n  color1 = getColor(color1);\r\n  color2 = getColor(color2);\r\n\r\n  let Lstr1 = get(color1, [lab_d65, 'l']);\r\n  let Lstr2 = get(color2, [lab_d65, 'l']);\r\n\r\n  let deltaPhiStar = Math.abs(Math.pow(Lstr1, phi) - Math.pow(Lstr2, phi));\r\n\r\n  let contrast = Math.pow(deltaPhiStar, 1 / phi) * Math.SQRT2 - 40;\r\n\r\n  return contrast < 7.5 ? 0.0 : contrast;\r\n}\r\n\r\nvar contrastMethods = /*#__PURE__*/ Object.freeze({\r\n  __proto__: null,\r\n  contrastWCAG21: contrastWCAG21,\r\n  contrastAPCA: contrastAPCA,\r\n  contrastMichelson: contrastMichelson,\r\n  contrastWeber: contrastWeber,\r\n  contrastLstar: contrastLstar,\r\n  contrastDeltaPhi: contrastDeltaPhi,\r\n});\r\n\r\nfunction contrast(background, foreground, o = {}) {\r\n  if (isString(o)) {\r\n    o = { algorithm: o };\r\n  }\r\n\r\n  let { algorithm, ...rest } = o;\r\n\r\n  if (!algorithm) {\r\n    let algorithms = Object.keys(contrastMethods)\r\n      .map((a) => a.replace(/^contrast/, ''))\r\n      .join(', ');\r\n    throw new TypeError(`contrast() function needs a contrast algorithm. Please specify one of: ${algorithms}`);\r\n  }\r\n\r\n  background = getColor(background);\r\n  foreground = getColor(foreground);\r\n\r\n  for (let a in contrastMethods) {\r\n    if ('contrast' + algorithm.toLowerCase() === a.toLowerCase()) {\r\n      return contrastMethods[a](background, foreground, rest);\r\n    }\r\n  }\r\n\r\n  throw new TypeError(`Unknown contrast algorithm: ${algorithm}`);\r\n}\r\n\r\n// Chromaticity coordinates\r\nfunction uv(color) {\r\n  let [X, Y, Z] = getAll(color, XYZ_D65);\r\n  let denom = X + 15 * Y + 3 * Z;\r\n  return [(4 * X) / denom, (9 * Y) / denom];\r\n}\r\n\r\nfunction xy(color) {\r\n  let [X, Y, Z] = getAll(color, XYZ_D65);\r\n  let sum = X + Y + Z;\r\n  return [X / sum, Y / sum];\r\n}\r\n\r\nfunction register$1(Color) {\r\n  // no setters, as lightness information is lost\r\n  // when converting color to chromaticity\r\n  Object.defineProperty(Color.prototype, 'uv', {\r\n    get() {\r\n      return uv(this);\r\n    },\r\n  });\r\n\r\n  Object.defineProperty(Color.prototype, 'xy', {\r\n    get() {\r\n      return xy(this);\r\n    },\r\n  });\r\n}\r\n\r\nvar chromaticity = /*#__PURE__*/ Object.freeze({\r\n  __proto__: null,\r\n  uv: uv,\r\n  xy: xy,\r\n  register: register$1,\r\n});\r\n\r\nfunction deltaE76(color, sample) {\r\n  return distance(color, sample, 'lab');\r\n}\r\n\r\n// More accurate color-difference formulae\r\n// than the simple 1976 Euclidean distance in Lab\r\n\r\n// CMC by the Color Measurement Committee of the\r\n// Bradford Society of Dyeists and Colorsts, 1994.\r\n// Uses LCH rather than Lab,\r\n// with different weights for L, C and H differences\r\n// A nice increase in accuracy for modest increase in complexity\r\nconst π = Math.PI;\r\nconst d2r = π / 180;\r\n\r\nfunction deltaECMC(color, sample, { l = 2, c = 1 } = {}) {\r\n  // Given this color as the reference\r\n  // and a sample,\r\n  // calculate deltaE CMC.\r\n\r\n  // This implementation assumes the parametric\r\n  // weighting factors l:c are 2:1\r\n  // which is typical for non-textile uses.\r\n\r\n  let [L1, a1, b1] = lab.from(color);\r\n  let [, C1, H1] = lch.from(lab, [L1, a1, b1]);\r\n  let [L2, a2, b2] = lab.from(sample);\r\n  let C2 = lch.from(lab, [L2, a2, b2])[1];\r\n\r\n  // let [L1, a1, b1] = color.getAll(lab);\r\n  // let C1 = color.get(\"lch.c\");\r\n  // let H1 = color.get(\"lch.h\");\r\n  // let [L2, a2, b2] = sample.getAll(lab);\r\n  // let C2 = sample.get(\"lch.c\");\r\n\r\n  // Check for negative Chroma,\r\n  // which might happen through\r\n  // direct user input of LCH values\r\n\r\n  if (C1 < 0) {\r\n    C1 = 0;\r\n  }\r\n  if (C2 < 0) {\r\n    C2 = 0;\r\n  }\r\n\r\n  // we don't need H2 as ΔH is calculated from Δa, Δb and ΔC\r\n\r\n  // Lightness and Chroma differences\r\n  // These are (color - sample), unlike deltaE2000\r\n  let ΔL = L1 - L2;\r\n  let ΔC = C1 - C2;\r\n\r\n  let Δa = a1 - a2;\r\n  let Δb = b1 - b2;\r\n\r\n  // weighted Hue difference, less for larger Chroma difference\r\n\r\n  let H2 = Δa ** 2 + Δb ** 2 - ΔC ** 2;\r\n  // due to roundoff error it is possible that, for zero a and b,\r\n  // ΔC > Δa + Δb is 0, resulting in attempting\r\n  // to take the square root of a negative number\r\n\r\n  // trying instead the equation from Industrial Color Physics\r\n  // By Georg A. Klein\r\n\r\n  // let ΔH = ((a1 * b2) - (a2 * b1)) / Math.sqrt(0.5 * ((C2 * C1) + (a2 * a1) + (b2 * b1)));\r\n  // This gives the same result to 12 decimal places\r\n  // except it sometimes NaNs when trying to root a negative number\r\n\r\n  // let ΔH = Math.sqrt(H2); we never actually use the root, it gets squared again!!\r\n\r\n  // positional corrections to the lack of uniformity of CIELAB\r\n  // These are all trying to make JND ellipsoids more like spheres\r\n\r\n  // SL Lightness crispening factor, depends entirely on L1 not L2\r\n  let SL = 0.511; // linear portion of the Y to L transfer function\r\n  if (L1 >= 16) {\r\n    // cubic portion\r\n    SL = (0.040975 * L1) / (1 + 0.01765 * L1);\r\n  }\r\n\r\n  // SC Chroma factor\r\n  let SC = (0.0638 * C1) / (1 + 0.0131 * C1) + 0.638;\r\n\r\n  // Cross term T for blue non-linearity\r\n  let T;\r\n  if (Number.isNaN(H1)) {\r\n    H1 = 0;\r\n  }\r\n\r\n  if (H1 >= 164 && H1 <= 345) {\r\n    T = 0.56 + Math.abs(0.2 * Math.cos((H1 + 168) * d2r));\r\n  } else {\r\n    T = 0.36 + Math.abs(0.4 * Math.cos((H1 + 35) * d2r));\r\n  }\r\n\r\n  // SH Hue factor also depends on C1,\r\n  let C4 = Math.pow(C1, 4);\r\n  let F = Math.sqrt(C4 / (C4 + 1900));\r\n  let SH = SC * (F * T + 1 - F);\r\n\r\n  // Finally calculate the deltaE, term by term as root sume of squares\r\n  let dE = (ΔL / (l * SL)) ** 2;\r\n  dE += (ΔC / (c * SC)) ** 2;\r\n  dE += H2 / SH ** 2;\r\n  // dE += (ΔH / SH)  ** 2;\r\n  return Math.sqrt(dE);\r\n  // Yay!!!\r\n}\r\n\r\nconst Yw$1 = 203; // absolute luminance of media white\r\n\r\nvar XYZ_Abs_D65 = new ColorSpace({\r\n  // Absolute CIE XYZ, with a D65 whitepoint,\r\n  // as used in most HDR colorspaces as a starting point.\r\n  // SDR spaces are converted per BT.2048\r\n  // so that diffuse, media white is 203 cd/m²\r\n  id: 'xyz-abs-d65',\r\n  name: 'Absolute XYZ D65',\r\n  coords: {\r\n    x: {\r\n      refRange: [0, 9504.7],\r\n      name: 'Xa',\r\n    },\r\n    y: {\r\n      refRange: [0, 10000],\r\n      name: 'Ya',\r\n    },\r\n    z: {\r\n      refRange: [0, 10888.3],\r\n      name: 'Za',\r\n    },\r\n  },\r\n\r\n  base: XYZ_D65,\r\n  fromBase(XYZ) {\r\n    // Make XYZ absolute, not relative to media white\r\n    // Maximum luminance in PQ is 10,000 cd/m²\r\n    // Relative XYZ has Y=1 for media white\r\n    return XYZ.map((v) => Math.max(v * Yw$1, 0));\r\n  },\r\n  toBase(AbsXYZ) {\r\n    // Convert to media-white relative XYZ\r\n    return AbsXYZ.map((v) => Math.max(v / Yw$1, 0));\r\n  },\r\n});\r\n\r\nconst b$1 = 1.15;\r\nconst g = 0.66;\r\nconst n$1 = 2610 / 2 ** 14;\r\nconst ninv$1 = 2 ** 14 / 2610;\r\nconst c1$2 = 3424 / 2 ** 12;\r\nconst c2$2 = 2413 / 2 ** 7;\r\nconst c3$2 = 2392 / 2 ** 7;\r\nconst p = (1.7 * 2523) / 2 ** 5;\r\nconst pinv = 2 ** 5 / (1.7 * 2523);\r\nconst d = -0.56;\r\nconst d0 = 1.6295499532821566e-11;\r\n\r\nconst XYZtoCone_M = [\r\n  [0.41478972, 0.579999, 0.014648],\r\n  [-0.20151, 1.120649, 0.0531008],\r\n  [-0.0166008, 0.2648, 0.6684799],\r\n];\r\n// XYZtoCone_M inverted\r\nconst ConetoXYZ_M = [\r\n  [1.9242264357876067, -1.0047923125953657, 0.037651404030618],\r\n  [0.35031676209499907, 0.7264811939316552, -0.06538442294808501],\r\n  [-0.09098281098284752, -0.3127282905230739, 1.5227665613052603],\r\n];\r\nconst ConetoIab_M = [\r\n  [0.5, 0.5, 0],\r\n  [3.524, -4.066708, 0.542708],\r\n  [0.199076, 1.096799, -1.295875],\r\n];\r\n// ConetoIab_M inverted\r\nconst IabtoCone_M = [\r\n  [1, 0.1386050432715393, 0.05804731615611886],\r\n  [0.9999999999999999, -0.1386050432715393, -0.05804731615611886],\r\n  [0.9999999999999998, -0.09601924202631895, -0.8118918960560388],\r\n];\r\n\r\nvar Jzazbz = new ColorSpace({\r\n  id: 'jzazbz',\r\n  name: 'Jzazbz',\r\n  coords: {\r\n    jz: {\r\n      refRange: [0, 1],\r\n      name: 'Jz',\r\n    },\r\n    az: {\r\n      refRange: [-0.5, 0.5],\r\n    },\r\n    bz: {\r\n      refRange: [-0.5, 0.5],\r\n    },\r\n  },\r\n\r\n  base: XYZ_Abs_D65,\r\n  fromBase(XYZ) {\r\n    // First make XYZ absolute, not relative to media white\r\n    // Maximum luminance in PQ is 10,000 cd/m²\r\n    // Relative XYZ has Y=1 for media white\r\n    // BT.2048 says media white Y=203 at PQ 58\r\n\r\n    let [Xa, Ya, Za] = XYZ;\r\n\r\n    // modify X and Y\r\n    let Xm = b$1 * Xa - (b$1 - 1) * Za;\r\n    let Ym = g * Ya - (g - 1) * Xa;\r\n\r\n    // move to LMS cone domain\r\n    let LMS = multiplyMatrices(XYZtoCone_M, [Xm, Ym, Za]);\r\n\r\n    // PQ-encode LMS\r\n    let PQLMS = LMS.map(function (val) {\r\n      let num = c1$2 + c2$2 * (val / 10000) ** n$1;\r\n      let denom = 1 + c3$2 * (val / 10000) ** n$1;\r\n\r\n      return (num / denom) ** p;\r\n    });\r\n\r\n    // almost there, calculate Iz az bz\r\n    let [Iz, az, bz] = multiplyMatrices(ConetoIab_M, PQLMS);\r\n\r\n    let Jz = ((1 + d) * Iz) / (1 + d * Iz) - d0;\r\n    return [Jz, az, bz];\r\n  },\r\n  toBase(Jzazbz) {\r\n    let [Jz, az, bz] = Jzazbz;\r\n    let Iz = (Jz + d0) / (1 + d - d * (Jz + d0));\r\n\r\n    // bring into LMS cone domain\r\n    let PQLMS = multiplyMatrices(IabtoCone_M, [Iz, az, bz]);\r\n\r\n    // convert from PQ-coded to linear-light\r\n    let LMS = PQLMS.map(function (val) {\r\n      let num = c1$2 - val ** pinv;\r\n      let denom = c3$2 * val ** pinv - c2$2;\r\n      let x = 10000 * (num / denom) ** ninv$1;\r\n\r\n      return x; // luminance relative to diffuse white, [0, 70 or so].\r\n    });\r\n\r\n    // modified abs XYZ\r\n    let [Xm, Ym, Za] = multiplyMatrices(ConetoXYZ_M, LMS);\r\n\r\n    // restore standard D50 relative XYZ, relative to media white\r\n    let Xa = (Xm + (b$1 - 1) * Za) / b$1;\r\n    let Ya = (Ym + (g - 1) * Xa) / g;\r\n    return [Xa, Ya, Za];\r\n  },\r\n\r\n  formats: {\r\n    // https://drafts.csswg.org/css-color-hdr/#Jzazbz\r\n    color: {},\r\n  },\r\n});\r\n\r\nvar jzczhz = new ColorSpace({\r\n  id: 'jzczhz',\r\n  name: 'JzCzHz',\r\n  coords: {\r\n    jz: {\r\n      refRange: [0, 1],\r\n      name: 'Jz',\r\n    },\r\n    cz: {\r\n      refRange: [0, 1],\r\n      name: 'Chroma',\r\n    },\r\n    hz: {\r\n      refRange: [0, 360],\r\n      type: 'angle',\r\n      name: 'Hue',\r\n    },\r\n  },\r\n\r\n  base: Jzazbz,\r\n  fromBase(jzazbz) {\r\n    // Convert to polar form\r\n    let [Jz, az, bz] = jzazbz;\r\n    let hue;\r\n    const ε = 0.0002; // chromatic components much smaller than a,b\r\n\r\n    if (Math.abs(az) < ε && Math.abs(bz) < ε) {\r\n      hue = NaN;\r\n    } else {\r\n      hue = (Math.atan2(bz, az) * 180) / Math.PI;\r\n    }\r\n\r\n    return [\r\n      Jz, // Jz is still Jz\r\n      Math.sqrt(az ** 2 + bz ** 2), // Chroma\r\n      constrain(hue), // Hue, in degrees [0 to 360)\r\n    ];\r\n  },\r\n  toBase(jzczhz) {\r\n    // Convert from polar form\r\n    // debugger;\r\n    return [\r\n      jzczhz[0], // Jz is still Jz\r\n      jzczhz[1] * Math.cos((jzczhz[2] * Math.PI) / 180), // az\r\n      jzczhz[1] * Math.sin((jzczhz[2] * Math.PI) / 180), // bz\r\n    ];\r\n  },\r\n  formats: {\r\n    color: {},\r\n  },\r\n});\r\n\r\n// More accurate color-difference formulae\r\n// than the simple 1976 Euclidean distance in Lab\r\n\r\n// Uses JzCzHz, which has improved perceptual uniformity\r\n// and thus a simple Euclidean root-sum of ΔL² ΔC² ΔH²\r\n// gives good results.\r\n\r\nfunction deltaEJz(color, sample) {\r\n  // Given this color as the reference\r\n  // and a sample,\r\n  // calculate deltaE in JzCzHz.\r\n  let [Jz1, Cz1, Hz1] = jzczhz.from(color);\r\n  let [Jz2, Cz2, Hz2] = jzczhz.from(sample);\r\n\r\n  // Lightness and Chroma differences\r\n  // sign does not matter as they are squared.\r\n  let ΔJ = Jz1 - Jz2;\r\n  let ΔC = Cz1 - Cz2;\r\n\r\n  // length of chord for ΔH\r\n  if (Number.isNaN(Hz1) && Number.isNaN(Hz2)) {\r\n    // both undefined hues\r\n    Hz1 = 0;\r\n    Hz2 = 0;\r\n  } else if (Number.isNaN(Hz1)) {\r\n    // one undefined, set to the defined hue\r\n    Hz1 = Hz2;\r\n  } else if (Number.isNaN(Hz2)) {\r\n    Hz2 = Hz1;\r\n  }\r\n\r\n  let Δh = Hz1 - Hz2;\r\n  let ΔH = 2 * Math.sqrt(Cz1 * Cz2) * Math.sin((Δh / 2) * (Math.PI / 180));\r\n\r\n  return Math.sqrt(ΔJ ** 2 + ΔC ** 2 + ΔH ** 2);\r\n}\r\n\r\nconst c1$1 = 3424 / 4096;\r\nconst c2$1 = 2413 / 128;\r\nconst c3$1 = 2392 / 128;\r\nconst m1 = 2610 / 16384;\r\nconst m2 = 2523 / 32;\r\nconst im1 = 16384 / 2610;\r\nconst im2 = 32 / 2523;\r\n\r\n// The matrix below includes the 4% crosstalk components\r\n// and is from the Dolby \"What is ICtCp\" paper\"\r\nconst XYZtoLMS_M$1 = [\r\n  [0.3592, 0.6976, -0.0358],\r\n  [-0.1922, 1.1004, 0.0755],\r\n  [0.007, 0.0749, 0.8434],\r\n];\r\n// linear-light Rec.2020 to LMS, again with crosstalk\r\n// rational terms from Jan Fröhlich,\r\n// Encoding High Dynamic Range andWide Color Gamut Imagery, p.97\r\n// and ITU-R BT.2124-0 p.2\r\n/*\r\nconst Rec2020toLMS_M = [\r\n\t[ 1688 / 4096,  2146 / 4096,   262 / 4096 ],\r\n\t[  683 / 4096,  2951 / 4096,   462 / 4096 ],\r\n\t[   99 / 4096,   309 / 4096,  3688 / 4096 ]\r\n];\r\n*/\r\n// this includes the Ebner LMS coefficients,\r\n// the rotation, and the scaling to [-0.5,0.5] range\r\n// rational terms from Fröhlich p.97\r\n// and ITU-R BT.2124-0 pp.2-3\r\nconst LMStoIPT_M = [\r\n  [2048 / 4096, 2048 / 4096, 0],\r\n  [6610 / 4096, -13613 / 4096, 7003 / 4096],\r\n  [17933 / 4096, -17390 / 4096, -543 / 4096],\r\n];\r\n\r\n// inverted matrices, calculated from the above\r\nconst IPTtoLMS_M = [\r\n  [0.99998889656284013833, 0.00860505014728705821, 0.1110343715986164786],\r\n  [1.0000111034371598616, -0.00860505014728705821, -0.1110343715986164786],\r\n  [1.000032063391005412, 0.56004913547279000113, -0.32063391005412026469],\r\n];\r\n/*\r\nconst LMStoRec2020_M = [\r\n\t[ 3.4375568932814012112,   -2.5072112125095058195,   0.069654319228104608382],\r\n\t[-0.79142868665644156125,   1.9838372198740089874,  -0.19240853321756742626 ],\r\n\t[-0.025646662911506476363, -0.099240248643945566751, 1.1248869115554520431  ]\r\n];\r\n*/\r\nconst LMStoXYZ_M$1 = [\r\n  [2.0701800566956135096, -1.3264568761030210255, 0.20661600684785517081],\r\n  [0.36498825003265747974, 0.68046736285223514102, -0.045421753075853231409],\r\n  [-0.049595542238932107896, -0.049421161186757487412, 1.1879959417328034394],\r\n];\r\n\r\n// Only the PQ form of ICtCp is implemented here. There is also an HLG form.\r\n// from Dolby, \"WHAT IS ICTCP?\"\r\n// https://professional.dolby.com/siteassets/pdfs/ictcp_dolbywhitepaper_v071.pdf\r\n// and\r\n// Dolby, \"Perceptual Color Volume\r\n// Measuring the Distinguishable Colors of HDR and WCG Displays\"\r\n// https://professional.dolby.com/siteassets/pdfs/dolby-vision-measuring-perceptual-color-volume-v7.1.pdf\r\nvar ictcp = new ColorSpace({\r\n  id: 'ictcp',\r\n  name: 'ICTCP',\r\n  // From BT.2100-2 page 7:\r\n  // During production, signal values are expected to exceed the\r\n  // range E′ = [0.0 : 1.0]. This provides processing headroom and avoids\r\n  // signal degradation during cascaded processing. Such values of E′,\r\n  // below 0.0 or exceeding 1.0, should not be clipped during production\r\n  // and exchange.\r\n  // Values below 0.0 should not be clipped in reference displays (even\r\n  // though they represent “negative” light) to allow the black level of\r\n  // the signal (LB) to be properly set using test signals known as “PLUGE”\r\n  coords: {\r\n    i: {\r\n      refRange: [0, 1], // Constant luminance,\r\n      name: 'I',\r\n    },\r\n    ct: {\r\n      refRange: [-0.5, 0.5], // Full BT.2020 gamut in range [-0.5, 0.5]\r\n      name: 'CT',\r\n    },\r\n    cp: {\r\n      refRange: [-0.5, 0.5],\r\n      name: 'CP',\r\n    },\r\n  },\r\n\r\n  base: XYZ_Abs_D65,\r\n  fromBase(XYZ) {\r\n    // move to LMS cone domain\r\n    let LMS = multiplyMatrices(XYZtoLMS_M$1, XYZ);\r\n\r\n    return LMStoICtCp(LMS);\r\n  },\r\n  toBase(ICtCp) {\r\n    let LMS = ICtCptoLMS(ICtCp);\r\n\r\n    return multiplyMatrices(LMStoXYZ_M$1, LMS);\r\n  },\r\n  formats: {\r\n    color: {},\r\n  },\r\n});\r\n\r\nfunction LMStoICtCp(LMS) {\r\n  // apply the PQ EOTF\r\n  // we can't ever be dividing by zero because of the \"1 +\" in the denominator\r\n  let PQLMS = LMS.map(function (val) {\r\n    let num = c1$1 + c2$1 * (val / 10000) ** m1;\r\n    let denom = 1 + c3$1 * (val / 10000) ** m1;\r\n\r\n    return (num / denom) ** m2;\r\n  });\r\n\r\n  // LMS to IPT, with rotation for Y'C'bC'r compatibility\r\n  return multiplyMatrices(LMStoIPT_M, PQLMS);\r\n}\r\n\r\nfunction ICtCptoLMS(ICtCp) {\r\n  let PQLMS = multiplyMatrices(IPTtoLMS_M, ICtCp);\r\n\r\n  // From BT.2124-0 Annex 2 Conversion 3\r\n  let LMS = PQLMS.map(function (val) {\r\n    let num = Math.max(val ** im2 - c1$1, 0);\r\n    let denom = c2$1 - c3$1 * val ** im2;\r\n    return 10000 * (num / denom) ** im1;\r\n  });\r\n\r\n  return LMS;\r\n}\r\n\r\n// Delta E in ICtCp space,\r\n// which the ITU calls Delta E ITP, which is shorter\r\n// formulae from ITU Rec. ITU-R BT.2124-0\r\n\r\nfunction deltaEITP(color, sample) {\r\n  // Given this color as the reference\r\n  // and a sample,\r\n  // calculate deltaE in ICtCp\r\n  // which is simply the Euclidean distance\r\n\r\n  let [I1, T1, P1] = ictcp.from(color);\r\n  let [I2, T2, P2] = ictcp.from(sample);\r\n\r\n  // the 0.25 factor is to undo the encoding scaling in Ct\r\n  // the 720 is so that 1 deltaE = 1 JND\r\n  // per  ITU-R BT.2124-0 p.3\r\n\r\n  return 720 * Math.sqrt((I1 - I2) ** 2 + 0.25 * (T1 - T2) ** 2 + (P1 - P2) ** 2);\r\n}\r\n\r\n// Recalculated for consistent reference white\r\n// see https://github.com/w3c/csswg-drafts/issues/6642#issuecomment-943521484\r\nconst XYZtoLMS_M = [\r\n  [0.8190224432164319, 0.3619062562801221, -0.12887378261216414],\r\n  [0.0329836671980271, 0.9292868468965546, 0.03614466816999844],\r\n  [0.048177199566046255, 0.26423952494422764, 0.6335478258136937],\r\n];\r\n// inverse of XYZtoLMS_M\r\nconst LMStoXYZ_M = [\r\n  [1.2268798733741557, -0.5578149965554813, 0.28139105017721583],\r\n  [-0.04057576262431372, 1.1122868293970594, -0.07171106666151701],\r\n  [-0.07637294974672142, -0.4214933239627914, 1.5869240244272418],\r\n];\r\nconst LMStoLab_M = [\r\n  [0.2104542553, 0.793617785, -0.0040720468],\r\n  [1.9779984951, -2.428592205, 0.4505937099],\r\n  [0.0259040371, 0.7827717662, -0.808675766],\r\n];\r\n// LMStoIab_M inverted\r\nconst LabtoLMS_M = [\r\n  [0.99999999845051981432, 0.39633779217376785678, 0.21580375806075880339],\r\n  [1.0000000088817607767, -0.1055613423236563494, -0.063854174771705903402],\r\n  [1.0000000546724109177, -0.089484182094965759684, -1.2914855378640917399],\r\n];\r\n\r\nvar OKLab = new ColorSpace({\r\n  id: 'oklab',\r\n  name: 'OKLab',\r\n  coords: {\r\n    l: {\r\n      refRange: [0, 1],\r\n      name: 'L',\r\n    },\r\n    a: {\r\n      refRange: [-0.4, 0.4],\r\n    },\r\n    b: {\r\n      refRange: [-0.4, 0.4],\r\n    },\r\n  },\r\n\r\n  // Note that XYZ is relative to D65\r\n  white: 'D65',\r\n  base: XYZ_D65,\r\n  fromBase(XYZ) {\r\n    // move to LMS cone domain\r\n    let LMS = multiplyMatrices(XYZtoLMS_M, XYZ);\r\n\r\n    // non-linearity\r\n    let LMSg = LMS.map((val) => Math.cbrt(val));\r\n\r\n    return multiplyMatrices(LMStoLab_M, LMSg);\r\n  },\r\n  toBase(OKLab) {\r\n    // move to LMS cone domain\r\n    let LMSg = multiplyMatrices(LabtoLMS_M, OKLab);\r\n\r\n    // restore linearity\r\n    let LMS = LMSg.map((val) => val ** 3);\r\n\r\n    return multiplyMatrices(LMStoXYZ_M, LMS);\r\n  },\r\n\r\n  formats: {\r\n    oklab: {\r\n      coords: ['<percentage>', '<number>', '<number>'],\r\n    },\r\n  },\r\n});\r\n\r\n// More accurate color-difference formulae\r\n\r\nfunction deltaEOK(color, sample) {\r\n  // Given this color as the reference\r\n  // and a sample,\r\n  // calculate deltaEOK, term by term as root sum of squares\r\n  let [L1, a1, b1] = OKLab.from(color);\r\n  let [L2, a2, b2] = OKLab.from(sample);\r\n  let ΔL = L1 - L2;\r\n  let Δa = a1 - a2;\r\n  let Δb = b1 - b2;\r\n  return Math.sqrt(ΔL ** 2 + Δa ** 2 + Δb ** 2);\r\n}\r\n\r\nvar deltaEMethods = /*#__PURE__*/ Object.freeze({\r\n  __proto__: null,\r\n  deltaE76: deltaE76,\r\n  deltaECMC: deltaECMC,\r\n  deltaE2000: deltaE2000,\r\n  deltaEJz: deltaEJz,\r\n  deltaEITP: deltaEITP,\r\n  deltaEOK: deltaEOK,\r\n});\r\n\r\nfunction deltaE(c1, c2, o = {}) {\r\n  if (isString(o)) {\r\n    o = { method: o };\r\n  }\r\n\r\n  let { method = defaults.deltaE, ...rest } = o;\r\n\r\n  c1 = getColor(c1);\r\n  c2 = getColor(c2);\r\n\r\n  for (let m in deltaEMethods) {\r\n    if ('deltae' + method.toLowerCase() === m.toLowerCase()) {\r\n      return deltaEMethods[m](c1, c2, rest);\r\n    }\r\n  }\r\n\r\n  throw new TypeError(`Unknown deltaE method: ${method}`);\r\n}\r\n\r\nvar deltaE$1 = /*#__PURE__*/ Object.freeze({\r\n  __proto__: null,\r\n  default: deltaE,\r\n});\r\n\r\nfunction lighten(color, amount = 0.25) {\r\n  let space = ColorSpace.get('oklch', 'lch');\r\n  let lightness = [space, 'l'];\r\n  return set$1(color, lightness, (l) => l * (1 + amount));\r\n}\r\n\r\nfunction darken(color, amount = 0.25) {\r\n  let space = ColorSpace.get('oklch', 'lch');\r\n  let lightness = [space, 'l'];\r\n  return set$1(color, lightness, (l) => l * (1 - amount));\r\n}\r\n\r\nvar variations = /*#__PURE__*/ Object.freeze({\r\n  __proto__: null,\r\n  lighten: lighten,\r\n  darken: darken,\r\n});\r\n\r\n/**\r\n * Functions related to color interpolation\r\n */\r\n\r\n/**\r\n * Return an intermediate color between two colors\r\n * Signatures: mix(c1, c2, p, options)\r\n *             mix(c1, c2, options)\r\n *             mix(color)\r\n * @param {Color | string} c1 The first color\r\n * @param {Color | string} [c2] The second color\r\n * @param {number} [p=.5] A 0-1 percentage where 0 is c1 and 1 is c2\r\n * @param {Object} [o={}]\r\n * @return {Color}\r\n */\r\nfunction mix(c1, c2, p = 0.5, o = {}) {\r\n  [c1, c2] = [getColor(c1), getColor(c2)];\r\n\r\n  if (type(p) === 'object') {\r\n    [p, o] = [0.5, p];\r\n  }\r\n\r\n  let { space, outputSpace } = o;\r\n\r\n  let r = range(c1, c2, { space, outputSpace });\r\n  return r(p);\r\n}\r\n\r\n/**\r\n *\r\n * @param {Color | string | Function} c1 The first color or a range\r\n * @param {Color | string} [c2] The second color if c1 is not a range\r\n * @param {Object} [options={}]\r\n * @return {Color[]}\r\n */\r\nfunction steps(c1, c2, options = {}) {\r\n  let colorRange;\r\n\r\n  if (isRange(c1)) {\r\n    // Tweaking existing range\r\n    [colorRange, options] = [c1, c2];\r\n    [c1, c2] = colorRange.rangeArgs.colors;\r\n  }\r\n\r\n  let { maxDeltaE, deltaEMethod, steps = 2, maxSteps = 1000, ...rangeOptions } = options;\r\n\r\n  if (!colorRange) {\r\n    [c1, c2] = [getColor(c1), getColor(c2)];\r\n    colorRange = range(c1, c2, rangeOptions);\r\n  }\r\n\r\n  let totalDelta = deltaE(c1, c2);\r\n  let actualSteps = maxDeltaE > 0 ? Math.max(steps, Math.ceil(totalDelta / maxDeltaE) + 1) : steps;\r\n  let ret = [];\r\n\r\n  if (maxSteps !== undefined) {\r\n    actualSteps = Math.min(actualSteps, maxSteps);\r\n  }\r\n\r\n  if (actualSteps === 1) {\r\n    ret = [{ p: 0.5, color: colorRange(0.5) }];\r\n  } else {\r\n    let step = 1 / (actualSteps - 1);\r\n    ret = Array.from({ length: actualSteps }, (_, i) => {\r\n      let p = i * step;\r\n      return { p, color: colorRange(p) };\r\n    });\r\n  }\r\n\r\n  if (maxDeltaE > 0) {\r\n    // Iterate over all stops and find max deltaE\r\n    let maxDelta = ret.reduce((acc, cur, i) => {\r\n      if (i === 0) {\r\n        return 0;\r\n      }\r\n\r\n      let ΔΕ = deltaE(cur.color, ret[i - 1].color, deltaEMethod);\r\n      return Math.max(acc, ΔΕ);\r\n    }, 0);\r\n\r\n    while (maxDelta > maxDeltaE) {\r\n      // Insert intermediate stops and measure maxDelta again\r\n      // We need to do this for all pairs, otherwise the midpoint shifts\r\n      maxDelta = 0;\r\n\r\n      for (let i = 1; i < ret.length && ret.length < maxSteps; i++) {\r\n        let prev = ret[i - 1];\r\n        let cur = ret[i];\r\n\r\n        let p = (cur.p + prev.p) / 2;\r\n        let color = colorRange(p);\r\n        maxDelta = Math.max(maxDelta, deltaE(color, prev.color), deltaE(color, cur.color));\r\n        ret.splice(i, 0, { p, color: colorRange(p) });\r\n        i++;\r\n      }\r\n    }\r\n  }\r\n\r\n  ret = ret.map((a) => a.color);\r\n\r\n  return ret;\r\n}\r\n/**\r\n * Interpolate to color2 and return a function that takes a 0-1 percentage\r\n * @param {Color | string | Function} color1 The first color or an existing range\r\n * @param {Color | string} [color2] If color1 is a color, this is the second color\r\n * @param {Object} [options={}]\r\n * @returns {Function} A function that takes a 0-1 percentage and returns a color\r\n */\r\nfunction range(color1, color2, options = {}) {\r\n  if (isRange(color1)) {\r\n    // Tweaking existing range\r\n    let [r, options] = [color1, color2];\r\n\r\n    return range(...r.rangeArgs.colors, { ...r.rangeArgs.options, ...options });\r\n  }\r\n\r\n  let { space, outputSpace, progression, premultiplied } = options;\r\n\r\n  color1 = getColor(color1);\r\n  color2 = getColor(color2);\r\n\r\n  // Make sure we're working on copies of these colors\r\n  color1 = clone(color1);\r\n  color2 = clone(color2);\r\n\r\n  let rangeArgs = { colors: [color1, color2], options };\r\n\r\n  if (space) {\r\n    space = ColorSpace.get(space);\r\n  } else {\r\n    space = ColorSpace.registry[defaults.interpolationSpace] || color1.space;\r\n  }\r\n\r\n  outputSpace = outputSpace ? ColorSpace.get(outputSpace) : space;\r\n\r\n  color1 = to(color1, space);\r\n  color2 = to(color2, space);\r\n\r\n  // Gamut map to avoid areas of flat color\r\n  color1 = toGamut(color1);\r\n  color2 = toGamut(color2);\r\n\r\n  // Handle hue interpolation\r\n  // See https://github.com/w3c/csswg-drafts/issues/4735#issuecomment-635741840\r\n  if (space.coords.h && space.coords.h.type === 'angle') {\r\n    let arc = (options.hue = options.hue || 'shorter');\r\n\r\n    let hue = [space, 'h'];\r\n    let [θ1, θ2] = [get(color1, hue), get(color2, hue)];\r\n    [θ1, θ2] = adjust(arc, [θ1, θ2]);\r\n    set$1(color1, hue, θ1);\r\n    set$1(color2, hue, θ2);\r\n  }\r\n\r\n  if (premultiplied) {\r\n    // not coping with polar spaces yet\r\n    color1.coords = color1.coords.map((c) => c * color1.alpha);\r\n    color2.coords = color2.coords.map((c) => c * color2.alpha);\r\n  }\r\n\r\n  return Object.assign(\r\n    (p) => {\r\n      p = progression ? progression(p) : p;\r\n      let coords = color1.coords.map((start, i) => {\r\n        let end = color2.coords[i];\r\n        return interpolate(start, end, p);\r\n      });\r\n\r\n      let alpha = interpolate(color1.alpha, color2.alpha, p);\r\n      let ret = { space, coords, alpha };\r\n\r\n      if (premultiplied) {\r\n        // undo premultiplication\r\n        ret.coords = ret.coords.map((c) => c / alpha);\r\n      }\r\n\r\n      if (outputSpace !== space) {\r\n        ret = to(ret, outputSpace);\r\n      }\r\n\r\n      return ret;\r\n    },\r\n    {\r\n      rangeArgs,\r\n    }\r\n  );\r\n}\r\nfunction isRange(val) {\r\n  return type(val) === 'function' && !!val.rangeArgs;\r\n}\r\ndefaults.interpolationSpace = 'lab';\r\n\r\nfunction register(Color) {\r\n  Color.defineFunction('mix', mix, { returns: 'color' });\r\n  Color.defineFunction('range', range, { returns: 'function<color>' });\r\n  Color.defineFunction('steps', steps, { returns: 'array<color>' });\r\n}\r\n\r\nvar interpolation = /*#__PURE__*/ Object.freeze({\r\n  __proto__: null,\r\n  mix: mix,\r\n  steps: steps,\r\n  range: range,\r\n  isRange: isRange,\r\n  register: register,\r\n});\r\n\r\nvar HSL = new ColorSpace({\r\n  id: 'hsl',\r\n  name: 'HSL',\r\n  coords: {\r\n    h: {\r\n      refRange: [0, 360],\r\n      type: 'angle',\r\n      name: 'Hue',\r\n    },\r\n    s: {\r\n      range: [0, 100],\r\n      name: 'Saturation',\r\n    },\r\n    l: {\r\n      range: [0, 100],\r\n      name: 'Lightness',\r\n    },\r\n  },\r\n\r\n  base: sRGB,\r\n\r\n  // Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB\r\n  fromBase: (rgb) => {\r\n    let max = Math.max(...rgb);\r\n    let min = Math.min(...rgb);\r\n    let [r, g, b] = rgb;\r\n    let [h, s, l] = [NaN, 0, (min + max) / 2];\r\n    let d = max - min;\r\n\r\n    if (d !== 0) {\r\n      s = l === 0 || l === 1 ? 0 : (max - l) / Math.min(l, 1 - l);\r\n\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n      }\r\n\r\n      h = h * 60;\r\n    }\r\n\r\n    return [h, s * 100, l * 100];\r\n  },\r\n\r\n  // Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative\r\n  toBase: (hsl) => {\r\n    let [h, s, l] = hsl;\r\n    h = h % 360;\r\n\r\n    if (h < 0) {\r\n      h += 360;\r\n    }\r\n\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    function f(n) {\r\n      let k = (n + h / 30) % 12;\r\n      let a = s * Math.min(l, 1 - l);\r\n      return l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\r\n    }\r\n\r\n    return [f(0), f(8), f(4)];\r\n  },\r\n\r\n  formats: {\r\n    hsl: {\r\n      toGamut: true,\r\n      coords: ['<number> | <angle>', '<percentage>', '<percentage>'],\r\n    },\r\n    hsla: {\r\n      coords: ['<number> | <angle>', '<percentage>', '<percentage>'],\r\n      commas: true,\r\n      lastAlpha: true,\r\n    },\r\n  },\r\n});\r\n\r\n// The Hue, Whiteness Blackness (HWB) colorspace\r\n// See https://drafts.csswg.org/css-color-4/#the-hwb-notation\r\n// Note that, like HSL, calculations are done directly on\r\n// gamma-corrected sRGB values rather than linearising them first.\r\n\r\nvar HSV = new ColorSpace({\r\n  id: 'hsv',\r\n  name: 'HSV',\r\n  coords: {\r\n    h: {\r\n      refRange: [0, 360],\r\n      type: 'angle',\r\n      name: 'Hue',\r\n    },\r\n    s: {\r\n      range: [0, 100],\r\n      name: 'Saturation',\r\n    },\r\n    v: {\r\n      range: [0, 100],\r\n      name: 'Value',\r\n    },\r\n  },\r\n\r\n  base: HSL,\r\n  // https://en.wikipedia.org/wiki/HSL_and_HSV#Interconversion\r\n  fromBase(hsl) {\r\n    let [h, s, l] = hsl;\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    let v = l + s * Math.min(l, 1 - l);\r\n\r\n    return [\r\n      h, // h is the same\r\n      v === 0 ? 0 : 200 * (1 - l / v), // s\r\n      100 * v,\r\n    ];\r\n  },\r\n  // https://en.wikipedia.org/wiki/HSL_and_HSV#Interconversion\r\n  toBase(hsv) {\r\n    let [h, s, v] = hsv;\r\n\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    let l = v * (1 - s / 2);\r\n\r\n    return [\r\n      h, // h is the same\r\n      l === 0 || l === 1 ? 0 : ((v - l) / Math.min(l, 1 - l)) * 100,\r\n      l * 100,\r\n    ];\r\n  },\r\n  formats: {\r\n    color: {\r\n      toGamut: true,\r\n    },\r\n  },\r\n});\r\n\r\n// The Hue, Whiteness Blackness (HWB) colorspace\r\n// See https://drafts.csswg.org/css-color-4/#the-hwb-notation\r\n// Note that, like HSL, calculations are done directly on\r\n// gamma-corrected sRGB values rather than linearising them first.\r\n\r\nvar hwb = new ColorSpace({\r\n  id: 'hwb',\r\n  name: 'HWB',\r\n  coords: {\r\n    h: {\r\n      refRange: [0, 360],\r\n      type: 'angle',\r\n      name: 'Hue',\r\n    },\r\n    w: {\r\n      range: [0, 100],\r\n      name: 'Whiteness',\r\n    },\r\n    b: {\r\n      range: [0, 100],\r\n      name: 'Blackness',\r\n    },\r\n  },\r\n\r\n  base: HSV,\r\n  fromBase(hsv) {\r\n    let [h, s, v] = hsv;\r\n\r\n    return [h, (v * (100 - s)) / 100, 100 - v];\r\n  },\r\n  toBase(hwb) {\r\n    let [h, w, b] = hwb;\r\n\r\n    // Now convert percentages to [0..1]\r\n    w /= 100;\r\n    b /= 100;\r\n\r\n    // Achromatic check (white plus black >= 1)\r\n    let sum = w + b;\r\n    if (sum >= 1) {\r\n      let gray = w / sum;\r\n      return [h, 0, gray * 100];\r\n    }\r\n\r\n    let v = 1 - b;\r\n    let s = v === 0 ? 0 : 1 - w / v;\r\n    return [h, s * 100, v * 100];\r\n  },\r\n\r\n  formats: {\r\n    hwb: {\r\n      toGamut: true,\r\n      coords: ['<number> | <angle>', '<percentage>', '<percentage>'],\r\n    },\r\n  },\r\n});\r\n\r\n// convert an array of linear-light a98-rgb values to CIE XYZ\r\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\r\n// has greater numerical precision than section 4.3.5.3 of\r\n// https://www.adobe.com/digitalimag/pdfs/AdobeRGB1998.pdf\r\n// but the values below were calculated from first principles\r\n// from the chromaticity coordinates of R G B W\r\nconst toXYZ_M$2 = [\r\n  [0.5766690429101305, 0.1855582379065463, 0.1882286462349947],\r\n  [0.29734497525053605, 0.6273635662554661, 0.07529145849399788],\r\n  [0.02703136138641234, 0.07068885253582723, 0.9913375368376388],\r\n];\r\n\r\nconst fromXYZ_M$2 = [\r\n  [2.0415879038107465, -0.5650069742788596, -0.34473135077832956],\r\n  [-0.9692436362808795, 1.8759675015077202, 0.04155505740717557],\r\n  [0.013444280632031142, -0.11836239223101838, 1.0151749943912054],\r\n];\r\n\r\nvar A98Linear = new RGBColorSpace({\r\n  id: 'a98rgb-linear',\r\n  name: 'Linear Adobe® 98 RGB compatible',\r\n  white: 'D65',\r\n  toXYZ_M: toXYZ_M$2,\r\n  fromXYZ_M: fromXYZ_M$2,\r\n});\r\n\r\nvar a98rgb = new RGBColorSpace({\r\n  id: 'a98rgb',\r\n  name: 'Adobe® 98 RGB compatible',\r\n  base: A98Linear,\r\n  toBase: (RGB) => RGB.map((val) => Math.pow(Math.abs(val), 563 / 256) * Math.sign(val)),\r\n  fromBase: (RGB) => RGB.map((val) => Math.pow(Math.abs(val), 256 / 563) * Math.sign(val)),\r\n  formats: {\r\n    color: {\r\n      id: 'a98-rgb',\r\n    },\r\n  },\r\n});\r\n\r\n// convert an array of  prophoto-rgb values to CIE XYZ\r\n// using  D50 (so no chromatic adaptation needed afterwards)\r\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\r\nconst toXYZ_M$1 = [\r\n  [0.7977604896723027, 0.13518583717574031, 0.0313493495815248],\r\n  [0.2880711282292934, 0.7118432178101014, 0.00008565396060525902],\r\n  [0.0, 0.0, 0.8251046025104601],\r\n];\r\n\r\nconst fromXYZ_M$1 = [\r\n  [1.3457989731028281, -0.25558010007997534, -0.05110628506753401],\r\n  [-0.5446224939028347, 1.5082327413132781, 0.02053603239147973],\r\n  [0.0, 0.0, 1.2119675456389454],\r\n];\r\n\r\nvar ProPhotoLinear = new RGBColorSpace({\r\n  id: 'prophoto-linear',\r\n  name: 'Linear ProPhoto',\r\n  white: 'D50',\r\n  base: XYZ_D50,\r\n  toXYZ_M: toXYZ_M$1,\r\n  fromXYZ_M: fromXYZ_M$1,\r\n});\r\n\r\nconst Et = 1 / 512;\r\nconst Et2 = 16 / 512;\r\n\r\nvar prophoto = new RGBColorSpace({\r\n  id: 'prophoto',\r\n  name: 'ProPhoto',\r\n  base: ProPhotoLinear,\r\n  toBase(RGB) {\r\n    // Transfer curve is gamma 1.8 with a small linear portion\r\n    return RGB.map((v) => (v < Et2 ? v / 16 : v ** 1.8));\r\n  },\r\n  fromBase(RGB) {\r\n    return RGB.map((v) => (v >= Et ? v ** (1 / 1.8) : 16 * v));\r\n  },\r\n  formats: {\r\n    color: {\r\n      id: 'prophoto-rgb',\r\n    },\r\n  },\r\n});\r\n\r\nvar oklch = new ColorSpace({\r\n  id: 'oklch',\r\n  name: 'OKLCh',\r\n  coords: {\r\n    l: {\r\n      refRange: [0, 1],\r\n      name: 'Lightness',\r\n    },\r\n    c: {\r\n      refRange: [0, 0.4],\r\n      name: 'Chroma',\r\n    },\r\n    h: {\r\n      refRange: [0, 360],\r\n      type: 'angle',\r\n      name: 'Hue',\r\n    },\r\n  },\r\n  white: 'D65',\r\n\r\n  base: OKLab,\r\n  fromBase(oklab) {\r\n    // Convert to polar form\r\n    let [L, a, b] = oklab;\r\n    let h;\r\n    const ε = 0.0002; // chromatic components much smaller than a,b\r\n\r\n    if (Math.abs(a) < ε && Math.abs(b) < ε) {\r\n      h = NaN;\r\n    } else {\r\n      h = (Math.atan2(b, a) * 180) / Math.PI;\r\n    }\r\n\r\n    return [\r\n      L, // OKLab L is still L\r\n      Math.sqrt(a ** 2 + b ** 2), // Chroma\r\n      constrain(h), // Hue, in degrees [0 to 360)\r\n    ];\r\n  },\r\n  // Convert from polar form\r\n  toBase(oklch) {\r\n    let [L, C, h] = oklch;\r\n    let a, b;\r\n\r\n    // check for NaN hue\r\n    if (isNaN(h)) {\r\n      a = 0;\r\n      b = 0;\r\n    } else {\r\n      a = C * Math.cos((h * Math.PI) / 180);\r\n      b = C * Math.sin((h * Math.PI) / 180);\r\n    }\r\n\r\n    return [L, a, b];\r\n  },\r\n\r\n  formats: {\r\n    oklch: {\r\n      coords: ['<percentage>', '<number>', '<number> | <angle>'],\r\n    },\r\n  },\r\n});\r\n\r\nconst Yw = 203; // absolute luminance of media white, cd/m²\r\nconst n = 2610 / 2 ** 14;\r\nconst ninv = 2 ** 14 / 2610;\r\nconst m = 2523 / 2 ** 5;\r\nconst minv = 2 ** 5 / 2523;\r\nconst c1 = 3424 / 2 ** 12;\r\nconst c2 = 2413 / 2 ** 7;\r\nconst c3 = 2392 / 2 ** 7;\r\n\r\nvar rec2100Pq = new RGBColorSpace({\r\n  id: 'rec2100pq',\r\n  name: 'REC.2100-PQ',\r\n  base: REC2020Linear,\r\n  toBase(RGB) {\r\n    // given PQ encoded component in range [0, 1]\r\n    // return media-white relative linear-light\r\n    return RGB.map(function (val) {\r\n      let x = (Math.max(val ** minv - c1, 0) / (c2 - c3 * val ** minv)) ** ninv;\r\n      return (x * 10000) / Yw; // luminance relative to diffuse white, [0, 70 or so].\r\n    });\r\n  },\r\n  fromBase(RGB) {\r\n    // given media-white relative linear-light\r\n    // returnPQ encoded component in range [0, 1]\r\n    return RGB.map(function (val) {\r\n      let x = Math.max((val * Yw) / 10000, 0); // absolute luminance of peak white is 10,000 cd/m².\r\n      let num = c1 + c2 * x ** n;\r\n      let denom = 1 + c3 * x ** n;\r\n\r\n      return (num / denom) ** m;\r\n    });\r\n  },\r\n  formats: {\r\n    color: {\r\n      id: 'rec2100-pq',\r\n    },\r\n  },\r\n});\r\n\r\n// FIXME see https://github.com/LeaVerou/color.js/issues/190\r\n\r\nconst a = 0.17883277;\r\nconst b = 0.28466892; // 1 - (4 * a)\r\nconst c = 0.55991073; // 0.5 - a * Math.log(4 *a)\r\n\r\nvar rec2100Hlg = new RGBColorSpace({\r\n  id: 'rec2100hlg',\r\n  cssid: 'rec2100-hlg',\r\n  name: 'REC.2100-HLG',\r\n  referred: 'scene',\r\n\r\n  base: REC2020Linear,\r\n  toBase(RGB) {\r\n    // given HLG encoded component in range [0, 1]\r\n    // return media-white relative linear-light\r\n    return RGB.map(function (val) {\r\n      if (val <= 1 / 12) {\r\n        return Math.sqrt(3 * val);\r\n      }\r\n      return a * Math.log(12 * val - b) + c;\r\n    });\r\n  },\r\n  fromBase(RGB) {\r\n    // given media-white relative linear-light\r\n    // return HLG encoded component in range [0, 1]\r\n    // per ITU Rec BT.2390\r\n    return RGB.map(function (val) {\r\n      if (val <= 0.5) {\r\n        return val ** 2 / 3;\r\n      }\r\n      return Math.exp((val - c) / a + b) / 12;\r\n    });\r\n  },\r\n  formats: {\r\n    color: {\r\n      id: 'rec2100-hlg',\r\n    },\r\n  },\r\n});\r\n\r\nconst CATs = {};\r\n\r\nhooks.add('chromatic-adaptation-start', (env) => {\r\n  if (env.options.method) {\r\n    env.M = adapt(env.W1, env.W2, env.options.method);\r\n  }\r\n});\r\n\r\nhooks.add('chromatic-adaptation-end', (env) => {\r\n  if (!env.M) {\r\n    env.M = adapt(env.W1, env.W2, env.options.method);\r\n  }\r\n});\r\n\r\nfunction defineCAT({ id, toCone_M, fromCone_M }) {\r\n  // Use id, toCone_M, fromCone_M like variables\r\n  CATs[id] = arguments[0];\r\n}\r\nfunction adapt(W1, W2, id = 'Bradford') {\r\n  // adapt from a source whitepoint or illuminant W1\r\n  // to a destination whitepoint or illuminant W2,\r\n  // using the given chromatic adaptation transform (CAT)\r\n  // debugger;\r\n  let method = CATs[id];\r\n\r\n  let [ρs, γs, βs] = multiplyMatrices(method.toCone_M, W1);\r\n  let [ρd, γd, βd] = multiplyMatrices(method.toCone_M, W2);\r\n\r\n  // all practical illuminants have non-zero XYZ so no division by zero can occur below\r\n  let scale = [\r\n    [ρd / ρs, 0, 0],\r\n    [0, γd / γs, 0],\r\n    [0, 0, βd / βs],\r\n  ];\r\n\r\n  let scaled_cone_M = multiplyMatrices(scale, method.toCone_M);\r\n  let adapt_M = multiplyMatrices(method.fromCone_M, scaled_cone_M);\r\n  return adapt_M;\r\n}\r\ndefineCAT({\r\n  id: 'von Kries',\r\n  toCone_M: [\r\n    [0.40024, 0.7076, -0.08081],\r\n    [-0.2263, 1.16532, 0.0457],\r\n    [0.0, 0.0, 0.91822],\r\n  ],\r\n  fromCone_M: [\r\n    [1.8599364, -1.1293816, 0.2198974],\r\n    [0.3611914, 0.6388125, -0.0000064],\r\n    [0.0, 0.0, 1.0890636],\r\n  ],\r\n});\r\n\r\ndefineCAT({\r\n  id: 'Bradford',\r\n  // Convert an array of XYZ values in the range 0.0 - 1.0\r\n  // to cone fundamentals\r\n  toCone_M: [\r\n    [0.8951, 0.2664, -0.1614],\r\n    [-0.7502, 1.7135, 0.0367],\r\n    [0.0389, -0.0685, 1.0296],\r\n  ],\r\n  // and back\r\n  fromCone_M: [\r\n    [0.9869929, -0.1470543, 0.1599627],\r\n    [0.4323053, 0.5183603, 0.0492912],\r\n    [-0.0085287, 0.0400428, 0.9684867],\r\n  ],\r\n});\r\n\r\ndefineCAT({\r\n  id: 'CAT02',\r\n  // with complete chromatic adaptation to W2, so D = 1.0\r\n  toCone_M: [\r\n    [0.7328, 0.4296, -0.1624],\r\n    [-0.7036, 1.6975, 0.0061],\r\n    [0.003, 0.0136, 0.9834],\r\n  ],\r\n  fromCone_M: [\r\n    [1.0961238, -0.278869, 0.1827452],\r\n    [0.454369, 0.4735332, 0.0720978],\r\n    [-0.0096276, -0.005698, 1.0153256],\r\n  ],\r\n});\r\n\r\ndefineCAT({\r\n  id: 'CAT16',\r\n  toCone_M: [\r\n    [0.401288, 0.650173, -0.051461],\r\n    [-0.250268, 1.204414, 0.045854],\r\n    [-0.002079, 0.048952, 0.953127],\r\n  ],\r\n  // the extra precision is needed to avoid roundtripping errors\r\n  fromCone_M: [\r\n    [1.862067855087233, -1.011254630531685, 1.491867754444518e-1],\r\n    [3.875265432361372e-1, 6.214474419314753e-1, -8.973985167612518e-3],\r\n    [-1.584149884933386e-2, -3.412293802851557e-2, 1.04996443687785],\r\n  ],\r\n});\r\n\r\nObject.assign(WHITES, {\r\n  // whitepoint values from ASTM E308-01 with 10nm spacing, 1931 2 degree observer\r\n  // all normalized to Y (luminance) = 1.00000\r\n  // Illuminant A is a tungsten electric light, giving a very warm, orange light.\r\n  A: [1.0985, 1.0, 0.35585],\r\n\r\n  // Illuminant C was an early approximation to daylight: illuminant A with a blue filter.\r\n  C: [0.98074, 1.0, 1.18232],\r\n\r\n  // The daylight series of illuminants simulate natural daylight.\r\n  // The color temperature (in degrees Kelvin/100) ranges from\r\n  // cool, overcast daylight (D50) to bright, direct sunlight (D65).\r\n  D55: [0.95682, 1.0, 0.92149],\r\n  D75: [0.94972, 1.0, 1.22638],\r\n\r\n  // Equal-energy illuminant, used in two-stage CAT16\r\n  E: [1.0, 1.0, 1.0],\r\n\r\n  // The F series of illuminants represent fluorescent lights\r\n  F2: [0.99186, 1.0, 0.67393],\r\n  F7: [0.95041, 1.0, 1.08747],\r\n  F11: [1.00962, 1.0, 0.6435],\r\n});\r\n\r\n// The ACES whitepoint\r\n// see TB-2018-001 Derivation of the ACES White Point CIE Chromaticity Coordinates\r\n// also https://github.com/ampas/aces-dev/blob/master/documents/python/TB-2018-001/aces_wp.py\r\n// Similar to D60\r\nWHITES.ACES = [0.32168 / 0.33767, 1.0, (1.0 - 0.32168 - 0.33767) / 0.33767];\r\n\r\n// convert an array of linear-light ACEScc values to CIE XYZ\r\nconst toXYZ_M = [\r\n  [0.6624541811085053, 0.13400420645643313, 0.1561876870049078],\r\n  [0.27222871678091454, 0.6740817658111484, 0.05368951740793705],\r\n  [-0.005574649490394108, 0.004060733528982826, 1.0103391003129971],\r\n];\r\nconst fromXYZ_M = [\r\n  [1.6410233796943257, -0.32480329418479, -0.23642469523761225],\r\n  [-0.6636628587229829, 1.6153315916573379, 0.016756347685530137],\r\n  [0.011721894328375376, -0.008284441996237409, 0.9883948585390215],\r\n];\r\n\r\nvar ACEScg = new RGBColorSpace({\r\n  id: 'acescg',\r\n  name: 'ACEScg',\r\n\r\n  // ACEScg – A scene-referred, linear-light encoding of ACES Data\r\n  // https://docs.acescentral.com/specifications/acescg/\r\n  // uses the AP1 primaries, see section 4.3.1 Color primaries\r\n  coords: {\r\n    r: {\r\n      range: [0, 65504],\r\n      name: 'Red',\r\n    },\r\n    g: {\r\n      range: [0, 65504],\r\n      name: 'Green',\r\n    },\r\n    b: {\r\n      range: [0, 65504],\r\n      name: 'Blue',\r\n    },\r\n  },\r\n\r\n  referred: 'scene',\r\n\r\n  white: WHITES.ACES,\r\n\r\n  toXYZ_M,\r\n  fromXYZ_M,\r\n\r\n  formats: {\r\n    color: {},\r\n  },\r\n});\r\n\r\n// export default Color;\r\n\r\nconst ε = 2 ** -16;\r\n\r\n// the smallest value which, in the 32bit IEEE 754 float encoding,\r\n// decodes as a non-negative value\r\nconst ACES_min_nonzero = -0.35828683;\r\n\r\n// brightest encoded value, decodes to 65504\r\nconst ACES_cc_max = (Math.log2(65504) + 9.72) / 17.52; // 1.468\r\n\r\nvar acescc = new RGBColorSpace({\r\n  id: 'acescc',\r\n  name: 'ACEScc',\r\n  // see S-2014-003 ACEScc – A Logarithmic Encoding of ACES Data\r\n  // https://docs.acescentral.com/specifications/acescc/\r\n  // uses the AP1 primaries, see section 4.3.1 Color primaries\r\n\r\n  // Appendix A: \"Very small ACES scene referred values below 7 1/4 stops\r\n  // below 18% middle gray are encoded as negative ACEScc values.\r\n  // These values should be preserved per the encoding in Section 4.4\r\n  // so that all positive ACES values are maintained.\"\r\n  coords: {\r\n    r: {\r\n      range: [ACES_min_nonzero, ACES_cc_max],\r\n      name: 'Red',\r\n    },\r\n    g: {\r\n      range: [ACES_min_nonzero, ACES_cc_max],\r\n      name: 'Green',\r\n    },\r\n    b: {\r\n      range: [ACES_min_nonzero, ACES_cc_max],\r\n      name: 'Blue',\r\n    },\r\n  },\r\n  referred: 'scene',\r\n\r\n  base: ACEScg,\r\n  // from section 4.4.2 Decoding Function\r\n  toBase(RGB) {\r\n    const low = (9.72 - 15) / 17.52; // -0.3014\r\n\r\n    return RGB.map(function (val) {\r\n      if (val <= low) {\r\n        return (2 ** (val * 17.52 - 9.72) - ε) * 2; // very low values, below -0.3014\r\n      } else if (val < ACES_cc_max) {\r\n        return 2 ** (val * 17.52 - 9.72);\r\n      } else {\r\n        // val >= ACES_cc_max\r\n        return 65504;\r\n      }\r\n    });\r\n  },\r\n\r\n  // Non-linear encoding function from S-2014-003, section 4.4.1 Encoding Function\r\n  fromBase(RGB) {\r\n    return RGB.map(function (val) {\r\n      if (val <= 0) {\r\n        return (Math.log2(ε) + 9.72) / 17.52; // -0.3584\r\n      } else if (val < ε) {\r\n        return (Math.log2(ε + val * 0.5) + 9.72) / 17.52;\r\n      } else {\r\n        // val >= ε\r\n        return (Math.log2(val) + 9.72) / 17.52;\r\n      }\r\n    });\r\n  },\r\n  // encoded media white (rgb 1,1,1) => linear  [ 222.861, 222.861, 222.861 ]\r\n  // encoded media black (rgb 0,0,0) => linear [ 0.0011857, 0.0011857, 0.0011857]\r\n  formats: {\r\n    color: {},\r\n  },\r\n});\r\n\r\nvar spaces = /*#__PURE__*/ Object.freeze({\r\n  __proto__: null,\r\n  XYZ_D65: XYZ_D65,\r\n  XYZ_D50: XYZ_D50,\r\n  XYZ_ABS_D65: XYZ_Abs_D65,\r\n  Lab_D65: lab_d65,\r\n  Lab: lab,\r\n  LCH: lch,\r\n  sRGB_Linear: sRGBLinear,\r\n  sRGB: sRGB,\r\n  HSL: HSL,\r\n  HWB: hwb,\r\n  HSV: HSV,\r\n  P3_Linear: P3Linear,\r\n  P3: P3,\r\n  A98RGB_Linear: A98Linear,\r\n  A98RGB: a98rgb,\r\n  ProPhoto_Linear: ProPhotoLinear,\r\n  ProPhoto: prophoto,\r\n  REC_2020_Linear: REC2020Linear,\r\n  REC_2020: REC2020,\r\n  OKLab: OKLab,\r\n  OKLCH: oklch,\r\n  Jzazbz: Jzazbz,\r\n  JzCzHz: jzczhz,\r\n  ICTCP: ictcp,\r\n  REC_2100_PQ: rec2100Pq,\r\n  REC_2100_HLG: rec2100Hlg,\r\n  ACEScg: ACEScg,\r\n  ACEScc: acescc,\r\n});\r\n\r\n/**\r\n * Class that represents a color\r\n */\r\nclass Color {\r\n  /**\r\n   * Creates an instance of Color.\r\n   * Signatures:\r\n   * - `new Color(stringToParse)`\r\n   * - `new Color(otherColor)`\r\n   * - `new Color({space, coords, alpha})`\r\n   * - `new Color(space, coords, alpha)`\r\n   * - `new Color(spaceId, coords, alpha)`\r\n   */\r\n  constructor(...args) {\r\n    let color;\r\n\r\n    if (args.length === 1) {\r\n      color = getColor(args[0]);\r\n    }\r\n\r\n    let space, coords, alpha;\r\n\r\n    if (color) {\r\n      space = color.space || color.spaceId;\r\n      coords = color.coords;\r\n      alpha = color.alpha;\r\n    } else {\r\n      // default signature new Color(ColorSpace, array [, alpha])\r\n      [space, coords, alpha] = args;\r\n    }\r\n\r\n    this.#space = ColorSpace.get(space);\r\n    this.coords = coords ? coords.slice() : [0, 0, 0];\r\n    this.alpha = alpha < 1 ? alpha : 1; // this also deals with NaN etc\r\n\r\n    // Convert \"NaN\" to NaN\r\n    for (let i = 0; i < this.coords.length; i++) {\r\n      if (this.coords[i] === 'NaN') {\r\n        this.coords[i] = NaN;\r\n      }\r\n    }\r\n\r\n    // Define getters and setters for each coordinate\r\n    for (let id in this.#space.coords) {\r\n      Object.defineProperty(this, id, {\r\n        get: () => this.get(id),\r\n        set: (value) => this.set(id, value),\r\n      });\r\n    }\r\n  }\r\n\r\n  #space;\r\n\r\n  get space() {\r\n    return this.#space;\r\n  }\r\n\r\n  get spaceId() {\r\n    return this.#space.id;\r\n  }\r\n\r\n  clone() {\r\n    return new Color(this.space, this.coords, this.alpha);\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      spaceId: this.spaceId,\r\n      coords: this.coords,\r\n      alpha: this.alpha,\r\n    };\r\n  }\r\n\r\n  display(...args) {\r\n    let ret = display(this, ...args);\r\n\r\n    // Convert color object to Color instance\r\n    ret.color = new Color(ret.color);\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * Get a color from the argument passed\r\n   * Basically gets us the same result as new Color(color) but doesn't clone an existing color object\r\n   */\r\n  static get(color, ...args) {\r\n    if (color instanceof Color) {\r\n      return color;\r\n    }\r\n\r\n    return new Color(color, ...args);\r\n  }\r\n\r\n  static defineFunction(name, code, o = code) {\r\n    if (arguments.length === 1) {\r\n      [name, code, o] = [arguments[0].name, arguments[0], arguments[0]];\r\n    }\r\n\r\n    let { instance = true, returns } = o;\r\n\r\n    let func = function (...args) {\r\n      let ret = code(...args);\r\n\r\n      if (returns === 'color') {\r\n        ret = Color.get(ret);\r\n      } else if (returns === 'function<color>') {\r\n        let f = ret;\r\n        ret = function (...args) {\r\n          let ret = f(...args);\r\n          return Color.get(ret);\r\n        };\r\n        // Copy any function metadata\r\n        Object.assign(ret, f);\r\n      } else if (returns === 'array<color>') {\r\n        ret = ret.map((c) => Color.get(c));\r\n      }\r\n\r\n      return ret;\r\n    };\r\n\r\n    if (!(name in Color)) {\r\n      Color[name] = func;\r\n    }\r\n\r\n    if (instance) {\r\n      Color.prototype[name] = function (...args) {\r\n        return func(this, ...args);\r\n      };\r\n    }\r\n  }\r\n\r\n  static defineFunctions(o) {\r\n    for (let name in o) {\r\n      Color.defineFunction(name, o[name], o[name]);\r\n    }\r\n  }\r\n\r\n  static extend(exports) {\r\n    if (exports.register) {\r\n      exports.register(Color);\r\n    } else if (exports.default) {\r\n      Color.defineFunction(exports.default.name, exports.default);\r\n    } else if (typeof exports === 'function') {\r\n      Color.defineFunction(exports);\r\n    } else {\r\n      // No register method, just add the module's functions\r\n      for (let name in exports) {\r\n        Color.defineFunction(name, exports[name]);\r\n      }\r\n    }\r\n  }\r\n}\r\nColor.defineFunctions({\r\n  get,\r\n  getAll,\r\n  set: set$1,\r\n  setAll,\r\n  to,\r\n  equals,\r\n  inGamut,\r\n  toGamut,\r\n  distance,\r\n  toString: serialize,\r\n});\r\n\r\nObject.assign(Color, {\r\n  util,\r\n  hooks,\r\n  WHITES,\r\n  Space: ColorSpace,\r\n  spaces: ColorSpace.registry,\r\n  parse,\r\n\r\n  // Global defaults one may want to configure\r\n  defaults,\r\n});\r\n\r\nfor (let key of Object.keys(spaces)) {\r\n  ColorSpace.register(spaces[key]);\r\n}\r\n\r\n/**\r\n * This plugin defines getters and setters for color[spaceId]\r\n * e.g. color.lch on *any* color gives us the lch coords\r\n */\r\n\r\n// Add space accessors to existing color spaces\r\nfor (let id in ColorSpace.registry) {\r\n  addSpaceAccessors(id, ColorSpace.registry[id]);\r\n}\r\n\r\n// Add space accessors to color spaces not yet created\r\nhooks.add('colorspace-init-end', addSpaceAccessors);\r\n\r\nfunction addSpaceAccessors(id, space) {\r\n  // Coordinates can be looked up by both id and name\r\n  Object.keys(space.coords);\r\n  Object.values(space.coords).map((c) => c.name);\r\n\r\n  let propId = id.replace(/-/g, '_');\r\n\r\n  Object.defineProperty(Color.prototype, propId, {\r\n    // Convert coords to coords in another colorspace and return them\r\n    // Source colorspace: this.spaceId\r\n    // Target colorspace: id\r\n    get() {\r\n      let ret = this.getAll(id);\r\n\r\n      if (typeof Proxy === 'undefined') {\r\n        // If proxies are not supported, just return a static array\r\n        return ret;\r\n      }\r\n\r\n      // Enable color.spaceId.coordName syntax\r\n      return new Proxy(ret, {\r\n        has: (obj, property) => {\r\n          try {\r\n            ColorSpace.resolveCoord([space, property]);\r\n            return true;\r\n          } catch (e) {}\r\n\r\n          return Reflect.has(obj, property);\r\n        },\r\n        get: (obj, property, receiver) => {\r\n          if (property && typeof property !== 'symbol' && !(property in obj)) {\r\n            let { index } = ColorSpace.resolveCoord([space, property]);\r\n\r\n            if (index >= 0) {\r\n              return obj[index];\r\n            }\r\n          }\r\n\r\n          return Reflect.get(obj, property, receiver);\r\n        },\r\n        set: (obj, property, value, receiver) => {\r\n          if ((property && typeof property !== 'symbol' && !(property in obj)) || property >= 0) {\r\n            let { index } = ColorSpace.resolveCoord([space, property]);\r\n\r\n            if (index >= 0) {\r\n              obj[index] = value;\r\n\r\n              // Update color.coords\r\n              this.setAll(id, obj);\r\n\r\n              return true;\r\n            }\r\n          }\r\n\r\n          return Reflect.set(obj, property, value, receiver);\r\n        },\r\n      });\r\n    },\r\n    // Convert coords in another colorspace to internal coords and set them\r\n    // Target colorspace: this.spaceId\r\n    // Source colorspace: id\r\n    set(coords) {\r\n      this.setAll(id, coords);\r\n    },\r\n    configurable: true,\r\n    enumerable: true,\r\n  });\r\n}\r\n\r\n// Import all modules of Color.js\r\n\r\nColor.extend(deltaEMethods);\r\nColor.extend(deltaE$1);\r\nColor.extend(variations);\r\nColor.extend(contrast);\r\nColor.extend(chromaticity);\r\nColor.extend(luminance);\r\nColor.extend(interpolation);\r\nColor.extend(contrastMethods);\r\n\r\nexport { Color as default };\r\n","import { showGenericForm } from '../../applications/multiConfig.js';\r\nimport { applyRandomization } from '../randomizer/randomizerUtils.js';\r\nimport { ColorSlider } from '../randomizer/slider.js';\r\nimport { MODULE_ID, SUPPORTED_PLACEABLES } from '../utils.js';\r\nimport { Preset } from './preset.js';\r\n\r\n/**\r\n * Tracking of folder open/close state\r\n */\r\nexport class FolderState {\r\n  static expanded(uuid) {\r\n    return game.folders._expanded[uuid];\r\n  }\r\n\r\n  static setExpanded(uuid, state) {\r\n    game.folders._expanded[uuid] = state;\r\n  }\r\n}\r\n\r\n/**\r\n * Convert provided placeable into an object usable as Preset data\r\n * @param {Placeable} placeable\r\n * @returns\r\n */\r\nexport function placeableToData(placeable) {\r\n  const data = placeable.document.toCompendium();\r\n\r\n  // Check if `Token Attacher` has attached elements to this token\r\n  if (\r\n    placeable.document.documentName === 'Token' &&\r\n    game.modules.get('token-attacher')?.active &&\r\n    tokenAttacher?.generatePrototypeAttached\r\n  ) {\r\n    const attached = data.flags?.['token-attacher']?.attached || {};\r\n    if (!foundry.utils.isEmpty(attached)) {\r\n      const prototypeAttached = tokenAttacher.generatePrototypeAttached(data, attached);\r\n      setProperty(data, 'flags.token-attacher.attached', null);\r\n      setProperty(data, 'flags.token-attacher.prototypeAttached', prototypeAttached);\r\n      setProperty(data, 'flags.token-attacher.grid', {\r\n        size: canvas.grid.size,\r\n        w: canvas.grid.w,\r\n        h: canvas.grid.h,\r\n      });\r\n    }\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Scales placeable data relative to current canvas size and the provided gridSize\r\n * @param {Object} data         placeable data\r\n * @param {String} documentName placeable document name\r\n * @param {Number} gridSize     grid size to scale relative to\r\n * @returns\r\n */\r\nexport function scaleDataToGrid(data, documentName, gridSize) {\r\n  if (!SUPPORTED_PLACEABLES.includes(documentName)) return;\r\n  if (!gridSize) gridSize = 100;\r\n\r\n  const ratio = canvas.grid.size / gridSize;\r\n  for (const d of data) {\r\n    if ('x' in d) d.x *= ratio;\r\n    if ('y' in d) d.y *= ratio;\r\n    switch (documentName) {\r\n      case 'Tile':\r\n        if ('width' in d) d.width *= ratio;\r\n        if ('height' in d) d.height *= ratio;\r\n        break;\r\n      case 'Drawing':\r\n        if (d.shape?.width != null) d.shape.width *= ratio;\r\n        if (d.shape?.height != null) d.shape.height *= ratio;\r\n        break;\r\n      case 'Wall':\r\n        if ('c' in d) {\r\n          for (let i = 0; i < d.c.length; i++) {\r\n            d.c[i] *= ratio;\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Opens a GenericMassEdit form to modify specific fields within the provided data\r\n * @param {Object} data            data to be modified\r\n * @param {Array[String]} toModify fields within data to be modified\r\n * @returns modified data or null if form was canceled\r\n */\r\nexport async function modifySpawnData(data, toModify) {\r\n  const fields = {};\r\n  const flatData = foundry.utils.flattenObject(data);\r\n  for (const field of toModify) {\r\n    if (field in flatData) {\r\n      if (flatData[field] == null) fields[field] = '';\r\n      else fields[field] = flatData[field];\r\n    }\r\n  }\r\n\r\n  if (!foundry.utils.isEmpty(fields)) {\r\n    await new Promise((resolve) => {\r\n      showGenericForm(fields, 'PresetFieldModify', {\r\n        callback: (modified) => {\r\n          if (foundry.utils.isEmpty(modified)) {\r\n            if (modified == null) data = null;\r\n            resolve();\r\n            return;\r\n          }\r\n\r\n          for (const [k, v] of Object.entries(modified)) {\r\n            flatData[k] = v;\r\n          }\r\n\r\n          const tmpData = foundry.utils.expandObject(flatData);\r\n\r\n          const reorganizedData = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            reorganizedData.push(tmpData[i]);\r\n          }\r\n          data = reorganizedData;\r\n          resolve();\r\n        },\r\n        simplified: true,\r\n        noTabs: true,\r\n      });\r\n    });\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * A Preset may not contain enough information within its data to spawn a placeable. This method populates\r\n * the data with some defaults so that a minimum viable placeable can be spawned.\r\n * @param {Preset} preset\r\n * @param {Object} presetData\r\n * @returns\r\n */\r\nexport function mergePresetDataToDefaultDoc(preset, presetData) {\r\n  let data;\r\n\r\n  // Set default values if needed\r\n  switch (preset.documentName) {\r\n    case 'Token':\r\n      data = { name: preset.name };\r\n      break;\r\n    case 'Tile':\r\n      data = { width: canvas.grid.w, height: canvas.grid.h };\r\n      break;\r\n    case 'AmbientSound':\r\n      data = { radius: 20 };\r\n      break;\r\n    case 'Drawing':\r\n      data = {\r\n        shape: {\r\n          width: canvas.grid.w * 2,\r\n          height: canvas.grid.h * 2,\r\n          strokeWidth: 8,\r\n          strokeAlpha: 1.0,\r\n        },\r\n      };\r\n      break;\r\n    case 'MeasuredTemplate':\r\n      data = { distance: 10 };\r\n      break;\r\n    case 'AmbientLight':\r\n      if (presetData.config?.dim == null && presetData.config?.bright == null) {\r\n        data = { config: { dim: 20, bright: 20 } };\r\n        break;\r\n      }\r\n    case 'Scene':\r\n      data = { name: preset.name };\r\n      break;\r\n    default:\r\n      data = {};\r\n  }\r\n\r\n  return foundry.utils.mergeObject(data, presetData);\r\n}\r\n\r\nexport async function randomizeChildrenFolderColors(uuid, tree, callback) {\r\n  const folder = tree.allFolders.get(uuid);\r\n\r\n  const children = folder.children;\r\n  if (!children.length) return;\r\n\r\n  const colorTemp = await renderTemplate(`modules/${MODULE_ID}/templates/randomizer/color.html`, {\r\n    method: 'interpolateReverse',\r\n    space: 'srgb',\r\n    hue: 'longer',\r\n  });\r\n\r\n  let colorSlider;\r\n\r\n  const applyColors = async function (method, space, hue) {\r\n    const updates = children.map((c) => {\r\n      return {\r\n        color: '#000000',\r\n      };\r\n    });\r\n    const randObj = { color: { type: 'color', method, space, hue, colors: colorSlider.getColors() } };\r\n\r\n    await applyRandomization(updates, children, randObj);\r\n\r\n    for (let i = 0; i < children.length; i++) {\r\n      await children[i].update(updates[i]);\r\n    }\r\n\r\n    callback?.();\r\n  };\r\n\r\n  let dialog = new Dialog({\r\n    title: `Pick Range`,\r\n    content: `<form>${colorTemp}</form>`,\r\n    buttons: {\r\n      save: {\r\n        label: 'Apply',\r\n        callback: async (html) => {\r\n          applyColors(\r\n            html.find('[name=\"method\"]').val(),\r\n            html.find('[name=\"space\"]').val(),\r\n            html.find('[name=\"hue\"]').val()\r\n          );\r\n        },\r\n      },\r\n    },\r\n    render: (html) => {\r\n      colorSlider = new ColorSlider(html, [\r\n        { hex: '#663600', offset: 0 },\r\n        { hex: '#944f00', offset: 100 },\r\n      ]);\r\n      setTimeout(() => dialog.setPosition({ height: 'auto' }), 100);\r\n    },\r\n  });\r\n\r\n  dialog.render(true);\r\n}\r\n","import Color from '../color/color.js';\r\n\r\nexport class ColorSlider {\r\n  constructor(html, colors) {\r\n    this.slider = html.find('.slide');\r\n    this.colors = colors;\r\n    this.min = 0;\r\n    this.max = 100;\r\n    this._init();\r\n    this._activateListeners(html);\r\n  }\r\n\r\n  _activateListeners(html) {\r\n    this.hue = html.find('[name=\"hue\"]');\r\n    this.space = html.find('[name=\"space\"]');\r\n    const method = html.find('[name=\"method\"]');\r\n\r\n    this.hue.on('input', this.update.bind(this));\r\n    this.space.on('input', this.update.bind(this));\r\n    method.on('input', this.update.bind(this));\r\n  }\r\n\r\n  _init() {\r\n    import('../jquery-ui/jquery-ui.js').then((imp) => {\r\n      this._createSlider();\r\n      // // Respond better to DF Architect Color Picker\r\n      // html.on('focusout', '.df-arch-colourpicker', (e) => {\r\n      //   clearTimeout(inputTimer);\r\n      //   inputTimer = setTimeout(() => this.update(), 500);\r\n      // });\r\n    });\r\n  }\r\n\r\n  update() {\r\n    clearTimeout(this.inputTimer);\r\n    this.inputTimer = setTimeout(() => this._updateSlider(), 500);\r\n  }\r\n\r\n  _updateSlider(event, ui) {\r\n    if (ui) this.colors[ui.handleIndex].offset = ui.value;\r\n    this.slider.find('.slide-back').remove();\r\n\r\n    let lVal = this.max + 1;\r\n    let lHandle;\r\n    let lIndex;\r\n\r\n    let handles = this.slider.find('span').toArray();\r\n\r\n    for (let i = 0; i < handles.length; i++) {\r\n      let sliderVal = this.slider.slider('values', i);\r\n      this.colors[i].offset = sliderVal;\r\n\r\n      if (sliderVal < lVal) {\r\n        lHandle = $(this);\r\n        lVal = sliderVal;\r\n        lIndex = i;\r\n      }\r\n\r\n      $(handles[i]).css('background', this.colors[i].hex);\r\n\r\n      if (sliderVal !== this.max) {\r\n        let [stripColor, stripColorVal] = this._getNextColor(this.colors[i].hex, sliderVal);\r\n        this._appendStrip(\r\n          this._genGradient(stripColor, this.colors[i].hex),\r\n          `${stripColorVal - sliderVal}%`,\r\n          `${sliderVal}%`\r\n        );\r\n      }\r\n    }\r\n\r\n    if (lVal !== this.min) {\r\n      this._appendStrip(\r\n        this._genGradient(this.colors[lIndex].hex, this.colors[lIndex].hex),\r\n        `${this.slider.slider('values', lIndex)}%`,\r\n        '0%'\r\n      );\r\n    }\r\n  }\r\n\r\n  _genGradient(color1, color2) {\r\n    const space = this.space?.val() || 'lch';\r\n\r\n    if (space === 'discrete') {\r\n      return 'rgba(0, 0, 0, 0)';\r\n    }\r\n\r\n    const hue = this.hue?.val() || 'shorter';\r\n    let r = Color.range(color2, color1, { space, hue });\r\n    let stops = Color.steps(r, { steps: 5, maxDeltaE: 3 });\r\n    return `linear-gradient(to right, ${stops.map((c) => c.display()).join(', ')})`;\r\n  }\r\n\r\n  _appendStrip(color, width, offset) {\r\n    this.slider.append(\r\n      $('<div></div>').addClass('slide-back').width(width).css('background', color).css('left', offset)\r\n    );\r\n  }\r\n\r\n  _getNextColor(currColor, val) {\r\n    let nextColor = currColor;\r\n    let nextColorVal = this.max + 1;\r\n    for (let i = 0; i < this.colors.length; i++) {\r\n      let cVal = this.slider.slider('values', i);\r\n      if (cVal > val && cVal < nextColorVal) {\r\n        nextColor = this.colors[i].hex;\r\n        nextColorVal = cVal;\r\n      }\r\n    }\r\n    return [nextColor, Math.min(nextColorVal, this.max)];\r\n  }\r\n\r\n  _onCreateSlider() {\r\n    let handles = this.slider.find('span').toArray();\r\n    for (let i = 0; i < handles.length; i++) {\r\n      let cPicker = $(\r\n        `<input type=\"color\" value=\"${this.colors[i].hex}\" style='opacity:0;width:100%;height:100%;position:absolute;pointer-events:none;'>`\r\n      );\r\n      const handle = $(handles[i]);\r\n      handle.attr('handleindex', i);\r\n      handle.append(cPicker);\r\n      handle.on('click', (event) => {\r\n        if (event.detail === 2) {\r\n          event.preventDefault();\r\n          cPicker.trigger('click');\r\n        }\r\n      });\r\n      cPicker.on('input', (event) => {\r\n        this.colors[i].hex = cPicker.val();\r\n        this.update();\r\n      });\r\n      handle.on('contextmenu', (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if (this.colors.length > 2) {\r\n          let index = event.target.getAttribute('handleindex');\r\n          if (index) {\r\n            this.colors.splice(index, 1);\r\n            this._createSlider();\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    this.slider.on('contextmenu', (event) => {\r\n      let offset = this.slider.offset();\r\n      var x = event.clientX - offset.left; //x position within the element.\r\n      let percentOffset = Math.round((x / this.slider.width()) * 100);\r\n\r\n      if (!this._percentExists(percentOffset)) {\r\n        let [col, _] = this._getNextColor(null, percentOffset);\r\n        if (!col) col = '#ff0000';\r\n        this.colors.push({ hex: col, offset: percentOffset });\r\n        this._createSlider();\r\n      }\r\n    });\r\n\r\n    this.update();\r\n  }\r\n\r\n  _percentExists(percent) {\r\n    return this.colors.some((c) => c.offset === percent);\r\n  }\r\n\r\n  getColors() {\r\n    return foundry.utils.deepClone(this.colors).sort((a, b) => a.offset - b.offset);\r\n  }\r\n\r\n  _createSlider = () => {\r\n    if (this.slider.slider('instance')) this.slider.slider('destroy');\r\n    this.slider.slider({\r\n      change: (event, ui) => this.update(event, ui),\r\n      create: () => this._onCreateSlider(),\r\n      min: this.min,\r\n      max: this.max,\r\n      values: this.colors.map((c) => c.offset),\r\n    });\r\n  };\r\n}\r\n","import { constructNav } from '../applications/generic/navGenerator.js';\r\nimport { MODULE_ID, getDocumentName, localize } from './utils.js';\r\n\r\nexport function injectVisibility(app) {\r\n  const docName = getDocumentName(app.meObjects[0]);\r\n\r\n  // Only the following docs necessitate hidden field\r\n  if (!['AmbientLight', 'AmbientSound'].includes(docName)) return;\r\n\r\n  const form = $(app.form);\r\n\r\n  const isInjected = form.find('input[name=\"hidden\"]');\r\n  if (isInjected.length) return;\r\n\r\n  const hidden = app.object.hidden;\r\n  const newHtml = `\r\n  <div class=\"form-group\">\r\n    <label>${localize(`Hidden`, false)}</label>\r\n    <div class=\"form-fields\">\r\n        <input type=\"checkbox\" name=\"hidden\" ${hidden ? 'checked' : ''}>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\n  const tabs = form.find('div.tab');\r\n  if (tabs.length) {\r\n    tabs.first().append(newHtml);\r\n  } else {\r\n    form.find('.form-group').last().after(newHtml);\r\n  }\r\n\r\n  app.setPosition({ height: 'auto' });\r\n}\r\n\r\nexport async function injectFlagTab(app) {\r\n  // Disable for now, until duplicate value fix is found\r\n  return;\r\n  if (!game.settings.get(MODULE_ID, 'enableFlagsTab')) return;\r\n  if (app.constructor.name === 'MassEditGenericForm') return;\r\n  const doc = app.meObjects[0];\r\n  let flags = foundry.utils.flattenObject((doc.document ?? doc).flags ?? {});\r\n\r\n  const html = $(app.form);\r\n  for (const [k, v] of Object.entries(flags)) {\r\n    if (html.find(`[name=\"flags.${k}\"]`).length) {\r\n      delete flags[k];\r\n    }\r\n  }\r\n\r\n  if (foundry.utils.isEmpty(flags)) return;\r\n\r\n  flags = expandObject(flags);\r\n\r\n  // Need to wait for other modules to perform their processing first\r\n  // Mainly MATT Active Tiles\r\n  if (getDocumentName(doc) === 'Wall') await new Promise((resolve) => setTimeout(resolve, 150));\r\n\r\n  const [flagNav, flagTabs] = constructNav({ flags: flags });\r\n  delete flagNav.items;\r\n  app.options.tabs = (app.options.tabs ?? []).concat(flagTabs);\r\n  if (app.tabs) app.tabs = app._createTabHandlers();\r\n  else app._tabs = app._createTabHandlers();\r\n\r\n  if (!flagNav.tabs.length) return;\r\n  flagNav.tabs[0].nav?.items?.forEach((item) => {\r\n    const mod = game.modules.get(item.dataTab.replace('flags.', ''));\r\n    if (mod) item.label = mod.title;\r\n  });\r\n\r\n  await getTemplate(`modules/${MODULE_ID}/templates/generic/form-group.html`);\r\n  await getTemplate(`modules/${MODULE_ID}/templates/generic/navHeaderPartial.html`);\r\n  let htmlNav = await renderTemplate(`modules/${MODULE_ID}/templates/generic/navHeaderPartial.html`, flagNav);\r\n\r\n  htmlNav = $(htmlNav);\r\n\r\n  // Remove pins or replace them with trash cans depending on whether this is a Mass Edit or Search form\r\n  if (app.options.massSelect) {\r\n    htmlNav.find('.me-pinned').remove();\r\n  } else {\r\n    htmlNav.find('.me-pinned').replaceWith(`<a class=\"me-delete-flag\" title=\"DELETE\"><i class=\"fas fa-trash\"></i></a>`);\r\n    html.on('click', '.me-delete-flag', (event) => {\r\n      const delFlag = $(event.target).closest('a');\r\n      delFlag.toggleClass('active');\r\n      const toDelete = delFlag.hasClass('active');\r\n      const namedElements = delFlag.closest('.form-group').find('[name]');\r\n      namedElements.each(function () {\r\n        const name = this.name;\r\n        if (toDelete && !name.includes('-=')) {\r\n          let nArr = name.split('.');\r\n          nArr[nArr.length - 1] = '-=' + nArr[nArr.length - 1];\r\n          this.name = nArr.join('.');\r\n        } else if (!toDelete) {\r\n          this.name = name.replace('-=', '');\r\n        }\r\n      });\r\n      namedElements.first().trigger('change');\r\n    });\r\n  }\r\n\r\n  // Insert Flags tab into\r\n  const sheetMainNav = html.find('.sheet-tabs').first();\r\n  if (!sheetMainNav.length) return;\r\n  sheetMainNav.append('<a class=\"item\" data-tab=\"flags\"><i class=\"fa-solid fa-flag\"></i> Flags</a>');\r\n\r\n  if (!sheetMainNav.attr('data-group')) {\r\n    htmlNav.removeAttr('data-group');\r\n  }\r\n  html.find('footer').last().before(htmlNav);\r\n\r\n  // For special jsonArray fields provide the ability to expand them via a dialog\r\n  html.find('.tva-jsonArray').on('dblclick', (event) => {\r\n    let content = `<textarea style=\"width:100%; height: 100%;\">${event.target.value}</textarea>`;\r\n    new Dialog(\r\n      {\r\n        title: `Edit`,\r\n        content: content,\r\n        buttons: {},\r\n        render: (html) => {\r\n          html.find('textarea').on('input', (ev) => {\r\n            $(event.target).val(ev.target.value).trigger('input');\r\n          });\r\n          html.closest('section').find('.dialog-buttons').remove();\r\n        },\r\n      },\r\n      { resizable: true, height: 300 }\r\n    ).render(true);\r\n  });\r\n\r\n  app._activateCoreListeners(html);\r\n}\r\n","import { MODULE_ID, localize } from '../../scripts/utils.js';\r\n\r\nexport function constructNav(allData, documentName, customControls, pins = true) {\r\n  const nav = {\r\n    dataGroup: 'main',\r\n    items: [],\r\n    tabs: [],\r\n  };\r\n  const tabSelectors = [{ navSelector: '.tabs[data-group=\"main\"]', contentSelector: 'form', initial: 'me-pinned' }];\r\n\r\n  // Limit the form to just the keys marked as editable\r\n  let editableKeys;\r\n  // if (documentName === 'Actor') {\r\n  //   editableKeys = ['name', 'img', 'system', 'data', 'folder', 'flags'];\r\n  // }\r\n\r\n  let object = {};\r\n  if (!editableKeys) object = allData;\r\n  else {\r\n    for (const k of editableKeys) {\r\n      if (k in allData) {\r\n        object[k] = allData[k];\r\n      }\r\n    }\r\n  }\r\n\r\n  const pinned = documentName ? game.settings.get(MODULE_ID, 'pinnedFields')[documentName] || {} : {};\r\n\r\n  _constructControls(nav, object, tabSelectors, '', pinned, customControls, pins);\r\n\r\n  const pinned_groups = [];\r\n  const flatObject = foundry.utils.flattenObject(object);\r\n  for (const [k, v] of Object.entries(pinned)) {\r\n    const value = k in flatObject ? flatObject[k] : v.value;\r\n\r\n    let control = genControl(foundry.utils.getType(value), v.label, value, k, {}, true, customControls, pins);\r\n    control.pinned = true;\r\n    pinned_groups.push(control);\r\n  }\r\n  if (pinned_groups.length) {\r\n    // No tabs constructed means this is not a nested object, however since we have pinned fields\r\n    // we need to separate main object fields from the pinned ones\r\n    if (!nav.items.length) {\r\n      nav.items.push({ dataTab: 'main-me-main', label: 'Main' });\r\n      nav.tabs.push({ dataTab: 'main-me-main', groups: nav.groups });\r\n      delete nav.groups;\r\n    }\r\n\r\n    nav.items.unshift({\r\n      dataTab: 'me-pinned',\r\n      dataTab: 'me-pinned',\r\n      label: localize('generic-form.pinned'),\r\n    });\r\n    nav.tabs.unshift({ dataTab: 'me-pinned', groups: pinned_groups });\r\n  }\r\n\r\n  return [nav, tabSelectors];\r\n}\r\n\r\nfunction _constructControls(nav, data, tabSelectors, name, pinned, customControls, pins) {\r\n  const groups = [];\r\n  let containsNav = false;\r\n  for (const [k, v] of Object.entries(data)) {\r\n    const name2 = name ? name + '.' + k : k;\r\n    if (v !== null) {\r\n      let t = foundry.utils.getType(v);\r\n      let control;\r\n      if (t === 'Object') {\r\n        if (_hasNonNullKeys(v)) {\r\n          nav.items.push({ dataTab: name2, label: _genLabel(k) });\r\n          const newNav = { dataGroup: name2, items: [], tabs: [] };\r\n          nav.tabs.push({ dataTab: name2, nav: newNav });\r\n          tabSelectors.push({\r\n            navSelector: `.tabs[data-group=\"${name2}\"]`,\r\n            contentSelector: `.tab[data-tab=\"${name2}\"]`,\r\n            initial: k + '-me-main',\r\n          });\r\n          _constructControls(newNav, v, tabSelectors, name2, pinned, customControls, pins);\r\n          containsNav = true;\r\n        }\r\n      } else {\r\n        control = genControl(t, _genLabel(k), v, name2, pinned, false, customControls, pins);\r\n      }\r\n      if (control) {\r\n        groups.push(control);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (groups.length) {\r\n    if (containsNav) {\r\n      nav.items.unshift({\r\n        dataTab: nav.dataGroup + '-me-main',\r\n        label: 'Main',\r\n      });\r\n      nav.tabs.unshift({\r\n        dataTab: nav.dataGroup + '-me-main',\r\n        groups,\r\n      });\r\n    } else {\r\n      nav.groups = groups;\r\n    }\r\n  }\r\n}\r\n\r\nfunction _hasNonNullKeys(obj) {\r\n  if (foundry.utils.isEmpty(obj)) return false;\r\n  for (const [k, v] of Object.entries(obj)) {\r\n    if (foundry.utils.getType(v) === 'Object') {\r\n      if (_hasNonNullKeys(v)) return true;\r\n    } else if (v != null) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction _genLabel(key) {\r\n  if (key.length <= 3) return key.toUpperCase();\r\n  return key.charAt(0).toUpperCase() + key.slice(1);\r\n}\r\n\r\nconst IMAGE_FIELDS = ['img', 'image', 'src', 'texture'];\r\nconst COLOR_FIELDS = ['tint'];\r\n\r\nexport function isColorField(name) {\r\n  name = name.split('.').pop();\r\n  return COLOR_FIELDS.includes(name) || name.toLowerCase().includes('color');\r\n}\r\n\r\nfunction genControl(type, label, value, name, pinned, editableLabel = false, customControls = {}, pins) {\r\n  const allowedArrayElTypes = ['number', 'string'];\r\n\r\n  let control = { label: label, value, name, editableLabel, pins };\r\n  if (getProperty(customControls, name)) {\r\n    control = foundry.utils.mergeObject(control, getProperty(customControls, name));\r\n  } else if (type === 'number') {\r\n    control.number = true;\r\n    const varName = name.split('.').pop();\r\n    if (isColorField(varName)) {\r\n      control.colorPickerNumber = true;\r\n      try {\r\n        control.colorValue = new Color(value).toString();\r\n      } catch (e) {}\r\n    }\r\n  } else if (type === 'string') {\r\n    control.text = true;\r\n    const varName = name.split('.').pop();\r\n    if (\r\n      IMAGE_FIELDS.includes(varName) ||\r\n      varName.toLowerCase().includes('image') ||\r\n      varName.toLowerCase().includes('path')\r\n    )\r\n      control.filePicker = true;\r\n    else if (isColorField(varName)) control.colorPicker = true;\r\n  } else if (type === 'boolean') {\r\n    control.boolean = true;\r\n  } else if (type === 'Array' && value.every((el) => allowedArrayElTypes.includes(foundry.utils.getType(el)))) {\r\n    control.value = value.join(', ');\r\n    control.array = true;\r\n  } else if (type === 'Array') {\r\n    control.jsonArray = true;\r\n    control.value = JSON.stringify(value, null, 2);\r\n  } else {\r\n    control.disabled = true;\r\n    control.text = true;\r\n    control.editableLabel = false;\r\n  }\r\n  if (control && name in pinned) {\r\n    control.pinned = true;\r\n    control.disabled = true;\r\n    control.name = null;\r\n  }\r\n  return control;\r\n}\r\n","import { SPECIES_GENERATORS } from '../generator/fantasticSpeciesGenerator.js';\r\nimport { GROUP_GENERATORS } from '../generator/groupNamesGenerator.js';\r\nimport { NAME_GENERATOR } from '../generator/nameGenerator.js';\r\nimport { TAVERN_GENERATOR } from '../generator/tavernGenerator.js';\r\nimport { Picker } from '../picker.js';\r\nimport { MODULE_ID, isImage, isVideo, recursiveTraverse } from '../utils.js';\r\nimport { deselectField, nearestStep, selectField } from './randomizerUtils.js';\r\nimport { ColorSlider } from './slider.js';\r\n\r\nexport const IS_PRIVATE = true;\r\n\r\nexport default class RandomizerForm extends FormApplication {\r\n  constructor(title, control, configApp, options) {\r\n    let height = undefined;\r\n    let width = 410;\r\n\r\n    if (options.textForm) {\r\n      width = 465;\r\n      // height = 380;\r\n    } else if (options.selectForm) {\r\n      height = 210;\r\n    } else if (options.imageForm) {\r\n      width = 455;\r\n    } else if (options.colorForm) {\r\n      height = 340;\r\n      width = 650;\r\n    }\r\n\r\n    super(\r\n      {},\r\n      {\r\n        title,\r\n        width,\r\n        height,\r\n      }\r\n    );\r\n\r\n    this.configuration = options;\r\n    this.control = control;\r\n    this.configApp = configApp;\r\n    this.fieldName = control.attr('name');\r\n\r\n    if (configApp.randomizeFields && configApp.randomizeFields[this.fieldName]) {\r\n      if (options.rangeForm) {\r\n        let ctrl = foundry.utils.deepClone(configApp.randomizeFields[this.fieldName]);\r\n        ctrl.minVal = ctrl.min;\r\n        ctrl.maxVal = ctrl.max;\r\n        delete ctrl.min;\r\n        delete ctrl.max;\r\n        foundry.utils.mergeObject(this.configuration, ctrl);\r\n      } else if (options.colorForm) {\r\n        let ctrl = foundry.utils.deepClone(configApp.randomizeFields[this.fieldName]);\r\n        if (ctrl.color1) {\r\n          ctrl.colors = [\r\n            { hex: ctrl.color1, offset: 0 },\r\n            { hex: ctrl.color2, offset: 100 },\r\n          ];\r\n          delete ctrl.color1;\r\n          delete ctrl.color2;\r\n        }\r\n        foundry.utils.mergeObject(this.configuration, ctrl);\r\n      } else {\r\n        foundry.utils.mergeObject(this.configuration, configApp.randomizeFields[this.fieldName]);\r\n      }\r\n      this.configuration.existing = true;\r\n    }\r\n  }\r\n\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      id: 'mass-edit-randomizer-form',\r\n      classes: ['sheet'],\r\n      template: `modules/${MODULE_ID}/templates/randomizer/inputForm.html`,\r\n      resizable: true,\r\n      minimizable: false,\r\n    });\r\n  }\r\n\r\n  get id() {\r\n    return `mass-edit-randomizer-${this.fieldName}`;\r\n  }\r\n\r\n  async getData(options) {\r\n    const data = super.getData(options);\r\n    foundry.utils.mergeObject(data, this.configuration);\r\n\r\n    // Cache partials\r\n    await getTemplate(`modules/${MODULE_ID}/templates/randomizer/color.html`, 'me-color');\r\n\r\n    if (data.step != null) {\r\n      if (data.step === 'any' || data.step === '') {\r\n        data.step = 0.1;\r\n      }\r\n    }\r\n    data.tokenVariantsActive = game.modules.get('token-variants')?.active;\r\n\r\n    data.fieldName = this.fieldName;\r\n    data.title = this.title;\r\n    data.isTile = 'Tile' === this.configApp.docName;\r\n\r\n    // Assign default values for some specific fields\r\n    if (this.configuration.numberForm && !this.configuration.existing) {\r\n      if (\r\n        [\r\n          'rotation',\r\n          'sightAngle',\r\n          'sight.angle',\r\n          'light.angle',\r\n          'config.angle',\r\n          'flags.advanced-drawing-tools.fillStyle.transform.rotation',\r\n        ].includes(this.fieldName)\r\n      ) {\r\n        data.min = 0;\r\n        data.max = 360;\r\n      } else if (\r\n        ['dimSight', 'brightSight', 'light.dim', 'light.bright', 'config.dim', 'config.bright'].includes(this.fieldName)\r\n      ) {\r\n        data.min = 0;\r\n      }\r\n    }\r\n    if (this.configuration.textForm) {\r\n      // Fix for generators in v10\r\n      if (!String.prototype.capitalize) {\r\n        String.prototype.capitalize = function () {\r\n          return this.charAt(0).toUpperCase() + this.slice(1);\r\n        };\r\n      }\r\n      data.generators = {};\r\n      const addGeneratorGroup = function (group, generators) {\r\n        data.generators[group] = Object.keys(generators).map((k) => {\r\n          return {\r\n            func: k,\r\n            label: k\r\n              .substring(3, k.length)\r\n              .replace(/([A-Z])/g, ' $1')\r\n              .trim(),\r\n          };\r\n        });\r\n      };\r\n\r\n      addGeneratorGroup('Fantasy', NAME_GENERATOR);\r\n      addGeneratorGroup('Species', SPECIES_GENERATORS);\r\n      addGeneratorGroup('Groups', GROUP_GENERATORS);\r\n      addGeneratorGroup('Taverns', TAVERN_GENERATOR);\r\n\r\n      if (this.configuration.strings) {\r\n        data.strings = this.configuration.strings.join('\\n');\r\n      }\r\n      data.duplicates = this.configuration.method === 'random';\r\n      data.find = this.configuration.find ?? this.configuration.current;\r\n      data.replace = this.configuration.replace ?? this.configuration.current;\r\n    }\r\n\r\n    if (this.configuration.imageForm) {\r\n      if (this.configuration.images) {\r\n        data.images = this.configuration.images.join('\\n');\r\n      }\r\n      data.find = this.configuration.find ?? this.configuration.current;\r\n      data.replace = this.configuration.replace ?? this.configuration.current;\r\n      data.maintainAspect = this.configuration.maintainAspect;\r\n    }\r\n\r\n    if (this.configuration.rangeForm && !this.configuration.existing) {\r\n      data.minVal = this.configuration.current;\r\n      data.maxVal = this.configuration.current;\r\n    }\r\n    if (this.configuration.coordinateForm) {\r\n      data.minX = this.configuration.x;\r\n      data.maxX = this.configuration.x;\r\n      data.minY = this.configuration.y;\r\n      data.maxY = this.configuration.y;\r\n      data.stepY = this.configuration.stepY ?? this.configuration.step;\r\n      data.stepX = this.configuration.stepX ?? this.configuration.step;\r\n      if (this.configuration.boundingBox) {\r\n        let box = this.configuration.boundingBox;\r\n        data.minX = box.x;\r\n        data.maxX = box.x + box.width;\r\n        data.minY = box.y;\r\n        data.maxY = box.y + box.height;\r\n      }\r\n    }\r\n    if (this.configuration.selectForm) {\r\n      this.configuration.options.forEach((opt) => {\r\n        opt.selected =\r\n          !this.configuration.selection || this.configuration.selection.find((sel) => sel == opt.value) != null;\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @param {JQuery} html\r\n   */\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n\r\n    const docName = this.configApp.docName;\r\n    $(html)\r\n      .find('.folder-picker')\r\n      .click(() => {\r\n        new FilePicker({\r\n          type: 'folder',\r\n          callback: async (path, fp) => {\r\n            let files = [];\r\n            if ($(html).find('.subfolders').is(':checked')) {\r\n              files = await recursiveTraverse(path, fp.activeSource, fp.result.bucket);\r\n            } else if (fp.result?.files.length) {\r\n              files = fp.result.files;\r\n            }\r\n            const images_ta = $(html).find('.images');\r\n            images_ta.val(images_ta.val().trim() + '\\n' + files.filter((f) => isImage(f) || isVideo(f)).join('\\n'));\r\n          },\r\n        }).render(true);\r\n      });\r\n    html.find('.token-variants').click((ev) => {\r\n      if (game.modules.get('token-variants')?.active && docName) {\r\n        let type = docName;\r\n        if (type === 'Actor') type = 'Portrait';\r\n        else if (type === 'MeasuredTemplate') type = 'Tile';\r\n        game.modules.get('token-variants').api.showArtSelect('image', {\r\n          searchType: type,\r\n          multipleSelection: true,\r\n          callback: (results) => {\r\n            if (!Array.isArray(results)) results = [results];\r\n            const images_ta = $(html).find('.images');\r\n            images_ta.val(images_ta.val().trim() + '\\n' + results.filter((f) => isImage(f) || isVideo(f)).join('\\n'));\r\n          },\r\n        });\r\n      }\r\n    });\r\n    $(html)\r\n      .find('.generate')\r\n      .click(() => {\r\n        const generator = $(html).find('.generator').val();\r\n\r\n        for (const group of [NAME_GENERATOR, SPECIES_GENERATORS, GROUP_GENERATORS, TAVERN_GENERATOR]) {\r\n          if (generator in group) {\r\n            const names = [];\r\n            for (let i = 0; i < 20; i++) {\r\n              names.push(group[generator]());\r\n            }\r\n\r\n            $(html)\r\n              .find('.strings')\r\n              .val($(html).find('.strings').val() + '\\n' + names.join('\\n'));\r\n            break;\r\n          }\r\n        }\r\n      });\r\n    $(html).find('.pickBounds').click(this._onPickBounds.bind(this));\r\n    $(html).find('.snapToGrid').click(this._onSnapToGrid.bind(this));\r\n\r\n    // Color gradient preview\r\n    $(html).on('input', 'input[type=\"color\"]', (e) => {\r\n      $(e.target).siblings('.color').val(e.target.value).trigger('input');\r\n    });\r\n\r\n    if (this.configuration.textForm) {\r\n      $(html).on('input', '[name=\"method\"]', (e) => {\r\n        if (e.target.value === 'findAndReplace' || e.target.value === 'findAndReplaceRegex') {\r\n          html.find('.string-list').hide();\r\n          html.find('.find-and-replace').show();\r\n        } else {\r\n          html.find('.string-list').show();\r\n          html.find('.find-and-replace').hide();\r\n        }\r\n      });\r\n      $(html).find('[name=\"method\"]').trigger('input');\r\n    } else if (this.configuration.imageForm) {\r\n      $(html).on('input', '[name=\"method\"]', (e) => {\r\n        if (e.target.value === 'findAndReplace' || e.target.value === 'findAndReplaceRegex') {\r\n          html.find('.image-controls').hide();\r\n          html.find('.find-and-replace').show();\r\n        } else {\r\n          html.find('.image-controls').show();\r\n          html.find('.find-and-replace').hide();\r\n        }\r\n      });\r\n      $(html).find('[name=\"method\"]').trigger('input');\r\n    }\r\n\r\n    if (this.configuration.colorForm) {\r\n      this.colorSlider = new ColorSlider(html, this.configuration.colors);\r\n    }\r\n  }\r\n\r\n  async _onPickBounds(event) {\r\n    event.preventDefault();\r\n\r\n    if (!canvas.ready) {\r\n      return;\r\n    }\r\n\r\n    this.minimize();\r\n    this.configApp.minimize();\r\n\r\n    const t = this;\r\n\r\n    Picker.activate((position) => {\r\n      if (position == null) return;\r\n\r\n      const form = $(event.target).closest('form');\r\n\r\n      const minX = Math.min(position.start.x, position.end.x);\r\n      const maxX = Math.max(position.start.x, position.end.x);\r\n      const minY = Math.min(position.start.y, position.end.y);\r\n      const maxY = Math.max(position.start.y, position.end.y);\r\n\r\n      form.find('[name=\"minX\"]').val(Math.floor(minX));\r\n      form.find('[name=\"maxX\"]').val(Math.floor(maxX));\r\n      form.find('[name=\"minY\"]').val(Math.floor(minY));\r\n      form.find('[name=\"maxY\"]').val(Math.floor(maxY));\r\n      t.maximize();\r\n      t.configApp.maximize();\r\n\r\n      if (game.settings.get(MODULE_ID, 'autoSnap')) {\r\n        t._onSnapToGrid(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  _onSnapToGrid(event) {\r\n    const form = $(event.target).closest('form');\r\n    form.find('[name=\"minX\"], [name=\"maxX\"]').each(function () {\r\n      this.value = nearestStep(this.value, canvas.grid.w);\r\n    });\r\n    form.find('[name=\"minY\"], [name=\"maxY\"]').each(function () {\r\n      this.value = nearestStep(this.value, canvas.grid.h);\r\n    });\r\n    form.find('[name=\"stepX\"]').val(canvas.grid.w);\r\n    form.find('[name=\"stepY\"]').val(canvas.grid.h);\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event\r\n   * @param {Object} formData\r\n   */\r\n  async _updateObject(event, formData) {\r\n    const fieldName = this.control.attr('name');\r\n    if (event.submitter?.value === 'delete') {\r\n      delete this.configApp.randomizeFields[fieldName];\r\n      deselectField(this.control, this.configApp);\r\n      return;\r\n    }\r\n\r\n    if (this.configuration.selectForm) {\r\n      if (formData[fieldName]?.length) {\r\n        this.configApp.randomizeFields[fieldName] = {\r\n          type: 'select',\r\n          method: 'random',\r\n          selection: formData[fieldName].map((v) => (this.configuration.dtype === 'Number' ? Number(v) : v)),\r\n        };\r\n      }\r\n    } else if (this.configuration.numberForm || this.configuration.rangeForm) {\r\n      if (formData.min != null && formData.max != null) {\r\n        this.configApp.randomizeFields[fieldName] = {\r\n          type: 'number',\r\n          method: formData.method,\r\n          min: formData.min,\r\n          max: formData.max,\r\n          step: formData.step,\r\n        };\r\n      }\r\n    } else if (this.configuration.booleanForm) {\r\n      this.configApp.randomizeFields[fieldName] = {\r\n        type: 'boolean',\r\n        method: 'random',\r\n      };\r\n    } else if (this.configuration.colorForm) {\r\n      this.configApp.randomizeFields[fieldName] = {\r\n        type: 'color',\r\n        method: formData.method,\r\n        space: formData.space,\r\n        hue: formData.hue,\r\n        colors: this.colorSlider.getColors(),\r\n      };\r\n    } else if (this.configuration.imageForm) {\r\n      if (formData.method === 'findAndReplace' || formData.method === 'findAndReplaceRegex') {\r\n        this.configApp.randomizeFields[fieldName] = {\r\n          type: 'text',\r\n          method: formData.method,\r\n          find: formData.find,\r\n          replace: formData.replace,\r\n        };\r\n      } else if (formData.images) {\r\n        const images = formData.images\r\n          .replace(/\\r\\n/g, '\\n')\r\n          .split('\\n')\r\n          .map((img) => img.trim())\r\n          .filter((img) => isImage(img) || isVideo(img));\r\n        this.configApp.randomizeFields[fieldName] = {\r\n          type: 'image',\r\n          method: formData.method,\r\n          images: images,\r\n          maintainAspect: formData.maintainAspect,\r\n        };\r\n      }\r\n    } else if (this.configuration.textForm) {\r\n      if (formData.method === 'findAndReplace' || formData.method === 'findAndReplaceRegex') {\r\n        this.configApp.randomizeFields[fieldName] = {\r\n          type: 'text',\r\n          method: formData.method,\r\n          find: formData.find,\r\n          replace: formData.replace,\r\n        };\r\n      } else if (formData.strings) {\r\n        const strings = formData.strings\r\n          .replace(/\\r\\n/g, '\\n')\r\n          .split('\\n')\r\n          .map((s) => s.trim())\r\n          .filter((s) => s);\r\n        this.configApp.randomizeFields[fieldName] = {\r\n          type: 'text',\r\n          method: formData.duplicates ? 'random' : 'unique',\r\n          strings: strings,\r\n        };\r\n      }\r\n    } else if (this.configuration.coordinateForm) {\r\n      if (formData.minX != null && formData.maxX != null && formData.minY != null && formData.maxY != null) {\r\n        const minX = Math.min(formData.minX, formData.maxX);\r\n        const maxX = Math.max(formData.minX, formData.maxX);\r\n        const minY = Math.min(formData.minY, formData.maxY);\r\n        const maxY = Math.max(formData.minY, formData.maxY);\r\n        const boundingBox = { x: minX, y: minY, width: maxX - minX, height: maxY - minY };\r\n        this.configApp.randomizeFields['x'] = {\r\n          type: 'coordinate',\r\n          method: 'noOverlap',\r\n          boundingBox: boundingBox,\r\n          stepX: formData.stepX,\r\n          stepY: formData.stepY,\r\n        };\r\n        this.configApp.randomizeFields['y'] = {\r\n          type: 'coordinate',\r\n          method: 'noOverlap',\r\n          boundingBox: boundingBox,\r\n          stepX: formData.stepX,\r\n          stepY: formData.stepY,\r\n        };\r\n        selectField(this.configuration.controlY);\r\n      } else {\r\n        deselectField(this.configuration.controlY, this.configApp);\r\n      }\r\n    }\r\n\r\n    if (this.configApp.randomizeFields[fieldName]) {\r\n      selectField(this.control);\r\n    } else {\r\n      deselectField(this.control, this.configApp);\r\n    }\r\n\r\n    if (this.configApp.updateBrushFields) this.configApp.updateBrushFields();\r\n  }\r\n}\r\n\r\n// Show a dialog to select randomization settings for this form-group\r\nexport function showRandomizeDialog(formGroup, configApp) {\r\n  const singleInput = formGroup.find('[name]').length === 1;\r\n\r\n  // Special handling for coordinates\r\n  // Depending on the placeable both x and y coordinates can either be set\r\n  // under the same form or 2 separate forms. Either way we want to randomize\r\n  // them both at the same time\r\n  let ignoreXY = false;\r\n  if (formGroup.find('[name=\"x\"]').length || formGroup.find('[name=\"y\"]').length) {\r\n    ignoreXY = true;\r\n    const inputX = formGroup.closest('form').find('[name=\"x\"]');\r\n    const inputY = formGroup.closest('form').find('[name=\"y\"]');\r\n    processCoordinate(inputX, inputY, configApp, 'Coordinates (X, Y)');\r\n  }\r\n\r\n  // Display randomize dialogs for each named element\r\n  formGroup.find('[name]').each(function (_) {\r\n    if (ignoreXY && ['x', 'y'].includes(this.name)) {\r\n      // Do nothing\r\n    } else {\r\n      const type = this.nodeName;\r\n      let label = this.name;\r\n      if ($(this).prev('label').length) {\r\n        label = $(this).prev('label').html();\r\n      } else if (formGroup.find('label').length) {\r\n        label = formGroup.find('label').first().html();\r\n      }\r\n\r\n      if (type === 'SELECT') {\r\n        _showRandomSelectDialog($(this), configApp, label);\r\n      } else if (type === 'INPUT') {\r\n        _processInput($(this), configApp, label, singleInput);\r\n      } else {\r\n        console.log(label, type);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// Handle <input> tag\r\nfunction _processInput(input, configApp, label, singleInput) {\r\n  const type = input.attr('type');\r\n  if (type === 'number' || (type === 'text' && input.attr('data-dtype') === 'Number')) {\r\n    _showRandomNumberDialog(input, configApp, label);\r\n  } else if (type === 'range') {\r\n    _showRandomRangeDialog(input, configApp, label);\r\n  } else if (type === 'checkbox') {\r\n    _showRandomBoolDialog(input, configApp, label, singleInput);\r\n  } else if (type === 'text' && input.hasClass('color')) {\r\n    _showRandomColorDialog(input, configApp, label);\r\n  } else if (type === 'text' && input.hasClass('image')) {\r\n    _showRandomImageDialog(input, configApp, label);\r\n  } else if (type === 'text') {\r\n    _showRandomTextDialog(input, configApp, label);\r\n  } else if (input.attr('list')) {\r\n    _processList(input, configApp, label);\r\n  }\r\n}\r\n\r\nfunction processCoordinate(inputX, inputY, configApp, label) {\r\n  const x = inputX.val() ?? 0;\r\n  const y = inputY.val() ?? 0;\r\n  const step = 1;\r\n  new RandomizerForm(label, inputX, configApp, {\r\n    coordinateForm: true,\r\n    x: x,\r\n    y: y,\r\n    step: step,\r\n    controlY: inputY,\r\n  }).render(true);\r\n}\r\n\r\nfunction _showRandomTextDialog(input, configApp, label) {\r\n  new RandomizerForm(label, input, configApp, { textForm: true, current: input.val() }).render(true);\r\n}\r\n\r\nfunction _showRandomImageDialog(input, configApp, label) {\r\n  new RandomizerForm(label, input, configApp, { imageForm: true, current: input.val() }).render(true);\r\n}\r\n\r\nfunction _showRandomColorDialog(input, configApp, label) {\r\n  new RandomizerForm(label, input, configApp, {\r\n    colorForm: true,\r\n    colors: [\r\n      { hex: '#ff0000', offset: 0 },\r\n      { hex: '#ff0000', offset: 100 },\r\n    ],\r\n  }).render(true);\r\n}\r\n\r\n// Show dialog for checkboxes\r\nfunction _showRandomBoolDialog(input, configApp, label, singleInput) {\r\n  if (singleInput) {\r\n    const fieldName = input.attr('name');\r\n    if (configApp.randomizeFields[fieldName]) {\r\n      delete configApp.randomizeFields[fieldName];\r\n      deselectField(input, configApp);\r\n    } else {\r\n      configApp.randomizeFields[fieldName] = {\r\n        type: 'boolean',\r\n        method: 'random',\r\n      };\r\n      selectField(input);\r\n    }\r\n  } else {\r\n    new RandomizerForm(label, input, configApp, { booleanForm: true }).render(true);\r\n  }\r\n}\r\n\r\n// show dialog for number inputs\r\nfunction _showRandomNumberDialog(input, configApp, label) {\r\n  const current = input.val() ?? 0;\r\n  const step = input.attr('step') ?? 1;\r\n  const min = input.attr('min') ?? current;\r\n  const max = input.attr('max') ?? current;\r\n\r\n  new RandomizerForm(label, input, configApp, {\r\n    numberForm: true,\r\n    min: min,\r\n    max: max,\r\n    step: step,\r\n    dtype: 'Number',\r\n  }).render(true);\r\n}\r\n\r\n// show dialog for range inputs\r\nfunction _showRandomRangeDialog(input, configApp, label) {\r\n  const current = input.val() ?? 0;\r\n  const step = input.attr('step') ?? 1;\r\n  const min = input.attr('min') ?? 0;\r\n  const max = input.attr('max') ?? 10;\r\n\r\n  new RandomizerForm(label, input, configApp, {\r\n    rangeForm: true,\r\n    min: min,\r\n    max: max,\r\n    current: current,\r\n    step: step,\r\n    dtype: 'Number',\r\n  }).render(true);\r\n}\r\n\r\nfunction _showRandomSelectDialog(select, configApp, label) {\r\n  const options = [];\r\n  const dtype = select.attr('data-dtype') ?? 'String';\r\n  select.find('option').each(function (_) {\r\n    options.push({ value: this.value, label: this.innerHTML });\r\n  });\r\n\r\n  new RandomizerForm(label, select, configApp, {\r\n    selectForm: true,\r\n    options: options,\r\n    dtype: dtype,\r\n  }).render(true);\r\n}\r\n\r\nfunction _processList(input, configApp, label) {\r\n  const dataList = input.closest('.form-group').find(`#${input.attr('list')}`);\r\n  const options = [];\r\n  dataList.find('option').each(function (_) {\r\n    options.push({ value: this.value, label: this.value });\r\n  });\r\n\r\n  new RandomizerForm(label, input, configApp, {\r\n    selectForm: true,\r\n    options: options,\r\n    dtype: 'String',\r\n  }).render(true);\r\n}\r\n","/*global app*/\r\n\r\nfunction isVowel(c) {\r\n  return c === 'a' || c === 'e' || c === 'i' || c === 'o' || c === 'u';\r\n}\r\n\r\nconst names = {\r\n  vileAndCrude: {\r\n    small: [\r\n      'ach',\r\n      'adz',\r\n      'ak',\r\n      'ark',\r\n      'az',\r\n      'balg',\r\n      'bilg',\r\n      'blid',\r\n      'blig',\r\n      'blok',\r\n      'blot',\r\n      'bolg',\r\n      'bot',\r\n      'bug',\r\n      'burk',\r\n      'dokh',\r\n      'drik',\r\n      'driz',\r\n      'duf',\r\n      'flug',\r\n      'ga',\r\n      'gad',\r\n      'gag',\r\n      'gah',\r\n      'gak',\r\n      'gar',\r\n      'gat',\r\n      'gaz',\r\n      'ghag',\r\n      'ghak',\r\n      'git',\r\n      'glag',\r\n      'glak',\r\n      'glat',\r\n      'glig',\r\n      'gliz',\r\n      'glok',\r\n      'gnat',\r\n      'gog',\r\n      'grak',\r\n      'grat',\r\n      'guk',\r\n      'hig',\r\n      'irk',\r\n      'kak',\r\n      'khad',\r\n      'krig',\r\n      'lag',\r\n      'lak',\r\n      'lig',\r\n      'likk',\r\n      'loz',\r\n      'luk',\r\n      'mak',\r\n      'maz',\r\n      'miz',\r\n      'mub',\r\n      'nad',\r\n      'nag',\r\n      'naz',\r\n      'nig',\r\n      'nikk',\r\n      'nogg',\r\n      'nok',\r\n      'nukk',\r\n      'rag',\r\n      'rak',\r\n      'rat',\r\n      'rok',\r\n      'shrig',\r\n      'shuk',\r\n      'skrag',\r\n      'skug',\r\n      'slai',\r\n      'slig',\r\n      'slog',\r\n      'sna',\r\n      'snag',\r\n      'snark',\r\n      'snat',\r\n      'snig',\r\n      'snik',\r\n      'snit',\r\n      'sog',\r\n      'spik',\r\n      'stogg',\r\n      'tog',\r\n      'urf',\r\n      'vark',\r\n      'yad',\r\n      'yagg',\r\n      'yak',\r\n      'yark',\r\n      'yarp',\r\n      'yig',\r\n      'yip',\r\n      'zat',\r\n      'zib',\r\n      'zit',\r\n      'ziz',\r\n    ],\r\n    medium: [\r\n      'ag',\r\n      'aug',\r\n      'bad',\r\n      'bag',\r\n      'bakh',\r\n      'bash',\r\n      'baz',\r\n      'blag',\r\n      'brag',\r\n      'brog',\r\n      'bruz',\r\n      'dag',\r\n      'dakk',\r\n      'darg',\r\n      'dob',\r\n      'dog',\r\n      'drab',\r\n      'dug',\r\n      'dur',\r\n      'gash',\r\n      'ghaz',\r\n      'glakh',\r\n      'glaz',\r\n      'glob',\r\n      'glol',\r\n      'gluf',\r\n      'glur',\r\n      'gnarl',\r\n      'gnash',\r\n      'gnub',\r\n      'gob',\r\n      'gokh',\r\n      'gol',\r\n      'golk',\r\n      'gor',\r\n      'grakh',\r\n      'grash',\r\n      'grath',\r\n      'graz',\r\n      'grot',\r\n      'grub',\r\n      'grud',\r\n      'gud',\r\n      'gut',\r\n      'hag',\r\n      'hakk',\r\n      'hrat',\r\n      'hrog',\r\n      'hrug',\r\n      'khag',\r\n      'khar',\r\n      'krag',\r\n      'krud',\r\n      'lakh',\r\n      'lash',\r\n      'lob',\r\n      'lub',\r\n      'lud',\r\n      'luf',\r\n      'luk',\r\n      'molk',\r\n      'muk',\r\n      'muz',\r\n      'nar',\r\n      'ogg',\r\n      'olg',\r\n      'rag',\r\n      'rash',\r\n      'rogg',\r\n      'rorg',\r\n      'rot',\r\n      'rud',\r\n      'ruft',\r\n      'rug',\r\n      'rut',\r\n      'shad',\r\n      'shag',\r\n      'shak',\r\n      'shaz',\r\n      'shog',\r\n      'skar',\r\n      'skulg',\r\n      'slur',\r\n      'snar',\r\n      'snorl',\r\n      'snub',\r\n      'snurr',\r\n      'sod',\r\n      'stulg',\r\n      'thak',\r\n      'trog',\r\n      'ug',\r\n      'umsh',\r\n      'ung',\r\n      'uth',\r\n      'yakh',\r\n      'yash',\r\n      'yob',\r\n      'zahk',\r\n      'zog',\r\n    ],\r\n    large: [\r\n      'argh',\r\n      'barsh',\r\n      'bog',\r\n      'burz',\r\n      'dof',\r\n      'drok',\r\n      'drub',\r\n      'drug',\r\n      'dub',\r\n      'dug',\r\n      'dul',\r\n      'dursh',\r\n      'dush',\r\n      'duz',\r\n      'faug',\r\n      'fug',\r\n      'ghakh',\r\n      'ghar',\r\n      'ghash',\r\n      'ghol',\r\n      'ghor',\r\n      'ghukk',\r\n      'ghul',\r\n      'glub',\r\n      'glud',\r\n      'glug',\r\n      'gluz',\r\n      'gom',\r\n      'grad',\r\n      'grash',\r\n      'grob',\r\n      'grogg',\r\n      'grok',\r\n      'grol',\r\n      'gru',\r\n      'gruf',\r\n      'gruk',\r\n      'grul',\r\n      'grum',\r\n      'grumf',\r\n      'grut',\r\n      'gruz',\r\n      'guhl',\r\n      'gulv',\r\n      'hai',\r\n      'hrung',\r\n      'hur',\r\n      'hurg',\r\n      'kai',\r\n      'klob',\r\n      'krod',\r\n      'kug',\r\n      'kulk',\r\n      'kur',\r\n      'lorg',\r\n      'lug',\r\n      'lukh',\r\n      'lum',\r\n      'lurz',\r\n      'lush',\r\n      'luz',\r\n      'makh',\r\n      'maug',\r\n      'molg',\r\n      'mud',\r\n      'mug',\r\n      'mul',\r\n      'murk',\r\n      'muzd',\r\n      'nakh',\r\n      'narg',\r\n      'obb',\r\n      'rolb',\r\n      'rukh',\r\n      'ruz',\r\n      'sharg',\r\n      'shruf',\r\n      'shud',\r\n      'shug',\r\n      'shur',\r\n      'shuz',\r\n      'slub',\r\n      'slud',\r\n      'slug',\r\n      'snad',\r\n      'snog',\r\n      'thrag',\r\n      'thulk',\r\n      'thurk',\r\n      'trug',\r\n      'ulg',\r\n      'ur',\r\n      'urd',\r\n      'urgh',\r\n      'urkh',\r\n      'uz',\r\n      'yug',\r\n      'yur',\r\n      'zud',\r\n      'zug',\r\n    ],\r\n  },\r\n  primitive: {\r\n    names: [\r\n      'ahg',\r\n      'baod',\r\n      'beegh',\r\n      'bohr',\r\n      'bul',\r\n      'buli',\r\n      'burh',\r\n      'buri',\r\n      'chah',\r\n      'dhak',\r\n      'digri',\r\n      'dum',\r\n      'eghi',\r\n      'ehm',\r\n      'faogh',\r\n      'feehm',\r\n      'ghad',\r\n      'ghah',\r\n      'gham',\r\n      'ghan',\r\n      'ghat',\r\n      'ghaw',\r\n      'ghee',\r\n      'ghish',\r\n      'ghug',\r\n      'giree',\r\n      'gonkh',\r\n      'goun',\r\n      'goush',\r\n      'guh',\r\n      'gunri',\r\n      'hah',\r\n      'hani',\r\n      'haogh',\r\n      'hatoo',\r\n      'heghi',\r\n      'heh',\r\n      'hoo',\r\n      'houm',\r\n      'hree',\r\n      'ig',\r\n      'kham',\r\n      'khan',\r\n      'khaz',\r\n      'khee',\r\n      'khem',\r\n      'khuri',\r\n      'logh',\r\n      'lugh',\r\n      'maoh',\r\n      'meh',\r\n      'mogh',\r\n      'mouh',\r\n      'mugh',\r\n      'naoh',\r\n      'naroo',\r\n      'nham',\r\n      'nuh',\r\n      'ob',\r\n      'oli',\r\n      'orf',\r\n      'ough',\r\n      'ouh',\r\n      'peh',\r\n      'pogh',\r\n      'pugh',\r\n      'puh',\r\n      'quagi',\r\n      'rahoo',\r\n      'rhoo',\r\n      'rifoo',\r\n      'ronkh',\r\n      'rouk',\r\n      'saom',\r\n      'saori',\r\n      'shehi',\r\n      'shlo',\r\n      'shom',\r\n      'shour',\r\n      'shul',\r\n      'snaoh',\r\n      'suhi',\r\n      'suth',\r\n      'teb',\r\n      'thom',\r\n      'toudh',\r\n      'tregh',\r\n      'tuhli',\r\n      'ub',\r\n      'urush',\r\n      'ush',\r\n      'vuh',\r\n      'wah',\r\n      'wuh',\r\n      'yaum',\r\n      'yauth',\r\n      'yeeh',\r\n      'yih',\r\n      'yuh',\r\n      'zham',\r\n    ],\r\n    suffixes: ['doh', 'rei', 'mih', 'fah', 'soh', 'lah', 'tih', 'daoh'],\r\n  },\r\n  doughty: {\r\n    syllabes: [\r\n      'bal',\r\n      'durn',\r\n      'na',\r\n      'bord',\r\n      'from',\r\n      'nor',\r\n      'born',\r\n      'fror',\r\n      'nord',\r\n      'brim',\r\n      'fuld',\r\n      'orm',\r\n      'brod',\r\n      'fund',\r\n      'skand',\r\n      'brokk',\r\n      'gim',\r\n      'skond',\r\n      'brom',\r\n      'glo',\r\n      'storn',\r\n      'bru',\r\n      'gond',\r\n      'strom',\r\n      'bur',\r\n      'gord',\r\n      'stur',\r\n      'burl',\r\n      'gorm',\r\n      'sturl',\r\n      'da',\r\n      'grad',\r\n      'sund',\r\n      'dal',\r\n      'grim',\r\n      'thor',\r\n      'dolg',\r\n      'grod',\r\n      'thorn',\r\n      'dor',\r\n      'grom',\r\n      'thra',\r\n      'dorm',\r\n      'guld',\r\n      'thro',\r\n      'dral',\r\n      'gund',\r\n      'throl',\r\n      'drim',\r\n      'gur',\r\n      'thror',\r\n      'drom',\r\n      'hord',\r\n      'thru',\r\n      'dur',\r\n      'horn',\r\n      'thrur',\r\n      'durm',\r\n      'hra',\r\n      'thund',\r\n    ],\r\n    maleSuffixes: [\r\n      'bor',\r\n      'din',\r\n      'in',\r\n      'in',\r\n      'in',\r\n      'ir',\r\n      'li',\r\n      'li',\r\n      'lin',\r\n      'nir',\r\n      'or',\r\n      'ri',\r\n      'ri',\r\n      'rin',\r\n      'rok',\r\n      'ror',\r\n      'rur',\r\n      'vi',\r\n      'vir',\r\n      'vor',\r\n    ],\r\n    femaleSuffixes: [\r\n      'bis',\r\n      'da',\r\n      'dis',\r\n      'dis',\r\n      'dis',\r\n      'dis',\r\n      'ga',\r\n      'hild',\r\n      'is',\r\n      'is',\r\n      'lif',\r\n      'lind',\r\n      'lis',\r\n      'na',\r\n      'nis',\r\n      'ris',\r\n      'rith',\r\n      'run',\r\n      'run',\r\n      'vis',\r\n    ],\r\n  },\r\n  homely: {\r\n    syllabes: [\r\n      'ad',\r\n      'blanc',\r\n      'falc',\r\n      'mil',\r\n      'adel',\r\n      'boff',\r\n      'ferd',\r\n      'mung',\r\n      'adr',\r\n      'bomb',\r\n      'frob',\r\n      'od',\r\n      'ail',\r\n      'bram',\r\n      'fulb',\r\n      'oth',\r\n      'alb',\r\n      'bung',\r\n      'gam',\r\n      'sab',\r\n      'alm',\r\n      'droc',\r\n      'hald',\r\n      'sam',\r\n      'amb',\r\n      'drog',\r\n      'ham',\r\n      'seg',\r\n      'band',\r\n      'durl',\r\n      'hasc',\r\n      'serl',\r\n      'bard',\r\n      'emm',\r\n      'hod',\r\n      'tob',\r\n      'ben',\r\n      'erd',\r\n      'hug',\r\n      'wan',\r\n      'biff',\r\n      'ern',\r\n      'iv',\r\n      'wig',\r\n      'bild',\r\n      'ever',\r\n      'mark',\r\n      'wyd',\r\n    ],\r\n    maleSuffixes: ['ald', 'ard', 'ert', 'fast', 'o', 'o', 'o', 'o', 'o', 'old', 'win', 'wise'],\r\n    femaleSuffixes: ['a', 'a', 'a', 'a', 'a', 'ia', 'ia', 'ice', 'ily', 'ina', 'wina', 'wisa'],\r\n  },\r\n  familyName: {\r\n    english: [\r\n      'Adshead',\r\n      'Akers',\r\n      'Antell',\r\n      'Applegarth',\r\n      'Babb',\r\n      'Babbs',\r\n      'Baffin',\r\n      'Bagg',\r\n      'Baggett',\r\n      'Bagnall',\r\n      'Baldey',\r\n      'Bamber',\r\n      'Bark',\r\n      'Barling',\r\n      'Barnstable',\r\n      'Barraclough',\r\n      'Bastable',\r\n      'Bastin',\r\n      'Bather',\r\n      'Batkin',\r\n      'Batt',\r\n      'Bazley',\r\n      'Bebb',\r\n      'Beddall',\r\n      'Beeby',\r\n      'Beecroft',\r\n      'Beedell',\r\n      'Bellis',\r\n      'Belsey',\r\n      'Berridge',\r\n      'Besley',\r\n      'Bibby',\r\n      'Bickle',\r\n      'Biddle',\r\n      'Biddulph',\r\n      'Bigg',\r\n      'Binks',\r\n      'Binns',\r\n      'Bisp',\r\n      'Biss',\r\n      'Blenk',\r\n      'Blenkin',\r\n      'Boam',\r\n      'Bobo',\r\n      'Boddington',\r\n      'Boffey',\r\n      'Bonger',\r\n      'Bonney',\r\n      'Bonser',\r\n      'Borrett',\r\n      'Bossey',\r\n      'Botterill',\r\n      'Botting',\r\n      'Bottom',\r\n      'Bottomley',\r\n      'Botwright',\r\n      'Bowser',\r\n      'Bracher',\r\n      'Brasnett',\r\n      'Brayley',\r\n      'Breary',\r\n      'Brickwood',\r\n      'Brindley',\r\n      'Broadfoot',\r\n      'Broadribb',\r\n      'Brocksopp',\r\n      'Broster',\r\n      'Buckmaster',\r\n      'Budge',\r\n      'Buffard',\r\n      'Bugg',\r\n      'Buggy',\r\n      'Bulger',\r\n      'Bulman',\r\n      'Bunce',\r\n      'Bunt',\r\n      'Burrow',\r\n      'Bushby',\r\n      'Buss',\r\n      'Cade',\r\n      'Cadwaller',\r\n      'Cantrill',\r\n      'Cardno',\r\n      'Catlow',\r\n      'Cattermole',\r\n      'Chaffe',\r\n      'Chaffer',\r\n      'Chard',\r\n      'Chettle',\r\n      'Chilcott',\r\n      'Chitty',\r\n      'Chivers',\r\n      'Chubb',\r\n      'Chugg',\r\n      'Clewes',\r\n      'Coaker',\r\n      'Cobden',\r\n      'Cobley',\r\n      'Coggan',\r\n      'Coggins',\r\n      'Collop',\r\n      'Coney',\r\n      'Coote',\r\n      'Copp',\r\n      'Coppard',\r\n      'Cornock',\r\n      'Cossey',\r\n      'Cottle',\r\n      'Coultip',\r\n      'Crang',\r\n      'Crimp',\r\n      'Croom',\r\n      'Crowles',\r\n      'Cubitt',\r\n      'Cullimore',\r\n      'Cuss',\r\n      'Custance',\r\n      'Cuthbert',\r\n      'Dabbin',\r\n      'Dabbing',\r\n      'Dabbs',\r\n      'Dagg',\r\n      'Dainty',\r\n      'Deeley',\r\n      'Derrick',\r\n      'Dibb',\r\n      'Dibble',\r\n      'Diccox',\r\n      'Diggins',\r\n      'Diggle',\r\n      'Diggles',\r\n      'Digweed',\r\n      'Dimmock',\r\n      'Dinsdale',\r\n      'Dipple',\r\n      'Dobbie',\r\n      'Dobby',\r\n      'Doggett',\r\n      'Dorey',\r\n      'Drabble',\r\n      'Draycott',\r\n      'Dring',\r\n      'Drudge',\r\n      'Duffield',\r\n      'Dufty',\r\n      'Duggan',\r\n      'Duggleby',\r\n      'Dumbrell',\r\n      'Dunkley',\r\n      'Eatwell',\r\n      'Eggins',\r\n      'Entwistle',\r\n      'Erlam',\r\n      'Etchells',\r\n      'Fairclough',\r\n      'Felgate',\r\n      'Fensome',\r\n      'Fenton',\r\n      'Fidge',\r\n      'Fidoe',\r\n      'Figg',\r\n      'Filer',\r\n      'Fincham',\r\n      'Firkins',\r\n      'Flann',\r\n      'Flanner',\r\n      'Flippance',\r\n      'Flook',\r\n      'Flunder',\r\n      'Followes',\r\n      'Fooks',\r\n      'Fremlin',\r\n      'Frisby',\r\n      'Frogley',\r\n      'Frohock',\r\n      'Froome',\r\n      'Frow',\r\n      'Fuggle',\r\n      'Furse',\r\n      'Furze',\r\n      'Gabb',\r\n      'Gaffey',\r\n      'Gagg',\r\n      'Gander',\r\n      'Garbutt',\r\n      'Garlick',\r\n      'Garn',\r\n      'Gazard',\r\n      'Gedge',\r\n      'Giblett',\r\n      'Giddy',\r\n      'Gigg',\r\n      'Gilliat',\r\n      'Gimble',\r\n      'Gimson',\r\n      'Ginger',\r\n      'Gipps',\r\n      'Girdler',\r\n      'Gissing',\r\n      'Gleave',\r\n      'Goggin',\r\n      'Gollogly',\r\n      'Gomm',\r\n      'Goodier',\r\n      'Gook',\r\n      'Gorringe',\r\n      'Gorwyn',\r\n      'Gosden',\r\n      'Gribble',\r\n      'Grigg',\r\n      'Griggs',\r\n      'Grill',\r\n      'Grimble',\r\n      'Grimes',\r\n      'Grimshaw',\r\n      'Grist',\r\n      'Grubb',\r\n      'Guckeen',\r\n      'Guckian',\r\n      'Guild',\r\n      'Gull',\r\n      'Gully',\r\n      'Gumbold',\r\n      'Gummer',\r\n      'Gummidge',\r\n      'Gurden',\r\n      'Haffenden',\r\n      'Hales',\r\n      'Halse',\r\n      'Harpham',\r\n      'Hartle',\r\n      'Hatch',\r\n      'Hayhurst',\r\n      'Hearle',\r\n      'Henley',\r\n      'Henwood',\r\n      'Heppell',\r\n      'Herrick',\r\n      'Herring',\r\n      'Hesketh',\r\n      'Hext',\r\n      'Hicken',\r\n      'Hickmott',\r\n      'Higman',\r\n      'Hinchcliffe',\r\n      'Hindmarsh',\r\n      'Hobley',\r\n      'Hoddy',\r\n      'Hogben',\r\n      'Holdom',\r\n      'Hollick',\r\n      'Holtom',\r\n      'Honeysett',\r\n      'Hook',\r\n      'Hopley',\r\n      'Hopps',\r\n      'Horrocks',\r\n      'Horsfall',\r\n      'Horwood',\r\n      'Hotten',\r\n      'Housely',\r\n      'Howie',\r\n      'Huff',\r\n      'Huffam',\r\n      'Hutton',\r\n      'Huxtable',\r\n      'Icke',\r\n      'Idden',\r\n      'Inskip',\r\n      'Iveson',\r\n      'Izzard',\r\n      'Jaggs',\r\n      'Jellis',\r\n      'Jepson',\r\n      'Jesty',\r\n      'Keel',\r\n      'Keetley',\r\n      'Kerkin',\r\n      'Kerslake',\r\n      'Kettley',\r\n      'Killick',\r\n      'Kinch',\r\n      'Knaggs',\r\n      'Kneebone',\r\n      'Knopp',\r\n      'Knott',\r\n      'Lagden',\r\n      'Laslett',\r\n      'Laverick',\r\n      'Leaper',\r\n      'Leggett',\r\n      'Liddane',\r\n      'Liddy',\r\n      'Liggan',\r\n      'Lithgoe',\r\n      'Lobb',\r\n      'Lodder',\r\n      'Looby',\r\n      'Loody',\r\n      'Lubbock',\r\n      'Luff',\r\n      'Lugard',\r\n      'Lugg',\r\n      'Lumsden',\r\n      'Lyle',\r\n      'Mabb',\r\n      'Mabbitt',\r\n      'Mabbot',\r\n      'Mabbs',\r\n      'Mabbutt',\r\n      'Maffey',\r\n      'Mallam',\r\n      'Mangold',\r\n      'Mapp',\r\n      'Mappin',\r\n      'Marfell',\r\n      'Matthams',\r\n      'Maunder',\r\n      'Maxted',\r\n      'Mayo',\r\n      'Meech',\r\n      'Meeson',\r\n      'Meggison',\r\n      'Meggitt',\r\n      'Meggs',\r\n      'Mellings',\r\n      'Merrikin',\r\n      'Metherell',\r\n      'Mew',\r\n      'Miggles',\r\n      'Miggs',\r\n      'Milsom',\r\n      'Milson',\r\n      'Minchin',\r\n      'Minns',\r\n      'Mobbs',\r\n      'Moberly',\r\n      'Mockler',\r\n      'Mogford',\r\n      'Mogg',\r\n      'Moggs',\r\n      'Morkam',\r\n      'Morphett',\r\n      'Mossman',\r\n      'Mossop',\r\n      'Mottershead',\r\n      'Moulds',\r\n      'Muddle',\r\n      'Muddock',\r\n      'Mudge',\r\n      'Mullock',\r\n      'Murch',\r\n      'Murfin',\r\n      'Murfitt',\r\n      'Musson',\r\n      'Mustill',\r\n      'Mutter',\r\n      'Mutton',\r\n      'Nance',\r\n      'Napper',\r\n      'Neep',\r\n      'Negus',\r\n      'Netherway',\r\n      'Newitt',\r\n      'Niblett',\r\n      'Nickless',\r\n      'Noad',\r\n      'Nobbs',\r\n      'Noblet',\r\n      'Nosworthy',\r\n      'Nottage',\r\n      'Nutt',\r\n      'Offen',\r\n      'Oram',\r\n      'Orcutt',\r\n      'Ord',\r\n      'Orpe',\r\n      'Paddock',\r\n      'Paddon',\r\n      'Pannell',\r\n      'Parham',\r\n      'Pavey',\r\n      'Peay',\r\n      'Peever',\r\n      'Pegg',\r\n      'Pegge',\r\n      'Pegler',\r\n      'Pegrum',\r\n      'Pelly',\r\n      'Pelter',\r\n      'Pendle',\r\n      'Petch',\r\n      'Petcher',\r\n      'Petchey',\r\n      'Pettipher',\r\n      'Philp',\r\n      'Phippen',\r\n      'Phippin',\r\n      'Pickersgill',\r\n      'Pickley',\r\n      'Pickwell',\r\n      'Pidduck',\r\n      'Pigg',\r\n      'Pilkington',\r\n      'Pimblett',\r\n      'Pingree',\r\n      'Pinch',\r\n      'Pinn',\r\n      'Pither',\r\n      'Pochin',\r\n      'Poggs',\r\n      'Polkinghorne',\r\n      'Pomeroy',\r\n      'Pomfret',\r\n      'Postlethwaite',\r\n      'Potticary',\r\n      'Poxon',\r\n      'Pring',\r\n      'Pringle',\r\n      'Prisk',\r\n      'Proudfoot',\r\n      'Puddicombe',\r\n      'Pudding',\r\n      'Puddy',\r\n      'Pugsley',\r\n      'Purslove',\r\n      'Pym',\r\n      'Quaife',\r\n      'Quain',\r\n      'Quenby',\r\n      'Quibell',\r\n      'Quigg',\r\n      'Raddle',\r\n      'Ranby',\r\n      'Rapkins',\r\n      'Ratter',\r\n      'Reakes',\r\n      'Reeson',\r\n      'Riddle',\r\n      'Rix',\r\n      'Roddis',\r\n      'Rosser',\r\n      'Ruddle',\r\n      'Ruffle',\r\n      'Rugg',\r\n      'Rumming',\r\n      'Rump',\r\n      'Sadd',\r\n      'Samways',\r\n      'Sankey',\r\n      'Scantlebury',\r\n      'Scoones',\r\n      'Scouse',\r\n      'Scragg',\r\n      'Scrimgeour',\r\n      'Scroggs',\r\n      'Scruby',\r\n      'Scutt',\r\n      'Sefton',\r\n      'Selth',\r\n      'Semmens',\r\n      'Seward',\r\n      'Shalloo',\r\n      'Sharples',\r\n      'Siggers',\r\n      'Sirett',\r\n      'Skeels',\r\n      'Skerrett',\r\n      'Slee',\r\n      'Sluggett',\r\n      'Smedley',\r\n      'Snoddy',\r\n      'Snuggs',\r\n      'Sparrow',\r\n      'Sparrowhawke',\r\n      'Spink',\r\n      'Spinks',\r\n      'Spriggs',\r\n      'Springett',\r\n      'Sproat',\r\n      'Sprunt',\r\n      'Spurle',\r\n      'Spurrett',\r\n      'Spurrier',\r\n      'Squance',\r\n      'Squarey',\r\n      'Squibb',\r\n      'Squirrel',\r\n      'Staines',\r\n      'Steggal',\r\n      'Stelfox',\r\n      'Stirk',\r\n      'Stith',\r\n      'Strag',\r\n      'Straw',\r\n      'Strutt',\r\n      'Stubbins',\r\n      'Stuppies',\r\n      'Suggett',\r\n      'Swaffer',\r\n      'Swaffield',\r\n      'Swarbrick',\r\n      'Symes',\r\n      'Tabor',\r\n      'Tagg',\r\n      'Tapping',\r\n      'Tarr',\r\n      'Tassell',\r\n      'Teale',\r\n      'Thew',\r\n      'Thick',\r\n      'Thornber',\r\n      'Thwaites',\r\n      'Tibbins',\r\n      'Tibbits',\r\n      'Tibbles',\r\n      'Tibbotts',\r\n      'Tink',\r\n      'Tippell',\r\n      'Tipping',\r\n      'Tippins',\r\n      'Tippling',\r\n      'Tipton',\r\n      'Tisser',\r\n      'Tittmuss',\r\n      'Tobitt',\r\n      'Tonks',\r\n      'Topping',\r\n      'Towse',\r\n      'Toye',\r\n      'Tozer',\r\n      'Trafford',\r\n      'Treasure',\r\n      'Tremlett',\r\n      'Trett',\r\n      'Trible',\r\n      'Tricker',\r\n      'Tripe',\r\n      'Trippe',\r\n      'Tripper',\r\n      'Trist',\r\n      'Troake',\r\n      'Trotter',\r\n      'Trouncer',\r\n      'Trumble',\r\n      'Tudge',\r\n      'Tuffin',\r\n      'Tufley',\r\n      'Tulk',\r\n      'Tully',\r\n      'Tumman',\r\n      'Tunks',\r\n      'Tunnah',\r\n      'Tunnicliffe',\r\n      'Turnock',\r\n      'Tween',\r\n      'Tyrer',\r\n      'Unsworth',\r\n      'Uttley',\r\n      'Varney',\r\n      'Vooght',\r\n      'Wackrill',\r\n      'Waddilove',\r\n      'Waddilow',\r\n      'Walthew',\r\n      'Waltho',\r\n      'Walwin',\r\n      'Wanless',\r\n      'Wann',\r\n      'Waple',\r\n      'Waring',\r\n      'Warrilow',\r\n      'Welburn',\r\n      'Wenden',\r\n      'Werrett',\r\n      'Wescott',\r\n      'Whinnett',\r\n      'Whiskard',\r\n      'Whisker',\r\n      'Whitefoot',\r\n      'Whitlow',\r\n      'Wibberley',\r\n      'Widdicombe',\r\n      'Widdows',\r\n      'Widdup',\r\n      'Wigg',\r\n      'Wigley',\r\n      'Wilberforce',\r\n      'Wilmer',\r\n      'Wintle',\r\n      'Witherden',\r\n      'Witney',\r\n      'Witter',\r\n      'Wolnoth',\r\n      'Woodhead',\r\n      'Wookey',\r\n      'Woolland',\r\n      'Woombill',\r\n      'Worrel',\r\n      'Worsley',\r\n      'Wortley',\r\n      'Wragg',\r\n      'Wrixon',\r\n      'Yeandle',\r\n      'Yeend',\r\n      'Yemm',\r\n      'Yould',\r\n    ],\r\n    scottish: [\r\n      'Aiken',\r\n      'Aitken',\r\n      'Baikie',\r\n      'Baillie',\r\n      'Bainbridge',\r\n      'Baird',\r\n      'Bairnsfeather',\r\n      'Balios',\r\n      'Balnaves',\r\n      'Barbour',\r\n      'Barclay',\r\n      'Barrie',\r\n      'Beattie',\r\n      'Beilby',\r\n      'Bell',\r\n      'Bellenden',\r\n      'Berwick',\r\n      'Blackie',\r\n      'Blackwood',\r\n      'Blaikie',\r\n      'Blair',\r\n      'Bogue',\r\n      'Boyce',\r\n      'Braid',\r\n      'Brechin',\r\n      'Brisbane',\r\n      'Brough',\r\n      'Brougham',\r\n      'Brown',\r\n      'Brownlee',\r\n      'Brymner',\r\n      'Cairns',\r\n      'Calderwood',\r\n      'Candlish',\r\n      'Cardus',\r\n      'Cargill',\r\n      'Caven',\r\n      'Christison',\r\n      'Clyde',\r\n      'Cochran',\r\n      'Cochrane',\r\n      'Cockburn',\r\n      'Colomb',\r\n      'Crockett',\r\n      'Cronin',\r\n      'Cruden',\r\n      'Cunningham',\r\n      'Cushny',\r\n      'Dalziel',\r\n      'Deems',\r\n      'Dempster',\r\n      'Dinwiddie',\r\n      'Doohan',\r\n      'Doone',\r\n      'Dunbar',\r\n      'Dundas',\r\n      'Dundee',\r\n      'Dunn',\r\n      'Dunning',\r\n      'Eccles',\r\n      'Eckford',\r\n      'Edmonstone',\r\n      'Elder',\r\n      'Fairbairn',\r\n      'Falconer',\r\n      'Fenwick',\r\n      'Ferrier',\r\n      'Gairdner',\r\n      'Galloway',\r\n      'Galt',\r\n      'Geddes',\r\n      'Geikie',\r\n      'Glass',\r\n      'Glendon',\r\n      'Graham',\r\n      'Gregory',\r\n      'Guthrie',\r\n      'Haig',\r\n      'Halkett',\r\n      'Herdman',\r\n      'Hogg',\r\n      'Imey',\r\n      'Inchbald',\r\n      'Inglis',\r\n      'Irvine',\r\n      'Ivory',\r\n      'Jebb',\r\n      'Kerr',\r\n      'Kircaldy',\r\n      'Kirk',\r\n      'Kirkbride',\r\n      'Laird',\r\n      'Laughlin',\r\n      'Lawson',\r\n      'Legge',\r\n      'Lillie',\r\n      'Lipton',\r\n      'Lockhart',\r\n      'Lorimer',\r\n      'Lyall',\r\n      'Lyte',\r\n      'Masson',\r\n      'Melrose',\r\n      'Mill',\r\n      'Miller',\r\n      'Milligan',\r\n      'Milner',\r\n      'Moffat',\r\n      'Mollison',\r\n      'Moncrief',\r\n      'Montrose',\r\n      'Motherwell',\r\n      'Muir',\r\n      'Muirhead',\r\n      'Murray',\r\n      'Nairn',\r\n      'Naysmith',\r\n      'Nesbit',\r\n      'Nisbet',\r\n      'Noël',\r\n      'Orchardson',\r\n      'Pasley',\r\n      'Paterson',\r\n      'Pender',\r\n      'Preston',\r\n      'Primrose',\r\n      'Pringle',\r\n      'Quiller',\r\n      'Raeburn',\r\n      'Ransay',\r\n      'Redpath',\r\n      'Renfrew',\r\n      'Rennie',\r\n      'Renwick',\r\n      'Sanderson',\r\n      'Semphill',\r\n      'Smiles',\r\n      'Smollett',\r\n      'Smybert',\r\n      'Spenlove',\r\n      'Sterling',\r\n      'Stirling',\r\n      'Strang',\r\n      'Strange',\r\n      'Strangeways',\r\n      'Tait',\r\n      'Tannahill',\r\n      'Tassie',\r\n      'Thom',\r\n      'Tolmie',\r\n      'Urquhart',\r\n      'Wardlaw',\r\n      'Wedderburn',\r\n      'Whearty',\r\n      'Wilkie',\r\n      'Wiseheart',\r\n      'Wishart',\r\n      'Yarrow',\r\n    ],\r\n  },\r\n  fairAndNoble: {\r\n    elfprefixes: [\r\n      'an',\r\n      'im',\r\n      'ar',\r\n      'in',\r\n      'cal',\r\n      'ir',\r\n      'car',\r\n      'ist',\r\n      'cel',\r\n      'lar',\r\n      'cir',\r\n      'lir',\r\n      'clar',\r\n      'lor',\r\n      'el',\r\n      'mar',\r\n      'elb',\r\n      'mel',\r\n      'er',\r\n      'mer',\r\n      'erl',\r\n      'mir',\r\n      'est',\r\n      'nim',\r\n      'far',\r\n      'nin',\r\n      'fin',\r\n      'nir',\r\n      'gal',\r\n      'ral',\r\n      'gan',\r\n      'ran',\r\n      'gar',\r\n      'rel',\r\n      'gel',\r\n      'ril',\r\n      'gil',\r\n      'rin',\r\n      'ilm',\r\n      'rim',\r\n    ],\r\n    alternativeElfPrefixes: [\r\n      'aeg',\r\n      'lith',\r\n      'ael',\r\n      'maeg',\r\n      'aer',\r\n      'mind',\r\n      'aes',\r\n      'mith',\r\n      'aeth',\r\n      'nith',\r\n      'bel',\r\n      'rael',\r\n      'ber',\r\n      'rind',\r\n      'cael',\r\n      'saer',\r\n      'caer',\r\n      'sar',\r\n      'cris',\r\n      'seld',\r\n      'ear',\r\n      'ser',\r\n      'elth',\r\n      'sil',\r\n      'eol',\r\n      'silm',\r\n      'faer',\r\n      'sind',\r\n      'fean',\r\n      'thael',\r\n      'find',\r\n      'thaer',\r\n      'ith',\r\n      'thal',\r\n      'laeg',\r\n      'thel',\r\n      'lend',\r\n      'ther',\r\n      'lind',\r\n      'thir',\r\n    ],\r\n    middle: [\r\n      'ad',\r\n      'al',\r\n      'am',\r\n      'an',\r\n      'ar',\r\n      'as',\r\n      'eb',\r\n      'ed',\r\n      'el',\r\n      'em',\r\n      'en',\r\n      'er',\r\n      'es',\r\n      'ev',\r\n      'il',\r\n      'in',\r\n      'ir',\r\n      'ol',\r\n      'thal',\r\n      'thon',\r\n    ],\r\n    maleSuffixes: [\r\n      'ad',\r\n      'dan',\r\n      'del',\r\n      'dil',\r\n      'dir',\r\n      'fal',\r\n      'ion',\r\n      'ion',\r\n      'lad',\r\n      'las',\r\n      'lin',\r\n      'nar',\r\n      'or',\r\n      'orn',\r\n      'ras',\r\n      'rior',\r\n      'rod',\r\n      'rond',\r\n      'ros',\r\n      'thir',\r\n    ],\r\n    femaleSuffixes: [\r\n      'edel',\r\n      'el',\r\n      'eth',\r\n      'ian',\r\n      'iel',\r\n      'iel',\r\n      'ien',\r\n      'loth',\r\n      'mir',\r\n      'rial',\r\n      'rian',\r\n      'riel',\r\n      'riel',\r\n      'rien',\r\n      'ril',\r\n      'roël',\r\n      'sil',\r\n      'wë',\r\n      'wen',\r\n      'wen',\r\n    ],\r\n  },\r\n  faerykind: {\r\n    prefixes: [\r\n      'dex',\r\n      'gliss',\r\n      'tink',\r\n      'flax',\r\n      'goss',\r\n      'tiss',\r\n      'flim',\r\n      'hex',\r\n      'trill',\r\n      'fliss',\r\n      'liss',\r\n      'trist',\r\n      'flix',\r\n      'min',\r\n      'twill',\r\n      'foss',\r\n      'misk',\r\n      'twiss',\r\n      'frisk',\r\n      'raff',\r\n      'twisp',\r\n      'friss',\r\n      'ress',\r\n      'twix',\r\n      'gess',\r\n      'riff',\r\n      'weft',\r\n      'glan',\r\n      'rill',\r\n      'wesk',\r\n      'glax',\r\n      'saff',\r\n      'winn',\r\n      'glim',\r\n      'shim',\r\n      'wisp',\r\n    ],\r\n    maleSuffixes: ['aldo', 'allo', 'amo', 'ando', 'aroll', 'aron', 'asto', 'endo', 'eroll', 'eron', 'esto', 'ondo'],\r\n    femaleSuffixes: ['afer', 'amer', 'anel', 'arel', 'asti', 'efer', 'enti', 'erel', 'ifer', 'imer', 'inel', 'irel'],\r\n  },\r\n  alternativeFaerykind: {\r\n    prefixes: [\r\n      'bris',\r\n      'iphil',\r\n      'opal',\r\n      'cryl',\r\n      'ispel',\r\n      'oris',\r\n      'elsi',\r\n      'istle',\r\n      'orif',\r\n      'ember',\r\n      'jat',\r\n      'peri',\r\n      'esk',\r\n      'jost',\r\n      'sarm',\r\n      'feris',\r\n      'jus',\r\n      'sprin',\r\n      'frimi',\r\n      'lirra',\r\n      'stith',\r\n      'gan',\r\n      'mali',\r\n      'tansi',\r\n      'glink',\r\n      'mink',\r\n      'tirra',\r\n      'hal',\r\n      'mirra',\r\n      'trump',\r\n      'hel',\r\n      'mistle',\r\n      'whis',\r\n      'hist',\r\n      'ninka',\r\n      'zando',\r\n    ],\r\n    maleSuffixes: ['bik', 'brix', 'frell', 'fret', 'kin', 'mist', 'mit', 'rix', 'tross', 'twik', 'win', 'zisk'],\r\n    femaleSuffixes: ['dee', 'kiss', 'la', 'liss', 'mee', 'niss', 'nyx', 'ree', 'riss', 'sa', 'tiss', 'ynx'],\r\n  },\r\n  elegantEvil: {\r\n    prefixesDarkElves: [\r\n      'bal',\r\n      'myr',\r\n      'ber',\r\n      'ne',\r\n      'char',\r\n      'nel',\r\n      'de',\r\n      'nil',\r\n      'div',\r\n      'no',\r\n      'dri',\r\n      'nyl',\r\n      'dul',\r\n      'rel',\r\n      'eil',\r\n      'rha',\r\n      'ek',\r\n      'ru',\r\n      'im',\r\n      'sab',\r\n      'ins',\r\n      'sin',\r\n      'ist',\r\n      'sul',\r\n      'jeg',\r\n      'sus',\r\n      'jer',\r\n      'tel',\r\n      'jys',\r\n      'tul',\r\n      'lil',\r\n      'ver',\r\n      'mar',\r\n      'vil',\r\n      'mer',\r\n      'vir',\r\n      'mez',\r\n      'vril',\r\n      'mor',\r\n      'yas',\r\n    ],\r\n    prefixesAlternateDarkElves: [\r\n      'bur',\r\n      'olg',\r\n      'chor',\r\n      'on',\r\n      'col',\r\n      'or',\r\n      'dol',\r\n      'org',\r\n      'dor',\r\n      'oth',\r\n      'drom',\r\n      'pan',\r\n      'dur',\r\n      'pel',\r\n      'en',\r\n      'por',\r\n      'er',\r\n      'sek',\r\n      'gon',\r\n      'sol',\r\n      'gul',\r\n      'sun',\r\n      'jend',\r\n      'ten',\r\n      'kil',\r\n      'thal',\r\n      'lul',\r\n      'tor',\r\n      'mab',\r\n      'torm',\r\n      'maz',\r\n      'vek',\r\n      'mol',\r\n      'vol',\r\n      'nor',\r\n      'vor',\r\n      'noth',\r\n      'yel',\r\n      'ol',\r\n      'yol',\r\n    ],\r\n    middle: [\r\n      'dyl',\r\n      'el',\r\n      'en',\r\n      'er',\r\n      'id',\r\n      'il',\r\n      'is',\r\n      'lav',\r\n      'len',\r\n      'lev',\r\n      'lin',\r\n      'liv',\r\n      'pel',\r\n      'pir',\r\n      'ra',\r\n      'ral',\r\n      'ril',\r\n      'rin',\r\n      'sin',\r\n      'syl',\r\n    ],\r\n    maleSuffixes: [\r\n      'ald',\r\n      'eld',\r\n      'id',\r\n      'ild',\r\n      'ird',\r\n      'lim',\r\n      'naz',\r\n      'nid',\r\n      'nil',\r\n      'nim',\r\n      'red',\r\n      'rid',\r\n      'rim',\r\n      'riv',\r\n      'ul',\r\n      'uld',\r\n      'vid',\r\n      'vim',\r\n      'vir',\r\n      'viz',\r\n    ],\r\n    femaleSuffixes: [\r\n      'bra',\r\n      'dra',\r\n      'dril',\r\n      'ene',\r\n      'hel',\r\n      'ia',\r\n      'il',\r\n      'iln',\r\n      'ira',\r\n      'istra',\r\n      'ith',\r\n      'iza',\r\n      'lin',\r\n      'na',\r\n      'ra',\r\n      'rin',\r\n      'sil',\r\n      'tra',\r\n      'vra',\r\n      'vril',\r\n    ],\r\n  },\r\n  malevolent: {\r\n    prefixes: [\r\n      'aag',\r\n      'karg',\r\n      'ulthu',\r\n      'alur',\r\n      'khark',\r\n      'urz',\r\n      'arak',\r\n      'krau',\r\n      'uti',\r\n      'az',\r\n      'kriv',\r\n      'uznid',\r\n      'azik',\r\n      'kuaz',\r\n      'virn',\r\n      'bral',\r\n      'kudu',\r\n      'vlaaj',\r\n      'braz',\r\n      'luri',\r\n      'vlag',\r\n      'bruh',\r\n      'mulk',\r\n      'vlash',\r\n      'draan',\r\n      'nau',\r\n      'vluk',\r\n      'drulg',\r\n      'nid',\r\n      'vluzak',\r\n      'guz',\r\n      'ninj',\r\n      'vraz',\r\n      'haug',\r\n      'nul',\r\n      'vulk',\r\n      'idru',\r\n      'nym',\r\n      'xau',\r\n      'jhaal',\r\n      'ranag',\r\n      'xid',\r\n      'jid',\r\n      'rilthu',\r\n      'xul',\r\n      'jiu',\r\n      'ruk',\r\n      'xuraj',\r\n      'jur',\r\n      'rulk',\r\n      'zauv',\r\n      'jurg',\r\n      'ruz',\r\n      'zug',\r\n      'jurz',\r\n      'saag',\r\n      'zuldu',\r\n      'kaaz',\r\n      'skaur',\r\n      'zuv',\r\n    ],\r\n    maleSuffixes: [\r\n      'arag',\r\n      'bru',\r\n      'drul',\r\n      'inu',\r\n      'lank',\r\n      'lun',\r\n      'lurr',\r\n      'lurug',\r\n      'nal',\r\n      'rul',\r\n      'ruzuk',\r\n      'salk',\r\n      'sul',\r\n      'suruk',\r\n      'ull',\r\n      'undak',\r\n      'uvik',\r\n      'xulg',\r\n      'zu',\r\n      'zuk',\r\n    ],\r\n    femaleSuffixes: [\r\n      'anil',\r\n      'bau',\r\n      'diu',\r\n      'dusla',\r\n      'giu',\r\n      'ija',\r\n      'izil',\r\n      'jiul',\r\n      'lihyl',\r\n      'lin',\r\n      'lyrr',\r\n      'nalu',\r\n      'rhyl',\r\n      'rula',\r\n      'skiu',\r\n      'sula',\r\n      'ulla',\r\n      'xhiu',\r\n      'zihyl',\r\n      'ziu',\r\n    ],\r\n  },\r\n  draconic: {\r\n    prefixes: [\r\n      'abra',\r\n      'har',\r\n      'phrixu',\r\n      'adastra',\r\n      'helio',\r\n      'porphyro',\r\n      'adra',\r\n      'huro',\r\n      'pyra',\r\n      'anca',\r\n      'iul',\r\n      'rhada',\r\n      'andra',\r\n      'jalan',\r\n      'rhe',\r\n      'arag',\r\n      'jarzem',\r\n      'rhodo',\r\n      'archo',\r\n      'jazra',\r\n      'rau',\r\n      'atra',\r\n      'jurga',\r\n      'sar',\r\n      'bar',\r\n      'keruxa',\r\n      'sarcu',\r\n      'bara',\r\n      'kralka',\r\n      'sarda',\r\n      'beru',\r\n      'lazulo',\r\n      'scarva',\r\n      'bhakri',\r\n      'majuri',\r\n      'sidereo',\r\n      'bia',\r\n      'malacho',\r\n      'skhia',\r\n      'bra',\r\n      'mar',\r\n      'sulchru',\r\n      'brado',\r\n      'marmora',\r\n      'tchalcedo',\r\n      'brima',\r\n      'melkar',\r\n      'tchazar',\r\n      'cadra',\r\n      'orgra',\r\n      'trocho',\r\n      'chro',\r\n      'ouro',\r\n      'vra',\r\n      'chryso',\r\n      'perido',\r\n      'zalar',\r\n      'glau',\r\n      'phoro',\r\n      'zerul',\r\n    ],\r\n    suffixes: [\r\n      'bazius',\r\n      'boros',\r\n      'bradax',\r\n      'calchax',\r\n      'cordax',\r\n      'lagon',\r\n      'malax',\r\n      'mandros',\r\n      'manthys',\r\n      'mordax',\r\n      'nadral',\r\n      'nalux',\r\n      'neriax',\r\n      'phylax',\r\n      'vorax',\r\n      'vorung',\r\n      'xenor',\r\n      'zuthrax',\r\n      'zzebrax',\r\n      'zzemal',\r\n    ],\r\n  },\r\n  infernal: {\r\n    softs: [\r\n      'alu',\r\n      'alz',\r\n      'avu',\r\n      'azaz',\r\n      'baph',\r\n      'baz',\r\n      'cha',\r\n      'fraz',\r\n      'garl',\r\n      'garu',\r\n      'gla',\r\n      'hra',\r\n      'mal',\r\n      'nahu',\r\n      'nal',\r\n      'nasu',\r\n      'paz',\r\n      'raz',\r\n      'tha',\r\n      'thalu',\r\n      'bre',\r\n      'dre',\r\n      'gel',\r\n      'gle',\r\n      'gre',\r\n      'hez',\r\n      'rez',\r\n      'rezu',\r\n      'tze',\r\n      'gzi',\r\n      'hriz',\r\n      'hzi',\r\n      'idrau',\r\n      'itha',\r\n      'ixu',\r\n      'lilu',\r\n      'riz',\r\n      'yil',\r\n      'dromu',\r\n      'gro',\r\n      'lol',\r\n      'moz',\r\n      'olth',\r\n      'oxu',\r\n      'sco',\r\n      'tho',\r\n      'bu',\r\n      'bul',\r\n      'buz',\r\n      'chru',\r\n      'dru',\r\n      'ghu',\r\n      'gura',\r\n      'guz',\r\n      'hruz',\r\n      'huz',\r\n      'kul',\r\n      'lurhz',\r\n      'muz',\r\n      'ru',\r\n      'shu',\r\n      'ssu',\r\n      'szul',\r\n      'thu',\r\n      'ulchru',\r\n      'utu',\r\n      'vul',\r\n      'zu',\r\n      'zul',\r\n      'baal',\r\n      'ghaa',\r\n      'kraa',\r\n      'phaal',\r\n      'raal',\r\n      'saa',\r\n      'bial',\r\n      'oazo',\r\n      'soaz',\r\n      'ruaz',\r\n      'gya',\r\n      'yaa',\r\n      'bael',\r\n      'nee',\r\n      'ziel',\r\n      'yee',\r\n      'aiaz',\r\n      'shai',\r\n      'reoz',\r\n      'duoi',\r\n      'drau',\r\n      'ghau',\r\n      'glau',\r\n      'mau',\r\n      'sau',\r\n      'tzau',\r\n      'iuz',\r\n      'juu',\r\n      'rhuu',\r\n      'vuul',\r\n      'zuu',\r\n    ],\r\n    dulls: [\r\n      'agh',\r\n      'alg',\r\n      'barg',\r\n      'chag',\r\n      'ghad',\r\n      'glab',\r\n      'grag',\r\n      'hrag',\r\n      'kag',\r\n      'kwarg',\r\n      'mag',\r\n      'nalb',\r\n      'sag',\r\n      'tharg',\r\n      'brelg',\r\n      'dergh',\r\n      'dregh',\r\n      'drelb',\r\n      'felg',\r\n      'heg',\r\n      'kleg',\r\n      'igg',\r\n      'rigg',\r\n      'blog',\r\n      'drog',\r\n      'grolb',\r\n      'kolg',\r\n      'krolg',\r\n      'lolg',\r\n      'mog',\r\n      'morg',\r\n      'nog',\r\n      'obb',\r\n      'ogg',\r\n      'olb',\r\n      'rogg',\r\n      'strog',\r\n      'thog',\r\n      'trob',\r\n      'tzolg',\r\n      'vogt',\r\n      'bub',\r\n      'bulg',\r\n      'druj',\r\n      'durg',\r\n      'frub',\r\n      'fulg',\r\n      'gub',\r\n      'hrud',\r\n      'hurg',\r\n      'jub',\r\n      'julb',\r\n      'nud',\r\n      'nug',\r\n      'nulb',\r\n      'rung',\r\n      'shub',\r\n      'stug',\r\n      'sug',\r\n      'szug',\r\n      'trulg',\r\n      'ulb',\r\n      'urb',\r\n      'vub',\r\n      'vulb',\r\n      'xub',\r\n      'zub',\r\n      'zug',\r\n      'zugt',\r\n      'aab',\r\n      'aag',\r\n      'glaag',\r\n      'haag',\r\n      'naag',\r\n      'raag',\r\n      'boaj',\r\n      'moab',\r\n      'uag',\r\n      'leegh',\r\n      'yeb',\r\n      'yeeg',\r\n      'aig',\r\n      'yibb',\r\n      'iog',\r\n      'droog',\r\n      'nyog',\r\n      'aug',\r\n      'baug',\r\n      'daurg',\r\n      'draug',\r\n      'gaub',\r\n      'laug',\r\n      'maug',\r\n      'naug',\r\n      'raug',\r\n      'saug',\r\n      'thaug',\r\n      'iub',\r\n      'iug',\r\n      'ruug',\r\n    ],\r\n    sharps: [\r\n      'ach',\r\n      'akk',\r\n      'ash',\r\n      'azt',\r\n      'bahor',\r\n      'bar',\r\n      'bas',\r\n      'brax',\r\n      'charn',\r\n      'dak',\r\n      'hrax',\r\n      'lach',\r\n      'lazt',\r\n      'mat',\r\n      'nam',\r\n      'nazt',\r\n      'ralk',\r\n      'rhast',\r\n      'sark',\r\n      'slarv',\r\n      'tash',\r\n      'thak',\r\n      'thalur',\r\n      'thalk',\r\n      'vach',\r\n      'vap',\r\n      'dek',\r\n      'ech',\r\n      'fesh',\r\n      'gek',\r\n      'hrek',\r\n      'lech',\r\n      'met',\r\n      'ner',\r\n      'ter',\r\n      'blik',\r\n      'gith',\r\n      'igm',\r\n      'inax',\r\n      'irsch',\r\n      'kir',\r\n      'lis',\r\n      'lisk',\r\n      'lith',\r\n      'nilv',\r\n      'nirr',\r\n      'tlizit',\r\n      'bor',\r\n      'chon',\r\n      'goch',\r\n      'gor',\r\n      'goth',\r\n      'hoth',\r\n      'khor',\r\n      'kos',\r\n      'loch',\r\n      'lok',\r\n      'loth',\r\n      'moch',\r\n      'moth',\r\n      'noc',\r\n      'och',\r\n      'oth',\r\n      'rolk',\r\n      'roth',\r\n      'sot',\r\n      'soth',\r\n      'vrok',\r\n      'dun',\r\n      'gur',\r\n      'hun',\r\n      'luth',\r\n      'muth',\r\n      'nur',\r\n      'rutt',\r\n      'sut',\r\n      'sutt',\r\n      'szut',\r\n      'tur',\r\n      'urt',\r\n      'utuk',\r\n      'uzt',\r\n      'krych',\r\n      'nyth',\r\n      'slyth',\r\n      'gaan',\r\n      'xaas',\r\n      'boak',\r\n      'ruaak',\r\n      'yalm',\r\n      'haerx',\r\n      'iex',\r\n      'draum',\r\n      'gaur',\r\n      'glaur',\r\n      'rauk',\r\n      'saur',\r\n      'duum',\r\n      'nuur',\r\n      'ruun',\r\n    ],\r\n  },\r\n  empyreal: {\r\n    prefixes: [\r\n      'adan',\r\n      'asan',\r\n      'jasan',\r\n      'palant',\r\n      'sarnat',\r\n      'valmar',\r\n      'adrast',\r\n      'asarn',\r\n      'jasarm',\r\n      'palor',\r\n      'solar',\r\n      'valnar',\r\n      'alant',\r\n      'astar',\r\n      'javral',\r\n      'raman',\r\n      'talan',\r\n      'valnor',\r\n      'amad',\r\n      'atar',\r\n      'kalad',\r\n      'ranal',\r\n      'talar',\r\n      'valon',\r\n      'aman',\r\n      'atlan',\r\n      'kalar',\r\n      'ranar',\r\n      'talas',\r\n      'valor',\r\n      'amar',\r\n      'avar',\r\n      'kalas',\r\n      'rasan',\r\n      'talon',\r\n      'vanar',\r\n      'amars',\r\n      'avlant',\r\n      'kalast',\r\n      'ravan',\r\n      'taran',\r\n      'varal',\r\n      'amart',\r\n      'avral',\r\n      'kasal',\r\n      'samar',\r\n      'taval',\r\n      'varam',\r\n      'ansam',\r\n      'jalan',\r\n      'katarn',\r\n      'saran',\r\n      'valant',\r\n      'varan',\r\n      'arad',\r\n      'jalkar',\r\n      'kaval',\r\n      'sarat',\r\n      'valar',\r\n      'varat',\r\n      'aram',\r\n      'jaran',\r\n      'klaron',\r\n      'sardan',\r\n      'valdor',\r\n      'vardar',\r\n      'aran',\r\n      'jasal',\r\n      'palad',\r\n      'sardar',\r\n      'valkar',\r\n      'voltar',\r\n    ],\r\n    maleSuffixes: ['al', 'an', 'ar', 'as', 'at', 'ath', 'ath', 'ath', 'anth', 'athal', 'athar', 'athas'],\r\n    femaleSuffixes: ['el', 'en', 'er', 'es', 'et', 'eth', 'eth', 'eth', 'enth', 'eleth', 'ereth', 'eseth'],\r\n    titles: ['ar-', 'sar-', 'tar-', 'var-', 'jal-', 'kal-', 'pal-', 'ral-', 'tal-'],\r\n  },\r\n};\r\n\r\nexport const SPECIES_GENERATORS = {\r\n  getGoblinName: function () {\r\n    return (\r\n      names.vileAndCrude.small[Math.floor(Math.random() * names.vileAndCrude.small.length)].capitalize() +\r\n      names.vileAndCrude.small[Math.floor(Math.random() * names.vileAndCrude.small.length)]\r\n    );\r\n  },\r\n  getOrcName: function () {\r\n    return (\r\n      names.vileAndCrude.medium[Math.floor(Math.random() * names.vileAndCrude.medium.length)].capitalize() +\r\n      names.vileAndCrude.medium[Math.floor(Math.random() * names.vileAndCrude.medium.length)]\r\n    );\r\n  },\r\n  getOgreName: function () {\r\n    return (\r\n      names.vileAndCrude.large[Math.floor(Math.random() * names.vileAndCrude.large.length)].capitalize() +\r\n      names.vileAndCrude.large[Math.floor(Math.random() * names.vileAndCrude.large.length)]\r\n    );\r\n  },\r\n  getMaleCavemenName: function () {\r\n    var d10 = Math.floor(Math.random() * 10) + 1,\r\n      name = names.primitive.names[Math.floor(Math.random() * names.primitive.names.length)].capitalize();\r\n\r\n    if (d10 > 3) {\r\n      name += '-' + names.primitive.names[Math.floor(Math.random() * names.primitive.names.length)].capitalize();\r\n    }\r\n\r\n    if (d10 > 8) {\r\n      name += '-' + names.primitive.names[Math.floor(Math.random() * names.primitive.names.length)].capitalize();\r\n    }\r\n\r\n    return name;\r\n  },\r\n  getFemaleCavemenName: function () {\r\n    var name = names.primitive.names[Math.floor(Math.random() * names.primitive.names.length)].capitalize();\r\n    if (Math.random() >= 0.5) {\r\n      name += '-' + names.primitive.names[Math.floor(Math.random() * names.primitive.names.length)].capitalize();\r\n    }\r\n    name += '-' + names.primitive.suffixes[Math.floor(Math.random() * names.primitive.suffixes.length)].capitalize();\r\n\r\n    return name;\r\n  },\r\n  getMaleDwarfName: function () {\r\n    var name = names.doughty.syllabes[Math.floor(Math.random() * names.doughty.syllabes.length)].capitalize();\r\n\r\n    if (Math.random() > 0.8) {\r\n      name += isVowel(name.slice(-1)) ? 'r' : 'i';\r\n    } else {\r\n      name += names.doughty.maleSuffixes[Math.floor(Math.random() * names.doughty.maleSuffixes.length)];\r\n    }\r\n\r\n    return name;\r\n  },\r\n  getFemaleDwarfName: function () {\r\n    var name = names.doughty.syllabes[Math.floor(Math.random() * names.doughty.syllabes.length)].capitalize();\r\n\r\n    if (Math.random() > 0.8) {\r\n      name += isVowel(name.slice(-1)) ? 'ra' : 'a';\r\n    } else {\r\n      name += names.doughty.femaleSuffixes[Math.floor(Math.random() * names.doughty.femaleSuffixes.length)];\r\n    }\r\n\r\n    return name;\r\n  },\r\n  getMaleHalflingName: function () {\r\n    var name =\r\n      names.homely.syllabes[Math.floor(Math.random() * names.homely.syllabes.length)].capitalize() +\r\n      names.homely.maleSuffixes[Math.floor(Math.random() * names.homely.maleSuffixes.length)];\r\n\r\n    if (Math.random() > 0.7) {\r\n      name += ' ' + names.familyName.english[Math.floor(Math.random() * names.familyName.english.length)];\r\n    }\r\n\r\n    return name;\r\n  },\r\n  getFemaleHalflingName: function () {\r\n    var name =\r\n      names.homely.syllabes[Math.floor(Math.random() * names.homely.syllabes.length)].capitalize() +\r\n      names.homely.femaleSuffixes[Math.floor(Math.random() * names.homely.femaleSuffixes.length)];\r\n\r\n    if (Math.random() > 0.7) {\r\n      name += ' ' + names.familyName.english[Math.floor(Math.random() * names.familyName.english.length)];\r\n    }\r\n\r\n    return name;\r\n  },\r\n  getMaleGnomeName: function () {\r\n    var name = names.doughty.syllabes[Math.floor(Math.random() * names.doughty.syllabes.length)].capitalize();\r\n\r\n    if (isVowel(name.slice(-1))) {\r\n      name += 'l';\r\n    }\r\n\r\n    name += names.homely.maleSuffixes[Math.floor(Math.random() * names.homely.maleSuffixes.length)];\r\n\r\n    if (Math.random() > 0.7) {\r\n      name += ' ' + names.familyName.scottish[Math.floor(Math.random() * names.familyName.scottish.length)];\r\n    }\r\n\r\n    return name;\r\n  },\r\n  getFemaleGnomeName: function () {\r\n    var name = names.doughty.syllabes[Math.floor(Math.random() * names.doughty.syllabes.length)].capitalize();\r\n\r\n    if (isVowel(name.slice(-1))) {\r\n      name += 'l';\r\n    }\r\n\r\n    name += names.homely.femaleSuffixes[Math.floor(Math.random() * names.homely.femaleSuffixes.length)];\r\n\r\n    if (Math.random() > 0.7) {\r\n      name += ' ' + names.familyName.scottish[Math.floor(Math.random() * names.familyName.scottish.length)];\r\n    }\r\n\r\n    return name;\r\n  },\r\n  getMaleElfName: function () {\r\n    return (\r\n      names.fairAndNoble.elfprefixes[Math.floor(Math.random() * names.fairAndNoble.elfprefixes.length)].capitalize() +\r\n      names.fairAndNoble.middle[Math.floor(Math.random() * names.fairAndNoble.middle.length)] +\r\n      names.fairAndNoble.maleSuffixes[Math.floor(Math.random() * names.fairAndNoble.maleSuffixes.length)]\r\n    );\r\n  },\r\n  getFemaleElfName: function () {\r\n    return (\r\n      names.fairAndNoble.elfprefixes[Math.floor(Math.random() * names.fairAndNoble.elfprefixes.length)].capitalize() +\r\n      names.fairAndNoble.middle[Math.floor(Math.random() * names.fairAndNoble.middle.length)] +\r\n      names.fairAndNoble.femaleSuffixes[Math.floor(Math.random() * names.fairAndNoble.femaleSuffixes.length)]\r\n    );\r\n  },\r\n  getAlternateMaleElfName: function () {\r\n    return (\r\n      names.fairAndNoble.alternativeElfPrefixes[\r\n        Math.floor(Math.random() * names.fairAndNoble.alternativeElfPrefixes.length)\r\n      ].capitalize() +\r\n      names.fairAndNoble.middle[Math.floor(Math.random() * names.fairAndNoble.middle.length)] +\r\n      names.fairAndNoble.femaleSuffixes[Math.floor(Math.random() * names.fairAndNoble.femaleSuffixes.length)]\r\n    );\r\n  },\r\n  getAlternateFemaleElfName: function () {\r\n    return (\r\n      names.fairAndNoble.alternativeElfPrefixes[\r\n        Math.floor(Math.random() * names.fairAndNoble.alternativeElfPrefixes.length)\r\n      ].capitalize() +\r\n      names.fairAndNoble.middle[Math.floor(Math.random() * names.fairAndNoble.middle.length)] +\r\n      names.fairAndNoble.maleSuffixes[Math.floor(Math.random() * names.fairAndNoble.maleSuffixes.length)]\r\n    );\r\n  },\r\n  getMaleFaerykindName: function () {\r\n    return (\r\n      names.faerykind.prefixes[Math.floor(Math.random() * names.faerykind.prefixes.length)].capitalize() +\r\n      names.faerykind.maleSuffixes[Math.floor(Math.random() * names.faerykind.maleSuffixes.length)]\r\n    );\r\n  },\r\n  getFemaleFaerykindName: function () {\r\n    return (\r\n      names.faerykind.prefixes[Math.floor(Math.random() * names.faerykind.prefixes.length)].capitalize() +\r\n      names.faerykind.femaleSuffixes[Math.floor(Math.random() * names.faerykind.femaleSuffixes.length)]\r\n    );\r\n  },\r\n  getAlternateMaleFaerykindName: function () {\r\n    return (\r\n      names.alternativeFaerykind.prefixes[\r\n        Math.floor(Math.random() * names.alternativeFaerykind.prefixes.length)\r\n      ].capitalize() +\r\n      names.alternativeFaerykind.maleSuffixes[\r\n        Math.floor(Math.random() * names.alternativeFaerykind.maleSuffixes.length)\r\n      ]\r\n    );\r\n  },\r\n  getAlternateFemaleFaerykindName: function () {\r\n    return (\r\n      names.alternativeFaerykind.prefixes[\r\n        Math.floor(Math.random() * names.alternativeFaerykind.prefixes.length)\r\n      ].capitalize() +\r\n      names.alternativeFaerykind.femaleSuffixes[\r\n        Math.floor(Math.random() * names.alternativeFaerykind.femaleSuffixes.length)\r\n      ]\r\n    );\r\n  },\r\n  getMaleDarkElfName: function () {\r\n    var name =\r\n      names.elegantEvil.prefixesDarkElves[\r\n        Math.floor(Math.random() * names.elegantEvil.prefixesDarkElves.length)\r\n      ].capitalize();\r\n\r\n    if (Math.random() > 1 / 6) {\r\n      name += names.elegantEvil.middle[Math.floor(Math.random() * names.elegantEvil.middle.length)];\r\n    }\r\n\r\n    name += names.elegantEvil.maleSuffixes[Math.floor(Math.random() * names.elegantEvil.maleSuffixes.length)];\r\n\r\n    return name;\r\n  },\r\n  getFemaleDarkElfName: function () {\r\n    var name =\r\n      names.elegantEvil.prefixesDarkElves[\r\n        Math.floor(Math.random() * names.elegantEvil.prefixesDarkElves.length)\r\n      ].capitalize();\r\n\r\n    if (Math.random() > 1 / 6) {\r\n      name += names.elegantEvil.middle[Math.floor(Math.random() * names.elegantEvil.middle.length)];\r\n    }\r\n\r\n    name += names.elegantEvil.femaleSuffixes[Math.floor(Math.random() * names.elegantEvil.femaleSuffixes.length)];\r\n\r\n    return name;\r\n  },\r\n  getAlternateMaleDarkElfName: function () {\r\n    var name =\r\n      names.elegantEvil.prefixesAlternateDarkElves[\r\n        Math.floor(Math.random() * names.elegantEvil.prefixesAlternateDarkElves.length)\r\n      ].capitalize();\r\n\r\n    if (Math.random() > 1 / 6) {\r\n      name += names.elegantEvil.middle[Math.floor(Math.random() * names.elegantEvil.middle.length)];\r\n    }\r\n\r\n    name += names.elegantEvil.maleSuffixes[Math.floor(Math.random() * names.elegantEvil.maleSuffixes.length)];\r\n\r\n    return name;\r\n  },\r\n  getAlternateFemaleDarkElfName: function () {\r\n    var name =\r\n      names.elegantEvil.prefixesAlternateDarkElves[\r\n        Math.floor(Math.random() * names.elegantEvil.prefixesAlternateDarkElves.length)\r\n      ].capitalize();\r\n\r\n    if (Math.random() > 1 / 6) {\r\n      name += names.elegantEvil.middle[Math.floor(Math.random() * names.elegantEvil.middle.length)];\r\n    }\r\n\r\n    name += names.elegantEvil.femaleSuffixes[Math.floor(Math.random() * names.elegantEvil.femaleSuffixes.length)];\r\n\r\n    return name;\r\n  },\r\n  getMaleHalfDemonName: function () {\r\n    return (\r\n      names.malevolent.prefixes[Math.floor(Math.random() * names.malevolent.prefixes.length)].capitalize() +\r\n      names.malevolent.maleSuffixes[Math.floor(Math.random() * names.malevolent.maleSuffixes.length)]\r\n    );\r\n  },\r\n  getFemaleHalfDemonName: function () {\r\n    return (\r\n      names.malevolent.prefixes[Math.floor(Math.random() * names.malevolent.prefixes.length)].capitalize() +\r\n      names.malevolent.femaleSuffixes[Math.floor(Math.random() * names.malevolent.femaleSuffixes.length)]\r\n    );\r\n  },\r\n  getMaleDragonName: function () {\r\n    return (\r\n      names.draconic.prefixes[Math.floor(Math.random() * names.draconic.prefixes.length)].capitalize() +\r\n      names.draconic.suffixes[Math.floor(Math.random() * names.draconic.suffixes.length)]\r\n    );\r\n  },\r\n  getFemaleDragonName: function () {\r\n    var name = names.draconic.prefixes[Math.floor(Math.random() * names.draconic.prefixes.length)].capitalize(),\r\n      suffix = names.draconic.suffixes[Math.floor(Math.random() * names.draconic.suffixes.length)];\r\n\r\n    if (suffix === 'bazius') {\r\n      suffix = 'bazia';\r\n    } else if (suffix.slice(-2) === 'os') {\r\n      suffix = suffix.slice(0, -2);\r\n      suffix += 'ossa';\r\n    } else {\r\n      suffix += 'is';\r\n    }\r\n\r\n    return name + suffix;\r\n  },\r\n  getDemonName: function () {\r\n    var d6 = Math.floor(Math.random() * 6) + 1,\r\n      name;\r\n\r\n    if (d6 === 1) {\r\n      name =\r\n        names.infernal.softs[Math.floor(Math.random() * names.infernal.softs.length)].capitalize() +\r\n        names.infernal.dulls[Math.floor(Math.random() * names.infernal.dulls.length)];\r\n    } else if (d6 === 2) {\r\n      name =\r\n        names.infernal.softs[Math.floor(Math.random() * names.infernal.softs.length)].capitalize() +\r\n        names.infernal.sharps[Math.floor(Math.random() * names.infernal.sharps.length)];\r\n    } else if (d6 === 3) {\r\n      name =\r\n        names.infernal.dulls[Math.floor(Math.random() * names.infernal.dulls.length)].capitalize() +\r\n        names.infernal.softs[Math.floor(Math.random() * names.infernal.softs.length)];\r\n    } else if (d6 === 4) {\r\n      name =\r\n        names.infernal.dulls[Math.floor(Math.random() * names.infernal.dulls.length)].capitalize() +\r\n        names.infernal.sharps[Math.floor(Math.random() * names.infernal.sharps.length)];\r\n    } else if (d6 === 5) {\r\n      name =\r\n        names.infernal.sharps[Math.floor(Math.random() * names.infernal.sharps.length)].capitalize() +\r\n        names.infernal.softs[Math.floor(Math.random() * names.infernal.softs.length)];\r\n    } else {\r\n      name =\r\n        names.infernal.sharps[Math.floor(Math.random() * names.infernal.sharps.length)].capitalize() +\r\n        names.infernal.dulls[Math.floor(Math.random() * names.infernal.dulls.length)];\r\n    }\r\n\r\n    return name;\r\n  },\r\n  getMaleAngelName: function () {\r\n    var name = names.empyreal.prefixes[Math.floor(Math.random() * names.empyreal.prefixes.length)].capitalize();\r\n\r\n    if (Math.random() <= 1 / 12) {\r\n      if (name.slice(-2) !== 'ar' && name.slice(-2) !== 'al') {\r\n        name = names.empyreal.titles[Math.floor(Math.random() * names.empyreal.titles.length)].capitalize() + name;\r\n      } else if (name.slice(-2) === 'ar') {\r\n        name = names.empyreal.titles[Math.floor(Math.random() * 4) + 4].capitalize() + name;\r\n      } else {\r\n        name = names.empyreal.titles[Math.floor(Math.random() * 4)].capitalize() + name;\r\n      }\r\n    } else {\r\n      name += names.empyreal.maleSuffixes[Math.floor(Math.random() * names.empyreal.maleSuffixes.length)];\r\n    }\r\n\r\n    return name;\r\n  },\r\n  getFemaleAngelName: function () {\r\n    var name = names.empyreal.prefixes[Math.floor(Math.random() * names.empyreal.prefixes.length)].capitalize();\r\n\r\n    if (Math.random() <= 1 / 12) {\r\n      name = name.substr(0, name.lastIndexOf('a')) + 'e' + name.substr(name.lastIndexOf('a') + 1); // Replace the last 'a' by a 'e' for female\r\n\r\n      if (name.slice(-2) !== 'ar' && name.slice(-2) !== 'al') {\r\n        name = names.empyreal.titles[Math.floor(Math.random() * names.empyreal.titles.length)].capitalize() + name;\r\n      } else if (name.slice(-2) === 'ar') {\r\n        name = names.empyreal.titles[Math.floor(Math.random() * 4)].capitalize() + name;\r\n      } else {\r\n        name = names.empyreal.titles[Math.floor(Math.random() * 4) + 4].capitalize() + name;\r\n      }\r\n    } else {\r\n      name += names.empyreal.femaleSuffixes[Math.floor(Math.random() * names.empyreal.femaleSuffixes.length)];\r\n    }\r\n\r\n    return name;\r\n  },\r\n};\r\n","import { NAME_GENERATOR } from './nameGenerator.js';\r\n\r\nvar mysticOrder = {\r\n    patterns: [\r\n      '<group> of the <entity>',\r\n      '<group> of the <description> <entity>',\r\n      '<description> <group> of the <description> <entity>',\r\n      '<description> <group>',\r\n    ],\r\n    group: {\r\n      cliques: [\r\n        'alliance',\r\n        'association',\r\n        'band',\r\n        'brotherhood',\r\n        'cabal',\r\n        'circle',\r\n        'conclave',\r\n        'confraternity',\r\n        'convocation',\r\n        'coterie',\r\n        'fellowship',\r\n        'fraternity',\r\n        'guild',\r\n        'league',\r\n        'order',\r\n        'siblingship',\r\n        'sisterhood',\r\n        'society',\r\n        'sorority',\r\n      ],\r\n      people: [\r\n        'adepts',\r\n        'apostles',\r\n        'aspirants',\r\n        'brothers',\r\n        'children',\r\n        'colleagues',\r\n        'devotees',\r\n        'disciples',\r\n        'fellows',\r\n        'followers',\r\n        'gentlemen',\r\n        'illuminants',\r\n        'initiates',\r\n        'keepers',\r\n        'ladies',\r\n        'masters',\r\n        'probers',\r\n        'revealers',\r\n        'seekers',\r\n        'servants',\r\n        'siblings',\r\n        'sisters',\r\n        'votaries',\r\n      ],\r\n    },\r\n    description: {\r\n      quality: [\r\n        'ancient',\r\n        'arcane',\r\n        'astral',\r\n        'blinding',\r\n        'bright',\r\n        'brilliant',\r\n        'burning',\r\n        'bygone',\r\n        'cardinal',\r\n        'celestial',\r\n        'cloudy',\r\n        'concealed',\r\n        'cosmic',\r\n        'dark',\r\n        'deep',\r\n        'dexter',\r\n        'difficult',\r\n        'dusky',\r\n        'effulgent',\r\n        'elder',\r\n        'elemental',\r\n        'esoteric',\r\n        'eternal',\r\n        'ethereal',\r\n        'existential',\r\n        'forgotten',\r\n        'gloomy',\r\n        'glorious',\r\n        'glowing',\r\n        'gnostic',\r\n        'hidden',\r\n        'ineffable',\r\n        'inner',\r\n        'lost',\r\n        'luminous',\r\n        'lunar',\r\n        'magical',\r\n        'maieutical',\r\n        'mysterious',\r\n        'mystic',\r\n        'occult',\r\n        'penumbral',\r\n        'profound',\r\n        'pure',\r\n        'quintessential',\r\n        'radiant',\r\n        'recondite',\r\n        'resplendent',\r\n        'revealed',\r\n        'sacred',\r\n        'secret',\r\n        'shadowed',\r\n        'shining',\r\n        'sidereal',\r\n        'singing',\r\n        'sinister',\r\n        'solemn',\r\n        'spiral',\r\n        'spiritual',\r\n        'starry',\r\n        'solar',\r\n        'sublime',\r\n        'supernal',\r\n        'timeless',\r\n        'transcendent',\r\n        'true',\r\n        'veiled',\r\n        'zetetic',\r\n      ],\r\n      colour: [\r\n        'amber',\r\n        'amethyst',\r\n        'aquamarine',\r\n        'azure',\r\n        'beryl',\r\n        'black',\r\n        'blue',\r\n        'brazen',\r\n        'bronze',\r\n        'brown',\r\n        'carmine',\r\n        'cerulean',\r\n        'copper',\r\n        'crimson',\r\n        'crystal',\r\n        'ebony',\r\n        'emerald',\r\n        'golden',\r\n        'green',\r\n        'grey',\r\n        'incarnadine',\r\n        'indigo',\r\n        'ivory',\r\n        'jade',\r\n        'jet',\r\n        'malachite',\r\n        'orange',\r\n        'pearly',\r\n        'purple',\r\n        'rainbow',\r\n        'red',\r\n        'rosy',\r\n        'ruby',\r\n        'russet',\r\n        'sable',\r\n        'sapphire',\r\n        'scarlet',\r\n        'silver',\r\n        'topaz',\r\n        'turquoise',\r\n        'umber',\r\n        'vermilion',\r\n        'violaceous',\r\n        'violet',\r\n        'viridian',\r\n        'white',\r\n        'yellow',\r\n      ],\r\n    },\r\n    entities: [\r\n      'arcana',\r\n      'beyond',\r\n      'chalice',\r\n      'chamber',\r\n      'cloud',\r\n      'cowl',\r\n      'crown',\r\n      'crystal',\r\n      'darkness',\r\n      'dawn',\r\n      'day',\r\n      'doctrine',\r\n      'dominion',\r\n      'energy',\r\n      'enlightenment',\r\n      'eye',\r\n      'faith',\r\n      'fane',\r\n      'fire',\r\n      'flame',\r\n      'fountain',\r\n      'gate',\r\n      'glyph',\r\n      'grail',\r\n      'hand',\r\n      'harmony',\r\n      'heart',\r\n      'helix',\r\n      'influence',\r\n      'insight',\r\n      'key',\r\n      'knowledge',\r\n      'learning',\r\n      'light',\r\n      'lore',\r\n      'mantle',\r\n      'mastery',\r\n      'mind',\r\n      'moon',\r\n      'mystery',\r\n      'night',\r\n      'orb',\r\n      'path',\r\n      'pentacle',\r\n      'pillar',\r\n      'pool',\r\n      'portal',\r\n      'power',\r\n      'pyramid',\r\n      'question',\r\n      'radiance',\r\n      'rainbow',\r\n      'revelation',\r\n      'robe',\r\n      'rod',\r\n      'sapience',\r\n      'sceptre',\r\n      'scroll',\r\n      'secret',\r\n      'shadow',\r\n      'shrine',\r\n      'sigil',\r\n      'sign',\r\n      'sky',\r\n      'space',\r\n      'sphere',\r\n      'spring',\r\n      'staff',\r\n      'star',\r\n      'stone',\r\n      'sun',\r\n      'symbol',\r\n      'teaching',\r\n      'temple',\r\n      'throne',\r\n      'time',\r\n      'truth',\r\n      'twilight',\r\n      'veil',\r\n      'verity',\r\n      'void',\r\n      'wand',\r\n      'way',\r\n      'wisdom',\r\n      'word',\r\n      'world',\r\n    ],\r\n  },\r\n  militaryUnit = {\r\n    patterns: [\r\n      \"<commander>'s <group>\",\r\n      '<description> <group>',\r\n      '<description> <description> <group>',\r\n      '<group> of the <place>',\r\n    ],\r\n    groups: [\r\n      //team\r\n      [\r\n        'armada',\r\n        'army',\r\n        'battalion',\r\n        'brigade',\r\n        'cohort',\r\n        'commandos',\r\n        'company',\r\n        'contingent',\r\n        'division',\r\n        'fleet',\r\n        'force',\r\n        'garrison',\r\n        'guard',\r\n        'legion',\r\n        'militia',\r\n        'patrol',\r\n        'phalanx',\r\n        'platoon',\r\n        'regiment',\r\n        'section',\r\n        'sentinel',\r\n        'sentry',\r\n        'squad',\r\n        'squadron',\r\n        'troop',\r\n        'vanguard',\r\n      ],\r\n      //soldiers\r\n      [\r\n        'avengers',\r\n        'champions',\r\n        'elite',\r\n        'fighters',\r\n        'janissaries',\r\n        'marines',\r\n        'paladins',\r\n        'riders',\r\n        'skirmishers',\r\n        'soldiers',\r\n        'troopers',\r\n        'veterans',\r\n        'victors',\r\n        'warriors',\r\n      ],\r\n      //warders\r\n      [\r\n        'crusaders',\r\n        'defenders',\r\n        'guardians',\r\n        'guards',\r\n        'keepers',\r\n        'knights',\r\n        'lords',\r\n        'preservers',\r\n        'protectors',\r\n        'rangers',\r\n        'sentinels',\r\n        'sentries',\r\n        'wardens',\r\n        'warders',\r\n        'watchers',\r\n      ],\r\n      //mercenaries\r\n      ['bandits', 'destroyers', 'devourers', 'marauders', 'pirates', 'raptors', 'reavers'],\r\n      //gear\r\n      [\r\n        'arrows',\r\n        'axes',\r\n        'blades',\r\n        'bows',\r\n        'bucklers',\r\n        'claws',\r\n        'daggers',\r\n        'darts',\r\n        'fangs',\r\n        'fists',\r\n        'flails',\r\n        'gauntlets',\r\n        'halberds',\r\n        'hammers',\r\n        'helms',\r\n        'knives',\r\n        'lances',\r\n        'maces',\r\n        'pikes',\r\n        'scythes',\r\n        'shields',\r\n        'spears',\r\n        'swords',\r\n        'talons',\r\n        'teeth',\r\n      ],\r\n      //creatures\r\n      [\r\n        'angels',\r\n        'basilisks',\r\n        'cobras',\r\n        'demons',\r\n        'devils',\r\n        'eagles',\r\n        'falcons',\r\n        'griffins',\r\n        'hawks',\r\n        'hounds',\r\n        'jaguars',\r\n        'lions',\r\n        'panthers',\r\n        'rats',\r\n        'scorpions',\r\n        'sharks',\r\n        'tigers',\r\n        'vipers',\r\n        'wolves',\r\n      ],\r\n    ],\r\n    description: {\r\n      colour: ['black', 'white', 'red', 'gold', 'silver', 'iron', 'blue', 'green', 'grey'],\r\n      other: [\r\n        'battle',\r\n        'blood',\r\n        'bolt',\r\n        'bone',\r\n        'chaos',\r\n        'dark',\r\n        'death',\r\n        'dire',\r\n        'doom',\r\n        'fire',\r\n        'flame',\r\n        'free',\r\n        'high',\r\n        'law',\r\n        'light',\r\n        'lightning',\r\n        'moon',\r\n        'night',\r\n        'rune',\r\n        'sea',\r\n        'skull',\r\n        'star',\r\n        'storm',\r\n        'sun',\r\n        'thunder',\r\n        'thunderbolt',\r\n        'torch',\r\n        'war',\r\n        'wave',\r\n        'wind',\r\n        'wing',\r\n        'wrath',\r\n      ],\r\n    },\r\n    places: {\r\n      seas: ['billow', 'breaker', 'brine', 'deep', 'foam', 'main', 'ocean', 'sea', 'surf', 'swell', 'water', 'wave'],\r\n      lands: [\r\n        'cave',\r\n        'cavern',\r\n        'city',\r\n        'crag',\r\n        'dell',\r\n        'desert',\r\n        'earth',\r\n        'forest',\r\n        'grove',\r\n        'hall',\r\n        'hill',\r\n        'hinterland',\r\n        'isle',\r\n        'lake',\r\n        'land',\r\n        'march',\r\n        'marsh',\r\n        'path',\r\n        'plain',\r\n        'province',\r\n        'range',\r\n        'river',\r\n        'rock',\r\n        'sand',\r\n        'shore',\r\n        'stone',\r\n        'stream',\r\n        'tower',\r\n        'trail',\r\n        'valley',\r\n        'water',\r\n        'way',\r\n        'wood',\r\n      ],\r\n    },\r\n  },\r\n  thievesAndAssassins = {\r\n    roles: [\r\n      'arrangers',\r\n      'bestowers',\r\n      'disbursers',\r\n      'disposers',\r\n      'harmonisers',\r\n      'reconcilers',\r\n      'regulators',\r\n      'reinstaters',\r\n      'restorers',\r\n    ],\r\n    goals: [\r\n      'balance',\r\n      'congruity',\r\n      'correlation',\r\n      'correspondence',\r\n      'equilibrium',\r\n      'equipoise',\r\n      'equity',\r\n      'equivalence',\r\n      'parity',\r\n      'symmetry',\r\n    ],\r\n    adjectives: [\r\n      'acute',\r\n      'apposite',\r\n      'apt',\r\n      'decisive',\r\n      'dependable',\r\n      'extreme',\r\n      'faithful',\r\n      'final',\r\n      'fitting',\r\n      'impartial',\r\n      'reliable',\r\n      'supreme',\r\n      'ultimate',\r\n      'utmost',\r\n    ],\r\n    actions: [\r\n      'action',\r\n      'justice',\r\n      'reckoning',\r\n      'recompense',\r\n      'redress',\r\n      'reparation',\r\n      'reprisal',\r\n      'requital',\r\n      'retribution',\r\n      'satisfaction',\r\n      'vindication',\r\n    ],\r\n    titles: ['alliance', 'association', 'company', 'corporation', 'organisation', 'society', 'syndicate'],\r\n    descriptions: [\r\n      'black',\r\n      'cloud',\r\n      'dark',\r\n      'dim',\r\n      'dusk',\r\n      'fog',\r\n      'gloom',\r\n      'grey',\r\n      'night',\r\n      'shade',\r\n      'shadow',\r\n      'smoke',\r\n      'quiet',\r\n      'subtle',\r\n      'whispering',\r\n      'bloody',\r\n      'hidden',\r\n      'red',\r\n      'ready',\r\n      'sharp',\r\n      'sudden',\r\n    ],\r\n    groups: [\r\n      //weapon\r\n      ['blade', 'bolt', 'claw', 'dagger', 'dirk', 'fang', 'hand', 'knife'],\r\n      //item\r\n      ['balance', 'hourglass', 'scales', 'cloak', 'cowl', 'hand', 'hood', 'mantle', 'mask'],\r\n      //creature\r\n      ['snake', 'scorpion', 'spider', 'bat', 'cat', 'daw', 'dog', 'owl', 'pye', 'rat', 'weasel'],\r\n      //action\r\n      ['bring', 'find', 'hunt', 'kill', 'search', 'seek', 'shadow', 'slay', 'stalk'],\r\n    ],\r\n  };\r\n\r\nexport const GROUP_GENERATORS = {\r\n  getMysticOrderName: function () {\r\n    var options = {\r\n        group: Math.random() < 0.5 ? mysticOrder.group.cliques : mysticOrder.group.people,\r\n        entity: mysticOrder.entities,\r\n        description: mysticOrder.description.quality.concat(mysticOrder.description.colour),\r\n      },\r\n      d10 = Math.floor(Math.random() * 10) + 1,\r\n      name;\r\n\r\n    if (d10 < 2) {\r\n      name = mysticOrder.patterns[0];\r\n    } else if (d10 < 9) {\r\n      name = mysticOrder.patterns[1];\r\n    } else if (d10 < 10) {\r\n      name = mysticOrder.patterns[2];\r\n    } else {\r\n      name = mysticOrder.patterns[3];\r\n    }\r\n\r\n    return name.replace(/<([\\w\\W]*?)>/g, function (match) {\r\n      match = match.replace(/<|>/g, '');\r\n      return options[match][Math.floor(Math.random() * options[match].length)].capitalize();\r\n    });\r\n  },\r\n  getMilitaryUnitsName: function () {\r\n    var options = {\r\n        commander: [],\r\n        group: militaryUnit.groups[Math.floor(Math.random() * 6)].slice(),\r\n        description: militaryUnit.description.colour.concat(militaryUnit.description.other).slice(),\r\n        place: militaryUnit.places.seas.concat(militaryUnit.places.lands).slice(),\r\n      },\r\n      d10 = Math.floor(Math.random() * 10) + 1,\r\n      name;\r\n\r\n    if (d10 < 2) {\r\n      options.commander = [NAME_GENERATOR.getFantasyName()];\r\n      name = militaryUnit.patterns[0];\r\n    } else if (d10 < 8) {\r\n      name = militaryUnit.patterns[1];\r\n    } else if (d10 < 10) {\r\n      name = militaryUnit.patterns[2];\r\n    } else {\r\n      name = militaryUnit.patterns[3];\r\n    }\r\n\r\n    return name.replace(/<([\\w\\W]*?)>/g, function (match) {\r\n      var item, index;\r\n\r\n      match = match.replace(/<|>/g, '');\r\n      item = options[match][Math.floor(Math.random() * options[match].length)];\r\n      index = options[match].indexOf(item);\r\n\r\n      if (index > -1) {\r\n        // Remove item from copied array (.slice()) to avoid duplicates\r\n        options[match].splice(index, 1);\r\n      }\r\n\r\n      return item.capitalize();\r\n    });\r\n  },\r\n  getThievesAndAssassinsName: function () {\r\n    var d30 = Math.floor(Math.random() * 30) + 1,\r\n      rngGroup,\r\n      name;\r\n\r\n    if (d30 < 6) {\r\n      name =\r\n        thievesAndAssassins.roles[Math.floor(Math.random() * thievesAndAssassins.roles.length)].capitalize() +\r\n        ' of ' +\r\n        thievesAndAssassins.goals[Math.floor(Math.random() * thievesAndAssassins.goals.length)].capitalize();\r\n    } else if (d30 < 11) {\r\n      name =\r\n        thievesAndAssassins.adjectives[Math.floor(Math.random() * thievesAndAssassins.adjectives.length)].capitalize() +\r\n        ' ' +\r\n        thievesAndAssassins.actions[Math.floor(Math.random() * thievesAndAssassins.actions.length)].capitalize() +\r\n        ' ' +\r\n        thievesAndAssassins.titles[Math.floor(Math.random() * thievesAndAssassins.titles.length)].capitalize();\r\n    } else {\r\n      name =\r\n        thievesAndAssassins.descriptions[\r\n          Math.floor(Math.random() * thievesAndAssassins.descriptions.length)\r\n        ].capitalize();\r\n      rngGroup = thievesAndAssassins.groups[Math.floor(Math.random() * thievesAndAssassins.groups.length)];\r\n      name += ' ' + rngGroup[Math.floor(Math.random() * rngGroup.length)].capitalize();\r\n    }\r\n\r\n    return name;\r\n  },\r\n};\r\n","var names = [\r\n  // One syllabe\r\n  [\r\n    'Aind',\r\n    'Ainn',\r\n    'Airk',\r\n    'Aitze',\r\n    'Ald',\r\n    'Ance',\r\n    'Anxe',\r\n    'Ard',\r\n    'Ashf',\r\n    'Aulg',\r\n    'Aun',\r\n    'Aure',\r\n    'Authe',\r\n    'Baelt',\r\n    'Bakh',\r\n    'Bal',\r\n    'Balt',\r\n    'Balthe',\r\n    'Barg',\r\n    'Barll',\r\n    'Bauce',\r\n    'Baysc',\r\n    'Beek',\r\n    'Beele',\r\n    'Berl',\r\n    'Bersch',\r\n    'Beyn',\r\n    'Bhozt',\r\n    'Birme',\r\n    'Birr',\r\n    'Bjanc',\r\n    'Blaen',\r\n    'Blize',\r\n    'Blouch',\r\n    'Blurk',\r\n    'Blynze',\r\n    'Bokk',\r\n    'Borl',\r\n    'Borse',\r\n    'Brahl',\r\n    'Brakk',\r\n    'Bralk',\r\n    'Brang',\r\n    'Brann',\r\n    'Branth',\r\n    'Brem',\r\n    'Bress',\r\n    'Breun',\r\n    'Briint',\r\n    'Brill',\r\n    'Brize',\r\n    'Brod',\r\n    'Broik',\r\n    'Brolt',\r\n    'Bront',\r\n    'Broozh',\r\n    'Brosck',\r\n    'Broud',\r\n    'Brud',\r\n    'Brule',\r\n    'Brun',\r\n    'Bulse',\r\n    'Bunth',\r\n    'Byar',\r\n    'Byst',\r\n    'Caer',\r\n    'Cail',\r\n    'Canth',\r\n    'Carn',\r\n    'Cayrl',\r\n    'Ceyt',\r\n    'Chaeng',\r\n    'Chail',\r\n    'Chaith',\r\n    'Chal',\r\n    'Chalm',\r\n    'Charg',\r\n    'Charn',\r\n    'Chave',\r\n    'Chayle',\r\n    'Chaze',\r\n    'Cheal',\r\n    'Cheev',\r\n    'Chel',\r\n    'Chern',\r\n    'Cherze',\r\n    'Chezl',\r\n    'Chilk',\r\n    'Chlenk',\r\n    'Choalg',\r\n    'Choje',\r\n    'Chor',\r\n    'Chorl',\r\n    'Chorsk',\r\n    'Chounce',\r\n    'Chraq',\r\n    'Chrarr',\r\n    'Chrem',\r\n    'Chrent',\r\n    'Chriyb',\r\n    'Chroad',\r\n    'Chud',\r\n    'Chuz',\r\n    'Claed',\r\n    'Clart',\r\n    'Clesh',\r\n    'Cloup',\r\n    'Clour',\r\n    'Clowr',\r\n    'Coll',\r\n    'Corb',\r\n    'Corje',\r\n    'Corm',\r\n    'Corme',\r\n    'Crade',\r\n    'Creeg',\r\n    'Croold',\r\n    'Croyn',\r\n    'Cthon',\r\n    'Cush',\r\n    'Daalx',\r\n    'Dahr',\r\n    'Daig',\r\n    'Dal',\r\n    'Darm',\r\n    'Darsh',\r\n    'Darze',\r\n    'Dashf',\r\n    'Dask',\r\n    'Datz',\r\n    'Daug',\r\n    'Dawl',\r\n    'Deelth',\r\n    'Deerch',\r\n    'Derd',\r\n    'Derle',\r\n    'Dest',\r\n    'Deuth',\r\n    'Dex',\r\n    'Dhaant',\r\n    'Dherl',\r\n    'Dhoul',\r\n    'Dhuul',\r\n    'Dhuur',\r\n    'Dinz',\r\n    'Dlak',\r\n    'Dlask',\r\n    'Dlir',\r\n    'Doag',\r\n    'Dolc',\r\n    'Dorse',\r\n    'Dralg',\r\n    'Dram',\r\n    'Dran',\r\n    'Drance',\r\n    'Drath',\r\n    'Drax',\r\n    'Draygg',\r\n    'Dreact',\r\n    'Dreed',\r\n    'Dreeg',\r\n    'Dreen',\r\n    'Dreev',\r\n    'Drelm',\r\n    'Drelth',\r\n    'Drerle',\r\n    'Drewm',\r\n    'Drilm',\r\n    'Drinn',\r\n    'Drism',\r\n    'Drissth',\r\n    'Drix',\r\n    'Droale',\r\n    'Drojj',\r\n    'Drom',\r\n    'Droxe',\r\n    'Droy',\r\n    'Drun',\r\n    'Drust',\r\n    'Druuth',\r\n    'Dryle',\r\n    'Drynn',\r\n    'Drythe',\r\n    'Dvarch',\r\n    'Dwesk',\r\n    'Dzairn',\r\n    'Dzij',\r\n    'Dzym',\r\n    'Eeb',\r\n    'Eenthe',\r\n    'Elb',\r\n    'Emp',\r\n    'Ence',\r\n    'Ench',\r\n    'Eng',\r\n    'Enz',\r\n    'Ept',\r\n    'Erd',\r\n    'Esk',\r\n    'Faig',\r\n    'Falthe',\r\n    'Fanch',\r\n    'Faoth',\r\n    'Fard',\r\n    'Faum',\r\n    'Faz',\r\n    'Feant',\r\n    'Feej',\r\n    'Felg',\r\n    'Fernsh',\r\n    'Fesk',\r\n    'Fess',\r\n    'Feth',\r\n    'Fimth',\r\n    'Fize',\r\n    'Flast',\r\n    'Flatch',\r\n    'Flayre',\r\n    'Flerd',\r\n    'Flersh',\r\n    'Flisp',\r\n    'Florn',\r\n    'Fompt',\r\n    'Fousk',\r\n    'Fraine',\r\n    'Frakk',\r\n    'Fralg',\r\n    'Frast',\r\n    'Fregg',\r\n    'Frem',\r\n    'Fresk',\r\n    'Fretch',\r\n    'Frex',\r\n    'Frike',\r\n    'Frile',\r\n    'Frism',\r\n    'Frold',\r\n    'Frone',\r\n    'Fronx',\r\n    'Frook',\r\n    'Frool',\r\n    'Froy',\r\n    'Frush',\r\n    'Fryx',\r\n    'Fulm',\r\n    'Fyahn',\r\n    'Fyast',\r\n    'Fyorb',\r\n    'Fzek',\r\n    'Fzron',\r\n    'Gair',\r\n    'Galthz',\r\n    'Gand',\r\n    'Gane',\r\n    'Gann',\r\n    'Gart',\r\n    'Gath',\r\n    'Gault',\r\n    'Gawle',\r\n    'Gax',\r\n    'Genze',\r\n    'Gerd',\r\n    'Gez',\r\n    'Gharl',\r\n    'Ghea',\r\n    'Ghenz',\r\n    'Ghorl',\r\n    'Ghorx',\r\n    'Gilft',\r\n    'Gilm',\r\n    'Gire',\r\n    'Glaar',\r\n    'Glain',\r\n    'Glarch',\r\n    'Glaux',\r\n    'Gleeth',\r\n    'Gleev',\r\n    'Gleft',\r\n    'Glekke',\r\n    'Glem',\r\n    'Glice',\r\n    'Glip',\r\n    'Glish',\r\n    'Glith',\r\n    'Gloard',\r\n    'Gloob',\r\n    'Gloorsh',\r\n    'Glosk',\r\n    'Glund',\r\n    'Glyre',\r\n    'Glyth',\r\n    'Gnarre',\r\n    'Golm',\r\n    'Gond',\r\n    'Gorm',\r\n    'Gosp',\r\n    'Goste',\r\n    'Graal',\r\n    'Grall',\r\n    'Greel',\r\n    'Greeld',\r\n    'Greelp',\r\n    'Grend',\r\n    'Grilf',\r\n    'Grimp',\r\n    'Groad',\r\n    'Grond',\r\n    'Groolsh',\r\n    'Gruon',\r\n    'Grux',\r\n    'Gthuu',\r\n    'Gurze',\r\n    'Gwisp',\r\n    'Gwith',\r\n    'Gwosk',\r\n    'Gyorr',\r\n    'Gyz',\r\n    'Haag',\r\n    'Haar',\r\n    'Haask',\r\n    'Hade',\r\n    'Hadj',\r\n    'Halk',\r\n    'Halm',\r\n    'Hane',\r\n    'Harb',\r\n    'Harch',\r\n    'Harg',\r\n    'Harx',\r\n    'Hauke',\r\n    'Haux',\r\n    'Hawlx',\r\n    'Hax',\r\n    'Heerf',\r\n    'Hersh',\r\n    'Hetz',\r\n    'Hezz',\r\n    'Hisk',\r\n    'Hize',\r\n    'Hjorr',\r\n    'Hlare',\r\n    'Hlor',\r\n    'Hoag',\r\n    'Hob',\r\n    'Horl',\r\n    'Horm',\r\n    'Hosh',\r\n    'Hraak',\r\n    'Hrailk',\r\n    'Hreen',\r\n    'Hrine',\r\n    'Hroon',\r\n    'Hrume',\r\n    'Hruse',\r\n    'Huxx',\r\n    'Hythe',\r\n    'Ingg',\r\n    'Jaarge',\r\n    'Jad',\r\n    'Jaerth',\r\n    'Jaig',\r\n    'Jairn',\r\n    'Jal',\r\n    'Jalth',\r\n    'Jance',\r\n    'Jand',\r\n    'Jant',\r\n    'Janx',\r\n    'Jard',\r\n    'Jark',\r\n    'Jarn',\r\n    'Jask',\r\n    'Jath',\r\n    'Jauce',\r\n    'Jaus',\r\n    'Jauth',\r\n    'Jaze',\r\n    'Jeel',\r\n    'Jekk',\r\n    'Jend',\r\n    'Jenx',\r\n    'Jerd',\r\n    'Jern',\r\n    'Jexx',\r\n    'Jhang',\r\n    'Jhaulk',\r\n    'Jhor',\r\n    'Jhure',\r\n    'Jinch',\r\n    'Jind',\r\n    'Jinz',\r\n    'Jirle',\r\n    'Joorm',\r\n    'Jorm',\r\n    'Jorn',\r\n    'Jrond',\r\n    'Jurze',\r\n    'Jusk',\r\n    'Juzz',\r\n    'Jyfe',\r\n    'Jyin',\r\n    'Kaerr',\r\n    'Kaid',\r\n    'Kal',\r\n    'Kamn',\r\n    'Kand',\r\n    'Kang',\r\n    'Kank',\r\n    'Karn',\r\n    'Karth',\r\n    'Karze',\r\n    'Kaune',\r\n    'Kedj',\r\n    'Keek',\r\n    'Keig',\r\n    'Kell',\r\n    'Kelph',\r\n    'Kerce',\r\n    'Kerm',\r\n    'Kerst',\r\n    'Kesp',\r\n    'Keth',\r\n    'Kez',\r\n    'Khaiz',\r\n    'Khal',\r\n    'Khand',\r\n    'Kharb',\r\n    'Kharsp',\r\n    'Khern',\r\n    'Khif',\r\n    'Khond',\r\n    'Khôr',\r\n    'Khorst',\r\n    'Khrev',\r\n    'Kinch',\r\n    'Kish',\r\n    'Kiv',\r\n    'Kjeld',\r\n    'Klaff',\r\n    'Klaz',\r\n    'Kleed',\r\n    'Kloob',\r\n    'Kloohn',\r\n    'Klyne',\r\n    'Kmool',\r\n    'Knaar',\r\n    'Knut',\r\n    'Kolff',\r\n    'Kolg',\r\n    'Konv',\r\n    'Koss',\r\n    'Koul',\r\n    'Krake',\r\n    'Krall',\r\n    'Kranj',\r\n    'Krax',\r\n    'Kreel',\r\n    'Krej',\r\n    'Kremp',\r\n    'Krey',\r\n    'Krile',\r\n    'Krinch',\r\n    'Kroff',\r\n    'Kroll',\r\n    'Krompf',\r\n    'Kuest',\r\n    'Kull',\r\n    'Kulm',\r\n    'Kuon',\r\n    'Kuum',\r\n    'Kvon',\r\n    'Kwask',\r\n    'Kwaz',\r\n    'Kyre',\r\n    'Lach',\r\n    'Laev',\r\n    'Lan',\r\n    'Lantz',\r\n    'Larnste',\r\n    'Lartz',\r\n    'Laur',\r\n    'Lawrg',\r\n    'Layje',\r\n    'Leet',\r\n    'Lenx',\r\n    'Leth',\r\n    'Liln',\r\n    'Liss',\r\n    'Lod',\r\n    'Loec',\r\n    'Lonn',\r\n    'Loord',\r\n    'Loosk',\r\n    'Lound',\r\n    'Luhr',\r\n    'Lumbb',\r\n    'Lurs',\r\n    'Lyrr',\r\n    'Lysk',\r\n    'Maarth',\r\n    'Maec',\r\n    'Maelv',\r\n    'Magh',\r\n    'Mald',\r\n    'Mant',\r\n    'Manth',\r\n    'Mantz',\r\n    'Marb',\r\n    'Mard',\r\n    'Mayxe',\r\n    'Meand',\r\n    'Meeth',\r\n    'Melg',\r\n    'Meln',\r\n    'Merrt',\r\n    'Merzh',\r\n    'Mesp',\r\n    'Mirsp',\r\n    'Mirx',\r\n    'Miskt',\r\n    'Mlö',\r\n    'Mointh',\r\n    'Mool',\r\n    'Moork',\r\n    'Moorthe',\r\n    'Mord',\r\n    'Morl',\r\n    'Moskt',\r\n    'Mox',\r\n    'Mulse',\r\n    'Murlk',\r\n    'Murste',\r\n    'Myrrhne',\r\n    'Naall',\r\n    'Naar',\r\n    'Naaz',\r\n    'Naer',\r\n    'Naik',\r\n    'Naine',\r\n    'Nairx',\r\n    'Nalm',\r\n    'Nanx',\r\n    'Naois',\r\n    'Naphk',\r\n    'Nar',\r\n    'Narct',\r\n    'Narrm',\r\n    'Naulk',\r\n    'Naxx',\r\n    'Naze',\r\n    'Nelq',\r\n    'Nem',\r\n    'Nemn',\r\n    'Nerrz',\r\n    'Ngal',\r\n    'Nime',\r\n    'Nirft',\r\n    'Nisp',\r\n    'Nithe',\r\n    'Noerth',\r\n    'Nolgh',\r\n    'Nool',\r\n    'Noom',\r\n    'Norb',\r\n    'Norle',\r\n    'Noth',\r\n    'Nraeve',\r\n    'Nulth',\r\n    'Nurb',\r\n    'Nuss',\r\n    'Nyalg',\r\n    'Nyalk',\r\n    'Nym',\r\n    'Nynx',\r\n    'Olth',\r\n    'Omm',\r\n    'Omn',\r\n    'Ooon',\r\n    'Ord',\r\n    'Orld',\r\n    'Ornce',\r\n    'Oth',\r\n    'Ounde',\r\n    'Ourne',\r\n    'Paaz',\r\n    'Palch',\r\n    'Parn',\r\n    'Parth',\r\n    'Parzt',\r\n    'Path',\r\n    'Pelk',\r\n    'Pell',\r\n    'Pesm',\r\n    'Phad',\r\n    'Phairn',\r\n    'Phant',\r\n    'Phlarn',\r\n    'Phong',\r\n    'Photz',\r\n    'Phral',\r\n    'Phul',\r\n    'Pirz',\r\n    'Pjanth',\r\n    'Plange',\r\n    'Plaz',\r\n    'Plegg',\r\n    'Plind',\r\n    'Plomb',\r\n    'Plorze',\r\n    'Plumf',\r\n    'Pluun',\r\n    'Pnidd',\r\n    'Poile',\r\n    'Pome',\r\n    'Pould',\r\n    'Praige',\r\n    'Presk',\r\n    'Prike',\r\n    'Prokk',\r\n    'Prook',\r\n    'Prya',\r\n    'Pryle',\r\n    'Prynne',\r\n    'Psarn',\r\n    'Ptenx',\r\n    'Pulge',\r\n    'Pume',\r\n    'Quaan',\r\n    'Quaar',\r\n    'Quagh',\r\n    'Quaild',\r\n    'Quaisth',\r\n    'Qual',\r\n    'Qualt',\r\n    'Quanst',\r\n    'Quanz',\r\n    'Quaoph',\r\n    'Quarl',\r\n    'Quast',\r\n    'Quech',\r\n    'Qued',\r\n    'Quelg',\r\n    'Quelm',\r\n    'Querk',\r\n    'Quigg',\r\n    'Quilg',\r\n    'Quol',\r\n    'Quonj',\r\n    'Quool',\r\n    'Quorze',\r\n    'Quune',\r\n    'Quynd',\r\n    'Raask',\r\n    'Rahm',\r\n    'Raine',\r\n    'Raisth',\r\n    'Ralce',\r\n    'Rald',\r\n    'Rast',\r\n    'Raunt',\r\n    'Raupt',\r\n    'Rax',\r\n    'Raxt',\r\n    'Rayche',\r\n    'Raz',\r\n    'Reelce',\r\n    'Reendt',\r\n    'Relth',\r\n    'Relz',\r\n    'Rez',\r\n    'Rhath',\r\n    'Rhaze',\r\n    'Rhiss',\r\n    'Rhom',\r\n    'Rhorn',\r\n    'Rhyll',\r\n    'Rifk',\r\n    'Rilm',\r\n    'Rilx',\r\n    'Rimsk',\r\n    'Rimth',\r\n    'Riss',\r\n    'Rith',\r\n    'Rix',\r\n    'Rodr',\r\n    'Rodst',\r\n    'Roen',\r\n    'Rogg',\r\n    'Rolm',\r\n    'Rolx',\r\n    'Roult',\r\n    'Rull',\r\n    'Rulm',\r\n    'Rult',\r\n    'Rumche',\r\n    'Runce',\r\n    'Ruor',\r\n    'Ruusque',\r\n    'Ruz',\r\n    'Ryke',\r\n    'Rynx',\r\n    'Ryond',\r\n    'Rythe',\r\n    'Saar',\r\n    'Saech',\r\n    'Saedd',\r\n    'Sairgh',\r\n    'San',\r\n    'Sange',\r\n    'Sarg',\r\n    'Sark',\r\n    'Sarl',\r\n    'Sarn',\r\n    'Sarpt',\r\n    'Skroine',\r\n    'Scroot',\r\n    'Scrylte',\r\n    'Scryme',\r\n    'Sculp',\r\n    'Scuss',\r\n    'Scyrth',\r\n    'Sdor',\r\n    'Seelt',\r\n    'Seif',\r\n    'Sen',\r\n    'Senthe',\r\n    'Sfite',\r\n    'Shad',\r\n    'Shar',\r\n    'Sharg',\r\n    'Sharm',\r\n    'Sharn',\r\n    'Sheb',\r\n    'Sheel',\r\n    'Shenn',\r\n    'Shenx',\r\n    'Sherth',\r\n    'Shilm',\r\n    'Shind',\r\n    'Shont',\r\n    'Shren',\r\n    'Shune',\r\n    'Shurm',\r\n    'Shuuth',\r\n    'Shyang',\r\n    'Skarn',\r\n    'Skart',\r\n    'Skeen',\r\n    'Skerr',\r\n    'Skorle',\r\n    'Skraf',\r\n    'Skrafe',\r\n    'Skrib',\r\n    'Skrift',\r\n    'Skroi',\r\n    'Skyre',\r\n    'Slaar',\r\n    'Slanc',\r\n    'Slark',\r\n    'Slarm',\r\n    'Slask',\r\n    'Slaunce',\r\n    'Slaur',\r\n    'Sleer',\r\n    'Slemt',\r\n    'Slike',\r\n    'Slith',\r\n    'Sloif',\r\n    'Slorg',\r\n    'Slorn',\r\n    'Sluff',\r\n    'Slynd',\r\n    'Smeke',\r\n    'Smete',\r\n    'Smink',\r\n    'Smold',\r\n    'Snabe',\r\n    'Snard',\r\n    'Snarr',\r\n    'Sneath',\r\n    'Snurch',\r\n    'Soick',\r\n    'Solm',\r\n    'Sool',\r\n    'Soorve',\r\n    'Sorl',\r\n    'Sorm',\r\n    'Sorn',\r\n    'Sosz',\r\n    'Sounx',\r\n    'Sparll',\r\n    'Splynd',\r\n    'Sprake',\r\n    'Squalj',\r\n    'Sran',\r\n    'Srend',\r\n    'Sroon',\r\n    'Stalb',\r\n    'Starl',\r\n    'Stelk',\r\n    'Strangg',\r\n    'Strix',\r\n    'Strom',\r\n    'Strowl',\r\n    'Stuhr',\r\n    'Styche',\r\n    'Styre',\r\n    'Suntz',\r\n    'Suule',\r\n    'Suusht',\r\n    'Svinse',\r\n    'Swaerk',\r\n    'Swyst',\r\n    'Syle',\r\n    'Syoll',\r\n    'Taede',\r\n    'Tael',\r\n    'Tak',\r\n    'Tal',\r\n    'Tanj',\r\n    'Targ',\r\n    'Targh',\r\n    'Tark',\r\n    'Tarl',\r\n    'Tath',\r\n    'Taus',\r\n    'Tavv',\r\n    'Taze',\r\n    'Tchel',\r\n    'Tcherm',\r\n    'Tchoum',\r\n    'Tebs',\r\n    'Teelk',\r\n    'Teern',\r\n    'Teirn',\r\n    'Telg',\r\n    'Telk',\r\n    'Terb',\r\n    'Terre',\r\n    'Tez',\r\n    'Thaad',\r\n    'Thaarn',\r\n    'Thad',\r\n    'Thaed',\r\n    'Tham',\r\n    'Thand',\r\n    'Thang',\r\n    'Thapp',\r\n    'Thard',\r\n    'Thark',\r\n    'Thask',\r\n    'Thaugh',\r\n    'Thaum',\r\n    'Thaurn',\r\n    'Thawn',\r\n    'Thax',\r\n    'Theed',\r\n    'Thesk',\r\n    'Thevv',\r\n    'Theyz',\r\n    'Thirrf',\r\n    'Tholk',\r\n    'Thorm',\r\n    'Thosk',\r\n    'Thoure',\r\n    'Thrak',\r\n    'Thralf',\r\n    'Thrand',\r\n    'Thrasp',\r\n    'Thrawl',\r\n    'Thrawn',\r\n    'Thrax',\r\n    'Thrilce',\r\n    'Thrizz',\r\n    'Throck',\r\n    'Thromb',\r\n    'Throsp',\r\n    'Thull',\r\n    'Thuu',\r\n    'Tlön',\r\n    'Toal',\r\n    'Tog',\r\n    'Tol',\r\n    'Tolg',\r\n    'Tolm',\r\n    'Tooz',\r\n    'Torb',\r\n    'Torje',\r\n    'Torm',\r\n    'Torr',\r\n    'Torsk',\r\n    'Torth',\r\n    'Trahl',\r\n    'Treel',\r\n    'Treesk',\r\n    'Trell',\r\n    'Trem',\r\n    'Treys',\r\n    'Trild',\r\n    'Trilse',\r\n    'Trinx',\r\n    'Trojj',\r\n    'Tronf',\r\n    'Trost',\r\n    'Troyne',\r\n    'Trulm',\r\n    'Tsai',\r\n    'Tsang',\r\n    'Tselm',\r\n    'Tsleg',\r\n    'Tspoy',\r\n    'Tsrome',\r\n    'Tthann',\r\n    'Tull',\r\n    'Tvash',\r\n    'Twez',\r\n    'Twillx',\r\n    'Tyae',\r\n    'Tyfe',\r\n    'Tyog',\r\n    'Tzank',\r\n    'Tzoy',\r\n    'Ulm',\r\n    'Urst',\r\n    'Vaar',\r\n    'Vaersl',\r\n    'Vaist',\r\n    'Valg',\r\n    'Valtch',\r\n    'Vand',\r\n    'Vansh',\r\n    'Var',\r\n    'Vard',\r\n    'Varl',\r\n    'Vask',\r\n    'Vass',\r\n    'Vath',\r\n    'Vaulx',\r\n    'Vaus',\r\n    'Vaxx',\r\n    'Vayze',\r\n    'Veb',\r\n    'Veed',\r\n    'Veeth',\r\n    'Vegg',\r\n    'Vek',\r\n    'Velb',\r\n    'Venk',\r\n    'Venth',\r\n    'Verle',\r\n    'Vesp',\r\n    'Veth',\r\n    'Vilt',\r\n    'Vipt',\r\n    'Virl',\r\n    'Virx',\r\n    'Visk',\r\n    'Viss',\r\n    'Vist',\r\n    'Vith',\r\n    'Vlack',\r\n    'Vlax',\r\n    'Vleft',\r\n    'Vloongh',\r\n    'Vohm',\r\n    'Volg',\r\n    'Vool',\r\n    'Voon',\r\n    'Voor',\r\n    'Vor',\r\n    'Vorg',\r\n    'Vorl',\r\n    'Vorque',\r\n    'Vorse',\r\n    'Vort',\r\n    'Vrahk',\r\n    'Vrain',\r\n    'Vramp',\r\n    'Vreng',\r\n    'Vrilx',\r\n    'Vrosk',\r\n    'Vroyce',\r\n    'Vuul',\r\n    'Wertz',\r\n    'Wheld',\r\n    'Whimk',\r\n    'Whirx',\r\n    'Whoord',\r\n    'Wix',\r\n    'Woise',\r\n    'Wome',\r\n    'Woorn',\r\n    'Worrb',\r\n    'Wrahz',\r\n    'Wraime',\r\n    'Wrax',\r\n    'Wrhye',\r\n    'Wrold',\r\n    'Wrost',\r\n    'Wurlp',\r\n    'Wyast',\r\n    'Wye',\r\n    'Wynv',\r\n    'Wyrn',\r\n    'Xaayr',\r\n    'Xaen',\r\n    'Xaif',\r\n    'Xain',\r\n    'Xalm',\r\n    'Xan',\r\n    'Xarle',\r\n    'Xas',\r\n    'Xau',\r\n    'Xean',\r\n    'Xelb',\r\n    'Xenve',\r\n    'Xerth',\r\n    'Xill',\r\n    'Xin',\r\n    'Xinsce',\r\n    'Xis',\r\n    'Xive',\r\n    'Xix',\r\n    'Xord',\r\n    'Xoth',\r\n    'Xush',\r\n    'Xyle',\r\n    'Xysc',\r\n    'Yad',\r\n    'Yagre',\r\n    'Yaim',\r\n    'Yand',\r\n    'Yarl',\r\n    'Yauce',\r\n    'Yeb',\r\n    'Yeerk',\r\n    'Yend',\r\n    'Yenj',\r\n    'Yest',\r\n    'Yhalm',\r\n    'Yhe',\r\n    'Yhem',\r\n    'Yifth',\r\n    'Yilb',\r\n    'Yivv',\r\n    'Yoort',\r\n    'Yoth',\r\n    'Yrr',\r\n    'Yund',\r\n    'Yush',\r\n    'Yuun',\r\n    'Zaar',\r\n    'Zahn',\r\n    'Zaidh',\r\n    'Zaift',\r\n    'Zaile',\r\n    'Zaive',\r\n    'Zand',\r\n    'Zanq',\r\n    'Zao',\r\n    'Zaon',\r\n    'Zaoth',\r\n    'Zar',\r\n    'Zash',\r\n    'Zeft',\r\n    'Zeige',\r\n    'Zek',\r\n    'Zell',\r\n    'Zelm',\r\n    'Zelth',\r\n    'Zend',\r\n    'Zha',\r\n    'Zhash',\r\n    'Zhayce',\r\n    'Zherl',\r\n    'Zhirth',\r\n    'Zhool',\r\n    'Zhorm',\r\n    'Zhuul',\r\n    'Zil',\r\n    'Zilge',\r\n    'Zinn',\r\n    'Zixt',\r\n    'Zlante',\r\n    'Zlaque',\r\n    'Zlar',\r\n    'Zold',\r\n    'Zook',\r\n    'Zool',\r\n    'Zoor',\r\n    'Zor',\r\n    'Zorl',\r\n    'Zorn',\r\n    'Zoth',\r\n    'Zoul',\r\n    'Zreethe',\r\n    'Zull',\r\n    'Zusque',\r\n    'Zwerl',\r\n    'Zynx',\r\n    'Zyx',\r\n  ],\r\n\r\n  // Two syllabes\r\n  [\r\n    'Aahdret',\r\n    'Aarlen',\r\n    'Aasren',\r\n    'Aastrasl',\r\n    'Aban',\r\n    'Abbith',\r\n    'Ablif',\r\n    'Aboas',\r\n    'Abrance',\r\n    'Abrax',\r\n    'Abryn',\r\n    'Abyok',\r\n    'Acear',\r\n    'Acfyst',\r\n    'Achekk',\r\n    'Achelse',\r\n    'Achlarg',\r\n    'Achren',\r\n    'Achriss',\r\n    'Ackvold',\r\n    'Acram',\r\n    'Acu',\r\n    'Adaon',\r\n    'Addanc',\r\n    'Adeil',\r\n    'Adire',\r\n    'Adlay',\r\n    'Adlen',\r\n    'Adlon',\r\n    'Admel',\r\n    'Adoin',\r\n    'Adon',\r\n    'Adrek',\r\n    'Adreln',\r\n    'Adrich',\r\n    'Adrilc',\r\n    'Adurthe',\r\n    'Aduush',\r\n    'Aealim',\r\n    'Aeddan',\r\n    'Aedha',\r\n    'Aedir',\r\n    'Aedlynx',\r\n    'Aeiran',\r\n    'Aelis',\r\n    'Aelma',\r\n    'Aemon',\r\n    'Aenet',\r\n    'Aenthu',\r\n    'Aeprox',\r\n    'Aeren',\r\n    'Aerind',\r\n    'Aerkoon',\r\n    'Aerkour',\r\n    'Aerlithe',\r\n    'Aeron',\r\n    'Aeryle',\r\n    'Aethlyr',\r\n    'Aethon',\r\n    'Afenk',\r\n    'Affraig',\r\n    'Afraaj',\r\n    'Agburz',\r\n    'Ageen',\r\n    'Aghil',\r\n    'Aghill',\r\n    'Aglin',\r\n    'Agroth',\r\n    'Agwyn',\r\n    'Agyorl',\r\n    'Ahmré',\r\n    'Aia',\r\n    'Aiaia',\r\n    'Aibmab',\r\n    'Aidajn',\r\n    'Aiden',\r\n    'Aidon',\r\n    'Aigol',\r\n    'Ailcaer',\r\n    'Ainké',\r\n    'Ainzu',\r\n    'Airmid',\r\n    'Aislinn',\r\n    'Aislithe',\r\n    'Aiza',\r\n    'Aizan',\r\n    'Ajaak',\r\n    'Ajnaic',\r\n    'Akaal',\r\n    'Akar',\r\n    'Akem',\r\n    'Akhtar',\r\n    'Akif',\r\n    'Akii',\r\n    'Akir',\r\n    'Aklo',\r\n    'Akon',\r\n    'Akoorb',\r\n    'Akrain',\r\n    'Akshooth',\r\n    'Akthrain',\r\n    'Akvar',\r\n    'Alao',\r\n    'Alarre',\r\n    'Albaize',\r\n    'Albin',\r\n    'Albrif',\r\n    'Aldende',\r\n    'Aldlor',\r\n    'Aldlum',\r\n    'Aldon',\r\n    'Aldor',\r\n    'Aldreb',\r\n    'Aldred',\r\n    'Aldren',\r\n    'Aldryn',\r\n    'Aldtas',\r\n    'Alenthe',\r\n    'Alfan',\r\n    'Algus',\r\n    'Alif',\r\n    'Aling',\r\n    'Aljic',\r\n    'Aljric',\r\n    'Allaire',\r\n    'Allar',\r\n    'Almaer',\r\n    'Almeir',\r\n    'Almen',\r\n    'Alodd',\r\n    'Alsob',\r\n    'Altin',\r\n    'Altur',\r\n    'Alver',\r\n    'Alya',\r\n    'Amact',\r\n    'Amair',\r\n    'Ambard',\r\n    'Ambeln',\r\n    'Ambril',\r\n    'Ameste',\r\n    'Amfik',\r\n    'Amkir',\r\n    'Ammdar',\r\n    'Ammek',\r\n    'Amoyl',\r\n    'Amphoth',\r\n    'Amrath',\r\n    'Amren',\r\n    'Amyrg',\r\n    'Amzar',\r\n    'Anach',\r\n    'Anar',\r\n    'Anaz',\r\n    'Ancharl',\r\n    'Anclaar',\r\n    'Anctash',\r\n    'Andell',\r\n    'Andjez',\r\n    'Andon',\r\n    'Andore',\r\n    'Andorh',\r\n    'Andrad',\r\n    'Andreth',\r\n    'Androlg',\r\n    'Andrys',\r\n    'Andval',\r\n    'Anghra',\r\n    'Anglame',\r\n    'Angleem',\r\n    'Anglock',\r\n    'Anglor',\r\n    'Angmor',\r\n    'Angtai',\r\n    'Anhlaw',\r\n    'Anigg',\r\n    'Anin',\r\n    'Anjak',\r\n    'Anjos',\r\n    'Anken',\r\n    'Ansher',\r\n    'Ansoj',\r\n    'Anson',\r\n    'Antar',\r\n    'Antarn',\r\n    'Anthor',\r\n    'Antrim',\r\n    'Antriq',\r\n    'Antrisp',\r\n    'Anvar',\r\n    'Anvyen',\r\n    'Anxrin',\r\n    'Anzire',\r\n    'Aopharz',\r\n    'Aophim',\r\n    'Aquill',\r\n    'Ara',\r\n    'Araar',\r\n    'Aradh',\r\n    'Arak',\r\n    'Aran',\r\n    'Araste',\r\n    'Araz',\r\n    'Arbal',\r\n    'Archam',\r\n    'Archech',\r\n    'Archite',\r\n    'Arcus',\r\n    'Ardann',\r\n    'Ardesh',\r\n    'Ardlen',\r\n    'Ardoth',\r\n    'Ardune',\r\n    'Ardwar',\r\n    'Ardwil',\r\n    'Ardwile',\r\n    'Areest',\r\n    'Arell',\r\n    'Argin',\r\n    'Argorm',\r\n    'Argrath',\r\n    'Arhnaal',\r\n    'Aribe',\r\n    'Arick',\r\n    'Arjhag',\r\n    'Arkal',\r\n    'Arkharn',\r\n    'Arklow',\r\n    'Arkrog',\r\n    'Arlan',\r\n    'Arlbeth',\r\n    'Arldon',\r\n    'Arlya',\r\n    'Armast',\r\n    'Armorn',\r\n    'Armyze',\r\n    'Arna',\r\n    'Arnhor',\r\n    'Arnid',\r\n    'Arnlor',\r\n    'Arnrost',\r\n    'Aroinz',\r\n    'Arrah',\r\n    'Arrhod',\r\n    'Arshel',\r\n    'Artheen',\r\n    'Arthex',\r\n    'Artor',\r\n    'Artus',\r\n    'Arun',\r\n    'Arvel',\r\n    'Arvilk',\r\n    'Arvol',\r\n    'Arvox',\r\n    'Arweld',\r\n    'Aryem',\r\n    'Aryft',\r\n    'Aryon',\r\n    'Aryph',\r\n    'Aryus',\r\n    'Arzang',\r\n    'Arzi',\r\n    'Asberl',\r\n    'Ascelle',\r\n    'Aschar',\r\n    'Aschka',\r\n    'Asco',\r\n    'Äsë',\r\n    'Asgar',\r\n    'Asgorn',\r\n    'Ashan',\r\n    'Ashane',\r\n    'Ashbarl',\r\n    'Ashed',\r\n    'Ashild',\r\n    'Ashlann',\r\n    'Ashnyn',\r\n    'Ashord',\r\n    'Ashtah',\r\n    'Ashur',\r\n    'Askar',\r\n    'Aspand',\r\n    'Asrai',\r\n    'Astei',\r\n    'Astem',\r\n    'Astha',\r\n    'Astran',\r\n    'Astrin',\r\n    'Atang',\r\n    'Atar',\r\n    'Atdeel',\r\n    'Ateng',\r\n    'Athald',\r\n    'Athar',\r\n    'Athcroj',\r\n    'Athlas',\r\n    'Athlos',\r\n    'Athmar',\r\n    'Athquom',\r\n    'Atlampt',\r\n    'Atlank',\r\n    'Atmaas',\r\n    'Atmeh',\r\n    'Atmog',\r\n    'Atox',\r\n    'Atraaf',\r\n    'Atrend',\r\n    'Atsal',\r\n    'Attor',\r\n    'Atyar',\r\n    'Atyre',\r\n    'Auchstyr',\r\n    'Auchur',\r\n    'Aucir',\r\n    'Audric',\r\n    'Aundan',\r\n    'Aunxar',\r\n    'Aurawn',\r\n    'Aureth',\r\n    'Auxid',\r\n    'Avane',\r\n    'Avarr',\r\n    'Averq',\r\n    'Avoon',\r\n    'Avorn',\r\n    'Awndale',\r\n    'Axaane',\r\n    'Axos',\r\n    'Aya',\r\n    'Aydras',\r\n    'Ayen',\r\n    'Ayin',\r\n    'Ayir',\r\n    'Ayla',\r\n    'Aylmer',\r\n    'Ayrish',\r\n    'Ayshun',\r\n    'Ayshung',\r\n    'Azal',\r\n    'Azash',\r\n    'Azeal',\r\n    'Azen',\r\n    'Azgoth',\r\n    'Azhrarn',\r\n    'Azlon',\r\n    'Azlyn',\r\n    'Azmael',\r\n    'Azorn',\r\n    'Azoth',\r\n    'Azra',\r\n    'Azraq',\r\n    'Azrean',\r\n    'Azreck',\r\n    'Azter',\r\n    'Azzay',\r\n    'Babdar',\r\n    'Baccruz',\r\n    'Baelil',\r\n    'Bahar',\r\n    'Baiar',\r\n    'Baiern',\r\n    'Baikaen',\r\n    'Baiposk',\r\n    'Bakan',\r\n    'Bakra',\r\n    'Balain',\r\n    'Balaz',\r\n    'Baldhur',\r\n    'Baldrim',\r\n    'Balgurr',\r\n    'Balkar',\r\n    'Balok',\r\n    'Balour',\r\n    'Banek',\r\n    'Banffoge',\r\n    'Bannheld',\r\n    'Bannor',\r\n    'Baraell',\r\n    'Bardel',\r\n    'Barduy',\r\n    'Baren',\r\n    'Barim',\r\n    'Barind',\r\n    'Barldsy',\r\n    'Barlom',\r\n    'Barlon',\r\n    'Barltan',\r\n    'Barnar',\r\n    'Barood',\r\n    'Baros',\r\n    'Barrenc',\r\n    'Barrin',\r\n    'Bartain',\r\n    'Basfric',\r\n    'Basim',\r\n    'Basmol',\r\n    'Bassinth',\r\n    'Bassto',\r\n    'Bastarre',\r\n    'Batrosque',\r\n    'Bayven',\r\n    'Bayzell',\r\n    'Bazan',\r\n    'Bazit',\r\n    'Beclaan',\r\n    'Bedane',\r\n    'Bedese',\r\n    'Beejlam',\r\n    'Begnus',\r\n    'Belan',\r\n    'Belaz',\r\n    'Belcoir',\r\n    'Beleth',\r\n    'Belgaun',\r\n    'Belic',\r\n    'Beljan',\r\n    'Bellin',\r\n    'Bellom',\r\n    'Belmul',\r\n    'Belnarth',\r\n    'Belor',\r\n    'Belorn',\r\n    'Belot',\r\n    'Belrain',\r\n    'Belstos',\r\n    'Belthan',\r\n    'Belthis',\r\n    'Belwilg',\r\n    'Bengol',\r\n    'Bëol',\r\n    'Beolj',\r\n    'Beras',\r\n    'Berclad',\r\n    'Bercol',\r\n    'Berik',\r\n    'Berild',\r\n    'Berim',\r\n    'Berith',\r\n    'Berlyne',\r\n    'Berrec',\r\n    'Bersem',\r\n    'Bershar',\r\n    'Bertrenk',\r\n    'Berzik',\r\n    'Bethmel',\r\n    'Beyash',\r\n    'Beyus',\r\n    'Bezgrael',\r\n    'Bezpar',\r\n    'Bhoorva',\r\n    'Biferb',\r\n    'Biilar',\r\n    'Bildesh',\r\n    'Billosh',\r\n    'Bilmar',\r\n    'Bindle',\r\n    'Biraad',\r\n    'Birain',\r\n    'Bireln',\r\n    'Birta',\r\n    'Bisel',\r\n    'Bjanni',\r\n    'Blauthike',\r\n    'Bleran',\r\n    'Bleskran',\r\n    'Blonjerg',\r\n    'Blorvind',\r\n    'Blunyc',\r\n    'Bodvar',\r\n    'Boëd',\r\n    'Boggrah',\r\n    'Bolaoz',\r\n    'Bolthorn',\r\n    'Borale',\r\n    'Boren',\r\n    'Borgald',\r\n    'Borin',\r\n    'Borlaith',\r\n    'Borlas',\r\n    'Borlid',\r\n    'Borlo',\r\n    'Borngah',\r\n    'Borzer',\r\n    'Boshan',\r\n    'Bothar',\r\n    'Botro',\r\n    'Bouphar',\r\n    'Bowjen',\r\n    'Boyarl',\r\n    'Braagen',\r\n    'Bracca',\r\n    'Braeklarn',\r\n    'Bragen',\r\n    'Brahan',\r\n    'Brakkon',\r\n    'Brala',\r\n    'Brali',\r\n    'Brallu',\r\n    'Bralma',\r\n    'Brandar',\r\n    'Brandec',\r\n    'Brangwej',\r\n    'Branthu',\r\n    'Brantys',\r\n    'Branvaol',\r\n    'Branzan',\r\n    'Brascand',\r\n    'Brasslin',\r\n    'Braxen',\r\n    'Braxtor',\r\n    'Brealij',\r\n    'Bredhal',\r\n    'Breedast',\r\n    'Bregem',\r\n    'Brehen',\r\n    'Breitsoj',\r\n    'Brelkrov',\r\n    'Brenen',\r\n    'Brenlan',\r\n    'Brestej',\r\n    'Brethil',\r\n    'Bretta',\r\n    'Brevlyn',\r\n    'Brevta',\r\n    'Brielle',\r\n    'Brindax',\r\n    'Brindence',\r\n    'Brintu',\r\n    'Brinys',\r\n    'Brislyn',\r\n    'Brithael',\r\n    'Brithric',\r\n    'Brobal',\r\n    'Brohnin',\r\n    'Brona',\r\n    'Broosin',\r\n    'Broxus',\r\n    'Brufod',\r\n    'Brundelx',\r\n    'Bryapka',\r\n    'Brynit',\r\n    'Buckrald',\r\n    'Bulvet',\r\n    'Burcan',\r\n    'Burrgaut',\r\n    'Bwermolc',\r\n    'Byeloor',\r\n    'Bylys',\r\n    'Byrkast',\r\n    'Byzar',\r\n    'Cadairn',\r\n    'Caddax',\r\n    'Cadel',\r\n    'Cadfrel',\r\n    'Cadrach',\r\n    'Cadreth',\r\n    'Caecyn',\r\n    'Caedfer',\r\n    'Caelis',\r\n    'Caerron',\r\n    'Caillean',\r\n    'Caiphul',\r\n    'Cairon',\r\n    'Caldel',\r\n    'Calensch',\r\n    'Calkdaev',\r\n    'Calmic',\r\n    'Calnor',\r\n    'Calunn',\r\n    'Calyz',\r\n    'Calzan',\r\n    'Camain',\r\n    'Cambree',\r\n    'Camdlon',\r\n    'Camsar',\r\n    'Candla',\r\n    'Candrak',\r\n    'Canelb',\r\n    'Cangmor',\r\n    'Canthar',\r\n    'Cantrasc',\r\n    'Caopha',\r\n    'Caostri',\r\n    'Caranth',\r\n    'Carbrod',\r\n    'Cardelv',\r\n    'Carfheen',\r\n    'Carlasc',\r\n    'Carlinx',\r\n    'Carnax',\r\n    'Carnly',\r\n    'Carnool',\r\n    'Caroin',\r\n    'Carquel',\r\n    'Carthis',\r\n    'Caskeil',\r\n    'Castlon',\r\n    'Cathlaid',\r\n    'Caveesm',\r\n    'Cavorn',\r\n    'Cavosse',\r\n    'Cavris',\r\n    'Caynarv',\r\n    'Cayrin',\r\n    'Cazberr',\r\n    'Cazyach',\r\n    'Cedrim',\r\n    'Cedrisk',\r\n    'Ceilerse',\r\n    'Celbarb',\r\n    'Cemtruo',\r\n    'Cenyth',\r\n    'Ceraik',\r\n    'Cercyon',\r\n    'Cerdun',\r\n    'Cerlint',\r\n    'Cermor',\r\n    'Cernon',\r\n    'Cerra',\r\n    'Cessair',\r\n    'Cevir',\r\n    'Ceylinn',\r\n    'Chadan',\r\n    'Chadlor',\r\n    'Chadzik',\r\n    'Chaemor',\r\n    'Chagor',\r\n    'Chalar',\r\n    'Challem',\r\n    'Challeth',\r\n    'Chalvir',\r\n    'Chambarr',\r\n    'Changtsai',\r\n    'Chanoth',\r\n    'Chanti',\r\n    'Chaöl',\r\n    'Charatze',\r\n    'Charnyx',\r\n    'Charresh',\r\n    'Charyd',\r\n    'Chaska',\r\n    'Chaulet',\r\n    'Chavir',\r\n    'Chayim',\r\n    'Chazane',\r\n    'Chazgel',\r\n    'Cheldor',\r\n    'Chelim',\r\n    'Chelprey',\r\n    'Chelshrike',\r\n    'Chendil',\r\n    'Chenean',\r\n    'Chenoa',\r\n    'Cherla',\r\n    'Chessene',\r\n    'Chevonde',\r\n    'Chezil',\r\n    'Chial',\r\n    'Chian',\r\n    'Chigran',\r\n    'Chimu',\r\n    'Chimzil',\r\n    'Chirril',\r\n    'Chirthiz',\r\n    'Chitrind',\r\n    'Chlangi',\r\n    'Chlodig',\r\n    'Chlorild',\r\n    'Chordash',\r\n    'Chorrin',\r\n    'Chrezel',\r\n    'Chungaez',\r\n    'Chunjan',\r\n    'Chyvil',\r\n    'Cidran',\r\n    'Cilmar',\r\n    'Cinctraic',\r\n    'Ciraf',\r\n    'Cirkin',\r\n    'Cirnak',\r\n    'Cista',\r\n    'Civar',\r\n    'Ciwan',\r\n    'Clafaug',\r\n    'Clarinn',\r\n    'Cleedis',\r\n    'Clendlim',\r\n    'Clenvred',\r\n    'Cligra',\r\n    'Cloosag',\r\n    'Cloralt',\r\n    'Coäx',\r\n    'Cobord',\r\n    'Cobrynth',\r\n    'Coddry',\r\n    'Cogarn',\r\n    'Coimarn',\r\n    'Colgrim',\r\n    'Colyss',\r\n    'Comnlan',\r\n    'Conjerb',\r\n    'Conjin',\r\n    'Coram',\r\n    'Corbrod',\r\n    'Cordin',\r\n    'Corem',\r\n    'Coreme',\r\n    'Corill',\r\n    'Corince',\r\n    'Cormast',\r\n    'Corrysm',\r\n    'Corsolle',\r\n    'Couran',\r\n    'Coyzan',\r\n    'Cramog',\r\n    'Craxan',\r\n    'Craydarth',\r\n    'Craye',\r\n    'Creidah',\r\n    'Crennex',\r\n    'Crestarl',\r\n    'Crestry',\r\n    'Creydai',\r\n    'Crezel',\r\n    'Crilayth',\r\n    'Crixbine',\r\n    'Crochell',\r\n    'Crolas',\r\n    'Cromough',\r\n    'Croquarne',\r\n    'Cuddry',\r\n    'Cuhaid',\r\n    'Cullyn',\r\n    'Curik',\r\n    'Curin',\r\n    'Curlask',\r\n    'Cusheal',\r\n    'Cusheth',\r\n    'Cuttray',\r\n    'Cyanril',\r\n    'Cydace',\r\n    'Cylenn',\r\n    'Cynquil',\r\n    'Cyrand',\r\n    'Cyrib',\r\n    'Cyrvemth',\r\n    'Czarai',\r\n    'Dabthan',\r\n    'Dacil',\r\n    'Daeglev',\r\n    'Daelden',\r\n    'Dafor',\r\n    'Daghand',\r\n    'Dagharz',\r\n    'Dagir',\r\n    'Dahiil',\r\n    'Daikoon',\r\n    'Dailenn',\r\n    'Dakul',\r\n    'Dakvon',\r\n    'Dalain',\r\n    'Dalanc',\r\n    'Dalcraw',\r\n    'Dalga',\r\n    'Dalgirth',\r\n    'Dalith',\r\n    'Dalman',\r\n    'Dalraev',\r\n    'Dalsar',\r\n    'Dalvai',\r\n    'Dalvoc',\r\n    'Dalwyn',\r\n    'Damaal',\r\n    'Damar',\r\n    'Damesk',\r\n    'Damrir',\r\n    'Danchel',\r\n    'Dandar',\r\n    'Dandroan',\r\n    'Danfis',\r\n    'Dangrim',\r\n    'Dankin',\r\n    'Dantlee',\r\n    'Daotar',\r\n    'Daphrin',\r\n    'Daplurn',\r\n    'Dara',\r\n    'Darach',\r\n    'Darake',\r\n    'Daran',\r\n    'Darax',\r\n    'Darbeel',\r\n    'Darcer',\r\n    'Darga',\r\n    'Darglin',\r\n    'Darinth',\r\n    'Darjek',\r\n    'Darjii',\r\n    'Darlist',\r\n    'Darlith',\r\n    'Darmont',\r\n    'Darmore',\r\n    'Darnath',\r\n    'Darnein',\r\n    'Darnime',\r\n    'Daron',\r\n    'Darool',\r\n    'Darsid',\r\n    'Darsiiv',\r\n    'Darsin',\r\n    'Darvane',\r\n    'Darven',\r\n    'Darzed',\r\n    'Darzha',\r\n    'Dashgu',\r\n    'Dasig',\r\n    'Dastor',\r\n    'Dastryn',\r\n    'Daugas',\r\n    'Daulaz',\r\n    'Davar',\r\n    'Daveld',\r\n    'Davix',\r\n    'Davlit',\r\n    'Davras',\r\n    'Davrou',\r\n    'Davrune',\r\n    'Dawfoke',\r\n    'Daxon',\r\n    'Dayko',\r\n    'Daysase',\r\n    'Daytar',\r\n    'Deaclynd',\r\n    'Debfin',\r\n    'Dechru',\r\n    'Deenos',\r\n    'Delaur',\r\n    'Delcold',\r\n    'Deldrak',\r\n    'Deleea',\r\n    'Delente',\r\n    'Delgath',\r\n    'Delgaun',\r\n    'Delmar',\r\n    'Delna',\r\n    'Delrean',\r\n    'Delser',\r\n    'Demgris',\r\n    'Deneth',\r\n    'Dengar',\r\n    'Denlorn',\r\n    'Derdain',\r\n    'Derfel',\r\n    'Dergast',\r\n    'Derild',\r\n    'Derlin',\r\n    'Derlor',\r\n    'Deroh',\r\n    'Deron',\r\n    'Derroll',\r\n    'Dersarre',\r\n    'Derthark',\r\n    'Devolt',\r\n    'Devreed',\r\n    'Dhakos',\r\n    'Dhornen',\r\n    'Dhoumene',\r\n    'Dhranak',\r\n    'Dhyana',\r\n    'Dialn',\r\n    'Dibdrek',\r\n    'Dilfar',\r\n    'Dilgid',\r\n    'Dilquay',\r\n    'Dilvak',\r\n    'Dinoor',\r\n    'Diorne',\r\n    'Diran',\r\n    'Dirim',\r\n    'Dirkalt',\r\n    'Dirmalk',\r\n    'Dirrach',\r\n    'Dirrahk',\r\n    'Dirvus',\r\n    'Distar',\r\n    'Disten',\r\n    'Distran',\r\n    'Ditrenth',\r\n    'Divos',\r\n    'Djarmon',\r\n    'Djehla',\r\n    'Djelha',\r\n    'Djira',\r\n    'Djola',\r\n    'Dolljan',\r\n    'Dolthar',\r\n    'Dolvith',\r\n    'Domede',\r\n    'Domen',\r\n    'Domin',\r\n    'Domnux',\r\n    'Domon',\r\n    'Domvit',\r\n    'Domwren',\r\n    'Donet',\r\n    'Donlaze',\r\n    'Doran',\r\n    'Dorath',\r\n    'Dorgand',\r\n    'Dorgath',\r\n    'Dorhar',\r\n    'Dorin',\r\n    'Dornath',\r\n    'Dornbain',\r\n    'Dorok',\r\n    'Dorsan',\r\n    'Dorspaich',\r\n    'Dortoom',\r\n    'Dorvai',\r\n    'Dostaan',\r\n    'Doussa',\r\n    'Dowflox',\r\n    'Dozrig',\r\n    'Dozthuk',\r\n    'Drabsnar',\r\n    'Dradoi',\r\n    'Dradus',\r\n    'Draegra',\r\n    'Drakhor',\r\n    'Drakhri',\r\n    'Drakirn',\r\n    'Drakkan',\r\n    'Dralar',\r\n    'Dramah',\r\n    'Dramfer',\r\n    'Draogat',\r\n    'Drassonne',\r\n    'Drauphor',\r\n    'Draven',\r\n    'Draxok',\r\n    'Drayley',\r\n    'Drayven',\r\n    'Drazvec',\r\n    'Drebyss',\r\n    'Dreezhan',\r\n    'Drefest',\r\n    'Dreggol',\r\n    'Dreintor',\r\n    'Drellefe',\r\n    'Drenfust',\r\n    'Drengar',\r\n    'Drethlec',\r\n    'Drevark',\r\n    'Dreynel',\r\n    'Drezael',\r\n    'Drezaem',\r\n    'Drilant',\r\n    'Drimmis',\r\n    'Drinda',\r\n    'Dringle',\r\n    'Drion',\r\n    'Drissa',\r\n    'Dristirk',\r\n    'Drocolg',\r\n    'Drogan',\r\n    'Drohulse',\r\n    'Droilfin',\r\n    'Drokoag',\r\n    'Dronasp',\r\n    'Druchor',\r\n    'Drunal',\r\n    'Drusilf',\r\n    'Dryduos',\r\n    'Duarn',\r\n    'Duergan',\r\n    'Dulith',\r\n    'Dulkarn',\r\n    'Dulkast',\r\n    'Dunry',\r\n    'Durnik',\r\n    'Durzin',\r\n    'Duskim',\r\n    'Duubown',\r\n    'Dvorast',\r\n    'Dwendlim',\r\n    'Dwyvach',\r\n    'Dygard',\r\n    'Dylenx',\r\n    'Dymnash',\r\n    'Dynqua',\r\n    'Dynroth',\r\n    'Dyoni',\r\n    'Dyshim',\r\n    'Dyskrahn',\r\n    'Dytheus',\r\n    'Dyvim',\r\n    'Dyzant',\r\n    'Dzoraug',\r\n    'Easval',\r\n    'Ebane',\r\n    'Ebur',\r\n    'Echael',\r\n    'Echross',\r\n    'Eclane',\r\n    'Edcyl',\r\n    'Eddar',\r\n    'Eddax',\r\n    'Eddor',\r\n    'Edeth',\r\n    'Edhil',\r\n    'Edrun',\r\n    'Eduu',\r\n    'Eehatt',\r\n    'Eelek',\r\n    'Eelgren',\r\n    'Eerban',\r\n    'Eglarth',\r\n    'Egron',\r\n    'Ehilm',\r\n    'Ehlmat',\r\n    'Ehlreth',\r\n    'Eidon',\r\n    'Eidrinn',\r\n    'Eilif',\r\n    'Einar',\r\n    'Eirecht',\r\n    'Eithné',\r\n    'Ejence',\r\n    'Ekvarl',\r\n    'Elaen',\r\n    'Eland',\r\n    'Elath',\r\n    'Eldin',\r\n    'Eldix',\r\n    'Eldrab',\r\n    'Eldron',\r\n    'Eldru',\r\n    'Elek',\r\n    'Elem',\r\n    'Elfreth',\r\n    'Elgroth',\r\n    'Elkin',\r\n    'Elkleth',\r\n    'Ellern',\r\n    'Ellrass',\r\n    'Elmral',\r\n    'Elnume',\r\n    'Elod',\r\n    'Elran',\r\n    'Elriph',\r\n    'Elu',\r\n    'Elvrit',\r\n    'Elyx',\r\n    'Elzast',\r\n    'Emal',\r\n    'Emberle',\r\n    'Emdel',\r\n    'Emerl',\r\n    'Emgar',\r\n    'Emton',\r\n    'Enban',\r\n    'Encarth',\r\n    'Endrade',\r\n    'Endril',\r\n    'Enferth',\r\n    'Englin',\r\n    'Enkim',\r\n    'Ennek',\r\n    'Enris',\r\n    'Enrost',\r\n    'Enskel',\r\n    'Ensorn',\r\n    'Envess',\r\n    'Enzhai',\r\n    'Ephelt',\r\n    'Ephraj',\r\n    'Ephti',\r\n    'Ephyre',\r\n    'Eppent',\r\n    'Eppin',\r\n    'Erbmaj',\r\n    'Erdlan',\r\n    'Ergar',\r\n    'Ergoth',\r\n    'Ergron',\r\n    'Erhil',\r\n    'Erijn',\r\n    'Ermon',\r\n    'Ermor',\r\n    'Eron',\r\n    'Errain',\r\n    'Errone',\r\n    'Erson',\r\n    'Erwat',\r\n    'Erxab',\r\n    'Escande',\r\n    'Esceft',\r\n    'Esdrix',\r\n    'Esghar',\r\n    'Eshrik',\r\n    'Eshuur',\r\n    'Eskarn',\r\n    'Eslyn',\r\n    'Esris',\r\n    'Essa',\r\n    'Estrag',\r\n    'Estorl',\r\n    'Estrif',\r\n    'Esyfe',\r\n    'Ethrene',\r\n    'Euross',\r\n    'Evelj',\r\n    'Evinth',\r\n    'Evith',\r\n    'Evorn',\r\n    'Evska',\r\n    'Ewlon',\r\n    'Eyphra',\r\n    'Eythor',\r\n    'Ezail',\r\n    'Ezmi',\r\n    'Ezri',\r\n    'Fabolde',\r\n    'Fadar',\r\n    'Faendyre',\r\n    'Faesten',\r\n    'Faffle',\r\n    'Fafnalg',\r\n    'Faiorg',\r\n    'Falbin',\r\n    'Falcarn',\r\n    'Falgar',\r\n    'Falhehn',\r\n    'Fali',\r\n    'Falldrijn',\r\n    'Falsfeen',\r\n    'Falslen',\r\n    'Falume',\r\n    'Fanchel',\r\n    'Faran',\r\n    'Fardoth',\r\n    'Fardron',\r\n    'Farglid',\r\n    'Farhaude',\r\n    'Farleit',\r\n    'Farli',\r\n    'Farmolj',\r\n    'Farnek',\r\n    'Farngold',\r\n    'Farngor',\r\n    'Faroon',\r\n    'Farosh',\r\n    'Farrain',\r\n    'Farscall',\r\n    'Farsun',\r\n    'Farunst',\r\n    'Farzdoy',\r\n    'Fasthes',\r\n    'Fautell',\r\n    'Favuld',\r\n    'Favvaz',\r\n    'Fayel',\r\n    'Faygrenn',\r\n    'Faylaol',\r\n    'Faylynn',\r\n    'Fayol',\r\n    'Fazhal',\r\n    'Fazzur',\r\n    'Feeming',\r\n    'Feikry',\r\n    'Feirrex',\r\n    'Felinx',\r\n    'Felnar',\r\n    'Felor',\r\n    'Felstar',\r\n    'Felthund',\r\n    'Felvrand',\r\n    'Femigg',\r\n    'Fendahl',\r\n    'Fendrabe',\r\n    'Fenew',\r\n    'Fenic',\r\n    'Fenist',\r\n    'Fenleith',\r\n    'Fennus',\r\n    'Fenrald',\r\n    'Fenzil',\r\n    'Feorth',\r\n    'Ferman',\r\n    'Fermern',\r\n    'Fernath',\r\n    'Ferndel',\r\n    'Fernhol',\r\n    'Fernool',\r\n    'Fernosk',\r\n    'Ferram',\r\n    'Ferthel',\r\n    'Fervigg',\r\n    'Ferwend',\r\n    'Fesru',\r\n    'Fethlan',\r\n    'Feyan',\r\n    'Feyern',\r\n    'Fhorat',\r\n    'Fiantz',\r\n    'Fictyr',\r\n    'Figgin',\r\n    'Fiiya',\r\n    'Filtarg',\r\n    'Fingril',\r\n    'Finstar',\r\n    'Firca',\r\n    'Firga',\r\n    'Firin',\r\n    'Firon',\r\n    'Fiskroll',\r\n    'Fissworx',\r\n    'Flauleck',\r\n    'Flayna',\r\n    'Flestrin',\r\n    'Fletchen',\r\n    'Flikir',\r\n    'Flingrel',\r\n    'Flitan',\r\n    'Flixis',\r\n    'Foarad',\r\n    'Fodusk',\r\n    'Fogrin',\r\n    'Fohdon',\r\n    'Folstin',\r\n    'Fomkrin',\r\n    'Fontand',\r\n    'Foozan',\r\n    'Foragh',\r\n    'Forang',\r\n    'Foraujh',\r\n    'Forbulse',\r\n    'Foren',\r\n    'Forjisk',\r\n    'Formki',\r\n    'Fornoar',\r\n    'Foros',\r\n    'Forroosk',\r\n    'Forstine',\r\n    'Fortrelce',\r\n    'Forvael',\r\n    'Fozgiel',\r\n    'Frama',\r\n    'Franaard',\r\n    'Frannon',\r\n    'Frashtol',\r\n    'Frayja',\r\n    'Freasand',\r\n    'Fremmoun',\r\n    'Frillox',\r\n    'Friston',\r\n    'Frixeen',\r\n    'Frolin',\r\n    'Frondir',\r\n    'Fronost',\r\n    'Fronubb',\r\n    'Froscele',\r\n    'Frowal',\r\n    'Fruwasp',\r\n    'Ftoomi',\r\n    'Fulshin',\r\n    'Fulume',\r\n    'Fumpsil',\r\n    'Furtloft',\r\n    'Fusraul',\r\n    'Fylin',\r\n    'Fylssa',\r\n    'Fyojhkor',\r\n    'Fyönn',\r\n    'Fyza',\r\n    'Gaatel',\r\n    'Gadan',\r\n    'Gadoc',\r\n    'Gadra',\r\n    'Gadri',\r\n    'Gaenlea',\r\n    'Gaerlind',\r\n    'Gaerris',\r\n    'Gafael',\r\n    'Gaisherl',\r\n    'Gajiste',\r\n    'Gakaal',\r\n    'Galaart',\r\n    'Galach',\r\n    'Galaij',\r\n    'Galan',\r\n    'Galbaaz',\r\n    'Galchan',\r\n    'Galdoir',\r\n    'Galenx',\r\n    'Galind',\r\n    'Gallarg',\r\n    'Gallasp',\r\n    'Galmad',\r\n    'Galron',\r\n    'Galsdor',\r\n    'Galvrix',\r\n    'Gambrax',\r\n    'Gamitz',\r\n    'Gamkya',\r\n    'Ganaek',\r\n    'Gandril',\r\n    'Ganerth',\r\n    'Ganerve',\r\n    'Ganix',\r\n    'Gankor',\r\n    'Ganock',\r\n    'Gareck',\r\n    'Gareld',\r\n    'Garhaft',\r\n    'Garlan',\r\n    'Garol',\r\n    'Garon',\r\n    'Garos',\r\n    'Garpast',\r\n    'Garras',\r\n    'Garron',\r\n    'Garstrang',\r\n    'Garstrith',\r\n    'Garthag',\r\n    'Garthaun',\r\n    'Garven',\r\n    'Gathen',\r\n    'Gaunmar',\r\n    'Gaurbal',\r\n    'Gavrok',\r\n    'Gawend',\r\n    'Gaxtor',\r\n    'Gazwylg',\r\n    'Gearna',\r\n    'Geaxa',\r\n    'Gebrence',\r\n    'Gebrow',\r\n    'Gechart',\r\n    'Gechrak',\r\n    'Gedreth',\r\n    'Geerharg',\r\n    'Gehed',\r\n    'Gelan',\r\n    'Gelann',\r\n    'Geldol',\r\n    'Gelwik',\r\n    'Gemal',\r\n    'Gemelf',\r\n    'Genglar',\r\n    'Gerant',\r\n    'Gerin',\r\n    'Gerlant',\r\n    'Geroind',\r\n    'Gerreint',\r\n    'Gerren',\r\n    'Gesin',\r\n    'Gethen',\r\n    'Gezdrey',\r\n    'Ghaachev',\r\n    'Gharlane',\r\n    'Ghatar',\r\n    'Ghatha',\r\n    'Ghellence',\r\n    'Gherent',\r\n    'Gherlan',\r\n    'Ghirra',\r\n    'Ghomnir',\r\n    'Ghralence',\r\n    'Giaj',\r\n    'Gilboch',\r\n    'Gildor',\r\n    'Gildren',\r\n    'Gildrift',\r\n    'Gilflin',\r\n    'Gilir',\r\n    'Gilith',\r\n    'Gillyn',\r\n    'Gilmir',\r\n    'Gilmirst',\r\n    'Gilnar',\r\n    'Gilorn',\r\n    'Gilos',\r\n    'Gilva',\r\n    'Gilvar',\r\n    'Gimeld',\r\n    'Gimlej',\r\n    'Gimnel',\r\n    'Ginnen',\r\n    'Ginorsh',\r\n    'Girbeaux',\r\n    'Girin',\r\n    'Girzan',\r\n    'Gisgin',\r\n    'Githeld',\r\n    'Githew',\r\n    'Gitlan',\r\n    'Gitril',\r\n    'Gittos',\r\n    'Gizralle',\r\n    'Glaeloth',\r\n    'Glaernex',\r\n    'Glaraum',\r\n    'Glasdray',\r\n    'Glasquel',\r\n    'Glaury',\r\n    'Glayant',\r\n    'Gleada',\r\n    'Glebur',\r\n    'Glethlot',\r\n    'Gleyden',\r\n    'Glianth',\r\n    'Glidnimm',\r\n    'Glimanthe',\r\n    'Glirice',\r\n    'Glirrish',\r\n    'Gloisur',\r\n    'Glowan',\r\n    'Glufjyn',\r\n    'Glyngal',\r\n    'Glynzel',\r\n    'Glystraine',\r\n    'Gnasthor',\r\n    'Gnasthra',\r\n    'Gnivlah',\r\n    'Gnohesk',\r\n    'Gnorri',\r\n    'Gnospret',\r\n    'Gobar',\r\n    'Goklod',\r\n    'Golluer',\r\n    'Gomar',\r\n    'Gondrift',\r\n    'Gonjal',\r\n    'Gorad',\r\n    'Gorgost',\r\n    'Gorin',\r\n    'Gorinssk',\r\n    'Gorklu',\r\n    'Gorlis',\r\n    'Gormane',\r\n    'Gornik',\r\n    'Gorshay',\r\n    'Goryon',\r\n    'Gossparl',\r\n    'Gothel',\r\n    'Grachar',\r\n    'Graequil',\r\n    'Graghan',\r\n    'Grahault',\r\n    'Grainim',\r\n    'Granik',\r\n    'Granlon',\r\n    'Gravec',\r\n    'Greavdal',\r\n    'Greelar',\r\n    'Greethrin',\r\n    'Greforn',\r\n    'Grehuse',\r\n    'Grekith',\r\n    'Gremdahl',\r\n    'Grendax',\r\n    'Grennath',\r\n    'Grenslae',\r\n    'Grenvin',\r\n    'Greorle',\r\n    'Grevam',\r\n    'Greyfell',\r\n    'Griam',\r\n    'Grian',\r\n    'Griea',\r\n    'Griffix',\r\n    'Grifnid',\r\n    'Grindan',\r\n    'Grishulf',\r\n    'Gristis',\r\n    'Griswald',\r\n    'Grittu',\r\n    'Grivalx',\r\n    'Groäxx',\r\n    'Grombul',\r\n    'Grondar',\r\n    'Grortam',\r\n    'Grulbest',\r\n    'Grussex',\r\n    'Grydon',\r\n    'Gryemox',\r\n    'Grykar',\r\n    'Grypha',\r\n    'Guhan',\r\n    'Guhlnor',\r\n    'Gulla',\r\n    'Gulzund',\r\n    'Gunshird',\r\n    'Gunthal',\r\n    'Gunthar',\r\n    'Gunzhur',\r\n    'Gurdam',\r\n    'Gurjan',\r\n    'Gustay',\r\n    'Guthril',\r\n    'Gwacyn',\r\n    'Gwaihir',\r\n    'Gweddyn',\r\n    'Gweien',\r\n    'Gwenca',\r\n    'Gwendald',\r\n    'Gwepfrath',\r\n    'Gwesder',\r\n    'Gwildor',\r\n    'Gwithra',\r\n    'Gwomyr',\r\n    'Gwyran',\r\n    'Gwythinst',\r\n    'Gyán',\r\n    'Gylrath',\r\n    'Gyórb',\r\n    'Gyriss',\r\n    'Gyrlaen',\r\n    'Gyrlath',\r\n    'Gysankh',\r\n    'Gyseyt',\r\n    'Gystral',\r\n    'Haakrim',\r\n    'Haarstrin',\r\n    'Habmarl',\r\n    'Hadan',\r\n    'Hadar',\r\n    'Hadarg',\r\n    'Hado',\r\n    'Hadrim',\r\n    'Hadron',\r\n    'Haestan',\r\n    'Haefgan',\r\n    'Hafthir',\r\n    'Hagith',\r\n    'Hagra',\r\n    'Haidelth',\r\n    'Haijiss',\r\n    'Hainen',\r\n    'Hakhoim',\r\n    'Haklar',\r\n    'Haklor',\r\n    'Hakpard',\r\n    'Hala',\r\n    'Halbex',\r\n    'Halborn',\r\n    'Haldor',\r\n    'Haloth',\r\n    'Halperle',\r\n    'Halsan',\r\n    'Halût',\r\n    'Halvner',\r\n    'Hamba',\r\n    'Hamisk',\r\n    'Hanastre',\r\n    'Handra',\r\n    'Hanil',\r\n    'Hanierth',\r\n    'Hanith',\r\n    'Hantar',\r\n    'Hanthryn',\r\n    'Hapvar',\r\n    'Haral',\r\n    'Harave',\r\n    'Harchyl',\r\n    'Harfare',\r\n    'Hargan',\r\n    'Harnir',\r\n    'Harntil',\r\n    'Harnyrse',\r\n    'Harpann',\r\n    'Harran',\r\n    'Harrelm',\r\n    'Harstar',\r\n    'Hartaz',\r\n    'Harthan',\r\n    'Harthex',\r\n    'Harthran',\r\n    'Hartrond',\r\n    'Harvas',\r\n    'Harvel',\r\n    'Harzelle',\r\n    'Haspid',\r\n    'Hasrick',\r\n    'Hatchiss',\r\n    'Hatrasd',\r\n    'Havin',\r\n    'Havrel',\r\n    'Hawklin',\r\n    'Hawkram',\r\n    'Hawkran',\r\n    'Hawkreld',\r\n    'Hawleet',\r\n    'Hawljin',\r\n    'Hawtran',\r\n    'Haxas',\r\n    'Hazgarl',\r\n    'Hazkar',\r\n    'Hazrond',\r\n    'Hazvelc',\r\n    'Hazyrg',\r\n    'Hazzal',\r\n    'Hearroj',\r\n    'Hedin',\r\n    'Heenarg',\r\n    'Heengul',\r\n    'Hefpyre',\r\n    'Heinvroh',\r\n    'Helaz',\r\n    'Heldix',\r\n    'Helflitz',\r\n    'Helir',\r\n    'Helsdal',\r\n    'Helsur',\r\n    'Helvem',\r\n    'Hembra',\r\n    'Heram',\r\n    'Herisk',\r\n    'Herndre',\r\n    'Herrul',\r\n    'Herthose',\r\n    'Herym',\r\n    'Herzick',\r\n    'Hespek',\r\n    'Hesrel',\r\n    'Hessun',\r\n    'Hetcroft',\r\n    'Hethar',\r\n    'Hethra',\r\n    'Heurhyl',\r\n    'Hexil',\r\n    'Hezron',\r\n    'Heztor',\r\n    'Hibriss',\r\n    'Hienn',\r\n    'Hiffelk',\r\n    'Hifforn',\r\n    'Hifryn',\r\n    'Hildred',\r\n    'Hilix',\r\n    'Hiljin',\r\n    'Hilxin',\r\n    'Himlon',\r\n    'Himon',\r\n    'Himvli',\r\n    'Hinthan',\r\n    'Hinzay',\r\n    'Hireal',\r\n    'Hirrean',\r\n    'Hisrilf',\r\n    'Hisvran',\r\n    'Hizar',\r\n    'Hizron',\r\n    'Hjalmar',\r\n    'Hjeldin',\r\n    'Hjordrik',\r\n    'Hlyrmis',\r\n    'Hobtalg',\r\n    'Hoesgald',\r\n    'Holay',\r\n    'Holgar',\r\n    'Hollox',\r\n    'Holthan',\r\n    'Homli',\r\n    'Honturg',\r\n    'Hophand',\r\n    'Hoprig',\r\n    'Horan',\r\n    'Horglin',\r\n    'Horjak',\r\n    'Horlask',\r\n    'Hormatz',\r\n    'Horond',\r\n    'Horros',\r\n    'Horthoon',\r\n    'Horzak',\r\n    'Hotath',\r\n    'Hothcog',\r\n    'Hothcol',\r\n    'Hrasha',\r\n    'Hrasquer',\r\n    'Hrelar',\r\n    'Hresheuth',\r\n    'Hrinspire',\r\n    'Hroleur',\r\n    'Hrönir',\r\n    'Hrossa',\r\n    'Hrostar',\r\n    'Hsaptren',\r\n    'Humbuss',\r\n    'Humquor',\r\n    'Hunard',\r\n    'Hundar',\r\n    'Hurcad',\r\n    'Hurgal',\r\n    'Hurnod',\r\n    'Hurrisk',\r\n    'Hursin',\r\n    'Hurvin',\r\n    'Hurym',\r\n    'Hussuln',\r\n    'Huusim',\r\n    'Hyarante',\r\n    'Hyfryn',\r\n    'Hylar',\r\n    'Hyssome',\r\n    'Hyxley',\r\n    'Hyzail',\r\n    'Hyzen',\r\n    'Ibchol',\r\n    'Ibizt',\r\n    'Ibrolg',\r\n    'Ica',\r\n    'Ictar',\r\n    'Iduun',\r\n    'Ighai',\r\n    'Ignale',\r\n    'Ignire',\r\n    'Igraa',\r\n    'Igresk',\r\n    'Iijind',\r\n    'Iithkin',\r\n    'Ijeng',\r\n    'Ikalss',\r\n    'Ikeen',\r\n    'Ikkrish',\r\n    'Ikléy',\r\n    'Ildel',\r\n    'Ildelft',\r\n    'Ildin',\r\n    'Ildis',\r\n    'Ildnarr',\r\n    'Illa',\r\n    'Illyis',\r\n    'Ilnim',\r\n    'Ilruhn',\r\n    'Ilsuor',\r\n    'Ilthoss',\r\n    'Iltrilt',\r\n    'Iltrogh',\r\n    'Ilva',\r\n    'Ilvar',\r\n    'Ilxar',\r\n    'Ilyag',\r\n    'Imcanx',\r\n    'Imcolg',\r\n    'Imdiv',\r\n    'Imhas',\r\n    'Immak',\r\n    'Immoyr',\r\n    'Imnarl',\r\n    'Impag',\r\n    'Imrib',\r\n    'Imrift',\r\n    'Imtsith',\r\n    'Indlech',\r\n    'Indloth',\r\n    'Indlut',\r\n    'Indred',\r\n    'Ingarh',\r\n    'Ingelk',\r\n    'Ingen',\r\n    'Inghar',\r\n    'Ingolm',\r\n    'Ingrald',\r\n    'Inilv',\r\n    'Inis',\r\n    'Innluu',\r\n    'Inoke',\r\n    'Inslar',\r\n    'Iom',\r\n    'Ipshoom',\r\n    'Iraiz',\r\n    'Iras',\r\n    'Irauld',\r\n    'Iraunt',\r\n    'Irbry',\r\n    'Irchel',\r\n    'Irex',\r\n    'Irglas',\r\n    'Irlen',\r\n    'Irough',\r\n    'Irrash',\r\n    'Irrax',\r\n    'Irsai',\r\n    'Iruste',\r\n    'Irwick',\r\n    'Irxeath',\r\n    'Isbard',\r\n    'Ishan',\r\n    'Ishenx',\r\n    'Ishgan',\r\n    'Ishkar',\r\n    'Ishlak',\r\n    'Ishshan',\r\n    'Ishya',\r\n    'Islarch',\r\n    'Ismlok',\r\n    'Isorn',\r\n    'Isphek',\r\n    'Issa',\r\n    'Isstan',\r\n    'Itaaq',\r\n    'Ithend',\r\n    'Ithkaar',\r\n    'Ithome',\r\n    'Ivaade',\r\n    'Ivaire',\r\n    'Ivind',\r\n    'Ivool',\r\n    'Ivorn',\r\n    'Ivral',\r\n    'Ivran',\r\n    'Ivrax',\r\n    'Ivyd',\r\n    'Ivyod',\r\n    'Ixan',\r\n    'Ixaq',\r\n    'Ixor',\r\n    'Iygin',\r\n    'Izinth',\r\n    'Izleng',\r\n    'Izmisk',\r\n    'Iztra',\r\n    'Izvire',\r\n    'Jaadis',\r\n    'Jaagix',\r\n    'Jaalmez',\r\n    'Jaalon',\r\n    'Jaaluth',\r\n    'Jablant',\r\n    'Jacor',\r\n    'Jadir',\r\n    'Jado',\r\n    'Jadoorm',\r\n    'Jaedan',\r\n    'Jaelyss',\r\n    'Jagan',\r\n    'Jaggol',\r\n    'Jagrid',\r\n    'Jahir',\r\n    'Jahrgrim',\r\n    'Jaidu',\r\n    'Jaldeer',\r\n    'Jalmid',\r\n    'Jalom',\r\n    'Jama',\r\n    'Janam',\r\n    'Janan',\r\n    'Jandix',\r\n    'Janlay',\r\n    'Jano',\r\n    'Janrass',\r\n    'Jantust',\r\n    'Janu',\r\n    'Japloon',\r\n    'Jarad',\r\n    'Jarilz',\r\n    'Jariz',\r\n    'Jarlew',\r\n    'Jarlith',\r\n    'Jarngor',\r\n    'Jarra',\r\n    'Jartak',\r\n    'Jartusk',\r\n    'Jarveen',\r\n    'Jarvil',\r\n    'Jarvix',\r\n    'Jarzad',\r\n    'Jasir',\r\n    'Jasphar',\r\n    'Jaswen',\r\n    'Jaussig',\r\n    'Jautan',\r\n    'Javen',\r\n    'Javert',\r\n    'Javrik',\r\n    'Javtir',\r\n    'Jaxal',\r\n    'Jaxel',\r\n    'Jaylence',\r\n    'Jazanne',\r\n    'Jazraal',\r\n    'Jazrel',\r\n    'Jazrode',\r\n    'Jebhart',\r\n    'Jedra',\r\n    'Jeeldor',\r\n    'Jeelteg',\r\n    'Jehzehr',\r\n    'Jelthar',\r\n    'Jekkar',\r\n    'Jelantru',\r\n    'Jelday',\r\n    'Jeldor',\r\n    'Jelym',\r\n    'Jenbow',\r\n    'Jendarr',\r\n    'Jenkisk',\r\n    'Jerdys',\r\n    'Jerec',\r\n    'Jerel',\r\n    'Jerim',\r\n    'Jessel',\r\n    'Jetashe',\r\n    'Jethrik',\r\n    'Jeven',\r\n    'Jevist',\r\n    'Jezreel',\r\n    'Jezzar',\r\n    'Jezzra',\r\n    'Jhebdaeg',\r\n    'Jheexadh',\r\n    'Jheluth',\r\n    'Jherrox',\r\n    'Jhinarr',\r\n    'Jhinith',\r\n    'Jhorin',\r\n    'Jhourlann',\r\n    'Jhumpoust',\r\n    'Jhuvar',\r\n    'Jiaf',\r\n    'Jianc',\r\n    'Jiglak',\r\n    'Jihalg',\r\n    'Jilsa',\r\n    'Jiltarn',\r\n    'Jinnow',\r\n    'Jintlorn',\r\n    'Jinvik',\r\n    'Jiral',\r\n    'Jirnon',\r\n    'Jirnost',\r\n    'Jisa',\r\n    'Jithrast',\r\n    'Jixile',\r\n    'Joamorsk',\r\n    'Jobel',\r\n    'Jolrant',\r\n    'Jolsir',\r\n    'Jomec',\r\n    'Jomsut',\r\n    'Jondar',\r\n    'Jooskan',\r\n    'Jorad',\r\n    'Jorael',\r\n    'Joram',\r\n    'Joran',\r\n    'Jorel',\r\n    'Jornic',\r\n    'Joron',\r\n    'Jorvim',\r\n    'Joskyl',\r\n    'Jossak',\r\n    'Jostib',\r\n    'Jothal',\r\n    'Jovaine',\r\n    'Joysair',\r\n    'Jugeen',\r\n    'Juldrake',\r\n    'Julix',\r\n    'Julphra',\r\n    'Jultus',\r\n    'Jungro',\r\n    'Junnar',\r\n    'Jurin',\r\n    'Jurinn',\r\n    'Jurret',\r\n    'Jushdak',\r\n    'Justix',\r\n    'Juthcot',\r\n    'Juxpire',\r\n    'Jynyx',\r\n    'Jyvlex',\r\n    'Kaanpell',\r\n    'Kadjix',\r\n    'Kaerjeld',\r\n    'Kaggoth',\r\n    'Kagolm',\r\n    'Kahlan',\r\n    'Kahmahr',\r\n    'Kaiya',\r\n    'Kaklo',\r\n    'Kaldrak',\r\n    'Kalduk',\r\n    'Kalen',\r\n    'Kaliss',\r\n    'Kallak',\r\n    'Kalshai',\r\n    'Kalthen',\r\n    'Kalvek',\r\n    'Kalvran',\r\n    'Kalxin',\r\n    'Kaman',\r\n    'Kamlant',\r\n    'Kamon',\r\n    'Kander',\r\n    'Kangmir',\r\n    'Kangmor',\r\n    'Kanliin',\r\n    'Kanpo',\r\n    'Kantar',\r\n    'Kanthrix',\r\n    'Kantran',\r\n    'Kanven',\r\n    'Kaplull',\r\n    'Karchad',\r\n    'Karchen',\r\n    'Karchoy',\r\n    'Karcist',\r\n    'Karect',\r\n    'Kareeb',\r\n    'Kargon',\r\n    'Karjin',\r\n    'Karjus',\r\n    'Karkrust',\r\n    'Karnek',\r\n    'Karrax',\r\n    'Karrim',\r\n    'Karsa',\r\n    'Karstall',\r\n    'Kartol',\r\n    'Kasel',\r\n    'Kashir',\r\n    'Kashtuul',\r\n    'Kaspim',\r\n    'Kaspin',\r\n    'Kassar',\r\n    'Katan',\r\n    'Kathak',\r\n    'Kathar',\r\n    'Kathasp',\r\n    'Kathor',\r\n    'Kattelg',\r\n    'Kattra',\r\n    'Kaukris',\r\n    'Kavar',\r\n    'Kavarl',\r\n    'Kavath',\r\n    'Kavis',\r\n    'Kavor',\r\n    'Kayesp',\r\n    'Kayris',\r\n    'Kazarn',\r\n    'Keanca',\r\n    'Kedern',\r\n    'Keerlin',\r\n    'Keermeth',\r\n    'Kegryn',\r\n    'Keigtril',\r\n    'Kekkan',\r\n    'Kelar',\r\n    'Keldar',\r\n    'Kelgus',\r\n    'Kelkor',\r\n    'Kelmar',\r\n    'Kelner',\r\n    'Kelrac',\r\n    'Kelshiir',\r\n    'Kelver',\r\n    'Kelvon',\r\n    'Kelvyath',\r\n    'Kember',\r\n    'Kembriss',\r\n    'Kemoy',\r\n    'Kenshlin',\r\n    'Keraan',\r\n    'Kerdal',\r\n    'Kered',\r\n    'Kerrol',\r\n    'Kersenct',\r\n    'Keru',\r\n    'Kerzard',\r\n    'Kesdric',\r\n    'Kesnahr',\r\n    'Kespeth',\r\n    'Kesrack',\r\n    'Kesrick',\r\n    'Kethdjal',\r\n    'Kethrak',\r\n    'Kevlad',\r\n    'Kexy',\r\n    'Kezven',\r\n    'Khadar',\r\n    'Khadys',\r\n    'Khalart',\r\n    'Khaldan',\r\n    'Khalir',\r\n    'Kheverl',\r\n    'Khondru',\r\n    'Khordov',\r\n    'Khrissa',\r\n    'Khrithra',\r\n    'Khrosa',\r\n    'Khudrax',\r\n    'Khugweb',\r\n    'Kian',\r\n    'Kibbath',\r\n    'Kibha',\r\n    'Kidash',\r\n    'Kiirmu',\r\n    'Kijmin',\r\n    'Kikrasht',\r\n    'Kilas',\r\n    'Kilat',\r\n    'Kilgand',\r\n    'Kilisp',\r\n    'Kilmin',\r\n    'Kimda',\r\n    'Kinduhr',\r\n    'Kinorm',\r\n    'Kinzroft',\r\n    'Kipplob',\r\n    'Kirdon',\r\n    'Kirklen',\r\n    'Kiroum',\r\n    'Kirrax',\r\n    'Kirun',\r\n    'Kirskar',\r\n    'Kirzav',\r\n    'Kisarld',\r\n    'Kishin',\r\n    'Kismer',\r\n    'Kismerle',\r\n    'Kisprimn',\r\n    'Kiston',\r\n    'Kisvord',\r\n    'Kithert',\r\n    'Kithorsk',\r\n    'Kithund',\r\n    'Kithvor',\r\n    'Kivan',\r\n    'Kivooz',\r\n    'Kivoum',\r\n    'Kixime',\r\n    'Kizmay',\r\n    'Kjeldor',\r\n    'Kjindar',\r\n    'Koabon',\r\n    'Kofoum',\r\n    'Koino',\r\n    'Kolbect',\r\n    'Kolchash',\r\n    'Kolduk',\r\n    'Kolthya',\r\n    'Kolvram',\r\n    'Konvain',\r\n    'Korak',\r\n    'Korban',\r\n    'Kordale',\r\n    'Koren',\r\n    'Koreth',\r\n    'Korghil',\r\n    'Korix',\r\n    'Korlisk',\r\n    'Kornor',\r\n    'Kornud',\r\n    'Korok',\r\n    'Korrik',\r\n    'Korsal',\r\n    'Korseng',\r\n    'Kortael',\r\n    'Kortenj',\r\n    'Korthoon',\r\n    'Koruk',\r\n    'Korusk',\r\n    'Korvar',\r\n    'Kosjourn',\r\n    'Kothar',\r\n    'Koxir',\r\n    'Kozzir',\r\n    'Kraatin',\r\n    'Krallorn',\r\n    'Krana',\r\n    'Krangar',\r\n    'Kranorn',\r\n    'Krantheer',\r\n    'Krantor',\r\n    'Kredhal',\r\n    'Kregnux',\r\n    'Krelgar',\r\n    'Krentomzh',\r\n    'Kressen',\r\n    'Krexnahr',\r\n    'Krillon',\r\n    'Krissenq',\r\n    'Kroëld',\r\n    'Krotald',\r\n    'Krotar',\r\n    'Krotem',\r\n    'Kruchaen',\r\n    'Krynerl',\r\n    'Kugar',\r\n    'Kuldrah',\r\n    'Kulik',\r\n    'Kulleest',\r\n    'Kulxel',\r\n    'Kunatht',\r\n    'Kurdghar',\r\n    'Kurgnar',\r\n    'Kuruz',\r\n    'Kurvos',\r\n    'Kushish',\r\n    'Kydra',\r\n    'Kyladz',\r\n    'Kylcrum',\r\n    'Kylix',\r\n    'Kyllam',\r\n    'Kymen',\r\n    'Kyrake',\r\n    'Kyrmo',\r\n    'Kyrsha',\r\n    'Kyshi',\r\n    'Kysho',\r\n    'Laabrun',\r\n    'Laarskim',\r\n    'Laconde',\r\n    'Laël',\r\n    'Lagu',\r\n    'Lailaske',\r\n    'Laithare',\r\n    'Lakis',\r\n    'Lalan',\r\n    'Lalit',\r\n    'Lalun',\r\n    'Lampor',\r\n    'Lanaar',\r\n    'Landish',\r\n    'Landreth',\r\n    'Langbar',\r\n    'Lanreex',\r\n    'Lanscitt',\r\n    'Lanteld',\r\n    'Lantis',\r\n    'Lantos',\r\n    'Lanvilt',\r\n    'Lanycth',\r\n    'Lanzee',\r\n    'Lanzept',\r\n    'Larbrun',\r\n    'Laresm',\r\n    'Larid',\r\n    'Larind',\r\n    'Larkrosp',\r\n    'Lasquor',\r\n    'Lathir',\r\n    'Lathmarc',\r\n    'Latra',\r\n    'Laudrin',\r\n    'Laxar',\r\n    'Laydor',\r\n    'Layek',\r\n    'Lazelle',\r\n    'Ledmai',\r\n    'Leela',\r\n    'Leena',\r\n    'Leerank',\r\n    'Leesclar',\r\n    'Leggwyt',\r\n    'Leghast',\r\n    'Lehun',\r\n    'Leistorn',\r\n    'Lembarl',\r\n    'Lemgaar',\r\n    'Lemtarn',\r\n    'Lendra',\r\n    'Lensith',\r\n    'Lenzeel',\r\n    'Lephais',\r\n    'Lephern',\r\n    'Leqquan',\r\n    'Lerdeln',\r\n    'Lerlya',\r\n    'Lermest',\r\n    'Lerquint',\r\n    'Lestin',\r\n    'Letek',\r\n    'Lexan',\r\n    'Lextraa',\r\n    'Leystorne',\r\n    'Lherache',\r\n    'Lhusark',\r\n    'Liance',\r\n    'Libourne',\r\n    'Lidrill',\r\n    'Lilir',\r\n    'Lilnid',\r\n    'Liltar',\r\n    'Limdal',\r\n    'Limhoth',\r\n    'Limka',\r\n    'Limson',\r\n    'Lindarl',\r\n    'Lindlorn',\r\n    'Linlaith',\r\n    'Linmer',\r\n    'Linor',\r\n    'Linspar',\r\n    'Lintan',\r\n    'Lintra',\r\n    'Liosse',\r\n    'Liphrodd',\r\n    'Lirram',\r\n    'Lishran',\r\n    'Liskeel',\r\n    'Lissar',\r\n    'Lisstar',\r\n    'Lisstra',\r\n    'Liston',\r\n    'Lisvorn',\r\n    'Litheem',\r\n    'Lithrad',\r\n    'Littwyst',\r\n    'Lixelle',\r\n    'Lixeth',\r\n    'Lixter',\r\n    'Lizki',\r\n    'Lobror',\r\n    'Logas',\r\n    'Lohmi',\r\n    'Loiarl',\r\n    'Loomar',\r\n    'Loorin',\r\n    'Loorzig',\r\n    'Loraem',\r\n    'Loral',\r\n    'Lorbis',\r\n    'Lorrhin',\r\n    'Lorrin',\r\n    'Lorvra',\r\n    'Lothilv',\r\n    'Louwend',\r\n    'Lovoz',\r\n    'Loxzor',\r\n    'Luast',\r\n    'Lubist',\r\n    'Lucenne',\r\n    'Lufraut',\r\n    'Lumas',\r\n    'Lumfa',\r\n    'Lunzar',\r\n    'Lurand',\r\n    'Lurash',\r\n    'Lurin',\r\n    'Luscan',\r\n    'Lutril',\r\n    'Luzfel',\r\n    'Lyanec',\r\n    'Lyeüm',\r\n    'Lylix',\r\n    'Lyra',\r\n    'Lyrin',\r\n    'Lyron',\r\n    'Maaga',\r\n    'Macra',\r\n    'Macrad',\r\n    'Maefon',\r\n    'Maegwin',\r\n    'Maerraent',\r\n    'Magalph',\r\n    'Maghan',\r\n    'Maglone',\r\n    'Magmarl',\r\n    'Magnyck',\r\n    'Mahhri',\r\n    'Mahrik',\r\n    'Maidah',\r\n    'Maidak',\r\n    'Mairish',\r\n    'Maisa',\r\n    'Maisan',\r\n    'Majan',\r\n    'Makamb',\r\n    'Makisp',\r\n    'Malak',\r\n    'Malasc',\r\n    'Malber',\r\n    'Malboe',\r\n    'Malda',\r\n    'Maldock',\r\n    'Malfar',\r\n    'Malgrah',\r\n    'Malheme',\r\n    'Malinsp',\r\n    'Malkorf',\r\n    'Malnurb',\r\n    'Malthen',\r\n    'Maltheus',\r\n    'Malthgri',\r\n    'Malthor',\r\n    'Malvisp',\r\n    'Malwer',\r\n    'Malzhé',\r\n    'Mandrask',\r\n    'Manggrim',\r\n    'Mankril',\r\n    'Manthi',\r\n    'Manton',\r\n    'Maöl',\r\n    'Mapyn',\r\n    'Marack',\r\n    'Maraide',\r\n    'Marasp',\r\n    'Marath',\r\n    'Marax',\r\n    'Marclaw',\r\n    'Marcoorg',\r\n    'Mardhrene',\r\n    'Mardix',\r\n    'Mardur',\r\n    'Mareft',\r\n    'Marhalk',\r\n    'Marhart',\r\n    'Marjaan',\r\n    'Markryn',\r\n    'Marlath',\r\n    'Marlock',\r\n    'Marnec',\r\n    'Maroosh',\r\n    'Marost',\r\n    'Marrek',\r\n    'Marrhal',\r\n    'Marrhan',\r\n    'Marril',\r\n    'Marslin',\r\n    'Marslai',\r\n    'Martheel',\r\n    'Marul',\r\n    'Marvold',\r\n    'Marwhool',\r\n    'Mascrox',\r\n    'Maskrulp',\r\n    'Masplern',\r\n    'Masply',\r\n    'Masquoor',\r\n    'Masryn',\r\n    'Massac',\r\n    'Mastram',\r\n    'Mastrith',\r\n    'Mastruse',\r\n    'Mathgi',\r\n    'Mathlin',\r\n    'Mattraw',\r\n    'Matzin',\r\n    'Maularn',\r\n    'Maundrib',\r\n    'Maurdax',\r\n    'Maustere',\r\n    'Mavasce',\r\n    'Mavic',\r\n    'Mavkert',\r\n    'Mavour',\r\n    'Maxil',\r\n    'Mayern',\r\n    'Maylern',\r\n    'Maylin',\r\n    'Mayrime',\r\n    'Mazzyott',\r\n    'Medarm',\r\n    'Meder',\r\n    'Medist',\r\n    'Meeratz',\r\n    'Meffroa',\r\n    'Mefron',\r\n    'Meglos',\r\n    'Megwen',\r\n    'Mejea',\r\n    'Mekosp',\r\n    'Melaunce',\r\n    'Meldresc',\r\n    'Meleas',\r\n    'Melib',\r\n    'Melisk',\r\n    'Meljarn',\r\n    'Melkur',\r\n    'Melleg',\r\n    'Mellore',\r\n    'Melnayl',\r\n    'Melnyth',\r\n    'Melshiv',\r\n    'Melslem',\r\n    'Melviig',\r\n    'Mendra',\r\n    'Mengisp',\r\n    'Menksoor',\r\n    'Menna',\r\n    'Mephyr',\r\n    'Merdim',\r\n    'Merewn',\r\n    'Merkal',\r\n    'Merkan',\r\n    'Merley',\r\n    'Mermold',\r\n    'Mermoth',\r\n    'Merngar',\r\n    'Merophe',\r\n    'Merresh',\r\n    'Merrest',\r\n    'Merrost',\r\n    'Merryn',\r\n    'Mershun',\r\n    'Mersic',\r\n    'Mersna',\r\n    'Merssan',\r\n    'Merthyr',\r\n    'Merweld',\r\n    'Mesrah',\r\n    'Mesrawn',\r\n    'Mestorl',\r\n    'Mestrin',\r\n    'Methnos',\r\n    'Metrosq',\r\n    'Mevid',\r\n    'Mezard',\r\n    'Mhoran',\r\n    'Mhordaal',\r\n    'Mhovair',\r\n    'Mhurdaal',\r\n    'Mhyrrail',\r\n    'Mianth',\r\n    'Mibris',\r\n    'Micrum',\r\n    'Mida',\r\n    'Midor',\r\n    'Mifrax',\r\n    'Migglin',\r\n    'Mijar',\r\n    'Mijhyk',\r\n    'Mikird',\r\n    'Mileern',\r\n    'Milzrik',\r\n    'Mimur',\r\n    'Minom',\r\n    'Minvra',\r\n    'Minyal',\r\n    'Miraad',\r\n    'Mirach',\r\n    'Mircheld',\r\n    'Mirdain',\r\n    'Mirdij',\r\n    'Mirdole',\r\n    'Mireth',\r\n    'Mirglish',\r\n    'Mirhaz',\r\n    'Mirikke',\r\n    'Mirja',\r\n    'Mirjanth',\r\n    'Mirjenx',\r\n    'Mirkaise',\r\n    'Mirkin',\r\n    'Mirla',\r\n    'Mirrash',\r\n    'Mirrin',\r\n    'Mirrym',\r\n    'Mirtrax',\r\n    'Miryash',\r\n    'Mishaar',\r\n    'Mishim',\r\n    'Miskin',\r\n    'Miskul',\r\n    'Misrach',\r\n    'Miszlar',\r\n    'Mithbrin',\r\n    'Mithlerb',\r\n    'Mitrel',\r\n    'Mivarch',\r\n    'Mivrid',\r\n    'Miwarl',\r\n    'Mixtry',\r\n    'Mizarl',\r\n    'Mizma',\r\n    'Mizrab',\r\n    'Mlenjas',\r\n    'Mlocber',\r\n    'Mlodach',\r\n    'Moda',\r\n    'Mogorn',\r\n    'Moirulse',\r\n    'Molez',\r\n    'Mollith',\r\n    'Molnyx',\r\n    'Molrin',\r\n    'Molvigg',\r\n    'Molvind',\r\n    'Mommur',\r\n    'Monmar',\r\n    'Moondar',\r\n    'Mooneld',\r\n    'Moorith',\r\n    'Moorlow',\r\n    'Moormish',\r\n    'Moran',\r\n    'Morax',\r\n    'Morcal',\r\n    'Morchiss',\r\n    'Mordak',\r\n    'Mordlaw',\r\n    'Mordoc',\r\n    'Mordyle',\r\n    'Moreth',\r\n    'Morgath',\r\n    'Morgleeg',\r\n    'Morglin',\r\n    'Morgmar',\r\n    'Morgrim',\r\n    'Morhain',\r\n    'Morix',\r\n    'Morktar',\r\n    'Morla',\r\n    'Morlig',\r\n    'Morlosc',\r\n    'Mornith',\r\n    'Morrhan',\r\n    'Morsklon',\r\n    'Morssen',\r\n    'Mortan',\r\n    'Morthyld',\r\n    'Morvaen',\r\n    'Moryak',\r\n    'Moshaol',\r\n    'Mosyerl',\r\n    'Moyank',\r\n    'Mozoorb',\r\n    'Mrossard',\r\n    'Mubfusc',\r\n    'Mubur',\r\n    'Mudanc',\r\n    'Mudaz',\r\n    'Muhlenk',\r\n    'Muilt',\r\n    'Mungin',\r\n    'Munin',\r\n    'Murgaist',\r\n    'Murhsan',\r\n    'Mustile',\r\n    'Muuthas',\r\n    'Mygon',\r\n    'Myndax',\r\n    'Myrii',\r\n    'Myrnar',\r\n    'Myronce',\r\n    'Myrrim',\r\n    'Myrvarth',\r\n    'Myrya',\r\n    'Mysind',\r\n    'Mysmak',\r\n    'Naadem',\r\n    'Naadra',\r\n    'Naafa',\r\n    'Naalvad',\r\n    'Naasjerth',\r\n    'Nabdoor',\r\n    'Nabol',\r\n    'Nadar',\r\n    'Nadhil',\r\n    'Nadin',\r\n    'Nagai',\r\n    'Naghir',\r\n    'Nagist',\r\n    'Nagvar',\r\n    'Nahar',\r\n    'Nahoul',\r\n    'Naia',\r\n    'Naidel',\r\n    'Naidis',\r\n    'Naidule',\r\n    'Naidusk',\r\n    'Naion',\r\n    'Naisnim',\r\n    'Naithool',\r\n    'Nakrea',\r\n    'Nalbis',\r\n    'Naldecc',\r\n    'Nalkleth',\r\n    'Nalray',\r\n    'Namail',\r\n    'Namat',\r\n    'Namoin',\r\n    'Namvert',\r\n    'Nandrulg',\r\n    'Namphruk',\r\n    'Nantarth',\r\n    'Naök',\r\n    'Napolx',\r\n    'Naras',\r\n    'Nardalg',\r\n    'Naren',\r\n    'Narev',\r\n    'Nargath',\r\n    'Narjath',\r\n    'Narkrisst',\r\n    'Naron',\r\n    'Narqui',\r\n    'Narsok',\r\n    'Narthold',\r\n    'Nartolth',\r\n    'Narvi',\r\n    'Narvik',\r\n    'Nasank',\r\n    'Nasir',\r\n    'Natchai',\r\n    'Natchren',\r\n    'Natein',\r\n    'Nathlim',\r\n    'Nathor',\r\n    'Nathraq',\r\n    'Nautcheb',\r\n    'Navai',\r\n    'Navairnz',\r\n    'Navar',\r\n    'Navesm',\r\n    'Nazaarl',\r\n    'Ndola',\r\n    'Nebcherl',\r\n    'Nebron',\r\n    'Nectesce',\r\n    'Neelrix',\r\n    'Neepmire',\r\n    'Nefhorn',\r\n    'Negert',\r\n    'Negort',\r\n    'Nelat',\r\n    'Nelbron',\r\n    'Nelesck',\r\n    'Nelynn',\r\n    'Nemstere',\r\n    'Nemweal',\r\n    'Nenaire',\r\n    'Nengret',\r\n    'Nephard',\r\n    'Nephog',\r\n    'Neri',\r\n    'Nerish',\r\n    'Neruus',\r\n    'Nerveer',\r\n    'Nesbin',\r\n    'Neshkem',\r\n    'Nesser',\r\n    'Nestra',\r\n    'Nesvan',\r\n    'Nethelb',\r\n    'Netskra',\r\n    'Nevlyn',\r\n    'Newhar',\r\n    'Nexoz',\r\n    'Nextar',\r\n    'Nexxar',\r\n    'Neywode',\r\n    'Nezuel',\r\n    'Nezzdak',\r\n    'Niand',\r\n    'Nibine',\r\n    'Nibor',\r\n    'Niconde',\r\n    'Nictroi',\r\n    'Nida',\r\n    'Nifeld',\r\n    'Nigil',\r\n    'Nigräl',\r\n    'Nijim',\r\n    'Nijis',\r\n    'Nikusp',\r\n    'Nilgorm',\r\n    'Nilnoi',\r\n    'Nimbol',\r\n    'Nimir',\r\n    'Nimon',\r\n    'Nimrede',\r\n    'Nindiss',\r\n    'Nireal',\r\n    'Nirel',\r\n    'Nirhain',\r\n    'Nirhath',\r\n    'Nirloge',\r\n    'Nirnir',\r\n    'Nisherj',\r\n    'Nishla',\r\n    'Nishmir',\r\n    'Nishran',\r\n    'Nissac',\r\n    'Nissal',\r\n    'Nithilt',\r\n    'Nithlom',\r\n    'Nitra',\r\n    'Nivenk',\r\n    'Nivgrom',\r\n    'Nixin',\r\n    'Nizoon',\r\n    'Nizten',\r\n    'Nogaarn',\r\n    'Nokelm',\r\n    'Nolfig',\r\n    'Noloq',\r\n    'Nolthar',\r\n    'Noorlim',\r\n    'Norahl',\r\n    'Nordell',\r\n    'Nordran',\r\n    'Norfroib',\r\n    'Norin',\r\n    'Noroj',\r\n    'Norstoj',\r\n    'Novvulse',\r\n    'Noxit',\r\n    'Nrial',\r\n    'Nuad',\r\n    'Nubweft',\r\n    'Nuendo',\r\n    'Nuhar',\r\n    'Nulka',\r\n    'Nulvilch',\r\n    'Nummag',\r\n    'Nurgan',\r\n    'Nurrzek',\r\n    'Nuscolg',\r\n    'Nushla',\r\n    'Nuuzsal',\r\n    'Nuxile',\r\n    'Nuzain',\r\n    'Nyankra',\r\n    'Nyassaed',\r\n    'Nybron',\r\n    'Nyconth',\r\n    'Nydaur',\r\n    'Nyeon',\r\n    'Nylray',\r\n    'Nynaeve',\r\n    'Nyra',\r\n    'Nyren',\r\n    'Nysra',\r\n    'Oaffleg',\r\n    'Oakine',\r\n    'Oalilse',\r\n    'Oalyn',\r\n    'Oarine',\r\n    'Obron',\r\n    'Obtin',\r\n    'Ocarg',\r\n    'Oedjert',\r\n    'Oeglath',\r\n    'Oejos',\r\n    'Oenu',\r\n    'Oerusk',\r\n    'Oggran',\r\n    'Ogmarx',\r\n    'Ogstlang',\r\n    'Ohmir',\r\n    'Ohmoul',\r\n    'Ohrool',\r\n    'Ohwhon',\r\n    'Ohya',\r\n    'Olanc',\r\n    'Olbrod',\r\n    'Olcind',\r\n    'Oldaar',\r\n    'Oldac',\r\n    'Oleird',\r\n    'Olesk',\r\n    'Olgeerd',\r\n    'Olisch',\r\n    'Olix',\r\n    'Olney',\r\n    'Olthang',\r\n    'Oluode',\r\n    'Olvoor',\r\n    'Omag',\r\n    'Omazd',\r\n    'Ombaast',\r\n    'Omdret',\r\n    'Omfelx',\r\n    'Omkraum',\r\n    'Omoq',\r\n    'Omron',\r\n    'Onchorl',\r\n    'Ondar',\r\n    'Onilsh',\r\n    'Oninsp',\r\n    'Onolk',\r\n    'Onvrix',\r\n    'Oonglax',\r\n    'Ooxaith',\r\n    'Opaor',\r\n    'Opchel',\r\n    'Opild',\r\n    'Opmar',\r\n    'Opult',\r\n    'Oqueln',\r\n    'Orasch',\r\n    'Orayl',\r\n    'Orbern',\r\n    'Orbohst',\r\n    'Orbweft',\r\n    'Ordol',\r\n    'Orgoch',\r\n    'Orgrool',\r\n    'Orhomb',\r\n    'Orinde',\r\n    'Orisse',\r\n    'Orix',\r\n    'Orjasp',\r\n    'Orkuuz',\r\n    'Orli',\r\n    'Orlim',\r\n    'Ormdrad',\r\n    'Ormerd',\r\n    'Ormuuz',\r\n    'Ornault',\r\n    'Ornith',\r\n    'Oroon',\r\n    'Orpax',\r\n    'Orrisk',\r\n    'Orsind',\r\n    'Orskog',\r\n    'Ortain',\r\n    'Orthmar',\r\n    'Ortholt',\r\n    'Orthroy',\r\n    'Ortkuz',\r\n    'Orvulse',\r\n    'Orwelt',\r\n    'Orxlorn',\r\n    'Osgleft',\r\n    'Oshraal',\r\n    'Osphel',\r\n    'Ospin',\r\n    'Osresp',\r\n    'Ossiz',\r\n    'Ossvule',\r\n    'Osthandl',\r\n    'Othast',\r\n    'Ottlan',\r\n    'Ovaile',\r\n    'Ovar',\r\n    'Owal',\r\n    'Owelft',\r\n    'Owlin',\r\n    'Ouxroul',\r\n    'Oxdren',\r\n    'Oxiv',\r\n    'Oxoor',\r\n    'Ozur',\r\n    'Padath',\r\n    'Palaor',\r\n    'Palew',\r\n    'Palifte',\r\n    'Palvem',\r\n    'Palzac',\r\n    'Pamar',\r\n    'Paminsk',\r\n    'Panarre',\r\n    'Pancraf',\r\n    'Pandak',\r\n    'Pandire',\r\n    'Paneesh',\r\n    'Pangaz',\r\n    'Paono',\r\n    'Paraerg',\r\n    'Parbha',\r\n    'Pargask',\r\n    'Pargus',\r\n    'Parmist',\r\n    'Parnon',\r\n    'Paroul',\r\n    'Parrsath',\r\n    'Paslaive',\r\n    'Paxilp',\r\n    'Pazot',\r\n    'Peaflod',\r\n    'Pelas',\r\n    'Pelase',\r\n    'Pelcourj',\r\n    'Pellin',\r\n    'Pelnos',\r\n    'Pelvest',\r\n    'Pemnarsc',\r\n    'Pendoir',\r\n    'Pendra',\r\n    'Pengarth',\r\n    'Pengron',\r\n    'Peraule',\r\n    'Percaal',\r\n    'Perdin',\r\n    'Perdis',\r\n    'Perisk',\r\n    'Perlask',\r\n    'Perral',\r\n    'Perreld',\r\n    'Perrinx',\r\n    'Perthald',\r\n    'Perzec',\r\n    'Pevel',\r\n    'Pexul',\r\n    'Pezloch',\r\n    'Phaithor',\r\n    'Phaleg',\r\n    'Phanstern',\r\n    'Phaovonce',\r\n    'Pharan',\r\n    'Phargon',\r\n    'Pharvis',\r\n    'Phatuum',\r\n    'Phayra',\r\n    'Phenquor',\r\n    'Phesjan',\r\n    'Phinerc',\r\n    'Phinna',\r\n    'Phinra',\r\n    'Phislid',\r\n    'Phlomel',\r\n    'Pholgon',\r\n    'Phondath',\r\n    'Phynynx',\r\n    'Phyzent',\r\n    'Pidnubb',\r\n    'Pilark',\r\n    'Pilkarn',\r\n    'Pirkrod',\r\n    'Pittheus',\r\n    'Planget',\r\n    'Plitkin',\r\n    'Pluroign',\r\n    'Pnakord',\r\n    'Poddle',\r\n    'Pohlon',\r\n    'Pohnoor',\r\n    'Poroon',\r\n    'Porsthil',\r\n    'Portlusce',\r\n    'Praamon',\r\n    'Praarin',\r\n    'Prabaar',\r\n    'Pravdile',\r\n    'Pressar',\r\n    'Presta',\r\n    'Pretil',\r\n    'Prilsorn',\r\n    'Pritantte',\r\n    'Pritjan',\r\n    'Prollel',\r\n    'Proter',\r\n    'Prothoon',\r\n    'Psattor',\r\n    'Psirrim',\r\n    'Pteron',\r\n    'Pulaaz',\r\n    'Pulisk',\r\n    'Pumish',\r\n    'Purrdiste',\r\n    'Puuhilsk',\r\n    'Puvas',\r\n    'Pyalvar',\r\n    'Pyra',\r\n    'Pyrafe',\r\n    'Pyreyn',\r\n    'Pyrjus',\r\n    'Pyular',\r\n    'Pyzzim',\r\n    'Qraatin',\r\n    'Quaestrin',\r\n    'Quagel',\r\n    'Quagrith',\r\n    'Quaïve',\r\n    'Quaman',\r\n    'Quamrith',\r\n    'Quanar',\r\n    'Quanthon',\r\n    'Quantra',\r\n    'Quanvire',\r\n    'Quardan',\r\n    'Quargom',\r\n    'Quarnos',\r\n    'Quarouth',\r\n    'Quasha',\r\n    'Queageth',\r\n    'Quedrech',\r\n    'Queeden',\r\n    'Queeyat',\r\n    'Quekal',\r\n    'Quelade',\r\n    'Queldrim',\r\n    'Quelges',\r\n    'Quelneth',\r\n    'Quelthar',\r\n    'Quembras',\r\n    'Quenna',\r\n    'Querkez',\r\n    'Querlo',\r\n    'Queryl',\r\n    'Quesan',\r\n    'Quesparl',\r\n    'Quesrol',\r\n    'Quevros',\r\n    'Queygo',\r\n    'Quiddel',\r\n    'Quidre',\r\n    'Quigmoss',\r\n    'Quilmose',\r\n    'Quinaut',\r\n    'Quindle',\r\n    'Quinga',\r\n    'Quinid',\r\n    'Quintarl',\r\n    'Quirrak',\r\n    'Quirvell',\r\n    'Quisrym',\r\n    'Quizlo',\r\n    'Quolbin',\r\n    'Quondoon',\r\n    'Quuddreus',\r\n    'Quyssa',\r\n    'Raaxis',\r\n    'Raband',\r\n    'Raberm',\r\n    'Rablaen',\r\n    'Rabuur',\r\n    'Raccyx',\r\n    'Racere',\r\n    'Radalt',\r\n    'Raddel',\r\n    'Radeld',\r\n    'Raën',\r\n    'Raëss',\r\n    'Raethel',\r\n    'Raevact',\r\n    'Rafain',\r\n    'Rafam',\r\n    'Rafarn',\r\n    'Rafmarth',\r\n    'Raftwen',\r\n    'Rafur',\r\n    'Ragdra',\r\n    'Ragen',\r\n    'Rago',\r\n    'Rahaz',\r\n    'Raina',\r\n    'Raïre',\r\n    'Raishauer',\r\n    'Raistlig',\r\n    'Raistoc',\r\n    'Rajan',\r\n    'Rajin',\r\n    'Raju',\r\n    'Rakeeg',\r\n    'Rakhan',\r\n    'Rakhaz',\r\n    'Rakheer',\r\n    'Rakkim',\r\n    'Rakspire',\r\n    'Rakthvi',\r\n    'Ralik',\r\n    'Ralir',\r\n    'Ralise',\r\n    'Ralith',\r\n    'Ralkeev',\r\n    'Ralvord',\r\n    'Ramat',\r\n    'Ramath',\r\n    'Ranax',\r\n    'Randar',\r\n    'Randor',\r\n    'Ranghen',\r\n    'Rangvair',\r\n    'Rani',\r\n    'Ranid',\r\n    'Ranousse',\r\n    'Ranthur',\r\n    'Ranûk',\r\n    'Ranyem',\r\n    'Rascha',\r\n    'Rascrag',\r\n    'Raslak',\r\n    'Rasmoth',\r\n    'Rastagg',\r\n    'Rastak',\r\n    'Ratai',\r\n    'Rater',\r\n    'Rathdome',\r\n    'Rathgor',\r\n    'Rathlede',\r\n    'Rathor',\r\n    'Raudal',\r\n    'Raudell',\r\n    'Ravann',\r\n    'Ravoe',\r\n    'Ravthek',\r\n    'Raxar',\r\n    'Raxen',\r\n    'Razdan',\r\n    'Razdel',\r\n    'Razul',\r\n    'Rebesc',\r\n    'Reddom',\r\n    'Redlac',\r\n    'Redleth',\r\n    'Reeval',\r\n    'Reevast',\r\n    'Regwelf',\r\n    'Relem',\r\n    'Rellskar',\r\n    'Rellzer',\r\n    'Relmnar',\r\n    'Relmund',\r\n    'Relthar',\r\n    'Remerst',\r\n    'Remist',\r\n    'Renair',\r\n    'Rendkett',\r\n    'Rendlorn',\r\n    'Renjik',\r\n    'Renlaw',\r\n    'Renna',\r\n    'Renquil',\r\n    'Resfrith',\r\n    'Reskem',\r\n    'Resna',\r\n    'Ressif',\r\n    'Restid',\r\n    'Retheer',\r\n    'Retor',\r\n    'Retraaj',\r\n    'Reuzor',\r\n    'Revas',\r\n    'Reyga',\r\n    'Reyna',\r\n    'Rezbain',\r\n    'Rezhar',\r\n    'Rhamaine',\r\n    'Rhandain',\r\n    'Rhavee',\r\n    'Rhaxdan',\r\n    'Rhenea',\r\n    'Rheya',\r\n    'Rhila',\r\n    'Rhiorn',\r\n    'Rhobban',\r\n    'Rhodelx',\r\n    'Rhojann',\r\n    'Rhylash',\r\n    'Riaal',\r\n    'Riak',\r\n    'Ribos',\r\n    'Ridun',\r\n    'Ridya',\r\n    'Rience',\r\n    'Rifdos',\r\n    'Rifgild',\r\n    'Rigar',\r\n    'Riklak',\r\n    'Riksul',\r\n    'Rila',\r\n    'Rillif',\r\n    'Rillu',\r\n    'Rilmorn',\r\n    'Rimchoze',\r\n    'Rimnaaj',\r\n    'Rimsall',\r\n    'Ringool',\r\n    'Rinquel',\r\n    'Rinthmaw',\r\n    'Ripurth',\r\n    'Risnys',\r\n    'Ristang',\r\n    'Riswod',\r\n    'Rivalke',\r\n    'Rivarsh',\r\n    'Rivcol',\r\n    'Riveld',\r\n    'Riverle',\r\n    'Rivlin',\r\n    'Rivoold',\r\n    'Rivrook',\r\n    'Rivvid',\r\n    'Rixel',\r\n    'Rixju',\r\n    'Rizhad',\r\n    'Rizzek',\r\n    'Roäk',\r\n    'Roakey',\r\n    'Roandat',\r\n    'Robforz',\r\n    'Rocaltz',\r\n    'Rodan',\r\n    'Rodhar',\r\n    'Roële',\r\n    'Roëll',\r\n    'Roethord',\r\n    'Rofloef',\r\n    'Rokeel',\r\n    'Rolthar',\r\n    'Rölyat',\r\n    'Rontayn',\r\n    'Roolenth',\r\n    'Roqual',\r\n    'Rorkar',\r\n    'Rothar',\r\n    'Roujat',\r\n    'Roweal',\r\n    'Roxhaast',\r\n    'Royanse',\r\n    'Royskyar',\r\n    'Rubarj',\r\n    'Rubiss',\r\n    'Rudrisk',\r\n    'Ruidh',\r\n    'Rukhjan',\r\n    'Rukuz',\r\n    'Rulbowe',\r\n    'Rulmool',\r\n    'Rumael',\r\n    'Rupaic',\r\n    'Rupsey',\r\n    'Rurik',\r\n    'Rusgar',\r\n    'Rusis',\r\n    'Ruther',\r\n    'Ruusul',\r\n    'Ruvad',\r\n    'Ruwen',\r\n    'Ryalas',\r\n    'Rygarn',\r\n    'Rynell',\r\n    'Rynrys',\r\n    'Rysta',\r\n    'Sabak',\r\n    'Sabal',\r\n    'Sabfane',\r\n    'Sabhel',\r\n    'Sabon',\r\n    'Sabrok',\r\n    'Sador',\r\n    'Sadrouth',\r\n    'Saerdon',\r\n    'Saerulse',\r\n    'Safrence',\r\n    'Safrine',\r\n    'Sagard',\r\n    'Saglamne',\r\n    'Saia',\r\n    'Saihail',\r\n    'Saijax',\r\n    'Salir',\r\n    'Sallese',\r\n    'Samand',\r\n    'Samar',\r\n    'Sambrea',\r\n    'Samler',\r\n    'Sanald',\r\n    'Sanan',\r\n    'Sanar',\r\n    'Sandice',\r\n    'Sangol',\r\n    'Sankor',\r\n    'Sanpalk',\r\n    'Sanrind',\r\n    'Sanrow',\r\n    'Sansal',\r\n    'Santlor',\r\n    'Santrul',\r\n    'Saphyx',\r\n    'Sarbrid',\r\n    'Sarcyn',\r\n    'Sardrum',\r\n    'Sarel',\r\n    'Sarex',\r\n    'Sarfinn',\r\n    'Sargash',\r\n    'Sarik',\r\n    'Sarla',\r\n    'Sarlyn',\r\n    'Sarmuld',\r\n    'Sarnax',\r\n    'Sarode',\r\n    'Saroon',\r\n    'Sarthath',\r\n    'Sarthay',\r\n    'Saruul',\r\n    'Sarvan',\r\n    'Sateer',\r\n    'Sathla',\r\n    'Saudraal',\r\n    'Saugrib',\r\n    'Savak',\r\n    'Savar',\r\n    'Savaunce',\r\n    'Savay',\r\n    'Savot',\r\n    'Savryn',\r\n    'Saxar',\r\n    'Scamire',\r\n    'Scarloth',\r\n    'Scaroth',\r\n    'Scarvlin',\r\n    'Schabith',\r\n    'Scharay',\r\n    'Sclava',\r\n    'Scolath',\r\n    'Scradast',\r\n    'Scrilisp',\r\n    'Searan',\r\n    'Seckba',\r\n    'Sedrim',\r\n    'Seethenn',\r\n    'Segrold',\r\n    'Seheitt',\r\n    'Sejar',\r\n    'Selar',\r\n    'Seldar',\r\n    'Selgren',\r\n    'Selith',\r\n    'Selkind',\r\n    'Selnor',\r\n    'Selris',\r\n    'Selthen',\r\n    'Sember',\r\n    'Sembrith',\r\n    'Semer',\r\n    'Semisk',\r\n    'Sena',\r\n    'Sendrej',\r\n    'Sendure',\r\n    'Sengeld',\r\n    'Senrin',\r\n    'Senther',\r\n    'Sentix',\r\n    'Seonce',\r\n    'Sephrone',\r\n    'Seplacc',\r\n    'Seprism',\r\n    'Seraan',\r\n    'Seranth',\r\n    'Seray',\r\n    'Serdu',\r\n    'Sereste',\r\n    'Serlarc',\r\n    'Sermer',\r\n    'Seroz',\r\n    'Serrof',\r\n    'Serryx',\r\n    'Sersoom',\r\n    'Sertase',\r\n    'Seskel',\r\n    'Sethar',\r\n    'Sethchell',\r\n    'Sethjen',\r\n    'Sethran',\r\n    'Sfaël',\r\n    'Sfennec',\r\n    'Sferaj',\r\n    'Sforakh',\r\n    'Shabrum',\r\n    'Shadar',\r\n    'Shagold',\r\n    'Shahile',\r\n    'Shaifarl',\r\n    'Shalun',\r\n    'Shalvir',\r\n    'Shamad',\r\n    'Shanfa',\r\n    'Sharaq',\r\n    'Sharaz',\r\n    'Sharrak',\r\n    'Sharrel',\r\n    'Sharva',\r\n    'Sharzik',\r\n    'Shastor',\r\n    'Shathak',\r\n    'Shaxa',\r\n    'Shaydayl',\r\n    'Sheerah',\r\n    'Shembis',\r\n    'Shenesk',\r\n    'Shetrax',\r\n    'Shezael',\r\n    'Shiaf',\r\n    'Shialk',\r\n    'Shila',\r\n    'Shilex',\r\n    'Shimar',\r\n    'Shimglor',\r\n    'Shimren',\r\n    'Shintar',\r\n    'Shirak',\r\n    'Shivan',\r\n    'Shiza',\r\n    'Sholmeg',\r\n    'Shruuminth',\r\n    'Shryffin',\r\n    'Shudleet',\r\n    'Shurik',\r\n    'Shurrug',\r\n    'Shyden',\r\n    'Shylath',\r\n    'Siade',\r\n    'Sibvir',\r\n    'Sidron',\r\n    'Sierl',\r\n    'Sila',\r\n    'Silcharn',\r\n    'Sildeed',\r\n    'Silgast',\r\n    'Silgool',\r\n    'Siljenk',\r\n    'Silmat',\r\n    'Silon',\r\n    'Silphane',\r\n    'Silruum',\r\n    'Silure',\r\n    'Silvasp',\r\n    'Silvryn',\r\n    'Simbrul',\r\n    'Sindhi',\r\n    'Siol',\r\n    'Siralk',\r\n    'Sithirg',\r\n    'Sium',\r\n    'Skaaro',\r\n    'Skagra',\r\n    'Skarazk',\r\n    'Skarloch',\r\n    'Skayla',\r\n    'Skedrea',\r\n    'Skeltrin',\r\n    'Skilon',\r\n    'Skorafe',\r\n    'Skurin',\r\n    'Slanslar',\r\n    'Slanthar',\r\n    'Slarood',\r\n    'Slaskren',\r\n    'Slavgar',\r\n    'Slazor',\r\n    'Sleekla',\r\n    'Sleshkeg',\r\n    'Sleynux',\r\n    'Slijash',\r\n    'Slorac',\r\n    'Slurvaum',\r\n    'Smarag',\r\n    'Smerdis',\r\n    'Smialv',\r\n    'Snargai',\r\n    'Snayrod',\r\n    'Sneitad',\r\n    'Snurlix',\r\n    'Sobeck',\r\n    'Sodarg',\r\n    'Solael',\r\n    'Solbar',\r\n    'Soldine',\r\n    'Solis',\r\n    'Solohe',\r\n    'Solok',\r\n    'Solos',\r\n    'Soltar',\r\n    'Sombrid',\r\n    'Sophald',\r\n    'Sorak',\r\n    'Sorgas',\r\n    'Sormtor',\r\n    'Sorquoon',\r\n    'Sorren',\r\n    'Sorven',\r\n    'Sorza',\r\n    'Sotar',\r\n    'Soveh',\r\n    'Soydil',\r\n    'Spalant',\r\n    'Spandrell',\r\n    'Sparveld',\r\n    'Sperax',\r\n    'Spereld',\r\n    'Spirach',\r\n    'Splinvek',\r\n    'Sprimaine',\r\n    'Squamgreve',\r\n    'Srajsken',\r\n    'Sraknis',\r\n    'Sramine',\r\n    'Srebold',\r\n    'Sreeva',\r\n    'Srendix',\r\n    'Srennant',\r\n    'Sriddoth',\r\n    'Sroika',\r\n    'Sroweb',\r\n    'Sryxla',\r\n    'Stajesce',\r\n    'Stalfess',\r\n    'Starklyn',\r\n    'Staygus',\r\n    'Steeglorn',\r\n    'Stengos',\r\n    'Stereth',\r\n    'Steylin',\r\n    'Sthygron',\r\n    'Stielle',\r\n    'Stirgan',\r\n    'Stornrafe',\r\n    'Strakhan',\r\n    'Strakkar',\r\n    'Streggen',\r\n    'Struquil',\r\n    'Stryast',\r\n    'Strylax',\r\n    'Subreen',\r\n    'Suggner',\r\n    'Sujaim',\r\n    'Sulgra',\r\n    'Sulji',\r\n    'Sulmsy',\r\n    'Sulnseir',\r\n    'Sundoth',\r\n    'Sunjeade',\r\n    'Surast',\r\n    'Surigg',\r\n    'Surjan',\r\n    'Surpy',\r\n    'Susstark',\r\n    'Susteelk',\r\n    'Susur',\r\n    'Sutekh',\r\n    'Suukeeg',\r\n    'Suulkas',\r\n    'Suunall',\r\n    'Suvael',\r\n    'Suvrin',\r\n    'Svringal',\r\n    'Swarflig',\r\n    'Swarro',\r\n    'Swendril',\r\n    'Swiez',\r\n    'Syanor',\r\n    'Sybra',\r\n    'Sylfrix',\r\n    'Sylvine',\r\n    'Sylvyn',\r\n    'Symnar',\r\n    'Syphtar',\r\n    'Syrag',\r\n    'Syran',\r\n    'Syssahz',\r\n    'Syzaash',\r\n    'Taarna',\r\n    'Tabrind',\r\n    'Tachel',\r\n    'Tacrine',\r\n    'Tadra',\r\n    'Taedel',\r\n    'Taennyn',\r\n    'Taeral',\r\n    'Taeya',\r\n    'Tagor',\r\n    'Taher',\r\n    'Tahrjun',\r\n    'Taiwine',\r\n    'Talanth',\r\n    'Talar',\r\n    'Taldar',\r\n    'Taleeg',\r\n    'Taled',\r\n    'Talesm',\r\n    'Talgan',\r\n    'Talgraine',\r\n    'Talgyr',\r\n    'Talisk',\r\n    'Talith',\r\n    'Talor',\r\n    'Talthran',\r\n    'Talune',\r\n    'Talven',\r\n    'Talver',\r\n    'Tamar',\r\n    'Tamnuz',\r\n    'Tamone',\r\n    'Tamoorn',\r\n    'Tamriss',\r\n    'Tanchilt',\r\n    'Tandro',\r\n    'Tanha',\r\n    'Tanisk',\r\n    'Tanlin',\r\n    'Tanndo',\r\n    'Tanoor',\r\n    'Tanry',\r\n    'Tanûr',\r\n    'Tanzel',\r\n    'Tanzlor',\r\n    'Taosar',\r\n    'Taoyot',\r\n    'Taran',\r\n    'Tarath',\r\n    'Tarax',\r\n    'Tarcen',\r\n    'Tareth',\r\n    'Tarik',\r\n    'Tarin',\r\n    'Tarisk',\r\n    'Tarith',\r\n    'Tarkand',\r\n    'Tarkrog',\r\n    'Tarlmar',\r\n    'Tarnor',\r\n    'Taron',\r\n    'Taroyn',\r\n    'Tarqu',\r\n    'Tarxas',\r\n    'Tasharg',\r\n    'Tashforn',\r\n    'Tashlex',\r\n    'Tashu',\r\n    'Tashuul',\r\n    'Tasrak',\r\n    'Tasselt',\r\n    'Tasvoor',\r\n    'Taulin',\r\n    'Taval',\r\n    'Tavan',\r\n    'Tavon',\r\n    'Taxlon',\r\n    'Tayerl',\r\n    'Taylin',\r\n    'Tayrsil',\r\n    'Tazen',\r\n    'Tazine',\r\n    'Tchasko',\r\n    'Tealryn',\r\n    'Teawar',\r\n    'Tebish',\r\n    'Tedra',\r\n    'Teekah',\r\n    'Teekug',\r\n    'Teerlin',\r\n    'Tefaz',\r\n    'Tefleer',\r\n    'Tegan',\r\n    'Tegglyn',\r\n    'Tegoth',\r\n    'Teiresh',\r\n    'Teirna',\r\n    'Telaer',\r\n    'Telast',\r\n    'Telcarn',\r\n    'Telett',\r\n    'Telglas',\r\n    'Telgrest',\r\n    'Telkarr',\r\n    'Tellan',\r\n    'Telnar',\r\n    'Telnoom',\r\n    'Telsar',\r\n    'Telva',\r\n    'Telzley',\r\n    'Temorg',\r\n    'Tempros',\r\n    'Tened',\r\n    'Tenelle',\r\n    'Tenjal',\r\n    'Tenlor',\r\n    'Tenna',\r\n    'Tensfar',\r\n    'Tentil',\r\n    'Teode',\r\n    'Terare',\r\n    'Terglaw',\r\n    'Tergon',\r\n    'Terlkin',\r\n    'Terlyn',\r\n    'Ternasse',\r\n    'Terragg',\r\n    'Terris',\r\n    'Tershar',\r\n    'Terslond',\r\n    'Tesin',\r\n    'Teslan',\r\n    'Tevrin',\r\n    'Teyvrilt',\r\n    'Thabou',\r\n    'Thadrum',\r\n    'Thaiduk',\r\n    'Thaki',\r\n    'Thalarn',\r\n    'Thalax',\r\n    'Thaldok',\r\n    'Thamin',\r\n    'Thandart',\r\n    'Thandrov',\r\n    'Thandusc',\r\n    'Thangor',\r\n    'Tharbad',\r\n    'Tharbolt',\r\n    'Tharij',\r\n    'Tharis',\r\n    'Tharjun',\r\n    'Tharkesh',\r\n    'Tharquist',\r\n    'Tharsna',\r\n    'Tharxac',\r\n    'Thaskam',\r\n    'Thaval',\r\n    'Thavarl',\r\n    'Thawlton',\r\n    'Thaxid',\r\n    'Thaxis',\r\n    'Thaxmool',\r\n    'Thaxnar',\r\n    'Thayvudd',\r\n    'Theandra',\r\n    'Thebek',\r\n    'Thelbor',\r\n    'Theleb',\r\n    'Thelin',\r\n    'Thelred',\r\n    'Themnon',\r\n    'Theras',\r\n    'Therbur',\r\n    'Therrak',\r\n    'Therras',\r\n    'Therrat',\r\n    'Thervoh',\r\n    'Thesi',\r\n    'Thesstor',\r\n    'Thibkern',\r\n    'Thimmoz',\r\n    'Thinhla',\r\n    'Thiob',\r\n    'Thios',\r\n    'Thirlain',\r\n    'Thirrild',\r\n    'Thomilt',\r\n    'Thondrac',\r\n    'Thorgeir',\r\n    'Thornix',\r\n    'Thorskal',\r\n    'Thorztar',\r\n    'Thorzyl',\r\n    'Thoskold',\r\n    'Thoye',\r\n    'Thranor',\r\n    'Thraxil',\r\n    'Thremek',\r\n    'Thremix',\r\n    'Thrindish',\r\n    'Thrinyr',\r\n    'Thrykar',\r\n    'Thryxeer',\r\n    'Thugar',\r\n    'Thuldudge',\r\n    'Thulsa',\r\n    'Thurdis',\r\n    'Thuvgalt',\r\n    'Thyra',\r\n    'Thyzlont',\r\n    'Tiaft',\r\n    'Tiak',\r\n    'Tian',\r\n    'Ticham',\r\n    'Tiffrod',\r\n    'Tihan',\r\n    'Tika',\r\n    'Tilal',\r\n    'Tilir',\r\n    'Timaas',\r\n    'Timak',\r\n    'Timdos',\r\n    'Tira',\r\n    'Tiralle',\r\n    'Tirhthri',\r\n    'Tirkan',\r\n    'Tirnor',\r\n    'Tirouv',\r\n    'Tirvil',\r\n    'Tislim',\r\n    'Tisreth',\r\n    'Tisseth',\r\n    'Tithesb',\r\n    'Tivaln',\r\n    'Tlembic',\r\n    'Tlichgo',\r\n    'Tlishat',\r\n    'Tobar',\r\n    'Todyc',\r\n    'Toglank',\r\n    'Tokath',\r\n    'Tokkreft',\r\n    'Tokraz',\r\n    'Tolgarm',\r\n    'Toma',\r\n    'Tonom',\r\n    'Torak',\r\n    'Torang',\r\n    'Torbelt',\r\n    'Torbold',\r\n    'Torden',\r\n    'Toreth',\r\n    'Torghai',\r\n    'Tormir',\r\n    'Torsund',\r\n    'Torthar',\r\n    'Torvin',\r\n    'Torxar',\r\n    'Toscrah',\r\n    'Tourrhok',\r\n    'Tovak',\r\n    'Tovis',\r\n    'Toxathe',\r\n    'Tozjroch',\r\n    'Traalyr',\r\n    'Traken',\r\n    'Tramorn',\r\n    'Trantain',\r\n    'Trantle',\r\n    'Trasven',\r\n    'Travech',\r\n    'Trazom',\r\n    'Tredek',\r\n    'Treeplin',\r\n    'Treffaun',\r\n    'Trefoin',\r\n    'Treizeng',\r\n    'Tremas',\r\n    'Treof',\r\n    'Treslont',\r\n    'Tressak',\r\n    'Trevarq',\r\n    'Trevul',\r\n    'Tricoj',\r\n    'Tridusk',\r\n    'Trilinn',\r\n    'Trisgil',\r\n    'Tristak',\r\n    'Trithax',\r\n    'Triveark',\r\n    'Trizdoth',\r\n    'Troiom',\r\n    'Tromest',\r\n    'Tronvel',\r\n    'Troulden',\r\n    'Trujko',\r\n    'Tsarlit',\r\n    'Tsavan',\r\n    'Tsodjan',\r\n    'Tsojwar',\r\n    'Tsorak',\r\n    'Tuane',\r\n    'Tuchror',\r\n    'Tudlech',\r\n    'Tuezinth',\r\n    'Tugan',\r\n    'Tulkas',\r\n    'Tulsoorm',\r\n    'Tuntix',\r\n    'Turan',\r\n    'Turmasc',\r\n    'Turmis',\r\n    'Turvoost',\r\n    'Turweld',\r\n    'Turzeal',\r\n    'Tuuraj',\r\n    'Tvejasp',\r\n    'Twenja',\r\n    'Twinaile',\r\n    'Twixtib',\r\n    'Tyasaj',\r\n    'Tydwyk',\r\n    'Tylark',\r\n    'Tylith',\r\n    'Tylnen',\r\n    'Tymarl',\r\n    'Tymdrak',\r\n    'Tyrbast',\r\n    'Tyrdon',\r\n    'Tyreen',\r\n    'Tyrgyre',\r\n    'Tyrinx',\r\n    'Tyrlon',\r\n    'Tyrum',\r\n    'Tzichrism',\r\n    'Tzilen',\r\n    'Tziphrin',\r\n    'Udraam',\r\n    'Ufang',\r\n    'Ufoin',\r\n    'Ulak',\r\n    'Ulfade',\r\n    'Ullfrax',\r\n    'Ulli',\r\n    'Ulmyst',\r\n    'Ulos',\r\n    'Ulphar',\r\n    'Ulsplasm',\r\n    'Umbrask',\r\n    'Umbresk',\r\n    'Umchor',\r\n    'Umleer',\r\n    'Ummice',\r\n    'Undreet',\r\n    'Unfegg',\r\n    'Ungax',\r\n    'Unstric',\r\n    'Unstrix',\r\n    'Untveld',\r\n    'Unza',\r\n    'Uqbar',\r\n    'Urdaa',\r\n    'Urdain',\r\n    'Urdal',\r\n    'Urdryce',\r\n    'Urlyn',\r\n    'Urrind',\r\n    'Urthryn',\r\n    'Urtond',\r\n    'Urwoon',\r\n    'Urzvir',\r\n    'Ushnee',\r\n    'Usquik',\r\n    'Ussart',\r\n    'Ussfaal',\r\n    'Ussit',\r\n    'Usstrilt',\r\n    'Ustar',\r\n    'Ustiln',\r\n    'Ustlin',\r\n    'Ustor',\r\n    'Ustorne',\r\n    'Ustrelm',\r\n    'Usxald',\r\n    'Uthmal',\r\n    'Uthnor',\r\n    'Uvorne',\r\n    'Uzfron',\r\n    'Uztum',\r\n    'Vacla',\r\n    'Vadein',\r\n    'Vadrelj',\r\n    'Vadri',\r\n    'Vadru',\r\n    'Vaeddyn',\r\n    'Vaelythe',\r\n    'Vaërn',\r\n    'Vagar',\r\n    'Vaigthlu',\r\n    'Vaitarr',\r\n    'Valan',\r\n    'Valaz',\r\n    'Valbard',\r\n    'Valek',\r\n    'Valen',\r\n    'Valeth',\r\n    'Valgaard',\r\n    'Valgar',\r\n    'Valgarv',\r\n    'Valka',\r\n    'Valkarth',\r\n    'Valken',\r\n    'Valkesh',\r\n    'Valkis',\r\n    'Valkyr',\r\n    'Valmisce',\r\n    'Valreque',\r\n    'Valtarb',\r\n    'Valthoth',\r\n    'Valyn',\r\n    'Vamert',\r\n    'Vamfade',\r\n    'Vanache',\r\n    'Vanek',\r\n    'Vanger',\r\n    'Vannak',\r\n    'Vannyn',\r\n    'Vanra',\r\n    'Vantsled',\r\n    'Vanyar',\r\n    'Vaona',\r\n    'Varat',\r\n    'Varda',\r\n    'Vareth',\r\n    'Varga',\r\n    'Varka',\r\n    'Varlik',\r\n    'Varmon',\r\n    'Varmyr',\r\n    'Varna',\r\n    'Varnac',\r\n    'Varnar',\r\n    'Varnax',\r\n    'Varnaz',\r\n    'Varos',\r\n    'Varrow',\r\n    'Varsta',\r\n    'Vartoor',\r\n    'Vasaav',\r\n    'Vascais',\r\n    'Vasrind',\r\n    'Vathan',\r\n    'Vathar',\r\n    'Vathek',\r\n    'Vaudric',\r\n    'Vayas',\r\n    'Vaydir',\r\n    'Vayi',\r\n    'Vazar',\r\n    'Vazdo',\r\n    'Veäxe',\r\n    'Veena',\r\n    'Vegreth',\r\n    'Vekil',\r\n    'Velaunce',\r\n    'Veldan',\r\n    'Veldin',\r\n    'Velex',\r\n    'Velkind',\r\n    'Velnard',\r\n    'Velsant',\r\n    'Velsard',\r\n    'Velsin',\r\n    'Vembrex',\r\n    'Venast',\r\n    'Vendik',\r\n    'Vengkuld',\r\n    'Venklar',\r\n    'Vennec',\r\n    'Vennsor',\r\n    'Venscoth',\r\n    'Ventorl',\r\n    'Venzra',\r\n    'Veor',\r\n    'Verek',\r\n    'Verisse',\r\n    'Verla',\r\n    'Verlis',\r\n    'Vernar',\r\n    'Vernat',\r\n    'Vernil',\r\n    'Veror',\r\n    'Verren',\r\n    'Vertence',\r\n    'Vervitz',\r\n    'Verwantz',\r\n    'Verxain',\r\n    'Verzod',\r\n    'Veskin',\r\n    'Veswinch',\r\n    'Veyen',\r\n    'Vherla',\r\n    'Viaxx',\r\n    'Vibsoom',\r\n    'Vibur',\r\n    'Vilgrax',\r\n    'Vilraj',\r\n    'Vilsa',\r\n    'Vilthod',\r\n    'Viltor',\r\n    'Viltorc',\r\n    'Vingverd',\r\n    'Virainth',\r\n    'Viran',\r\n    'Virdla',\r\n    'Viscanth',\r\n    'Visharn',\r\n    'Viskrek',\r\n    'Vissir',\r\n    'Vistar',\r\n    'Vistarl',\r\n    'Vithmard',\r\n    'Viux',\r\n    'Vixa',\r\n    'Vixai',\r\n    'Vixlim',\r\n    'Vlastov',\r\n    'Vlitchek',\r\n    'Vluisc',\r\n    'Vlustra',\r\n    'Volcilde',\r\n    'Voldor',\r\n    'Volnir',\r\n    'Vomquind',\r\n    'Vonir',\r\n    'Voozale',\r\n    'Vordnaz',\r\n    'Vorgan',\r\n    'Vorplen',\r\n    'Vorrmor',\r\n    'Vorshak',\r\n    'Vortice',\r\n    'Vosklune',\r\n    'Votorn',\r\n    'Votrax',\r\n    'Voxarl',\r\n    'Vozkoog',\r\n    'Vratund',\r\n    'Vreeleth',\r\n    'Vregom',\r\n    'Vrithon',\r\n    'Vrumtuun',\r\n    'Vryxnir',\r\n    'Vuespra',\r\n    'Vuestri',\r\n    'Vulpix',\r\n    'Vuranc',\r\n    'Vurick',\r\n    'Vurog',\r\n    'Vuron',\r\n    'Vuubul',\r\n    'Vynda',\r\n    'Vyrnael',\r\n    'Vywyn',\r\n    'Vzoris',\r\n    'Wadziq',\r\n    'Waeytef',\r\n    'Wairbren',\r\n    'Walgwim',\r\n    'Wallibt',\r\n    'Walscrin',\r\n    'Wanelj',\r\n    'Wanjok',\r\n    'Wannach',\r\n    'Wanruum',\r\n    'Wanthim',\r\n    'Warbosk',\r\n    'Warell',\r\n    'Warisk',\r\n    'Warthan',\r\n    'Waryn',\r\n    'Wastur',\r\n    'Waylra',\r\n    'Waznak',\r\n    'Weardlon',\r\n    'Wedjeeg',\r\n    'Wedra',\r\n    'Weftig',\r\n    'Weftorb',\r\n    'Weitvan',\r\n    'Welfrede',\r\n    'Welmek',\r\n    'Welndar',\r\n    'Wemsin',\r\n    'Wendath',\r\n    'Weppel',\r\n    'Werclam',\r\n    'Werin',\r\n    'Weshap',\r\n    'Weskin',\r\n    'Westra',\r\n    'Wevkinz',\r\n    'Wextri',\r\n    'Whilfig',\r\n    'Whilmor',\r\n    'Wicrore',\r\n    'Wileert',\r\n    'Wilnim',\r\n    'Wilven',\r\n    'Wilzech',\r\n    'Wirreth',\r\n    'Wirzanth',\r\n    'Wistril',\r\n    'Witrix',\r\n    'Witrost',\r\n    'Wizlow',\r\n    'Wolcharn',\r\n    'Wolkoon',\r\n    'Wolnihr',\r\n    'Worlit',\r\n    'Wraxil',\r\n    'Wrybeck',\r\n    'Wryplax',\r\n    'Wryxerg',\r\n    'Wubneft',\r\n    'Wulfrit',\r\n    'Wurflense',\r\n    'Wusheig',\r\n    'Wuunal',\r\n    'Wuxorn',\r\n    'Wychnor',\r\n    'Wylvin',\r\n    'Wyndbrel',\r\n    'Wyndra',\r\n    'Wyrgon',\r\n    'Wyrsis',\r\n    'Wysholt',\r\n    'Wyvrax',\r\n    'Wyxef',\r\n    'Xadair',\r\n    'Xaedra',\r\n    'Xaelinth',\r\n    'Xaharl',\r\n    'Xaidis',\r\n    'Xaitchek',\r\n    'Xaldreth',\r\n    'Xalkhas',\r\n    'Xalla',\r\n    'Xallath',\r\n    'Xameld',\r\n    'Xanax',\r\n    'Xanbarg',\r\n    'Xandar',\r\n    'Xandrix',\r\n    'Xanille',\r\n    'Xanna',\r\n    'Xanos',\r\n    'Xanrei',\r\n    'Xanthon',\r\n    'Xarafe',\r\n    'Xarakh',\r\n    'Xarek',\r\n    'Xasim',\r\n    'Xaudrin',\r\n    'Xavest',\r\n    'Xavin',\r\n    'Xawnis',\r\n    'Xaxul',\r\n    'Xayide',\r\n    'Xeebract',\r\n    'Xeerha',\r\n    'Xejem',\r\n    'Xela',\r\n    'Xeldon',\r\n    'Xellosp',\r\n    'Xenerge',\r\n    'Xenir',\r\n    'Xephar',\r\n    'Xerra',\r\n    'Xerxisp',\r\n    'Xerys',\r\n    'Xexal',\r\n    'Xhagrim',\r\n    'Xhaibar',\r\n    'Xhomdroll',\r\n    'Xhorald',\r\n    'Xigil',\r\n    'Xion',\r\n    'Xiplin',\r\n    'Xiri',\r\n    'Xirrip',\r\n    'Xloris',\r\n    'Xoncarg',\r\n    'Xopon',\r\n    'Xoris',\r\n    'Xormeer',\r\n    'Xothun',\r\n    'Xovro',\r\n    'Xudeet',\r\n    'Xulan',\r\n    'Xundrahl',\r\n    'Xustral',\r\n    'Xyás',\r\n    'Xyást',\r\n    'Xybeuth',\r\n    'Xycort',\r\n    'Xydorn',\r\n    'Xydra',\r\n    'Xygbenth',\r\n    'Xyhaek',\r\n    'Xykrog',\r\n    'Xylance',\r\n    'Xylarz',\r\n    'Xylvorm',\r\n    'Xymoyl',\r\n    'Xytrin',\r\n    'Yaalder',\r\n    'Yaathab',\r\n    'Yadarl',\r\n    'Yaddith',\r\n    'Yadel',\r\n    'Yadreth',\r\n    'Yadurk',\r\n    'Yaglaid',\r\n    'Yagmoon',\r\n    'Yaklar',\r\n    'Yaklin',\r\n    'Yako',\r\n    'Yakthoob',\r\n    'Yammoth',\r\n    'Yamphut',\r\n    'Yandorn',\r\n    'Yaöth',\r\n    'Yarat',\r\n    'Yarel',\r\n    'Yari',\r\n    'Yarin',\r\n    'Yarnis',\r\n    'Yarram',\r\n    'Yastoz',\r\n    'Yaten',\r\n    'Yatheg',\r\n    'Yavarre',\r\n    'Yavood',\r\n    'Yavroun',\r\n    'Yazlar',\r\n    'Ycore',\r\n    'Yeafosk',\r\n    'Yeifolk',\r\n    'Yeldoj',\r\n    'Yeldrai',\r\n    'Yeoft',\r\n    'Yeoun',\r\n    'Yerdeen',\r\n    'Yergal',\r\n    'Yerkel',\r\n    'Yernoold',\r\n    'Yethler',\r\n    'Yewrapt',\r\n    'Yexil',\r\n    'Yezrik',\r\n    'Yhemnis',\r\n    'Yhemog',\r\n    'Yhoudeh',\r\n    'Yiash',\r\n    'Yildiz',\r\n    'Yilkeyr',\r\n    'Yimzuuem',\r\n    'Yinaun',\r\n    'Yiod',\r\n    'Yirod',\r\n    'Yivthi',\r\n    'Ymar',\r\n    'Ymarl',\r\n    'Yodkin',\r\n    'Yojra',\r\n    'Yombris',\r\n    'Yoorzamph',\r\n    'Yoppulse',\r\n    'Yorim',\r\n    'Yorlask',\r\n    'Yorrak',\r\n    'Yoskan',\r\n    'Yosneth',\r\n    'Yothir',\r\n    'Yottoa',\r\n    'Yrdirr',\r\n    'Yrgash',\r\n    'Yrgil',\r\n    'Yrinth',\r\n    'Yrlmar',\r\n    'Yrvoor',\r\n    'Yuklat',\r\n    'Yuleng',\r\n    'Yurisp',\r\n    'Yuvib',\r\n    'Yuzan',\r\n    'Yween',\r\n    'Zaalit',\r\n    'Zabal',\r\n    'Zabil',\r\n    'Zadko',\r\n    'Zadom',\r\n    'Zadool',\r\n    'Zaelken',\r\n    'Zaery',\r\n    'Zaffar',\r\n    'Zagrosk',\r\n    'Zahur',\r\n    'Zaihra',\r\n    'Zalethe',\r\n    'Zalmic',\r\n    'Zalthen',\r\n    'Zamar',\r\n    'Zamewl',\r\n    'Zamind',\r\n    'Zamog',\r\n    'Zamray',\r\n    'Zanak',\r\n    'Zaneer',\r\n    'Zangor',\r\n    'Zanqua',\r\n    'Zantain',\r\n    'Zanthu',\r\n    'Zantir',\r\n    'Zantyen',\r\n    'Zanurb',\r\n    'Zarak',\r\n    'Zaranthe',\r\n    'Zardal',\r\n    'Zardence',\r\n    'Zardirm',\r\n    'Zardox',\r\n    'Zargoi',\r\n    'Zaric',\r\n    'Zarlon',\r\n    'Zarmarl',\r\n    'Zarouk',\r\n    'Zarphaut',\r\n    'Zarquar',\r\n    'Zarquemf',\r\n    'Zarros',\r\n    'Zarthule',\r\n    'Zastor',\r\n    'Zatarl',\r\n    'Zatheen',\r\n    'Zathras',\r\n    'Zathu',\r\n    'Zatoum',\r\n    'Zausric',\r\n    'Zavach',\r\n    'Zavak',\r\n    'Zavel',\r\n    'Zaviv',\r\n    'Zaxweer',\r\n    'Zayarn',\r\n    'Zaydrim',\r\n    'Zebor',\r\n    'Zebulse',\r\n    'Zedresk',\r\n    'Zefteel',\r\n    'Zehain',\r\n    'Zehirn',\r\n    'Zekal',\r\n    'Zeldaph',\r\n    'Zelgad',\r\n    'Zelgen',\r\n    'Zelisp',\r\n    'Zelked',\r\n    'Zelmarth',\r\n    'Zelminx',\r\n    'Zelvant',\r\n    'Zembis',\r\n    'Zendarg',\r\n    'Zentos',\r\n    'Zeraa',\r\n    'Zerai',\r\n    'Zerakl',\r\n    'Zermish',\r\n    'Zerric',\r\n    'Zervid',\r\n    'Zesdick',\r\n    'Zessain',\r\n    'Zethrel',\r\n    'Zhaizald',\r\n    'Zhakoor',\r\n    'Zhalore',\r\n    'Zhantaine',\r\n    'Zhapris',\r\n    'Zharmele',\r\n    'Zharvek',\r\n    'Zhassa',\r\n    'Zhawend',\r\n    'Zhaya',\r\n    'Zheral',\r\n    'Zhirek',\r\n    'Zhirem',\r\n    'Zhiroq',\r\n    'Zhirquis',\r\n    'Zhogri',\r\n    'Zhomrach',\r\n    'Zhoreb',\r\n    'Zhrana',\r\n    'Zigmoth',\r\n    'Zikuyth',\r\n    'Zilar',\r\n    'Zilmork',\r\n    'Zincir',\r\n    'Zindor',\r\n    'Ziorn',\r\n    'Zirin',\r\n    'Zishuun',\r\n    'Zislun',\r\n    'Zisurgh',\r\n    'Zlanté',\r\n    'Zlatos',\r\n    'Zofram',\r\n    'Zoides',\r\n    'Zojan',\r\n    'Zohldrom',\r\n    'Zolfran',\r\n    'Zoltaft',\r\n    'Zomra',\r\n    'Zondar',\r\n    'Zoorkon',\r\n    'Zopine',\r\n    'Zorac',\r\n    'Zorith',\r\n    'Zorlan',\r\n    'Zorthal',\r\n    'Zosarde',\r\n    'Zrufend',\r\n    'Zugdin',\r\n    'Zugoth',\r\n    'Zuril',\r\n    'Zusdhrun',\r\n    'Zuukan',\r\n    'Zvegnaz',\r\n    'Zyjin',\r\n    'Zyla',\r\n    'Zylaax',\r\n    'Zylyn',\r\n    'Zyrel',\r\n    'Zyrelx',\r\n    'Zytan',\r\n    'Zyxim',\r\n  ],\r\n\r\n  // Three syllabes\r\n  [\r\n    'Aathoklaa',\r\n    'Abalore',\r\n    'Abeli',\r\n    'Abreyxorn',\r\n    'Abrisen',\r\n    'Acaena',\r\n    'Acamar',\r\n    'Acarnod',\r\n    'Ackia',\r\n    'Acozer',\r\n    'Acravel',\r\n    'Actinor',\r\n    'Adalon',\r\n    'Adalrik',\r\n    'Adanac',\r\n    'Adasho',\r\n    'Adelin',\r\n    'Adelir',\r\n    'Adembal',\r\n    'Aderak',\r\n    'Aderel',\r\n    'Aderyn',\r\n    'Adhara',\r\n    'Adhirman',\r\n    'Adia',\r\n    'Adian',\r\n    'Adiol',\r\n    'Aditu',\r\n    'Adlaron',\r\n    'Admarlen',\r\n    'Adnirrin',\r\n    'Adnoren',\r\n    'Adracea',\r\n    'Adraeran',\r\n    'Adraewyth',\r\n    'Adrasta',\r\n    'Adrena',\r\n    'Adriphaas',\r\n    'Aelarim',\r\n    'Aerissa',\r\n    'Aeruin',\r\n    'Aetharyn',\r\n    'Aexien',\r\n    'Afaellan',\r\n    'Agador',\r\n    'Agaki',\r\n    'Agari',\r\n    'Agella',\r\n    'Agerquon',\r\n    'Agetan',\r\n    'Agexa',\r\n    'Aginor',\r\n    'Agior',\r\n    'Agnaska',\r\n    'Agraia',\r\n    'Agrasline',\r\n    'Agrasol',\r\n    'Agrias',\r\n    'Agristair',\r\n    'Ahina',\r\n    'Ahorra',\r\n    'Aidaron',\r\n    'Aililry',\r\n    'Ainnatic',\r\n    'Aioula',\r\n    'Aircristir',\r\n    'Aistomar',\r\n    'Ajasonde',\r\n    'Akajur',\r\n    'Akashic',\r\n    'Akasta',\r\n    'Akenchi',\r\n    'Akhrida',\r\n    'Akiina',\r\n    'Akirga',\r\n    'Akirku',\r\n    'Akritas',\r\n    'Akura',\r\n    'Akvaron',\r\n    'Alamak',\r\n    'Alanik',\r\n    'Alanyx',\r\n    'Alardan',\r\n    'Alaris',\r\n    'Alarynd',\r\n    'Alathen',\r\n    'Alatvair',\r\n    'Alaxa',\r\n    'Alaztyr',\r\n    'Albara',\r\n    'Albaral',\r\n    'Alberist',\r\n    'Alberon',\r\n    'Alceon',\r\n    'Alceor',\r\n    'Alchica',\r\n    'Aldachur',\r\n    'Aldaka',\r\n    'Aldamir',\r\n    'Aldirim',\r\n    'Aldrella',\r\n    'Aleasna',\r\n    'Aleaxa',\r\n    'Aleena',\r\n    'Aleidar',\r\n    'Alembis',\r\n    'Alera',\r\n    'Aleva',\r\n    'Alfanar',\r\n    'Alhana',\r\n    'Alidar',\r\n    'Aliet',\r\n    'Alifyan',\r\n    'Alinaeus',\r\n    'Alindra',\r\n    'Alixa',\r\n    'Aljarik',\r\n    'Alkaios',\r\n    'Allindren',\r\n    'Allomir',\r\n    'Alloran',\r\n    'Almarisc',\r\n    'Almeron',\r\n    'Almiel',\r\n    'Alnavor',\r\n    'Alshagrel',\r\n    'Altavan',\r\n    'Altorlan',\r\n    'Altria',\r\n    'Alucard',\r\n    'Alzamar',\r\n    'Alzarin',\r\n    'Amadis',\r\n    'Amadix',\r\n    'Amafer',\r\n    'Amaja',\r\n    'Amakelb',\r\n    'Amanster',\r\n    'Amaremne',\r\n    'Amarette',\r\n    'Amatin',\r\n    'Amazya',\r\n    'Ambrezul',\r\n    'Amelis',\r\n    'Amerill',\r\n    'Amether',\r\n    'Amethi',\r\n    'Amharad',\r\n    'Amilin',\r\n    'Aminak',\r\n    'Amintor',\r\n    'Amlieth',\r\n    'Amolithe',\r\n    'Amorin',\r\n    'Ampenden',\r\n    'Amramyr',\r\n    'Anandra',\r\n    'Anara',\r\n    'Anartig',\r\n    'Anashea',\r\n    'Anatsath',\r\n    'Ancelyn',\r\n    'Ancifer',\r\n    'Andaraan',\r\n    'Andistair',\r\n    'Andolan',\r\n    'Andrasha',\r\n    'Andula',\r\n    'Aneelen',\r\n    'Anfara',\r\n    'Anferas',\r\n    'Anfesef',\r\n    'Angalli',\r\n    'Angemon',\r\n    'Anghyrud',\r\n    'Anhalus',\r\n    'Anici',\r\n    'Anina',\r\n    'Ankrista',\r\n    'Annoxin',\r\n    'Anraculd',\r\n    'Anroana',\r\n    'Ansivlan',\r\n    'Ansuki',\r\n    'Antalyaar',\r\n    'Antarlest',\r\n    'Anterra',\r\n    'Antesri',\r\n    'Anthlamar',\r\n    'Antraneyk',\r\n    'Anzera',\r\n    'Apelnin',\r\n    'Aphithea',\r\n    'Apporrosh',\r\n    'Aquiel',\r\n    'Aquorren',\r\n    'Aradek',\r\n    'Aragaj',\r\n    'Araglas',\r\n    'Arajist',\r\n    'Arakbaal',\r\n    'Arakhreen',\r\n    'Arakin',\r\n    'Araldar',\r\n    'Aralik',\r\n    'Aramil',\r\n    'Aranat',\r\n    'Aranis',\r\n    'Arathorb',\r\n    'Araxis',\r\n    'Arbadrul',\r\n    'Arbalac',\r\n    'Arbalon',\r\n    'Arbitan',\r\n    'Arboran',\r\n    'Arcastor',\r\n    'Archolach',\r\n    'Ardalanx',\r\n    'Ardanos',\r\n    'Ardatha',\r\n    'Ardaxil',\r\n    'Ardelin',\r\n    'Ardilex',\r\n    'Ardiseng',\r\n    'Ardissa',\r\n    'Aregel',\r\n    'Arenith',\r\n    'Arestel',\r\n    'Arfandas',\r\n    'Argethlam',\r\n    'Arghesos',\r\n    'Argion',\r\n    'Argoël',\r\n    'Argolin',\r\n    'Arhanen',\r\n    'Ariann',\r\n    'Arianth',\r\n    'Aribeth',\r\n    'Arien',\r\n    'Arion',\r\n    'Arioth',\r\n    'Ariseph',\r\n    'Arismacht',\r\n    'Aristea',\r\n    'Arivid',\r\n    'Arkadit',\r\n    'Arkaris',\r\n    'Arkavyn',\r\n    'Arkissar',\r\n    'Arkurel',\r\n    'Arlana',\r\n    'Arleano',\r\n    'Arleost',\r\n    'Arlomma',\r\n    'Arokair',\r\n    'Arolant',\r\n    'Arozan',\r\n    'Arpiax',\r\n    'Arrashad',\r\n    'Arrelask',\r\n    'Arrenol',\r\n    'Arriam',\r\n    'Arridor',\r\n    'Arrivid',\r\n    'Arrosas',\r\n    'Arrossai',\r\n    'Arshashi',\r\n    'Arshavir',\r\n    'Artithea',\r\n    'Artlexu',\r\n    'Arura',\r\n    'Arvanor',\r\n    'Arvirask',\r\n    'Aryion',\r\n    'Arzeela',\r\n    'Ascarleth',\r\n    'Ascaveen',\r\n    'Ascomeld',\r\n    'Asgarath',\r\n    'Asherild',\r\n    'Ashikri',\r\n    'Ashilja',\r\n    'Ashnisci',\r\n    'Ashrodu',\r\n    'Asilun',\r\n    'Asius',\r\n    'Aslior',\r\n    'Asmacul',\r\n    'Asmictir',\r\n    'Aspaleed',\r\n    'Asparind',\r\n    'Asphodal',\r\n    'Aspolyme',\r\n    'Asquilla',\r\n    'Astaedi',\r\n    'Astalon',\r\n    'Asteä',\r\n    'Astinus',\r\n    'Astraëa',\r\n    'Asurzel',\r\n    'Atalis',\r\n    'Atazra',\r\n    'Athana',\r\n    'Atheran',\r\n    'Athermoj',\r\n    'Athina',\r\n    'Athnolan',\r\n    'Athrasomb',\r\n    'Athrilas',\r\n    'Atlavan',\r\n    'Atorin',\r\n    'Atralan',\r\n    'Atraxon',\r\n    'Atrujal',\r\n    'Attanir',\r\n    'Atticog',\r\n    'Aturin',\r\n    'Atyoto',\r\n    'Aurever',\r\n    'Aurian',\r\n    'Auridra',\r\n    'Aurina',\r\n    'Aurion',\r\n    'Auxebaz',\r\n    'Avalzaunt',\r\n    'Avandir',\r\n    'Avarath',\r\n    'Avasceen',\r\n    'Avenaar',\r\n    'Aveole',\r\n    'Averdal',\r\n    'Avereem',\r\n    'Avernide',\r\n    'Avèssèd',\r\n    'Avesur',\r\n    'Avori',\r\n    'Avriax',\r\n    'Avronil',\r\n    'Awennes',\r\n    'Axanar',\r\n    'Axarun',\r\n    'Aximil',\r\n    'Ayaren',\r\n    'Ayesra',\r\n    'Azaka',\r\n    'Azakour',\r\n    'Azanakh',\r\n    'Azanor',\r\n    'Azarmax',\r\n    'Azatta',\r\n    'Azella',\r\n    'Azergal',\r\n    'Azfotha',\r\n    'Azilos',\r\n    'Azmarbi',\r\n    'Azmeren',\r\n    'Azolem',\r\n    'Azraxel',\r\n    'Azriaz',\r\n    'Azrienne',\r\n    'Aztira',\r\n    'Azuva',\r\n    'Azuzu',\r\n    'Baeglyndven',\r\n    'Bahnshiath',\r\n    'Bakailis',\r\n    'Bakiar',\r\n    'Balandix',\r\n    'Balanjik',\r\n    'Balathol',\r\n    'Balazar',\r\n    'Balderon',\r\n    'Baledor',\r\n    'Baloward',\r\n    'Baltarreg',\r\n    'Bandibras',\r\n    'Banira',\r\n    'Banjasah',\r\n    'Banjicoy',\r\n    'Banrodi',\r\n    'Bantirgen',\r\n    'Baraca',\r\n    'Barahir',\r\n    'Baramei',\r\n    'Barbardon',\r\n    'Barixid',\r\n    'Barjazan',\r\n    'Barolio',\r\n    'Barsimmern',\r\n    'Bartosca',\r\n    'Barzolo',\r\n    'Basfui',\r\n    'Basidrix',\r\n    'Baslayan',\r\n    'Basliard',\r\n    'Batiax',\r\n    'Baudefloy',\r\n    'Bayazin',\r\n    'Bayidon',\r\n    'Bazakel',\r\n    'Baziran',\r\n    'Beäbrae',\r\n    'Becheton',\r\n    'Bedivere',\r\n    'Behamkai',\r\n    'Belaraz',\r\n    'Belarba',\r\n    'Belathgert',\r\n    'Beldara',\r\n    'Beldaran',\r\n    'Belegern',\r\n    'Belensarl',\r\n    'Belgarath',\r\n    'Belida',\r\n    'Belimu',\r\n    'Belinzith',\r\n    'Belistra',\r\n    'Belithin',\r\n    'Bellarix',\r\n    'Bellinus',\r\n    'Belloram',\r\n    'Belmalar',\r\n    'Belmatar',\r\n    'Benalath',\r\n    'Beorilf',\r\n    'Beoshar',\r\n    'Berazan',\r\n    'Berefex',\r\n    'Berethan',\r\n    'Beriam',\r\n    'Berlemdo',\r\n    'Bermulan',\r\n    'Berterin',\r\n    'Besagren',\r\n    'Bestagar',\r\n    'Bethalus',\r\n    'Beztevil',\r\n    'Bilamarj',\r\n    'Birictzin',\r\n    'Birimi',\r\n    'Birrtezir',\r\n    'Bisuneh',\r\n    'Bithritrilb',\r\n    'Blascarro',\r\n    'Boälod',\r\n    'Boäzye',\r\n    'Bolangi',\r\n    'Bolgodar',\r\n    'Boradrend',\r\n    'Borvazan',\r\n    'Bordvedo',\r\n    'Boridorn',\r\n    'Borivig',\r\n    'Boroqual',\r\n    'Borosov',\r\n    'Boruja',\r\n    'Breldiar',\r\n    'Breyugar',\r\n    'Brindelvix',\r\n    'Brinzindis',\r\n    'Brirelin',\r\n    'Brofothin',\r\n    'Bruyefol',\r\n    'Bundetlan',\r\n    'Burangald',\r\n    'Byjagan',\r\n    'Caadausid',\r\n    'Cadrillan',\r\n    'Cadxiel',\r\n    'Caglaree',\r\n    'Caladon',\r\n    'Caladra',\r\n    'Calandol',\r\n    'Calandra',\r\n    'Calara',\r\n    'Caldiza',\r\n    'Calial',\r\n    'Calian',\r\n    'Calibarz',\r\n    'Caliburr',\r\n    'Calimen',\r\n    'Calinor',\r\n    'Calinthor',\r\n    'Caliroon',\r\n    'Calrohir',\r\n    'Calvari',\r\n    'Calyreg',\r\n    'Camorba',\r\n    'Camrenard',\r\n    'Candelisce',\r\n    'Candralta',\r\n    'Canteril',\r\n    'Capsia',\r\n    'Caradin',\r\n    'Caraman',\r\n    'Carano',\r\n    'Carastac',\r\n    'Cardannor',\r\n    'Cardriman',\r\n    'Carejjar',\r\n    'Carenac',\r\n    'Caribros',\r\n    'Carvirras',\r\n    'Casliet',\r\n    'Cassira',\r\n    'Castivin',\r\n    'Cathloda',\r\n    'Cauluden',\r\n    'Cavrello',\r\n    'Cazago',\r\n    'Cazrogatz',\r\n    'Cedethea',\r\n    'Cedruin',\r\n    'Celasli',\r\n    'Celedrax',\r\n    'Celeldrir',\r\n    'Celenorb',\r\n    'Celephais',\r\n    'Celimbsel',\r\n    'Celissar',\r\n    'Celmiac',\r\n    'Celria',\r\n    'Cemendur',\r\n    'Ceomyr',\r\n    'Cerastes',\r\n    'Cerdotur',\r\n    'Cereden',\r\n    'Ceremeb',\r\n    'Cerindar',\r\n    'Cernaia',\r\n    'Cerrivald',\r\n    'Cerrlemere',\r\n    'Cervetar',\r\n    'Chakjalom',\r\n    'Chalberyn',\r\n    'Chandalla',\r\n    'Charizar',\r\n    'Charovis',\r\n    'Chasergha',\r\n    'Chatony',\r\n    'Chavrenard',\r\n    'Chayuleth',\r\n    'Chedynas',\r\n    'Chemedis',\r\n    'Cherinra',\r\n    'Cheshinif',\r\n    'Chesifith',\r\n    'Chexotah',\r\n    'Chiranin',\r\n    'Chirophanx',\r\n    'Chirystrad',\r\n    'Chissaera',\r\n    'Choriaal',\r\n    'Chrystara',\r\n    'Cialrak',\r\n    'Ciarna',\r\n    'Ciliath',\r\n    'Cillegra',\r\n    'Cimpelis',\r\n    'Cirial',\r\n    'Cirilar',\r\n    'Cisidor',\r\n    'Claraven',\r\n    'Clarian',\r\n    'Clymerice',\r\n    'Colperat',\r\n    'Colverslyne',\r\n    'Conridas',\r\n    'Coramur',\r\n    'Corcoran',\r\n    'Cordago',\r\n    'Corisur',\r\n    'Cormannon',\r\n    'Coromis',\r\n    'Corraemer',\r\n    'Corstanis',\r\n    'Coyasal',\r\n    'Cramorul',\r\n    'Crayeera',\r\n    'Credori',\r\n    'Cresbaral',\r\n    'Crodelan',\r\n    'Cromora',\r\n    'Crondowys',\r\n    'Cruirmox',\r\n    'Crysindlyn',\r\n    'Cthasia',\r\n    'Cubrucol',\r\n    'Curtifer',\r\n    'Cveralisk',\r\n    'Cyarium',\r\n    'Cynalis',\r\n    'Cynara',\r\n    'Cyrilla',\r\n    'Cyrissil',\r\n    'Daakrasef',\r\n    'Dabnavar',\r\n    'Dacarin',\r\n    'Dagaldsain',\r\n    'Dagorla',\r\n    'Daiavend',\r\n    'Dakkiah',\r\n    'Dakokan',\r\n    'Dalarthra',\r\n    'Dalimir',\r\n    'Dallandra',\r\n    'Dallibren',\r\n    'Dalmaxen',\r\n    'Damarel',\r\n    'Damia',\r\n    'Damisen',\r\n    'Dammarlet',\r\n    'Damria',\r\n    'Danatren',\r\n    'Danbrelaj',\r\n    'Daqualor',\r\n    'Daragard',\r\n    'Darandril',\r\n    'Darani',\r\n    'Darimpelg',\r\n    'Darioj',\r\n    'Darisimp',\r\n    'Darnien',\r\n    'Daruda',\r\n    'Darusor',\r\n    'Darvenel',\r\n    'Darvien',\r\n    'Dasanay',\r\n    'Dasyani',\r\n    'Dathanja',\r\n    'Dauroät',\r\n    'Daximyr',\r\n    'Dazaroth',\r\n    'Deglavar',\r\n    'Dekreon',\r\n    'Delalea',\r\n    'Delandim',\r\n    'Delaquoth',\r\n    'Delcardes',\r\n    'Delgadjas',\r\n    'Delgari',\r\n    'Deliard',\r\n    'Delitra',\r\n    'Delmonda',\r\n    'Delonos',\r\n    'Delsinar',\r\n    'Demelsàvre',\r\n    'Deminar',\r\n    'Demithea',\r\n    'Dendera',\r\n    'Denivra',\r\n    'Deowrix',\r\n    'Deralten',\r\n    'Derian',\r\n    'Derisurm',\r\n    'Derokain',\r\n    'Descelet',\r\n    'Desnema',\r\n    'Desthia',\r\n    'Destrino',\r\n    'Devabril',\r\n    'Devaia',\r\n    'Devaren',\r\n    'Deviscind',\r\n    'Devyna',\r\n    'Dezelglim',\r\n    'Dharijor',\r\n    'Diagur',\r\n    'Diamel',\r\n    'Diastul',\r\n    'Diazrax',\r\n    'Diniwirn',\r\n    'Dional',\r\n    'Diony',\r\n    'Dismarntir',\r\n    'Distana',\r\n    'Distiva',\r\n    'Diurmad',\r\n    'Divior',\r\n    'Doälva',\r\n    'Dokessin',\r\n    'Dolitan',\r\n    'Dolskior',\r\n    'Domagren',\r\n    'Domovoy',\r\n    'Doniale',\r\n    'Donivesh',\r\n    'Dorana',\r\n    'Doravin',\r\n    'Doraxa',\r\n    'Dorether',\r\n    'Dorgrian',\r\n    'Dorianth',\r\n    'Dorosard',\r\n    'Drafarna',\r\n    'Draglios',\r\n    'Dralgamor',\r\n    'Drelbaran',\r\n    'Dreleon',\r\n    'Dreower',\r\n    'Drusmirak',\r\n    'Druycalid',\r\n    'Durathor',\r\n    'Duruis',\r\n    'Dusoto',\r\n    'Duvalin',\r\n    'Dvereya',\r\n    'Dygardo',\r\n    'Eberyn',\r\n    'Ecarnis',\r\n    'Echengar',\r\n    'Echredrisk',\r\n    'Edalcor',\r\n    'Edamar',\r\n    'Edaris',\r\n    'Edeera',\r\n    'Edeiric',\r\n    'Edelan',\r\n    'Edromon',\r\n    'Eemonil',\r\n    'Eermiaw',\r\n    'Efelin',\r\n    'Efiath',\r\n    'Egarun',\r\n    'Egeanin',\r\n    'Eglashor',\r\n    'Eglathorm',\r\n    'Ehlmargis',\r\n    'Eilinud',\r\n    'Einnara',\r\n    'Ekisha',\r\n    'Elaara',\r\n    'Eladain',\r\n    'Elanja',\r\n    'Elanlir',\r\n    'Elantir',\r\n    'Elardoand',\r\n    'Elayess',\r\n    'Elbasant',\r\n    'Elbrian',\r\n    'Elcaros',\r\n    'Eldikohl',\r\n    'Eldimyr',\r\n    'Eldivren',\r\n    'Eleaseth',\r\n    'Eleniin',\r\n    'Elerasc',\r\n    'Eleril',\r\n    'Elesfar',\r\n    'Elexna',\r\n    'Elhanter',\r\n    'Elharta',\r\n    'Elhiri',\r\n    'Eliaazh',\r\n    'Elindel',\r\n    'Elion',\r\n    'Elispesh',\r\n    'Elissim',\r\n    'Elistan',\r\n    'Eljendril',\r\n    'Ellamoin',\r\n    'Ellanath',\r\n    'Ellendar',\r\n    'Ellidyr',\r\n    'Elmeric',\r\n    'Elmradra',\r\n    'Elnavor',\r\n    'Elnoë',\r\n    'Elorix',\r\n    'Elriseth',\r\n    'Elrodin',\r\n    'Elrowan',\r\n    'Elsandar',\r\n    'Elverus',\r\n    'Elzirtha',\r\n    'Emeresc',\r\n    'Emistar',\r\n    'Emparyn',\r\n    'Emraël',\r\n    'Enchasol',\r\n    'Endelaer',\r\n    'Endeltrad',\r\n    'Endoyarl',\r\n    'Endremen',\r\n    'Engkalat',\r\n    'Enifrax',\r\n    'Enliack',\r\n    'Ennorath',\r\n    'Enoëre',\r\n    'Ensocand',\r\n    'Enzoray',\r\n    'Eolair',\r\n    'Eolglyu',\r\n    'Eomer',\r\n    'Eosin',\r\n    'Eowine',\r\n    'Eralith',\r\n    'Erbarax',\r\n    'Erdegron',\r\n    'Ereäd',\r\n    'Ereboen',\r\n    'Eregin',\r\n    'Ereia',\r\n    'Ereidan',\r\n    'Ereinid',\r\n    'Eresbor',\r\n    'Ergamarl',\r\n    'Erian',\r\n    'Erihim',\r\n    'Erijin',\r\n    'Erilind',\r\n    'Erilyth',\r\n    'Erimewn',\r\n    'Eriptil',\r\n    'Erizael',\r\n    'Erjesko',\r\n    'Erkollo',\r\n    'Erlata',\r\n    'Erliskan',\r\n    'Ermentej',\r\n    'Ermiod',\r\n    'Ermizard',\r\n    'Erobor',\r\n    'Erraxam',\r\n    'Errixi',\r\n    'Ersazern',\r\n    'Erudin',\r\n    'Eruna',\r\n    'Escaloth',\r\n    'Eshorden',\r\n    'Eskedar',\r\n    'Eslenix',\r\n    'Esmeril',\r\n    'Essamor',\r\n    'Esselin',\r\n    'Estelorn',\r\n    'Estulman',\r\n    'Esyorna',\r\n    'Ethayan',\r\n    'Ethilrist',\r\n    'Ettellarn',\r\n    'Euralen',\r\n    'Eurayo',\r\n    'Evarul',\r\n    'Evedben',\r\n    'Eveltur',\r\n    'Evenor',\r\n    'Everan',\r\n    'Everard',\r\n    'Evidor',\r\n    'Evrilet',\r\n    'Ewugan',\r\n    'Exior',\r\n    'Exorric',\r\n    'Ezirith',\r\n    'Ezpirasp',\r\n    'Ezrabar',\r\n    'Fabliain',\r\n    'Faerlasdar',\r\n    'Fafmalan',\r\n    'Fahorjom',\r\n    'Falamund',\r\n    'Falazarm',\r\n    'Faldian',\r\n    'Faledra',\r\n    'Falias',\r\n    'Faliorn',\r\n    'Fallonar',\r\n    'Falmalin',\r\n    'Famaril',\r\n    'Famiryah',\r\n    'Farammil',\r\n    'Faranar',\r\n    'Farathar',\r\n    'Farazwen',\r\n    'Farendal',\r\n    'Farezar',\r\n    'Farias',\r\n    'Farinda',\r\n    'Farovlem',\r\n    'Farreflan',\r\n    'Farrian',\r\n    'Fassander',\r\n    'Fassiral',\r\n    'Fathanor',\r\n    'Fathimlas',\r\n    'Favular',\r\n    'Fayenned',\r\n    'Felacroy',\r\n    'Felectos',\r\n    'Felendos',\r\n    'Felentir',\r\n    'Felinstrod',\r\n    'Felladin',\r\n    'Fellathor',\r\n    'Fellazoor',\r\n    'Felmarus',\r\n    'Felvia',\r\n    'Fenhalut',\r\n    'Fenkkara',\r\n    'Feollan',\r\n    'Feraanty',\r\n    'Ferazhin',\r\n    'Ferdithir',\r\n    'Ferena',\r\n    'Ferescha',\r\n    'Feridmir',\r\n    'Feridoth',\r\n    'Ferilken',\r\n    'Ferkiel',\r\n    'Fermandra',\r\n    'Fermazeth',\r\n    'Ferozak',\r\n    'Ferrandry',\r\n    'Ferrinox',\r\n    'Fertimqui',\r\n    'Fesanor',\r\n    'Fesmaran',\r\n    'Fethijorn',\r\n    'Fethorval',\r\n    'Fezmirath',\r\n    'Fiaminch',\r\n    'Fiantzin',\r\n    'Fiathna',\r\n    'Fiensar',\r\n    'Fierex',\r\n    'Filigal',\r\n    'Filrena',\r\n    'Finaefin',\r\n    'Findegil',\r\n    'Finmanal',\r\n    'Finrhabar',\r\n    'Fiollix',\r\n    'Fionlex',\r\n    'Fiorag',\r\n    'Fiori',\r\n    'Fiosthan',\r\n    'Firandaal',\r\n    'Firimar',\r\n    'Firmrius',\r\n    'Fivrenesse',\r\n    'Flacoë',\r\n    'Fluimorl',\r\n    'Foäshroud',\r\n    'Fomorisk',\r\n    'Fonesco',\r\n    'Fontaera',\r\n    'Forambad',\r\n    'Forizuld',\r\n    'Foronté',\r\n    'Forrandir',\r\n    'Foxilkin',\r\n    'Fozdollo',\r\n    'Fraajior',\r\n    'Fragadin',\r\n    'Freälaf',\r\n    'Frinilex',\r\n    'Frosserthil',\r\n    'Frugansey',\r\n    'Fuareece',\r\n    'Fulinas',\r\n    'Fulmerack',\r\n    'Fumorak',\r\n    'Furalor',\r\n    'Fusial',\r\n    'Gadino',\r\n    'Gaffindur',\r\n    'Gaherist',\r\n    'Gaianac',\r\n    'Galassad',\r\n    'Galedrej',\r\n    'Galeeya',\r\n    'Galeia',\r\n    'Galendil',\r\n    'Galhambraj',\r\n    'Galhandvis',\r\n    'Galiel',\r\n    'Galjiu',\r\n    'Gallaia',\r\n    'Galorin',\r\n    'Galrion',\r\n    'Galthien',\r\n    'Galtyran',\r\n    'Galvaris',\r\n    'Gambrefax',\r\n    'Gamorrand',\r\n    'Ganatus',\r\n    'Ganelon',\r\n    'Ganoraz',\r\n    'Ganscion',\r\n    'Ganzadahl',\r\n    'Garagrim',\r\n    'Garalden',\r\n    'Garathgen',\r\n    'Garduil',\r\n    'Gardulkar',\r\n    'Garemo',\r\n    'Garflion',\r\n    'Garlenon',\r\n    'Garriech',\r\n    'Garziot',\r\n    'Gastenmil',\r\n    'Gatlatas',\r\n    'Gatzeiros',\r\n    'Gavendra',\r\n    'Gavilen',\r\n    'Gefandrall',\r\n    'Gelsgiath',\r\n    'Genteras',\r\n    'Gerergol',\r\n    'Gerexi',\r\n    'Geskrivus',\r\n    'Gevanarth',\r\n    'Ghiella',\r\n    'Gidyrrha',\r\n    'Gildanar',\r\n    'Gilennan',\r\n    'Gilfangron',\r\n    'Giljrian',\r\n    'Giltsanos',\r\n    'Gimika',\r\n    'Gipideur',\r\n    'Girazi',\r\n    'Giridal',\r\n    'Giridyne',\r\n    'Giriel',\r\n    'Girkirath',\r\n    'Gisorath',\r\n    'Gisriral',\r\n    'Gisselek',\r\n    'Givirtrik',\r\n    'Gizarak',\r\n    'Gizbion',\r\n    'Gizherae',\r\n    'Gledrion',\r\n    'Gleocyn',\r\n    'Gleyander',\r\n    'Gliranna',\r\n    'Glirfingril',\r\n    'Goibhniu',\r\n    'Golexar',\r\n    'Goloë',\r\n    'Gonscevin',\r\n    'Gontomir',\r\n    'Goranna',\r\n    'Gorazky',\r\n    'Gordalis',\r\n    'Gorias',\r\n    'Gorion',\r\n    'Goronwy',\r\n    'Goronyr',\r\n    'Gorova',\r\n    'Gorthokon',\r\n    'Graginar',\r\n    'Graliath',\r\n    'Gredanost',\r\n    'Griarnix',\r\n    'Griotam',\r\n    'Grissejan',\r\n    'Grolliax',\r\n    'Gualat',\r\n    'Guilmarn',\r\n    'Gulifrith',\r\n    'Gurnarok',\r\n    'Gwyrion',\r\n    'Gydrian',\r\n    'Gymnivus',\r\n    'Gyrelyest',\r\n    'Hacoulede',\r\n    'Hadowrak',\r\n    'Hafranel',\r\n    'Haielva',\r\n    'Haijannod',\r\n    'Hajandin',\r\n    'Hakatri',\r\n    'Halibarn',\r\n    'Halios',\r\n    'Haliwyn',\r\n    'Halveron',\r\n    'Halvia',\r\n    'Hamadar',\r\n    'Hamancen',\r\n    'Hamavand',\r\n    'Hanamere',\r\n    'Haneran',\r\n    'Hanorayn',\r\n    'Hanrassu',\r\n    'Hantaira',\r\n    'Haplana',\r\n    'Haprissa',\r\n    'Harana',\r\n    'Harandash',\r\n    'Harezek',\r\n    'Hargranar',\r\n    'Harigran',\r\n    'Harnahad',\r\n    'Harobel',\r\n    'Harondar',\r\n    'Harromarl',\r\n    'Harsinna',\r\n    'Hartien',\r\n    'Hartazan',\r\n    'Hasalgar',\r\n    'Hasprion',\r\n    'Hathlizu',\r\n    'Hathvoril',\r\n    'Hautilim',\r\n    'Hautulin',\r\n    'Hauxpomel',\r\n    'Haxmaraun',\r\n    'Haxmaspar',\r\n    'Haxmered',\r\n    'Hazalet',\r\n    'Hazazel',\r\n    'Hazharat',\r\n    'Haziran',\r\n    'Hedrapake',\r\n    'Heereos',\r\n    'Hekeren',\r\n    'Helbathil',\r\n    'Helobaine',\r\n    'Helphegad',\r\n    'Helziatz',\r\n    'Hemgarel',\r\n    'Henalur',\r\n    'Herecharn',\r\n    'Heriganj',\r\n    'Heriol',\r\n    'Hessevet',\r\n    'Hethica',\r\n    'Heuleanar',\r\n    'Hexavren',\r\n    'Hexelin',\r\n    'Hiabaid',\r\n    'Hiassveil',\r\n    'Hifridil',\r\n    'Higlaia',\r\n    'Hilio',\r\n    'Himurlem',\r\n    'Hintyrit',\r\n    'Hirodrix',\r\n    'Hizirin',\r\n    'Hokryähn',\r\n    'Holmarun',\r\n    'Horbajir',\r\n    'Horlabo',\r\n    'Hralfecca',\r\n    'Hrioncet',\r\n    'Hulterna',\r\n    'Hurjaël',\r\n    'Huvatal',\r\n    'Hyaliptar',\r\n    'Hyarantar',\r\n    'Hydrestin',\r\n    'Hylamet',\r\n    'Hylarel',\r\n    'Hylissa',\r\n    'Hyphorond',\r\n    'Hyraskel',\r\n    'Hyrkhalla',\r\n    'Hyzaspes',\r\n    'Iahaun',\r\n    'Iarlen',\r\n    'Iasho',\r\n    'Ibekon',\r\n    'Ibgali',\r\n    'Ibrana',\r\n    'Ibriax',\r\n    'Ibriole',\r\n    'Icanaar',\r\n    'Icavra',\r\n    'Icera',\r\n    'Ichandrik',\r\n    'Ichindar',\r\n    'Idarlan',\r\n    'Iffalon',\r\n    'Igjaru',\r\n    'Ijevthla',\r\n    'Ikarin',\r\n    'Ikirkar',\r\n    'Ilabrem',\r\n    'Ilairam',\r\n    'Ilarnin',\r\n    'Ildezir',\r\n    'Ilenfal',\r\n    'Ilfangir',\r\n    'Ilfinir',\r\n    'Ilgaeldar',\r\n    'Ilikir',\r\n    'Ilimvair',\r\n    'Ilkerné',\r\n    'Ilkyarzim',\r\n    'Illana',\r\n    'Illara',\r\n    'Illiarn',\r\n    'Illsuin',\r\n    'Illuanc',\r\n    'Illurdan',\r\n    'Ilkaroque',\r\n    'Ilnitelg',\r\n    'Ilrehjan',\r\n    'Ilumaar',\r\n    'Ilvelisk',\r\n    'Imaia',\r\n    'Imajin',\r\n    'Imashla',\r\n    'Imaydra',\r\n    'Imedet',\r\n    'Imikeer',\r\n    'Imilxime',\r\n    'Imisard',\r\n    'Immelanx',\r\n    'Immoreth',\r\n    'Immornam',\r\n    'Imnatris',\r\n    'Imrahran',\r\n    'Imravog',\r\n    'Imrazixt',\r\n    'Imzia',\r\n    'Inayiss',\r\n    'Indreju',\r\n    'Ingrenux',\r\n    'Inhectin',\r\n    'Inidar',\r\n    'Inifael',\r\n    'Inifox',\r\n    'Ininay',\r\n    'Inisdex',\r\n    'Inisfail',\r\n    'Inkiljist',\r\n    'Inkotai',\r\n    'Innoäk',\r\n    'Inora',\r\n    'Insallasc',\r\n    'Intaphka',\r\n    'Inzellene',\r\n    'Ioga',\r\n    'Iolan',\r\n    'Iombar',\r\n    'Iosaz',\r\n    'Iosdil',\r\n    'Iperi',\r\n    'Iphara',\r\n    'Ipholar',\r\n    'Ipolok',\r\n    'Iptasor',\r\n    'Irankar',\r\n    'Irathar',\r\n    'Ireneemp',\r\n    'Irial',\r\n    'Irian',\r\n    'Iriboth',\r\n    'Iriga',\r\n    'Irmaskor',\r\n    'Irmistib',\r\n    'Irphilin',\r\n    'Irriosce',\r\n    'Irshirkur',\r\n    'Isaelsu',\r\n    'Isamar',\r\n    'Isarma',\r\n    'Isbexa',\r\n    'Isencal',\r\n    'Isgremnir',\r\n    'Ishmira',\r\n    'Ishnitra',\r\n    'Isiki',\r\n    'Iskarrine',\r\n    'Iskimi',\r\n    'Iskiret',\r\n    'Isodrost',\r\n    'Isotu',\r\n    'Isromant',\r\n    'Isrotha',\r\n    'Issakra',\r\n    'Issanthal',\r\n    'Issevex',\r\n    'Issimrak',\r\n    'Istengrem',\r\n    'Istensanth',\r\n    'Isthentild',\r\n    'Istheol',\r\n    'Isthgiol',\r\n    'Istidom',\r\n    'Istijed',\r\n    'Istroval',\r\n    'Isuxnen',\r\n    'Itharna',\r\n    'Ithelus',\r\n    'Ithimryr',\r\n    'Ithineg',\r\n    'Ithober',\r\n    'Iventhax',\r\n    'Ivrishel',\r\n    'Iwranda',\r\n    'Ixambel',\r\n    'Ixanthis',\r\n    'Ixarine',\r\n    'Ixcavar',\r\n    'Ixium',\r\n    'Iyenna',\r\n    'Iyiskek',\r\n    'Izpiizzi',\r\n    'Jabarla',\r\n    'Jablomeed',\r\n    'Jaelmura',\r\n    'Jafila',\r\n    'Jagadis',\r\n    'Jagaroch',\r\n    'Jahaurin',\r\n    'Jakalar',\r\n    'Jakarhul',\r\n    'Jakendar',\r\n    'Jakharral',\r\n    'Jakronib',\r\n    'Jalaran',\r\n    'Jalatha',\r\n    'Jaleana',\r\n    'Jaligar',\r\n    'Jalisharn',\r\n    'Jalnio',\r\n    'Jalvochin',\r\n    'Janceä',\r\n    'Jandagar',\r\n    'Jandenor',\r\n    'Janien',\r\n    'Janniel',\r\n    'Jaralor',\r\n    'Jarantin',\r\n    'Jaratryne',\r\n    'Jardilan',\r\n    'Jarien',\r\n    'Jarioth',\r\n    'Jaronris',\r\n    'Jascelat',\r\n    'Jascenant',\r\n    'Jaslani',\r\n    'Jassolind',\r\n    'Jatherfar',\r\n    'Jathlabra',\r\n    'Jathzoril',\r\n    'Jaukulmar',\r\n    'Jaurelin',\r\n    'Javennae',\r\n    'Javrezac',\r\n    'Jazaeron',\r\n    'Jejaneel',\r\n    'Jeleeya',\r\n    'Jelerish',\r\n    'Jelgrion',\r\n    'Jemadar',\r\n    'Jemkoleng',\r\n    'Jeoric',\r\n    'Jeoster',\r\n    'Jeprana',\r\n    'Jertezan',\r\n    'Jervida',\r\n    'Jessabra',\r\n    'Jevalor',\r\n    'Jevedic',\r\n    'Jevorin',\r\n    'Jevrian',\r\n    'Jhessala',\r\n    'Jhinilak',\r\n    'Jianthi',\r\n    'Jidesa',\r\n    'Jifrusni',\r\n    'Jijinjic',\r\n    'Jilarna',\r\n    'Jilitha',\r\n    'Jillaro',\r\n    'Jingaran',\r\n    'Jiriselk',\r\n    'Jiruik',\r\n    'Jivessla',\r\n    'Jivizet',\r\n    'Jixannil',\r\n    'Jizuret',\r\n    'Joäsra',\r\n    'Joplezno',\r\n    'Jorian',\r\n    'Joriel',\r\n    'Jorodrin',\r\n    'Josafyre',\r\n    'Jothaugan',\r\n    'Jothera',\r\n    'Jozranal',\r\n    'Jranahaz',\r\n    'Juarin',\r\n    'Jumeon',\r\n    'Juramanx',\r\n    'Jussondrel',\r\n    'Juxeccan',\r\n    'Juzawik',\r\n    'Kacinzen',\r\n    'Kadishir',\r\n    'Kahora',\r\n    'Kairaku',\r\n    'Kajabor',\r\n    'Kajua',\r\n    'Kalandrin',\r\n    'Kaledath',\r\n    'Kalvaro',\r\n    'Kamisu',\r\n    'Kamundam',\r\n    'Kandonak',\r\n    'Kandorin',\r\n    'Kapasin',\r\n    'Karaël',\r\n    'Karamis',\r\n    'Karanchir',\r\n    'Kardarkar',\r\n    'Kardotha',\r\n    'Karela',\r\n    'Karezthame',\r\n    'Karimeg',\r\n    'Karogan',\r\n    'Kasiran',\r\n    'Kasluna',\r\n    'Kastana',\r\n    'Kastauët',\r\n    'Kasthukras',\r\n    'Kathanal',\r\n    'Katryzaj',\r\n    'Katumar',\r\n    'Kazellor',\r\n    'Kazuön',\r\n    'Kedrinal',\r\n    'Kelemon',\r\n    'Kelmerveld',\r\n    'Kelraiog',\r\n    'Kelvixa',\r\n    'Kemmergen',\r\n    'Kerannix',\r\n    'Kerason',\r\n    'Kerasun',\r\n    'Kerendul',\r\n    'Kerfina',\r\n    'Kernamald',\r\n    'Keroona',\r\n    'Kerrekril',\r\n    'Kerrihaude',\r\n    'Kestramel',\r\n    'Kexranea',\r\n    'Khadera',\r\n    'Khalidûr',\r\n    'Kharisden',\r\n    'Khelaret',\r\n    'Khorenym',\r\n    'Khosilin',\r\n    'Khuraram',\r\n    'Khurkula',\r\n    'Kiarak',\r\n    'Kiaskek',\r\n    'Kifadli',\r\n    'Kinbulser',\r\n    'Kinjeon',\r\n    'Kintarna',\r\n    'Kioxug',\r\n    'Kireoj',\r\n    'Kirias',\r\n    'Kiriok',\r\n    'Kirithul',\r\n    'Kirrevi',\r\n    'Kiuspou',\r\n    'Kizarlon',\r\n    'Klandisar',\r\n    'Klirundon',\r\n    'Kodoki',\r\n    'Korachon',\r\n    'Korasal',\r\n    'Kortien',\r\n    'Korvaron',\r\n    'Kotajad',\r\n    'Kothenai',\r\n    'Kovaia',\r\n    'Kozanga',\r\n    'Krasgalad',\r\n    'Krienna',\r\n    'Krisilal',\r\n    'Krytelgaz',\r\n    'Kuiju',\r\n    'Kydomor',\r\n    'Kylara',\r\n    'Kylinsra',\r\n    'Kymelin',\r\n    'Kymorel',\r\n    'Kyrembra',\r\n    'Kyvaran',\r\n    'Kyveler',\r\n    'Laaraban',\r\n    'Lacoumox',\r\n    'Lacrion',\r\n    'Ladamur',\r\n    'Ladestro',\r\n    'Laesina',\r\n    'Lafera',\r\n    'Lagaram',\r\n    'Lagova',\r\n    'Lahanolt',\r\n    'Laklanot',\r\n    'Lalaia',\r\n    'Lalthilan',\r\n    'Lamidris',\r\n    'Lamifer',\r\n    'Lamizjax',\r\n    'Lampralur',\r\n    'Lamrella',\r\n    'Lanisor',\r\n    'Lanival',\r\n    'Lanstreä',\r\n    'Lantakrel',\r\n    'Lantamar',\r\n    'Lanumel',\r\n    'Lappeleme',\r\n    'Laprimal',\r\n    'Larana',\r\n    'Laranel',\r\n    'Larilect',\r\n    'Larion',\r\n    'Larquinip',\r\n    'Lascynthis',\r\n    'Lasirusk',\r\n    'Lataffin',\r\n    'Lattremond',\r\n    'Lazadon',\r\n    'Ledmial',\r\n    'Legaaruksh',\r\n    'Lelatha',\r\n    'Leledish',\r\n    'Lendela',\r\n    'Lendoweer',\r\n    'Leodaan',\r\n    'Leojith',\r\n    'Leoptrin',\r\n    'Leptenar',\r\n    'Leptredin',\r\n    'Leranorb',\r\n    'Lessefren',\r\n    'Lethrian',\r\n    'Levasim',\r\n    'Lhyrrhana',\r\n    'Liamar',\r\n    'Liambra',\r\n    'Liammeck',\r\n    'Lianairn',\r\n    'Liansra',\r\n    'Lianvrin',\r\n    'Liarxa',\r\n    'Liavec',\r\n    'Liembra',\r\n    'Lilasta',\r\n    'Lilkauki',\r\n    'Lilthia',\r\n    'Limbria',\r\n    'Linargan',\r\n    'Linnaker',\r\n    'Lionus',\r\n    'Liossoor',\r\n    'Liquemar',\r\n    'Liroitzin',\r\n    'Lisimbra',\r\n    'Lissara',\r\n    'Lissflorel',\r\n    'Lithuir',\r\n    'Lithyulin',\r\n    'Litoefer',\r\n    'Liydala',\r\n    'Lizenna',\r\n    'Lizinra',\r\n    'Llanaanu',\r\n    'Loëra',\r\n    'Logano',\r\n    'Lorana',\r\n    'Lorenvra',\r\n    'Loriant',\r\n    'Lozeneth',\r\n    'Luciet',\r\n    'Lucimer',\r\n    'Lunzia',\r\n    'Lurepusc',\r\n    'Luspilkir',\r\n    'Luthirring',\r\n    'Luuranoth',\r\n    'Lydalay',\r\n    'Lymandal',\r\n    'Lynaya',\r\n    'Lyndré',\r\n    'Lynxias',\r\n    'Lypilla',\r\n    'Lyraloss',\r\n    'Lyrian',\r\n    'Lyrossa',\r\n    'Lyrozi',\r\n    'Lythian',\r\n    'Lythratole',\r\n    'Lyzeary',\r\n    'Maalkeyan',\r\n    'Maceon',\r\n    'Madaluur',\r\n    'Madiglim',\r\n    'Madora',\r\n    'Maerleetlas',\r\n    'Maeronyx',\r\n    'Mafranic',\r\n    'Magezatt',\r\n    'Magithel',\r\n    'Maglethom',\r\n    'Magylin',\r\n    'Mahelas',\r\n    'Majaelith',\r\n    'Makana',\r\n    'Malaësse',\r\n    'Malaioc',\r\n    'Malambard',\r\n    'Malandor',\r\n    'Malasire',\r\n    'Malasquor',\r\n    'Malavok',\r\n    'Malbrosac',\r\n    'Maldagon',\r\n    'Malechan',\r\n    'Malestrin',\r\n    'Malgadarn',\r\n    'Malhantis',\r\n    'Malhemar',\r\n    'Malidryth',\r\n    'Malifrin',\r\n    'Malisken',\r\n    'Mallaran',\r\n    'Maloroc',\r\n    'Malsanon',\r\n    'Mamvier',\r\n    'Mandrezool',\r\n    'Manjalem',\r\n    'Mannanon',\r\n    'Mantragan',\r\n    'Maöndat',\r\n    'Mapiran',\r\n    'Mardieth',\r\n    'Maridan',\r\n    'Maridisp',\r\n    'Marindro',\r\n    'Marinus',\r\n    'Marivik',\r\n    'Marliok',\r\n    'Marmaranx',\r\n    'Marmeron',\r\n    'Marniel',\r\n    'Marreldix',\r\n    'Marsarok',\r\n    'Marsineh',\r\n    'Martanzix',\r\n    'Maruis',\r\n    'Mashalla',\r\n    'Masira',\r\n    'Massoran',\r\n    'Mathannil',\r\n    'Matzirik',\r\n    'Maunestin',\r\n    'Mavira',\r\n    'Maxander',\r\n    'Maxtibel',\r\n    'Mazegus',\r\n    'Mazesra',\r\n    'Mazian',\r\n    'Mazivel',\r\n    'Medarinn',\r\n    'Medrahar',\r\n    'Medvergaal',\r\n    'Mehalet',\r\n    'Mejarlan',\r\n    'Mekeesha',\r\n    'Melamnir',\r\n    'Melapis',\r\n    'Melasdar',\r\n    'Melikkhaz',\r\n    'Meliune',\r\n    'Melliorn',\r\n    'Melorond',\r\n    'Memisaire',\r\n    'Menalor',\r\n    'Mendobarl',\r\n    'Menelvaour',\r\n    'Meodas',\r\n    'Meraleph',\r\n    'Merama',\r\n    'Meramel',\r\n    'Meranshu',\r\n    'Meraudax',\r\n    'Meriag',\r\n    'Meridyn',\r\n    'Meriel',\r\n    'Merilec',\r\n    'Merinar',\r\n    'Merinard',\r\n    'Merivran',\r\n    'Merkalo',\r\n    'Merlience',\r\n    'Merresil',\r\n    'Merscianthe',\r\n    'Mertamet',\r\n    'Mesegrim',\r\n    'Metrofa',\r\n    'Mevedet',\r\n    'Mewreddan',\r\n    'Mezedan',\r\n    'Mezerel',\r\n    'Mezlehet',\r\n    'Mezlethil',\r\n    'Mezrian',\r\n    'Mezrenain',\r\n    'Mezvorax',\r\n    'Mialdere',\r\n    'Mialorn',\r\n    'Midela',\r\n    'Mierah',\r\n    'Mikramil',\r\n    'Milicseth',\r\n    'Minaxa',\r\n    'Minrioth',\r\n    'Miranei',\r\n    'Mirantilb',\r\n    'Mirelith',\r\n    'Mirenta',\r\n    'Miriel',\r\n    'Mirieth',\r\n    'Mirintha',\r\n    'Mirion',\r\n    'Mirreschade',\r\n    'Mirrsomi',\r\n    'Misella',\r\n    'Misiplum',\r\n    'Misirim',\r\n    'Mithelos',\r\n    'Moälroc',\r\n    'Mobrias',\r\n    'Moieddin',\r\n    'Moisiane',\r\n    'Molhanni',\r\n    'Mondestin',\r\n    'Moramin',\r\n    'Morannel',\r\n    'Morilimth',\r\n    'Morleved',\r\n    'Mormindar',\r\n    'Morofar',\r\n    'Morozam',\r\n    'Morrixan',\r\n    'Mosbelo',\r\n    'Movellan',\r\n    'Moxfiel',\r\n    'Mrankali',\r\n    'Mredisu',\r\n    'Mujeket',\r\n    'Mulciner',\r\n    'Mumivor',\r\n    'Murbahir',\r\n    'Murias',\r\n    'Murinja',\r\n    'Mustesra',\r\n    'Mylbdenir',\r\n    'Mylenost',\r\n    'Myllara',\r\n    'Myloryx',\r\n    'Myractus',\r\n    'Myrmelesc',\r\n    'Myrrhismir',\r\n    'Myrstica',\r\n    'Myruken',\r\n    'Myvior',\r\n    'Naadien',\r\n    'Nabronyb',\r\n    'Naëska',\r\n    'Nagarax',\r\n    'Naiagard',\r\n    'Najikim',\r\n    'Nambolar',\r\n    'Namezlith',\r\n    'Namien',\r\n    'Nappolanc',\r\n    'Naramant',\r\n    'Naranlob',\r\n    'Naraven',\r\n    'Narecan',\r\n    'Naretha',\r\n    'Narfalax',\r\n    'Narimas',\r\n    'Narisdaat',\r\n    'Narissa',\r\n    'Narotham',\r\n    'Narothun',\r\n    'Narrabhar',\r\n    'Narseldax',\r\n    'Nasmerul',\r\n    'Nateera',\r\n    'Nathogan',\r\n    'Natrifer',\r\n    'Nauthzegam',\r\n    'Naveiruz',\r\n    'Navislorn',\r\n    'Navithesk',\r\n    'Nefaroyn',\r\n    'Negula',\r\n    'Nelibar',\r\n    'Nelphina',\r\n    'Nelthenti',\r\n    'Nelveren',\r\n    'Nemarhaz',\r\n    'Nemisen',\r\n    'Nereitra',\r\n    'Nerevaunt',\r\n    'Nerian',\r\n    'Nerida',\r\n    'Neryonid',\r\n    'Netharna',\r\n    'Nethoël',\r\n    'Neveena',\r\n    'Nexian',\r\n    'Nexlio',\r\n    'Niascynth',\r\n    'Nidoran',\r\n    'Nienra',\r\n    'Niggollo',\r\n    'Nilchauntif',\r\n    'Nilmio',\r\n    'Nimandest',\r\n    'Nimfiralth',\r\n    'Nimiax',\r\n    'Ninozain',\r\n    'Niomakh',\r\n    'Nisamon',\r\n    'Nisaqua',\r\n    'Nissafen',\r\n    'Nitharna',\r\n    'Nithikin',\r\n    'Nitoda',\r\n    'Nivilan',\r\n    'Nizamar',\r\n    'Nizared',\r\n    'Noldiruth',\r\n    'Nolteera',\r\n    'Nooranda',\r\n    'Norian',\r\n    'Norvandrel',\r\n    'Noumander',\r\n    'Novrima',\r\n    'Noxalwan',\r\n    'Nuanvi',\r\n    'Nuarban',\r\n    'Nujriha',\r\n    'Nulagdi',\r\n    'Nuskuron',\r\n    'Nyrana',\r\n    'Nysorat',\r\n    'Obatzi',\r\n    'Obelnid',\r\n    'Ocmias',\r\n    'Odimos',\r\n    'Offenalke',\r\n    'Ogola',\r\n    'Ohranjat',\r\n    'Ojavi',\r\n    'Ojilinx',\r\n    'Okalder',\r\n    'Okpala',\r\n    'Oktavisp',\r\n    'Olamar',\r\n    'Olbenos',\r\n    'Oldarane',\r\n    'Oldrinben',\r\n    'Olican',\r\n    'Ollascet',\r\n    'Olnefkin',\r\n    'Olondin',\r\n    'Olonthos',\r\n    'Oloru',\r\n    'Oloxem',\r\n    'Olybris',\r\n    'Omaldras',\r\n    'Omaphel',\r\n    'Omarna',\r\n    'Omarthis',\r\n    'Omberdal',\r\n    'Ombriand',\r\n    'Ommarisk',\r\n    'Omosdur',\r\n    'Omziec',\r\n    'Onaldrus',\r\n    'Oneira',\r\n    'Onfivlen',\r\n    'Oniack',\r\n    'Onjedrit',\r\n    'Onoxim',\r\n    'Oolevran',\r\n    'Oomia',\r\n    'Oorandehle',\r\n    'Oquilda',\r\n    'Oradrad',\r\n    'Orbasdron',\r\n    'Orbeleez',\r\n    'Orbitan',\r\n    'Orchellor',\r\n    'Orebus',\r\n    'Oremex',\r\n    'Orenai',\r\n    'Orennem',\r\n    'Oridyr',\r\n    'Oriob',\r\n    'Oristkel',\r\n    'Orithreyn',\r\n    'Orivaen',\r\n    'Orlantsu',\r\n    'Orliend',\r\n    'Orlopem',\r\n    'Orluan',\r\n    'Ormadzel',\r\n    'Ormarit',\r\n    'Ormion',\r\n    'Ornulaa',\r\n    'Orodel',\r\n    'Oromrath',\r\n    'Orovar',\r\n    'Orovune',\r\n    'Orpirrhis',\r\n    'Orreminsk',\r\n    'Ortazan',\r\n    'Osgoran',\r\n    'Oskana',\r\n    'Osmoril',\r\n    'Osoyrir',\r\n    'Ossfenness',\r\n    'Otargol',\r\n    'Othaldon',\r\n    'Otralinx',\r\n    'Oujanglor',\r\n    'Ouraia',\r\n    'Ovarasc',\r\n    'Ovelleau',\r\n    'Oveselm',\r\n    'Ovranoj',\r\n    'Ovrenor',\r\n    'Oxavar',\r\n    'Oxavart',\r\n    'Oxruël',\r\n    'Ozatris',\r\n    'Ozgethern',\r\n    'Ozmirall',\r\n    'Ozringol',\r\n    'Palabell',\r\n    'Palarna',\r\n    'Palegain',\r\n    'Palidral',\r\n    'Palimbrust',\r\n    'Palinor',\r\n    'Panafig',\r\n    'Pandaxes',\r\n    'Pandelee',\r\n    'Pandeleur',\r\n    'Paomelna',\r\n    'Pardyereyk',\r\n    'Pargascir',\r\n    'Parlion',\r\n    'Paskorran',\r\n    'Pastengral',\r\n    'Pavadahl',\r\n    'Pavandor',\r\n    'Paxijanc',\r\n    'Paxilla',\r\n    'Pazaleeb',\r\n    'Peladon',\r\n    'Peledor',\r\n    'Pelendur',\r\n    'Peleod',\r\n    'Pelezef',\r\n    'Peliast',\r\n    'Pelizon',\r\n    'Pellingale',\r\n    'Pelmercest',\r\n    'Pelmergol',\r\n    'Pelsiffra',\r\n    'Penengvik',\r\n    'Peradal',\r\n    'Peraga',\r\n    'Perendan',\r\n    'Perendor',\r\n    'Peridor',\r\n    'Peripril',\r\n    'Perisgrim',\r\n    'Peristaad',\r\n    'Perligon',\r\n    'Pernian',\r\n    'Perridex',\r\n    'Persimmid',\r\n    'Perushka',\r\n    'Peslivar',\r\n    'Petreban',\r\n    'Phaidonaz',\r\n    'Phaneon',\r\n    'Pharethyn',\r\n    'Phariol',\r\n    'Pharnioth',\r\n    'Phascalon',\r\n    'Phesian',\r\n    'Phiarusk',\r\n    'Philizim',\r\n    'Phiniak',\r\n    'Phiressa',\r\n    'Phoosrotex',\r\n    'Phoseter',\r\n    'Phramberzond',\r\n    'Phranzulet',\r\n    'Piapiar',\r\n    'Pievalp',\r\n    'Pillia',\r\n    'Pioma',\r\n    'Pirigal',\r\n    'Pirilaud',\r\n    'Pirinweal',\r\n    'Piritosk',\r\n    'Pisçion',\r\n    'Pishior',\r\n    'Pithibryl',\r\n    'Piynameer',\r\n    'Plamias',\r\n    'Plenchiel',\r\n    'Poinellay',\r\n    'Poinembet',\r\n    'Polassar',\r\n    'Polorrum',\r\n    'Porodo',\r\n    'Porsenna',\r\n    'Potadu',\r\n    'Priligrel',\r\n    'Progneti',\r\n    'Ptamriad',\r\n    'Ptelian',\r\n    'Pteraphon',\r\n    'Pulsavra',\r\n    'Pyrenda',\r\n    'Pyrtolosc',\r\n    'Pytholtus',\r\n    'Pytrigon',\r\n    'Quaeleon',\r\n    'Quagrana',\r\n    'Qualbian',\r\n    'Qualhassan',\r\n    'Quanaöck',\r\n    'Quandiel',\r\n    'Queegani',\r\n    'Quenteri',\r\n    'Quentezard',\r\n    'Queoddry',\r\n    'Queridra',\r\n    'Queroë',\r\n    'Quersemel',\r\n    'Quilium',\r\n    'Quilverex',\r\n    'Quinibus',\r\n    'Quisifrix',\r\n    'Quolatha',\r\n    'Quolessip',\r\n    'Quoranûl',\r\n    'Quyzacorm',\r\n    'Raascia',\r\n    'Racassar',\r\n    'Rackafel',\r\n    'Radasman',\r\n    'Radelon',\r\n    'Radula',\r\n    'Raiveral',\r\n    'Rajiten',\r\n    'Rajurno',\r\n    'Rakmyrral',\r\n    'Rakshilan',\r\n    'Ralanzur',\r\n    'Ralisimp',\r\n    'Ralmanor',\r\n    'Ralystra',\r\n    'Ramura',\r\n    'Ranessin',\r\n    'Ranicroy',\r\n    'Ranifice',\r\n    'Ranomar',\r\n    'Rasaleth',\r\n    'Rashemba',\r\n    'Rassdolim',\r\n    'Rasseglin',\r\n    'Rassfydel',\r\n    'Rastilon',\r\n    'Ravathene',\r\n    'Ravenor',\r\n    'Raverail',\r\n    'Ravimo',\r\n    'Raxia',\r\n    'Razamor',\r\n    'Raziel',\r\n    'Reänkal',\r\n    'Reepifer',\r\n    'Regalorj',\r\n    'Regimir',\r\n    'Reldorin',\r\n    'Releza',\r\n    'Relikin',\r\n    'Relion',\r\n    'Rellevirk',\r\n    'Relliapt',\r\n    'Relundar',\r\n    'Rendeptir',\r\n    'Renzelath',\r\n    'Reonin',\r\n    'Requiek',\r\n    'Rescorance',\r\n    'Resmenalse',\r\n    'Retalkin',\r\n    'Rethia',\r\n    'Revenal',\r\n    'Rezmyra',\r\n    'Rhakotis',\r\n    'Rhendalin',\r\n    'Rhiacind',\r\n    'Rhimaya',\r\n    'Rhimeren',\r\n    'Rhisala',\r\n    'Rhomiscele',\r\n    'Rhydolin',\r\n    'Rhyölar',\r\n    'Riasine',\r\n    'Riatar',\r\n    'Riatha',\r\n    'Rickata',\r\n    'Rigisil',\r\n    'Rigonav',\r\n    'Riimara',\r\n    'Rilatha',\r\n    'Rilidtai',\r\n    'Rilmara',\r\n    'Rilmorban',\r\n    'Rinxfantir',\r\n    'Riodan',\r\n    'Riolarn',\r\n    'Riolba',\r\n    'Riscintell',\r\n    'Risgana',\r\n    'Risia',\r\n    'Risrinam',\r\n    'Rithotarl',\r\n    'Rixian',\r\n    'Rizifire',\r\n    'Rocapeste',\r\n    'Rodifel',\r\n    'Rodion',\r\n    'Roënen',\r\n    'Rokefyre',\r\n    'Romela',\r\n    'Romenom',\r\n    'Rondolla',\r\n    'Rophelon',\r\n    'Rophendir',\r\n    'Rosmarlind',\r\n    'Rouädth',\r\n    'Rovlerac',\r\n    'Rozeeldin',\r\n    'Rugiel',\r\n    'Ruhria',\r\n    'Rumilan',\r\n    'Runian',\r\n    'Rusaadi',\r\n    'Rusalmna',\r\n    'Rusitholk',\r\n    'Ruvasarn',\r\n    'Ruvatro',\r\n    'Ryözile',\r\n    'Rynian',\r\n    'Rynristas',\r\n    'Rynyris',\r\n    'Ryxarro',\r\n    'Sabrazsa',\r\n    'Sabriel',\r\n    'Sabtimon',\r\n    'Sadabel',\r\n    'Sadeera',\r\n    'Sadonel',\r\n    'Safarrinx',\r\n    'Saffinka',\r\n    'Sagamir',\r\n    'Saguil',\r\n    'Saïnda',\r\n    'Sajaerix',\r\n    'Salaarus',\r\n    'Salathir',\r\n    'Salclias',\r\n    'Salina',\r\n    'Salinen',\r\n    'Salioct',\r\n    'Salitlan',\r\n    'Salmorin',\r\n    'Salrissa',\r\n    'Samalend',\r\n    'Samerlan',\r\n    'Sancial',\r\n    'Sannsara',\r\n    'Sanorye',\r\n    'Sanpellin',\r\n    'Sanseran',\r\n    'Sanzhara',\r\n    'Saqavar',\r\n    'Sarandere',\r\n    'Saraxa',\r\n    'Sardanak',\r\n    'Sarendril',\r\n    'Sargadal',\r\n    'Sariya',\r\n    'Sarkinos',\r\n    'Sarkozan',\r\n    'Sarlian',\r\n    'Sarmasar',\r\n    'Saroë',\r\n    'Sarozak',\r\n    'Sarrier',\r\n    'Sarrofo',\r\n    'Sarsicaul',\r\n    'Sartenna',\r\n    'Sarupha',\r\n    'Saschalon',\r\n    'Sathlatta',\r\n    'Satrothan',\r\n    'Savêma',\r\n    'Savretos',\r\n    'Savria',\r\n    'Scathanar',\r\n    'Scesefna',\r\n    'Sebandune',\r\n    'Selamvra',\r\n    'Selestor',\r\n    'Selial',\r\n    'Selidro',\r\n    'Selior',\r\n    'Selmiar',\r\n    'Selnara',\r\n    'Selnia',\r\n    'Selsabar',\r\n    'Selverel',\r\n    'Semarsen',\r\n    'Semdalice',\r\n    'Semmagel',\r\n    'Semurquan',\r\n    'Sendara',\r\n    'Senoster',\r\n    'Seorra',\r\n    'Sepiroth',\r\n    'Seprenal',\r\n    'Sepria',\r\n    'Serakel',\r\n    'Serambast',\r\n    'Seramir',\r\n    'Serefic',\r\n    'Serrios',\r\n    'Sertumen',\r\n    'Servelen',\r\n    'Serydran',\r\n    'Seskandal',\r\n    'Sevandir',\r\n    'Sevandor',\r\n    'Severique',\r\n    'Severlesk',\r\n    'Sevlasné',\r\n    'Seytarin',\r\n    'Sfaeriqua',\r\n    'Sferalan',\r\n    'Sferio',\r\n    'Shaikala',\r\n    'Shalimed',\r\n    'Shameera',\r\n    'Shanatherl',\r\n    'Shanderzoth',\r\n    'Sharajsha',\r\n    'Sharbremil',\r\n    'Shardovan',\r\n    'Sharretal',\r\n    'Shaxeän',\r\n    'Shehallem',\r\n    'Shekkazad',\r\n    'Sherethis',\r\n    'Sherina',\r\n    'Sherotha',\r\n    'Shevrian',\r\n    'Shibema',\r\n    'Shiennith',\r\n    'Shildakor',\r\n    'Shimjian',\r\n    'Sholgonda',\r\n    'Shragonach',\r\n    'Shrymaroyne',\r\n    'Shurakai',\r\n    'Shushila',\r\n    'Sialtaan',\r\n    'Sianar',\r\n    'Siandar',\r\n    'Siandor',\r\n    'Siannem',\r\n    'Sidanzar',\r\n    'Siendred',\r\n    'Sientij',\r\n    'Sientrib',\r\n    'Siflana',\r\n    'Sigilla',\r\n    'Sildengold',\r\n    'Silifer',\r\n    'Silistel',\r\n    'Silivis',\r\n    'Silmriel',\r\n    'Silvarak',\r\n    'Silvronom',\r\n    'Simara',\r\n    'Simblio',\r\n    'Simirling',\r\n    'Simisthir',\r\n    'Simrana',\r\n    'Simusha',\r\n    'Sindaract',\r\n    'Sindiris',\r\n    'Sindiroq',\r\n    'Sinhadak',\r\n    'Sinira',\r\n    'Sinoprin',\r\n    'Siortlen',\r\n    'Sioshorl',\r\n    'Sirelu',\r\n    'Sirenel',\r\n    'Sirgamesc',\r\n    'Sirifrix',\r\n    'Sirinar',\r\n    'Sisimar',\r\n    'Sisimbra',\r\n    'Siugorn',\r\n    'Sjalara',\r\n    'Skalidra',\r\n    'Skelalack',\r\n    'Skelogha',\r\n    'Skelother',\r\n    'Skesira',\r\n    'Slanarra',\r\n    'Slanria',\r\n    'Slenlior',\r\n    'Slevindralsk',\r\n    'Slyrmegnel',\r\n    'Sofrego',\r\n    'Sofurin',\r\n    'Soleddin',\r\n    'Solfellan',\r\n    'Soliroq',\r\n    'Solliot',\r\n    'Solmerip',\r\n    'Soltharan',\r\n    'Somagar',\r\n    'Sondaardrel',\r\n    'Sondrelen',\r\n    'Soomerak',\r\n    'Soquallin',\r\n    'Sorasta',\r\n    'Sormian',\r\n    'Sozmerold',\r\n    'Srandelix',\r\n    'Sravoorin',\r\n    'Steraval',\r\n    'Sthinalel',\r\n    'Stiaver',\r\n    'Stivernach',\r\n    'Sudevim',\r\n    'Sufranar',\r\n    'Suilim',\r\n    'Sujorgni',\r\n    'Sukratak',\r\n    'Sulathaag',\r\n    'Sulethri',\r\n    'Suliane',\r\n    'Sulien',\r\n    'Sulimo',\r\n    'Sulkanar',\r\n    'Sulkari',\r\n    'Sulroné',\r\n    'Surmaris',\r\n    'Suruay',\r\n    'Suzamil',\r\n    'Svialdan',\r\n    'Swangoren',\r\n    'Sweiborla',\r\n    'Sylvetane',\r\n    'Symaril',\r\n    'Syriolg',\r\n    'Syzirept',\r\n    'Szivistri',\r\n    'Taalivex',\r\n    'Tabusaad',\r\n    'Tadasli',\r\n    'Tafashic',\r\n    'Tainbara',\r\n    'Taladere',\r\n    'Talareme',\r\n    'Talarin',\r\n    'Talertus',\r\n    'Talien',\r\n    'Taliess',\r\n    'Talieux',\r\n    'Talion',\r\n    'Talislance',\r\n    'Talmora',\r\n    'Taloxar',\r\n    'Taloxi',\r\n    'Talunon',\r\n    'Tamavold',\r\n    'Tamias',\r\n    'Tamioj',\r\n    'Tamlivran',\r\n    'Tamnithir',\r\n    'Tanafin',\r\n    'Tanakord',\r\n    'Tanier',\r\n    'Tanjalas',\r\n    'Tanjara',\r\n    'Tanseral',\r\n    'Tanviu',\r\n    'Tarakus',\r\n    'Taramag',\r\n    'Taramos',\r\n    'Tardelin',\r\n    'Tariaj',\r\n    'Tarkenthos',\r\n    'Tarmesorn',\r\n    'Tarmioc',\r\n    'Taroya',\r\n    'Tasardy',\r\n    'Taslhiot',\r\n    'Tassafert',\r\n    'Tassiran',\r\n    'Taumonar',\r\n    'Taveli',\r\n    'Tavista',\r\n    'Tayaren',\r\n    'Teänyn',\r\n    'Tegana',\r\n    'Tegleron',\r\n    'Teirajan',\r\n    'Teirishir',\r\n    'Telarna',\r\n    'Telcyra',\r\n    'Teldrua',\r\n    'Telegris',\r\n    'Telendys',\r\n    'Teleura',\r\n    'Telnarzim',\r\n    'Temeris',\r\n    'Temeslin',\r\n    'Temmosus',\r\n    'Temontel',\r\n    'Tenadas',\r\n    'Tenidrist',\r\n    'Teotsir',\r\n    'Terasiln',\r\n    'Terejoen',\r\n    'Terena',\r\n    'Terquaelen',\r\n    'Terrenus',\r\n    'Terthelej',\r\n    'Terthyrkrim',\r\n    'Tervaën',\r\n    'Tesmarrak',\r\n    'Tevala',\r\n    'Tezarim',\r\n    'Thadarin',\r\n    'Thalafer',\r\n    'Thalaras',\r\n    'Thalira',\r\n    'Thalladyle',\r\n    'Thameera',\r\n    'Thamiel',\r\n    'Thanalar',\r\n    'Tharamoon',\r\n    'Tharnia',\r\n    'Tharomyl',\r\n    'Tharoval',\r\n    'Thellikkin',\r\n    'Thelodin',\r\n    'Thereski',\r\n    'Thieras',\r\n    'Thieryn',\r\n    'Thirindon',\r\n    'Thithrama',\r\n    'Thitrivar',\r\n    'Thixagen',\r\n    'Thlenedern',\r\n    'Thlunarna',\r\n    'Thoorana',\r\n    'Thrabanquo',\r\n    'Thumithar',\r\n    'Thurmatoth',\r\n    'Thuuvanar',\r\n    'Tiabrell',\r\n    'Tiachul',\r\n    'Tianan',\r\n    'Tiaosut',\r\n    'Tiaxa',\r\n    'Tiazan',\r\n    'Tiefkol',\r\n    'Tifulgar',\r\n    'Tigrana',\r\n    'Tirages',\r\n    'Tiregam',\r\n    'Tirelev',\r\n    'Tirion',\r\n    'Tirlimist',\r\n    'Tirrasthu',\r\n    'Tissawane',\r\n    'Titia',\r\n    'Tivadul',\r\n    'Tiveran',\r\n    'Tivriex',\r\n    'Tiyagar',\r\n    'Tizvian',\r\n    'Tolarim',\r\n    'Tolarmej',\r\n    'Tolenka',\r\n    'Tolibell',\r\n    'Toramus',\r\n    'Torbera',\r\n    'Torgassin',\r\n    'Torlion',\r\n    'Tormitran',\r\n    'Toroäsh',\r\n    'Toroman',\r\n    'Torquenyx',\r\n    'Torresind',\r\n    'Torsamant',\r\n    'Torzundus',\r\n    'Tothirnal',\r\n    'Tralien',\r\n    'Tralquien',\r\n    'Traviod',\r\n    'Tredestin',\r\n    'Trellium',\r\n    'Trenaevis',\r\n    'Trilajo',\r\n    'Trinezhan',\r\n    'Triolus',\r\n    'Trisdestrin',\r\n    'Troviawn',\r\n    'Trydaron',\r\n    'Trysadon',\r\n    'Tsacramal',\r\n    'Tsalkoril',\r\n    'Tuilleth',\r\n    'Tulio',\r\n    'Tuniger',\r\n    'Turmalin',\r\n    'Turobel',\r\n    'Turvesin',\r\n    'Twanalor',\r\n    'Twillessin',\r\n    'Tylastreen',\r\n    'Tyldora',\r\n    'Tylenea',\r\n    'Tyradin',\r\n    'Tyrathis',\r\n    'Tyrtyra',\r\n    'Tzaroli',\r\n    'Ualosk',\r\n    'Ubdakon',\r\n    'Udanax',\r\n    'Udanib',\r\n    'Udefoin',\r\n    'Udrahart',\r\n    'Udria',\r\n    'Ufanort',\r\n    'Ufial',\r\n    'Ugivor',\r\n    'Uilda',\r\n    'Uilric',\r\n    'Uixet',\r\n    'Ukinorn',\r\n    'Ulanthas',\r\n    'Ulember',\r\n    'Ulendal',\r\n    'Ullifan',\r\n    'Ulnavell',\r\n    'Ulnaxdra',\r\n    'Ulrepin',\r\n    'Ulroënce',\r\n    'Umaspin',\r\n    'Umbraheed',\r\n    'Umbrina',\r\n    'Umerac',\r\n    'Umeri',\r\n    'Umikrel',\r\n    'Umistal',\r\n    'Undalryn',\r\n    'Unedrinj',\r\n    'Unkalisk',\r\n    'Unstoffel',\r\n    'Uraör',\r\n    'Urghazkoy',\r\n    'Urhankren',\r\n    'Urimnor',\r\n    'Urjalum',\r\n    'Urjaya',\r\n    'Urmalgis',\r\n    'Urrelor',\r\n    'Urzunift',\r\n    'Uscrumine',\r\n    'Usegar',\r\n    'Ushamtar',\r\n    'Usigul',\r\n    'Uskanast',\r\n    'Ussala',\r\n    'Ussolec',\r\n    'Ustaleaugh',\r\n    'Uthudain',\r\n    'Utorel',\r\n    'Uveena',\r\n    'Uxavis',\r\n    'Uxinor',\r\n    'Uxuvi',\r\n    'Uzileth',\r\n    'Uziprost',\r\n    'Uzirin',\r\n    'Uzisloj',\r\n    'Vacruëx',\r\n    'Vakrissa',\r\n    'Valabar',\r\n    'Valadan',\r\n    'Valagarth',\r\n    'Valandrib',\r\n    'Valarend',\r\n    'Valarom',\r\n    'Valaxis',\r\n    'Valdera',\r\n    'Valfoxel',\r\n    'Valina',\r\n    'Valion',\r\n    'Valistes',\r\n    'Vallia',\r\n    'Valmerac',\r\n    'Valphanar',\r\n    'Valserna',\r\n    'Valterla',\r\n    'Valthomé',\r\n    'Vanamon',\r\n    'Vanara',\r\n    'Vanathil',\r\n    'Vandelex',\r\n    'Vanegrin',\r\n    'Vangrahzmid',\r\n    'Vantarad',\r\n    'Varamanx',\r\n    'Varamid',\r\n    'Varamis',\r\n    'Varcantis',\r\n    'Varchimas',\r\n    'Varkellit',\r\n    'Varlandel',\r\n    'Varraël',\r\n    'Varrakel',\r\n    'Vashlion',\r\n    'Vasmarro',\r\n    'Vaudirek',\r\n    'Vayemis',\r\n    'Vedaraf',\r\n    'Veezproä',\r\n    'Velaila',\r\n    'Velanac',\r\n    'Velija',\r\n    'Velina',\r\n    'Velior',\r\n    'Velissa',\r\n    'Velozma',\r\n    'Velvermeld',\r\n    'Vendramyr',\r\n    'Veneska',\r\n    'Venithros',\r\n    'Venmarenc',\r\n    'Vercazlyde',\r\n    'Vereedra',\r\n    'Verenice',\r\n    'Vereska',\r\n    'Verethest',\r\n    'Verissrad',\r\n    'Verolant',\r\n    'Verowa',\r\n    'Vervadesce',\r\n    'Ververine',\r\n    'Veslomere',\r\n    'Vetrengarr',\r\n    'Vettemis',\r\n    'Vhiallon',\r\n    'Viastin',\r\n    'Viastra',\r\n    'Videla',\r\n    'Videssos',\r\n    'Viero',\r\n    'Vilirast',\r\n    'Vilrokin',\r\n    'Vilscelyn',\r\n    'Viomer',\r\n    'Virandisp',\r\n    'Virenar',\r\n    'Virensa',\r\n    'Virjauruk',\r\n    'Virosanne',\r\n    'Virthuren',\r\n    'Vismarun',\r\n    'Visperime',\r\n    'Vixuad',\r\n    'Vixuël',\r\n    'Vizina',\r\n    'Vladilesk',\r\n    'Vlarobaal',\r\n    'Voiopë',\r\n    'Vojeera',\r\n    'Voldisterre',\r\n    'Volkazen',\r\n    'Volmaran',\r\n    'Voluru',\r\n    'Vonidar',\r\n    'Voozcoreme',\r\n    'Voranor',\r\n    'Vorchazel',\r\n    'Vorelgin',\r\n    'Vorien',\r\n    'Vornica',\r\n    'Vornovas',\r\n    'Vorquemand',\r\n    'Vorunir',\r\n    'Vorvadoss',\r\n    'Vosmerrel',\r\n    'Vossari',\r\n    'Vozmarald',\r\n    'Vrepimus',\r\n    'Vrilestamn',\r\n    'Vristamor',\r\n    'Vuëthar',\r\n    'Walspinore',\r\n    'Wandalar',\r\n    'Wanestka',\r\n    'Wantorak',\r\n    'Wardlanof',\r\n    'Warlwier',\r\n    'Warrigel',\r\n    'Wascramin',\r\n    'Wasmoët',\r\n    'Watreyan',\r\n    'Wazerac',\r\n    'Wedonal',\r\n    'Welmerel',\r\n    'Wendower',\r\n    'Werrelet',\r\n    'Werscunok',\r\n    'Weverin',\r\n    'Wexavin',\r\n    'Whallifrond',\r\n    'Whearius',\r\n    'Whibmistle',\r\n    'Wianna',\r\n    'Wicardod',\r\n    'Widzoonaev',\r\n    'Wignaja',\r\n    'Wiinecot',\r\n    'Winian',\r\n    'Wodhrian',\r\n    'Woringel',\r\n    'Woxethoon',\r\n    'Wrodlian',\r\n    'Wurzemand',\r\n    'Wyliath',\r\n    'Xadamos',\r\n    'Xadogar',\r\n    'Xaisuruk',\r\n    'Xalorof',\r\n    'Xanafel',\r\n    'Xanalver',\r\n    'Xanbiah',\r\n    'Xania',\r\n    'Xantenmec',\r\n    'Xanxia',\r\n    'Xaraata',\r\n    'Xargusull',\r\n    'Xarthia',\r\n    'Xeelafarl',\r\n    'Xeelona',\r\n    'Xegessem',\r\n    'Xelica',\r\n    'Xemeret',\r\n    'Xemindar',\r\n    'Xenia',\r\n    'Xeralisk',\r\n    'Xerdelisse',\r\n    'Xerechron',\r\n    'Xhalsadan',\r\n    'Xhanazlet',\r\n    'Xhodrovan',\r\n    'Xibalba',\r\n    'Xiifrani',\r\n    'Ximahlto',\r\n    'Ximakran',\r\n    'Ximodi',\r\n    'Xirian',\r\n    'Xirijasp',\r\n    'Xoänon',\r\n    'Xomdiral',\r\n    'Xorandor',\r\n    'Xoryalan',\r\n    'Xyaria',\r\n    'Yaimondar',\r\n    'Yakovar',\r\n    'Yakthodah',\r\n    'Yalduvar',\r\n    'Yaliath',\r\n    'Yallarna',\r\n    'Yallorind',\r\n    'Yalveron',\r\n    'Yamala',\r\n    'Yamindra',\r\n    'Yandelar',\r\n    'Yandrahla',\r\n    'Yaralet',\r\n    'Yarial',\r\n    'Yarillo',\r\n    'Yarzolept',\r\n    'Yashengzeb',\r\n    'Yathagault',\r\n    'Yathoric',\r\n    'Yathorlak',\r\n    'Ybalil',\r\n    'Ybranar',\r\n    'Yeltranal',\r\n    'Yeluöz',\r\n    'Yemanthal',\r\n    'Yemboloth',\r\n    'Yerdien',\r\n    'Yesgolod',\r\n    'Yevjarel',\r\n    'Yfremoon',\r\n    'Ygristan',\r\n    'Yhantuör',\r\n    'Yldejaste',\r\n    'Ymarisce',\r\n    'Ymbria',\r\n    'Yncaarim',\r\n    'Yohonough',\r\n    'Yonraloth',\r\n    'Yoplossa',\r\n    'Yoredan',\r\n    'Yormexoon',\r\n    'Yranthis',\r\n    'Yratos',\r\n    'Yrcanos',\r\n    'Yronthol',\r\n    'Yrwelos',\r\n    'Yryloth',\r\n    'Ythlyra',\r\n    'Ythribond',\r\n    'Yurnada',\r\n    'Yusperal',\r\n    'Yuzigral',\r\n    'Zaamontel',\r\n    'Zadamun',\r\n    'Zadipan',\r\n    'Zadrowane',\r\n    'Zagrenxa',\r\n    'Zaharbif',\r\n    'Zajrenja',\r\n    'Zakiwya',\r\n    'Zalagi',\r\n    'Zalanath',\r\n    'Zalazar',\r\n    'Zalberek',\r\n    'Zalremy',\r\n    'Zamberel',\r\n    'Zamblezur',\r\n    'Zamora',\r\n    'Zamordax',\r\n    'Zamorla',\r\n    'Zanatir',\r\n    'Zanestra',\r\n    'Zangabal',\r\n    'Zanindil',\r\n    'Zanreynad',\r\n    'Zantifer',\r\n    'Zanzinel',\r\n    'Zaraana',\r\n    'Zaranave',\r\n    'Zaranax',\r\n    'Zarfhaano',\r\n    'Zarimarth',\r\n    'Zathmandar',\r\n    'Zayzazi',\r\n    'Zazamanc',\r\n    'Zazumel',\r\n    'Zazwinoon',\r\n    'Zebalan',\r\n    'Zefaeran',\r\n    'Zefrondus',\r\n    'Zelemorn',\r\n    'Zelgadis',\r\n    'Zellinet',\r\n    'Zelmarine',\r\n    'Zelprothon',\r\n    'Zemanthel',\r\n    'Zemirtol',\r\n    'Zenaxa',\r\n    'Zenilyeth',\r\n    'Zenithral',\r\n    'Zenorsha',\r\n    'Zentrigar',\r\n    'Zeosard',\r\n    'Zephiron',\r\n    'Zequiel',\r\n    'Zeranoj',\r\n    'Zhelavon',\r\n    'Zhemaeta',\r\n    'Ziacalt',\r\n    'Zifidin',\r\n    'Zilkorlaz',\r\n    'Ziraldra',\r\n    'Zirdarbis',\r\n    'Zirzihin',\r\n    'Zoälmar',\r\n    'Zoändrik',\r\n    'Zoävar',\r\n    'Zochiad',\r\n    'Zodolin',\r\n    'Zoltaren',\r\n    'Zominor',\r\n    'Zoramus',\r\n    'Zoranji',\r\n    'Zorashad',\r\n    'Zorayas',\r\n    'Zorestrel',\r\n    'Zorewyr',\r\n    'Zoroma',\r\n    'Zoromesh',\r\n    'Zosmindo',\r\n    'Zotaquaan',\r\n    'Zotheera',\r\n    'Zozminod',\r\n    'Zubvuysa',\r\n    'Zulaeram',\r\n    'Zulpirek',\r\n    'Zurenkin',\r\n    'Zurliban',\r\n    'Zydaraf',\r\n    'Zylarthen',\r\n    'Zyramythe',\r\n    'Zytavirk',\r\n  ],\r\n\r\n  // Multi Syllabes\r\n  [\r\n    'Abadapnyr',\r\n    'Abrethendar',\r\n    'Acrasian',\r\n    'Adario',\r\n    'Adieseth',\r\n    'Adilikor',\r\n    'Adinalar',\r\n    'Adriaxa',\r\n    'Afelanidd',\r\n    'Aforvalon',\r\n    'Agiora',\r\n    'Agreliwin',\r\n    'Aguidran',\r\n    'Aguilla',\r\n    'Aikikia',\r\n    'Akitarka',\r\n    'Alanahetra',\r\n    'Alarion',\r\n    'Alartia',\r\n    'Alarurigu',\r\n    'Alcidio',\r\n    'Aldarian',\r\n    'Alelakon',\r\n    'Aleshmara',\r\n    'Aletorim',\r\n    'Aleuworust',\r\n    'Alianala',\r\n    'Alicindra',\r\n    'Allessanya',\r\n    'Alorassanz',\r\n    'Amafeyan',\r\n    'Amathenar',\r\n    'Amdaramast',\r\n    'Amiria',\r\n    'Amriffien',\r\n    'Anaumiantis',\r\n    'Anelofar',\r\n    'Angetenar',\r\n    'Angurvidel',\r\n    'Animeldio',\r\n    'Anixido',\r\n    'Ankitarla',\r\n    'Ansamanthion',\r\n    'Ansimantar',\r\n    'Anspiladri',\r\n    'Antillia',\r\n    'Aphiana',\r\n    'Aptolcater',\r\n    'Aptrinuptium',\r\n    'Aquilia',\r\n    'Aradlumé',\r\n    'Araledek',\r\n    'Aramanzom',\r\n    'Aramestor',\r\n    'Arania',\r\n    'Arazederu',\r\n    'Arazynxa',\r\n    'Ardzefurith',\r\n    'Arezia',\r\n    'Arhilian',\r\n    'Arianroth',\r\n    'Ariaria',\r\n    'Ariaxoc',\r\n    'Arismaspia',\r\n    'Ariyava',\r\n    'Armalisrah',\r\n    'Aroxian',\r\n    'Arrolian',\r\n    'Arsevalin',\r\n    'Artalien',\r\n    'Aruzustin',\r\n    'Arzangiran',\r\n    'Asalirin',\r\n    'Asarlia',\r\n    'Asicia',\r\n    'Aslambarash',\r\n    'Aslerion',\r\n    'Asthania',\r\n    'Asuricorm',\r\n    'Atarana',\r\n    'Athiana',\r\n    'Athlebasia',\r\n    'Athoriel',\r\n    'Atiaran',\r\n    'Aulurien',\r\n    'Avalenar',\r\n    'Avanimmerl',\r\n    'Avelembai',\r\n    'Aviathar',\r\n    'Axajaxas',\r\n    'Azeledim',\r\n    'Azgelazgus',\r\n    'Aziria',\r\n    'Barosathlom',\r\n    'Barylophar',\r\n    'Bazkalia',\r\n    'Beledira',\r\n    'Belintraia',\r\n    'Belrablion',\r\n    'Borosiyan',\r\n    'Bradullio',\r\n    'Brodalcaflar',\r\n    'Cajarrida',\r\n    'Calaneüs',\r\n    'Calasapia',\r\n    'Caldiloran',\r\n    'Caleria',\r\n    'Calgalcandar',\r\n    'Calidundarios',\r\n    'Calliwelleran',\r\n    'Calmamelis',\r\n    'Caratrothis',\r\n    'Carthazian',\r\n    'Casrinian',\r\n    'Cassrimello',\r\n    'Cauditriceä',\r\n    'Cerelama',\r\n    'Chaestebalon',\r\n    'Chalirio',\r\n    'Chaölthanesh',\r\n    'Chisirion',\r\n    'Cinariyan',\r\n    'Cinnarath',\r\n    'Cirthavion',\r\n    'Coäberul',\r\n    'Coëxitaq',\r\n    'Corancoän',\r\n    'Coreliad',\r\n    'Corrilisan',\r\n    'Cossario',\r\n    'Crotimian',\r\n    'Cuidurjau',\r\n    'Cymoria',\r\n    'Dajuvius',\r\n    'Dakrolidur',\r\n    'Dameraxia',\r\n    'Daraviel',\r\n    'Daraztheon',\r\n    'Darsimala',\r\n    'Darsurion',\r\n    'Dassalpian',\r\n    'Daxxihidil',\r\n    'Delrinian',\r\n    'Demasaran',\r\n    'Demeriolet',\r\n    'Devaloka',\r\n    'Diamerune',\r\n    'Dicadoran',\r\n    'Didoria',\r\n    'Dinrudromon',\r\n    'Dirinnia',\r\n    'Dolohies',\r\n    'Dophinrian',\r\n    'Dornatentorl',\r\n    'Drevixibrind',\r\n    'Drexorvion',\r\n    'Duralica',\r\n    'Dyskilian',\r\n    'Eälisen',\r\n    'Eätinor',\r\n    'Ebriany',\r\n    'Eclaramon',\r\n    'Efarion',\r\n    'Efiranlas',\r\n    'Egajia',\r\n    'Eglaharant',\r\n    'Eglantarask',\r\n    'Elantargin',\r\n    'Elarial',\r\n    'Eleglorross',\r\n    'Elianna',\r\n    'Elisdriel',\r\n    'Elivinté',\r\n    'Ellyria',\r\n    'Elortaöl',\r\n    'Eltaria',\r\n    'Elverion',\r\n    'Elysia',\r\n    'Emelesis',\r\n    'Emelsyna',\r\n    'Enstarlamyn',\r\n    'Entalaroth',\r\n    'Epimissia',\r\n    'Erejitha',\r\n    'Eremiess',\r\n    'Erengazor',\r\n    'Erigia',\r\n    'Erivalda',\r\n    'Escalinian',\r\n    'Escamorid',\r\n    'Eschurioz',\r\n    'Esmerashard',\r\n    'Esnaramik',\r\n    'Etheriasa',\r\n    'Etianor',\r\n    'Etybrinel',\r\n    'Ezaltarem',\r\n    'Ezellohar',\r\n    'Faedulias',\r\n    'Falastien',\r\n    'Falerio',\r\n    'Falyrias',\r\n    'Farsemnithal',\r\n    'Favaijeness',\r\n    'Felarica',\r\n    'Felmarien',\r\n    'Feresilmar',\r\n    'Fiarazio',\r\n    'Fiespegar',\r\n    'Fimalemuen',\r\n    'Finactias',\r\n    'Fiormezath',\r\n    'Firvintilis',\r\n    'Flamorriwisp',\r\n    'Flaxifyglar',\r\n    'Foäzekov',\r\n    'Folsalino',\r\n    'Frixalissa',\r\n    'Fusafandra',\r\n    'Fuvusarooz',\r\n    'Gaflorinos',\r\n    'Galathanax',\r\n    'Galdviara',\r\n    'Galirrhyalen',\r\n    'Gambrimanthus',\r\n    'Ganthelios',\r\n    'Ganvarathimyr',\r\n    'Garlinian',\r\n    'Gauribanon',\r\n    'Gazaforen',\r\n    'Geluruëm',\r\n    'Gemaleon',\r\n    'Ghondaliom',\r\n    'Giavicel',\r\n    'Gikishika',\r\n    'Gorvonia',\r\n    'Halremsolath',\r\n    'Hanciara',\r\n    'Harfelengol',\r\n    'Hatuina',\r\n    'Hazrathsimoon',\r\n    'Hazrinivra',\r\n    'Herazibrax',\r\n    'Hiabezur',\r\n    'Hidolebni',\r\n    'Hipalonin',\r\n    'Hizzlechaltezeme',\r\n    'Hlantremiër',\r\n    'Hovancomi',\r\n    'Hurania',\r\n    'Hyfeäntio',\r\n    'Ibaletri',\r\n    'Idriella',\r\n    'Ierendi',\r\n    'Igadiax',\r\n    'Iglithebem',\r\n    'Ilanayom',\r\n    'Ilerida',\r\n    'Ilirsiya',\r\n    'Ilizio',\r\n    'Illemestri',\r\n    'Ilminaris',\r\n    'Impelia',\r\n    'Inikia',\r\n    'Intheänereon',\r\n    'Ionellza',\r\n    'Iongua',\r\n    'Iophroster',\r\n    'Iptameela',\r\n    'Irgasia',\r\n    'Iskarnia',\r\n    'Iuzator',\r\n    'Ixiosyne',\r\n    'Izmirodon',\r\n    'Jachoriax',\r\n    'Jakanuin',\r\n    'Jalanochlan',\r\n    'Jaleduin',\r\n    'Jandrebliash',\r\n    'Jaralectan',\r\n    'Jarchesmadis',\r\n    'Javethiel',\r\n    'Jelanjaztor',\r\n    'Jemalkhiri',\r\n    'Jemarixtesen',\r\n    'Jirchesmiod',\r\n    'Juaxmanar',\r\n    'Jurelisma',\r\n    'Kadarion',\r\n    'Kagilia',\r\n    'Kalenizin',\r\n    'Kalienlod',\r\n    'Kalpalanin',\r\n    'Kandathama',\r\n    'Kanthamio',\r\n    'Karania',\r\n    'Kardamordax',\r\n    'Karethezam',\r\n    'Karisempatur',\r\n    'Karriasal',\r\n    'Karthassily',\r\n    'Kastrevelda',\r\n    'Katanmaral',\r\n    'Kemeroxel',\r\n    'Keolotrest',\r\n    'Keremelar',\r\n    'Kerisiar',\r\n    'Khalatulajax',\r\n    'Khrysarlion',\r\n    'Kikianik',\r\n    'Kiralizur',\r\n    'Kishidega',\r\n    'Koquilgion',\r\n    'Kryslaria',\r\n    'Lalarian',\r\n    'Lamamelis',\r\n    'Lamdiraka',\r\n    'Lamirila',\r\n    'Lamotridac',\r\n    'Lantessorax',\r\n    'Larasajan',\r\n    'Laschiantria',\r\n    'Lauaxeta',\r\n    'Laziarlan',\r\n    'Lemesprie',\r\n    'Leoniax',\r\n    'Lepeduin',\r\n    'Lialasia',\r\n    'Liquilioss',\r\n    'Lirrissia',\r\n    'Locramaël',\r\n    'Ludurafet',\r\n    'Luithiole',\r\n    'Lyzalian',\r\n    'Lyzeoldir',\r\n    'Maheriel',\r\n    'Majezreäl',\r\n    'Malabderas',\r\n    'Malantiggar',\r\n    'Malasteon',\r\n    'Malevila',\r\n    'Malyremeth',\r\n    'Manariasc',\r\n    'Maranduax',\r\n    'Marassumar',\r\n    'Maresedin',\r\n    'Marillia',\r\n    'Marzaranax',\r\n    'Mathranislom',\r\n    'Maudrosnia',\r\n    'Mayulisas',\r\n    'Medricaeldo',\r\n    'Meliabrak',\r\n    'Meliadoul',\r\n    'Melidium',\r\n    'Meliofard',\r\n    'Melismondé',\r\n    'Melkandoro',\r\n    'Melozathel',\r\n    'Melusinnia',\r\n    'Mereniax',\r\n    'Meresinapt',\r\n    'Mermiculex',\r\n    'Metebelvis',\r\n    'Mianjira',\r\n    'Milinderra',\r\n    'Mirelassar',\r\n    'Mirianis',\r\n    'Mirtagarkarit',\r\n    'Moäthyalond',\r\n    'Momelsia',\r\n    'Morasina',\r\n    'Morciana',\r\n    'Moriliem',\r\n    'Morilioth',\r\n    'Muathazaglimid',\r\n    'Mylakhrion',\r\n    'Myrraxion',\r\n    'Myrristica',\r\n    'Naburios',\r\n    'Nanieroj',\r\n    'Narasia',\r\n    'Narjiona',\r\n    'Narragazkara',\r\n    'Narzelduin',\r\n    'Nemmaridus',\r\n    'Nempifermal',\r\n    'Nerovius',\r\n    'Nevalrimyr',\r\n    'Nevinlemnus',\r\n    'Nichoriam',\r\n    'Nimrathelet',\r\n    'Nissebaral',\r\n    'Niziliom',\r\n    'Nohbirrian',\r\n    'Octramadus',\r\n    'Ohirial',\r\n    'Okarbia',\r\n    'Okpralio',\r\n    'Olemerrin',\r\n    'Oloscendivarn',\r\n    'Onnurian',\r\n    'Opacalia',\r\n    'Orathiris',\r\n    'Orbicritis',\r\n    'Orialex',\r\n    'Oriastus',\r\n    'Orissanat',\r\n    'Ormallivir',\r\n    'Ormeria',\r\n    'Orrizia',\r\n    'Orroptio',\r\n    'Orthaxifer',\r\n    'Orviliach',\r\n    'Otolvian',\r\n    'Pactinasa',\r\n    'Palzyriax',\r\n    'Panaxcrador',\r\n    'Panthioleed',\r\n    'Paolalian',\r\n    'Pelemurto',\r\n    'Pelluxia',\r\n    'Pemelojurg',\r\n    'Pemulinaan',\r\n    'Perjauruan',\r\n    'Phayzelobion',\r\n    'Phomechelian',\r\n    'Phorissital',\r\n    'Piartamisk',\r\n    'Pirouëtta',\r\n    'Pluzemelar',\r\n    'Pomivarnoën',\r\n    'Pyrvinrian',\r\n    'Quanamelis',\r\n    'Quarlusian',\r\n    'Quelidia',\r\n    'Quelizantor',\r\n    'Querrulian',\r\n    'Quetradendith',\r\n    'Rajanthesina',\r\n    'Rakanamet',\r\n    'Ramantasset',\r\n    'Ranasceleb',\r\n    'Rasanathan',\r\n    'Rathelemen',\r\n    'Ravannifer',\r\n    'Reondoresin',\r\n    'Rhazazarak',\r\n    'Rhiadirask',\r\n    'Roxifalcor',\r\n    'Rozalroäth',\r\n    'Ruälia',\r\n    'Rudliptalin',\r\n    'Rufomella',\r\n    'Rulinian',\r\n    'Runevara',\r\n    'Ruzultrejest',\r\n    'Rylissilin',\r\n    'Saboorakel',\r\n    'Sadonakai',\r\n    'Saegdondakhar',\r\n    'Salletifian',\r\n    'Sandurion',\r\n    'Sanoreya',\r\n    'Sapelintir',\r\n    'Sarantimar',\r\n    'Sarathia',\r\n    'Sarpemetheän',\r\n    'Sarrabhluil',\r\n    'Sartenia',\r\n    'Saterbia',\r\n    'Scarliherin',\r\n    'Scoramanté',\r\n    'Semnegarius',\r\n    'Serejarand',\r\n    'Seremnaria',\r\n    'Seriastis',\r\n    'Serilia',\r\n    'Seriona',\r\n    'Shadarabar',\r\n    'Sharadjelamir',\r\n    'Sharajamar',\r\n    'Shelarinisse',\r\n    'Shelmorian',\r\n    'Sireelia',\r\n    'Sirezvia',\r\n    'Siriena',\r\n    'Sirulia',\r\n    'Sorolonex',\r\n    'Soromyrium',\r\n    'Sorosilmar',\r\n    'Sphallurian',\r\n    'Sreltaneema',\r\n    'Sulparia',\r\n    'Suularaba',\r\n    'Sylixia',\r\n    'Tallosia',\r\n    'Tamarien',\r\n    'Tapromethyna',\r\n    'Tarachien',\r\n    'Taralian',\r\n    'Tarsmiria',\r\n    'Tasambekeer',\r\n    'Tayenias',\r\n    'Telaswiral',\r\n    'Telaznemor',\r\n    'Temilion',\r\n    'Teniliak',\r\n    'Tercyrian',\r\n    'Thetalia',\r\n    'Thorosiaz',\r\n    'Tiaskelu',\r\n    'Tifalius',\r\n    'Tinzlactiash',\r\n    'Tiriala',\r\n    'Tirunriyek',\r\n    'Tivamtemar',\r\n    'Toraxoran',\r\n    'Torellian',\r\n    'Tormosian',\r\n    'Trystaria',\r\n    'Tsaliveren',\r\n    'Tsardatsira',\r\n    'Tuivoreth',\r\n    'Ugalius',\r\n    'Uguesilar',\r\n    'Uirugan',\r\n    'Ulakrugir',\r\n    'Ulkarien',\r\n    'Ullibunda',\r\n    'Ultharnarath',\r\n    'Umasdalen',\r\n    'Umicia',\r\n    'Unaramand',\r\n    'Unlasnulkai',\r\n    'Unorrehod',\r\n    'Unuvia',\r\n    'Upalumo',\r\n    'Uraösin',\r\n    'Uttosembuluz',\r\n    'Uxulinak',\r\n    'Valarindio',\r\n    'Valarion',\r\n    'Valaronai',\r\n    'Valeauviej',\r\n    'Varcassian',\r\n    'Veladamar',\r\n    'Velorian',\r\n    'Venzafurome',\r\n    'Vercerenos',\r\n    'Veridia',\r\n    'Vialora',\r\n    'Vilcarien',\r\n    'Vimbrodelthion',\r\n    'Vincarian',\r\n    'Virunia',\r\n    'Vistramisorn',\r\n    'Vreniriab',\r\n    'Vruthalidrom',\r\n    'Vyjeremanx',\r\n    'Vyrania',\r\n    'Werzamerand',\r\n    'Wiernamal',\r\n    'Wrosceltiar',\r\n    'Wyjezinelb',\r\n    'Xacuahatl',\r\n    'Xaeximinar',\r\n    'Xalaibisad',\r\n    'Xalisuri',\r\n    'Xaralien',\r\n    'Xaralyna',\r\n    'Xarilia',\r\n    'Xasseldasene',\r\n    'Xavanimar',\r\n    'Xemelenos',\r\n    'Xilvemzarad',\r\n    'Xiomriest',\r\n    'Xorlanterond',\r\n    'Xorosia',\r\n    'Yamidala',\r\n    'Yamovelhas',\r\n    'Yannavalka',\r\n    'Yarbithresin',\r\n    'Yarmidrian',\r\n    'Yavilana',\r\n    'Yazarrahaj',\r\n    'Yetlioro',\r\n    'Yormanien',\r\n    'Yssarion',\r\n    'Yzaniva',\r\n    'Zabarianx',\r\n    'Zaharsian',\r\n    'Zalrevliaf',\r\n    'Zanzarathool',\r\n    'Zatakruan',\r\n    'Zaulizanir',\r\n    'Zavalliar',\r\n    'Zavalniax',\r\n    'Zekundaloth',\r\n    'Zekundemar',\r\n    'Zelissinfra',\r\n    'Zelobindio',\r\n    'Ziandela',\r\n    'Zicarecem',\r\n    'Zimenaechu',\r\n    'Zofelliara',\r\n    'Zoramatoth',\r\n    'Zulaaria',\r\n    'Zuralion',\r\n    'Zuruxeno',\r\n    'Zuzusilmar',\r\n    'Zwimolio',\r\n    'Zwyäclemon',\r\n    'Zyrissalantisar',\r\n  ],\r\n];\r\n\r\nexport const NAME_GENERATOR = {\r\n  getFantasyName: function () {\r\n    var d20 = Math.floor(Math.random() * 20) + 1,\r\n      name = '',\r\n      rngFirstName,\r\n      rngSecondName;\r\n\r\n    if (d20 < 3) {\r\n      // 10%\r\n      name = names[0][Math.floor(Math.random() * names[0].length)];\r\n    } else if (d20 < 12) {\r\n      // 45%\r\n      name = names[1][Math.floor(Math.random() * names[1].length)];\r\n    } else if (d20 < 17) {\r\n      // 25%\r\n      name = names[2][Math.floor(Math.random() * names[2].length)];\r\n    } else if (d20 === 17) {\r\n      // 5%\r\n      name = names[3][Math.floor(Math.random() * names[3].length)];\r\n    } else if (d20 === 18) {\r\n      // 5%\r\n      name =\r\n        names[0][Math.floor(Math.random() * names[0].length)] +\r\n        ' ' +\r\n        names[1][Math.floor(Math.random() * names[1].length)];\r\n    } else if (d20 === 19) {\r\n      // 5%\r\n      name =\r\n        names[1][Math.floor(Math.random() * names[1].length)] +\r\n        ' ' +\r\n        names[0][Math.floor(Math.random() * names[0].length)];\r\n    } else {\r\n      // 5%\r\n      rngFirstName = names[Math.floor(Math.random() * names.length)];\r\n      rngSecondName = names[Math.floor(Math.random() * names.length)];\r\n\r\n      name =\r\n        rngFirstName[Math.floor(Math.random() * rngFirstName.length)] +\r\n        ' ' +\r\n        rngSecondName[Math.floor(Math.random() * rngSecondName.length)];\r\n    }\r\n\r\n    return name;\r\n  },\r\n};\r\n","var patterns = [\r\n    '<adjective> <noun>',\r\n    '<adjective> <noun> <title>',\r\n    'The <adjective> <noun>',\r\n    'The <adjective> <noun> <title>',\r\n    '<noun> & <noun>',\r\n    '<noun> & <noun> <title>',\r\n    '<adjective> <title>',\r\n    'The <adjective> <title>',\r\n  ],\r\n  defaultValues = {\r\n    nouns: [\r\n      'dog',\r\n      'wolf',\r\n      'fox',\r\n      'cat',\r\n      'lion',\r\n      'tiger',\r\n      'kitten',\r\n      'ox',\r\n      'cow',\r\n      'sow',\r\n      'bull',\r\n      'calf',\r\n      'horse',\r\n      'stallion',\r\n      'mare',\r\n      'foal',\r\n      'owl',\r\n      'eagle',\r\n      'falcon',\r\n      'hawk',\r\n      'raven',\r\n      'crow',\r\n      'gull',\r\n      'fish',\r\n      'whale',\r\n      'shark',\r\n      'octopus',\r\n      'squid',\r\n      'goat',\r\n      'sheep',\r\n      'ewe',\r\n      'fly',\r\n      'butterfly',\r\n      'dragonfly',\r\n      'beetle',\r\n      'ant',\r\n      'wasp',\r\n      'termite',\r\n      'louse',\r\n      'worm',\r\n      'lizard',\r\n      'frog',\r\n      'toad',\r\n      'snake',\r\n      'chameleon',\r\n      'unicorn',\r\n      'gryphon',\r\n      'dragon',\r\n      'wyvern',\r\n      'roc',\r\n      'clam',\r\n      'oyster',\r\n      'starfish',\r\n      'slug',\r\n      'snail',\r\n      'mouse',\r\n      'rat',\r\n      'beaver',\r\n      'marten',\r\n      'mink',\r\n      'otter',\r\n      'seal',\r\n      'manatee',\r\n      'chipmunk',\r\n      'squirrel',\r\n      'gopher',\r\n      'tower',\r\n      'castle',\r\n      'dagger',\r\n      'sword',\r\n      'bow',\r\n      'arrow',\r\n      'hat',\r\n      'boot',\r\n      'trophy',\r\n      'goose',\r\n      'duck',\r\n      'boat',\r\n      'ship',\r\n      'river',\r\n      'falls',\r\n      'forest',\r\n      'mountain',\r\n      'vampire',\r\n      'skeleton',\r\n      'witch',\r\n      'wench',\r\n      'lady',\r\n      'lord',\r\n      'knight',\r\n      'drunk',\r\n      'shield',\r\n      'wand',\r\n      'helm',\r\n      'flask',\r\n      'flagon',\r\n      'pint',\r\n      'shot',\r\n    ],\r\n    adjectives: [\r\n      'red',\r\n      'orange',\r\n      'yellow',\r\n      'green',\r\n      'blue',\r\n      'purple',\r\n      'sanguine',\r\n      'sepia',\r\n      'ochre',\r\n      'puce',\r\n      'navy',\r\n      'maroon',\r\n      'pink',\r\n      'peach',\r\n      'cyan',\r\n      'violet',\r\n      'brown',\r\n      'black',\r\n      'gray',\r\n      'white',\r\n      'silver',\r\n      'gold',\r\n      'jumping',\r\n      'sleeping',\r\n      'running',\r\n      'rolling',\r\n      'laughing',\r\n      'singing',\r\n      'flying',\r\n      'burning',\r\n      'swimming',\r\n      'crying',\r\n      'roaring',\r\n      'screaming',\r\n      'silent',\r\n      'petrified',\r\n      'hiding',\r\n      'hidden',\r\n      'lost',\r\n      'forgotten',\r\n      'shiny',\r\n      'drowning',\r\n      'giant',\r\n      'tiny',\r\n      'fat',\r\n      'skinny',\r\n      'humorous',\r\n      'lonely',\r\n      'drunken',\r\n      'slimy',\r\n      'undead',\r\n      'dark',\r\n      'bright',\r\n      'magical',\r\n      'enchanted',\r\n      'poor',\r\n      'wealthy',\r\n      'lucky',\r\n      'unfortunate',\r\n      'angry',\r\n      'happy',\r\n      'sad',\r\n      'thieving',\r\n      'desperate',\r\n      'divine',\r\n      'arcane',\r\n      'profane',\r\n      'discreet',\r\n      'buried',\r\n      'false',\r\n      'foolish',\r\n      'flatulent',\r\n      'hypnotic',\r\n      'haunted',\r\n      'special',\r\n      'fun',\r\n      'drab',\r\n      'daring',\r\n      'stubborn',\r\n      'sober',\r\n      'talking',\r\n      'naked',\r\n      'suffering',\r\n      'cheap',\r\n      'smelly',\r\n      'easy',\r\n      'heroic',\r\n      'hovering',\r\n      'married',\r\n      'pious',\r\n      'pompous',\r\n      'illegal',\r\n      'sacred',\r\n      'defiled',\r\n      'spoilt',\r\n      'wooden',\r\n      'bloody',\r\n      'yawning',\r\n      'sleepy',\r\n      'hungry',\r\n    ],\r\n    titles: [\r\n      'bar',\r\n      'brew house',\r\n      'beer house',\r\n      'mead house',\r\n      'ale house',\r\n      'speakeasy',\r\n      'pub',\r\n      'lounge',\r\n      'brewery',\r\n      'loft',\r\n      'club house',\r\n      'inn',\r\n      'tavern',\r\n      'den',\r\n      'lodge',\r\n    ],\r\n  },\r\n  nouns = defaultValues.nouns,\r\n  adjectives = defaultValues.adjectives,\r\n  titles = defaultValues.titles;\r\n\r\nfunction getNouns() {\r\n  return nouns;\r\n}\r\nfunction getAdjectives() {\r\n  return adjectives;\r\n}\r\n\r\nfunction getTitles() {\r\n  return titles;\r\n}\r\nfunction setNouns(n) {\r\n  nouns = n;\r\n}\r\nfunction setAdjectives(a) {\r\n  adjectives = a;\r\n}\r\nfunction setTitles(t) {\r\n  titles = t;\r\n}\r\nfunction setDefaultValues() {\r\n  nouns = defaultValues.nouns;\r\n  adjectives = defaultValues.adjectives;\r\n  titles = defaultValues.titles;\r\n}\r\n\r\nexport const TAVERN_GENERATOR = {\r\n  getTavernName: function (startWith = '', endWith = '', contains = '', doesntContains = '') {\r\n    var options = {\r\n        noun: nouns.slice(),\r\n        adjective: adjectives.slice(),\r\n        title: titles.slice(),\r\n      },\r\n      name = '',\r\n      i = 0,\r\n      tryReplacement = function (match) {\r\n        var result;\r\n\r\n        match = match.replace(/<|>/g, '');\r\n        result = options[match][Math.floor(Math.random() * options[match].length)];\r\n\r\n        if (result.length === 0) {\r\n          return 'ERROR_PATTERN';\r\n        }\r\n\r\n        while (result.charAt(0) === ' ') {\r\n          result = result.substr(1);\r\n        }\r\n        while (result.charAt(result.length) === ' ') {\r\n          result = result.slice(0, -1);\r\n        }\r\n\r\n        return result.capitalize();\r\n      };\r\n\r\n    // Try to get result for random patterns, stop after 100 attempts.\r\n    while (name.length === 0 && i < 500) {\r\n      i += 1;\r\n      name = patterns[Math.floor(Math.random() * patterns.length)];\r\n      name = name.replace(/<([\\w\\W]*?)>/g, tryReplacement);\r\n\r\n      if (\r\n        name.indexOf('ERROR_PATTERN') > -1 ||\r\n        name.toLocaleLowerCase().substr(0, startWith.length) !== startWith.toLocaleLowerCase() ||\r\n        name.toLocaleLowerCase().substr(name.length - endWith.length) !== endWith.toLocaleLowerCase() ||\r\n        (typeof contains !== 'undefined' && name.toLocaleLowerCase().indexOf(contains.toLocaleLowerCase()) === -1) ||\r\n        (typeof doesntContains !== 'undefined' &&\r\n          doesntContains.length > 0 &&\r\n          name.toLocaleLowerCase().indexOf(doesntContains.toLocaleLowerCase()) > -1)\r\n      ) {\r\n        name = '';\r\n      }\r\n    }\r\n\r\n    return name;\r\n  },\r\n};\r\n","export async function applyDDTint(placeable, color) {\r\n  placeable = placeable.object ?? placeable;\r\n  color = _string2hex(color);\r\n  if (isNaN(color)) {\r\n    await TokenMagic.deleteFilters(placeable, 'DDTint');\r\n  } else {\r\n    await TokenMagic.addUpdateFilters(placeable, [\r\n      {\r\n        filterType: 'ddTint',\r\n        filterId: 'DDTint',\r\n        tint: PIXI.utils.hex2rgb(color),\r\n      },\r\n    ]);\r\n  }\r\n}\r\n\r\nexport function getDDTint(placeable) {\r\n  let color = 0xff0000;\r\n  let obj = placeable.object ?? placeable;\r\n  if (obj._TMFXgetSprite) {\r\n    const filter = obj._TMFXgetSprite()?.filters?.find((f) => f.filterId === 'DDTint');\r\n    if (filter) color = PIXI.utils.rgb2hex(filter.uniforms.tint);\r\n  }\r\n  return _hex2string(color);\r\n}\r\n\r\nexport async function applyTMFXPreset(placeable, presetName, remove = false) {\r\n  placeable = placeable.object ?? placeable;\r\n  if (!(placeable instanceof PlaceableObject)) return;\r\n  if (presetName === 'DELETE ALL') {\r\n    await TokenMagic.deleteFilters(placeable);\r\n  } else if (remove) {\r\n    await TokenMagic.deleteFilters(placeable, presetName);\r\n  } else {\r\n    const preset = TokenMagic.getPreset(presetName);\r\n    if (preset) await TokenMagic.addUpdateFilters(placeable, foundry.utils.deepClone(preset));\r\n  }\r\n}\r\n\r\nfunction _hex2string(color) {\r\n  if (PIXI.Color) {\r\n    return new PIXI.Color(color).toHex();\r\n  } else {\r\n    return PIXI.utils.hex2string(color);\r\n  }\r\n}\r\n\r\nfunction _string2hex(color) {\r\n  if (PIXI.Color) {\r\n    return new PIXI.Color(color).toNumber();\r\n  } else {\r\n    return PIXI.utils.string2hex(color);\r\n  }\r\n}\r\n","import { MODULE_ID } from '../scripts/utils.js';\r\n\r\nexport function getInUseStyle() {\r\n  const styleInUse = game.settings.get(MODULE_ID, 'cssStyle');\r\n  if (styleInUse in STYLES) {\r\n    return [styleInUse, STYLES[styleInUse]];\r\n  } else {\r\n    return ['CUSTOM', game.settings.get(MODULE_ID, 'cssCustom') || ''];\r\n  }\r\n}\r\n\r\nexport default class CSSEdit extends FormApplication {\r\n  constructor() {\r\n    super({}, {});\r\n  }\r\n\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      id: 'mass-edit-css',\r\n      classes: ['sheet'],\r\n      template: `modules/${MODULE_ID}/templates/cssEdit.html`,\r\n      resizable: true,\r\n      minimizable: false,\r\n      title: 'Edit CSS',\r\n      width: 490,\r\n      height: 730,\r\n    });\r\n  }\r\n\r\n  async getData(options) {\r\n    const data = super.getData(options);\r\n\r\n    const [styleInUse, css] = getInUseStyle();\r\n    data.styleInUse = styleInUse;\r\n    data.css = css;\r\n\r\n    data.styles = Object.keys(STYLES);\r\n    data.styles.push('CUSTOM');\r\n    data.disableCSS = styleInUse !== 'CUSTOM';\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @param {JQuery} html\r\n   */\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n    $(html).on('change', '.selectStyle', (event) => {\r\n      let css;\r\n      if (event.target.value === 'CUSTOM') {\r\n        css = game.settings.get(MODULE_ID, 'cssCustom');\r\n      } else {\r\n        css = STYLES[event.target.value];\r\n      }\r\n      $(html)\r\n        .find('.cssTextArea')\r\n        .val(css)\r\n        .prop('disabled', event.target.value !== 'CUSTOM');\r\n      $(html).find('.previewStyle').html(css);\r\n    });\r\n    $(html).on('input', '.cssTextArea', (event) => {\r\n      $(html).find('.previewStyle').html(event.target.value);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event\r\n   * @param {Object} formData\r\n   */\r\n  async _updateObject(event, formData) {\r\n    if (formData.selectedStyle === 'CUSTOM') {\r\n      game.settings.set(MODULE_ID, 'cssCustom', formData.css);\r\n    }\r\n    game.settings.set(MODULE_ID, 'cssStyle', formData.selectedStyle);\r\n  }\r\n}\r\n\r\n// Pre-made styles\r\nexport const STYLES = {\r\n  Default: `.form-group.meCommon {\r\n  outline: green dotted 2px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.mass-edit-checkbox.meCommon {\r\n  outline: green solid 2px;\r\n}\r\n\r\n.form-group.meDiff {\r\n  outline: rgb(255, 204, 110) dotted 2px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.mass-edit-checkbox.meDiff {\r\n  outline: rgb(255, 204, 110) solid 2px;\r\n}\r\n\r\n.form-group.meFlag {\r\n  outline: rgb(246, 175, 255) dotted 2px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.mass-edit-checkbox.meFlag {\r\n  outline: rgb(246, 175, 255) solid 2px;\r\n}\r\n\r\n.form-group.meInsert {\r\n  outline: rgb(118, 242, 255) dotted 2px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.mass-edit-checkbox.meInsert {\r\n  outline: rgb(118, 242, 255) solid 2px;\r\n}\r\n`,\r\n  // ==================\r\n  // No Outline\r\n  // ==================\r\n  'No Outline': `.form-group.meCommon {}\r\n\r\n.mass-edit-checkbox.meCommon {\r\n  outline: green solid 2px;\r\n}\r\n\r\n.form-group.meDiff {}\r\n\r\n.mass-edit-checkbox.meDiff {\r\n  outline: rgb(255, 204, 110) solid 2px;\r\n}\r\n\r\n.form-group.meFlag {}\r\n\r\n.mass-edit-checkbox.meFlag {\r\n  outline: rgb(246, 175, 255) solid 2px;\r\n}\r\n\r\n.form-group.meInsert {}\r\n\r\n.mass-edit-checkbox.meInsert {\r\n  outline: rgb(118, 242, 255) solid 2px;\r\n}\r\n`,\r\n  // ==================\r\n  // Striped Background\r\n  // ==================\r\n  'Striped Background': `.form-group.meCommon {\r\n  background: repeating-linear-gradient(\r\n  45deg,\r\n  rgba(155, 233, 155, 0.8),\r\n  rgba(155, 233, 155, 0.8) 10px,\r\n  rgba(0, 0, 0, 0) 10px,\r\n  rgba(0, 0, 0, 0) 20px\r\n  );\r\n}\r\n\r\n.mass-edit-checkbox.meCommon {\r\n  outline: green solid 2px;\r\n}\r\n\r\n.form-group.meDiff {\r\n  background: repeating-linear-gradient(\r\n  135deg,\r\n  rgba(255, 207, 118, 0.5),\r\n  rgba(255, 207, 118, 0.5) 10px,\r\n  rgba(0, 0, 0, 0) 10px,\r\n  rgba(0, 0, 0, 0) 20px\r\n  );\r\n}\r\n\r\n.mass-edit-checkbox.meDiff {\r\n  outline: rgb(255, 204, 110) solid 2px;\r\n}\r\n\r\n.form-group.meFlag {\r\n  background: repeating-linear-gradient(\r\n  70deg,\r\n  rgba(237, 149, 255, 0.3),\r\n  rgba(237, 149, 255, 0.3) 10px,\r\n  rgba(0, 0, 0, 0) 10px,\r\n  rgba(0, 0, 0, 0) 20px\r\n  );\r\n}\r\n\r\n.mass-edit-checkbox.meFlag {\r\n  outline: rgb(246, 175, 255) solid 2px;\r\n}\r\n\r\n.form-group.meInsert {\r\n  background: repeating-linear-gradient(\r\n  70deg,\r\n  rgba(118, 242, 255, 0.5),\r\n  rgba(118, 242, 255, 0.5) 10px,\r\n  rgba(0, 0, 0, 0) 10px,\r\n  rgba(0, 0, 0, 0) 20px\r\n  );\r\n}\r\n\r\n.mass-edit-checkbox.meInsert {\r\n  outline: rgb(246, 175, 255) solid 2px;\r\n}\r\n`,\r\n  // ==================\r\n  // Solid Background\r\n  // ==================\r\n  'Solid Background': `.form-group.meCommon {\r\n  background: rgba(155, 233, 155, 0.8)\r\n}\r\n\r\n.mass-edit-checkbox.meCommon {\r\noutline: green solid 2px;\r\n}\r\n\r\n.form-group.meDiff {\r\n  background: rgba(255, 207, 118, 0.5)\r\n}\r\n\r\n.mass-edit-checkbox.meDiff {\r\n  outline: rgb(255, 204, 110) solid 2px;\r\n}\r\n\r\n.form-group.meFlag {\r\n  background: rgba(237, 149, 255, 0.3)\r\n}\r\n\r\n.mass-edit-checkbox.meFlag {\r\n  outline: rgb(246, 175, 255) solid 2px;\r\n}\r\n\r\n.form-group.meInsert {\r\n  background: rgba(118, 242, 255, 0.5)\r\n}\r\n\r\n.mass-edit-checkbox.meInsert {\r\n  outline: rgb(118, 242, 255) solid 2px;\r\n}`,\r\n};\r\n","import { HISTORY } from '../multi-token-edit.mjs';\r\nimport { Preset } from '../scripts/presets/preset.js';\r\nimport { MODULE_ID, localize } from '../scripts/utils.js';\r\nimport { GeneralDataAdapter } from './dataAdapters.js';\r\nimport { copyToClipboard } from './forms.js';\r\nimport { LAYER_MAPPINGS } from './multiConfig.js';\r\n\r\nexport default class MassEditHistory extends FormApplication {\r\n  constructor(docName, callback) {\r\n    super({}, {});\r\n    this.callback = callback;\r\n    this.docName = docName;\r\n    this.history = foundry.utils.deepClone(HISTORY);\r\n  }\r\n\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      id: 'mass-edit-history',\r\n      classes: ['sheet'],\r\n      template: `modules/${MODULE_ID}/templates/history.html`,\r\n      resizable: false,\r\n      minimizable: false,\r\n      title: `History`,\r\n      width: 400,\r\n      height: 'auto',\r\n    });\r\n  }\r\n\r\n  get title() {\r\n    return `[${this.docName}] ${localize('common.history')}`;\r\n  }\r\n\r\n  async getData(options) {\r\n    const data = super.getData(options);\r\n\r\n    const historyItems = (this.history[this.docName] ?? []).reverse();\r\n    data.updates = [];\r\n\r\n    let formHasDiff = false;\r\n\r\n    const getTitle = function (fields, rdm, addSubtract) {\r\n      let title = '';\r\n      for (const k of Object.keys(fields)) {\r\n        if (['_id', 'mass-edit-randomize', 'mass-edit-addSubtract'].includes(k)) continue;\r\n\r\n        if (k in rdm) {\r\n          title += `${k}: {{randomized}}\\n`;\r\n        } else if (k in addSubtract) {\r\n          const val = 'value' in addSubtract[k] ? addSubtract[k].value : fields[k];\r\n          title += `${k}: ${addSubtract[k].method === 'add' ? '+' : '-'}${val}\\n`;\r\n        } else {\r\n          title += `${k}: ${fields[k]}\\n`;\r\n        }\r\n      }\r\n      return title;\r\n    };\r\n\r\n    for (const item of historyItems) {\r\n      const rdm = item.ctrl['mass-edit-randomize'] || {};\r\n      const addSubtract = item.ctrl['mass-edit-addSubtract'] || {};\r\n\r\n      const fullTitle = getTitle(foundry.utils.deepClone(item.update), rdm, addSubtract);\r\n      const title = getTitle(foundry.utils.deepClone(item.diff), rdm, addSubtract);\r\n\r\n      const hasDifferences = fullTitle !== title;\r\n      if (hasDifferences) formHasDiff = true;\r\n\r\n      data.updates.push({\r\n        label: item['timestamp'],\r\n        title: title,\r\n        fullTitle: fullTitle,\r\n        id: item._id,\r\n        hasDifferences: hasDifferences,\r\n      });\r\n    }\r\n\r\n    data.includeDiff = formHasDiff;\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @param {JQuery} html\r\n   */\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n    html.on('click', '.doc-id', (event) => {\r\n      const id = $(event.target).closest('div').find('button')[0].dataset.id;\r\n      const layer = LAYER_MAPPINGS[this.docName];\r\n      if (layer) {\r\n        let placeable = canvas[layer].placeables.find((p) => p.id === id) || null;\r\n        if (placeable) {\r\n          canvas.animatePan({ x: placeable.center.x, y: placeable.center.y, duration: 250 });\r\n        }\r\n      }\r\n    });\r\n\r\n    const copy = function (event, type, history, docName) {\r\n      const index = $(event.target).closest('li')[0].dataset.index;\r\n      const docHistory = history[docName] ?? [];\r\n      const historyItem = docHistory[index];\r\n      if (historyItem) {\r\n        const preset = new Preset({\r\n          documentName: docName,\r\n          data: foundry.utils.deepClone(historyItem[type]),\r\n          randomize: historyItem.ctrl['mass-edit-randomize'],\r\n          addSubtract: historyItem.ctrl['mass-edit-addSubtract'],\r\n        });\r\n        copyToClipboard(preset);\r\n      }\r\n    };\r\n\r\n    html.on('click', '.doc-copy-update', (event) => {\r\n      copy(event, 'update', this.history, this.docName);\r\n    });\r\n\r\n    html.on('click', '.doc-copy-diff', (event) => {\r\n      copy(event, 'diff', this.history, this.docName);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event\r\n   * @param {Object} formData\r\n   */\r\n  async _updateObject(event, formData) {\r\n    const index = $(event.submitter).closest('li')[0].dataset.index;\r\n    const docHistory = this.history[this.docName] ?? [];\r\n    const historyItem = docHistory[index];\r\n    if (historyItem) {\r\n      const update = foundry.utils.deepClone(historyItem[event.submitter.name]);\r\n      GeneralDataAdapter.updateToForm(this.docName, update);\r\n\r\n      const preset = new Preset({\r\n        documentName: this.docName,\r\n        data: update,\r\n        randomize: historyItem.ctrl['mass-edit-randomize'],\r\n        addSubtract: historyItem.ctrl['mass-edit-addSubtract'],\r\n      });\r\n\r\n      this.callback(preset);\r\n    }\r\n  }\r\n}\r\n","import { generateMacro, hasSpecialField } from '../scripts/macro/generator.js';\r\nimport { MODULE_ID, SUPPORTED_COLLECTIONS, SUPPORTED_PLACEABLES, localFormat, localize } from '../scripts/utils.js';\r\nimport { GeneralDataAdapter } from './dataAdapters.js';\r\n\r\nexport default class MacroForm extends FormApplication {\r\n  constructor(object, placeables, docName, fields, randomizeFields, addSubtractFields) {\r\n    super({}, {});\r\n    this.mainObject = object;\r\n    this.placeables = placeables;\r\n    this.docName = docName;\r\n    this.fields = fields;\r\n    this.randomizeFields = randomizeFields;\r\n    this.addSubtractFields = addSubtractFields;\r\n\r\n    if (\r\n      (randomizeFields && !foundry.utils.isEmpty(randomizeFields)) ||\r\n      (addSubtractFields && !foundry.utils.isEmpty(addSubtractFields))\r\n    ) {\r\n      // keep selected fields in form format\r\n    } else {\r\n      GeneralDataAdapter.formToData(this.docName, this.mainObject, this.fields);\r\n    }\r\n  }\r\n\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      id: 'mass-edit-macro',\r\n      classes: ['sheet'],\r\n      template: `modules/${MODULE_ID}/templates/macro.html`,\r\n      resizable: true,\r\n      minimizable: false,\r\n      title: `Generate Macro`,\r\n      width: 400,\r\n      height: 'auto',\r\n    });\r\n  }\r\n\r\n  async getData(options) {\r\n    const data = super.getData(options);\r\n\r\n    data.docName = this.docName;\r\n    data.fields = JSON.stringify(this.fields, null, 2);\r\n    data.selectable = SUPPORTED_PLACEABLES.includes(this.docName);\r\n    data.selectScopeEnabled =\r\n      data.selectable ||\r\n      (SUPPORTED_COLLECTIONS.includes(this.docName) && game.modules.get('multiple-document-selection')?.active);\r\n\r\n    // Define targeting options based on the document being updated\r\n    const targetingOptions = [\r\n      {\r\n        value: 'all',\r\n        title: localFormat('macro.target-all-title', { document: this.docName }),\r\n        label: localize('common.all'),\r\n      },\r\n      {\r\n        value: 'ids',\r\n        title: localize('macro.target-ids-title'),\r\n        label: localize('macro.target-ids'),\r\n      },\r\n      {\r\n        value: 'search',\r\n        title: localFormat('macro.target-search-title', { document: this.docName }),\r\n        label: localize('FILES.Search', false),\r\n      },\r\n    ];\r\n    if (SUPPORTED_PLACEABLES.includes(this.docName) && game.modules.get('tagger')?.active) {\r\n      targetingOptions.push({\r\n        value: 'tagger',\r\n        title: localize('macro.target-tagger-title'),\r\n        label: 'Tagger',\r\n      });\r\n    }\r\n    data.targetingOptions = targetingOptions;\r\n\r\n    if (this.addSubtractFields && !foundry.utils.isEmpty(this.addSubtractFields)) {\r\n      data.hasAddSubtract = true;\r\n      data.addSubtract = JSON.stringify(this.addSubtractFields);\r\n    }\r\n\r\n    if (this.randomizeFields && !foundry.utils.isEmpty(this.randomizeFields)) {\r\n      data.hasRandom = true;\r\n      data.randomize = JSON.stringify(this.randomizeFields);\r\n    }\r\n\r\n    data.hasMEControls = data.hasAddSubtract || data.hasRandom || hasSpecialField(this.fields);\r\n\r\n    // Visibility Toggle\r\n    data.hiddenControl = ['Token', 'Tile', 'Drawing', 'AmbientLight', 'AmbientSound', 'MeasuredTemplate'].includes(\r\n      this.docName\r\n    );\r\n\r\n    // Macros\r\n    data.macros = game.collections.get('Macro').map((m) => m.name);\r\n\r\n    return data;\r\n  }\r\n\r\n  _onShowReturnJson(control, name) {\r\n    const store = control.siblings(`[name=\"${name}\"]`);\r\n    const data = JSON.parse(store.val());\r\n\r\n    let content = `<textarea name=\"json\" style=\"width:100%; height: 300px;\">${JSON.stringify(\r\n      data,\r\n      null,\r\n      2\r\n    )}</textarea>`;\r\n    new Dialog({\r\n      title: `JSON`,\r\n      content: content,\r\n      buttons: {\r\n        Ok: {\r\n          label: localize('Save', false),\r\n          callback: (html) => {\r\n            try {\r\n              const val = JSON.parse(html.find('[name=\"json\"]').val() || '{}');\r\n              if (foundry.utils.isEmpty(val)) {\r\n                control.hide();\r\n                store.prop('disabled', true);\r\n                this.setPosition({ height: 'auto' });\r\n              } else {\r\n                store.val(JSON.stringify(val));\r\n              }\r\n            } catch (e) {\r\n              ui.notifications.warn('Invalid data. Failed to save.');\r\n            }\r\n          },\r\n        },\r\n      },\r\n    }).render(true);\r\n  }\r\n\r\n  _onRemoveJson(control, name) {\r\n    const store = control.siblings(`[name=\"${name}\"]`);\r\n    control.hide();\r\n    store.prop('disabled', true);\r\n    this.setPosition({ height: 'auto' });\r\n  }\r\n\r\n  /**\r\n   * @param {JQuery} html\r\n   */\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n\r\n    ['randomize', 'addSubtract', 'toggle.randomize', 'toggle.addSubtract'].forEach((name) => {\r\n      const className = name.replace('.', '');\r\n      html.find(`.${className}`).click((event) => {\r\n        this._onShowReturnJson($(event.target).parent(), name);\r\n      });\r\n      html.find(`.${className}`).contextmenu((event) => {\r\n        this._onRemoveJson($(event.target).parent(), name);\r\n      });\r\n    });\r\n\r\n    html.find('.toggleVisibility').click((event) => {\r\n      const fields = html.find('[name=\"fields\"]');\r\n      const toggleFields = html.find('[name=\"toggle.fields\"]');\r\n\r\n      let update,\r\n        update2 = {};\r\n\r\n      try {\r\n        update = JSON.parse(fields.val());\r\n        update.hidden = !update.hidden;\r\n        fields.val(JSON.stringify(update, null, 2));\r\n\r\n        update2 = JSON.parse(toggleFields.val());\r\n        update2.hidden = !update.hidden;\r\n        toggleFields.val(JSON.stringify(update2, null, 2));\r\n      } catch (e) {}\r\n    });\r\n\r\n    html.find('[name=\"target.method\"]').change((event) => {\r\n      // Hide/show tagger controls\r\n      if (event.target.value === 'tagger') {\r\n        html.find('.taggerControl').show();\r\n        html.find('[name=\"tags\"').attr('required', true);\r\n      } else {\r\n        html.find('.taggerControl').hide();\r\n        html.find('[name=\"tags\"').attr('required', false);\r\n      }\r\n\r\n      // Hide/show scope\r\n      if (event.target.value === 'ids') html.find('[name=\"target.scope\"]').closest('.form-group').hide();\r\n      else html.find('[name=\"target.scope\"]').closest('.form-group').show();\r\n\r\n      if (event.target.value === 'search') html.find('[name=\"target.fields\"]').closest('div').show();\r\n      else html.find('[name=\"target.fields\"]').closest('div').hide();\r\n\r\n      this.setPosition({ height: 'auto' });\r\n    });\r\n\r\n    html.find('[name=\"method\"]').on('change', (event) => {\r\n      if (event.target.value === 'toggle') {\r\n        let data = foundry.utils.flattenObject(getData(this.mainObject).toObject());\r\n\r\n        const toggleFields = {};\r\n        Object.keys(this.fields).forEach((k) => (toggleFields[k] = data[k]));\r\n        html.find('[name=\"toggle.fields\"]').val(JSON.stringify(toggleFields, null, 2));\r\n        html.find('.toggleControl').show();\r\n        this.setPosition({ height: 'auto' });\r\n      } else {\r\n        html.find('.toggleControl').hide();\r\n        this.setPosition({ height: 'auto' });\r\n      }\r\n\r\n      if (event.target.value === 'massEdit' || event.target.value === 'delete') {\r\n        html.find('.fields').hide();\r\n        this.setPosition({ height: 'auto' });\r\n      } else {\r\n        html.find('.fields').show();\r\n        this.setPosition({ height: 'auto' });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event\r\n   * @param {Object} formData\r\n   */\r\n  async _updateObject(event, formData) {\r\n    formData = expandObject(formData);\r\n\r\n    // Cleanup form data so that the macro generator only receives necessary information\r\n    formData.fields = JSON.parse(formData.fields);\r\n    if (formData.method !== 'toggle') delete formData.toggle;\r\n    else formData.toggle.fields = JSON.parse(formData.toggle.fields);\r\n\r\n    if (!formData.macro.name) delete formData.macro;\r\n    if (formData.toggle?.macro && !formData.toggle.macro.name) delete formData.toggle.macro;\r\n\r\n    if (formData.target.method !== 'tagger') delete formData.target.tagger;\r\n    if (formData.target.method !== 'search') delete formData.target.fields;\r\n    else formData.target.fields = JSON.parse(formData.target.fields);\r\n\r\n    if (formData.randomize) formData.randomize = JSON.parse(formData.randomize);\r\n    if (formData.toggle?.randomize) formData.toggle.randomize = JSON.parse(formData.toggle.randomize);\r\n    if (formData.addSubtract) formData.addSubtract = JSON.parse(formData.addSubtract);\r\n    if (formData.toggle?.addSubtract) formData.toggle.addSubtract = JSON.parse(formData.toggle.addSubtract);\r\n\r\n    generateMacro(this.docName, this.placeables, formData);\r\n  }\r\n}\r\n\r\nfunction getData(obj) {\r\n  return obj.document ? obj.document : obj;\r\n}\r\n","import { MODULE_ID, SUPPORTED_COLLECTIONS, localFormat } from '../utils.js';\r\nimport { genAction } from './action.js';\r\nimport { genTargets } from './targets.js';\r\n\r\n// Util to stringify a json object\r\nexport function objToString(obj) {\r\n  if (!obj) return null;\r\n  return JSON.stringify(obj, null, 2);\r\n}\r\n\r\nexport async function generateMacro(docName, placeables, options) {\r\n  let command = '';\r\n\r\n  // Dependencies get checked first\r\n  command += genMacroDependencies(options, docName);\r\n  command += genTargets(options, docName, placeables);\r\n  command += genAction(options, docName);\r\n  if (options.macro || options.toggle?.macro) {\r\n    command += genRunMacro(options, docName);\r\n  }\r\n\r\n  if (command) {\r\n    // Create Macro\r\n    const macro = await Macro.create({\r\n      name: options.name,\r\n      type: 'script',\r\n      scope: 'global',\r\n      command: command,\r\n    });\r\n    macro.sheet.render(true);\r\n  }\r\n}\r\n\r\nfunction genRunMacro(options, docName) {\r\n  let command = `\\n\r\n// ===================\r\n// = Macro Execution =\r\n// ===================\r\n\r\nconst advancedMacro = game.modules.get('advanced-macros')?.active;\r\nconst layer = canvas.getLayerByEmbeddedName('${docName}');\r\n`;\r\n  // Run macros if applicable\r\n  if (options.macro) {\r\n    command += `\r\n// Apply macro\r\nconst applyMacro = game.collections.get('Macro').find(m => m.name === '${options.macro.name}')\r\nif (applyMacro && ${options.toggle ? 'toggleOnTargets' : 'targets'}.length) {\r\n  ${\r\n    options.macro.select\r\n      ? `layer.activate();\\n  layer.releaseAll();\\n  ${\r\n          options.toggle ? 'toggleOnTargets' : 'targets'\r\n        }.forEach(t => t.object?.control({ releaseOthers: false }));\\n`\r\n      : ''\r\n  }\r\n  if (advancedMacro) applyMacro.execute(${options.toggle ? 'toggleOnTargets' : 'targets'});\r\n  else applyMacro.execute({token, actor});\r\n  ${options.macro.select ? '\\n  layer.releaseAll();' : ''}\r\n}\r\n`;\r\n  }\r\n  if (options.toggle?.macro) {\r\n    command += `\r\n// Apply macro on toggle off\r\nconst offMacro = game.collections.get('Macro').find(m => m.name === '${options.toggle.macro.name}')\r\nif (offMacro && toggleOffTargets.length) {\r\n  ${\r\n    options.toggle.macro.select\r\n      ? 'layer.activate();\\n  layer.releaseAll();\\n  toggleOffTargets.forEach(t => t.object?.control({ releaseOthers: false }));\\n'\r\n      : ''\r\n  }\r\n  if (advancedMacro) offMacro.execute(toggleOffTargets);\r\n  else offMacro.execute({token, actor});\r\n  ${options.toggle.macro.select ? '\\n  layer.releaseAll();' : ''}\r\n}\r\n`;\r\n  }\r\n  return command;\r\n}\r\n\r\nexport function hasMassEditDependency(options) {\r\n  return (\r\n    options.randomize ||\r\n    options.addSubtract ||\r\n    options.toggle?.randomize ||\r\n    options.toggle?.addSubtract ||\r\n    options.target.method === 'search' ||\r\n    options.method === 'massEdit' ||\r\n    hasSpecialField(options.fields)\r\n  );\r\n}\r\n\r\nexport function hasMassEditUpdateDependency(options) {\r\n  return (\r\n    options.randomize ||\r\n    options.addSubtract ||\r\n    options.toggle?.randomize ||\r\n    options.toggle?.addSubtract ||\r\n    hasSpecialField(options.fields)\r\n  );\r\n}\r\n\r\nfunction genMacroDependencies(options, docName) {\r\n  let dep = '';\r\n\r\n  const depWarning = (module) => {\r\n    return `ui.notifications.warn('${localFormat('macro.dependency-warning', {\r\n      module,\r\n    })}');`;\r\n  };\r\n\r\n  if (options.target.method === 'tagger')\r\n    dep += `\r\nif (!game.modules.get('tagger')?.active) {\r\n  ${depWarning('Tagger')}\r\n  return;\r\n}\r\n\r\n`;\r\n\r\n  if (hasMassEditDependency(options))\r\n    dep += `\r\nconst MassEdit = game.modules.get('${MODULE_ID}');\r\nif(!MassEdit?.active){\r\n  ${depWarning('Mass Edit')}\r\n  return;\r\n}\r\n\r\n`;\r\n\r\n  if (SUPPORTED_COLLECTIONS.includes(docName) && options.target.scope === 'select')\r\n    dep += `\r\nif (!game.modules.get('multiple-document-selection')?.active) {\r\n  ${depWarning('Multiple Document Selection')}\r\n  return;\r\n}\r\n\r\n`;\r\n\r\n  return dep;\r\n}\r\n\r\nexport function hasSpecialField(fields) {\r\n  const specialFields = ['tokenmagic.ddTint', 'tokenmagic.preset', 'massedit.scale', 'massedit.texture.scale'];\r\n  for (const sf of specialFields) {\r\n    if (sf in fields) return true;\r\n  }\r\n  return false;\r\n}\r\n","import { SUPPORTED_PLACEABLES } from '../utils.js';\r\nimport { hasMassEditUpdateDependency, objToString } from './generator.js';\r\n\r\nexport function genAction(options, docName) {\r\n  if (options.method === 'update' || options.method === 'toggle') {\r\n    let command = ``;\r\n\r\n    if (options.method === 'toggle') command += genToggleUtil(options);\r\n\r\n    // Insert 'update' objects\r\n\r\n    command += `\\n// Updates to be applied\r\nconst update = ${objToString(options.fields)};\\n`;\r\n    if (options.method === 'toggle') command += `const update2 = ${objToString(options.toggle.fields)};\\n\\n`;\r\n\r\n    // Insert Mass Edit control objects\r\n    if (hasMassEditUpdateDependency(options)) {\r\n      command += `\\n// Mass Edit control objects\\n`;\r\n      if (options.randomize) command += `const randomizeFields = ${objToString(options.randomize)};\\n`;\r\n      if (options.addSubtract) command += `const addSubtractFields = ${objToString(options.addSubtract)};\\n`;\r\n      if (options.toggle) {\r\n        if (options.toggle.randomize)\r\n          command += `const randomizeFieldsToggleOff = ${objToString(options.toggle?.randomize)};\\n`;\r\n        if (options.toggle.addSubtract)\r\n          command += `const addSubtractFieldsToggleOff = ${objToString(options.toggle?.addSubtract)};\\n`;\r\n      }\r\n    }\r\n\r\n    if (hasMassEditUpdateDependency(options)) {\r\n      return command + genUpdateWithMassEditDep(options, docName);\r\n    } else {\r\n      return command + genUpdate(options, docName);\r\n    }\r\n  } else if (options.method === 'massEdit') {\r\n    return `\\n// Open Mass Edit Form\r\nawait MassEdit.api.showMassEdit(targets, '${docName}');`;\r\n  } else if (options.method === 'delete') {\r\n    return genDelete(options, docName);\r\n  }\r\n}\r\n\r\nfunction genDelete(options, docName) {\r\n  let command = `\\n// Delete ${docName}s`;\r\n  if (SUPPORTED_PLACEABLES.includes(docName)) {\r\n    if (options.target.scope === 'selected' || options.target.scope === 'scene') {\r\n      command += `\\ncanvas.scene.deleteEmbeddedDocuments('${docName}', targets.map(t => t.id));`;\r\n    } else {\r\n      command += `\\nconst toDelete = {};\r\ntargets.forEach( t => {\r\n  const sceneID = t.parent.id;\r\n  if(!toDelete[sceneID]) toDelete[sceneID] = [];\r\n  toDelete[sceneID].push(t.id);\r\n});\r\nObject.keys(toDelete).forEach(sceneID => game.scenes.get(sceneID).deleteEmbeddedDocuments('${docName}', toDelete[sceneID]));\r\n      `;\r\n    }\r\n  } else {\r\n    command += `\\n${docName}.deleteDocuments(targets.map( t => t.id ));`;\r\n  }\r\n  return command;\r\n}\r\n\r\nfunction genUpdate(options, docName) {\r\n  // Update related code\r\n  let command = '';\r\n\r\n  // Macro only execution, ignore update code\r\n  if (foundry.utils.isEmpty(options.fields) && !options.toggle) {\r\n    return '';\r\n  } else if (options.toggle && foundry.utils.isEmpty(options.toggle.fields) && foundry.utils.isEmpty(options.fields)) {\r\n    return `\r\nconst toggleOnTargets = [];\r\nconst toggleOffTargets = [];\r\n\r\ntargets.forEach((t) => {\r\n  if(toggleOn(t, update)) toggleOffTargets.push(t);\r\n  else toggleOnTargets.push(t);\r\n});\r\n    `;\r\n  }\r\n\r\n  // We start generating update code here\r\n  // Are there macros to execute?\r\n  const macroTracking = (options.macro || options.toggle?.macro) && options.toggle;\r\n\r\n  if (macroTracking) {\r\n    command += `\r\nconst toggleOnTargets = [];\r\nconst toggleOffTargets = [];\r\n  `;\r\n  }\r\n\r\n  // Setting up updates\r\n  if (SUPPORTED_PLACEABLES.includes(docName)) {\r\n    command += '\\nconst updates = {};';\r\n    if (options.method === 'toggle') {\r\n      command += `\r\ntargets.forEach((t) => {\r\n  const sceneId = t.parent.id;\r\n  if(!updates[sceneId]) updates[sceneId] = [];\r\n\r\n  let u;\r\n  if(toggleOn(t, update)) {\r\n    u = foundry.utils.deepClone(update2);${macroTracking ? '\\ntoggleOffTargets.push(t);' : ''}\r\n  } else {\r\n    u = foundry.utils.deepClone(update);${macroTracking ? '\\ntoggleOnTargets.push(t);' : ''}\r\n  }\r\n  u._id = t.id;\r\n\r\n  updates[sceneId].push(u);\r\n});\r\n  `;\r\n    } else {\r\n      command += `\r\ntargets.forEach((t) => {\r\n  const sceneId = t.parent.id;\r\n  if(!updates[sceneId]) updates[sceneId] = [];\r\n  \r\n  let u = foundry.utils.deepClone(update);\r\n  u._id = t.id;\r\n    updates[sceneId].push(u);\r\n});\r\n  `;\r\n    }\r\n  } else {\r\n    command += '\\nconst updates = [];';\r\n    if (options.method === 'toggle') {\r\n      command += `\r\ntargets.forEach((t) => {\r\n  let u;\r\n  if(toggleOn(t, update)) {\r\n    u = foundry.utils.deepClone(update2);${macroTracking ? '\\ntoggleOffTargets.push(t);' : ''}\r\n  } else {\r\n    u = foundry.utils.deepClone(update);${macroTracking ? '\\ntoggleOnTargets.push(t);' : ''}\r\n  }\r\n  u._id = t.id;\r\n  updates.push(u);\r\n});\r\n  `;\r\n    } else {\r\n      command += `\r\ntargets.forEach((t) => {\r\n  let u = foundry.utils.deepClone(update);\r\n  u._id = t.id;\r\n  updates.push(u);\r\n});\r\n  `;\r\n    }\r\n  }\r\n\r\n  // Executing updates\r\n  if (SUPPORTED_PLACEABLES.includes(docName)) {\r\n    command += `\r\nfor(const sceneId of Object.keys(updates)) {\r\n  game.scenes.get(sceneId)?.updateEmbeddedDocuments('${docName}', updates[sceneId]);\r\n}\r\n  `;\r\n  } else if (docName === 'PlaylistSound') {\r\n    command += `\r\nfor (let i = 0; i < targets.length; i++) {\r\n  delete updates[i]._id;\r\n  targets[i].document.update(updates[i]);\r\n}\r\n  `;\r\n  } else {\r\n    command += `\\n${docName}.updateDocuments(updates);\\n`;\r\n  }\r\n\r\n  return command;\r\n}\r\n\r\nfunction genUpdateWithMassEditDep(options, docName) {\r\n  let context = [];\r\n  if (options.randomize) context.push('randomizeFields');\r\n  if (options.addSubtract) context.push('addSubtractFields');\r\n  context = context.join(', ');\r\n\r\n  if (options.method === 'toggle') {\r\n    let context2 = [];\r\n    if (options.toggle?.randomize) context2.push('randomizeFields: randomizeFieldsToggleOff');\r\n    if (options.toggle?.addSubtract) context2.push('addSubtractFields: addSubtractFieldsToggleOff');\r\n    context2 = context2.join(', ');\r\n    return `\r\nconst toggleOnTargets = [];\r\nconst toggleOffTargets = [];\r\n  \r\ntargets.forEach((t) => {\r\n  if(toggleOn(t, update)) toggleOffTargets.push(t);\r\n  else toggleOnTargets.push(t);\r\n});\r\n  \r\nawait MassEdit.api.performMassUpdate.call({${context}}, update, toggleOnTargets, '${docName}');\r\nawait MassEdit.api.performMassUpdate.call({${context2}}, update2, toggleOffTargets, '${docName}');\r\n`;\r\n  } else {\r\n    return `await MassEdit.api.performMassUpdate.call({${context}}, update, targets, '${docName}');\\n`;\r\n  }\r\n}\r\n\r\nfunction genToggleUtil(options) {\r\n  let command = `\\n// Toggle; Helper function`;\r\n  if (options.toggle.method === 'field') {\r\n    command += `\r\nconst toggleOn = function (obj, fields) {\r\n  const data = foundry.utils.flattenObject(obj.toObject());\r\n  fields = foundry.utils.flattenObject(fields);\r\n  return foundry.utils.isEmpty(foundry.utils.diffObject(data, fields));\r\n};\r\n  `;\r\n  } else {\r\n    command += `\r\nconst macro = this;\r\nconst toggleOn = function (obj) {\r\n  if (obj.getFlag('world', \\`macro-\\${macro.id}-toggleOn\\`)) {\r\n    obj.unsetFlag('world', \\`macro-\\${macro.id}-toggleOn\\`);\r\n    return true;\r\n  } else {\r\n    obj.setFlag('world', \\`macro-\\${macro.id}-toggleOn\\`, true);\r\n    return false;\r\n  }\r\n};\r\n`;\r\n  }\r\n\r\n  return command;\r\n}\r\n","import { SUPPORTED_PLACEABLES } from '../utils.js';\r\nimport { objToString } from './generator.js';\r\n\r\nexport function genTargets(options, docName, selected) {\r\n  const target = options.target;\r\n  if (target.method === 'ids') {\r\n    return genIDTargets(target, docName, selected);\r\n  } else if (target.method === 'search') {\r\n    return genSearch(target, docName);\r\n  } else if (target.method === 'tagger') {\r\n    return genTaggerTargets(target, docName);\r\n  } else if (target.method === 'all') {\r\n    return genAllTargets(target, docName);\r\n  } else {\r\n    throw new Error('Invalid target method: ' + target.method);\r\n  }\r\n}\r\n\r\nfunction genSearch(target, docName) {\r\n  let fields = objToString(target.fields);\r\n  if (target.scope === 'selected') {\r\n    let command = genSelected(docName);\r\n    command += `\\ntargets = await MassEdit.api.performMassSearch('search', '${docName}' , ${fields}, { scope: 'selected', selected: targets, control: false, pan: false });`;\r\n    return command;\r\n  } else if (target.scope === 'scene') {\r\n    return `const targets = await MassEdit.api.performMassSearch('search', '${docName}' , ${fields}, { scope: 'scene', control: false, pan: false });`;\r\n  } else if (target.scope === 'world') {\r\n    return `const targets = await MassEdit.api.performMassSearch('search', '${docName}' , ${fields}, { scope: 'world', control: false, pan: false });`;\r\n  }\r\n}\r\n\r\n// Construct all selected document retriever\r\n// const selected = [...];\r\nfunction genSelected(docName) {\r\n  let command = '';\r\n\r\n  if (SUPPORTED_PLACEABLES.includes(docName)) {\r\n    return `let targets = canvas.getLayerByEmbeddedName('${docName}').controlled.map(o => o.document);\\n\\n`;\r\n  } else if (game.modules.get('multiple-document-selection')?.active) {\r\n    const mdsClasses = {\r\n      Actor: 'actor',\r\n      Scene: 'scene',\r\n      JournalEntry: 'journalentry',\r\n      Playlist: 'sound',\r\n      Item: 'item',\r\n      RollTable: 'RollTable',\r\n      Cards: 'cards',\r\n    };\r\n\r\n    command += 'let targets = [];\\n';\r\n\r\n    if (docName === 'Playlist') {\r\n      command += `\r\n$(\\`.directory-list .\\${'${mdsClasses[docName]}'}.selected\\`).each(function (_) {\r\n  let d = game.collections.get('Playlist').get(this.dataset.playlistId)?.sounds.get(this.dataset.soundId);\r\n  if (d) targets.push(d);\r\n});\r\n`;\r\n    } else {\r\n      command += `\r\n$(\\`.directory-list .\\${'${mdsClasses[docName]}'}.selected\\`).each(function (_) {\r\n  let d = game.collections.get('${docName}').get(this.dataset.documentId);\r\n  if (d) targets.push(d);\r\n});\r\n  `;\r\n    }\r\n    return command;\r\n  } else {\r\n    throw new Error(`'Selected' is not a supported options for ${docName}s`);\r\n  }\r\n}\r\n\r\nfunction genAllTargets(target, docName) {\r\n  if (target.scope === 'selected') {\r\n    return genSelected(docName);\r\n  } else if (SUPPORTED_PLACEABLES.includes(docName)) {\r\n    if (target.scope === 'scene') {\r\n      return `const targets = canvas.getLayerByEmbeddedName('${docName}').placeables.map(o => o.document);\\n\\n`;\r\n    } else if (target.scope === 'world') {\r\n      return `const targets = [];\r\nArray.from(game.scenes).forEach( scene => {\r\n  Array.from( scene.getEmbeddedCollection('${docName}') ).forEach(embed => targets.push(embed));\r\n});\r\n  `;\r\n    }\r\n  } else {\r\n    return `const targets = Array.from(game.collections.get('${docName}'));`;\r\n  }\r\n}\r\n\r\nfunction genTaggerTargets(target, docName) {\r\n  let command = '';\r\n  const opts = {\r\n    matchAny: target.tagger.match === 'any',\r\n    allScenes: target.scope === 'world',\r\n  };\r\n\r\n  if (target.scope === 'selected') {\r\n    command += genSelected(docName);\r\n    command += `targets = Tagger.getByTag('${target.tagger.tags}', { matchAny: ${\r\n      target.tagger.match === 'any'\r\n    }, objects: targets }).filter(t => t.documentName === '${docName}');\\n\\n`;\r\n  } else if (target.scope === 'scene') {\r\n    command += `const targets = Tagger.getByTag('${target.tagger.tags}', ${objToString(\r\n      opts\r\n    )}).filter(t => t.documentName === '${docName}');\\n\\n`;\r\n  } else if (target.scope === 'world') {\r\n    command += `const targets = [];`;\r\n    command += `Object.values(Tagger.getByTag('${target.tagger.tags}', ${objToString(\r\n      opts\r\n    )})).forEach(item => item.forEach(t => { if(t.documentName === '${docName}') targets.push(t) }));`;\r\n  }\r\n\r\n  return command;\r\n}\r\n\r\nfunction genIDTargets(target, docName, selected) {\r\n  let command = `const ids = [${selected.map((p) => `\"${p.id}\"`).join(',')}];\\n`;\r\n  command += `const targets = [];`;\r\n\r\n  if (SUPPORTED_PLACEABLES.includes(docName)) {\r\n    command += `\r\nids.forEach( id => {\r\n  Array.from(game.scenes).forEach( scene => {\r\n    let embed = scene.getEmbeddedDocument('${docName}', id);\r\n    if(embed) targets.push(embed)\r\n  });\r\n});\r\n`;\r\n  } else {\r\n    command += `\r\nids.forEach(id => { \r\n  const doc = ${docName}.get(id);\r\n  if(doc) targets.push(doc);\r\n});`;\r\n  }\r\n\r\n  return command;\r\n}\r\n","class TrackerDialog extends Dialog {\r\n  constructor(options, { total, cancelCallback, left, top }) {\r\n    super(options, { left, top });\r\n    this.count = 0;\r\n    this.total = total;\r\n    this.cancelCallback = cancelCallback;\r\n  }\r\n\r\n  incrementCount() {\r\n    this.count++;\r\n    this.element?.find('.count').html(this.count);\r\n  }\r\n\r\n  stop() {\r\n    this.close(true);\r\n  }\r\n\r\n  get active() {\r\n    return this._state === Application.RENDER_STATES.RENDERED || this._state === Application.RENDER_STATES.RENDERING;\r\n  }\r\n}\r\n\r\nexport async function trackProgress({ title = 'Progress', cancelCallback, total } = {}) {\r\n  if (!total) return;\r\n\r\n  let content = `\r\n<div>\r\n<div  style=\"display: block; text-align: center; padding: 5px;\"><i class=\"fas fa-circle-notch fa-spin fa-3x\"></i></div>\r\n    <p style=\"text-align: center;\"><span class=\"count\">count</span>/${total}</p>\r\n</div>`;\r\n\r\n  const dialog = new TrackerDialog(\r\n    {\r\n      title,\r\n      content,\r\n      buttons: {\r\n        cancel: {\r\n          icon: '<i class=\"fas fa-stop\"></i>',\r\n          label: 'Stop/Cancel',\r\n          callback: () => {\r\n            cancelCallback?.();\r\n          },\r\n        },\r\n      },\r\n      default: 'cancel',\r\n    },\r\n    { total, cancelCallback, left: 50, top: 50 }\r\n  );\r\n\r\n  await dialog._render(true);\r\n\r\n  return dialog;\r\n}\r\n\r\nexport function countFolderItems(folder) {\r\n  if (folder.presets) {\r\n    return (\r\n      folder.presets.length +\r\n      folder.children.reduce(function (sum, c) {\r\n        return sum + countFolderItems(c);\r\n      }, 0)\r\n    );\r\n  } else {\r\n    return (\r\n      folder.contents.length +\r\n      folder.children.reduce(function (sum, c) {\r\n        return sum + countFolderItems(c.folder);\r\n      }, 0)\r\n    );\r\n  }\r\n}\r\n","/**\r\n * A collection of functions related to sorting objects within a parent container.\r\n */\r\nexport class SortingHelpersFixed {\r\n  /**\r\n   * Given a source object to sort, a target to sort relative to, and an Array of siblings in the container:\r\n   * Determine the updated sort keys for the source object, or all siblings if a reindex is required.\r\n   * Return an Array of updates to perform, it is up to the caller to dispatch these updates.\r\n   * Each update is structured as:\r\n   * {\r\n   *   target: object,\r\n   *   update: {sortKey: sortValue}\r\n   * }\r\n   *\r\n   * @param {object} source       The source object being sorted\r\n   * @param {object} [options]    Options which modify the sort behavior\r\n   * @param {object|null} [options.target]  The target object relative which to sort\r\n   * @param {object[]} [options.siblings]   The Array of siblings which the source should be sorted within\r\n   * @param {string} [options.sortKey=sort] The property name within the source object which defines the sort key\r\n   * @param {boolean} [options.sortBefore]  Explicitly sort before (true) or sort after( false).\r\n   *                                        If undefined the sort order will be automatically determined.\r\n   * @returns {object[]}          An Array of updates for the caller of the helper function to perform\r\n   */\r\n  static performIntegerSort(\r\n    source,\r\n    { target = null, siblings = [], sortKey = 'sort', sortBefore } = {}\r\n  ) {\r\n    // Automatically determine the sorting direction\r\n    if (sortBefore === undefined) {\r\n      sortBefore = (source[sortKey] || 0) > (target?.[sortKey] || 0);\r\n    }\r\n\r\n    // Ensure the siblings are sorted\r\n    siblings = Array.from(siblings);\r\n    siblings.sort((a, b) => a[sortKey] - b[sortKey]);\r\n\r\n    // Determine the index target for the sort\r\n    let defaultIdx = sortBefore ? siblings.length : 0;\r\n    let idx = target ? siblings.findIndex((sib) => sib === target) : defaultIdx;\r\n\r\n    // Determine the indices to sort between\r\n    let min, max;\r\n    if (sortBefore) [min, max] = this._sortBefore(siblings, idx, sortKey);\r\n    else [min, max] = this._sortAfter(siblings, idx, sortKey);\r\n\r\n    // Easiest case - no siblings\r\n    if (siblings.length === 0) {\r\n      return [\r\n        {\r\n          target: source,\r\n          update: { [sortKey]: CONST.SORT_INTEGER_DENSITY },\r\n        },\r\n      ];\r\n    }\r\n\r\n    // No minimum - sort to beginning\r\n    else if (Number.isFinite(max) && min === null) {\r\n      return [\r\n        {\r\n          target: source,\r\n          update: { [sortKey]: max - CONST.SORT_INTEGER_DENSITY },\r\n        },\r\n      ];\r\n    }\r\n\r\n    // No maximum - sort to end\r\n    else if (Number.isFinite(min) && max === null) {\r\n      return [\r\n        {\r\n          target: source,\r\n          update: { [sortKey]: min + CONST.SORT_INTEGER_DENSITY },\r\n        },\r\n      ];\r\n    }\r\n\r\n    // Sort between two\r\n    else if (Number.isFinite(min) && Number.isFinite(max) && Math.abs(max - min) > 1) {\r\n      return [\r\n        {\r\n          target: source,\r\n          update: { [sortKey]: Math.round(0.5 * (min + max)) },\r\n        },\r\n      ];\r\n    }\r\n\r\n    // Reindex all siblings\r\n    else {\r\n      siblings.splice(idx + (sortBefore ? 0 : 1), 0, source);\r\n      return siblings.map((sib, i) => {\r\n        return {\r\n          target: sib,\r\n          update: { [sortKey]: (i + 1) * CONST.SORT_INTEGER_DENSITY },\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  static performIntegerSortMulti(\r\n    sources,\r\n    { target = null, siblings = [], sortKey = 'sort', sortBefore } = {}\r\n  ) {\r\n    let source = sources[0];\r\n    // Automatically determine the sorting direction\r\n    if (sortBefore === undefined) {\r\n      sortBefore = (source[sortKey] || 0) > (target?.[sortKey] || 0);\r\n    }\r\n\r\n    // Ensure the siblings are sorted\r\n    siblings = Array.from(siblings);\r\n    siblings.sort((a, b) => a[sortKey] - b[sortKey]);\r\n\r\n    // Determine the index target for the sort\r\n    let defaultIdx = sortBefore ? siblings.length : 0;\r\n    let idx = target ? siblings.findIndex((sib) => sib === target) : defaultIdx;\r\n\r\n    // Determine the indices to sort between\r\n    let min, max;\r\n    if (sortBefore) [min, max] = this._sortBefore(siblings, idx, sortKey);\r\n    else [min, max] = this._sortAfter(siblings, idx, sortKey);\r\n\r\n    // Easiest case - no siblings\r\n    if (siblings.length === 0) {\r\n      return sources.map((s, i) => {\r\n        return {\r\n          target: s,\r\n          update: { [sortKey]: CONST.SORT_INTEGER_DENSITY * (i + 1) },\r\n        };\r\n      });\r\n    }\r\n\r\n    // No minimum - sort to beginning\r\n    else if (Number.isFinite(max) && min === null) {\r\n      return sources.map((s, i) => {\r\n        return {\r\n          target: s,\r\n          update: { [sortKey]: max - CONST.SORT_INTEGER_DENSITY * (sources.length - i + 1) },\r\n        };\r\n      });\r\n    }\r\n\r\n    // No maximum - sort to end\r\n    else if (Number.isFinite(min) && max === null) {\r\n      return sources.map((s, i) => {\r\n        return {\r\n          target: s,\r\n          update: { [sortKey]: min + CONST.SORT_INTEGER_DENSITY * (i + 1) },\r\n        };\r\n      });\r\n    }\r\n\r\n    // Sort between two\r\n    else if (Number.isFinite(min) && Number.isFinite(max) && Math.abs(max - min) > sources.length) {\r\n      let increment = Math.floor((1 / (sources.length + 1)) * Math.abs(max - min));\r\n      if (increment === 0) increment = 1;\r\n      min = Math.min(max, min);\r\n\r\n      return sources.map((s, i) => {\r\n        return {\r\n          target: s,\r\n          update: { [sortKey]: min + increment * (i + 1) },\r\n        };\r\n      });\r\n    }\r\n\r\n    // Reindex all\r\n    else {\r\n      siblings.splice(idx + (sortBefore ? 0 : 1), 0, ...sources);\r\n      return siblings.map((sib, i) => {\r\n        return {\r\n          target: sib,\r\n          update: { [sortKey]: (i + 1) * CONST.SORT_INTEGER_DENSITY },\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /**\r\n   * Given an ordered Array of siblings and a target position, return the [min,max] indices to sort before the target\r\n   * @private\r\n   */\r\n  static _sortBefore(siblings, idx, sortKey) {\r\n    let max = siblings[idx] ? siblings[idx][sortKey] : null;\r\n    let min = siblings[idx - 1] ? siblings[idx - 1][sortKey] : null;\r\n    return [min, max];\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /**\r\n   * Given an ordered Array of siblings and a target position, return the [min,max] indices to sort after the target\r\n   * @private\r\n   */\r\n  static _sortAfter(siblings, idx, sortKey) {\r\n    let min = siblings[idx] ? siblings[idx][sortKey] : null;\r\n    let max = siblings[idx + 1] ? siblings[idx + 1][sortKey] : null;\r\n    return [min, max];\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n}\r\n","import { CUSTOM_CONTROLS } from '../../data/custom-controls.js';\r\nimport { MODULE_ID, getCommonData, localize } from '../../scripts/utils.js';\r\nimport { WithMassConfig } from '../forms.js';\r\nimport { showMassEdit } from '../multiConfig.js';\r\nimport { constructNav, isColorField } from './navGenerator.js';\r\n\r\nconst WMC = WithMassConfig();\r\nexport class MassEditGenericForm extends WMC {\r\n  constructor(docs, options = {}) {\r\n    const objects = docs.map((a) => (a.toObject ? a.toObject() : a));\r\n    let allData = {};\r\n    for (let i = objects.length; i >= 0; i--) {\r\n      foundry.utils.mergeObject(allData, objects[i]);\r\n    }\r\n\r\n    if (options.noTabs) {\r\n      allData = foundry.utils.flattenObject(allData);\r\n    }\r\n\r\n    let documentName = options.documentName ?? 'NONE';\r\n\r\n    let customControls = foundry.utils.mergeObject(\r\n      CUSTOM_CONTROLS[documentName] ?? {},\r\n      game.settings.get(MODULE_ID, 'customControls')[documentName] ?? {}\r\n    );\r\n    customControls = foundry.utils.mergeObject(customControls, options.customControls?.[documentName] ?? {});\r\n\r\n    const [nav, tabSelectors] = constructNav(allData, documentName, customControls, !options.noTabs);\r\n    const commonData = getCommonData(objects);\r\n\r\n    super(docs[0], docs, {\r\n      tabs: tabSelectors,\r\n      commonData: commonData,\r\n      ...options,\r\n    });\r\n\r\n    this.allData = allData;\r\n    this.nav = nav;\r\n    this.editableLabels = {};\r\n\r\n    this.pinnedFields = game.settings.get(MODULE_ID, 'pinnedFields')[this.documentName] ?? {};\r\n    this.customControls = customControls;\r\n\r\n    if (options.callback) {\r\n      this.callbackOnUpdate = options.callback;\r\n    }\r\n  }\r\n\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      id: 'mass-edit-generic-form',\r\n      classes: ['sheet'],\r\n      template: `modules/${MODULE_ID}/templates/generic/genericForm.html`,\r\n      resizable: true,\r\n      minimizable: false,\r\n      title: `Generic`,\r\n      width: 500,\r\n      height: 'auto',\r\n    });\r\n  }\r\n\r\n  _getHeaderButtons() {\r\n    const buttons = super._getHeaderButtons();\r\n    if (this.options.tokens) {\r\n      buttons.unshift({\r\n        label: '',\r\n        class: 'mass-edit-tokens',\r\n        icon: 'fas fa-user-circle',\r\n        onclick: () => {\r\n          showMassEdit(this.options.tokens, 'Token');\r\n          this.close();\r\n        },\r\n      });\r\n    }\r\n    return buttons;\r\n  }\r\n\r\n  async getData(options) {\r\n    const data = await super.getData(options);\r\n    // Cache partials\r\n    await getTemplate(`modules/${MODULE_ID}/templates/generic/navHeaderPartial.html`, 'me-navHeaderPartial');\r\n    await getTemplate(`modules/${MODULE_ID}/templates/generic/form-group.html`, 'me-form-group');\r\n\r\n    data.nav = this.nav;\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @param {JQuery} html\r\n   */\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n    html.find('.me-pinned').click((event) => {\r\n      const star = $(event.target).parent();\r\n      const control = star.closest('.form-group').find('[name]');\r\n      const name = control.attr('name');\r\n      if (star.hasClass('active')) {\r\n        star.removeClass('active');\r\n        delete this.pinnedFields[name];\r\n      } else {\r\n        star.addClass('active');\r\n        this.pinnedFields[name] = { label: name };\r\n      }\r\n    });\r\n\r\n    html.find('.me-editable-label').on('input', (event) => {\r\n      const name = $(event.target).closest('.form-group').find('[name]').attr('name');\r\n      this.editableLabels[name] = event.target.value;\r\n    });\r\n\r\n    html.find('.color-number').on('change', (event) => {\r\n      if (event.target.dataset?.editNumber) {\r\n        let col = 0;\r\n        try {\r\n          col = Number(Color.fromString(event.target.value));\r\n        } catch (e) {}\r\n\r\n        $(event.target).siblings(`[name=\"${event.target.dataset.editNumber}\"]`).val(col).trigger('input');\r\n      }\r\n    });\r\n\r\n    html.find('.me-editable-label, label').on('contextmenu', (event) => {\r\n      const formGroup = $(event.target).closest('.form-group');\r\n      if (!formGroup.length) return;\r\n      const input = formGroup.find('[name]');\r\n      const name = input.attr('name');\r\n      if (name) {\r\n        if (isColorField(name)) return;\r\n\r\n        const type = input.attr('type');\r\n        if (type === 'range') {\r\n          unsetCustomControl(name, this.documentName);\r\n          return;\r\n        } else if (type === 'number') {\r\n          defineRangeControl(name, input.val(), this.customControls, this.documentName);\r\n        } else if (type === 'text') {\r\n          defineSelectControl(name, input.val(), this.customControls, this.documentName);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (this.options.inputChangeCallback) {\r\n      html.on('change', 'input, select', async (event) => {\r\n        setTimeout(() => this.options.inputChangeCallback(this.getSelectedFields()), 100);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event\r\n   * @param {Object} formData\r\n   */\r\n  async _updateObject(event, formData) {\r\n    super._updateObject(event, formData);\r\n\r\n    // Save pinned field values and labels\r\n    const pinned = game.settings.get(MODULE_ID, 'pinnedFields');\r\n    pinned[this.documentName] = this.pinnedFields;\r\n\r\n    for (const name of Object.keys(this.pinnedFields)) {\r\n      this.pinnedFields[name].value = formData[name];\r\n    }\r\n\r\n    if (!foundry.utils.isEmpty(this.editableLabels)) {\r\n      for (const [name, label] of Object.entries(this.editableLabels)) {\r\n        if (name in this.pinnedFields) {\r\n          this.pinnedFields[name].label = label;\r\n          this.pinnedFields[name].value = formData[name];\r\n        }\r\n      }\r\n      this.editableLabels = {};\r\n    }\r\n\r\n    game.settings.set(MODULE_ID, 'pinnedFields', pinned);\r\n  }\r\n\r\n  async close(options = {}) {\r\n    if (this.callbackOnUpdate) this.callbackOnUpdate(null);\r\n    return super.close(options);\r\n  }\r\n}\r\n\r\nfunction defineRangeControl(name, val, customControls, docName, { min = null, max = null, step = null } = {}) {\r\n  let content = `\r\n<div class=\"form-group slim\">\r\n  <label>Range</label>\r\n  <div class=\"form-fields\">\r\n    <label>${localize('Minimum', false)}</label>\r\n    <input type=\"number\" value=\"${min ?? val}\" name=\"min\" step=\"any\">\r\n    <label>${localize('Maximum', false)}</label>\r\n    <input type=\"number\" value=\"${max ?? val}\" name=\"max\" step=\"any\">\r\n    <label>${localize('generic-form.step-size')}</label>\r\n    <input type=\"number\" value=\"${step ?? 1}\" name=\"step\" step=\"any\">\r\n  </div>\r\n</div>\r\n  `;\r\n  new Dialog({\r\n    title: localize('generic-form.define-range'),\r\n    content: content,\r\n    buttons: {\r\n      save: {\r\n        label: localize('Save', false),\r\n        callback: async (html) => {\r\n          const min = html.find('[name=\"min\"]').val() || val;\r\n          const max = html.find('[name=\"max\"]').val() || val;\r\n          const step = html.find('[name=\"step\"]').val() || 1;\r\n\r\n          setProperty(customControls, name, { range: true, min, max, step });\r\n          const allControls = game.settings.get(MODULE_ID, 'customControls');\r\n          allControls[docName] = customControls;\r\n          game.settings.set(MODULE_ID, 'customControls', allControls);\r\n        },\r\n      },\r\n    },\r\n  }).render(true);\r\n}\r\n\r\nfunction defineSelectControl(name, val, customControls, docName, { options = null } = {}) {\r\n  let content = `\r\n<div class=\"form-group slim\">\r\n  <label>${localize('common.options')}</label>\r\n  <textarea name=\"options\">${options ? options.join('\\n') : val}</textarea>\r\n</div>\r\n  `;\r\n  new Dialog({\r\n    title: localize('generic-form.define-dropdown'),\r\n    content: content,\r\n    buttons: {\r\n      save: {\r\n        label: localize('Save', false),\r\n        callback: async (html) => {\r\n          const options = html.find('[name=\"options\"]').val().trim();\r\n          if (options) {\r\n            setProperty(customControls, name, {\r\n              select: true,\r\n              options: options.split('\\n').filter((o) => o),\r\n            });\r\n            const allControls = game.settings.get(MODULE_ID, 'customControls');\r\n            allControls[docName] = customControls;\r\n            game.settings.set(MODULE_ID, 'customControls', allControls);\r\n          }\r\n        },\r\n      },\r\n    },\r\n  }).render(true);\r\n}\r\n\r\nfunction unsetCustomControl(name, docName) {\r\n  const allControls = game.settings.get(MODULE_ID, 'customControls');\r\n  let docControls = allControls[docName] || {};\r\n  setProperty(docControls, name, null);\r\n  game.settings.set(MODULE_ID, 'customControls', allControls);\r\n}\r\n","export const CUSTOM_CONTROLS = {\n  field: {\n    shieldType: {\n      range: true,\n      min: '0',\n      max: '13',\n      step: '1',\n    },\n    blend: {\n      range: true,\n      min: '0',\n      max: '16',\n      step: '1',\n    },\n    scale: {\n      range: true,\n      min: '0',\n      max: '5',\n      step: '0.01',\n    },\n    radius: {\n      range: true,\n      min: '0',\n      max: '5',\n      step: '0.01',\n    },\n    intensity: {\n      range: true,\n      min: '0',\n      max: '5',\n      step: '0.01',\n    },\n    lightAlpha: {\n      range: true,\n      min: '0',\n      max: '50',\n      step: '0.1',\n    },\n    gridPadding: {\n      range: true,\n      min: '0',\n      max: '5',\n      step: '0.01',\n    },\n    lightSize: {\n      range: true,\n      min: '0',\n      max: '20',\n      step: '0.1',\n    },\n    animated: {\n      time: {\n        speed: {\n          range: true,\n          min: '0',\n          max: '0.05',\n          step: '0.0001',\n        },\n      },\n    },\n  },\n  fire: {\n    fireBlend: {\n      range: true,\n      min: '0',\n      max: '13',\n      step: '1',\n    },\n    blend: {\n      range: true,\n      min: '0',\n      max: '13',\n      step: '1',\n    },\n    animated: {\n      intensity: {\n        animType: {\n          select: true,\n          options: [\n            'syncChaoticOscillation',\n            'syncSinOscillation',\n            'syncCosOscillation',\n            'chaoticOscillation',\n            'halfSinOscillation',\n            'sinOscillation',\n            'halfCosOscillation',\n            'cosOscillation',\n            'syncColorOscillation',\n            'halfColorOscillation',\n            'colorOscillation',\n          ],\n        },\n        val2: {\n          range: true,\n          min: '0',\n          max: '5',\n          step: '0.1',\n        },\n        val1: {\n          range: true,\n          min: '0',\n          max: '5',\n          step: '0.1',\n        },\n        loopDuration: {\n          range: true,\n          min: '0',\n          max: '50000',\n          step: '100',\n        },\n      },\n      amplitude: {\n        animType: {\n          select: true,\n          options: [\n            'syncChaoticOscillation',\n            'syncSinOscillation',\n            'syncCosOscillation',\n            'chaoticOscillation',\n            'halfSinOscillation',\n            'sinOscillation',\n            'halfCosOscillation',\n            'cosOscillation',\n            'syncColorOscillation',\n            'halfColorOscillation',\n            'colorOscillation',\n          ],\n        },\n        loopDuration: {\n          range: true,\n          min: '0',\n          max: '50000',\n          step: '100',\n        },\n        val1: {\n          range: true,\n          min: '0',\n          max: '5',\n          step: '0.1',\n        },\n        val2: {\n          range: true,\n          min: '0',\n          max: '5',\n          step: '0.1',\n        },\n      },\n    },\n    intensity: {\n      range: true,\n      min: '0',\n      max: '100',\n      step: '0.1',\n    },\n  },\n  electric: {\n    blend: {\n      range: true,\n      min: '0',\n      max: '13',\n      step: '1',\n    },\n  },\n  xglow: {\n    auraType: {\n      range: true,\n      min: '0',\n      max: '2',\n      step: '1',\n    },\n    scale: {\n      range: true,\n      min: '0',\n      max: '30',\n      step: '0.1',\n    },\n    auraIntensity: {\n      range: true,\n      min: '0',\n      max: '20',\n      step: '0.1',\n    },\n    subAuraIntensity: {\n      range: true,\n      min: '0',\n      max: '20',\n      step: '0.1',\n    },\n    threshold: {\n      range: true,\n      min: '0',\n      max: '2',\n      step: '0.01',\n    },\n    thickness: {\n      range: true,\n      min: '0',\n      max: '20',\n      step: '0.1',\n    },\n  },\n  glow: {\n    outerStrength: {\n      range: true,\n      min: '0',\n      max: '50',\n      step: '0.1',\n    },\n    innerStrength: {\n      range: true,\n      min: '0',\n      max: '50',\n      step: '0.1',\n    },\n    padding: {\n      range: true,\n      min: '0',\n      max: '100',\n      step: '1',\n    },\n    alpha: {\n      range: true,\n      min: '0',\n      max: '1',\n      step: '0.01',\n    },\n  },\n  zapshadow: {\n    alphaTolerance: {\n      range: true,\n      min: '0',\n      max: '1',\n      step: '0.01',\n    },\n  },\n  sprite: {\n    blendMode: {\n      range: true,\n      min: '0',\n      max: '16',\n      step: '1',\n    },\n    gridPadding: {\n      range: true,\n      min: '0',\n      max: '5',\n      step: '0.1',\n    },\n    scaleX: {\n      range: true,\n      min: '0',\n      max: '3',\n      step: '0.01',\n    },\n    scaleY: {\n      range: true,\n      min: '0',\n      max: '3',\n      step: '0.01',\n    },\n    translationX: {\n      range: true,\n      min: '-1',\n      max: '1',\n      step: '0.001',\n    },\n    translationY: {\n      range: true,\n      min: '-1',\n      max: '1',\n      step: '0.001',\n    },\n    rotation: {\n      range: true,\n      min: '0',\n      max: '360',\n      step: '1',\n    },\n    alpha: {\n      range: true,\n      min: '0',\n      max: '1',\n      step: '0.01',\n    },\n  },\n  xfire: {\n    blend: {\n      range: true,\n      min: '0',\n      max: '16',\n      step: '1',\n    },\n    amplitude: {\n      range: true,\n      min: '0',\n      max: '10',\n      step: '0.01',\n    },\n    dispersion: {\n      range: true,\n      min: '0',\n      max: '20',\n      step: '0.1',\n    },\n    scaleX: {\n      range: true,\n      min: '0',\n      max: '5',\n      step: '0.01',\n    },\n    scaleY: {\n      range: true,\n      min: '0',\n      max: '5',\n      step: '0.01',\n    },\n    animated: {\n      time: {\n        speed: {\n          range: true,\n          min: '-0.0050',\n          max: '0.0050',\n          step: '0.0001',\n        },\n      },\n    },\n  },\n  transform: {\n    gridPadding: {\n      range: true,\n      min: '0',\n      max: '50',\n      step: '0.1',\n    },\n    scaleX: {\n      range: true,\n      min: '0',\n      max: '5',\n      step: '0.1',\n    },\n    scaleY: {\n      range: true,\n      min: '0',\n      max: '5',\n      step: '0.1',\n    },\n  },\n  ascii: {\n    animated: {\n      size: {\n        val1: {\n          range: true,\n          min: '-5',\n          max: '5',\n          step: '0.01',\n        },\n        val2: {\n          range: true,\n          min: '-5',\n          max: '5',\n          step: '0.01',\n        },\n      },\n    },\n    size: {\n      range: true,\n      min: '1',\n      max: '64',\n      step: '1',\n    },\n  },\n  dot: {\n    scale: {\n      range: true,\n      min: '0',\n      max: '10',\n      step: '0.1',\n    },\n    angle: {\n      range: true,\n      min: '0',\n      max: '360',\n      step: '1',\n    },\n  },\n  godray: {\n    blendMode: {\n      range: true,\n      min: '0',\n      max: '20',\n      step: '1',\n    },\n    padding: {\n      range: true,\n      min: '-5',\n      max: '50',\n      step: '0.1',\n    },\n  },\n  rgbSplit: {\n    redX: {\n      range: true,\n      min: '-50',\n      max: '50',\n      step: '1',\n    },\n    redY: {\n      range: true,\n      min: '-50',\n      max: '50',\n      step: '1',\n    },\n    greenX: {\n      range: true,\n      min: '-50',\n      max: '50',\n      step: '1',\n    },\n    greenY: {\n      range: true,\n      min: '-50',\n      max: '50',\n      step: '1',\n    },\n    blueX: {\n      range: true,\n      min: '-50',\n      max: '50',\n      step: '1',\n    },\n    blueY: {\n      range: true,\n      min: '-50',\n      max: '50',\n      step: '1',\n    },\n  },\n  polymorph: {\n    type: {\n      range: true,\n      min: '0',\n      max: '9',\n      step: '1',\n    },\n  },\n  shadow: {\n    blur: {\n      range: true,\n      min: '0',\n      max: '20',\n      step: '1',\n    },\n  },\n  flood: {\n    billowy: {\n      range: true,\n      min: '0',\n      max: '5',\n      step: '0.01',\n    },\n    tintIntensity: {\n      range: true,\n      min: '0.0',\n      max: '1',\n      step: '0.01',\n    },\n    glint: {\n      range: true,\n      min: '0',\n      max: '1',\n      step: '0.01',\n    },\n    scale: {\n      range: true,\n      min: '5',\n      max: '500',\n      step: '1',\n    },\n    animated: {\n      time: {\n        speed: {\n          range: true,\n          min: '0.00001',\n          max: '0.001',\n          step: '0.00001',\n        },\n      },\n    },\n  },\n};\n","// SPDX-License-Identifier: MIT\r\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\r\n\r\n'use strict';\r\n\r\n// A shim for the libWrapper library\r\nexport let libWrapper = undefined;\r\n\r\nexport const VERSIONS = [1, 12, 2];\r\nexport const TGT_SPLIT_RE = new RegExp(\r\n  '([^.[]+|\\\\[(\\'([^\\'\\\\\\\\]|\\\\\\\\.)+?\\'|\"([^\"\\\\\\\\]|\\\\\\\\.)+?\")\\\\])',\r\n  'g'\r\n);\r\nexport const TGT_CLEANUP_RE = new RegExp('(^\\\\[\\'|\\'\\\\]$|^\\\\[\"|\"\\\\]$)', 'g');\r\n\r\n// Main shim code\r\nHooks.once('init', () => {\r\n  // Check if the real module is already loaded - if so, use it\r\n  if (globalThis.libWrapper && !(globalThis.libWrapper.is_fallback ?? true)) {\r\n    libWrapper = globalThis.libWrapper;\r\n    return;\r\n  }\r\n\r\n  // Fallback implementation\r\n  libWrapper = class {\r\n    static get is_fallback() {\r\n      return true;\r\n    }\r\n\r\n    static get WRAPPER() {\r\n      return 'WRAPPER';\r\n    }\r\n    static get MIXED() {\r\n      return 'MIXED';\r\n    }\r\n    static get OVERRIDE() {\r\n      return 'OVERRIDE';\r\n    }\r\n\r\n    static register(package_id, target, fn, type = 'MIXED', { chain = undefined, bind = [] } = {}) {\r\n      const is_setter = target.endsWith('#set');\r\n      target = !is_setter ? target : target.slice(0, -4);\r\n      const split = target\r\n        .match(TGT_SPLIT_RE)\r\n        .map((x) => x.replace(/\\\\(.)/g, '$1').replace(TGT_CLEANUP_RE, ''));\r\n      const root_nm = split.splice(0, 1)[0];\r\n\r\n      let obj, fn_name;\r\n      if (split.length == 0) {\r\n        obj = globalThis;\r\n        fn_name = root_nm;\r\n      } else {\r\n        const _eval = eval;\r\n        fn_name = split.pop();\r\n        obj = split.reduce((x, y) => x[y], globalThis[root_nm] ?? _eval(root_nm));\r\n      }\r\n\r\n      let iObj = obj;\r\n      let descriptor = null;\r\n      while (iObj) {\r\n        descriptor = Object.getOwnPropertyDescriptor(iObj, fn_name);\r\n        if (descriptor) break;\r\n        iObj = Object.getPrototypeOf(iObj);\r\n      }\r\n      if (!descriptor || descriptor?.configurable === false)\r\n        throw new Error(\r\n          `libWrapper Shim: '${target}' does not exist, could not be found, or has a non-configurable descriptor.`\r\n        );\r\n\r\n      let original = null;\r\n      const wrapper =\r\n        chain ?? (type.toUpperCase?.() != 'OVERRIDE' && type != 3)\r\n          ? function (...args) {\r\n              return fn.call(this, original.bind(this), ...bind, ...args);\r\n            }\r\n          : function (...args) {\r\n              return fn.call(this, ...bind, ...args);\r\n            };\r\n      if (!is_setter) {\r\n        if (descriptor.value) {\r\n          original = descriptor.value;\r\n          descriptor.value = wrapper;\r\n        } else {\r\n          original = descriptor.get;\r\n          descriptor.get = wrapper;\r\n        }\r\n      } else {\r\n        if (!descriptor.set) throw new Error(`libWrapper Shim: '${target}' does not have a setter`);\r\n        original = descriptor.set;\r\n        descriptor.set = wrapper;\r\n      }\r\n\r\n      descriptor.configurable = true;\r\n      Object.defineProperty(obj, fn_name, descriptor);\r\n    }\r\n  };\r\n});\r\n","import { MODULE_ID } from './utils.js';\r\n\r\n/**\r\n * Enable 'Select' tool for layers that do not have it. (AmbientLight, AmbientSound, MeasuredTemplate, and Note)\r\n */\r\nexport function enableUniversalSelectTool() {\r\n  if (game.modules.get('select-tool-everywhere')?.active) return;\r\n\r\n  const missingLayers = ['AmbientLight', 'AmbientSound', 'MeasuredTemplate', 'Note'];\r\n\r\n  missingLayers.forEach((layer) => {\r\n    Hooks.on(`refresh${layer}`, _placeableRefresh);\r\n  });\r\n\r\n  Hooks.on('canvasReady', () =>\r\n    missingLayers.forEach((layer) => (canvas.getLayerByEmbeddedName(layer).options.controllableObjects = true))\r\n  );\r\n\r\n  Hooks.on('getSceneControlButtons', (controls) => _getControlButtons(controls));\r\n\r\n  // :: Fixes ::\r\n\r\n  // For notes the refresh hook is called while ControlIcon is still loading its texture (see ControlIcon.draw())\r\n  // Once the texture is loaded border visibility will be reset to false undoing our change in _placeableRefresh\r\n  // Instead delay and set visibility after draw to account for this\r\n  Hooks.on('drawNote', (note) => {\r\n    setTimeout(() => _placeableRefresh(note), 10);\r\n  });\r\n\r\n  // To avoid race conditions between multiple AmbientLight _onDragLeftCancel calls we'll defer the\r\n  // canvas.perception update within 'updateSource' via a 'defer' argument\r\n  libWrapper.register(\r\n    MODULE_ID,\r\n    'AmbientLight.prototype._onDragLeftCancel',\r\n    function (...args) {\r\n      Object.getPrototypeOf(AmbientLight).prototype._onDragLeftCancel.apply(this, args);\r\n      this.updateSource({ defer: true });\r\n    },\r\n    'OVERRIDE'\r\n  );\r\n}\r\n\r\n/**\r\n * Insert select tool if missing\r\n */\r\nfunction _getControlButtons(controls) {\r\n  for (const control of controls) {\r\n    if (['lighting', 'sounds', 'measure'].includes(control.name)) {\r\n      if (!control.tools.find((t) => t.name === 'select')) {\r\n        control.tools.unshift({\r\n          name: 'select',\r\n          title: 'CONTROLS.CommonSelect',\r\n          icon: 'fas fa-expand',\r\n        });\r\n        control.activeTool = 'select';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction _placeableRefresh(placeable) {\r\n  if (placeable.controlled) placeable.controlIcon.border.visible = true;\r\n}\r\n","import CSSEdit, { STYLES } from '../applications/cssEdit.js';\r\nimport { MassEditGenericForm } from '../applications/generic/genericForm.js';\r\nimport {\r\n  getSelected,\r\n  pasteData,\r\n  showMassActorForm,\r\n  showMassEdit,\r\n  showMassSelect,\r\n} from '../applications/multiConfig.js';\r\nimport { PresetCollection } from './presets/collection.js';\r\nimport { MassEditPresets } from './presets/forms.js';\r\nimport {\r\n  MODULE_ID,\r\n  SUPPORTED_COLLECTIONS,\r\n  SUPPORTED_PLACEABLES,\r\n  activeEffectPresetSelect,\r\n  getDocumentName,\r\n  localize,\r\n} from './utils.js';\r\n\r\nexport function registerSettings() {\r\n  // Register Settings\r\n  game.settings.register(MODULE_ID, 'cssStyle', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: String,\r\n    default: 'Solid Background',\r\n  });\r\n\r\n  game.settings.register(MODULE_ID, 'cssCustom', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: String,\r\n    default: STYLES.Default,\r\n  });\r\n\r\n  game.settings.registerMenu(MODULE_ID, 'cssEdit', {\r\n    name: localize('settings.cssEdit.name'),\r\n    hint: localize('settings.cssEdit.hint'),\r\n    label: '',\r\n    scope: 'world',\r\n    icon: 'fas fa-cog',\r\n    type: CSSEdit,\r\n    restricted: true,\r\n  });\r\n\r\n  game.settings.register(MODULE_ID, 'singleDocDefaultConfig', {\r\n    name: localize('settings.singleDocDefaultConfig.name'),\r\n    hint: localize('settings.singleDocDefaultConfig.hint'),\r\n    scope: 'world',\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n  });\r\n\r\n  game.settings.register(MODULE_ID, 'rangeToTextbox', {\r\n    name: localize('settings.rangeToTextbox.name'),\r\n    hint: localize('settings.rangeToTextbox.hint'),\r\n    scope: 'world',\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n  });\r\n\r\n  // Deprecated\r\n  game.settings.register(MODULE_ID, 'presets', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: Object,\r\n    default: {},\r\n  });\r\n\r\n  // ===============\r\n  // Preset Settings\r\n\r\n  game.settings.register(MODULE_ID, 'workingPack', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: String,\r\n    default: 'world.mass-edit-presets-main',\r\n    onChange: (val) => {\r\n      PresetCollection.workingPack = val;\r\n    },\r\n  });\r\n  PresetCollection.workingPack = game.settings.get(MODULE_ID, 'workingPack');\r\n\r\n  game.settings.register(MODULE_ID, 'docPresets', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: Array,\r\n    default: [],\r\n  });\r\n\r\n  // Temp setting needed for migration\r\n  game.settings.register(MODULE_ID, 'presetsMigrated', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: Boolean,\r\n    default: false,\r\n  });\r\n\r\n  // Temp setting needed for migration\r\n  game.settings.register(MODULE_ID, 'presetsCompMigrated', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: Boolean,\r\n    default: false,\r\n  });\r\n\r\n  game.settings.register(MODULE_ID, 'presetDocLock', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: String,\r\n    default: '',\r\n  });\r\n\r\n  game.settings.register(MODULE_ID, 'presetLayerSwitch', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: Boolean,\r\n    default: true,\r\n  });\r\n\r\n  game.settings.register(MODULE_ID, 'presetExtComp', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: Boolean,\r\n    default: true,\r\n  });\r\n\r\n  game.settings.register(MODULE_ID, 'presetScaling', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: Boolean,\r\n    default: true,\r\n  });\r\n\r\n  game.settings.register(MODULE_ID, 'presetSortMode', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: String,\r\n    default: 'manual',\r\n  });\r\n\r\n  // p = preset only\r\n  // pf = preset & folder\r\n  game.settings.register(MODULE_ID, 'presetSearchMode', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: String,\r\n    default: 'pf',\r\n  });\r\n\r\n  game.settings.register(MODULE_ID, 'presetSceneControl', {\r\n    name: 'Scene Controls: Preset Button',\r\n    scope: 'world',\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: () => {\r\n      ui.controls.render();\r\n    },\r\n  });\r\n\r\n  // end of Preset Settings\r\n  // ======================\r\n\r\n  game.settings.register(MODULE_ID, 'pinnedFields', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: Object,\r\n    default: {},\r\n  });\r\n\r\n  game.settings.register(MODULE_ID, 'customControls', {\r\n    scope: 'world',\r\n    config: false,\r\n    type: Object,\r\n    default: {},\r\n  });\r\n\r\n  // Disable until duplicate flag value bug is fixed\r\n  // game.settings.register(MODULE_ID, 'enableFlagsTab', {\r\n  //   name: localize('settings.enableFlagsTab.name'),\r\n  //   hint: localize('settings.enableFlagsTab.hint'),\r\n  //   scope: 'world',\r\n  //   config: true,\r\n  //   type: Boolean,\r\n  //   default: true,\r\n  // });\r\n\r\n  game.settings.register(MODULE_ID, 'enableHistory', {\r\n    name: localize('settings.enableHistory.name'),\r\n    hint: localize('settings.enableHistory.hint'),\r\n    scope: 'world',\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n  });\r\n\r\n  game.settings.register(MODULE_ID, 'historyMaxLength', {\r\n    name: localize('settings.historyMaxLength.name'),\r\n    hint: localize('settings.historyMaxLength.hint'),\r\n    scope: 'world',\r\n    config: true,\r\n    type: Number,\r\n    default: 10,\r\n  });\r\n\r\n  game.settings.register(MODULE_ID, 'autoSnap', {\r\n    name: localize('settings.autoSnap.name'),\r\n    hint: localize('settings.autoSnap.hint'),\r\n    scope: 'world',\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n  });\r\n\r\n  game.settings.register(MODULE_ID, 'panToSearch', {\r\n    name: localize('settings.panToSearch.name'),\r\n    hint: localize('settings.panToSearch.hint'),\r\n    scope: 'world',\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n  });\r\n\r\n  if (game.modules.get('tokenmagic')?.active) {\r\n    game.settings.register(MODULE_ID, 'tmfxFieldsEnable', {\r\n      name: localize('settings.tmfxFieldsEnable.name'),\r\n      hint: localize('settings.tmfxFieldsEnable.hint'),\r\n      scope: 'world',\r\n      config: true,\r\n      type: Boolean,\r\n      default: true,\r\n    });\r\n  }\r\n}\r\n\r\nexport function registerKeybinds() {\r\n  game.keybindings.register(MODULE_ID, 'editKey', {\r\n    name: localize('keybindings.editKey.name'),\r\n    hint: localize('keybindings.editKey.hint'),\r\n    editable: [\r\n      {\r\n        key: 'KeyE',\r\n        modifiers: ['Shift'],\r\n      },\r\n    ],\r\n    onDown: () => {\r\n      const app = Object.values(ui.windows).find((w) => w.meObjects);\r\n      if (app) {\r\n        app.close();\r\n        return;\r\n      }\r\n      showMassEdit();\r\n    },\r\n    restricted: true,\r\n    precedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\r\n  });\r\n\r\n  game.keybindings.register(MODULE_ID, 'copyKey', {\r\n    name: 'Copy',\r\n    hint: '',\r\n    editable: [\r\n      {\r\n        key: 'KeyC',\r\n        modifiers: ['Shift'],\r\n      },\r\n    ],\r\n    onDown: () => {\r\n      // Check if a Mass Config form is open and if so copy data from there\r\n      if (window.getSelection().toString() === '') {\r\n        Object.values(ui.windows)\r\n          .find((app) => app.meObjects != null)\r\n          ?.performMassCopy();\r\n      }\r\n    },\r\n    restricted: true,\r\n    precedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\r\n  });\r\n\r\n  game.keybindings.register(MODULE_ID, 'pasteKey', {\r\n    name: 'Paste',\r\n    hint: '',\r\n    editable: [\r\n      {\r\n        key: 'KeyV',\r\n        modifiers: ['Shift'],\r\n      },\r\n    ],\r\n    onDown: () => {\r\n      pasteData();\r\n    },\r\n    restricted: true,\r\n    precedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\r\n  });\r\n\r\n  game.keybindings.register(MODULE_ID, 'selectKey', {\r\n    name: localize('keybindings.selectKey.name'),\r\n    hint: localize('keybindings.selectKey.hint'),\r\n    editable: [\r\n      {\r\n        key: 'KeyF',\r\n        modifiers: ['Shift'],\r\n      },\r\n    ],\r\n    onDown: () => {\r\n      showMassSelect();\r\n    },\r\n    restricted: true,\r\n    precedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\r\n  });\r\n\r\n  game.keybindings.register(MODULE_ID, 'presetApply', {\r\n    name: localize('keybindings.presetApply.name'),\r\n    hint: localize('keybindings.presetApply.hint'),\r\n    editable: [\r\n      {\r\n        key: 'KeyX',\r\n        modifiers: ['Shift'],\r\n      },\r\n    ],\r\n    onDown: () => {\r\n      const app = Object.values(ui.windows).find((w) => w instanceof MassEditPresets);\r\n      if (app) {\r\n        app.close(true);\r\n        return;\r\n      }\r\n\r\n      // Special logic for populating Active Effect\r\n      const aeConfig = Object.values(ui.windows).find((x) => x instanceof ActiveEffectConfig);\r\n      if (aeConfig) {\r\n        activeEffectPresetSelect(aeConfig);\r\n        return;\r\n      }\r\n\r\n      const docName = canvas.activeLayer.constructor.documentName;\r\n      if (!SUPPORTED_PLACEABLES.includes(docName)) return;\r\n      new MassEditPresets(null, null, docName).render(true);\r\n    },\r\n    restricted: true,\r\n    precedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\r\n  });\r\n\r\n  game.keybindings.register(MODULE_ID, 'presetApplyScene', {\r\n    name: localize('keybindings.presetApplyScene.name'),\r\n    hint: localize('keybindings.presetApplyScene.hint'),\r\n    editable: [],\r\n    onDown: () => {\r\n      const app = Object.values(ui.windows).find((w) => w instanceof MassEditPresets);\r\n      if (app) {\r\n        app.close(true);\r\n        return;\r\n      }\r\n      new MassEditPresets(null, null, 'Scene').render(true);\r\n    },\r\n    restricted: true,\r\n    precedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\r\n  });\r\n\r\n  game.keybindings.register(MODULE_ID, 'genericFormKey', {\r\n    name: localize('keybindings.genericForm.name'),\r\n    hint: localize('keybindings.genericForm.hint'),\r\n    editable: [\r\n      {\r\n        key: 'KeyR',\r\n        modifiers: ['Shift'],\r\n      },\r\n    ],\r\n    onDown: () => {\r\n      let [target, selected] = getSelected(null, false);\r\n      if (!target) return;\r\n      const docName = getDocumentName(target);\r\n      if (![...SUPPORTED_COLLECTIONS, 'Token'].includes(docName)) return;\r\n\r\n      if (docName === 'Token') {\r\n        showMassActorForm(selected, { massEdit: true });\r\n      } else {\r\n        new MassEditGenericForm(selected, { massEdit: true, documentName: docName }).render(true);\r\n      }\r\n    },\r\n    restricted: true,\r\n    precedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\r\n  });\r\n}\r\n"],"names":[],"version":3,"file":"bundle.js.map","sourceRoot":"../../../"}