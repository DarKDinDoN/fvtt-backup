{"version":3,"file":"lancer-initiative.js","sources":["../node_modules/lancer-initiative/dist/modules/lancer-combat.js","../node_modules/lancer-initiative/dist/modules/lancer-combat-tracker.js","../node_modules/lancer-initiative/dist/index.js","../src/li-form.ts","../src/lancer-initiative.ts"],"sourcesContent":["/**\n * Overrides and extends the Combat class to use an activation model instead of\n * the standard ordered list of turns. {@link LancerCombat#activateCombatant}\n * is added to the interface.\n */\nexport class LancerCombat extends Combat {\n    _sortCombatants(a, b) {\n        // Sort by Players then Neutrals then Hostiles\n        const dc = b.disposition - a.disposition;\n        if (dc !== 0)\n            return dc;\n        return super._sortCombatants(a, b);\n    }\n    async _preCreate(...[data, options, user]) {\n        // @ts-expect-error v10\n        this.updateSource({ turn: null });\n        return super._preCreate(data, options, user);\n    }\n    /**\n     * Set all combatants to their max activations\n     */\n    async resetActivations() {\n        const module = CONFIG.LancerInitiative.module;\n        const skipDefeated = \"skipDefeated\" in this.settings && this.settings.skipDefeated;\n        const updates = this.combatants.map(c => {\n            return {\n                _id: c.id,\n                [`flags.${module}.activations.value`]: skipDefeated && c.isDefeated\n                    ? 0\n                    : c.activations.max ?? 0,\n            };\n        });\n        return (this.updateEmbeddedDocuments(\"Combatant\", updates));\n    }\n    async startCombat() {\n        await this.resetActivations();\n        return this.update({ round: 1, turn: null });\n    }\n    async nextRound() {\n        await this.resetActivations();\n        let advanceTime = Math.max(this.turns.length - (this.turn || 0), 0) * CONFIG.time.turnTime;\n        advanceTime += CONFIG.time.roundTime;\n        // @ts-ignore jtfc advanceTime is fucking used in foundry.js\n        return this.update({ round: this.round + 1, turn: null }, { advanceTime });\n    }\n    /**\n     * Ends the current turn without starting a new one\n     */\n    async nextTurn() {\n        return this.update({ turn: null });\n    }\n    async previousRound() {\n        await this.resetActivations();\n        const round = Math.max(this.round - 1, 0);\n        let advanceTime = 0;\n        if (round > 0)\n            advanceTime -= CONFIG.time.roundTime;\n        // @ts-ignore jtfc advanceTime is fucking used in foundry.js\n        return this.update({ round, turn: null }, { advanceTime });\n    }\n    async resetAll() {\n        await this.resetActivations();\n        // @ts-expect-error v10\n        this.combatants.forEach(c => c.updateSource({ initiative: null }));\n        return this.update({ turn: null, combatants: this.combatants.toObject() }, { diff: false });\n    }\n    /**\n     * Sets the active turn to the combatant passed by id or calls\n     * {@link LancerCombat#requestActivation()} if the user does not have\n     * permission to modify the combat\n     */\n    async activateCombatant(id, override = false) {\n        if (!game.user?.isGM && !override)\n            return this.requestActivation(id);\n        const combatant = (this.getEmbeddedDocument(\"Combatant\", id));\n        if (!combatant?.activations.value)\n            return this;\n        await combatant?.modifyCurrentActivations(-1);\n        const turn = this.turns.findIndex(t => t.id === id);\n        return this.update({ turn });\n    }\n    /**\n     * Sets the active turn back to 0 (no active unit) if the passed id\n     * corresponds to the current turn and the user has ownership of the\n     * combatant.\n     */\n    async deactivateCombatant(id) {\n        const turn = this.turns.findIndex(t => t.id === id);\n        if (turn !== this.turn)\n            return this;\n        if (!this.turns[turn].testUserPermission(game.user, \"OWNER\") &&\n            !game.user?.isGM)\n            return this;\n        return this.nextTurn();\n    }\n    /**\n     * Calls any Hooks registered for \"LancerCombatRequestActivate\".\n     */\n    async requestActivation(id) {\n        Hooks.callAll(\"LancerCombatRequestActivate\", this, id);\n        return this;\n    }\n}\nexport class LancerCombatant extends Combatant {\n    /**\n     * This just fixes a bug in foundry 0.8.x that prevents Combatants with no\n     * associated token or actor from being modified, even by the GM\n     */\n    testUserPermission(...[user, permission, options]) {\n        return (this.actor?.testUserPermission(user, permission, options) ?? user.isGM);\n    }\n    prepareBaseData() {\n        super.prepareBaseData();\n        const module = CONFIG.LancerInitiative.module;\n        if (\n        // @ts-expect-error\n        this.flags?.[module]?.activations?.max === undefined &&\n            canvas?.ready) {\n            let activations;\n            switch (typeof CONFIG.LancerInitiative.activations) {\n                case \"string\":\n                    activations =\n                        foundry.utils.getProperty(this.actor?.getRollData() ?? {}, CONFIG.LancerInitiative.activations) ?? 1;\n                    break;\n                case \"number\":\n                    activations = CONFIG.LancerInitiative.activations;\n                    break;\n                default:\n                    activations = 1;\n                    break;\n            }\n            // @ts-expect-error v10\n            this.updateSource({\n                [`flags.${module}.activations`]: {\n                    max: activations,\n                    value: (this.parent?.round ?? 0) > 0 ? activations : 0,\n                },\n            });\n        }\n    }\n    /**\n     * The current activation data for the combatant.\n     */\n    get activations() {\n        const module = CONFIG.LancerInitiative.module;\n        return this.getFlag(module, \"activations\") ?? {};\n    }\n    /**\n     * The disposition for this combatant. In order, manually specified for this\n     * combatant, token dispostion, token disposition for the associated actor,\n     * -2.\n     */\n    get disposition() {\n        const module = CONFIG.LancerInitiative.module;\n        return (this.getFlag(module, \"disposition\") ??\n            (this.actor?.hasPlayerOwner ?? false\n                ? 2\n                : // @ts-expect-error v10\n                    this.token?.disposition ??\n                        // @ts-expect-error v10\n                        this.actor?.prototypeToken.disposition ??\n                        -2));\n    }\n    /**\n     * Adjusts the number of activations that a combatant can take\n     * @param num - The number of maximum activations to add (can be negative)\n     */\n    async addActivations(num) {\n        const module = CONFIG.LancerInitiative.module;\n        if (num === 0)\n            return this;\n        return this.update({\n            [`flags.${module}.activations`]: {\n                max: Math.max((this.activations.max ?? 1) + num, 1),\n                value: Math.max((this.activations.value ?? 0) + num, 0),\n            },\n        });\n    }\n    /**\n     * Adjusts the number of current activations that a combatant has\n     * @param num - The number of current activations to add (can be negative)\n     */\n    async modifyCurrentActivations(num) {\n        const module = CONFIG.LancerInitiative.module;\n        if (num === 0)\n            return this;\n        return this.update({\n            [`flags.${module}.activations`]: {\n                value: Math.clamped((this.activations?.value ?? 0) + num, 0, this.activations?.max ?? 1),\n            },\n        });\n    }\n}\n//# sourceMappingURL=lancer-combat.js.map","/**\n * Overrides the display of the combat and turn order tab to add activation\n * buttons and either move or remove the initiative button\n */\nexport class LancerCombatTracker extends CombatTracker {\n    static get defaultOptions() {\n        return {\n            ...super.defaultOptions,\n            template: CONFIG.LancerInitiative.templatePath,\n        };\n    }\n    scrollToTurn() {\n        if (this.viewed?.turn == null || !(CONFIG.LancerInitiative?.sort ?? true))\n            return super.scrollToTurn();\n        this.element.find(\"ol#combat-tracker\")[0].scrollTop = 0;\n    }\n    /**\n     * Intercepts the data being sent to the combat tracker window and\n     * optionally sorts the the turn data that gets displayed. This allows the\n     * units that have already gone to be moved to the bottom without the risk of\n     * updateCombat events being eaten.\n     */\n    async getData(options) {\n        const config = CONFIG.LancerInitiative;\n        const appearance = getTrackerAppearance();\n        const data = (await super.getData(options));\n        const sort = config.sort ?? true;\n        const disp = {\n            [-2]: \"\",\n            [-1]: \"enemy\",\n            [0]: \"neutral\",\n            [1]: \"friendly\",\n            [2]: \"player\",\n        };\n        data.turns = data.turns.map(t => {\n            const combatant = (this.viewed.getEmbeddedDocument(\"Combatant\", t.id));\n            return {\n                ...t,\n                css: t.css + \" \" + disp[combatant?.disposition ?? -2],\n                pending: combatant?.activations.value ?? 0,\n                finished: (combatant?.activations.max ?? 1) -\n                    (combatant?.activations.value ?? 0),\n            };\n        });\n        if (sort) {\n            data.turns.sort(function (a, b) {\n                const aa = a.css.indexOf(\"active\") !== -1 ? 1 : 0;\n                const ba = b.css.indexOf(\"active\") !== -1 ? 1 : 0;\n                if (ba - aa !== 0)\n                    return ba - aa;\n                const ad = a.pending === 0 ? 1 : 0;\n                const bd = b.pending === 0 ? 1 : 0;\n                return ad - bd;\n            });\n        }\n        data.icon_class = appearance.icon;\n        data.enable_initiative = CONFIG.LancerInitiative.enable_initiative ?? false;\n        return data;\n    }\n    activateListeners(html) {\n        super.activateListeners(html);\n        html\n            .find(\".lancer-combat-control\")\n            .on(\"click\", this._onActivateCombatant.bind(this));\n    }\n    /**\n     * Activate the selected combatant\n     */\n    async _onActivateCombatant(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        const btn = event.currentTarget;\n        const id = btn.closest(\".combatant\")?.dataset.combatantId;\n        if (!id)\n            return;\n        switch (btn.dataset.control) {\n            case \"deactivateCombatant\":\n                await this.viewed.deactivateCombatant(id);\n                break;\n            case \"activateCombatant\":\n                await this.viewed.activateCombatant(id);\n                break;\n        }\n    }\n    async _onAddActivation(li) {\n        const combatant = (this.viewed.getEmbeddedDocument(\"Combatant\", li.data(\"combatant-id\")));\n        await combatant.addActivations(1);\n    }\n    async _onRemoveActivation(li) {\n        const combatant = (this.viewed.getEmbeddedDocument(\"Combatant\", li.data(\"combatant-id\")));\n        await combatant.addActivations(-1);\n    }\n    async _onUndoActivation(li) {\n        const combatant = (this.viewed.getEmbeddedDocument(\"Combatant\", li.data(\"combatant-id\")));\n        await combatant.modifyCurrentActivations(1);\n    }\n    _getEntryContextOptions() {\n        const m = [\n            {\n                name: \"LANCERINITIATIVE.AddActivation\",\n                icon: '<i class=\"fas fa-plus\"></i>',\n                callback: this._onAddActivation.bind(this),\n            },\n            {\n                name: \"LANCERINITIATIVE.RemoveActivation\",\n                icon: '<i class=\"fas fa-minus\"></i>',\n                callback: this._onRemoveActivation.bind(this),\n            },\n            {\n                name: \"LANCERINITIATIVE.UndoActivation\",\n                icon: '<i class=\"fas fa-undo\"></i>',\n                callback: this._onUndoActivation.bind(this),\n            },\n        ];\n        m.push(...super\n            ._getEntryContextOptions()\n            .filter(i => i.name !== \"COMBAT.CombatantReroll\"));\n        return m;\n    }\n}\n/**\n * Get the current appearance data from settings\n */\nexport function getTrackerAppearance() {\n    const config = CONFIG.LancerInitiative;\n    if (!config.def_appearance)\n        throw new Error(\"No default appearance specified in CONFIG.LancerInitiative\");\n    return {\n        ...config.def_appearance,\n        ...game.settings.get(config.module, \"combat-tracker-appearance\"),\n    };\n}\n/**\n * Register the helper we use to print the icon the correnct number of times\n */\nHandlebars.registerHelper(\"lancerinitiative-repeat\", function (n, block) {\n    let accum = \"\";\n    for (let i = 0; i < n; i++)\n        accum += block.fn(i);\n    return accum;\n});\n//# sourceMappingURL=lancer-combat-tracker.js.map","export * from \"./modules/lancer-combat\";\nexport * from \"./modules/lancer-combat-tracker\";\nexport function setAppearance(val) {\n    const defaults = CONFIG.LancerInitiative.def_appearance;\n    document.documentElement.style.setProperty(\"--lancer-initiative-icon-size\", `${val?.icon_size ?? defaults.icon_size}rem`);\n    document.documentElement.style.setProperty(\"--lancer-initiative-player-color\", val?.player_color ?? defaults.player_color);\n    document.documentElement.style.setProperty(\"--lancer-initiative-friendly-color\", val?.friendly_color ?? defaults.friendly_color);\n    document.documentElement.style.setProperty(\"--lancer-initiative-neutral-color\", val?.neutral_color ?? defaults.neutral_color);\n    document.documentElement.style.setProperty(\"--lancer-initiative-enemy-color\", val?.enemy_color ?? defaults.enemy_color);\n    document.documentElement.style.setProperty(\"--lancer-initiative-done-color\", val?.done_color ?? defaults.done_color);\n    game.combats?.render();\n}\n//# sourceMappingURL=index.js.map","import { getTrackerAppearance } from \"lancer-initiative\";\ntype Appearance = NonNullable<typeof CONFIG.LancerInitiative.def_appearance>;\n\n/**\n * Settings form for customizing the icon appearance of the icon used in the\n * tracker\n */\nexport class LancerInitiativeConfigForm extends FormApplication<\n  FormApplicationOptions,\n  Appearance,\n  undefined\n> {\n  static override get defaultOptions(): FormApplicationOptions {\n    return {\n      ...super.defaultOptions,\n      title: \"Lancer Intiative\",\n      id: \"lancer-initiative-settings\",\n      template: \"modules/lancer-initiative/templates/lancer-initiative-settings.html\",\n      width: 350,\n    };\n  }\n\n  override getData(): Appearance {\n    return getTrackerAppearance();\n  }\n\n  override activateListeners(html: JQuery<HTMLElement>): void {\n    super.activateListeners(html);\n\n    //update the preview icon\n    html.find('input[name=\"icon\"]').on(\"change\", e => {\n      html\n        .find(\"a.preview\")\n        .removeClass()\n        .addClass($(e.target).val() + \" preview\");\n    });\n\n    // Update the preview icon size\n    html.find('input[name=\"icon_size\"]').on(\"change\", e => {\n      html.find(\"a.preview\").css(\"font-size\", $(e.target).val() + \"rem\");\n    });\n\n    // Set the preview icon color to the last hovered color picker\n    html.find('input[type=\"color\"]').on(\"mouseenter mouseleave\", e => {\n      html.find(\"a.preview\").css(\"color\", $(e.target).val() as string);\n      if ($(e.target).attr(\"name\") === \"done_selector\") return;\n      html.find(\"li.combatant\").css(\"border-color\", $(e.target).val() as string);\n    });\n\n    html.find('button[name=\"reset\"]').on(\"click\", this.resetSettings.bind(this));\n  }\n\n  override async _updateObject(_: Event, data: Record<string, unknown>): Promise<void> {\n    const config = CONFIG.LancerInitiative;\n    game.settings.set(\n      config.module,\n      \"combat-tracker-appearance\",\n      foundry.utils.diffObject(config.def_appearance!, data, { inner: true })\n    );\n  }\n\n  /**\n   * Sets all settings handled by the form to undefined in order to revert to\n   * their default values.\n   */\n  async resetSettings(): Promise<unknown> {\n    const config = CONFIG.LancerInitiative;\n    await game.settings.set(config.module, \"combat-tracker-appearance\", {});\n    return this.render();\n  }\n}\n","import {\n  LancerCombat,\n  LancerCombatTracker,\n  LancerCombatant,\n  getTrackerAppearance,\n  setAppearance,\n} from \"lancer-initiative\";\nimport { LancerInitiativeConfigForm } from \"./li-form\";\n\nconst module = \"lancer-initiative\";\nconst templatePath = \"modules/lancer-initiative/templates/lancer-combat-tracker.hbs\";\n\nfunction registerSettings(): void {\n  console.log(`${module} | Initializing Lancer Initiative Module`);\n  if (!!CONFIG.LancerInitiative?.module) {\n    Hooks.once(\"ready\", () =>\n      ui.notifications!.warn(\n        \"The system you are using implements lancer initiative natively. You can disable the module\",\n        { permanent: true }\n      )\n    );\n    throw new Error(\n      `${module} | Lancer Intitiative already initiatilized, does your system implement it?`\n    );\n  }\n  CONFIG.LancerInitiative = {\n    module,\n    templatePath,\n    def_appearance: {\n      icon: \"fas fa-chevron-circle-right\",\n      icon_size: 1.5,\n      player_color: \"#44abe0\",\n      friendly_color: \"#44abe0\",\n      neutral_color: \"#146464\",\n      enemy_color: \"#d98f30\",\n      done_color: \"#444444\",\n    },\n  };\n  Object.defineProperty(CONFIG.LancerInitiative, \"module\", { writable: false });\n\n  // const old_combat = CONFIG.Combat.documentClass;\n\n  // Override classes\n  CONFIG.Combat.documentClass = LancerCombat;\n  CONFIG.Combatant.documentClass = LancerCombatant;\n  CONFIG.ui.combat = LancerCombatTracker;\n\n  switch (game.system.id) {\n    case \"starwarsffg\":\n      // import(\"./starwarsffg\").then(m => m.setup(old_combat));\n      break;\n    default:\n  }\n\n  game.settings.registerMenu(module, \"lancerInitiative\", {\n    name: \"LANCERINITIATIVE.IconSettingsMenu\",\n    label: \"LANCERINITIATIVE.IconSettingsMenu\",\n    type: LancerInitiativeConfigForm,\n    restricted: true,\n  });\n  game.settings.register(module, \"combat-tracker-appearance\", {\n    scope: \"world\",\n    config: false,\n    type: Object,\n    onChange: setAppearance,\n    default: {},\n  });\n  // Allows combat tracker sorting to be toggled. Optional for downstreams.\n  game.settings.register(module, \"combat-tracker-sort\", {\n    name: \"LANCERINITIATIVE.SortTracker\",\n    hint: \"LANCERINITIATIVE.SortTrackerDesc\",\n    scope: \"world\",\n    config: true,\n    type: Boolean,\n    onChange: v => {\n      CONFIG.LancerInitiative.sort = v;\n      game.combats?.render();\n    },\n    default: true,\n  });\n  CONFIG.LancerInitiative.sort = game.settings.get(module, \"combat-tracker-sort\");\n  // Allows initiative rolling to be toggled. Optional for downstreams.\n  game.settings.register(module, \"combat-tracker-enable-initiative\", {\n    name: \"LANCERINITIATIVE.EnableInitiative\",\n    hint: \"LANCERINITIATIVE.EnableInitiativeDesc\",\n    scope: \"world\",\n    config: !!CONFIG.Combat.initiative.formula,\n    type: Boolean,\n    onChange: v => {\n      CONFIG.LancerInitiative.enable_initiative = v;\n      game.combats?.render();\n    },\n    default: false,\n  });\n  CONFIG.LancerInitiative.enable_initiative = game.settings.get(\n    module,\n    \"combat-tracker-enable-initiative\"\n  );\n\n  // Call hooks to signal other modules of the initialization\n  Hooks.callAll(\"LancerInitiativeInit\");\n\n  // Set the css vars\n  setAppearance(getTrackerAppearance());\n}\n\nHooks.once(\"init\", registerSettings);\n"],"names":["LancerCombat","Combat","_sortCombatants","a","b","dc","disposition","super","async","data","options","user","this","updateSource","turn","_preCreate","module","CONFIG","LancerInitiative","skipDefeated","settings","updates","combatants","map","c","_id","id","isDefeated","activations","max","updateEmbeddedDocuments","resetActivations","update","round","advanceTime","Math","turns","length","time","turnTime","roundTime","forEach","initiative","toObject","diff","override","game","isGM","requestActivation","combatant","getEmbeddedDocument","value","modifyCurrentActivations","findIndex","t","testUserPermission","nextTurn","Hooks","callAll","LancerCombatant","Combatant","permission","actor","prepareBaseData","undefined","flags","canvas","ready","foundry","utils","getProperty","getRollData","parent","getFlag","hasPlayerOwner","token","prototypeToken","num","clamped","LancerCombatTracker","CombatTracker","defaultOptions","template","templatePath","scrollToTurn","viewed","sort","element","find","scrollTop","config","appearance","getTrackerAppearance","getData","disp","css","pending","finished","aa","indexOf","ba","icon_class","icon","enable_initiative","activateListeners","html","on","_onActivateCombatant","bind","event","preventDefault","stopPropagation","btn","currentTarget","closest","dataset","combatantId","control","deactivateCombatant","activateCombatant","li","addActivations","_getEntryContextOptions","m","name","callback","_onAddActivation","_onRemoveActivation","_onUndoActivation","push","filter","i","def_appearance","Error","get","setAppearance","val","defaults","document","documentElement","style","setProperty","icon_size","player_color","friendly_color","neutral_color","enemy_color","done_color","combats","render","Handlebars","registerHelper","n","block","accum","fn","LancerInitiativeConfigForm","FormApplication","title","width","e","removeClass","addClass","$","target","attr","resetSettings","_","set","diffObject","inner","once","registerSettings","console","log","ui","notifications","warn","permanent","Object","defineProperty","writable","documentClass","combat","system","registerMenu","label","type","restricted","register","scope","onChange","default","hint","Boolean","v","formula"],"mappings":"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"}