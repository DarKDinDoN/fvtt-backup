{"user":"Vp8tLYDwBNfFdmoV","speaker":{"scene":"t6lanhEggzoHQFzh","token":"CIHbtfn21r8xOb1F","actor":"U3QqTmYY6siYs3wD","alias":"Adam Walsh"},"content":"function tokenUpdate(data) {<br />    canvas.tokens.controlled.map(token =&gt; token.document.update({ light: data }));<br />}<br /><br />const isGM = game.user.isGM;<br /><br />let color = \"#ffffff\";<br />let alpha = 1.0;<br />let tokens = canvas.tokens.controlled;<br />if (tokens.length === 1) {<br />    color = tokens[0].data.light.color ?? color;<br />    alpha = tokens[0].data.light.alpha ?? alpha;<br />}<br /><br />const torchAnimation = {type: \"torch\", speed: 1, intensity: 1};<br />const energyShield = {type: \"energy\", speed: 1, intensity: 1};<br />const lights = {<br />    none: {<br />        label: \"None\",<br />        data: {dim: null, bright: null, angle: 360}<br />    },<br />    torch: {<br />        label: \"Torch\",<br />        data: {dim: 40, bright: 20, angle: 360, animation: torchAnimation}<br />    },<br />    light: {<br />        label: \"Light cantrip\",<br />        data: {dim: 40, bright: 20, angle: 360, animation: {type: \"none\"}}<br />    },<br />    lamp: {<br />        label: \"Lamp\",<br />        data: {dim: 45, bright: 15, angle: 360, animation: torchAnimation}<br />    },<br />    shield: {<br />        label: \"Shield\",<br />        data: {dim: 0.5, bright: 0, angle: 360, animation: energyShield}<br />    },<br />    bullseye: {<br />        label: \"Bullseye Lantern\",<br />        data: {dim: 120, bright: 60, angle: 45, animation: torchAnimation}<br />    }<br />};<br /><br />function getLights() {<br />    let lightButtons = {};<br />    Object.entries(lights).forEach(([key, light]) =&gt; {<br />        lightButtons[key] = {<br />            label: light.label,<br />            callback: (html) =&gt; {<br />                const newColor = html.find(\"#color\").val();<br />                const newAlpha = Number(html.find(\"#alpha\").val());<br />                var data = light.data;<br />                tokenUpdate(Object.assign(data, {color: newColor, alpha: newAlpha}));<br />            }<br />        }<br />    });<br /><br />    lightButtons = Object.assign(lightButtons, {<br />        close: {<br />            icon: \"<i class=\"fas fa-tick\"></i>\",<br />            label: `Close`<br />        }<br />    });<br /><br />    return lightButtons;<br />}<br /><br />new Dialog({<br />    title: `Token Light Picker`,<br />    content: `<br />        <form><br />            <div style=\"display:flex;align-content:center\"><br />            <label for=\"color\" style=\"line-height:25px\">Color:</label><br />            <input type=\"color\" value=\"${color}\" id=\"color\" style=\"margin-left:10px\" /><br />            ${isGM ? '<label for=\"alpha\" style=\"line-height:25px\">Intensity:</label>' : ''}<br />            <input type=\"${isGM ? 'range' : 'hidden'}\" value=\"${alpha}\" id=\"alpha\" style=\"margin-left:10px\" min=\"0.0\" max=\"1.0\" step=\"0.05\" /><br />            </div><br />        </form>`,<br />    buttons: getLights(),<br />    default: \"close\",<br />    close: () =&gt; {}<br />}).render(true);","type":2,"timestamp":1673747509576,"flavor":"","whisper":[],"blind":false,"rolls":[],"sound":null,"emote":false,"flags":{},"_id":"l3TZiX0P0in1S2Yp"}
{"$$deleted":true,"_id":"l3TZiX0P0in1S2Yp"}
